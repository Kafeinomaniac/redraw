{
  // The plugin looks for a .jsbeautifyrc file in the same directory as the
  // source file you're prettifying (or any directory above if it doesn't exist,
  // or in your home folder if everything else fails) and uses those options
  // along the default ones.

  // Details: https://github.com/victorporof/Sublime-HTMLPrettify#using-your-own-jsbeautifyrc-options
  // Documentation: https://github.com/einars/js-beautify/
  "html": {
    "allowed_file_extensions": ["htm", "html", "xhtml", "shtml", "xml", "svg"],
    "brace_style": "collapse", // [collapse|expand|end-expand|none] Put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are
    "end_with_newline": false, // End output with newline
    "indent_char": " ", // Indentation character
    "indent_handlebars": false, // e.g. {{#foo}}, {{/foo}}
    "indent_inner_html": false, // Indent <head> and <body> sections
    "indent_scripts": "keep", // [keep|separate|normal]
    "indent_size": 4, // Indentation size
    "max_preserve_newlines": 0, // Maximum number of line breaks to be preserved in one chunk (0 disables)
    "preserve_newlines": true, // Whether existing line breaks before elements should be preserved (only works before elements, not inside tags or for text)
    "unformatted": ["a", "span", "img", "code", "pre", "sub", "sup", "em", "strong", "b", "i", "u", "strike", "big", "small", "pre", "h1", "h2", "h3", "h4", "h5", "h6"], // List of tags that should not be reformatted
    "wrap_line_length": 0 // Lines should wrap at next opportunity after this number of characters (0 disables)
  },
  "css": {
    "allowed_file_extensions": ["css", "scss", "sass", "less"],
    "end_with_newline": false, // End output with newline
    "indent_char": " ", // Indentation character
    "indent_size": 4, // Indentation size
    "newline_between_rules": true, // Add a new line after every css rule
    "selector_separator": " ",
    "selector_separator_newline": true // Separate selectors with newline or not (e.g. "a,\nbr" or "a, br")
  },
  "js": {
    // Collapse curly brackets
    "brace_style": "collapse",

    // Break chained method calls across subsequent lines
    "break_chained_methods": true,

    // End output with newline
    "end_with_newline": true,

    // Evaluate code
    "eval_code": false,

    // Indentation character
    "indent_char": " ",

    // Initial indentation level
    "indent_level": 0,

    // Indentation character size
    "indent_size": 2,

    // Indent with tabs, overrides 'indent_size' and 'indent_char'
    "indent_with_tabs": false,

    // Enable jslint-stricter mode
    "jslint_happy": false,

    // Preserve array indentation
    "keep_array_indentation": false,

    // Preserve function indentation
    "keep_function_indentation": false,

    // Number of line-breaks to be preserved in one chunk
    "max_preserve_newlines": 2,

    // Preserve newlines
    "preserve_newlines": true,

    // Add a space before an anonymous function's parentheses, i.e. function ()
    "space_after_anon_function": true,

    // Add a space before the conditional statement i.e. 'if (true)'
    "space_before_conditional": true,

    // Add padding spaces within empty parentheses i.e. 'f( )'
    "space_in_empty_paren": false,

    // Add padding spaces within parentheses i.e. 'f( a, b )'
    "space_in_paren": false,

    // Decode printable characters encoded in xNN notation
    "unescape_strings": false,

    // Wrap lines at next opportunity after N characters
    "wrap_line_length": 0
  }
}
