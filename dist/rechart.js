/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	__webpack_require__(659);
	module.exports = __webpack_require__(695);


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _browserApiJs = __webpack_require__(2);

	var _browserApiJs2 = _interopRequireDefault(_browserApiJs);

	var _canvasWrapperJs = __webpack_require__(3);

	var _canvasWrapperJs2 = _interopRequireDefault(_canvasWrapperJs);

	var _eventAggregatorJs = __webpack_require__(4);

	var _eventAggregatorJs2 = _interopRequireDefault(_eventAggregatorJs);

	var _toolsArrowJs = __webpack_require__(5);

	var _toolsArrowJs2 = _interopRequireDefault(_toolsArrowJs);

	var _toolsBoxJs = __webpack_require__(652);

	var _toolsBoxJs2 = _interopRequireDefault(_toolsBoxJs);

	var _toolsClearToolJs = __webpack_require__(653);

	var _toolsClearToolJs2 = _interopRequireDefault(_toolsClearToolJs);

	var _toolsDumpToolJs = __webpack_require__(654);

	var _toolsDumpToolJs2 = _interopRequireDefault(_toolsDumpToolJs);

	var _toolsHlineJs = __webpack_require__(655);

	var _toolsHlineJs2 = _interopRequireDefault(_toolsHlineJs);

	var _toolsRemoveToolJs = __webpack_require__(656);

	var _toolsRemoveToolJs2 = _interopRequireDefault(_toolsRemoveToolJs);

	var _toolsTextJs = __webpack_require__(657);

	var _toolsTextJs2 = _interopRequireDefault(_toolsTextJs);

	var _controlsHorizontalBarJs = __webpack_require__(658);

	var _controlsHorizontalBarJs2 = _interopRequireDefault(_controlsHorizontalBarJs);

	function setupTool(domId, toolResource, canvasTool, eventAggregator) {
	    var toolInstance = new toolResource(canvasTool, eventAggregator);

	    if (!toolInstance.init) {
	        console.log('Tool ' + domId + ' has no init function!');
	    } else {
	        toolInstance.init();
	    }
	    return toolInstance;
	}

	var RechartJs = function RechartJs(domId, imagePath, options) {
	    _classCallCheck(this, RechartJs);

	    var events = new _eventAggregatorJs2['default']();

	    var canvas = new _canvasWrapperJs2['default'](domId, imagePath);

	    var c = canvas.canvas;
	    var toolbar = new _controlsHorizontalBarJs2['default'](events, document.getElementById(domId));

	    var hasToolsDef = !!options && !!options.tools;

	    if (!hasToolsDef || options.tools.indexOf('rectangle') >= 0) setupTool('action_box', _toolsBoxJs2['default'], canvas, events);
	    if (!hasToolsDef || options.tools.indexOf('reset') >= 0) setupTool('action_clear', _toolsClearToolJs2['default'], canvas, events);
	    if (!hasToolsDef || options.tools.indexOf('text') >= 0) setupTool('action_text', _toolsTextJs2['default'], canvas, events);
	    if (!hasToolsDef || options.tools.indexOf('hline') >= 0) setupTool('action_hline', _toolsHlineJs2['default'], canvas, events, document.getElementById('action_hline'));
	    if (!hasToolsDef || options.tools.indexOf('arrow') >= 0) setupTool('action_arrow', _toolsArrowJs2['default'], canvas, events);
	    if (!hasToolsDef || options.tools.indexOf('remove') >= 0) setupTool('action_remove', _toolsRemoveToolJs2['default'], canvas, events);
	    if (!hasToolsDef || options.tools.indexOf('dump') >= 0) setupTool('action_dump', _toolsDumpToolJs2['default'], canvas, events);

	    // var oRemoveBtn = document.querySelector('#action_remove');

	    // var onSelect = function(options) {
	    //     oRemoveBtn.className = c.getActiveObject() ? '' : 'inactive';
	    // };
	    // c.on('object:selected', onSelect).on('selection:cleared', onSelect);
	};

	new _browserApiJs2['default']().appendToWindow('RechartJs', RechartJs);

	exports['default'] = RechartJs;
	module.exports = exports['default'];

/***/ },
/* 2 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var isBrowser = typeof window !== 'undefined';

	var Browser = (function () {
	    function Browser() {
	        _classCallCheck(this, Browser);

	        this.document = isBrowser ? document : {};
	        this.window = isBrowser ? window : {};
	    }

	    _createClass(Browser, [{
	        key: 'appendToWindow',
	        value: function appendToWindow(attributeName, obj) {

	            if (isBrowser) {
	                window[attributeName] = obj;
	                return true;
	            }
	            return false;
	        }
	    }]);

	    return Browser;
	})();

	exports['default'] = Browser;
	module.exports = exports['default'];

/***/ },
/* 3 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
		value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var CANVAS_WIDTH = 582;
	var CANVAS_HEIGHT = 345;
	var functionRepository = {},
	    serviceRepository = {};

	function scrollPosition(elem) {
		var left = 0,
		    top = 0;

		do {
			left += elem.scrollLeft;
			top += elem.scrollTop;
		} while (elem = elem.offsetParent);

		return [left, top];
	}

	var Canvas = (function () {
		function Canvas(domId, imagePath) {
			_classCallCheck(this, Canvas);

			var canvasElem = document.createElement("canvas");
			var innerDiv = document.createElement("div");

			var canvasWrapper = document.getElementById(domId);

			canvasWrapper.appendChild(innerDiv);
			innerDiv.appendChild(canvasElem);
			this.setCanvasProps(canvasElem, canvasWrapper, innerDiv, imagePath);
		}

		_createClass(Canvas, [{
			key: "setCanvasProps",
			value: function setCanvasProps(_canvasElem, overallWrapper, canvasContainer, _imagePath) {

				this.canvasElem = _canvasElem;

				this.overallWrapper = overallWrapper;
				this.canvasTop = this.canvasElem.offsetTop;
				this.canvasContainer = canvasContainer;

				this.canvasLeft = _canvasElem.offsetLeft;

				this.imagePath = _imagePath;

				this.canvas = this.initFabricjsCanvas(this.canvasElem);
			}
		}, {
			key: "getCanvasTop",
			value: function getCanvasTop() {
				return this.canvasContainer.offsetTop;
			}
		}, {
			key: "initFabricjsCanvas",
			value: function initFabricjsCanvas(canvasElem) {
				var fabricCanvas = new fabric.Canvas(canvasElem);

				/* fabric.Image.fromURL('demo/chart.png', function(oImg) {
	     canvas.add(oImg);
	   });/*/
				fabricCanvas.setDimensions({ width: CANVAS_WIDTH, height: CANVAS_HEIGHT });

				fabricCanvas.setBackgroundImage(this.imagePath, fabricCanvas.renderAll.bind(fabricCanvas), {
					width: fabricCanvas.width,
					height: fabricCanvas.height,
					// Needed to position backgroundImage at 0/0
					originX: 'left',
					originY: 'top'
				});
				return fabricCanvas;
			}
		}, {
			key: "getWidth",
			value: function getWidth() {
				return CANVAS_WIDTH;
			}
		}, {
			key: "getOffsetLeft",
			value: function getOffsetLeft() {
				return this.canvasLeft - scrollPosition(this.canvasElem)[0];
			}
		}, {
			key: "getOffsetTop",
			value: function getOffsetTop() {
				return this.getCanvasTop() - scrollPosition(this.canvasElem)[1];
			}
		}]);

		return Canvas;
	})();

	exports["default"] = Canvas;
	module.exports = exports["default"];

/***/ },
/* 4 */
/***/ function(module, exports) {

	"use strict";

	Object.defineProperty(exports, "__esModule", {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

	var EventAggregator = (function () {
	    function EventAggregator() {
	        _classCallCheck(this, EventAggregator);

	        this.subscriptions = {};
	        this.subscriptionsByTopic = {};
	    }

	    _createClass(EventAggregator, [{
	        key: "subscribe",
	        value: function subscribe(subscriber, onNotifyFn) {
	            this.subscriptions[subscriber] = onNotifyFn;
	        }
	    }, {
	        key: "subscribeTo",
	        value: function subscribeTo(topic, subscriberId, onNotifyFn) {

	            if (!this.subscriptionsByTopic[topic]) {
	                this.subscriptionsByTopic[topic] = [];
	            }
	            this.subscriptionsByTopic[topic].push({ subscriber: subscriberId, callbackFn: onNotifyFn });
	        }

	        // ToDo needs test
	    }, {
	        key: "unsubscribe",
	        value: function unsubscribe(_subscriber) {
	            delete this.subscriptions[_subscriber];
	            for (var i in this.subscriptionsByTopic) {

	                for (var j in this.subscriptionsByTopic[i]) {
	                    if (this.subscriptionsByTopic[i][j].subscriber === _subscriber) {
	                        this.subscriptionsByTopic[i].splice(j, 1);
	                    }
	                }
	            }
	        }

	        // ToDo needs test
	    }, {
	        key: "unsubscribeTo",
	        value: function unsubscribeTo(topic, _subscriber) {
	            for (var j in this.subscriptionsByTopic[topic]) {
	                if (this.subscriptionsByTopic[topic][j].subscriber === _subscriber) {
	                    this.subscriptionsByTopic[topic].splice(j, 1);
	                }
	            }
	        }
	    }, {
	        key: "notify",
	        value: function notify(topic, sender, payload) {
	            for (var s1 in this.subscriptions) {
	                this.subscriptions[s1].apply(undefined, [topic, sender, payload]);
	            }
	            for (var s2 in this.subscriptionsByTopic[topic]) {
	                this.subscriptionsByTopic[topic][s2].callbackFn.apply(undefined, [topic, sender, payload]);
	            }
	        }
	    }]);

	    return EventAggregator;
	})();

	exports["default"] = EventAggregator;
	module.exports = exports["default"];

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _canvasConstJs = __webpack_require__(6);

	var _canvasConstJs2 = _interopRequireDefault(_canvasConstJs);

	var _sampleJs = __webpack_require__(7);

	var _sampleJs2 = _interopRequireDefault(_sampleJs);

	// var w = require('window');

	var circleMarkerRadius = 8;
	var indicationLength = 20;
	var arrowColor = '#444';
	var dragArrowColor = '#888';
	var arrow, canvas;

	var circleMarker, line, start, end;

	var ArrowTool = (function () {
	    function ArrowTool(canvasWrapper, eventAggregator) {
	        _classCallCheck(this, ArrowTool);

	        this.eventAggregator = eventAggregator;
	        this.canvasWrapper = canvasWrapper;
	        var callee = this;

	        this.eventAggregator.subscribeTo(_canvasConstJs2['default'].TOOL.ARROW, 'ArrowTool', function () {
	            console.log('tool callback', this);
	            callee.startArrow();
	        });
	        canvas = canvasWrapper.canvas;

	        this.moveFn = function (options) {
	            callee.onMove(options);
	        };
	        this.upFn = function (options) {
	            callee.onMUP(options);
	        };
	        this.notify = function (message) {
	            console.log('notify', this);
	            this.eventAggregator.notify('TOOL_USAGE', _canvasConstJs2['default'].TOOL.ARROW, message);
	        };
	    }

	    // Cred till http://stackoverflow.com/questions/29890294/arrow-shape-using-fabricjs

	    _createClass(ArrowTool, [{
	        key: 'moveArrowIndicator',
	        value: function moveArrowIndicator(points) {
	            var x1 = points[0],
	                y1 = points[1],
	                x2 = points[2],
	                y2 = points[3],
	                dx = x2 - x1,
	                dy = y2 - y1,
	                angle = Math.atan2(dy, dx);

	            angle *= 180 / Math.PI;
	            angle += 90;
	            if (arrow) {
	                canvas.remove(arrow);
	            }
	            arrow = new _sampleJs2['default'].fabric.Triangle({
	                angle: angle,
	                fill: dragArrowColor,
	                top: y2,
	                left: x2,
	                height: indicationLength,
	                width: indicationLength,
	                originX: 'center',
	                originY: 'center',
	                selectable: false
	            });

	            canvas.add(arrow);
	        }
	    }, {
	        key: 'abort',
	        value: function abort() {

	            if (circleMarker) {
	                canvas.remove(circleMarker);
	                circleMarker = undefined;
	            }
	            if (arrow) {
	                canvas.remove(arrow);
	                arrow = undefined;
	            }
	            if (line) {
	                canvas.remove(line);
	                arrow = line = undefined;
	            }
	            this.detachArrowListeners();
	            this.eventAggregator.unsubscribeTo('keydown', 'ArrowTool');
	            this.notify('inactive');
	        }
	    }, {
	        key: 'detachArrowListeners',
	        value: function detachArrowListeners() {
	            canvas.off('mouse:move', this.moveFn);
	            canvas.off('mouse:up', this.upFn);
	        }
	    }, {
	        key: 'onMove',
	        value: function onMove(options) {
	            if (circleMarker) {
	                circleMarker.set({
	                    'top': options.e.clientY - this.canvasWrapper.getOffsetTop()
	                });
	                circleMarker.set({
	                    'left': options.e.clientX - this.canvasWrapper.getOffsetLeft()
	                });
	                circleMarker.setCoords();
	            }
	            if (start) {
	                var _x2 = options.e.clientX - this.canvasWrapper.getOffsetLeft();
	                var _y2 = options.e.clientY - this.canvasWrapper.getOffsetTop();
	                line.set({
	                    'x2': _x2
	                });
	                line.set({
	                    'y2': _y2
	                });

	                this.moveArrowIndicator([start.left, start.top, _x2, _y2]);
	            }

	            canvas.renderAll();
	        }
	    }, {
	        key: 'onMUP',
	        value: function onMUP(options) {
	            if (!start) {
	                start = {
	                    top: circleMarker.get('top'),
	                    left: circleMarker.get('left')
	                };
	                line.set({
	                    'x1': start.left
	                });
	                line.set({
	                    'y1': start.top
	                });
	                line.set({
	                    'x2': start.left
	                });
	                line.set({
	                    'y2': start.top
	                });
	                canvas.add(line);
	                canvas.remove(circleMarker);
	                circleMarker = undefined;
	            } else if (!end) {
	                end = {
	                    top: options.e.clientY - this.canvasWrapper.getOffsetTop(),
	                    left: options.e.clientX - this.canvasWrapper.getOffsetLeft()
	                };
	                this.detachArrowListeners();
	                arrow.fill = arrowColor;
	                var group = new _sampleJs2['default'].fabric.Group([line, arrow], {
	                    hasControls: false,
	                    hasBorders: true,
	                    selectable: true
	                });
	                line.stroke = arrowColor;

	                canvas.add(group);
	                canvas.remove(line);
	                canvas.remove(arrow);
	                arrow = line = undefined;
	                this.notify('inactive');
	            }
	            canvas.renderAll();
	        }
	    }, {
	        key: 'startArrow',
	        value: function startArrow(topic, sender, payload) {
	            if (payload === 'toolbar-deactivate') {
	                this.abort();
	                return;
	            }
	            var callee = this;
	            this.eventAggregator.subscribeTo('keydown', 'ArrowTool', function (topic, sender, keyCode) {
	                if (keyCode === 27) {
	                    callee.abort();
	                }
	            });
	            start = end = undefined;
	            this.notify('active');
	            console.log('required', _sampleJs2['default'].fabric);
	            circleMarker = new _sampleJs2['default'].fabric.Circle({
	                radius: circleMarkerRadius,
	                fill: arrowColor,
	                opacity: 0.7,
	                left: 100,
	                top: 0,
	                selectable: false,
	                originX: 'center',
	                originY: 'center'
	            });
	            canvas.add(circleMarker);

	            line = new FabricJs.Line([0, 0, 300, 300], {
	                strokeWidth: 5,
	                stroke: dragArrowColor,
	                originX: 'center',
	                originY: 'center',
	                hasControls: false,
	                hasBorders: true,
	                selectable: true
	            });

	            canvas.on('mouse:move', this.moveFn);
	            canvas.on('mouse:up', this.upFn);
	        }
	    }]);

	    return ArrowTool;
	})();

	exports['default'] = ArrowTool;
	module.exports = exports['default'];

/***/ },
/* 6 */
/***/ function(module, exports) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});
	exports['default'] = {
		TOOL: {
			ARROW: 'arr_t',
			BOX: 'box_t',
			CLEAR: 'cl_t',
			DUMP: 'dump_t',
			HLINE: 'hline_t',
			REMOVE: 'rem_t',
			TEXT: 'txt_t'
		}
	};
	module.exports = exports['default'];

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var FabricJs = __webpack_require__(8).fabric;

	var isTest = false;

	var FabricProvider = function FabricProvider() {
	    _classCallCheck(this, FabricProvider);

	    this.fabric = isTest ? {} : FabricJs;
	};

	exports['default'] = FabricProvider;
	module.exports = exports['default'];

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	/* build: `node build.js modules=ALL exclude=gestures,json minifier=uglifyjs` */ /*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */'use strict';var fabric=fabric || {version:"1.5.0"};if(true){exports.fabric = fabric;}if(typeof document !== 'undefined' && typeof window !== 'undefined'){fabric.document = document;fabric.window = window; // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)
	window.fabric = fabric;}else { // assume we're running under node.js when document/window are not present
	fabric.document = __webpack_require__(9).jsdom("<!DOCTYPE html><html><head></head><body></body></html>");if(fabric.document.createWindow){fabric.window = fabric.document.createWindow();}else {fabric.window = fabric.document.parentWindow;}} /**
	 * True when in environment that supports touch events
	 * @type boolean
	 */fabric.isTouchSupported = "ontouchstart" in fabric.document.documentElement; /**
	 * True when in environment that's probably Node.js
	 * @type boolean
	 */fabric.isLikelyNode = typeof Buffer !== 'undefined' && typeof window === 'undefined'; /* _FROM_SVG_START_ */ /**
	 * Attributes parsed from all SVG elements
	 * @type array
	 */fabric.SHARED_ATTRIBUTES = ["display","transform","fill","fill-opacity","fill-rule","opacity","stroke","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width"]; /* _FROM_SVG_END_ */ /**
	 * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.
	 */fabric.DPI = 96;fabric.reNum = '(?:[-+]?(?:\\d+|\\d*\\.\\d+)(?:e[-+]?\\d+)?)';(function(){ /**
	   * @private
	   * @param {String} eventName
	   * @param {Function} handler
	   */function _removeEventListener(eventName,handler){if(!this.__eventListeners[eventName]){return;}if(handler){fabric.util.removeFromArray(this.__eventListeners[eventName],handler);}else {this.__eventListeners[eventName].length = 0;}} /**
	   * Observes specified event
	   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)
	   * @memberOf fabric.Observable
	   * @alias on
	   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})
	   * @param {Function} handler Function that receives a notification when an event of the specified type occurs
	   * @return {Self} thisArg
	   * @chainable
	   */function observe(eventName,handler){if(!this.__eventListeners){this.__eventListeners = {};} // one object with key/value pairs was passed
	if(arguments.length === 1){for(var prop in eventName) {this.on(prop,eventName[prop]);}}else {if(!this.__eventListeners[eventName]){this.__eventListeners[eventName] = [];}this.__eventListeners[eventName].push(handler);}return this;} /**
	   * Stops event observing for a particular event handler. Calling this method
	   * without arguments removes all handlers for all events
	   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)
	   * @memberOf fabric.Observable
	   * @alias off
	   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})
	   * @param {Function} handler Function to be deleted from EventListeners
	   * @return {Self} thisArg
	   * @chainable
	   */function stopObserving(eventName,handler){if(!this.__eventListeners){return;} // remove all key/value pairs (event name -> event handler)
	if(arguments.length === 0){this.__eventListeners = {};} // one object with key/value pairs was passed
	else if(arguments.length === 1 && typeof arguments[0] === 'object'){for(var prop in eventName) {_removeEventListener.call(this,prop,eventName[prop]);}}else {_removeEventListener.call(this,eventName,handler);}return this;} /**
	   * Fires event with an optional options object
	   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)
	   * @memberOf fabric.Observable
	   * @alias trigger
	   * @param {String} eventName Event name to fire
	   * @param {Object} [options] Options object
	   * @return {Self} thisArg
	   * @chainable
	   */function fire(eventName,options){if(!this.__eventListeners){return;}var listenersForEvent=this.__eventListeners[eventName];if(!listenersForEvent){return;}for(var i=0,len=listenersForEvent.length;i < len;i++) { // avoiding try/catch for perf. reasons
	listenersForEvent[i].call(this,options || {});}return this;} /**
	   * @namespace fabric.Observable
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#events}
	   * @see {@link http://fabricjs.com/events/|Events demo}
	   */fabric.Observable = {observe:observe,stopObserving:stopObserving,fire:fire,on:observe,off:stopObserving,trigger:fire};})(); /**
	 * @namespace fabric.Collection
	 */fabric.Collection = { /**
	   * Adds objects to collection, then renders canvas (if `renderOnAddRemove` is not `false`)
	   * Objects should be instances of (or inherit from) fabric.Object
	   * @param {...fabric.Object} object Zero or more fabric instances
	   * @return {Self} thisArg
	   */add:function add(){this._objects.push.apply(this._objects,arguments);for(var i=0,length=arguments.length;i < length;i++) {this._onObjectAdded(arguments[i]);}this.renderOnAddRemove && this.renderAll();return this;}, /**
	   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)
	   * An object should be an instance of (or inherit from) fabric.Object
	   * @param {Object} object Object to insert
	   * @param {Number} index Index to insert object at
	   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs
	   * @return {Self} thisArg
	   * @chainable
	   */insertAt:function insertAt(object,index,nonSplicing){var objects=this.getObjects();if(nonSplicing){objects[index] = object;}else {objects.splice(index,0,object);}this._onObjectAdded(object);this.renderOnAddRemove && this.renderAll();return this;}, /**
	   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)
	   * @param {...fabric.Object} object Zero or more fabric instances
	   * @return {Self} thisArg
	   * @chainable
	   */remove:function remove(){var objects=this.getObjects(),index;for(var i=0,length=arguments.length;i < length;i++) {index = objects.indexOf(arguments[i]); // only call onObjectRemoved if an object was actually removed
	if(index !== -1){objects.splice(index,1);this._onObjectRemoved(arguments[i]);}}this.renderOnAddRemove && this.renderAll();return this;}, /**
	   * Executes given function for each object in this group
	   * @param {Function} callback
	   *                   Callback invoked with current object as first argument,
	   *                   index - as second and an array of all objects - as third.
	   *                   Iteration happens in reverse order (for performance reasons).
	   *                   Callback is invoked in a context of Global Object (e.g. `window`)
	   *                   when no `context` argument is given
	   *
	   * @param {Object} context Context (aka thisObject)
	   * @return {Self} thisArg
	   */forEachObject:function forEachObject(callback,context){var objects=this.getObjects(),i=objects.length;while(i--) {callback.call(context,objects[i],i,objects);}return this;}, /**
	   * Returns an array of children objects of this instance
	   * Type parameter introduced in 1.3.10
	   * @param {String} [type] When specified, only objects of this type are returned
	   * @return {Array}
	   */getObjects:function getObjects(type){if(typeof type === 'undefined'){return this._objects;}return this._objects.filter(function(o){return o.type === type;});}, /**
	   * Returns object at specified index
	   * @param {Number} index
	   * @return {Self} thisArg
	   */item:function item(index){return this.getObjects()[index];}, /**
	   * Returns true if collection contains no objects
	   * @return {Boolean} true if collection is empty
	   */isEmpty:function isEmpty(){return this.getObjects().length === 0;}, /**
	   * Returns a size of a collection (i.e: length of an array containing its objects)
	   * @return {Number} Collection size
	   */size:function size(){return this.getObjects().length;}, /**
	   * Returns true if collection contains an object
	   * @param {Object} object Object to check against
	   * @return {Boolean} `true` if collection contains an object
	   */contains:function contains(object){return this.getObjects().indexOf(object) > -1;}, /**
	   * Returns number representation of a collection complexity
	   * @return {Number} complexity
	   */complexity:function complexity(){return this.getObjects().reduce(function(memo,current){memo += current.complexity?current.complexity():0;return memo;},0);}};(function(global){var sqrt=Math.sqrt,atan2=Math.atan2,PiBy180=Math.PI / 180; /**
	   * @namespace fabric.util
	   */fabric.util = { /**
	     * Removes value from an array.
	     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`
	     * @static
	     * @memberOf fabric.util
	     * @param {Array} array
	     * @param {Any} value
	     * @return {Array} original array
	     */removeFromArray:function removeFromArray(array,value){var idx=array.indexOf(value);if(idx !== -1){array.splice(idx,1);}return array;}, /**
	     * Returns random number between 2 specified ones.
	     * @static
	     * @memberOf fabric.util
	     * @param {Number} min lower limit
	     * @param {Number} max upper limit
	     * @return {Number} random value (between min and max)
	     */getRandomInt:function getRandomInt(min,max){return Math.floor(Math.random() * (max - min + 1)) + min;}, /**
	     * Transforms degrees to radians.
	     * @static
	     * @memberOf fabric.util
	     * @param {Number} degrees value in degrees
	     * @return {Number} value in radians
	     */degreesToRadians:function degreesToRadians(degrees){return degrees * PiBy180;}, /**
	     * Transforms radians to degrees.
	     * @static
	     * @memberOf fabric.util
	     * @param {Number} radians value in radians
	     * @return {Number} value in degrees
	     */radiansToDegrees:function radiansToDegrees(radians){return radians / PiBy180;}, /**
	     * Rotates `point` around `origin` with `radians`
	     * @static
	     * @memberOf fabric.util
	     * @param {fabric.Point} point The point to rotate
	     * @param {fabric.Point} origin The origin of the rotation
	     * @param {Number} radians The radians of the angle for the rotation
	     * @return {fabric.Point} The new rotated point
	     */rotatePoint:function rotatePoint(point,origin,radians){var sin=Math.sin(radians),cos=Math.cos(radians);point.subtractEquals(origin);var rx=point.x * cos - point.y * sin,ry=point.x * sin + point.y * cos;return new fabric.Point(rx,ry).addEquals(origin);}, /**
	     * Apply transform t to point p
	     * @static
	     * @memberOf fabric.util
	     * @param  {fabric.Point} p The point to transform
	     * @param  {Array} t The transform
	     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied
	     * @return {fabric.Point} The transformed point
	     */transformPoint:function transformPoint(p,t,ignoreOffset){if(ignoreOffset){return new fabric.Point(t[0] * p.x + t[2] * p.y,t[1] * p.x + t[3] * p.y);}return new fabric.Point(t[0] * p.x + t[2] * p.y + t[4],t[1] * p.x + t[3] * p.y + t[5]);}, /**
	     * Invert transformation t
	     * @static
	     * @memberOf fabric.util
	     * @param {Array} t The transform
	     * @return {Array} The inverted transform
	     */invertTransform:function invertTransform(t){var r=t.slice(),a=1 / (t[0] * t[3] - t[1] * t[2]);r = [a * t[3],-a * t[1],-a * t[2],a * t[0],0,0];var o=fabric.util.transformPoint({x:t[4],y:t[5]},r);r[4] = -o.x;r[5] = -o.y;return r;}, /**
	     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.
	     * @static
	     * @memberOf fabric.util
	     * @param {Number|String} number number to operate on
	     * @param {Number} fractionDigits number of fraction digits to "leave"
	     * @return {Number}
	     */toFixed:function toFixed(number,fractionDigits){return parseFloat(Number(number).toFixed(fractionDigits));}, /**
	     * Converts from attribute value to pixel value if applicable.
	     * Returns converted pixels or original value not converted.
	     * @param {Number|String} value number to operate on
	     * @return {Number|String}
	     */parseUnit:function parseUnit(value,fontSize){var unit=/\D{0,2}$/.exec(value),number=parseFloat(value);if(!fontSize){fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;}switch(unit[0]){case 'mm':return number * fabric.DPI / 25.4;case 'cm':return number * fabric.DPI / 2.54;case 'in':return number * fabric.DPI;case 'pt':return number * fabric.DPI / 72; // or * 4 / 3
	case 'pc':return number * fabric.DPI / 72 * 12; // or * 16
	case 'em':return number * fontSize;default:return number;}}, /**
	     * Function which always returns `false`.
	     * @static
	     * @memberOf fabric.util
	     * @return {Boolean}
	     */falseFunction:function falseFunction(){return false;}, /**
	      * Returns klass "Class" object of given namespace
	      * @memberOf fabric.util
	      * @param {String} type Type of object (eg. 'circle')
	      * @param {String} namespace Namespace to get klass "Class" object from
	      * @return {Object} klass "Class"
	      */getKlass:function getKlass(type,namespace){ // capitalize first letter only
	type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));return fabric.util.resolveNamespace(namespace)[type];}, /**
	     * Returns object of given namespace
	     * @memberOf fabric.util
	     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'
	     * @return {Object} Object for given namespace (default fabric)
	     */resolveNamespace:function resolveNamespace(namespace){if(!namespace){return fabric;}var parts=namespace.split('.'),len=parts.length,obj=global || fabric.window;for(var i=0;i < len;++i) {obj = obj[parts[i]];}return obj;}, /**
	     * Loads image element from given url and passes it to a callback
	     * @memberOf fabric.util
	     * @param {String} url URL representing an image
	     * @param {Function} callback Callback; invoked with loaded image
	     * @param {Any} [context] Context to invoke callback in
	     * @param {Object} [crossOrigin] crossOrigin value to set image element to
	     */loadImage:function loadImage(url,callback,context,crossOrigin){if(!url){callback && callback.call(context,url);return;}var img=fabric.util.createImage(); /** @ignore */img.onload = function(){callback && callback.call(context,img);img = img.onload = img.onerror = null;}; /** @ignore */img.onerror = function(){fabric.log('Error loading ' + img.src);callback && callback.call(context,null,true);img = img.onload = img.onerror = null;}; // data-urls appear to be buggy with crossOrigin
	// https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767
	// see https://code.google.com/p/chromium/issues/detail?id=315152
	//     https://bugzilla.mozilla.org/show_bug.cgi?id=935069
	if(url.indexOf('data') !== 0 && typeof crossOrigin !== 'undefined'){img.crossOrigin = crossOrigin;}img.src = url;}, /**
	     * Creates corresponding fabric instances from their object representations
	     * @static
	     * @memberOf fabric.util
	     * @param {Array} objects Objects to enliven
	     * @param {Function} callback Callback to invoke when all objects are created
	     * @param {String} namespace Namespace to get klass "Class" object from
	     * @param {Function} reviver Method for further parsing of object elements,
	     * called after each fabric object created.
	     */enlivenObjects:function enlivenObjects(objects,callback,namespace,reviver){objects = objects || [];function onLoaded(){if(++numLoadedObjects === numTotalObjects){callback && callback(enlivenedObjects);}}var enlivenedObjects=[],numLoadedObjects=0,numTotalObjects=objects.length;if(!numTotalObjects){callback && callback(enlivenedObjects);return;}objects.forEach(function(o,index){ // if sparse array
	if(!o || !o.type){onLoaded();return;}var klass=fabric.util.getKlass(o.type,namespace);if(klass.async){klass.fromObject(o,function(obj,error){if(!error){enlivenedObjects[index] = obj;reviver && reviver(o,enlivenedObjects[index]);}onLoaded();});}else {enlivenedObjects[index] = klass.fromObject(o);reviver && reviver(o,enlivenedObjects[index]);onLoaded();}});}, /**
	     * Groups SVG elements (usually those retrieved from SVG document)
	     * @static
	     * @memberOf fabric.util
	     * @param {Array} elements SVG elements to group
	     * @param {Object} [options] Options object
	     * @return {fabric.Object|fabric.PathGroup}
	     */groupSVGElements:function groupSVGElements(elements,options,path){var object;object = new fabric.PathGroup(elements,options);if(typeof path !== 'undefined'){object.setSourcePath(path);}return object;}, /**
	     * Populates an object with properties of another object
	     * @static
	     * @memberOf fabric.util
	     * @param {Object} source Source object
	     * @param {Object} destination Destination object
	     * @return {Array} properties Propertie names to include
	     */populateWithProperties:function populateWithProperties(source,destination,properties){if(properties && Object.prototype.toString.call(properties) === '[object Array]'){for(var i=0,len=properties.length;i < len;i++) {if(properties[i] in source){destination[properties[i]] = source[properties[i]];}}}}, /**
	     * Draws a dashed line between two points
	     *
	     * This method is used to draw dashed line around selection area.
	     * See <a href="http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas">dotted stroke in canvas</a>
	     *
	     * @param {CanvasRenderingContext2D} ctx context
	     * @param {Number} x  start x coordinate
	     * @param {Number} y start y coordinate
	     * @param {Number} x2 end x coordinate
	     * @param {Number} y2 end y coordinate
	     * @param {Array} da dash array pattern
	     */drawDashedLine:function drawDashedLine(ctx,x,y,x2,y2,da){var dx=x2 - x,dy=y2 - y,len=sqrt(dx * dx + dy * dy),rot=atan2(dy,dx),dc=da.length,di=0,draw=true;ctx.save();ctx.translate(x,y);ctx.moveTo(0,0);ctx.rotate(rot);x = 0;while(len > x) {x += da[di++ % dc];if(x > len){x = len;}ctx[draw?'lineTo':'moveTo'](x,0);draw = !draw;}ctx.restore();}, /**
	     * Creates canvas element and initializes it via excanvas if necessary
	     * @static
	     * @memberOf fabric.util
	     * @param {CanvasElement} [canvasEl] optional canvas element to initialize;
	     * when not given, element is created implicitly
	     * @return {CanvasElement} initialized canvas element
	     */createCanvasElement:function createCanvasElement(canvasEl){canvasEl || (canvasEl = fabric.document.createElement('canvas')); //jscs:disable requireCamelCaseOrUpperCaseIdentifiers
	if(!canvasEl.getContext && typeof G_vmlCanvasManager !== 'undefined'){G_vmlCanvasManager.initElement(canvasEl);} //jscs:enable requireCamelCaseOrUpperCaseIdentifiers
	return canvasEl;}, /**
	     * Creates image element (works on client and node)
	     * @static
	     * @memberOf fabric.util
	     * @return {HTMLImageElement} HTML image element
	     */createImage:function createImage(){return fabric.isLikelyNode?new (__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"canvas\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())).Image)():fabric.document.createElement('img');}, /**
	     * Creates accessors (getXXX, setXXX) for a "class", based on "stateProperties" array
	     * @static
	     * @memberOf fabric.util
	     * @param {Object} klass "Class" to create accessors for
	     */createAccessors:function createAccessors(klass){var proto=klass.prototype;for(var i=proto.stateProperties.length;i--;) {var propName=proto.stateProperties[i],capitalizedPropName=propName.charAt(0).toUpperCase() + propName.slice(1),setterName='set' + capitalizedPropName,getterName='get' + capitalizedPropName; // using `new Function` for better introspection
	if(!proto[getterName]){proto[getterName] = (function(property){return new Function('return this.get("' + property + '")');})(propName);}if(!proto[setterName]){proto[setterName] = (function(property){return new Function('value','return this.set("' + property + '", value)');})(propName);}}}, /**
	     * @static
	     * @memberOf fabric.util
	     * @param {fabric.Object} receiver Object implementing `clipTo` method
	     * @param {CanvasRenderingContext2D} ctx Context to clip
	     */clipContext:function clipContext(receiver,ctx){ctx.save();ctx.beginPath();receiver.clipTo(ctx);ctx.clip();}, /**
	     * Multiply matrix A by matrix B to nest transformations
	     * @static
	     * @memberOf fabric.util
	     * @param  {Array} a First transformMatrix
	     * @param  {Array} b Second transformMatrix
	     * @return {Array} The product of the two transform matrices
	     */multiplyTransformMatrices:function multiplyTransformMatrices(a,b){ // Matrix multiply a * b
	return [a[0] * b[0] + a[2] * b[1],a[1] * b[0] + a[3] * b[1],a[0] * b[2] + a[2] * b[3],a[1] * b[2] + a[3] * b[3],a[0] * b[4] + a[2] * b[5] + a[4],a[1] * b[4] + a[3] * b[5] + a[5]];}, /**
	     * Returns string representation of function body
	     * @param {Function} fn Function to get body of
	     * @return {String} Function body
	     */getFunctionBody:function getFunctionBody(fn){return (String(fn).match(/function[^{]*\{([\s\S]*)\}/) || {})[1];}, /**
	     * Returns true if context has transparent pixel
	     * at specified location (taking tolerance into account)
	     * @param {CanvasRenderingContext2D} ctx context
	     * @param {Number} x x coordinate
	     * @param {Number} y y coordinate
	     * @param {Number} tolerance Tolerance
	     */isTransparent:function isTransparent(ctx,x,y,tolerance){ // If tolerance is > 0 adjust start coords to take into account.
	// If moves off Canvas fix to 0
	if(tolerance > 0){if(x > tolerance){x -= tolerance;}else {x = 0;}if(y > tolerance){y -= tolerance;}else {y = 0;}}var _isTransparent=true,imageData=ctx.getImageData(x,y,tolerance * 2 || 1,tolerance * 2 || 1); // Split image data - for tolerance > 1, pixelDataSize = 4;
	for(var i=3,l=imageData.data.length;i < l;i += 4) {var temp=imageData.data[i];_isTransparent = temp <= 0;if(_isTransparent === false){break; // Stop if colour found
	}}imageData = null;return _isTransparent;}};})( true?exports:undefined);(function(){var arcToSegmentsCache={},segmentToBezierCache={},boundsOfCurveCache={},_join=Array.prototype.join; /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp
	   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here
	   * http://mozilla.org/MPL/2.0/
	   */function arcToSegments(toX,toY,rx,ry,large,sweep,rotateX){var argsString=_join.call(arguments);if(arcToSegmentsCache[argsString]){return arcToSegmentsCache[argsString];}var PI=Math.PI,th=rotateX * PI / 180,sinTh=Math.sin(th),cosTh=Math.cos(th),fromX=0,fromY=0;rx = Math.abs(rx);ry = Math.abs(ry);var px=-cosTh * toX * 0.5 - sinTh * toY * 0.5,py=-cosTh * toY * 0.5 + sinTh * toX * 0.5,rx2=rx * rx,ry2=ry * ry,py2=py * py,px2=px * px,pl=rx2 * ry2 - rx2 * py2 - ry2 * px2,root=0;if(pl < 0){var s=Math.sqrt(1 - pl / (rx2 * ry2));rx *= s;ry *= s;}else {root = (large === sweep?-1.0:1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));}var cx=root * rx * py / ry,cy=-root * ry * px / rx,cx1=cosTh * cx - sinTh * cy + toX * 0.5,cy1=sinTh * cx + cosTh * cy + toY * 0.5,mTheta=calcVectorAngle(1,0,(px - cx) / rx,(py - cy) / ry),dtheta=calcVectorAngle((px - cx) / rx,(py - cy) / ry,(-px - cx) / rx,(-py - cy) / ry);if(sweep === 0 && dtheta > 0){dtheta -= 2 * PI;}else if(sweep === 1 && dtheta < 0){dtheta += 2 * PI;} // Convert into cubic bezier segments <= 90deg
	var segments=Math.ceil(Math.abs(dtheta / PI * 2)),result=[],mDelta=dtheta / segments,mT=8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),th3=mTheta + mDelta;for(var i=0;i < segments;i++) {result[i] = segmentToBezier(mTheta,th3,cosTh,sinTh,rx,ry,cx1,cy1,mT,fromX,fromY);fromX = result[i][4];fromY = result[i][5];mTheta = th3;th3 += mDelta;}arcToSegmentsCache[argsString] = result;return result;}function segmentToBezier(th2,th3,cosTh,sinTh,rx,ry,cx1,cy1,mT,fromX,fromY){var argsString2=_join.call(arguments);if(segmentToBezierCache[argsString2]){return segmentToBezierCache[argsString2];}var costh2=Math.cos(th2),sinth2=Math.sin(th2),costh3=Math.cos(th3),sinth3=Math.sin(th3),toX=cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,toY=sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,cp1X=fromX + mT * (-cosTh * rx * sinth2 - sinTh * ry * costh2),cp1Y=fromY + mT * (-sinTh * rx * sinth2 + cosTh * ry * costh2),cp2X=toX + mT * (cosTh * rx * sinth3 + sinTh * ry * costh3),cp2Y=toY + mT * (sinTh * rx * sinth3 - cosTh * ry * costh3);segmentToBezierCache[argsString2] = [cp1X,cp1Y,cp2X,cp2Y,toX,toY];return segmentToBezierCache[argsString2];} /*
	  * Private
	  */function calcVectorAngle(ux,uy,vx,vy){var ta=Math.atan2(uy,ux),tb=Math.atan2(vy,vx);if(tb >= ta){return tb - ta;}else {return 2 * Math.PI - (ta - tb);}} /**
	   * Draws arc
	   * @param {CanvasRenderingContext2D} ctx
	   * @param {Number} fx
	   * @param {Number} fy
	   * @param {Array} coords
	   */fabric.util.drawArc = function(ctx,fx,fy,coords){var rx=coords[0],ry=coords[1],rot=coords[2],large=coords[3],sweep=coords[4],tx=coords[5],ty=coords[6],segs=[[],[],[],[]],segsNorm=arcToSegments(tx - fx,ty - fy,rx,ry,large,sweep,rot);for(var i=0,len=segsNorm.length;i < len;i++) {segs[i][0] = segsNorm[i][0] + fx;segs[i][1] = segsNorm[i][1] + fy;segs[i][2] = segsNorm[i][2] + fx;segs[i][3] = segsNorm[i][3] + fy;segs[i][4] = segsNorm[i][4] + fx;segs[i][5] = segsNorm[i][5] + fy;ctx.bezierCurveTo.apply(ctx,segs[i]);}}; /**
	   * Calculate bounding box of a elliptic-arc
	   * @param {Number} fx start point of arc
	   * @param {Number} fy
	   * @param {Number} rx horizontal radius
	   * @param {Number} ry vertical radius
	   * @param {Number} rot angle of horizontal axe
	   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points
	   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction
	   * @param {Number} tx end point of arc
	   * @param {Number} ty
	   */fabric.util.getBoundsOfArc = function(fx,fy,rx,ry,rot,large,sweep,tx,ty){var fromX=0,fromY=0,bound=[],bounds=[],segs=arcToSegments(tx - fx,ty - fy,rx,ry,large,sweep,rot),boundCopy=[[],[]];for(var i=0,len=segs.length;i < len;i++) {bound = getBoundsOfCurve(fromX,fromY,segs[i][0],segs[i][1],segs[i][2],segs[i][3],segs[i][4],segs[i][5]);boundCopy[0].x = bound[0].x + fx;boundCopy[0].y = bound[0].y + fy;boundCopy[1].x = bound[1].x + fx;boundCopy[1].y = bound[1].y + fy;bounds.push(boundCopy[0]);bounds.push(boundCopy[1]);fromX = segs[i][4];fromY = segs[i][5];}return bounds;}; /**
	   * Calculate bounding box of a beziercurve
	   * @param {Number} x0 starting point
	   * @param {Number} y0
	   * @param {Number} x1 first control point
	   * @param {Number} y1
	   * @param {Number} x2 secondo control point
	   * @param {Number} y2
	   * @param {Number} x3 end of beizer
	   * @param {Number} y3
	   */ // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.
	function getBoundsOfCurve(x0,y0,x1,y1,x2,y2,x3,y3){var argsString=_join.call(arguments);if(boundsOfCurveCache[argsString]){return boundsOfCurveCache[argsString];}var sqrt=Math.sqrt,min=Math.min,max=Math.max,abs=Math.abs,tvalues=[],bounds=[[],[]],a,b,c,t,t1,t2,b2ac,sqrtb2ac;b = 6 * x0 - 12 * x1 + 6 * x2;a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;c = 3 * x1 - 3 * x0;for(var i=0;i < 2;++i) {if(i > 0){b = 6 * y0 - 12 * y1 + 6 * y2;a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;c = 3 * y1 - 3 * y0;}if(abs(a) < 1e-12){if(abs(b) < 1e-12){continue;}t = -c / b;if(0 < t && t < 1){tvalues.push(t);}continue;}b2ac = b * b - 4 * c * a;if(b2ac < 0){continue;}sqrtb2ac = sqrt(b2ac);t1 = (-b + sqrtb2ac) / (2 * a);if(0 < t1 && t1 < 1){tvalues.push(t1);}t2 = (-b - sqrtb2ac) / (2 * a);if(0 < t2 && t2 < 1){tvalues.push(t2);}}var x,y,j=tvalues.length,jlen=j,mt;while(j--) {t = tvalues[j];mt = 1 - t;x = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;bounds[0][j] = x;y = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;bounds[1][j] = y;}bounds[0][jlen] = x0;bounds[1][jlen] = y0;bounds[0][jlen + 1] = x3;bounds[1][jlen + 1] = y3;var result=[{x:min.apply(null,bounds[0]),y:min.apply(null,bounds[1])},{x:max.apply(null,bounds[0]),y:max.apply(null,bounds[1])}];boundsOfCurveCache[argsString] = result;return result;}fabric.util.getBoundsOfCurve = getBoundsOfCurve;})();(function(){var slice=Array.prototype.slice; /* _ES5_COMPAT_START_ */if(!Array.prototype.indexOf){ /**
	     * Finds index of an element in an array
	     * @param {Any} searchElement
	     * @param {Number} [fromIndex]
	     * @return {Number}
	     */Array.prototype.indexOf = function(searchElement /*, fromIndex */){if(this === void 0 || this === null){throw new TypeError();}var t=Object(this),len=t.length >>> 0;if(len === 0){return -1;}var n=0;if(arguments.length > 0){n = Number(arguments[1]);if(n !== n){ // shortcut for verifying if it's NaN
	n = 0;}else if(n !== 0 && n !== Number.POSITIVE_INFINITY && n !== Number.NEGATIVE_INFINITY){n = (n > 0 || -1) * Math.floor(Math.abs(n));}}if(n >= len){return -1;}var k=n >= 0?n:Math.max(len - Math.abs(n),0);for(;k < len;k++) {if(k in t && t[k] === searchElement){return k;}}return -1;};}if(!Array.prototype.forEach){ /**
	     * Iterates an array, invoking callback for each element
	     * @param {Function} fn Callback to invoke for each element
	     * @param {Object} [context] Context to invoke callback in
	     * @return {Array}
	     */Array.prototype.forEach = function(fn,context){for(var i=0,len=this.length >>> 0;i < len;i++) {if(i in this){fn.call(context,this[i],i,this);}}};}if(!Array.prototype.map){ /**
	     * Returns a result of iterating over an array, invoking callback for each element
	     * @param {Function} fn Callback to invoke for each element
	     * @param {Object} [context] Context to invoke callback in
	     * @return {Array}
	     */Array.prototype.map = function(fn,context){var result=[];for(var i=0,len=this.length >>> 0;i < len;i++) {if(i in this){result[i] = fn.call(context,this[i],i,this);}}return result;};}if(!Array.prototype.every){ /**
	     * Returns true if a callback returns truthy value for all elements in an array
	     * @param {Function} fn Callback to invoke for each element
	     * @param {Object} [context] Context to invoke callback in
	     * @return {Boolean}
	     */Array.prototype.every = function(fn,context){for(var i=0,len=this.length >>> 0;i < len;i++) {if(i in this && !fn.call(context,this[i],i,this)){return false;}}return true;};}if(!Array.prototype.some){ /**
	     * Returns true if a callback returns truthy value for at least one element in an array
	     * @param {Function} fn Callback to invoke for each element
	     * @param {Object} [context] Context to invoke callback in
	     * @return {Boolean}
	     */Array.prototype.some = function(fn,context){for(var i=0,len=this.length >>> 0;i < len;i++) {if(i in this && fn.call(context,this[i],i,this)){return true;}}return false;};}if(!Array.prototype.filter){ /**
	     * Returns the result of iterating over elements in an array
	     * @param {Function} fn Callback to invoke for each element
	     * @param {Object} [context] Context to invoke callback in
	     * @return {Array}
	     */Array.prototype.filter = function(fn,context){var result=[],val;for(var i=0,len=this.length >>> 0;i < len;i++) {if(i in this){val = this[i]; // in case fn mutates this
	if(fn.call(context,val,i,this)){result.push(val);}}}return result;};}if(!Array.prototype.reduce){ /**
	     * Returns "folded" (reduced) result of iterating over elements in an array
	     * @param {Function} fn Callback to invoke for each element
	     * @param {Object} [initial] Object to use as the first argument to the first call of the callback
	     * @return {Any}
	     */Array.prototype.reduce = function(fn /*, initial*/){var len=this.length >>> 0,i=0,rv;if(arguments.length > 1){rv = arguments[1];}else {do {if(i in this){rv = this[i++];break;} // if array contains no values, no initial value to return
	if(++i >= len){throw new TypeError();}}while(true);}for(;i < len;i++) {if(i in this){rv = fn.call(null,rv,this[i],i,this);}}return rv;};} /* _ES5_COMPAT_END_ */ /**
	   * Invokes method on all items in a given array
	   * @memberOf fabric.util.array
	   * @param {Array} array Array to iterate over
	   * @param {String} method Name of a method to invoke
	   * @return {Array}
	   */function invoke(array,method){var args=slice.call(arguments,2),result=[];for(var i=0,len=array.length;i < len;i++) {result[i] = args.length?array[i][method].apply(array[i],args):array[i][method].call(array[i]);}return result;} /**
	   * Finds maximum value in array (not necessarily "first" one)
	   * @memberOf fabric.util.array
	   * @param {Array} array Array to iterate over
	   * @param {String} byProperty
	   * @return {Any}
	   */function max(array,byProperty){return find(array,byProperty,function(value1,value2){return value1 >= value2;});} /**
	   * Finds minimum value in array (not necessarily "first" one)
	   * @memberOf fabric.util.array
	   * @param {Array} array Array to iterate over
	   * @param {String} byProperty
	   * @return {Any}
	   */function min(array,byProperty){return find(array,byProperty,function(value1,value2){return value1 < value2;});} /**
	   * @private
	   */function find(array,byProperty,condition){if(!array || array.length === 0){return;}var i=array.length - 1,result=byProperty?array[i][byProperty]:array[i];if(byProperty){while(i--) {if(condition(array[i][byProperty],result)){result = array[i][byProperty];}}}else {while(i--) {if(condition(array[i],result)){result = array[i];}}}return result;} /**
	   * @namespace fabric.util.array
	   */fabric.util.array = {invoke:invoke,min:min,max:max};})();(function(){ /**
	   * Copies all enumerable properties of one object to another
	   * @memberOf fabric.util.object
	   * @param {Object} destination Where to copy to
	   * @param {Object} source Where to copy from
	   * @return {Object}
	   */function extend(destination,source){ // JScript DontEnum bug is not taken care of
	for(var property in source) {destination[property] = source[property];}return destination;} /**
	   * Creates an empty object and copies all enumerable properties of another object to it
	   * @memberOf fabric.util.object
	   * @param {Object} object Object to clone
	   * @return {Object}
	   */function clone(object){return extend({},object);} /** @namespace fabric.util.object */fabric.util.object = {extend:extend,clone:clone};})();(function(){ /* _ES5_COMPAT_START_ */if(!String.prototype.trim){ /**
	     * Trims a string (removing whitespace from the beginning and the end)
	     * @function external:String#trim
	     * @see <a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String/Trim">String#trim on MDN</a>
	     */String.prototype.trim = function(){ // this trim is not fully ES3 or ES5 compliant, but it should cover most cases for now
	return this.replace(/^[\s\xA0]+/,'').replace(/[\s\xA0]+$/,'');};} /* _ES5_COMPAT_END_ */ /**
	   * Camelizes a string
	   * @memberOf fabric.util.string
	   * @param {String} string String to camelize
	   * @return {String} Camelized version of a string
	   */function camelize(string){return string.replace(/-+(.)?/g,function(match,character){return character?character.toUpperCase():'';});} /**
	   * Capitalizes a string
	   * @memberOf fabric.util.string
	   * @param {String} string String to capitalize
	   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized
	   * and other letters stay untouched, if false first letter is capitalized
	   * and other letters are converted to lowercase.
	   * @return {String} Capitalized version of a string
	   */function capitalize(string,firstLetterOnly){return string.charAt(0).toUpperCase() + (firstLetterOnly?string.slice(1):string.slice(1).toLowerCase());} /**
	   * Escapes XML in a string
	   * @memberOf fabric.util.string
	   * @param {String} string String to escape
	   * @return {String} Escaped version of a string
	   */function escapeXml(string){return string.replace(/&/g,'&amp;').replace(/"/g,'&quot;').replace(/'/g,'&apos;').replace(/</g,'&lt;').replace(/>/g,'&gt;');} /**
	   * String utilities
	   * @namespace fabric.util.string
	   */fabric.util.string = {camelize:camelize,capitalize:capitalize,escapeXml:escapeXml};})(); /* _ES5_COMPAT_START_ */(function(){var slice=Array.prototype.slice,apply=Function.prototype.apply,Dummy=function Dummy(){};if(!Function.prototype.bind){ /**
	     * Cross-browser approximation of ES5 Function.prototype.bind (not fully spec conforming)
	     * @see <a href="https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind">Function#bind on MDN</a>
	     * @param {Object} thisArg Object to bind function to
	     * @param {Any[]} [...] Values to pass to a bound function
	     * @return {Function}
	     */Function.prototype.bind = function(thisArg){var _this=this,args=slice.call(arguments,1),bound;if(args.length){bound = function(){return apply.call(_this,this instanceof Dummy?this:thisArg,args.concat(slice.call(arguments)));};}else { /** @ignore */bound = function(){return apply.call(_this,this instanceof Dummy?this:thisArg,arguments);};}Dummy.prototype = this.prototype;bound.prototype = new Dummy();return bound;};}})(); /* _ES5_COMPAT_END_ */(function(){var slice=Array.prototype.slice,emptyFunction=function emptyFunction(){},IS_DONTENUM_BUGGY=(function(){for(var p in {toString:1}) {if(p === 'toString'){return false;}}return true;})(), /** @ignore */addMethods=function addMethods(klass,source,parent){for(var property in source) {if(property in klass.prototype && typeof klass.prototype[property] === 'function' && (source[property] + '').indexOf('callSuper') > -1){klass.prototype[property] = (function(property){return function(){var superclass=this.constructor.superclass;this.constructor.superclass = parent;var returnValue=source[property].apply(this,arguments);this.constructor.superclass = superclass;if(property !== 'initialize'){return returnValue;}};})(property);}else {klass.prototype[property] = source[property];}if(IS_DONTENUM_BUGGY){if(source.toString !== Object.prototype.toString){klass.prototype.toString = source.toString;}if(source.valueOf !== Object.prototype.valueOf){klass.prototype.valueOf = source.valueOf;}}}};function Subclass(){}function callSuper(methodName){var fn=this.constructor.superclass.prototype[methodName];return arguments.length > 1?fn.apply(this,slice.call(arguments,1)):fn.call(this);} /**
	   * Helper for creation of "classes".
	   * @memberOf fabric.util
	   * @param {Function} [parent] optional "Class" to inherit from
	   * @param {Object} [properties] Properties shared by all instances of this class
	   *                  (be careful modifying objects defined here as this would affect all instances)
	   */function createClass(){var parent=null,properties=slice.call(arguments,0);if(typeof properties[0] === 'function'){parent = properties.shift();}function klass(){this.initialize.apply(this,arguments);}klass.superclass = parent;klass.subclasses = [];if(parent){Subclass.prototype = parent.prototype;klass.prototype = new Subclass();parent.subclasses.push(klass);}for(var i=0,length=properties.length;i < length;i++) {addMethods(klass,properties[i],parent);}if(!klass.prototype.initialize){klass.prototype.initialize = emptyFunction;}klass.prototype.constructor = klass;klass.prototype.callSuper = callSuper;return klass;}fabric.util.createClass = createClass;})();(function(){var unknown='unknown'; /* EVENT HANDLING */function areHostMethods(object){var methodNames=Array.prototype.slice.call(arguments,1),t,i,len=methodNames.length;for(i = 0;i < len;i++) {t = typeof object[methodNames[i]];if(!/^(?:function|object|unknown)$/.test(t)){return false;}}return true;} /** @ignore */var getElement,setElement,getUniqueId=(function(){var uid=0;return function(element){return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);};})();(function(){var elements={}; /** @ignore */getElement = function(uid){return elements[uid];}; /** @ignore */setElement = function(uid,element){elements[uid] = element;};})();function createListener(uid,handler){return {handler:handler,wrappedHandler:createWrappedHandler(uid,handler)};}function createWrappedHandler(uid,handler){return function(e){handler.call(getElement(uid),e || fabric.window.event);};}function createDispatcher(uid,eventName){return function(e){if(handlers[uid] && handlers[uid][eventName]){var handlersForEvent=handlers[uid][eventName];for(var i=0,len=handlersForEvent.length;i < len;i++) {handlersForEvent[i].call(this,e || fabric.window.event);}}};}var shouldUseAddListenerRemoveListener=areHostMethods(fabric.document.documentElement,'addEventListener','removeEventListener') && areHostMethods(fabric.window,'addEventListener','removeEventListener'),shouldUseAttachEventDetachEvent=areHostMethods(fabric.document.documentElement,'attachEvent','detachEvent') && areHostMethods(fabric.window,'attachEvent','detachEvent'), // IE branch
	listeners={}, // DOM L0 branch
	handlers={},addListener,removeListener;if(shouldUseAddListenerRemoveListener){ /** @ignore */addListener = function(element,eventName,handler){element.addEventListener(eventName,handler,false);}; /** @ignore */removeListener = function(element,eventName,handler){element.removeEventListener(eventName,handler,false);};}else if(shouldUseAttachEventDetachEvent){ /** @ignore */addListener = function(element,eventName,handler){var uid=getUniqueId(element);setElement(uid,element);if(!listeners[uid]){listeners[uid] = {};}if(!listeners[uid][eventName]){listeners[uid][eventName] = [];}var listener=createListener(uid,handler);listeners[uid][eventName].push(listener);element.attachEvent('on' + eventName,listener.wrappedHandler);}; /** @ignore */removeListener = function(element,eventName,handler){var uid=getUniqueId(element),listener;if(listeners[uid] && listeners[uid][eventName]){for(var i=0,len=listeners[uid][eventName].length;i < len;i++) {listener = listeners[uid][eventName][i];if(listener && listener.handler === handler){element.detachEvent('on' + eventName,listener.wrappedHandler);listeners[uid][eventName][i] = null;}}}};}else { /** @ignore */addListener = function(element,eventName,handler){var uid=getUniqueId(element);if(!handlers[uid]){handlers[uid] = {};}if(!handlers[uid][eventName]){handlers[uid][eventName] = [];var existingHandler=element['on' + eventName];if(existingHandler){handlers[uid][eventName].push(existingHandler);}element['on' + eventName] = createDispatcher(uid,eventName);}handlers[uid][eventName].push(handler);}; /** @ignore */removeListener = function(element,eventName,handler){var uid=getUniqueId(element);if(handlers[uid] && handlers[uid][eventName]){var handlersForEvent=handlers[uid][eventName];for(var i=0,len=handlersForEvent.length;i < len;i++) {if(handlersForEvent[i] === handler){handlersForEvent.splice(i,1);}}}};} /**
	   * Adds an event listener to an element
	   * @function
	   * @memberOf fabric.util
	   * @param {HTMLElement} element
	   * @param {String} eventName
	   * @param {Function} handler
	   */fabric.util.addListener = addListener; /**
	   * Removes an event listener from an element
	   * @function
	   * @memberOf fabric.util
	   * @param {HTMLElement} element
	   * @param {String} eventName
	   * @param {Function} handler
	   */fabric.util.removeListener = removeListener; /**
	   * Cross-browser wrapper for getting event's coordinates
	   * @memberOf fabric.util
	   * @param {Event} event Event object
	   * @param {HTMLCanvasElement} upperCanvasEl &lt;canvas> element on which object selection is drawn
	   */function getPointer(event,upperCanvasEl){event || (event = fabric.window.event);var element=event.target || (typeof event.srcElement !== unknown?event.srcElement:null),scroll=fabric.util.getScrollLeftTop(element,upperCanvasEl);return {x:pointerX(event) + scroll.left,y:pointerY(event) + scroll.top};}var pointerX=function pointerX(event){ // looks like in IE (<9) clientX at certain point (apparently when mouseup fires on VML element)
	// is represented as COM object, with all the consequences, like "unknown" type and error on [[Get]]
	// need to investigate later
	return typeof event.clientX !== unknown?event.clientX:0;},pointerY=function pointerY(event){return typeof event.clientY !== unknown?event.clientY:0;};function _getPointer(event,pageProp,clientProp){var touchProp=event.type === 'touchend'?'changedTouches':'touches';return event[touchProp] && event[touchProp][0]?event[touchProp][0][pageProp] - (event[touchProp][0][pageProp] - event[touchProp][0][clientProp]) || event[clientProp]:event[clientProp];}if(fabric.isTouchSupported){pointerX = function(event){return _getPointer(event,'pageX','clientX');};pointerY = function(event){return _getPointer(event,'pageY','clientY');};}fabric.util.getPointer = getPointer;fabric.util.object.extend(fabric.util,fabric.Observable);})();(function(){ /**
	   * Cross-browser wrapper for setting element's style
	   * @memberOf fabric.util
	   * @param {HTMLElement} element
	   * @param {Object} styles
	   * @return {HTMLElement} Element that was passed as a first argument
	   */function setStyle(element,styles){var elementStyle=element.style;if(!elementStyle){return element;}if(typeof styles === 'string'){element.style.cssText += ';' + styles;return styles.indexOf('opacity') > -1?setOpacity(element,styles.match(/opacity:\s*(\d?\.?\d*)/)[1]):element;}for(var property in styles) {if(property === 'opacity'){setOpacity(element,styles[property]);}else {var normalizedProperty=property === 'float' || property === 'cssFloat'?typeof elementStyle.styleFloat === 'undefined'?'cssFloat':'styleFloat':property;elementStyle[normalizedProperty] = styles[property];}}return element;}var parseEl=fabric.document.createElement('div'),supportsOpacity=typeof parseEl.style.opacity === 'string',supportsFilters=typeof parseEl.style.filter === 'string',reOpacity=/alpha\s*\(\s*opacity\s*=\s*([^\)]+)\)/, /** @ignore */setOpacity=function setOpacity(element){return element;};if(supportsOpacity){ /** @ignore */setOpacity = function(element,value){element.style.opacity = value;return element;};}else if(supportsFilters){ /** @ignore */setOpacity = function(element,value){var es=element.style;if(element.currentStyle && !element.currentStyle.hasLayout){es.zoom = 1;}if(reOpacity.test(es.filter)){value = value >= 0.9999?'':'alpha(opacity=' + value * 100 + ')';es.filter = es.filter.replace(reOpacity,value);}else {es.filter += ' alpha(opacity=' + value * 100 + ')';}return element;};}fabric.util.setStyle = setStyle;})();(function(){var _slice=Array.prototype.slice; /**
	   * Takes id and returns an element with that id (if one exists in a document)
	   * @memberOf fabric.util
	   * @param {String|HTMLElement} id
	   * @return {HTMLElement|null}
	   */function getById(id){return typeof id === 'string'?fabric.document.getElementById(id):id;}var sliceCanConvertNodelists, /**
	       * Converts an array-like object (e.g. arguments or NodeList) to an array
	       * @memberOf fabric.util
	       * @param {Object} arrayLike
	       * @return {Array}
	       */toArray=function toArray(arrayLike){return _slice.call(arrayLike,0);};try{sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;}catch(err) {}if(!sliceCanConvertNodelists){toArray = function(arrayLike){var arr=new Array(arrayLike.length),i=arrayLike.length;while(i--) {arr[i] = arrayLike[i];}return arr;};} /**
	   * Creates specified element with specified attributes
	   * @memberOf fabric.util
	   * @param {String} tagName Type of an element to create
	   * @param {Object} [attributes] Attributes to set on an element
	   * @return {HTMLElement} Newly created element
	   */function makeElement(tagName,attributes){var el=fabric.document.createElement(tagName);for(var prop in attributes) {if(prop === 'class'){el.className = attributes[prop];}else if(prop === 'for'){el.htmlFor = attributes[prop];}else {el.setAttribute(prop,attributes[prop]);}}return el;} /**
	   * Adds class to an element
	   * @memberOf fabric.util
	   * @param {HTMLElement} element Element to add class to
	   * @param {String} className Class to add to an element
	   */function addClass(element,className){if(element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1){element.className += (element.className?' ':'') + className;}} /**
	   * Wraps element with another element
	   * @memberOf fabric.util
	   * @param {HTMLElement} element Element to wrap
	   * @param {HTMLElement|String} wrapper Element to wrap with
	   * @param {Object} [attributes] Attributes to set on a wrapper
	   * @return {HTMLElement} wrapper
	   */function wrapElement(element,wrapper,attributes){if(typeof wrapper === 'string'){wrapper = makeElement(wrapper,attributes);}if(element.parentNode){element.parentNode.replaceChild(wrapper,element);}wrapper.appendChild(element);return wrapper;} /**
	   * Returns element scroll offsets
	   * @memberOf fabric.util
	   * @param {HTMLElement} element Element to operate on
	   * @param {HTMLElement} upperCanvasEl Upper canvas element
	   * @return {Object} Object with left/top values
	   */function getScrollLeftTop(element,upperCanvasEl){var firstFixedAncestor,origElement,left=0,top=0,docElement=fabric.document.documentElement,body=fabric.document.body || {scrollLeft:0,scrollTop:0};origElement = element;while(element && element.parentNode && !firstFixedAncestor) {element = element.parentNode;if(element.nodeType === 1 && fabric.util.getElementStyle(element,'position') === 'fixed'){firstFixedAncestor = element;}if(element.nodeType === 1 && origElement !== upperCanvasEl && fabric.util.getElementStyle(element,'position') === 'absolute'){left = 0;top = 0;}else if(element === fabric.document){left = body.scrollLeft || docElement.scrollLeft || 0;top = body.scrollTop || docElement.scrollTop || 0;}else {left += element.scrollLeft || 0;top += element.scrollTop || 0;}}return {left:left,top:top};} /**
	   * Returns offset for a given element
	   * @function
	   * @memberOf fabric.util
	   * @param {HTMLElement} element Element to get offset for
	   * @return {Object} Object with "left" and "top" properties
	   */function getElementOffset(element){var docElem,doc=element && element.ownerDocument,box={left:0,top:0},offset={left:0,top:0},scrollLeftTop,offsetAttributes={borderLeftWidth:'left',borderTopWidth:'top',paddingLeft:'left',paddingTop:'top'};if(!doc){return {left:0,top:0};}for(var attr in offsetAttributes) {offset[offsetAttributes[attr]] += parseInt(getElementStyle(element,attr),10) || 0;}docElem = doc.documentElement;if(typeof element.getBoundingClientRect !== 'undefined'){box = element.getBoundingClientRect();}scrollLeftTop = fabric.util.getScrollLeftTop(element,null);return {left:box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,top:box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top};} /**
	  * Returns style attribute value of a given element
	  * @memberOf fabric.util
	  * @param {HTMLElement} element Element to get style attribute for
	  * @param {String} attr Style attribute to get for element
	  * @return {String} Style attribute value of the given element.
	  */var getElementStyle;if(fabric.document.defaultView && fabric.document.defaultView.getComputedStyle){getElementStyle = function(element,attr){var style=fabric.document.defaultView.getComputedStyle(element,null);return style?style[attr]:undefined;};}else {getElementStyle = function(element,attr){var value=element.style[attr];if(!value && element.currentStyle){value = element.currentStyle[attr];}return value;};}(function(){var style=fabric.document.documentElement.style,selectProp='userSelect' in style?'userSelect':'MozUserSelect' in style?'MozUserSelect':'WebkitUserSelect' in style?'WebkitUserSelect':'KhtmlUserSelect' in style?'KhtmlUserSelect':''; /**
	     * Makes element unselectable
	     * @memberOf fabric.util
	     * @param {HTMLElement} element Element to make unselectable
	     * @return {HTMLElement} Element that was passed in
	     */function makeElementUnselectable(element){if(typeof element.onselectstart !== 'undefined'){element.onselectstart = fabric.util.falseFunction;}if(selectProp){element.style[selectProp] = 'none';}else if(typeof element.unselectable === 'string'){element.unselectable = 'on';}return element;} /**
	     * Makes element selectable
	     * @memberOf fabric.util
	     * @param {HTMLElement} element Element to make selectable
	     * @return {HTMLElement} Element that was passed in
	     */function makeElementSelectable(element){if(typeof element.onselectstart !== 'undefined'){element.onselectstart = null;}if(selectProp){element.style[selectProp] = '';}else if(typeof element.unselectable === 'string'){element.unselectable = '';}return element;}fabric.util.makeElementUnselectable = makeElementUnselectable;fabric.util.makeElementSelectable = makeElementSelectable;})();(function(){ /**
	     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading
	     * @memberOf fabric.util
	     * @param {String} url URL of a script to load
	     * @param {Function} callback Callback to execute when script is finished loading
	     */function getScript(url,callback){var headEl=fabric.document.getElementsByTagName('head')[0],scriptEl=fabric.document.createElement('script'),loading=true; /** @ignore */scriptEl.onload =  /** @ignore */scriptEl.onreadystatechange = function(e){if(loading){if(typeof this.readyState === 'string' && this.readyState !== 'loaded' && this.readyState !== 'complete'){return;}loading = false;callback(e || fabric.window.event);scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;}};scriptEl.src = url;headEl.appendChild(scriptEl); // causes issue in Opera
	// headEl.removeChild(scriptEl);
	}fabric.util.getScript = getScript;})();fabric.util.getById = getById;fabric.util.toArray = toArray;fabric.util.makeElement = makeElement;fabric.util.addClass = addClass;fabric.util.wrapElement = wrapElement;fabric.util.getScrollLeftTop = getScrollLeftTop;fabric.util.getElementOffset = getElementOffset;fabric.util.getElementStyle = getElementStyle;})();(function(){function addParamToUrl(url,param){return url + (/\?/.test(url)?'&':'?') + param;}var makeXHR=(function(){var factories=[function(){return new ActiveXObject('Microsoft.XMLHTTP');},function(){return new ActiveXObject('Msxml2.XMLHTTP');},function(){return new ActiveXObject('Msxml2.XMLHTTP.3.0');},function(){return new XMLHttpRequest();}];for(var i=factories.length;i--;) {try{var req=factories[i]();if(req){return factories[i];}}catch(err) {}}})();function emptyFn(){} /**
	   * Cross-browser abstraction for sending XMLHttpRequest
	   * @memberOf fabric.util
	   * @param {String} url URL to send XMLHttpRequest to
	   * @param {Object} [options] Options object
	   * @param {String} [options.method="GET"]
	   * @param {Function} options.onComplete Callback to invoke when request is completed
	   * @return {XMLHttpRequest} request
	   */function request(url,options){options || (options = {});var method=options.method?options.method.toUpperCase():'GET',onComplete=options.onComplete || function(){},xhr=makeXHR(),body; /** @ignore */xhr.onreadystatechange = function(){if(xhr.readyState === 4){onComplete(xhr);xhr.onreadystatechange = emptyFn;}};if(method === 'GET'){body = null;if(typeof options.parameters === 'string'){url = addParamToUrl(url,options.parameters);}}xhr.open(method,url,true);if(method === 'POST' || method === 'PUT'){xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');}xhr.send(body);return xhr;}fabric.util.request = request;})(); /**
	 * Wrapper around `console.log` (when available)
	 * @param {Any} [values] Values to log
	 */fabric.log = function(){}; /**
	 * Wrapper around `console.warn` (when available)
	 * @param {Any} [values] Values to log as a warning
	 */fabric.warn = function(){};if(typeof console !== 'undefined'){['log','warn'].forEach(function(methodName){if(typeof console[methodName] !== 'undefined' && typeof console[methodName].apply === 'function'){fabric[methodName] = function(){return console[methodName].apply(console,arguments);};}});}(function(){ /**
	   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.
	   * @memberOf fabric.util
	   * @param {Object} [options] Animation options
	   * @param {Function} [options.onChange] Callback; invoked on every value change
	   * @param {Function} [options.onComplete] Callback; invoked when value change is completed
	   * @param {Number} [options.startValue=0] Starting value
	   * @param {Number} [options.endValue=100] Ending value
	   * @param {Number} [options.byValue=100] Value to modify the property by
	   * @param {Function} [options.easing] Easing function
	   * @param {Number} [options.duration=500] Duration of change (in ms)
	   */function animate(options){requestAnimFrame(function(timestamp){options || (options = {});var start=timestamp || +new Date(),duration=options.duration || 500,finish=start + duration,time,onChange=options.onChange || function(){},abort=options.abort || function(){return false;},easing=options.easing || function(t,b,c,d){return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},startValue='startValue' in options?options.startValue:0,endValue='endValue' in options?options.endValue:100,byValue=options.byValue || endValue - startValue;options.onStart && options.onStart();(function tick(ticktime){time = ticktime || +new Date();var currentTime=time > finish?duration:time - start;if(abort()){options.onComplete && options.onComplete();return;}onChange(easing(currentTime,startValue,byValue,duration));if(time > finish){options.onComplete && options.onComplete();return;}requestAnimFrame(tick);})(start);});}var _requestAnimFrame=fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function(callback){fabric.window.setTimeout(callback,1000 / 60);}; /**
	    * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/
	    * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method
	    * @memberOf fabric.util
	    * @param {Function} callback Callback to invoke
	    * @param {DOMElement} element optional Element to associate with animation
	    */function requestAnimFrame(){return _requestAnimFrame.apply(fabric.window,arguments);}fabric.util.animate = animate;fabric.util.requestAnimFrame = requestAnimFrame;})();(function(){function normalize(a,c,p,s){if(a < Math.abs(c)){a = c;s = p / 4;}else {s = p / (2 * Math.PI) * Math.asin(c / a);}return {a:a,c:c,p:p,s:s};}function elastic(opts,t,d){return opts.a * Math.pow(2,10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p);} /**
	   * Cubic easing out
	   * @memberOf fabric.util.ease
	   */function easeOutCubic(t,b,c,d){return c * ((t = t / d - 1) * t * t + 1) + b;} /**
	   * Cubic easing in and out
	   * @memberOf fabric.util.ease
	   */function easeInOutCubic(t,b,c,d){t /= d / 2;if(t < 1){return c / 2 * t * t * t + b;}return c / 2 * ((t -= 2) * t * t + 2) + b;} /**
	   * Quartic easing in
	   * @memberOf fabric.util.ease
	   */function easeInQuart(t,b,c,d){return c * (t /= d) * t * t * t + b;} /**
	   * Quartic easing out
	   * @memberOf fabric.util.ease
	   */function easeOutQuart(t,b,c,d){return -c * ((t = t / d - 1) * t * t * t - 1) + b;} /**
	   * Quartic easing in and out
	   * @memberOf fabric.util.ease
	   */function easeInOutQuart(t,b,c,d){t /= d / 2;if(t < 1){return c / 2 * t * t * t * t + b;}return -c / 2 * ((t -= 2) * t * t * t - 2) + b;} /**
	   * Quintic easing in
	   * @memberOf fabric.util.ease
	   */function easeInQuint(t,b,c,d){return c * (t /= d) * t * t * t * t + b;} /**
	   * Quintic easing out
	   * @memberOf fabric.util.ease
	   */function easeOutQuint(t,b,c,d){return c * ((t = t / d - 1) * t * t * t * t + 1) + b;} /**
	   * Quintic easing in and out
	   * @memberOf fabric.util.ease
	   */function easeInOutQuint(t,b,c,d){t /= d / 2;if(t < 1){return c / 2 * t * t * t * t * t + b;}return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;} /**
	   * Sinusoidal easing in
	   * @memberOf fabric.util.ease
	   */function easeInSine(t,b,c,d){return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;} /**
	   * Sinusoidal easing out
	   * @memberOf fabric.util.ease
	   */function easeOutSine(t,b,c,d){return c * Math.sin(t / d * (Math.PI / 2)) + b;} /**
	   * Sinusoidal easing in and out
	   * @memberOf fabric.util.ease
	   */function easeInOutSine(t,b,c,d){return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;} /**
	   * Exponential easing in
	   * @memberOf fabric.util.ease
	   */function easeInExpo(t,b,c,d){return t === 0?b:c * Math.pow(2,10 * (t / d - 1)) + b;} /**
	   * Exponential easing out
	   * @memberOf fabric.util.ease
	   */function easeOutExpo(t,b,c,d){return t === d?b + c:c * (-Math.pow(2,-10 * t / d) + 1) + b;} /**
	   * Exponential easing in and out
	   * @memberOf fabric.util.ease
	   */function easeInOutExpo(t,b,c,d){if(t === 0){return b;}if(t === d){return b + c;}t /= d / 2;if(t < 1){return c / 2 * Math.pow(2,10 * (t - 1)) + b;}return c / 2 * (-Math.pow(2,-10 * --t) + 2) + b;} /**
	   * Circular easing in
	   * @memberOf fabric.util.ease
	   */function easeInCirc(t,b,c,d){return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;} /**
	   * Circular easing out
	   * @memberOf fabric.util.ease
	   */function easeOutCirc(t,b,c,d){return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;} /**
	   * Circular easing in and out
	   * @memberOf fabric.util.ease
	   */function easeInOutCirc(t,b,c,d){t /= d / 2;if(t < 1){return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;}return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;} /**
	   * Elastic easing in
	   * @memberOf fabric.util.ease
	   */function easeInElastic(t,b,c,d){var s=1.70158,p=0,a=c;if(t === 0){return b;}t /= d;if(t === 1){return b + c;}if(!p){p = d * 0.3;}var opts=normalize(a,c,p,s);return -elastic(opts,t,d) + b;} /**
	   * Elastic easing out
	   * @memberOf fabric.util.ease
	   */function easeOutElastic(t,b,c,d){var s=1.70158,p=0,a=c;if(t === 0){return b;}t /= d;if(t === 1){return b + c;}if(!p){p = d * 0.3;}var opts=normalize(a,c,p,s);return opts.a * Math.pow(2,-10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) + opts.c + b;} /**
	   * Elastic easing in and out
	   * @memberOf fabric.util.ease
	   */function easeInOutElastic(t,b,c,d){var s=1.70158,p=0,a=c;if(t === 0){return b;}t /= d / 2;if(t === 2){return b + c;}if(!p){p = d * (0.3 * 1.5);}var opts=normalize(a,c,p,s);if(t < 1){return -0.5 * elastic(opts,t,d) + b;}return opts.a * Math.pow(2,-10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) * 0.5 + opts.c + b;} /**
	   * Backwards easing in
	   * @memberOf fabric.util.ease
	   */function easeInBack(t,b,c,d,s){if(s === undefined){s = 1.70158;}return c * (t /= d) * t * ((s + 1) * t - s) + b;} /**
	   * Backwards easing out
	   * @memberOf fabric.util.ease
	   */function easeOutBack(t,b,c,d,s){if(s === undefined){s = 1.70158;}return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;} /**
	   * Backwards easing in and out
	   * @memberOf fabric.util.ease
	   */function easeInOutBack(t,b,c,d,s){if(s === undefined){s = 1.70158;}t /= d / 2;if(t < 1){return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;}return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;} /**
	   * Bouncing easing in
	   * @memberOf fabric.util.ease
	   */function easeInBounce(t,b,c,d){return c - easeOutBounce(d - t,0,c,d) + b;} /**
	   * Bouncing easing out
	   * @memberOf fabric.util.ease
	   */function easeOutBounce(t,b,c,d){if((t /= d) < 1 / 2.75){return c * (7.5625 * t * t) + b;}else if(t < 2 / 2.75){return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;}else if(t < 2.5 / 2.75){return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;}else {return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;}} /**
	   * Bouncing easing in and out
	   * @memberOf fabric.util.ease
	   */function easeInOutBounce(t,b,c,d){if(t < d / 2){return easeInBounce(t * 2,0,c,d) * 0.5 + b;}return easeOutBounce(t * 2 - d,0,c,d) * 0.5 + c * 0.5 + b;} /**
	   * Easing functions
	   * See <a href="http://gizma.com/easing/">Easing Equations by Robert Penner</a>
	   * @namespace fabric.util.ease
	   */fabric.util.ease = { /**
	     * Quadratic easing in
	     * @memberOf fabric.util.ease
	     */easeInQuad:function easeInQuad(t,b,c,d){return c * (t /= d) * t + b;}, /**
	     * Quadratic easing out
	     * @memberOf fabric.util.ease
	     */easeOutQuad:function easeOutQuad(t,b,c,d){return -c * (t /= d) * (t - 2) + b;}, /**
	     * Quadratic easing in and out
	     * @memberOf fabric.util.ease
	     */easeInOutQuad:function easeInOutQuad(t,b,c,d){t /= d / 2;if(t < 1){return c / 2 * t * t + b;}return -c / 2 * (--t * (t - 2) - 1) + b;}, /**
	     * Cubic easing in
	     * @memberOf fabric.util.ease
	     */easeInCubic:function easeInCubic(t,b,c,d){return c * (t /= d) * t * t + b;},easeOutCubic:easeOutCubic,easeInOutCubic:easeInOutCubic,easeInQuart:easeInQuart,easeOutQuart:easeOutQuart,easeInOutQuart:easeInOutQuart,easeInQuint:easeInQuint,easeOutQuint:easeOutQuint,easeInOutQuint:easeInOutQuint,easeInSine:easeInSine,easeOutSine:easeOutSine,easeInOutSine:easeInOutSine,easeInExpo:easeInExpo,easeOutExpo:easeOutExpo,easeInOutExpo:easeInOutExpo,easeInCirc:easeInCirc,easeOutCirc:easeOutCirc,easeInOutCirc:easeInOutCirc,easeInElastic:easeInElastic,easeOutElastic:easeOutElastic,easeInOutElastic:easeInOutElastic,easeInBack:easeInBack,easeOutBack:easeOutBack,easeInOutBack:easeInOutBack,easeInBounce:easeInBounce,easeOutBounce:easeOutBounce,easeInOutBounce:easeInOutBounce};})();(function(global){'use strict'; /**
	   * @name fabric
	   * @namespace
	   */var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend,capitalize=fabric.util.string.capitalize,clone=fabric.util.object.clone,toFixed=fabric.util.toFixed,parseUnit=fabric.util.parseUnit,multiplyTransformMatrices=fabric.util.multiplyTransformMatrices,attributesMap={cx:'left',x:'left',r:'radius',cy:'top',y:'top',display:'visible',visibility:'visible',transform:'transformMatrix','fill-opacity':'fillOpacity','fill-rule':'fillRule','font-family':'fontFamily','font-size':'fontSize','font-style':'fontStyle','font-weight':'fontWeight','stroke-dasharray':'strokeDashArray','stroke-linecap':'strokeLineCap','stroke-linejoin':'strokeLineJoin','stroke-miterlimit':'strokeMiterLimit','stroke-opacity':'strokeOpacity','stroke-width':'strokeWidth','text-decoration':'textDecoration','text-anchor':'originX'},colorAttributes={stroke:'strokeOpacity',fill:'fillOpacity'};fabric.cssRules = {};fabric.gradientDefs = {};function normalizeAttr(attr){ // transform attribute names
	if(attr in attributesMap){return attributesMap[attr];}return attr;}function normalizeValue(attr,value,parentAttributes,fontSize){var isArray=Object.prototype.toString.call(value) === '[object Array]',parsed;if((attr === 'fill' || attr === 'stroke') && value === 'none'){value = '';}else if(attr === 'strokeDashArray'){value = value.replace(/,/g,' ').split(/\s+/).map(function(n){return parseFloat(n);});}else if(attr === 'transformMatrix'){if(parentAttributes && parentAttributes.transformMatrix){value = multiplyTransformMatrices(parentAttributes.transformMatrix,fabric.parseTransformAttribute(value));}else {value = fabric.parseTransformAttribute(value);}}else if(attr === 'visible'){value = value === 'none' || value === 'hidden'?false:true; // display=none on parent element always takes precedence over child element
	if(parentAttributes && parentAttributes.visible === false){value = false;}}else if(attr === 'originX' /* text-anchor */){value = value === 'start'?'left':value === 'end'?'right':'center';}else {parsed = isArray?value.map(parseUnit):parseUnit(value,fontSize);}return !isArray && isNaN(parsed)?value:parsed;} /**
	   * @private
	   * @param {Object} attributes Array of attributes to parse
	   */function _setStrokeFillOpacity(attributes){for(var attr in colorAttributes) {if(!attributes[attr] || typeof attributes[colorAttributes[attr]] === 'undefined'){continue;}if(attributes[attr].indexOf('url(') === 0){continue;}var color=new fabric.Color(attributes[attr]);attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]],2)).toRgba();}return attributes;} /**
	   * Parses "transform" attribute, returning an array of values
	   * @static
	   * @function
	   * @memberOf fabric
	   * @param {String} attributeValue String containing attribute value
	   * @return {Array} Array of 6 elements representing transformation matrix
	   */fabric.parseTransformAttribute = (function(){function rotateMatrix(matrix,args){var angle=args[0];matrix[0] = Math.cos(angle);matrix[1] = Math.sin(angle);matrix[2] = -Math.sin(angle);matrix[3] = Math.cos(angle);}function scaleMatrix(matrix,args){var multiplierX=args[0],multiplierY=args.length === 2?args[1]:args[0];matrix[0] = multiplierX;matrix[3] = multiplierY;}function skewXMatrix(matrix,args){matrix[2] = Math.tan(fabric.util.degreesToRadians(args[0]));}function skewYMatrix(matrix,args){matrix[1] = Math.tan(fabric.util.degreesToRadians(args[0]));}function translateMatrix(matrix,args){matrix[4] = args[0];if(args.length === 2){matrix[5] = args[1];}} // identity matrix
	var iMatrix=[1, // a
	0, // b
	0, // c
	1, // d
	0, // e
	0 // f
	], // == begin transform regexp
	number=fabric.reNum,commaWsp='(?:\\s+,?\\s*|,\\s*)',skewX='(?:(skewX)\\s*\\(\\s*(' + number + ')\\s*\\))',skewY='(?:(skewY)\\s*\\(\\s*(' + number + ')\\s*\\))',rotate='(?:(rotate)\\s*\\(\\s*(' + number + ')(?:' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + '))?\\s*\\))',scale='(?:(scale)\\s*\\(\\s*(' + number + ')(?:' + commaWsp + '(' + number + '))?\\s*\\))',translate='(?:(translate)\\s*\\(\\s*(' + number + ')(?:' + commaWsp + '(' + number + '))?\\s*\\))',matrix='(?:(matrix)\\s*\\(\\s*' + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + '\\s*\\))',transform='(?:' + matrix + '|' + translate + '|' + scale + '|' + rotate + '|' + skewX + '|' + skewY + ')',transforms='(?:' + transform + '(?:' + commaWsp + transform + ')*' + ')',transformList='^\\s*(?:' + transforms + '?)\\s*$', // http://www.w3.org/TR/SVG/coords.html#TransformAttribute
	reTransformList=new RegExp(transformList), // == end transform regexp
	reTransform=new RegExp(transform,'g');return function(attributeValue){ // start with identity matrix
	var matrix=iMatrix.concat(),matrices=[]; // return if no argument was given or
	// an argument does not match transform attribute regexp
	if(!attributeValue || attributeValue && !reTransformList.test(attributeValue)){return matrix;}attributeValue.replace(reTransform,function(match){var m=new RegExp(transform).exec(match).filter(function(match){return match !== '' && match != null;}),operation=m[1],args=m.slice(2).map(parseFloat);switch(operation){case 'translate':translateMatrix(matrix,args);break;case 'rotate':args[0] = fabric.util.degreesToRadians(args[0]);rotateMatrix(matrix,args);break;case 'scale':scaleMatrix(matrix,args);break;case 'skewX':skewXMatrix(matrix,args);break;case 'skewY':skewYMatrix(matrix,args);break;case 'matrix':matrix = args;break;} // snapshot current matrix into matrices array
	matrices.push(matrix.concat()); // reset
	matrix = iMatrix.concat();});var combinedMatrix=matrices[0];while(matrices.length > 1) {matrices.shift();combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix,matrices[0]);}return combinedMatrix;};})(); /**
	   * @private
	   */function parseStyleString(style,oStyle){var attr,value;style.replace(/;$/,'').split(';').forEach(function(chunk){var pair=chunk.split(':');attr = normalizeAttr(pair[0].trim().toLowerCase());value = normalizeValue(attr,pair[1].trim());oStyle[attr] = value;});} /**
	   * @private
	   */function parseStyleObject(style,oStyle){var attr,value;for(var prop in style) {if(typeof style[prop] === 'undefined'){continue;}attr = normalizeAttr(prop.toLowerCase());value = normalizeValue(attr,style[prop]);oStyle[attr] = value;}} /**
	   * @private
	   */function getGlobalStylesForElement(element,svgUid){var styles={};for(var rule in fabric.cssRules[svgUid]) {if(elementMatchesRule(element,rule.split(' '))){for(var property in fabric.cssRules[svgUid][rule]) {styles[property] = fabric.cssRules[svgUid][rule][property];}}}return styles;} /**
	   * @private
	   */function elementMatchesRule(element,selectors){var firstMatching,parentMatching=true; //start from rightmost selector.
	firstMatching = selectorMatches(element,selectors.pop());if(firstMatching && selectors.length){parentMatching = doesSomeParentMatch(element,selectors);}return firstMatching && parentMatching && selectors.length === 0;}function doesSomeParentMatch(element,selectors){var selector,parentMatching=true;while(element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {if(parentMatching){selector = selectors.pop();}element = element.parentNode;parentMatching = selectorMatches(element,selector);}return selectors.length === 0;} /**
	   * @private
	   */function selectorMatches(element,selector){var nodeName=element.nodeName,classNames=element.getAttribute('class'),id=element.getAttribute('id'),matcher; // i check if a selector matches slicing away part from it.
	// if i get empty string i should match
	matcher = new RegExp('^' + nodeName,'i');selector = selector.replace(matcher,'');if(id && selector.length){matcher = new RegExp('#' + id + '(?![a-zA-Z\\-]+)','i');selector = selector.replace(matcher,'');}if(classNames && selector.length){classNames = classNames.split(' ');for(var i=classNames.length;i--;) {matcher = new RegExp('\\.' + classNames[i] + '(?![a-zA-Z\\-]+)','i');selector = selector.replace(matcher,'');}}return selector.length === 0;} /**
	   * @private
	   */function parseUseDirectives(doc){var nodelist=doc.getElementsByTagName('use');while(nodelist.length) {var el=nodelist[0],xlink=el.getAttribute('xlink:href').substr(1),x=el.getAttribute('x') || 0,y=el.getAttribute('y') || 0,el2=doc.getElementById(xlink).cloneNode(true),currentTrans=(el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',parentNode;for(var j=0,attrs=el.attributes,l=attrs.length;j < l;j++) {var attr=attrs.item(j);if(attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href'){continue;}if(attr.nodeName === 'transform'){currentTrans = attr.nodeValue + ' ' + currentTrans;}else {el2.setAttribute(attr.nodeName,attr.nodeValue);}}el2.setAttribute('transform',currentTrans);el2.setAttribute('instantiated_by_use','1');el2.removeAttribute('id');parentNode = el.parentNode;parentNode.replaceChild(el2,el);}} // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute
	// matches, e.g.: +14.56e-12, etc.
	var reViewBoxAttrValue=new RegExp('^' + '\\s*(' + fabric.reNum + '+)\\s*,?' + '\\s*(' + fabric.reNum + '+)\\s*,?' + '\\s*(' + fabric.reNum + '+)\\s*,?' + '\\s*(' + fabric.reNum + '+)\\s*' + '$'); /**
	   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements
	   */function addVBTransform(element,widthAttr,heightAttr){var viewBoxAttr=element.getAttribute('viewBox'),scaleX=1,scaleY=1,minX=0,minY=0,viewBoxWidth,viewBoxHeight,matrix,el;if(viewBoxAttr && (viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))){minX = -parseFloat(viewBoxAttr[1]),minY = -parseFloat(viewBoxAttr[2]),viewBoxWidth = parseFloat(viewBoxAttr[3]),viewBoxHeight = parseFloat(viewBoxAttr[4]);}else {return;}if(widthAttr && widthAttr !== viewBoxWidth){scaleX = widthAttr / viewBoxWidth;}if(heightAttr && heightAttr !== viewBoxHeight){scaleY = heightAttr / viewBoxHeight;} // default is to preserve aspect ratio
	// preserveAspectRatio attribute to be implemented
	scaleY = scaleX = scaleX > scaleY?scaleY:scaleX;if(!(scaleX !== 1 || scaleY !== 1 || minX !== 0 || minY !== 0)){return;}matrix = ' matrix(' + scaleX + ' 0' + ' 0 ' + scaleY + ' ' + minX * scaleX + ' ' + minY * scaleY + ') ';if(element.tagName === 'svg'){el = element.ownerDocument.createElement('g');while(element.firstChild != null) {el.appendChild(element.firstChild);}element.appendChild(el);}else {el = element;matrix = el.getAttribute('transform') + matrix;}el.setAttribute('transform',matrix);} /**
	   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback
	   * @static
	   * @function
	   * @memberOf fabric
	   * @param {SVGDocument} doc SVG document to parse
	   * @param {Function} callback Callback to call when parsing is finished; It's being passed an array of elements (parsed from a document).
	   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
	   */fabric.parseSVGDocument = (function(){var reAllowedSVGTagNames=/^(path|circle|polygon|polyline|ellipse|rect|line|image|text)$/,reViewBoxTagNames=/^(symbol|image|marker|pattern|view)$/;function hasAncestorWithNodeName(element,nodeName){while(element && (element = element.parentNode)) {if(nodeName.test(element.nodeName) && !element.getAttribute('instantiated_by_use')){return true;}}return false;}return function(doc,callback,reviver){if(!doc){return;}parseUseDirectives(doc);var startTime=new Date(),svgUid=fabric.Object.__uid++,widthAttr,heightAttr,toBeParsed=false;if(doc.getAttribute('width') && doc.getAttribute('width') !== '100%'){widthAttr = parseUnit(doc.getAttribute('width'));}if(doc.getAttribute('height') && doc.getAttribute('height') !== '100%'){heightAttr = parseUnit(doc.getAttribute('height'));}if(!widthAttr || !heightAttr){var viewBoxAttr=doc.getAttribute('viewBox');if(viewBoxAttr && (viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))){widthAttr = parseFloat(viewBoxAttr[3]),heightAttr = parseFloat(viewBoxAttr[4]);}else {toBeParsed = true;}}addVBTransform(doc,widthAttr,heightAttr);var descendants=fabric.util.toArray(doc.getElementsByTagName('*'));if(descendants.length === 0 && fabric.isLikelyNode){ // we're likely in node, where "o3-xml" library fails to gEBTN("*")
	// https://github.com/ajaxorg/node-o3-xml/issues/21
	descendants = doc.selectNodes('//*[name(.)!="svg"]');var arr=[];for(var i=0,len=descendants.length;i < len;i++) {arr[i] = descendants[i];}descendants = arr;}var elements=descendants.filter(function(el){reViewBoxTagNames.test(el.tagName) && addVBTransform(el,0,0);return reAllowedSVGTagNames.test(el.tagName) && !hasAncestorWithNodeName(el,/^(?:pattern|defs|symbol)$/); // http://www.w3.org/TR/SVG/struct.html#DefsElement
	});if(!elements || elements && !elements.length){callback && callback([],{});return;}var options={width:widthAttr,height:heightAttr,svgUid:svgUid,toBeParsed:toBeParsed};fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);fabric.cssRules[svgUid] = fabric.getCSSRules(doc); // Precedence of rules:   style > class > attribute
	fabric.parseElements(elements,function(instances){fabric.documentParsingTime = new Date() - startTime;if(callback){callback(instances,options);}},clone(options),reviver);};})(); /**
	   * Used for caching SVG documents (loaded via `fabric.Canvas#loadSVGFromURL`)
	   * @namespace
	   */var svgCache={ /**
	    * @param {String} name
	    * @param {Function} callback
	    */has:function has(name,callback){callback(false);},get:function get(){ /* NOOP */},set:function set(){ /* NOOP */}}; /**
	   * @private
	   */function _enlivenCachedObject(cachedObject){var objects=cachedObject.objects,options=cachedObject.options;objects = objects.map(function(o){return fabric[capitalize(o.type)].fromObject(o);});return {objects:objects,options:options};} /**
	   * @private
	   */function _createSVGPattern(markup,canvas,property){if(canvas[property] && canvas[property].toSVG){markup.push('<pattern x="0" y="0" id="',property,'Pattern" ','width="',canvas[property].source.width,'" height="',canvas[property].source.height,'" patternUnits="userSpaceOnUse">','<image x="0" y="0" ','width="',canvas[property].source.width,'" height="',canvas[property].source.height,'" xlink:href="',canvas[property].source.src,'"></image></pattern>');}}var reFontDeclaration=new RegExp('(normal|italic)?\\s*(normal|small-caps)?\\s*' + '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\s*(' + fabric.reNum + '(?:px|cm|mm|em|pt|pc|in)*)(?:\\/(normal|' + fabric.reNum + '))?\\s+(.*)');extend(fabric,{ /**
	     * Parses a short font declaration, building adding its properties to a style object
	     * @static
	     * @function
	     * @memberOf fabric
	     * @param {String} value font declaration
	     * @param {Object} oStyle definition
	     */parseFontDeclaration:function parseFontDeclaration(value,oStyle){var match=value.match(reFontDeclaration);if(!match){return;}var fontStyle=match[1], // font variant is not used
	// fontVariant = match[2],
	fontWeight=match[3],fontSize=match[4],lineHeight=match[5],fontFamily=match[6];if(fontStyle){oStyle.fontStyle = fontStyle;}if(fontWeight){oStyle.fontWeight = isNaN(parseFloat(fontWeight))?fontWeight:parseFloat(fontWeight);}if(fontSize){oStyle.fontSize = parseUnit(fontSize);}if(fontFamily){oStyle.fontFamily = fontFamily;}if(lineHeight){oStyle.lineHeight = lineHeight === 'normal'?1:lineHeight;}}, /**
	     * Parses an SVG document, returning all of the gradient declarations found in it
	     * @static
	     * @function
	     * @memberOf fabric
	     * @param {SVGDocument} doc SVG document to parse
	     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element
	     */getGradientDefs:function getGradientDefs(doc){var linearGradientEls=doc.getElementsByTagName('linearGradient'),radialGradientEls=doc.getElementsByTagName('radialGradient'),el,i,j=0,id,xlink,elList=[],gradientDefs={},idsToXlinkMap={};elList.length = linearGradientEls.length + radialGradientEls.length;i = linearGradientEls.length;while(i--) {elList[j++] = linearGradientEls[i];}i = radialGradientEls.length;while(i--) {elList[j++] = radialGradientEls[i];}while(j--) {el = elList[j];xlink = el.getAttribute('xlink:href');id = el.getAttribute('id');if(xlink){idsToXlinkMap[id] = xlink.substr(1);}gradientDefs[id] = el;}for(id in idsToXlinkMap) {var el2=gradientDefs[idsToXlinkMap[id]].cloneNode(true);el = gradientDefs[id];while(el2.firstChild) {el.appendChild(el2.firstChild);}}return gradientDefs;}, /**
	     * Returns an object of attributes' name/value, given element and an array of attribute names;
	     * Parses parent "g" nodes recursively upwards.
	     * @static
	     * @memberOf fabric
	     * @param {DOMElement} element Element to parse
	     * @param {Array} attributes Array of attributes to parse
	     * @return {Object} object containing parsed attributes' names/values
	     */parseAttributes:function parseAttributes(element,attributes,svgUid){if(!element){return;}var value,parentAttributes={},fontSize;if(typeof svgUid === 'undefined'){svgUid = element.getAttribute('svgUid');} // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards
	if(element.parentNode && /^symbol|[g|a]$/i.test(element.parentNode.nodeName)){parentAttributes = fabric.parseAttributes(element.parentNode,attributes,svgUid);}fontSize = parentAttributes && parentAttributes.fontSize || element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;var ownAttributes=attributes.reduce(function(memo,attr){value = element.getAttribute(attr);if(value){attr = normalizeAttr(attr);value = normalizeValue(attr,value,parentAttributes,fontSize);memo[attr] = value;}return memo;},{}); // add values parsed from style, which take precedence over attributes
	// (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)
	ownAttributes = extend(ownAttributes,extend(getGlobalStylesForElement(element,svgUid),fabric.parseStyleAttribute(element)));if(ownAttributes.font){fabric.parseFontDeclaration(ownAttributes.font,ownAttributes);}return _setStrokeFillOpacity(extend(parentAttributes,ownAttributes));}, /**
	     * Transforms an array of svg elements to corresponding fabric.* instances
	     * @static
	     * @memberOf fabric
	     * @param {Array} elements Array of elements to parse
	     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)
	     * @param {Object} [options] Options object
	     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
	     */parseElements:function parseElements(elements,callback,options,reviver){new fabric.ElementsParser(elements,callback,options,reviver).parse();}, /**
	     * Parses "style" attribute, retuning an object with values
	     * @static
	     * @memberOf fabric
	     * @param {SVGElement} element Element to parse
	     * @return {Object} Objects with values parsed from style attribute of an element
	     */parseStyleAttribute:function parseStyleAttribute(element){var oStyle={},style=element.getAttribute('style');if(!style){return oStyle;}if(typeof style === 'string'){parseStyleString(style,oStyle);}else {parseStyleObject(style,oStyle);}return oStyle;}, /**
	     * Parses "points" attribute, returning an array of values
	     * @static
	     * @memberOf fabric
	     * @param {String} points points attribute string
	     * @return {Array} array of points
	     */parsePointsAttribute:function parsePointsAttribute(points){ // points attribute is required and must not be empty
	if(!points){return null;} // replace commas with whitespace and remove bookending whitespace
	points = points.replace(/,/g,' ').trim();points = points.split(/\s+/);var parsedPoints=[],i,len;i = 0;len = points.length;for(;i < len;i += 2) {parsedPoints.push({x:parseFloat(points[i]),y:parseFloat(points[i + 1])});} // odd number of points is an error
	// if (parsedPoints.length % 2 !== 0) {
	//   return null;
	// }
	return parsedPoints;}, /**
	     * Returns CSS rules for a given SVG document
	     * @static
	     * @function
	     * @memberOf fabric
	     * @param {SVGDocument} doc SVG document to parse
	     * @return {Object} CSS rules of this document
	     */getCSSRules:function getCSSRules(doc){var styles=doc.getElementsByTagName('style'),allRules={},rules; // very crude parsing of style contents
	for(var i=0,len=styles.length;i < len;i++) {var styleContents=styles[i].textContent; // remove comments
	styleContents = styleContents.replace(/\/\*[\s\S]*?\*\//g,'');if(styleContents.trim() === ''){continue;}rules = styleContents.match(/[^{]*\{[\s\S]*?\}/g);rules = rules.map(function(rule){return rule.trim();});rules.forEach(function(rule){var match=rule.match(/([\s\S]*?)\s*\{([^}]*)\}/),ruleObj={},declaration=match[2].trim(),propertyValuePairs=declaration.replace(/;$/,'').split(/\s*;\s*/);for(var i=0,len=propertyValuePairs.length;i < len;i++) {var pair=propertyValuePairs[i].split(/\s*:\s*/),property=normalizeAttr(pair[0]),value=normalizeValue(property,pair[1],pair[0]);ruleObj[property] = value;}rule = match[1];rule.split(',').forEach(function(_rule){_rule = _rule.replace(/^svg/i,'').trim();if(_rule === ''){return;}allRules[_rule] = fabric.util.object.clone(ruleObj);});});}return allRules;}, /**
	     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects. Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)
	     * @memberof fabric
	     * @param {String} url
	     * @param {Function} callback
	     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
	     */loadSVGFromURL:function loadSVGFromURL(url,callback,reviver){url = url.replace(/^\n\s*/,'').trim();svgCache.has(url,function(hasUrl){if(hasUrl){svgCache.get(url,function(value){var enlivedRecord=_enlivenCachedObject(value);callback(enlivedRecord.objects,enlivedRecord.options);});}else {new fabric.util.request(url,{method:'get',onComplete:onComplete});}});function onComplete(r){var xml=r.responseXML;if(xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText){xml = new ActiveXObject('Microsoft.XMLDOM');xml.async = 'false'; //IE chokes on DOCTYPE
	xml.loadXML(r.responseText.replace(/<!DOCTYPE[\s\S]*?(\[[\s\S]*\])*?>/i,''));}if(!xml || !xml.documentElement){return;}fabric.parseSVGDocument(xml.documentElement,function(results,options){svgCache.set(url,{objects:fabric.util.array.invoke(results,'toObject'),options:options});callback(results,options);},reviver);}}, /**
	     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects
	     * @memberof fabric
	     * @param {String} string
	     * @param {Function} callback
	     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.
	     */loadSVGFromString:function loadSVGFromString(string,callback,reviver){string = string.trim();var doc;if(typeof DOMParser !== 'undefined'){var parser=new DOMParser();if(parser && parser.parseFromString){doc = parser.parseFromString(string,'text/xml');}}else if(fabric.window.ActiveXObject){doc = new ActiveXObject('Microsoft.XMLDOM');doc.async = 'false'; // IE chokes on DOCTYPE
	doc.loadXML(string.replace(/<!DOCTYPE[\s\S]*?(\[[\s\S]*\])*?>/i,''));}fabric.parseSVGDocument(doc.documentElement,function(results,options){callback(results,options);},reviver);}, /**
	     * Creates markup containing SVG font faces
	     * @param {Array} objects Array of fabric objects
	     * @return {String}
	     */createSVGFontFacesMarkup:function createSVGFontFacesMarkup(objects){var markup='';for(var i=0,len=objects.length;i < len;i++) {if(objects[i].type !== 'text' || !objects[i].path){continue;}markup += [ //jscs:disable validateIndentation
	'@font-face {','font-family: ',objects[i].fontFamily,'; ','src: url(\'',objects[i].path,'\')','}' //jscs:enable validateIndentation
	].join('');}if(markup){markup = [ //jscs:disable validateIndentation
	'<style type="text/css">','<![CDATA[',markup,']]>','</style>' //jscs:enable validateIndentation
	].join('');}return markup;}, /**
	     * Creates markup containing SVG referenced elements like patterns, gradients etc.
	     * @param {fabric.Canvas} canvas instance of fabric.Canvas
	     * @return {String}
	     */createSVGRefElementsMarkup:function createSVGRefElementsMarkup(canvas){var markup=[];_createSVGPattern(markup,canvas,'backgroundColor');_createSVGPattern(markup,canvas,'overlayColor');return markup.join('');}});})( true?exports:undefined);fabric.ElementsParser = function(elements,callback,options,reviver){this.elements = elements;this.callback = callback;this.options = options;this.reviver = reviver;this.svgUid = options && options.svgUid || 0;};fabric.ElementsParser.prototype.parse = function(){this.instances = new Array(this.elements.length);this.numElements = this.elements.length;this.createObjects();};fabric.ElementsParser.prototype.createObjects = function(){for(var i=0,len=this.elements.length;i < len;i++) {this.elements[i].setAttribute('svgUid',this.svgUid);(function(_this,i){setTimeout(function(){_this.createObject(_this.elements[i],i);},0);})(this,i);}};fabric.ElementsParser.prototype.createObject = function(el,index){var klass=fabric[fabric.util.string.capitalize(el.tagName)];if(klass && klass.fromElement){try{this._createObject(klass,el,index);}catch(err) {fabric.log(err);}}else {this.checkIfDone();}};fabric.ElementsParser.prototype._createObject = function(klass,el,index){if(klass.async){klass.fromElement(el,this.createCallback(index,el),this.options);}else {var obj=klass.fromElement(el,this.options);this.resolveGradient(obj,'fill');this.resolveGradient(obj,'stroke');this.reviver && this.reviver(el,obj);this.instances[index] = obj;this.checkIfDone();}};fabric.ElementsParser.prototype.createCallback = function(index,el){var _this=this;return function(obj){_this.resolveGradient(obj,'fill');_this.resolveGradient(obj,'stroke');_this.reviver && _this.reviver(el,obj);_this.instances[index] = obj;_this.checkIfDone();};};fabric.ElementsParser.prototype.resolveGradient = function(obj,property){var instanceFillValue=obj.get(property);if(!/^url\(/.test(instanceFillValue)){return;}var gradientId=instanceFillValue.slice(5,instanceFillValue.length - 1);if(fabric.gradientDefs[this.svgUid][gradientId]){obj.set(property,fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId],obj));}};fabric.ElementsParser.prototype.checkIfDone = function(){if(--this.numElements === 0){this.instances = this.instances.filter(function(el){return el != null;});this.callback(this.instances);}};(function(global){'use strict'; /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */var fabric=global.fabric || (global.fabric = {});if(fabric.Point){fabric.warn('fabric.Point is already defined');return;}fabric.Point = Point; /**
	   * Point class
	   * @class fabric.Point
	   * @memberOf fabric
	   * @constructor
	   * @param {Number} x
	   * @param {Number} y
	   * @return {fabric.Point} thisArg
	   */function Point(x,y){this.x = x;this.y = y;}Point.prototype =  /** @lends fabric.Point.prototype */{constructor:Point, /**
	     * Adds another point to this one and returns another one
	     * @param {fabric.Point} that
	     * @return {fabric.Point} new Point instance with added values
	     */add:function add(that){return new Point(this.x + that.x,this.y + that.y);}, /**
	     * Adds another point to this one
	     * @param {fabric.Point} that
	     * @return {fabric.Point} thisArg
	     */addEquals:function addEquals(that){this.x += that.x;this.y += that.y;return this;}, /**
	     * Adds value to this point and returns a new one
	     * @param {Number} scalar
	     * @return {fabric.Point} new Point with added value
	     */scalarAdd:function scalarAdd(scalar){return new Point(this.x + scalar,this.y + scalar);}, /**
	     * Adds value to this point
	     * @param {Number} scalar
	     * @return {fabric.Point} thisArg
	     */scalarAddEquals:function scalarAddEquals(scalar){this.x += scalar;this.y += scalar;return this;}, /**
	     * Subtracts another point from this point and returns a new one
	     * @param {fabric.Point} that
	     * @return {fabric.Point} new Point object with subtracted values
	     */subtract:function subtract(that){return new Point(this.x - that.x,this.y - that.y);}, /**
	     * Subtracts another point from this point
	     * @param {fabric.Point} that
	     * @return {fabric.Point} thisArg
	     */subtractEquals:function subtractEquals(that){this.x -= that.x;this.y -= that.y;return this;}, /**
	     * Subtracts value from this point and returns a new one
	     * @param {Number} scalar
	     * @return {fabric.Point}
	     */scalarSubtract:function scalarSubtract(scalar){return new Point(this.x - scalar,this.y - scalar);}, /**
	     * Subtracts value from this point
	     * @param {Number} scalar
	     * @return {fabric.Point} thisArg
	     */scalarSubtractEquals:function scalarSubtractEquals(scalar){this.x -= scalar;this.y -= scalar;return this;}, /**
	     * Miltiplies this point by a value and returns a new one
	     * @param {Number} scalar
	     * @return {fabric.Point}
	     */multiply:function multiply(scalar){return new Point(this.x * scalar,this.y * scalar);}, /**
	     * Miltiplies this point by a value
	     * @param {Number} scalar
	     * @return {fabric.Point} thisArg
	     */multiplyEquals:function multiplyEquals(scalar){this.x *= scalar;this.y *= scalar;return this;}, /**
	     * Divides this point by a value and returns a new one
	     * @param {Number} scalar
	     * @return {fabric.Point}
	     */divide:function divide(scalar){return new Point(this.x / scalar,this.y / scalar);}, /**
	     * Divides this point by a value
	     * @param {Number} scalar
	     * @return {fabric.Point} thisArg
	     */divideEquals:function divideEquals(scalar){this.x /= scalar;this.y /= scalar;return this;}, /**
	     * Returns true if this point is equal to another one
	     * @param {fabric.Point} that
	     * @return {Boolean}
	     */eq:function eq(that){return this.x === that.x && this.y === that.y;}, /**
	     * Returns true if this point is less than another one
	     * @param {fabric.Point} that
	     * @return {Boolean}
	     */lt:function lt(that){return this.x < that.x && this.y < that.y;}, /**
	     * Returns true if this point is less than or equal to another one
	     * @param {fabric.Point} that
	     * @return {Boolean}
	     */lte:function lte(that){return this.x <= that.x && this.y <= that.y;}, /**

	     * Returns true if this point is greater another one
	     * @param {fabric.Point} that
	     * @return {Boolean}
	     */gt:function gt(that){return this.x > that.x && this.y > that.y;}, /**
	     * Returns true if this point is greater than or equal to another one
	     * @param {fabric.Point} that
	     * @return {Boolean}
	     */gte:function gte(that){return this.x >= that.x && this.y >= that.y;}, /**
	     * Returns new point which is the result of linear interpolation with this one and another one
	     * @param {fabric.Point} that
	     * @param {Number} t
	     * @return {fabric.Point}
	     */lerp:function lerp(that,t){return new Point(this.x + (that.x - this.x) * t,this.y + (that.y - this.y) * t);}, /**
	     * Returns distance from this point and another one
	     * @param {fabric.Point} that
	     * @return {Number}
	     */distanceFrom:function distanceFrom(that){var dx=this.x - that.x,dy=this.y - that.y;return Math.sqrt(dx * dx + dy * dy);}, /**
	     * Returns the point between this point and another one
	     * @param {fabric.Point} that
	     * @return {fabric.Point}
	     */midPointFrom:function midPointFrom(that){return new Point(this.x + (that.x - this.x) / 2,this.y + (that.y - this.y) / 2);}, /**
	     * Returns a new point which is the min of this and another one
	     * @param {fabric.Point} that
	     * @return {fabric.Point}
	     */min:function min(that){return new Point(Math.min(this.x,that.x),Math.min(this.y,that.y));}, /**
	     * Returns a new point which is the max of this and another one
	     * @param {fabric.Point} that
	     * @return {fabric.Point}
	     */max:function max(that){return new Point(Math.max(this.x,that.x),Math.max(this.y,that.y));}, /**
	     * Returns string representation of this point
	     * @return {String}
	     */toString:function toString(){return this.x + ',' + this.y;}, /**
	     * Sets x/y of this point
	     * @param {Number} x
	     * @param {Number} y
	     */setXY:function setXY(x,y){this.x = x;this.y = y;}, /**
	     * Sets x/y of this point from another point
	     * @param {fabric.Point} that
	     */setFromPoint:function setFromPoint(that){this.x = that.x;this.y = that.y;}, /**
	     * Swaps x/y of this point and another point
	     * @param {fabric.Point} that
	     */swap:function swap(that){var x=this.x,y=this.y;this.x = that.x;this.y = that.y;that.x = x;that.y = y;}};})( true?exports:undefined);(function(global){'use strict'; /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */var fabric=global.fabric || (global.fabric = {});if(fabric.Intersection){fabric.warn('fabric.Intersection is already defined');return;} /**
	   * Intersection class
	   * @class fabric.Intersection
	   * @memberOf fabric
	   * @constructor
	   */function Intersection(status){this.status = status;this.points = [];}fabric.Intersection = Intersection;fabric.Intersection.prototype =  /** @lends fabric.Intersection.prototype */{ /**
	     * Appends a point to intersection
	     * @param {fabric.Point} point
	     */appendPoint:function appendPoint(point){this.points.push(point);}, /**
	     * Appends points to intersection
	     * @param {Array} points
	     */appendPoints:function appendPoints(points){this.points = this.points.concat(points);}}; /**
	   * Checks if one line intersects another
	   * @static
	   * @param {fabric.Point} a1
	   * @param {fabric.Point} a2
	   * @param {fabric.Point} b1
	   * @param {fabric.Point} b2
	   * @return {fabric.Intersection}
	   */fabric.Intersection.intersectLineLine = function(a1,a2,b1,b2){var result,uaT=(b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),ubT=(a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),uB=(b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);if(uB !== 0){var ua=uaT / uB,ub=ubT / uB;if(0 <= ua && ua <= 1 && 0 <= ub && ub <= 1){result = new Intersection('Intersection');result.points.push(new fabric.Point(a1.x + ua * (a2.x - a1.x),a1.y + ua * (a2.y - a1.y)));}else {result = new Intersection();}}else {if(uaT === 0 || ubT === 0){result = new Intersection('Coincident');}else {result = new Intersection('Parallel');}}return result;}; /**
	   * Checks if line intersects polygon
	   * @static
	   * @param {fabric.Point} a1
	   * @param {fabric.Point} a2
	   * @param {Array} points
	   * @return {fabric.Intersection}
	   */fabric.Intersection.intersectLinePolygon = function(a1,a2,points){var result=new Intersection(),length=points.length;for(var i=0;i < length;i++) {var b1=points[i],b2=points[(i + 1) % length],inter=Intersection.intersectLineLine(a1,a2,b1,b2);result.appendPoints(inter.points);}if(result.points.length > 0){result.status = 'Intersection';}return result;}; /**
	   * Checks if polygon intersects another polygon
	   * @static
	   * @param {Array} points1
	   * @param {Array} points2
	   * @return {fabric.Intersection}
	   */fabric.Intersection.intersectPolygonPolygon = function(points1,points2){var result=new Intersection(),length=points1.length;for(var i=0;i < length;i++) {var a1=points1[i],a2=points1[(i + 1) % length],inter=Intersection.intersectLinePolygon(a1,a2,points2);result.appendPoints(inter.points);}if(result.points.length > 0){result.status = 'Intersection';}return result;}; /**
	   * Checks if polygon intersects rectangle
	   * @static
	   * @param {Array} points
	   * @param {Number} r1
	   * @param {Number} r2
	   * @return {fabric.Intersection}
	   */fabric.Intersection.intersectPolygonRectangle = function(points,r1,r2){var min=r1.min(r2),max=r1.max(r2),topRight=new fabric.Point(max.x,min.y),bottomLeft=new fabric.Point(min.x,max.y),inter1=Intersection.intersectLinePolygon(min,topRight,points),inter2=Intersection.intersectLinePolygon(topRight,max,points),inter3=Intersection.intersectLinePolygon(max,bottomLeft,points),inter4=Intersection.intersectLinePolygon(bottomLeft,min,points),result=new Intersection();result.appendPoints(inter1.points);result.appendPoints(inter2.points);result.appendPoints(inter3.points);result.appendPoints(inter4.points);if(result.points.length > 0){result.status = 'Intersection';}return result;};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {});if(fabric.Color){fabric.warn('fabric.Color is already defined.');return;} /**
	   * Color class
	   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;
	   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.
	   *
	   * @class fabric.Color
	   * @param {String} color optional in hex or rgb(a) format
	   * @return {fabric.Color} thisArg
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}
	   */function Color(color){if(!color){this.setSource([0,0,0,1]);}else {this._tryParsingColor(color);}}fabric.Color = Color;fabric.Color.prototype =  /** @lends fabric.Color.prototype */{ /**
	     * @private
	     * @param {String|Array} color Color value to parse
	     */_tryParsingColor:function _tryParsingColor(color){var source;if(color in Color.colorNameMap){color = Color.colorNameMap[color];}if(color === 'transparent'){this.setSource([255,255,255,0]);return;}source = Color.sourceFromHex(color);if(!source){source = Color.sourceFromRgb(color);}if(!source){source = Color.sourceFromHsl(color);}if(source){this.setSource(source);}}, /**
	     * Adapted from <a href="https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html">https://github.com/mjijackson</a>
	     * @private
	     * @param {Number} r Red color value
	     * @param {Number} g Green color value
	     * @param {Number} b Blue color value
	     * @return {Array} Hsl color
	     */_rgbToHsl:function _rgbToHsl(r,g,b){r /= 255,g /= 255,b /= 255;var h,s,l,max=fabric.util.array.max([r,g,b]),min=fabric.util.array.min([r,g,b]);l = (max + min) / 2;if(max === min){h = s = 0; // achromatic
	}else {var d=max - min;s = l > 0.5?d / (2 - max - min):d / (max + min);switch(max){case r:h = (g - b) / d + (g < b?6:0);break;case g:h = (b - r) / d + 2;break;case b:h = (r - g) / d + 4;break;}h /= 6;}return [Math.round(h * 360),Math.round(s * 100),Math.round(l * 100)];}, /**
	     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])
	     * @return {Array}
	     */getSource:function getSource(){return this._source;}, /**
	     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])
	     * @param {Array} source
	     */setSource:function setSource(source){this._source = source;}, /**
	     * Returns color represenation in RGB format
	     * @return {String} ex: rgb(0-255,0-255,0-255)
	     */toRgb:function toRgb(){var source=this.getSource();return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';}, /**
	     * Returns color represenation in RGBA format
	     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)
	     */toRgba:function toRgba(){var source=this.getSource();return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';}, /**
	     * Returns color represenation in HSL format
	     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)
	     */toHsl:function toHsl(){var source=this.getSource(),hsl=this._rgbToHsl(source[0],source[1],source[2]);return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';}, /**
	     * Returns color represenation in HSLA format
	     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)
	     */toHsla:function toHsla(){var source=this.getSource(),hsl=this._rgbToHsl(source[0],source[1],source[2]);return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';}, /**
	     * Returns color represenation in HEX format
	     * @return {String} ex: FF5555
	     */toHex:function toHex(){var source=this.getSource(),r,g,b;r = source[0].toString(16);r = r.length === 1?'0' + r:r;g = source[1].toString(16);g = g.length === 1?'0' + g:g;b = source[2].toString(16);b = b.length === 1?'0' + b:b;return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();}, /**
	     * Gets value of alpha channel for this color
	     * @return {Number} 0-1
	     */getAlpha:function getAlpha(){return this.getSource()[3];}, /**
	     * Sets value of alpha channel for this color
	     * @param {Number} alpha Alpha value 0-1
	     * @return {fabric.Color} thisArg
	     */setAlpha:function setAlpha(alpha){var source=this.getSource();source[3] = alpha;this.setSource(source);return this;}, /**
	     * Transforms color to its grayscale representation
	     * @return {fabric.Color} thisArg
	     */toGrayscale:function toGrayscale(){var source=this.getSource(),average=parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),10),currentAlpha=source[3];this.setSource([average,average,average,currentAlpha]);return this;}, /**
	     * Transforms color to its black and white representation
	     * @param {Number} threshold
	     * @return {fabric.Color} thisArg
	     */toBlackWhite:function toBlackWhite(threshold){var source=this.getSource(),average=(source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),currentAlpha=source[3];threshold = threshold || 127;average = Number(average) < Number(threshold)?0:255;this.setSource([average,average,average,currentAlpha]);return this;}, /**
	     * Overlays color with another color
	     * @param {String|fabric.Color} otherColor
	     * @return {fabric.Color} thisArg
	     */overlayWith:function overlayWith(otherColor){if(!(otherColor instanceof Color)){otherColor = new Color(otherColor);}var result=[],alpha=this.getAlpha(),otherAlpha=0.5,source=this.getSource(),otherSource=otherColor.getSource();for(var i=0;i < 3;i++) {result.push(Math.round(source[i] * (1 - otherAlpha) + otherSource[i] * otherAlpha));}result[3] = alpha;this.setSource(result);return this;}}; /**
	   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))
	   * @static
	   * @field
	   * @memberOf fabric.Color
	   */fabric.Color.reRGBa = /^rgba?\(\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*,\s*(\d{1,3}(?:\.\d+)?\%?)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/; /**
	   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))
	   * @static
	   * @field
	   * @memberOf fabric.Color
	   */fabric.Color.reHSLa = /^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3}\%)\s*,\s*(\d{1,3}\%)\s*(?:\s*,\s*(\d+(?:\.\d+)?)\s*)?\)$/; /**
	   * Regex matching color in HEX format (ex: #FF5555, 010155, aff)
	   * @static
	   * @field
	   * @memberOf fabric.Color
	   */fabric.Color.reHex = /^#?([0-9a-f]{6}|[0-9a-f]{3})$/i; /**
	   * Map of the 17 basic color names with HEX code
	   * @static
	   * @field
	   * @memberOf fabric.Color
	   * @see: http://www.w3.org/TR/CSS2/syndata.html#color-units
	   */fabric.Color.colorNameMap = {aqua:'#00FFFF',black:'#000000',blue:'#0000FF',fuchsia:'#FF00FF',gray:'#808080',green:'#008000',lime:'#00FF00',maroon:'#800000',navy:'#000080',olive:'#808000',orange:'#FFA500',purple:'#800080',red:'#FF0000',silver:'#C0C0C0',teal:'#008080',white:'#FFFFFF',yellow:'#FFFF00'}; /**
	   * @private
	   * @param {Number} p
	   * @param {Number} q
	   * @param {Number} t
	   * @return {Number}
	   */function hue2rgb(p,q,t){if(t < 0){t += 1;}if(t > 1){t -= 1;}if(t < 1 / 6){return p + (q - p) * 6 * t;}if(t < 1 / 2){return q;}if(t < 2 / 3){return p + (q - p) * (2 / 3 - t) * 6;}return p;} /**
	   * Returns new color object, when given a color in RGB format
	   * @memberOf fabric.Color
	   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)
	   * @return {fabric.Color}
	   */fabric.Color.fromRgb = function(color){return Color.fromSource(Color.sourceFromRgb(color));}; /**
	   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format
	   * @memberOf fabric.Color
	   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)
	   * @return {Array} source
	   */fabric.Color.sourceFromRgb = function(color){var match=color.match(Color.reRGBa);if(match){var r=parseInt(match[1],10) / (/%$/.test(match[1])?100:1) * (/%$/.test(match[1])?255:1),g=parseInt(match[2],10) / (/%$/.test(match[2])?100:1) * (/%$/.test(match[2])?255:1),b=parseInt(match[3],10) / (/%$/.test(match[3])?100:1) * (/%$/.test(match[3])?255:1);return [parseInt(r,10),parseInt(g,10),parseInt(b,10),match[4]?parseFloat(match[4]):1];}}; /**
	   * Returns new color object, when given a color in RGBA format
	   * @static
	   * @function
	   * @memberOf fabric.Color
	   * @param {String} color
	   * @return {fabric.Color}
	   */fabric.Color.fromRgba = Color.fromRgb; /**
	   * Returns new color object, when given a color in HSL format
	   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)
	   * @memberOf fabric.Color
	   * @return {fabric.Color}
	   */fabric.Color.fromHsl = function(color){return Color.fromSource(Color.sourceFromHsl(color));}; /**
	   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.
	   * Adapted from <a href="https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html">https://github.com/mjijackson</a>
	   * @memberOf fabric.Color
	   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)
	   * @return {Array} source
	   * @see http://http://www.w3.org/TR/css3-color/#hsl-color
	   */fabric.Color.sourceFromHsl = function(color){var match=color.match(Color.reHSLa);if(!match){return;}var h=(parseFloat(match[1]) % 360 + 360) % 360 / 360,s=parseFloat(match[2]) / (/%$/.test(match[2])?100:1),l=parseFloat(match[3]) / (/%$/.test(match[3])?100:1),r,g,b;if(s === 0){r = g = b = l;}else {var q=l <= 0.5?l * (s + 1):l + s - l * s,p=l * 2 - q;r = hue2rgb(p,q,h + 1 / 3);g = hue2rgb(p,q,h);b = hue2rgb(p,q,h - 1 / 3);}return [Math.round(r * 255),Math.round(g * 255),Math.round(b * 255),match[4]?parseFloat(match[4]):1];}; /**
	   * Returns new color object, when given a color in HSLA format
	   * @static
	   * @function
	   * @memberOf fabric.Color
	   * @param {String} color
	   * @return {fabric.Color}
	   */fabric.Color.fromHsla = Color.fromHsl; /**
	   * Returns new color object, when given a color in HEX format
	   * @static
	   * @memberOf fabric.Color
	   * @param {String} color Color value ex: FF5555
	   * @return {fabric.Color}
	   */fabric.Color.fromHex = function(color){return Color.fromSource(Color.sourceFromHex(color));}; /**
	   * Returns array represenatation (ex: [100, 100, 200, 1]) of a color that's in HEX format
	   * @static
	   * @memberOf fabric.Color
	   * @param {String} color ex: FF5555
	   * @return {Array} source
	   */fabric.Color.sourceFromHex = function(color){if(color.match(Color.reHex)){var value=color.slice(color.indexOf('#') + 1),isShortNotation=value.length === 3,r=isShortNotation?value.charAt(0) + value.charAt(0):value.substring(0,2),g=isShortNotation?value.charAt(1) + value.charAt(1):value.substring(2,4),b=isShortNotation?value.charAt(2) + value.charAt(2):value.substring(4,6);return [parseInt(r,16),parseInt(g,16),parseInt(b,16),1];}}; /**
	   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])
	   * @static
	   * @memberOf fabric.Color
	   * @param {Array} source
	   * @return {fabric.Color}
	   */fabric.Color.fromSource = function(source){var oColor=new Color();oColor.setSource(source);return oColor;};})( true?exports:undefined);(function(){ /* _FROM_SVG_START_ */function getColorStop(el){var style=el.getAttribute('style'),offset=el.getAttribute('offset'),color,colorAlpha,opacity; // convert percents to absolute values
	offset = parseFloat(offset) / (/%$/.test(offset)?100:1);offset = offset < 0?0:offset > 1?1:offset;if(style){var keyValuePairs=style.split(/\s*;\s*/);if(keyValuePairs[keyValuePairs.length - 1] === ''){keyValuePairs.pop();}for(var i=keyValuePairs.length;i--;) {var split=keyValuePairs[i].split(/\s*:\s*/),key=split[0].trim(),value=split[1].trim();if(key === 'stop-color'){color = value;}else if(key === 'stop-opacity'){opacity = value;}}}if(!color){color = el.getAttribute('stop-color') || 'rgb(0,0,0)';}if(!opacity){opacity = el.getAttribute('stop-opacity');}color = new fabric.Color(color);colorAlpha = color.getAlpha();opacity = isNaN(parseFloat(opacity))?1:parseFloat(opacity);opacity *= colorAlpha;return {offset:offset,color:color.toRgb(),opacity:opacity};}function getLinearCoords(el){return {x1:el.getAttribute('x1') || 0,y1:el.getAttribute('y1') || 0,x2:el.getAttribute('x2') || '100%',y2:el.getAttribute('y2') || 0};}function getRadialCoords(el){return {x1:el.getAttribute('fx') || el.getAttribute('cx') || '50%',y1:el.getAttribute('fy') || el.getAttribute('cy') || '50%',r1:0,x2:el.getAttribute('cx') || '50%',y2:el.getAttribute('cy') || '50%',r2:el.getAttribute('r') || '50%'};} /* _FROM_SVG_END_ */ /**
	   * Gradient class
	   * @class fabric.Gradient
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#gradients}
	   * @see {@link fabric.Gradient#initialize} for constructor definition
	   */fabric.Gradient = fabric.util.createClass( /** @lends fabric.Gradient.prototype */{ /**
	     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups
	     * @type Number
	     * @default 0
	     */offsetX:0, /**
	     * Vertical offset for aligning gradients coming from SVG when outside pathgroups
	     * @type Number
	     * @default 0
	     */offsetY:0, /**
	     * Constructor
	     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops
	     * @return {fabric.Gradient} thisArg
	     */initialize:function initialize(options){options || (options = {});var coords={};this.id = fabric.Object.__uid++;this.type = options.type || 'linear';coords = {x1:options.coords.x1 || 0,y1:options.coords.y1 || 0,x2:options.coords.x2 || 0,y2:options.coords.y2 || 0};if(this.type === 'radial'){coords.r1 = options.coords.r1 || 0;coords.r2 = options.coords.r2 || 0;}this.coords = coords;this.colorStops = options.colorStops.slice();if(options.gradientTransform){this.gradientTransform = options.gradientTransform;}this.offsetX = options.offsetX || this.offsetX;this.offsetY = options.offsetY || this.offsetY;}, /**
	     * Adds another colorStop
	     * @param {Object} colorStop Object with offset and color
	     * @return {fabric.Gradient} thisArg
	     */addColorStop:function addColorStop(colorStop){for(var position in colorStop) {var color=new fabric.Color(colorStop[position]);this.colorStops.push({offset:position,color:color.toRgb(),opacity:color.getAlpha()});}return this;}, /**
	     * Returns object representation of a gradient
	     * @return {Object}
	     */toObject:function toObject(){return {type:this.type,coords:this.coords,colorStops:this.colorStops,offsetX:this.offsetX,offsetY:this.offsetY};}, /* _TO_SVG_START_ */ /**
	     * Returns SVG representation of an gradient
	     * @param {Object} object Object to create a gradient for
	     * @param {Boolean} normalize Whether coords should be normalized
	     * @return {String} SVG representation of an gradient (linear/radial)
	     */toSVG:function toSVG(object){var coords=fabric.util.object.clone(this.coords),markup,commonAttributes; // colorStops must be sorted ascending
	this.colorStops.sort(function(a,b){return a.offset - b.offset;});if(!(object.group && object.group.type === 'path-group')){for(var prop in coords) {if(prop === 'x1' || prop === 'x2' || prop === 'r2'){coords[prop] += this.offsetX - object.width / 2;}else if(prop === 'y1' || prop === 'y2'){coords[prop] += this.offsetY - object.height / 2;}}}commonAttributes = 'id="SVGID_' + this.id + '" gradientUnits="userSpaceOnUse"';if(this.gradientTransform){commonAttributes += ' gradientTransform="matrix(' + this.gradientTransform.join(' ') + ')" ';}if(this.type === 'linear'){markup = [ //jscs:disable validateIndentation
	'<linearGradient ',commonAttributes,' x1="',coords.x1,'" y1="',coords.y1,'" x2="',coords.x2,'" y2="',coords.y2,'">\n' //jscs:enable validateIndentation
	];}else if(this.type === 'radial'){markup = [ //jscs:disable validateIndentation
	'<radialGradient ',commonAttributes,' cx="',coords.x2,'" cy="',coords.y2,'" r="',coords.r2,'" fx="',coords.x1,'" fy="',coords.y1,'">\n' //jscs:enable validateIndentation
	];}for(var i=0;i < this.colorStops.length;i++) {markup.push( //jscs:disable validateIndentation
	'<stop ','offset="',this.colorStops[i].offset * 100 + '%','" style="stop-color:',this.colorStops[i].color,this.colorStops[i].opacity != null?';stop-opacity: ' + this.colorStops[i].opacity:';','"/>\n' //jscs:enable validateIndentation
	);}markup.push(this.type === 'linear'?'</linearGradient>\n':'</radialGradient>\n');return markup.join('');}, /* _TO_SVG_END_ */ /**
	     * Returns an instance of CanvasGradient
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @return {CanvasGradient}
	     */toLive:function toLive(ctx,object){var gradient,prop,coords=fabric.util.object.clone(this.coords);if(!this.type){return;}if(object.group && object.group.type === 'path-group'){for(prop in coords) {if(prop === 'x1' || prop === 'x2'){coords[prop] += -this.offsetX + object.width / 2;}else if(prop === 'y1' || prop === 'y2'){coords[prop] += -this.offsetY + object.height / 2;}}}if(object.type === 'text' || object.type === 'i-text'){for(prop in coords) {if(prop === 'x1' || prop === 'x2'){coords[prop] -= object.width / 2;}else if(prop === 'y1' || prop === 'y2'){coords[prop] -= object.height / 2;}}}if(this.type === 'linear'){gradient = ctx.createLinearGradient(coords.x1,coords.y1,coords.x2,coords.y2);}else if(this.type === 'radial'){gradient = ctx.createRadialGradient(coords.x1,coords.y1,coords.r1,coords.x2,coords.y2,coords.r2);}for(var i=0,len=this.colorStops.length;i < len;i++) {var color=this.colorStops[i].color,opacity=this.colorStops[i].opacity,offset=this.colorStops[i].offset;if(typeof opacity !== 'undefined'){color = new fabric.Color(color).setAlpha(opacity).toRgba();}gradient.addColorStop(parseFloat(offset),color);}return gradient;}});fabric.util.object.extend(fabric.Gradient,{ /* _FROM_SVG_START_ */ /**
	     * Returns {@link fabric.Gradient} instance from an SVG element
	     * @static
	     * @memberof fabric.Gradient
	     * @param {SVGGradientElement} el SVG gradient element
	     * @param {fabric.Object} instance
	     * @return {fabric.Gradient} Gradient instance
	     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement
	     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement
	     */fromElement:function fromElement(el,instance){ /**
	       *  @example:
	       *
	       *  <linearGradient id="linearGrad1">
	       *    <stop offset="0%" stop-color="white"/>
	       *    <stop offset="100%" stop-color="black"/>
	       *  </linearGradient>
	       *
	       *  OR
	       *
	       *  <linearGradient id="linearGrad2">
	       *    <stop offset="0" style="stop-color:rgb(255,255,255)"/>
	       *    <stop offset="1" style="stop-color:rgb(0,0,0)"/>
	       *  </linearGradient>
	       *
	       *  OR
	       *
	       *  <radialGradient id="radialGrad1">
	       *    <stop offset="0%" stop-color="white" stop-opacity="1" />
	       *    <stop offset="50%" stop-color="black" stop-opacity="0.5" />
	       *    <stop offset="100%" stop-color="white" stop-opacity="1" />
	       *  </radialGradient>
	       *
	       *  OR
	       *
	       *  <radialGradient id="radialGrad2">
	       *    <stop offset="0" stop-color="rgb(255,255,255)" />
	       *    <stop offset="0.5" stop-color="rgb(0,0,0)" />
	       *    <stop offset="1" stop-color="rgb(255,255,255)" />
	       *  </radialGradient>
	       *
	       */var colorStopEls=el.getElementsByTagName('stop'),type=el.nodeName === 'linearGradient'?'linear':'radial',gradientUnits=el.getAttribute('gradientUnits') || 'objectBoundingBox',gradientTransform=el.getAttribute('gradientTransform'),colorStops=[],coords={},ellipseMatrix;if(type === 'linear'){coords = getLinearCoords(el);}else if(type === 'radial'){coords = getRadialCoords(el);}for(var i=colorStopEls.length;i--;) {colorStops.push(getColorStop(colorStopEls[i]));}ellipseMatrix = _convertPercentUnitsToValues(instance,coords,gradientUnits);var gradient=new fabric.Gradient({type:type,coords:coords,colorStops:colorStops,offsetX:-instance.left,offsetY:-instance.top});if(gradientTransform || ellipseMatrix !== ''){gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);}return gradient;}, /* _FROM_SVG_END_ */ /**
	     * Returns {@link fabric.Gradient} instance from its object representation
	     * @static
	     * @memberof fabric.Gradient
	     * @param {Object} obj
	     * @param {Object} [options] Options object
	     */forObject:function forObject(obj,options){options || (options = {});_convertPercentUnitsToValues(obj,options.coords,'userSpaceOnUse');return new fabric.Gradient(options);}}); /**
	   * @private
	   */function _convertPercentUnitsToValues(object,options,gradientUnits){var propValue,addFactor=0,multFactor=1,ellipseMatrix='';for(var prop in options) {propValue = parseFloat(options[prop],10);if(typeof options[prop] === 'string' && /^\d+%$/.test(options[prop])){multFactor = 0.01;}else {multFactor = 1;}if(prop === 'x1' || prop === 'x2' || prop === 'r2'){multFactor *= gradientUnits === 'objectBoundingBox'?object.width:1;addFactor = gradientUnits === 'objectBoundingBox'?object.left || 0:0;}else if(prop === 'y1' || prop === 'y2'){multFactor *= gradientUnits === 'objectBoundingBox'?object.height:1;addFactor = gradientUnits === 'objectBoundingBox'?object.top || 0:0;}options[prop] = propValue * multFactor + addFactor;}if(object.type === 'ellipse' && options.r2 !== null && gradientUnits === 'objectBoundingBox' && object.rx !== object.ry){var scaleFactor=object.ry / object.rx;ellipseMatrix = ' scale(1, ' + scaleFactor + ')';if(options.y1){options.y1 /= scaleFactor;}if(options.y2){options.y2 /= scaleFactor;}}return ellipseMatrix;}})(); /**
	 * Pattern class
	 * @class fabric.Pattern
	 * @see {@link http://fabricjs.com/patterns/|Pattern demo}
	 * @see {@link http://fabricjs.com/dynamic-patterns/|DynamicPattern demo}
	 * @see {@link fabric.Pattern#initialize} for constructor definition
	 */fabric.Pattern = fabric.util.createClass( /** @lends fabric.Pattern.prototype */{ /**
	   * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)
	   * @type String
	   * @default
	   */repeat:'repeat', /**
	   * Pattern horizontal offset from object's left/top corner
	   * @type Number
	   * @default
	   */offsetX:0, /**
	   * Pattern vertical offset from object's left/top corner
	   * @type Number
	   * @default
	   */offsetY:0, /**
	   * Constructor
	   * @param {Object} [options] Options object
	   * @return {fabric.Pattern} thisArg
	   */initialize:function initialize(options){options || (options = {});this.id = fabric.Object.__uid++;if(options.source){if(typeof options.source === 'string'){ // function string
	if(typeof fabric.util.getFunctionBody(options.source) !== 'undefined'){this.source = new Function(fabric.util.getFunctionBody(options.source));}else { // img src string
	var _this=this;this.source = fabric.util.createImage();fabric.util.loadImage(options.source,function(img){_this.source = img;});}}else { // img element
	this.source = options.source;}}if(options.repeat){this.repeat = options.repeat;}if(options.offsetX){this.offsetX = options.offsetX;}if(options.offsetY){this.offsetY = options.offsetY;}}, /**
	   * Returns object representation of a pattern
	   * @return {Object} Object representation of a pattern instance
	   */toObject:function toObject(){var source; // callback
	if(typeof this.source === 'function'){source = String(this.source);} // <img> element
	else if(typeof this.source.src === 'string'){source = this.source.src;}return {source:source,repeat:this.repeat,offsetX:this.offsetX,offsetY:this.offsetY};}, /* _TO_SVG_START_ */ /**
	   * Returns SVG representation of a pattern
	   * @param {fabric.Object} object
	   * @return {String} SVG representation of a pattern
	   */toSVG:function toSVG(object){var patternSource=typeof this.source === 'function'?this.source():this.source,patternWidth=patternSource.width / object.getWidth(),patternHeight=patternSource.height / object.getHeight(),patternOffsetX=this.offsetX / object.getWidth(),patternOffsetY=this.offsetY / object.getHeight(),patternImgSrc='';if(this.repeat === 'repeat-x' || this.repeat === 'no-repeat'){patternHeight = 1;}if(this.repeat === 'repeat-y' || this.repeat === 'no-repeat'){patternWidth = 1;}if(patternSource.src){patternImgSrc = patternSource.src;}else if(patternSource.toDataURL){patternImgSrc = patternSource.toDataURL();}return '<pattern id="SVGID_' + this.id + '" x="' + patternOffsetX + '" y="' + patternOffsetY + '" width="' + patternWidth + '" height="' + patternHeight + '">\n' + '<image x="0" y="0"' + ' width="' + patternSource.width + '" height="' + patternSource.height + '" xlink:href="' + patternImgSrc + '"></image>\n' + '</pattern>\n';}, /* _TO_SVG_END_ */ /**
	   * Returns an instance of CanvasPattern
	   * @param {CanvasRenderingContext2D} ctx Context to create pattern
	   * @return {CanvasPattern}
	   */toLive:function toLive(ctx){var source=typeof this.source === 'function'?this.source():this.source; // if the image failed to load, return, and allow rest to continue loading
	if(!source){return '';} // if an image
	if(typeof source.src !== 'undefined'){if(!source.complete){return '';}if(source.naturalWidth === 0 || source.naturalHeight === 0){return '';}}return ctx.createPattern(source,this.repeat);}});(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),toFixed=fabric.util.toFixed;if(fabric.Shadow){fabric.warn('fabric.Shadow is already defined.');return;} /**
	   * Shadow class
	   * @class fabric.Shadow
	   * @see {@link http://fabricjs.com/shadows/|Shadow demo}
	   * @see {@link fabric.Shadow#initialize} for constructor definition
	   */fabric.Shadow = fabric.util.createClass( /** @lends fabric.Shadow.prototype */{ /**
	     * Shadow color
	     * @type String
	     * @default
	     */color:'rgb(0,0,0)', /**
	     * Shadow blur
	     * @type Number
	     */blur:0, /**
	     * Shadow horizontal offset
	     * @type Number
	     * @default
	     */offsetX:0, /**
	     * Shadow vertical offset
	     * @type Number
	     * @default
	     */offsetY:0, /**
	     * Whether the shadow should affect stroke operations
	     * @type Boolean
	     * @default
	     */affectStroke:false, /**
	     * Indicates whether toObject should include default values
	     * @type Boolean
	     * @default
	     */includeDefaultValues:true, /**
	     * Constructor
	     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetX properties or string (e.g. "rgba(0,0,0,0.2) 2px 2px 10px, "2px 2px 10px rgba(0,0,0,0.2)")
	     * @return {fabric.Shadow} thisArg
	     */initialize:function initialize(options){if(typeof options === 'string'){options = this._parseShadow(options);}for(var prop in options) {this[prop] = options[prop];}this.id = fabric.Object.__uid++;}, /**
	     * @private
	     * @param {String} shadow Shadow value to parse
	     * @return {Object} Shadow object with color, offsetX, offsetY and blur
	     */_parseShadow:function _parseShadow(shadow){var shadowStr=shadow.trim(),offsetsAndBlur=fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],color=shadowStr.replace(fabric.Shadow.reOffsetsAndBlur,'') || 'rgb(0,0,0)';return {color:color.trim(),offsetX:parseInt(offsetsAndBlur[1],10) || 0,offsetY:parseInt(offsetsAndBlur[2],10) || 0,blur:parseInt(offsetsAndBlur[3],10) || 0};}, /**
	     * Returns a string representation of an instance
	     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow
	     * @return {String} Returns CSS3 text-shadow declaration
	     */toString:function toString(){return [this.offsetX,this.offsetY,this.blur,this.color].join('px ');}, /* _TO_SVG_START_ */ /**
	     * Returns SVG representation of a shadow
	     * @param {fabric.Object} object
	     * @return {String} SVG representation of a shadow
	     */toSVG:function toSVG(object){var mode='SourceAlpha',fBoxX=40,fBoxY=40;if(object && (object.fill === this.color || object.stroke === this.color)){mode = 'SourceGraphic';}if(object.width && object.height){ //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion
	// we add some extra space to filter box to contain the blur ( 20 )
	fBoxX = toFixed(Math.abs(this.offsetX / object.getWidth()),2) * 100 + 20;fBoxY = toFixed(Math.abs(this.offsetY / object.getHeight()),2) * 100 + 20;}return '<filter id="SVGID_' + this.id + '" y="-' + fBoxY + '%" height="' + (100 + 2 * fBoxY) + '%" ' + 'x="-' + fBoxX + '%" width="' + (100 + 2 * fBoxX) + '%" ' + '>\n' + '\t<feGaussianBlur in="' + mode + '" stdDeviation="' + toFixed(this.blur?this.blur / 2:0,3) + '" result="blurOut"></feGaussianBlur>\n' + '\t<feColorMatrix result="matrixOut" in="blurOut" type="matrix" ' + 'values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 0.30 0" ></feColorMatrix >\n' + '\t<feOffset dx="' + this.offsetX + '" dy="' + this.offsetY + '"></feOffset>\n' + '\t<feMerge>\n' + '\t\t<feMergeNode></feMergeNode>\n' + '\t\t<feMergeNode in="SourceGraphic"></feMergeNode>\n' + '\t</feMerge>\n' + '</filter>\n';}, /* _TO_SVG_END_ */ /**
	     * Returns object representation of a shadow
	     * @return {Object} Object representation of a shadow instance
	     */toObject:function toObject(){if(this.includeDefaultValues){return {color:this.color,blur:this.blur,offsetX:this.offsetX,offsetY:this.offsetY};}var obj={},proto=fabric.Shadow.prototype;if(this.color !== proto.color){obj.color = this.color;}if(this.blur !== proto.blur){obj.blur = this.blur;}if(this.offsetX !== proto.offsetX){obj.offsetX = this.offsetX;}if(this.offsetY !== proto.offsetY){obj.offsetY = this.offsetY;}return obj;}}); /**
	   * Regex matching shadow offsetX, offsetY and blur (ex: "2px 2px 10px rgba(0,0,0,0.2)", "rgb(0,255,0) 2px 2px")
	   * @static
	   * @field
	   * @memberOf fabric.Shadow
	   */fabric.Shadow.reOffsetsAndBlur = /(?:\s|^)(-?\d+(?:px)?(?:\s?|$))?(-?\d+(?:px)?(?:\s?|$))?(\d+(?:px)?)?(?:\s?|$)(?:$|\s)/;})( true?exports:undefined);(function(){'use strict';if(fabric.StaticCanvas){fabric.warn('fabric.StaticCanvas is already defined.');return;} // aliases for faster resolution
	var extend=fabric.util.object.extend,getElementOffset=fabric.util.getElementOffset,removeFromArray=fabric.util.removeFromArray,CANVAS_INIT_ERROR=new Error('Could not initialize `canvas` element'); /**
	   * Static canvas class
	   * @class fabric.StaticCanvas
	   * @mixes fabric.Collection
	   * @mixes fabric.Observable
	   * @see {@link http://fabricjs.com/static_canvas/|StaticCanvas demo}
	   * @see {@link fabric.StaticCanvas#initialize} for constructor definition
	   * @fires before:render
	   * @fires after:render
	   * @fires canvas:cleared
	   * @fires object:added
	   * @fires object:removed
	   */fabric.StaticCanvas = fabric.util.createClass( /** @lends fabric.StaticCanvas.prototype */{ /**
	     * Constructor
	     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on
	     * @param {Object} [options] Options object
	     * @return {Object} thisArg
	     */initialize:function initialize(el,options){options || (options = {});this._initStatic(el,options);fabric.StaticCanvas.activeInstance = this;}, /**
	     * Background color of canvas instance.
	     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.
	     * @type {(String|fabric.Pattern)}
	     * @default
	     */backgroundColor:'', /**
	     * Background image of canvas instance.
	     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.
	     * <b>Backwards incompatibility note:</b> The "backgroundImageOpacity"
	     * and "backgroundImageStretch" properties are deprecated since 1.3.9.
	     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.
	     * @type fabric.Image
	     * @default
	     */backgroundImage:null, /**
	     * Overlay color of canvas instance.
	     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}
	     * @since 1.3.9
	     * @type {(String|fabric.Pattern)}
	     * @default
	     */overlayColor:'', /**
	     * Overlay image of canvas instance.
	     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.
	     * <b>Backwards incompatibility note:</b> The "overlayImageLeft"
	     * and "overlayImageTop" properties are deprecated since 1.3.9.
	     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.
	     * @type fabric.Image
	     * @default
	     */overlayImage:null, /**
	     * Indicates whether toObject/toDatalessObject should include default values
	     * @type Boolean
	     * @default
	     */includeDefaultValues:true, /**
	     * Indicates whether objects' state should be saved
	     * @type Boolean
	     * @default
	     */stateful:true, /**
	     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove} should also re-render canvas.
	     * Disabling this option could give a great performance boost when adding/removing a lot of objects to/from canvas at once
	     * (followed by a manual rendering after addition/deletion)
	     * @type Boolean
	     * @default
	     */renderOnAddRemove:true, /**
	     * Function that determines clipping of entire canvas area
	     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}
	     * @type Function
	     * @default
	     */clipTo:null, /**
	     * Indicates whether object controls (borders/controls) are rendered above overlay image
	     * @type Boolean
	     * @default
	     */controlsAboveOverlay:false, /**
	     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas
	     * @type Boolean
	     * @default
	     */allowTouchScrolling:false, /**
	     * Indicates whether this canvas will use image smoothing, this is on by default in browsers
	     * @type Boolean
	     * @default
	     */imageSmoothingEnabled:true, /**
	     * Indicates whether objects should remain in current stack position when selected. When false objects are brought to top and rendered as part of the selection group
	     * @type Boolean
	     * @default
	     */preserveObjectStacking:false, /**
	     * The transformation (in the format of Canvas transform) which focuses the viewport
	     * @type Array
	     * @default
	     */viewportTransform:[1,0,0,1,0,0], /**
	     * Callback; invoked right before object is about to be scaled/rotated
	     */onBeforeScaleRotate:function onBeforeScaleRotate(){ /* NOOP */}, /**
	     * @private
	     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on
	     * @param {Object} [options] Options object
	     */_initStatic:function _initStatic(el,options){this._objects = [];this._createLowerCanvas(el);this._initOptions(options);this._setImageSmoothing();if(options.overlayImage){this.setOverlayImage(options.overlayImage,this.renderAll.bind(this));}if(options.backgroundImage){this.setBackgroundImage(options.backgroundImage,this.renderAll.bind(this));}if(options.backgroundColor){this.setBackgroundColor(options.backgroundColor,this.renderAll.bind(this));}if(options.overlayColor){this.setOverlayColor(options.overlayColor,this.renderAll.bind(this));}this.calcOffset();}, /**
	     * Calculates canvas element offset relative to the document
	     * This method is also attached as "resize" event handler of window
	     * @return {fabric.Canvas} instance
	     * @chainable
	     */calcOffset:function calcOffset(){this._offset = getElementOffset(this.lowerCanvasEl);return this;}, /**
	     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas
	     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to
	     * @param {Function} callback callback to invoke when image is loaded and set as an overlay
	     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}
	     * @example <caption>Normal overlayImage with left/top = 0</caption>
	     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
	     *   // Needed to position overlayImage at 0/0
	     *   originX: 'left',
	     *   originY: 'top'
	     * });
	     * @example <caption>overlayImage with different properties</caption>
	     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
	     *   opacity: 0.5,
	     *   angle: 45,
	     *   left: 400,
	     *   top: 400,
	     *   originX: 'left',
	     *   originY: 'top'
	     * });
	     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>
	     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {
	     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});
	     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));
	     * });
	     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>
	     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
	     *   width: canvas.width,
	     *   height: canvas.height,
	     *   // Needed to position overlayImage at 0/0
	     *   originX: 'left',
	     *   originY: 'top'
	     * });
	     * @example <caption>overlayImage loaded from cross-origin</caption>
	     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {
	     *   opacity: 0.5,
	     *   angle: 45,
	     *   left: 400,
	     *   top: 400,
	     *   originX: 'left',
	     *   originY: 'top',
	     *   crossOrigin: 'anonymous'
	     * });
	     */setOverlayImage:function setOverlayImage(image,callback,options){return this.__setBgOverlayImage('overlayImage',image,callback,options);}, /**
	     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas
	     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to
	     * @param {Function} callback Callback to invoke when image is loaded and set as background
	     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     * @see {@link http://jsfiddle.net/fabricjs/YH9yD/|jsFiddle demo}
	     * @example <caption>Normal backgroundImage with left/top = 0</caption>
	     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
	     *   // Needed to position backgroundImage at 0/0
	     *   originX: 'left',
	     *   originY: 'top'
	     * });
	     * @example <caption>backgroundImage with different properties</caption>
	     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
	     *   opacity: 0.5,
	     *   angle: 45,
	     *   left: 400,
	     *   top: 400,
	     *   originX: 'left',
	     *   originY: 'top'
	     * });
	     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>
	     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {
	     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});
	     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));
	     * });
	     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>
	     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
	     *   width: canvas.width,
	     *   height: canvas.height,
	     *   // Needed to position backgroundImage at 0/0
	     *   originX: 'left',
	     *   originY: 'top'
	     * });
	     * @example <caption>backgroundImage loaded from cross-origin</caption>
	     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {
	     *   opacity: 0.5,
	     *   angle: 45,
	     *   left: 400,
	     *   top: 400,
	     *   originX: 'left',
	     *   originY: 'top',
	     *   crossOrigin: 'anonymous'
	     * });
	     */setBackgroundImage:function setBackgroundImage(image,callback,options){return this.__setBgOverlayImage('backgroundImage',image,callback,options);}, /**
	     * Sets {@link fabric.StaticCanvas#overlayColor|background color} for this canvas
	     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set background color to
	     * @param {Function} callback Callback to invoke when background color is set
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}
	     * @example <caption>Normal overlayColor - color value</caption>
	     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));
	     * @example <caption>fabric.Pattern used as overlayColor</caption>
	     * canvas.setOverlayColor({
	     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'
	     * }, canvas.renderAll.bind(canvas));
	     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>
	     * canvas.setOverlayColor({
	     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',
	     *   repeat: 'repeat',
	     *   offsetX: 200,
	     *   offsetY: 100
	     * }, canvas.renderAll.bind(canvas));
	     */setOverlayColor:function setOverlayColor(overlayColor,callback){return this.__setBgOverlayColor('overlayColor',overlayColor,callback);}, /**
	     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas
	     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to
	     * @param {Function} callback Callback to invoke when background color is set
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}
	     * @example <caption>Normal backgroundColor - color value</caption>
	     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));
	     * @example <caption>fabric.Pattern used as backgroundColor</caption>
	     * canvas.setBackgroundColor({
	     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'
	     * }, canvas.renderAll.bind(canvas));
	     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>
	     * canvas.setBackgroundColor({
	     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',
	     *   repeat: 'repeat',
	     *   offsetX: 200,
	     *   offsetY: 100
	     * }, canvas.renderAll.bind(canvas));
	     */setBackgroundColor:function setBackgroundColor(backgroundColor,callback){return this.__setBgOverlayColor('backgroundColor',backgroundColor,callback);}, /**
	     * @private
	     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}
	     */_setImageSmoothing:function _setImageSmoothing(){var ctx=this.getContext();ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;ctx.webkitImageSmoothingEnabled = this.imageSmoothingEnabled;ctx.mozImageSmoothingEnabled = this.imageSmoothingEnabled;ctx.msImageSmoothingEnabled = this.imageSmoothingEnabled;ctx.oImageSmoothingEnabled = this.imageSmoothingEnabled;}, /**
	     * @private
	     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}
	     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})
	     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to
	     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay
	     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.
	     */__setBgOverlayImage:function __setBgOverlayImage(property,image,callback,options){if(typeof image === 'string'){fabric.util.loadImage(image,function(img){this[property] = new fabric.Image(img,options);callback && callback();},this,options && options.crossOrigin);}else {options && image.setOptions(options);this[property] = image;callback && callback();}return this;}, /**
	     * @private
	     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}
	     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})
	     * @param {(Object|String|null)} color Object with pattern information, color value or null
	     * @param {Function} [callback] Callback is invoked when color is set
	     */__setBgOverlayColor:function __setBgOverlayColor(property,color,callback){if(color && color.source){var _this=this;fabric.util.loadImage(color.source,function(img){_this[property] = new fabric.Pattern({source:img,repeat:color.repeat,offsetX:color.offsetX,offsetY:color.offsetY});callback && callback();});}else {this[property] = color;callback && callback();}return this;}, /**
	     * @private
	     */_createCanvasElement:function _createCanvasElement(){var element=fabric.document.createElement('canvas');if(!element.style){element.style = {};}if(!element){throw CANVAS_INIT_ERROR;}this._initCanvasElement(element);return element;}, /**
	     * @private
	     * @param {HTMLElement} element
	     */_initCanvasElement:function _initCanvasElement(element){fabric.util.createCanvasElement(element);if(typeof element.getContext === 'undefined'){throw CANVAS_INIT_ERROR;}}, /**
	     * @private
	     * @param {Object} [options] Options object
	     */_initOptions:function _initOptions(options){for(var prop in options) {this[prop] = options[prop];}this.width = this.width || parseInt(this.lowerCanvasEl.width,10) || 0;this.height = this.height || parseInt(this.lowerCanvasEl.height,10) || 0;if(!this.lowerCanvasEl.style){return;}this.lowerCanvasEl.width = this.width;this.lowerCanvasEl.height = this.height;this.lowerCanvasEl.style.width = this.width + 'px';this.lowerCanvasEl.style.height = this.height + 'px';this.viewportTransform = this.viewportTransform.slice();}, /**
	     * Creates a bottom canvas
	     * @private
	     * @param {HTMLElement} [canvasEl]
	     */_createLowerCanvas:function _createLowerCanvas(canvasEl){this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();this._initCanvasElement(this.lowerCanvasEl);fabric.util.addClass(this.lowerCanvasEl,'lower-canvas');if(this.interactive){this._applyCanvasStyle(this.lowerCanvasEl);}this.contextContainer = this.lowerCanvasEl.getContext('2d');}, /**
	     * Returns canvas width (in px)
	     * @return {Number}
	     */getWidth:function getWidth(){return this.width;}, /**
	     * Returns canvas height (in px)
	     * @return {Number}
	     */getHeight:function getHeight(){return this.height;}, /**
	     * Sets width of this canvas instance
	     * @param {Number|String} value                         Value to set width to
	     * @param {Object}        [options]                     Options object
	     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions
	     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions
	     * @return {fabric.Canvas} instance
	     * @chainable true
	     */setWidth:function setWidth(value,options){return this.setDimensions({width:value},options);}, /**
	     * Sets height of this canvas instance
	     * @param {Number|String} value                         Value to set height to
	     * @param {Object}        [options]                     Options object
	     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions
	     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions
	     * @return {fabric.Canvas} instance
	     * @chainable true
	     */setHeight:function setHeight(value,options){return this.setDimensions({height:value},options);}, /**
	     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)
	     * @param {Object}        dimensions                    Object with width/height properties
	     * @param {Number|String} [dimensions.width]            Width of canvas element
	     * @param {Number|String} [dimensions.height]           Height of canvas element
	     * @param {Object}        [options]                     Options object
	     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions
	     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */setDimensions:function setDimensions(dimensions,options){var cssValue;options = options || {};for(var prop in dimensions) {cssValue = dimensions[prop];if(!options.cssOnly){this._setBackstoreDimension(prop,dimensions[prop]);cssValue += 'px';}if(!options.backstoreOnly){this._setCssDimension(prop,cssValue);}}if(!options.cssOnly){this.renderAll();}this.calcOffset();return this;}, /**
	     * Helper for setting width/height
	     * @private
	     * @param {String} prop property (width|height)
	     * @param {Number} value value to set property to
	     * @return {fabric.Canvas} instance
	     * @chainable true
	     */_setBackstoreDimension:function _setBackstoreDimension(prop,value){this.lowerCanvasEl[prop] = value;if(this.upperCanvasEl){this.upperCanvasEl[prop] = value;}if(this.cacheCanvasEl){this.cacheCanvasEl[prop] = value;}this[prop] = value;return this;}, /**
	     * Helper for setting css width/height
	     * @private
	     * @param {String} prop property (width|height)
	     * @param {String} value value to set property to
	     * @return {fabric.Canvas} instance
	     * @chainable true
	     */_setCssDimension:function _setCssDimension(prop,value){this.lowerCanvasEl.style[prop] = value;if(this.upperCanvasEl){this.upperCanvasEl.style[prop] = value;}if(this.wrapperEl){this.wrapperEl.style[prop] = value;}return this;}, /**
	     * Returns canvas zoom level
	     * @return {Number}
	     */getZoom:function getZoom(){return Math.sqrt(this.viewportTransform[0] * this.viewportTransform[3]);}, /**
	     * Sets viewport transform of this canvas instance
	     * @param {Array} vpt the transform in the form of context.transform
	     * @return {fabric.Canvas} instance
	     * @chainable true
	     */setViewportTransform:function setViewportTransform(vpt){var activeGroup=this.getActiveGroup();this.viewportTransform = vpt;this.renderAll();for(var i=0,len=this._objects.length;i < len;i++) {this._objects[i].setCoords();}if(activeGroup){activeGroup.setCoords();}return this;}, /**
	     * Sets zoom level of this canvas instance, zoom centered around point
	     * @param {fabric.Point} point to zoom with respect to
	     * @param {Number} value to set zoom to, less than 1 zooms out
	     * @return {fabric.Canvas} instance
	     * @chainable true
	     */zoomToPoint:function zoomToPoint(point,value){ // TODO: just change the scale, preserve other transformations
	var before=point;point = fabric.util.transformPoint(point,fabric.util.invertTransform(this.viewportTransform));this.viewportTransform[0] = value;this.viewportTransform[3] = value;var after=fabric.util.transformPoint(point,this.viewportTransform);this.viewportTransform[4] += before.x - after.x;this.viewportTransform[5] += before.y - after.y;this.renderAll();for(var i=0,len=this._objects.length;i < len;i++) {this._objects[i].setCoords();}return this;}, /**
	     * Sets zoom level of this canvas instance
	     * @param {Number} value to set zoom to, less than 1 zooms out
	     * @return {fabric.Canvas} instance
	     * @chainable true
	     */setZoom:function setZoom(value){this.zoomToPoint(new fabric.Point(0,0),value);return this;}, /**
	     * Pan viewport so as to place point at top left corner of canvas
	     * @param {fabric.Point} point to move to
	     * @return {fabric.Canvas} instance
	     * @chainable true
	     */absolutePan:function absolutePan(point){this.viewportTransform[4] = -point.x;this.viewportTransform[5] = -point.y;this.renderAll();for(var i=0,len=this._objects.length;i < len;i++) {this._objects[i].setCoords();}return this;}, /**
	     * Pans viewpoint relatively
	     * @param {fabric.Point} point (position vector) to move by
	     * @return {fabric.Canvas} instance
	     * @chainable true
	     */relativePan:function relativePan(point){return this.absolutePan(new fabric.Point(-point.x - this.viewportTransform[4],-point.y - this.viewportTransform[5]));}, /**
	     * Returns &lt;canvas> element corresponding to this instance
	     * @return {HTMLCanvasElement}
	     */getElement:function getElement(){return this.lowerCanvasEl;}, /**
	     * Returns currently selected object, if any
	     * @return {fabric.Object}
	     */getActiveObject:function getActiveObject(){return null;}, /**
	     * Returns currently selected group of object, if any
	     * @return {fabric.Group}
	     */getActiveGroup:function getActiveGroup(){return null;}, /**
	     * Given a context, renders an object on that context
	     * @param {CanvasRenderingContext2D} ctx Context to render object on
	     * @param {fabric.Object} object Object to render
	     * @private
	     */_draw:function _draw(ctx,object){if(!object){return;}ctx.save();var v=this.viewportTransform;ctx.transform(v[0],v[1],v[2],v[3],v[4],v[5]);if(this._shouldRenderObject(object)){object.render(ctx);}ctx.restore();if(!this.controlsAboveOverlay){object._renderControls(ctx);}},_shouldRenderObject:function _shouldRenderObject(object){if(!object){return false;}return object !== this.getActiveGroup() || !this.preserveObjectStacking;}, /**
	     * @private
	     * @param {fabric.Object} obj Object that was added
	     */_onObjectAdded:function _onObjectAdded(obj){this.stateful && obj.setupState();obj.canvas = this;obj.setCoords();this.fire('object:added',{target:obj});obj.fire('added');}, /**
	     * @private
	     * @param {fabric.Object} obj Object that was removed
	     */_onObjectRemoved:function _onObjectRemoved(obj){ // removing active object should fire "selection:cleared" events
	if(this.getActiveObject() === obj){this.fire('before:selection:cleared',{target:obj});this._discardActiveObject();this.fire('selection:cleared');}this.fire('object:removed',{target:obj});obj.fire('removed');}, /**
	     * Clears specified context of canvas element
	     * @param {CanvasRenderingContext2D} ctx Context to clear
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */clearContext:function clearContext(ctx){ctx.clearRect(0,0,this.width,this.height);return this;}, /**
	     * Returns context of canvas where objects are drawn
	     * @return {CanvasRenderingContext2D}
	     */getContext:function getContext(){return this.contextContainer;}, /**
	     * Clears all contexts (background, main, top) of an instance
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */clear:function clear(){this._objects.length = 0;if(this.discardActiveGroup){this.discardActiveGroup();}if(this.discardActiveObject){this.discardActiveObject();}this.clearContext(this.contextContainer);if(this.contextTop){this.clearContext(this.contextTop);}this.fire('canvas:cleared');this.renderAll();return this;}, /**
	     * Renders both the top canvas and the secondary container canvas.
	     * @param {Boolean} [allOnTop] Whether we want to force all images to be rendered on the top canvas
	     * @return {fabric.Canvas} instance
	     * @chainable
	     */renderAll:function renderAll(allOnTop){var canvasToDrawOn=this[allOnTop === true && this.interactive?'contextTop':'contextContainer'],activeGroup=this.getActiveGroup();if(this.contextTop && this.selection && !this._groupSelector){this.clearContext(this.contextTop);}if(!allOnTop){this.clearContext(canvasToDrawOn);}this.fire('before:render');if(this.clipTo){fabric.util.clipContext(this,canvasToDrawOn);}this._renderBackground(canvasToDrawOn);this._renderObjects(canvasToDrawOn,activeGroup);this._renderActiveGroup(canvasToDrawOn,activeGroup);if(this.clipTo){canvasToDrawOn.restore();}this._renderOverlay(canvasToDrawOn);if(this.controlsAboveOverlay && this.interactive){this.drawControls(canvasToDrawOn);}this.fire('after:render');return this;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {fabric.Group} activeGroup
	     */_renderObjects:function _renderObjects(ctx,activeGroup){var i,length; // fast path
	if(!activeGroup || this.preserveObjectStacking){for(i = 0,length = this._objects.length;i < length;++i) {this._draw(ctx,this._objects[i]);}}else {for(i = 0,length = this._objects.length;i < length;++i) {if(this._objects[i] && !activeGroup.contains(this._objects[i])){this._draw(ctx,this._objects[i]);}}}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {fabric.Group} activeGroup
	     */_renderActiveGroup:function _renderActiveGroup(ctx,activeGroup){ // delegate rendering to group selection (if one exists)
	if(activeGroup){ //Store objects in group preserving order, then replace
	var sortedObjects=[];this.forEachObject(function(object){if(activeGroup.contains(object)){sortedObjects.push(object);}});activeGroup._set('objects',sortedObjects);this._draw(ctx,activeGroup);}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderBackground:function _renderBackground(ctx){if(this.backgroundColor){ctx.fillStyle = this.backgroundColor.toLive?this.backgroundColor.toLive(ctx):this.backgroundColor;ctx.fillRect(this.backgroundColor.offsetX || 0,this.backgroundColor.offsetY || 0,this.width,this.height);}if(this.backgroundImage){this._draw(ctx,this.backgroundImage);}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderOverlay:function _renderOverlay(ctx){if(this.overlayColor){ctx.fillStyle = this.overlayColor.toLive?this.overlayColor.toLive(ctx):this.overlayColor;ctx.fillRect(this.overlayColor.offsetX || 0,this.overlayColor.offsetY || 0,this.width,this.height);}if(this.overlayImage){this._draw(ctx,this.overlayImage);}}, /**
	     * Method to render only the top canvas.
	     * Also used to render the group selection box.
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */renderTop:function renderTop(){var ctx=this.contextTop || this.contextContainer;this.clearContext(ctx); // we render the top context - last object
	if(this.selection && this._groupSelector){this._drawSelection();} // delegate rendering to group selection if one exists
	// used for drawing selection borders/controls
	var activeGroup=this.getActiveGroup();if(activeGroup){activeGroup.render(ctx);}this._renderOverlay(ctx);this.fire('after:render');return this;}, /**
	     * Returns coordinates of a center of canvas.
	     * Returned value is an object with top and left properties
	     * @return {Object} object with "top" and "left" number values
	     */getCenter:function getCenter(){return {top:this.getHeight() / 2,left:this.getWidth() / 2};}, /**
	     * Centers object horizontally.
	     * You might need to call `setCoords` on an object after centering, to update controls area.
	     * @param {fabric.Object} object Object to center horizontally
	     * @return {fabric.Canvas} thisArg
	     */centerObjectH:function centerObjectH(object){this._centerObject(object,new fabric.Point(this.getCenter().left,object.getCenterPoint().y));this.renderAll();return this;}, /**
	     * Centers object vertically.
	     * You might need to call `setCoords` on an object after centering, to update controls area.
	     * @param {fabric.Object} object Object to center vertically
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */centerObjectV:function centerObjectV(object){this._centerObject(object,new fabric.Point(object.getCenterPoint().x,this.getCenter().top));this.renderAll();return this;}, /**
	     * Centers object vertically and horizontally.
	     * You might need to call `setCoords` on an object after centering, to update controls area.
	     * @param {fabric.Object} object Object to center vertically and horizontally
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */centerObject:function centerObject(object){var center=this.getCenter();this._centerObject(object,new fabric.Point(center.left,center.top));this.renderAll();return this;}, /**
	     * @private
	     * @param {fabric.Object} object Object to center
	     * @param {fabric.Point} center Center point
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */_centerObject:function _centerObject(object,center){object.setPositionByOrigin(center,'center','center');return this;}, /**
	     * Returs dataless JSON representation of canvas
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {String} json string
	     */toDatalessJSON:function toDatalessJSON(propertiesToInclude){return this.toDatalessObject(propertiesToInclude);}, /**
	     * Returns object representation of canvas
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toObject:function toObject(propertiesToInclude){return this._toObjectMethod('toObject',propertiesToInclude);}, /**
	     * Returns dataless object representation of canvas
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toDatalessObject:function toDatalessObject(propertiesToInclude){return this._toObjectMethod('toDatalessObject',propertiesToInclude);}, /**
	     * @private
	     */_toObjectMethod:function _toObjectMethod(methodName,propertiesToInclude){var data={objects:this._toObjects(methodName,propertiesToInclude)};extend(data,this.__serializeBgOverlay());fabric.util.populateWithProperties(this,data,propertiesToInclude);return data;}, /**
	     * @private
	     */_toObjects:function _toObjects(methodName,propertiesToInclude){return this.getObjects().map(function(instance){return this._toObject(instance,methodName,propertiesToInclude);},this);}, /**
	     * @private
	     */_toObject:function _toObject(instance,methodName,propertiesToInclude){var originalValue;if(!this.includeDefaultValues){originalValue = instance.includeDefaultValues;instance.includeDefaultValues = false;} //If the object is part of the current selection group, it should
	//be transformed appropriately
	//i.e. it should be serialised as it would appear if the selection group
	//were to be destroyed.
	var originalProperties=this._realizeGroupTransformOnObject(instance),object=instance[methodName](propertiesToInclude);if(!this.includeDefaultValues){instance.includeDefaultValues = originalValue;} //Undo the damage we did by changing all of its properties
	this._unwindGroupTransformOnObject(instance,originalProperties);return object;}, /**
	     * Realises an object's group transformation on it
	     * @private
	     * @param {fabric.Object} [instance] the object to transform (gets mutated)
	     * @returns the original values of instance which were changed
	     */_realizeGroupTransformOnObject:function _realizeGroupTransformOnObject(instance){var layoutProps=['angle','flipX','flipY','height','left','scaleX','scaleY','top','width'];if(instance.group && instance.group === this.getActiveGroup()){ //Copy all the positionally relevant properties across now
	var originalValues={};layoutProps.forEach(function(prop){originalValues[prop] = instance[prop];});this.getActiveGroup().realizeTransform(instance);return originalValues;}else {return null;}}, /*
	     * Restores the changed properties of instance
	     * @private
	     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)
	     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject
	     */_unwindGroupTransformOnObject:function _unwindGroupTransformOnObject(instance,originalValues){if(originalValues){instance.set(originalValues);}}, /**
	     * @private
	     */__serializeBgOverlay:function __serializeBgOverlay(){var data={background:this.backgroundColor && this.backgroundColor.toObject?this.backgroundColor.toObject():this.backgroundColor};if(this.overlayColor){data.overlay = this.overlayColor.toObject?this.overlayColor.toObject():this.overlayColor;}if(this.backgroundImage){data.backgroundImage = this.backgroundImage.toObject();}if(this.overlayImage){data.overlayImage = this.overlayImage.toObject();}return data;}, /* _TO_SVG_START_ */ /**
	     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,
	     * a zoomed canvas will then produce zoomed SVG output.
	     * @type Boolean
	     * @default
	     */svgViewportTransformation:true, /**
	     * Returns SVG representation of canvas
	     * @function
	     * @param {Object} [options] Options object for SVG output
	     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included
	     * @param {Object} [options.viewBox] SVG viewbox object
	     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox
	     * @param {Number} [options.viewBox.y] y-coordinate of viewbox
	     * @param {Number} [options.viewBox.width] Width of viewbox
	     * @param {Number} [options.viewBox.height] Height of viewbox
	     * @param {String} [options.encoding=UTF-8] Encoding of SVG output
	     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.
	     * @return {String} SVG string
	     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#serialization}
	     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}
	     * @example <caption>Normal SVG output</caption>
	     * var svg = canvas.toSVG();
	     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>
	     * var svg = canvas.toSVG({suppressPreamble: true});
	     * @example <caption>SVG output with viewBox attribute</caption>
	     * var svg = canvas.toSVG({
	     *   viewBox: {
	     *     x: 100,
	     *     y: 100,
	     *     width: 200,
	     *     height: 300
	     *   }
	     * });
	     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>
	     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});
	     * @example <caption>Modify SVG output with reviver function</caption>
	     * var svg = canvas.toSVG(null, function(svg) {
	     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');
	     * });
	     */toSVG:function toSVG(options,reviver){options || (options = {});var markup=[];this._setSVGPreamble(markup,options);this._setSVGHeader(markup,options);this._setSVGBgOverlayColor(markup,'backgroundColor');this._setSVGBgOverlayImage(markup,'backgroundImage');this._setSVGObjects(markup,reviver);this._setSVGBgOverlayColor(markup,'overlayColor');this._setSVGBgOverlayImage(markup,'overlayImage');markup.push('</svg>');return markup.join('');}, /**
	     * @private
	     */_setSVGPreamble:function _setSVGPreamble(markup,options){if(!options.suppressPreamble){markup.push('<?xml version="1.0" encoding="',options.encoding || 'UTF-8','" standalone="no" ?>','<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" ','"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">\n');}}, /**
	     * @private
	     */_setSVGHeader:function _setSVGHeader(markup,options){var width,height,vpt;if(options.viewBox){width = options.viewBox.width;height = options.viewBox.height;}else {width = this.width;height = this.height;if(!this.svgViewportTransformation){vpt = this.viewportTransform;width /= vpt[0];height /= vpt[3];}}markup.push('<svg ','xmlns="http://www.w3.org/2000/svg" ','xmlns:xlink="http://www.w3.org/1999/xlink" ','version="1.1" ','width="',width,'" ','height="',height,'" ',this.backgroundColor && !this.backgroundColor.toLive?'style="background-color: ' + this.backgroundColor + '" ':null,options.viewBox?'viewBox="' + options.viewBox.x + ' ' + options.viewBox.y + ' ' + options.viewBox.width + ' ' + options.viewBox.height + '" ':null,'xml:space="preserve">','<desc>Created with Fabric.js ',fabric.version,'</desc>','<defs>',fabric.createSVGFontFacesMarkup(this.getObjects()),fabric.createSVGRefElementsMarkup(this),'</defs>');}, /**
	     * @private
	     */_setSVGObjects:function _setSVGObjects(markup,reviver){for(var i=0,objects=this.getObjects(),len=objects.length;i < len;i++) {var instance=objects[i], //If the object is in a selection group, simulate what would happen to that
	//object when the group is deselected
	originalProperties=this._realizeGroupTransformOnObject(instance);markup.push(instance.toSVG(reviver));this._unwindGroupTransformOnObject(instance,originalProperties);}}, /**
	     * @private
	     */_setSVGBgOverlayImage:function _setSVGBgOverlayImage(markup,property){if(this[property] && this[property].toSVG){markup.push(this[property].toSVG());}}, /**
	     * @private
	     */_setSVGBgOverlayColor:function _setSVGBgOverlayColor(markup,property){if(this[property] && this[property].source){markup.push('<rect x="',this[property].offsetX,'" y="',this[property].offsetY,'" ','width="',this[property].repeat === 'repeat-y' || this[property].repeat === 'no-repeat'?this[property].source.width:this.width,'" height="',this[property].repeat === 'repeat-x' || this[property].repeat === 'no-repeat'?this[property].source.height:this.height,'" fill="url(#' + property + 'Pattern)"','></rect>');}else if(this[property] && property === 'overlayColor'){markup.push('<rect x="0" y="0" ','width="',this.width,'" height="',this.height,'" fill="',this[property],'"','></rect>');}}, /* _TO_SVG_END_ */ /**
	     * Moves an object to the bottom of the stack of drawn objects
	     * @param {fabric.Object} object Object to send to back
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */sendToBack:function sendToBack(object){removeFromArray(this._objects,object);this._objects.unshift(object);return this.renderAll && this.renderAll();}, /**
	     * Moves an object to the top of the stack of drawn objects
	     * @param {fabric.Object} object Object to send
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */bringToFront:function bringToFront(object){removeFromArray(this._objects,object);this._objects.push(object);return this.renderAll && this.renderAll();}, /**
	     * Moves an object down in stack of drawn objects
	     * @param {fabric.Object} object Object to send
	     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */sendBackwards:function sendBackwards(object,intersecting){var idx=this._objects.indexOf(object); // if object is not on the bottom of stack
	if(idx !== 0){var newIdx=this._findNewLowerIndex(object,idx,intersecting);removeFromArray(this._objects,object);this._objects.splice(newIdx,0,object);this.renderAll && this.renderAll();}return this;}, /**
	     * @private
	     */_findNewLowerIndex:function _findNewLowerIndex(object,idx,intersecting){var newIdx;if(intersecting){newIdx = idx; // traverse down the stack looking for the nearest intersecting object
	for(var i=idx - 1;i >= 0;--i) {var isIntersecting=object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);if(isIntersecting){newIdx = i;break;}}}else {newIdx = idx - 1;}return newIdx;}, /**
	     * Moves an object up in stack of drawn objects
	     * @param {fabric.Object} object Object to send
	     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */bringForward:function bringForward(object,intersecting){var idx=this._objects.indexOf(object); // if object is not on top of stack (last item in an array)
	if(idx !== this._objects.length - 1){var newIdx=this._findNewUpperIndex(object,idx,intersecting);removeFromArray(this._objects,object);this._objects.splice(newIdx,0,object);this.renderAll && this.renderAll();}return this;}, /**
	     * @private
	     */_findNewUpperIndex:function _findNewUpperIndex(object,idx,intersecting){var newIdx;if(intersecting){newIdx = idx; // traverse up the stack looking for the nearest intersecting object
	for(var i=idx + 1;i < this._objects.length;++i) {var isIntersecting=object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);if(isIntersecting){newIdx = i;break;}}}else {newIdx = idx + 1;}return newIdx;}, /**
	     * Moves an object to specified level in stack of drawn objects
	     * @param {fabric.Object} object Object to send
	     * @param {Number} index Position to move to
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */moveTo:function moveTo(object,index){removeFromArray(this._objects,object);this._objects.splice(index,0,object);return this.renderAll && this.renderAll();}, /**
	     * Clears a canvas element and removes all event listeners
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */dispose:function dispose(){this.clear();this.interactive && this.removeListeners();return this;}, /**
	     * Returns a string representation of an instance
	     * @return {String} string representation of an instance
	     */toString:function toString(){return '#<fabric.Canvas (' + this.complexity() + '): ' + '{ objects: ' + this.getObjects().length + ' }>';}});extend(fabric.StaticCanvas.prototype,fabric.Observable);extend(fabric.StaticCanvas.prototype,fabric.Collection);extend(fabric.StaticCanvas.prototype,fabric.DataURLExporter);extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */{ /**
	     * @static
	     * @type String
	     * @default
	     */EMPTY_JSON:'{"objects": [], "background": "white"}', /**
	     * Provides a way to check support of some of the canvas methods
	     * (either those of HTMLCanvasElement itself, or rendering context)
	     *
	     * @param {String} methodName Method to check support for;
	     *                            Could be one of "getImageData", "toDataURL", "toDataURLWithQuality" or "setLineDash"
	     * @return {Boolean | null} `true` if method is supported (or at least exists),
	     *                          `null` if canvas element or context can not be initialized
	     */supports:function supports(methodName){var el=fabric.util.createCanvasElement();if(!el || !el.getContext){return null;}var ctx=el.getContext('2d');if(!ctx){return null;}switch(methodName){case 'getImageData':return typeof ctx.getImageData !== 'undefined';case 'setLineDash':return typeof ctx.setLineDash !== 'undefined';case 'toDataURL':return typeof el.toDataURL !== 'undefined';case 'toDataURLWithQuality':try{el.toDataURL('image/jpeg',0);return true;}catch(e) {}return false;default:return null;}}}); /**
	   * Returns JSON representation of canvas
	   * @function
	   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	   * @return {String} JSON string
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#serialization}
	   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}
	   * @example <caption>JSON without additional properties</caption>
	   * var json = canvas.toJSON();
	   * @example <caption>JSON with additional properties included</caption>
	   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);
	   * @example <caption>JSON without default values</caption>
	   * canvas.includeDefaultValues = false;
	   * var json = canvas.toJSON();
	   */fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;})(); /**
	 * BaseBrush class
	 * @class fabric.BaseBrush
	 * @see {@link http://fabricjs.com/freedrawing/|Freedrawing demo}
	 */fabric.BaseBrush = fabric.util.createClass( /** @lends fabric.BaseBrush.prototype */{ /**
	   * Color of a brush
	   * @type String
	   * @default
	   */color:'rgb(0, 0, 0)', /**
	   * Width of a brush
	   * @type Number
	   * @default
	   */width:1, /**
	   * Shadow object representing shadow of this shape.
	   * <b>Backwards incompatibility note:</b> This property replaces "shadowColor" (String), "shadowOffsetX" (Number),
	   * "shadowOffsetY" (Number) and "shadowBlur" (Number) since v1.2.12
	   * @type fabric.Shadow
	   * @default
	   */shadow:null, /**
	   * Line endings style of a brush (one of "butt", "round", "square")
	   * @type String
	   * @default
	   */strokeLineCap:'round', /**
	   * Corner style of a brush (one of "bevil", "round", "miter")
	   * @type String
	   * @default
	   */strokeLineJoin:'round', /**
	   * Stroke Dash Array.
	   * @type Array
	   * @default
	   */strokeDashArray:null, /**
	   * Sets shadow of an object
	   * @param {Object|String} [options] Options object or string (e.g. "2px 2px 10px rgba(0,0,0,0.2)")
	   * @return {fabric.Object} thisArg
	   * @chainable
	   */setShadow:function setShadow(options){this.shadow = new fabric.Shadow(options);return this;}, /**
	   * Sets brush styles
	   * @private
	   */_setBrushStyles:function _setBrushStyles(){var ctx=this.canvas.contextTop;ctx.strokeStyle = this.color;ctx.lineWidth = this.width;ctx.lineCap = this.strokeLineCap;ctx.lineJoin = this.strokeLineJoin;if(this.strokeDashArray && fabric.StaticCanvas.supports('setLineDash')){ctx.setLineDash(this.strokeDashArray);}}, /**
	   * Sets brush shadow styles
	   * @private
	   */_setShadow:function _setShadow(){if(!this.shadow){return;}var ctx=this.canvas.contextTop;ctx.shadowColor = this.shadow.color;ctx.shadowBlur = this.shadow.blur;ctx.shadowOffsetX = this.shadow.offsetX;ctx.shadowOffsetY = this.shadow.offsetY;}, /**
	   * Removes brush shadow styles
	   * @private
	   */_resetShadow:function _resetShadow(){var ctx=this.canvas.contextTop;ctx.shadowColor = '';ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;}});(function(){ /**
	   * PencilBrush class
	   * @class fabric.PencilBrush
	   * @extends fabric.BaseBrush
	   */fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */{ /**
	     * Constructor
	     * @param {fabric.Canvas} canvas
	     * @return {fabric.PencilBrush} Instance of a pencil brush
	     */initialize:function initialize(canvas){this.canvas = canvas;this._points = [];}, /**
	     * Inovoked on mouse down
	     * @param {Object} pointer
	     */onMouseDown:function onMouseDown(pointer){this._prepareForDrawing(pointer); // capture coordinates immediately
	// this allows to draw dots (when movement never occurs)
	this._captureDrawingPath(pointer);this._render();}, /**
	     * Inovoked on mouse move
	     * @param {Object} pointer
	     */onMouseMove:function onMouseMove(pointer){this._captureDrawingPath(pointer); // redraw curve
	// clear top canvas
	this.canvas.clearContext(this.canvas.contextTop);this._render();}, /**
	     * Invoked on mouse up
	     */onMouseUp:function onMouseUp(){this._finalizeAndAddPath();}, /**
	     * @private
	     * @param {Object} pointer Actual mouse position related to the canvas.
	     */_prepareForDrawing:function _prepareForDrawing(pointer){var p=new fabric.Point(pointer.x,pointer.y);this._reset();this._addPoint(p);this.canvas.contextTop.moveTo(p.x,p.y);}, /**
	     * @private
	     * @param {fabric.Point} point Point to be added to points array
	     */_addPoint:function _addPoint(point){this._points.push(point);}, /**
	     * Clear points array and set contextTop canvas style.
	     * @private
	     */_reset:function _reset(){this._points.length = 0;this._setBrushStyles();this._setShadow();}, /**
	     * @private
	     * @param {Object} pointer Actual mouse position related to the canvas.
	     */_captureDrawingPath:function _captureDrawingPath(pointer){var pointerPoint=new fabric.Point(pointer.x,pointer.y);this._addPoint(pointerPoint);}, /**
	     * Draw a smooth path on the topCanvas using quadraticCurveTo
	     * @private
	     */_render:function _render(){var ctx=this.canvas.contextTop,v=this.canvas.viewportTransform,p1=this._points[0],p2=this._points[1];ctx.save();ctx.transform(v[0],v[1],v[2],v[3],v[4],v[5]);ctx.beginPath(); //if we only have 2 points in the path and they are the same
	//it means that the user only clicked the canvas without moving the mouse
	//then we should be drawing a dot. A path isn't drawn between two identical dots
	//that's why we set them apart a bit
	if(this._points.length === 2 && p1.x === p2.x && p1.y === p2.y){p1.x -= 0.5;p2.x += 0.5;}ctx.moveTo(p1.x,p1.y);for(var i=1,len=this._points.length;i < len;i++) { // we pick the point between pi + 1 & pi + 2 as the
	// end point and p1 as our control point.
	var midPoint=p1.midPointFrom(p2);ctx.quadraticCurveTo(p1.x,p1.y,midPoint.x,midPoint.y);p1 = this._points[i];p2 = this._points[i + 1];} // Draw last line as a straight line while
	// we wait for the next point to be able to calculate
	// the bezier control point
	ctx.lineTo(p1.x,p1.y);ctx.stroke();ctx.restore();}, /**
	     * Converts points to SVG path
	     * @param {Array} points Array of points
	     * @param {Number} minX
	     * @param {Number} minY
	     * @return {String} SVG path
	     */convertPointsToSVGPath:function convertPointsToSVGPath(points){var path=[],p1=new fabric.Point(points[0].x,points[0].y),p2=new fabric.Point(points[1].x,points[1].y);path.push('M ',points[0].x,' ',points[0].y,' ');for(var i=1,len=points.length;i < len;i++) {var midPoint=p1.midPointFrom(p2); // p1 is our bezier control point
	// midpoint is our endpoint
	// start point is p(i-1) value.
	path.push('Q ',p1.x,' ',p1.y,' ',midPoint.x,' ',midPoint.y,' ');p1 = new fabric.Point(points[i].x,points[i].y);if(i + 1 < points.length){p2 = new fabric.Point(points[i + 1].x,points[i + 1].y);}}path.push('L ',p1.x,' ',p1.y,' ');return path;}, /**
	     * Creates fabric.Path object to add on canvas
	     * @param {String} pathData Path data
	     * @return {fabric.Path} Path to add on canvas
	     */createPath:function createPath(pathData){var path=new fabric.Path(pathData,{fill:null,stroke:this.color,strokeWidth:this.width,strokeLineCap:this.strokeLineCap,strokeLineJoin:this.strokeLineJoin,strokeDashArray:this.strokeDashArray,originX:'center',originY:'center'});if(this.shadow){this.shadow.affectStroke = true;path.setShadow(this.shadow);}return path;}, /**
	     * On mouseup after drawing the path on contextTop canvas
	     * we use the points captured to create an new fabric path object
	     * and add it to the fabric canvas.
	     */_finalizeAndAddPath:function _finalizeAndAddPath(){var ctx=this.canvas.contextTop;ctx.closePath();var pathData=this.convertPointsToSVGPath(this._points).join('');if(pathData === 'M 0 0 Q 0 0 0 0 L 0 0'){ // do not create 0 width/height paths, as they are
	// rendered inconsistently across browsers
	// Firefox 4, for example, renders a dot,
	// whereas Chrome 10 renders nothing
	this.canvas.renderAll();return;}var path=this.createPath(pathData);this.canvas.add(path);path.setCoords();this.canvas.clearContext(this.canvas.contextTop);this._resetShadow();this.canvas.renderAll(); // fire event 'path' created
	this.canvas.fire('path:created',{path:path});}});})(); /**
	 * CircleBrush class
	 * @class fabric.CircleBrush
	 */fabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */{ /**
	   * Width of a brush
	   * @type Number
	   * @default
	   */width:10, /**
	   * Constructor
	   * @param {fabric.Canvas} canvas
	   * @return {fabric.CircleBrush} Instance of a circle brush
	   */initialize:function initialize(canvas){this.canvas = canvas;this.points = [];}, /**
	  * Invoked inside on mouse down and mouse move
	  * @param {Object} pointer
	  */drawDot:function drawDot(pointer){var point=this.addPoint(pointer),ctx=this.canvas.contextTop,v=this.canvas.viewportTransform;ctx.save();ctx.transform(v[0],v[1],v[2],v[3],v[4],v[5]);ctx.fillStyle = point.fill;ctx.beginPath();ctx.arc(point.x,point.y,point.radius,0,Math.PI * 2,false);ctx.closePath();ctx.fill();ctx.restore();}, /**
	   * Invoked on mouse down
	   */onMouseDown:function onMouseDown(pointer){this.points.length = 0;this.canvas.clearContext(this.canvas.contextTop);this._setShadow();this.drawDot(pointer);}, /**
	   * Invoked on mouse move
	   * @param {Object} pointer
	   */onMouseMove:function onMouseMove(pointer){this.drawDot(pointer);}, /**
	   * Invoked on mouse up
	   */onMouseUp:function onMouseUp(){var originalRenderOnAddRemove=this.canvas.renderOnAddRemove;this.canvas.renderOnAddRemove = false;var circles=[];for(var i=0,len=this.points.length;i < len;i++) {var point=this.points[i],circle=new fabric.Circle({radius:point.radius,left:point.x,top:point.y,originX:'center',originY:'center',fill:point.fill});this.shadow && circle.setShadow(this.shadow);circles.push(circle);}var group=new fabric.Group(circles,{originX:'center',originY:'center'});group.canvas = this.canvas;this.canvas.add(group);this.canvas.fire('path:created',{path:group});this.canvas.clearContext(this.canvas.contextTop);this._resetShadow();this.canvas.renderOnAddRemove = originalRenderOnAddRemove;this.canvas.renderAll();}, /**
	   * @param {Object} pointer
	   * @return {fabric.Point} Just added pointer point
	   */addPoint:function addPoint(pointer){var pointerPoint=new fabric.Point(pointer.x,pointer.y),circleRadius=fabric.util.getRandomInt(Math.max(0,this.width - 20),this.width + 20) / 2,circleColor=new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0,100) / 100).toRgba();pointerPoint.radius = circleRadius;pointerPoint.fill = circleColor;this.points.push(pointerPoint);return pointerPoint;}}); /**
	 * SprayBrush class
	 * @class fabric.SprayBrush
	 */fabric.SprayBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */{ /**
	   * Width of a spray
	   * @type Number
	   * @default
	   */width:10, /**
	   * Density of a spray (number of dots per chunk)
	   * @type Number
	   * @default
	   */density:20, /**
	   * Width of spray dots
	   * @type Number
	   * @default
	   */dotWidth:1, /**
	   * Width variance of spray dots
	   * @type Number
	   * @default
	   */dotWidthVariance:1, /**
	   * Whether opacity of a dot should be random
	   * @type Boolean
	   * @default
	   */randomOpacity:false, /**
	   * Whether overlapping dots (rectangles) should be removed (for performance reasons)
	   * @type Boolean
	   * @default
	   */optimizeOverlapping:true, /**
	   * Constructor
	   * @param {fabric.Canvas} canvas
	   * @return {fabric.SprayBrush} Instance of a spray brush
	   */initialize:function initialize(canvas){this.canvas = canvas;this.sprayChunks = [];}, /**
	   * Invoked on mouse down
	   * @param {Object} pointer
	   */onMouseDown:function onMouseDown(pointer){this.sprayChunks.length = 0;this.canvas.clearContext(this.canvas.contextTop);this._setShadow();this.addSprayChunk(pointer);this.render();}, /**
	   * Invoked on mouse move
	   * @param {Object} pointer
	   */onMouseMove:function onMouseMove(pointer){this.addSprayChunk(pointer);this.render();}, /**
	   * Invoked on mouse up
	   */onMouseUp:function onMouseUp(){var originalRenderOnAddRemove=this.canvas.renderOnAddRemove;this.canvas.renderOnAddRemove = false;var rects=[];for(var i=0,ilen=this.sprayChunks.length;i < ilen;i++) {var sprayChunk=this.sprayChunks[i];for(var j=0,jlen=sprayChunk.length;j < jlen;j++) {var rect=new fabric.Rect({width:sprayChunk[j].width,height:sprayChunk[j].width,left:sprayChunk[j].x + 1,top:sprayChunk[j].y + 1,originX:'center',originY:'center',fill:this.color});this.shadow && rect.setShadow(this.shadow);rects.push(rect);}}if(this.optimizeOverlapping){rects = this._getOptimizedRects(rects);}var group=new fabric.Group(rects,{originX:'center',originY:'center'});group.canvas = this.canvas;this.canvas.add(group);this.canvas.fire('path:created',{path:group});this.canvas.clearContext(this.canvas.contextTop);this._resetShadow();this.canvas.renderOnAddRemove = originalRenderOnAddRemove;this.canvas.renderAll();}, /**
	   * @private
	   * @param {Array} rects
	   */_getOptimizedRects:function _getOptimizedRects(rects){ // avoid creating duplicate rects at the same coordinates
	var uniqueRects={},key;for(var i=0,len=rects.length;i < len;i++) {key = rects[i].left + '' + rects[i].top;if(!uniqueRects[key]){uniqueRects[key] = rects[i];}}var uniqueRectsArray=[];for(key in uniqueRects) {uniqueRectsArray.push(uniqueRects[key]);}return uniqueRectsArray;}, /**
	   * Renders brush
	   */render:function render(){var ctx=this.canvas.contextTop;ctx.fillStyle = this.color;var v=this.canvas.viewportTransform;ctx.save();ctx.transform(v[0],v[1],v[2],v[3],v[4],v[5]);for(var i=0,len=this.sprayChunkPoints.length;i < len;i++) {var point=this.sprayChunkPoints[i];if(typeof point.opacity !== 'undefined'){ctx.globalAlpha = point.opacity;}ctx.fillRect(point.x,point.y,point.width,point.width);}ctx.restore();}, /**
	   * @param {Object} pointer
	   */addSprayChunk:function addSprayChunk(pointer){this.sprayChunkPoints = [];var x,y,width,radius=this.width / 2;for(var i=0;i < this.density;i++) {x = fabric.util.getRandomInt(pointer.x - radius,pointer.x + radius);y = fabric.util.getRandomInt(pointer.y - radius,pointer.y + radius);if(this.dotWidthVariance){width = fabric.util.getRandomInt( // bottom clamp width to 1
	Math.max(1,this.dotWidth - this.dotWidthVariance),this.dotWidth + this.dotWidthVariance);}else {width = this.dotWidth;}var point=new fabric.Point(x,y);point.width = width;if(this.randomOpacity){point.opacity = fabric.util.getRandomInt(0,100) / 100;}this.sprayChunkPoints.push(point);}this.sprayChunks.push(this.sprayChunkPoints);}}); /**
	 * PatternBrush class
	 * @class fabric.PatternBrush
	 * @extends fabric.BaseBrush
	 */fabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */{getPatternSrc:function getPatternSrc(){var dotWidth=20,dotDistance=5,patternCanvas=fabric.document.createElement('canvas'),patternCtx=patternCanvas.getContext('2d');patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;patternCtx.fillStyle = this.color;patternCtx.beginPath();patternCtx.arc(dotWidth / 2,dotWidth / 2,dotWidth / 2,0,Math.PI * 2,false);patternCtx.closePath();patternCtx.fill();return patternCanvas;},getPatternSrcFunction:function getPatternSrcFunction(){return String(this.getPatternSrc).replace('this.color','"' + this.color + '"');}, /**
	   * Creates "pattern" instance property
	   */getPattern:function getPattern(){return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(),'repeat');}, /**
	   * Sets brush styles
	   */_setBrushStyles:function _setBrushStyles(){this.callSuper('_setBrushStyles');this.canvas.contextTop.strokeStyle = this.getPattern();}, /**
	   * Creates path
	   */createPath:function createPath(pathData){var path=this.callSuper('createPath',pathData);path.stroke = new fabric.Pattern({source:this.source || this.getPatternSrcFunction()});return path;}});(function(){var _getPointer2=fabric.util.getPointer,degreesToRadians=fabric.util.degreesToRadians,radiansToDegrees=fabric.util.radiansToDegrees,atan2=Math.atan2,abs=Math.abs,STROKE_OFFSET=0.5; /**
	   * Canvas class
	   * @class fabric.Canvas
	   * @extends fabric.StaticCanvas
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#canvas}
	   * @see {@link fabric.Canvas#initialize} for constructor definition
	   *
	   * @fires object:modified
	   * @fires object:rotating
	   * @fires object:scaling
	   * @fires object:moving
	   * @fires object:selected
	   *
	   * @fires before:selection:cleared
	   * @fires selection:cleared
	   * @fires selection:created
	   *
	   * @fires path:created
	   * @fires mouse:down
	   * @fires mouse:move
	   * @fires mouse:up
	   * @fires mouse:over
	   * @fires mouse:out
	   *
	   */fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */{ /**
	     * Constructor
	     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on
	     * @param {Object} [options] Options object
	     * @return {Object} thisArg
	     */initialize:function initialize(el,options){options || (options = {});this._initStatic(el,options);this._initInteractive();this._createCacheCanvas();fabric.Canvas.activeInstance = this;}, /**
	     * When true, objects can be transformed by one side (unproportionally)
	     * @type Boolean
	     * @default
	     */uniScaleTransform:false, /**
	     * When true, objects use center point as the origin of scale transformation.
	     * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
	     * @since 1.3.4
	     * @type Boolean
	     * @default
	     */centeredScaling:false, /**
	     * When true, objects use center point as the origin of rotate transformation.
	     * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
	     * @since 1.3.4
	     * @type Boolean
	     * @default
	     */centeredRotation:false, /**
	     * Indicates that canvas is interactive. This property should not be changed.
	     * @type Boolean
	     * @default
	     */interactive:true, /**
	     * Indicates whether group selection should be enabled
	     * @type Boolean
	     * @default
	     */selection:true, /**
	     * Color of selection
	     * @type String
	     * @default
	     */selectionColor:'rgba(100, 100, 255, 0.3)', // blue
	/**
	     * Default dash array pattern
	     * If not empty the selection border is dashed
	     * @type Array
	     */selectionDashArray:[], /**
	     * Color of the border of selection (usually slightly darker than color of selection itself)
	     * @type String
	     * @default
	     */selectionBorderColor:'rgba(255, 255, 255, 0.3)', /**
	     * Width of a line used in object/group selection
	     * @type Number
	     * @default
	     */selectionLineWidth:1, /**
	     * Default cursor value used when hovering over an object on canvas
	     * @type String
	     * @default
	     */hoverCursor:'move', /**
	     * Default cursor value used when moving an object on canvas
	     * @type String
	     * @default
	     */moveCursor:'move', /**
	     * Default cursor value used for the entire canvas
	     * @type String
	     * @default
	     */defaultCursor:'default', /**
	     * Cursor value used during free drawing
	     * @type String
	     * @default
	     */freeDrawingCursor:'crosshair', /**
	     * Cursor value used for rotation point
	     * @type String
	     * @default
	     */rotationCursor:'crosshair', /**
	     * Default element class that's given to wrapper (div) element of canvas
	     * @type String
	     * @default
	     */containerClass:'canvas-container', /**
	     * When true, object detection happens on per-pixel basis rather than on per-bounding-box
	     * @type Boolean
	     * @default
	     */perPixelTargetFind:false, /**
	     * Number of pixels around target pixel to tolerate (consider active) during object detection
	     * @type Number
	     * @default
	     */targetFindTolerance:0, /**
	     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.
	     * @type Boolean
	     * @default
	     */skipTargetFind:false, /**
	     * @private
	     */_initInteractive:function _initInteractive(){this._currentTransform = null;this._groupSelector = null;this._initWrapperElement();this._createUpperCanvas();this._initEventListeners();this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);this.calcOffset();}, /**
	     * Resets the current transform to its original values and chooses the type of resizing based on the event
	     * @private
	     * @param {Event} e Event object fired on mousemove
	     */_resetCurrentTransform:function _resetCurrentTransform(e){var t=this._currentTransform;t.target.set({scaleX:t.original.scaleX,scaleY:t.original.scaleY,left:t.original.left,top:t.original.top});if(this._shouldCenterTransform(e,t.target)){if(t.action === 'rotate'){this._setOriginToCenter(t.target);}else {if(t.originX !== 'center'){if(t.originX === 'right'){t.mouseXSign = -1;}else {t.mouseXSign = 1;}}if(t.originY !== 'center'){if(t.originY === 'bottom'){t.mouseYSign = -1;}else {t.mouseYSign = 1;}}t.originX = 'center';t.originY = 'center';}}else {t.originX = t.original.originX;t.originY = t.original.originY;}}, /**
	     * Checks if point is contained within an area of given object
	     * @param {Event} e Event object
	     * @param {fabric.Object} target Object to test against
	     * @return {Boolean} true if point is contained within an area of given object
	     */containsPoint:function containsPoint(e,target){var pointer=this.getPointer(e,true),xy=this._normalizePointer(target,pointer); // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html
	// http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html
	return target.containsPoint(xy) || target._findTargetCorner(pointer);}, /**
	     * @private
	     */_normalizePointer:function _normalizePointer(object,pointer){var activeGroup=this.getActiveGroup(),x=pointer.x,y=pointer.y,isObjectInGroup=activeGroup && object.type !== 'group' && activeGroup.contains(object),lt;if(isObjectInGroup){lt = new fabric.Point(activeGroup.left,activeGroup.top);lt = fabric.util.transformPoint(lt,this.viewportTransform,true);x -= lt.x;y -= lt.y;}return {x:x,y:y};}, /**
	     * Returns true if object is transparent at a certain location
	     * @param {fabric.Object} target Object to check
	     * @param {Number} x Left coordinate
	     * @param {Number} y Top coordinate
	     * @return {Boolean}
	     */isTargetTransparent:function isTargetTransparent(target,x,y){var hasBorders=target.hasBorders,transparentCorners=target.transparentCorners;target.hasBorders = target.transparentCorners = false;this._draw(this.contextCache,target);target.hasBorders = hasBorders;target.transparentCorners = transparentCorners;var isTransparent=fabric.util.isTransparent(this.contextCache,x,y,this.targetFindTolerance);this.clearContext(this.contextCache);return isTransparent;}, /**
	     * @private
	     * @param {Event} e Event object
	     * @param {fabric.Object} target
	     */_shouldClearSelection:function _shouldClearSelection(e,target){var activeGroup=this.getActiveGroup(),activeObject=this.getActiveObject();return !target || target && activeGroup && !activeGroup.contains(target) && activeGroup !== target && !e.shiftKey || target && !target.evented || target && !target.selectable && activeObject && activeObject !== target;}, /**
	     * @private
	     * @param {Event} e Event object
	     * @param {fabric.Object} target
	     */_shouldCenterTransform:function _shouldCenterTransform(e,target){if(!target){return;}var t=this._currentTransform,centerTransform;if(t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY'){centerTransform = this.centeredScaling || target.centeredScaling;}else if(t.action === 'rotate'){centerTransform = this.centeredRotation || target.centeredRotation;}return centerTransform?!e.altKey:e.altKey;}, /**
	     * @private
	     */_getOriginFromCorner:function _getOriginFromCorner(target,corner){var origin={x:target.originX,y:target.originY};if(corner === 'ml' || corner === 'tl' || corner === 'bl'){origin.x = 'right';}else if(corner === 'mr' || corner === 'tr' || corner === 'br'){origin.x = 'left';}if(corner === 'tl' || corner === 'mt' || corner === 'tr'){origin.y = 'bottom';}else if(corner === 'bl' || corner === 'mb' || corner === 'br'){origin.y = 'top';}return origin;}, /**
	     * @private
	     */_getActionFromCorner:function _getActionFromCorner(target,corner){var action='drag';if(corner){action = corner === 'ml' || corner === 'mr'?'scaleX':corner === 'mt' || corner === 'mb'?'scaleY':corner === 'mtr'?'rotate':'scale';}return action;}, /**
	     * @private
	     * @param {Event} e Event object
	     * @param {fabric.Object} target
	     */_setupCurrentTransform:function _setupCurrentTransform(e,target){if(!target){return;}var pointer=this.getPointer(e),corner=target._findTargetCorner(this.getPointer(e,true)),action=this._getActionFromCorner(target,corner),origin=this._getOriginFromCorner(target,corner);this._currentTransform = {target:target,action:action,scaleX:target.scaleX,scaleY:target.scaleY,offsetX:pointer.x - target.left,offsetY:pointer.y - target.top,originX:origin.x,originY:origin.y,ex:pointer.x,ey:pointer.y,left:target.left,top:target.top,theta:degreesToRadians(target.angle),width:target.width * target.scaleX,mouseXSign:1,mouseYSign:1};this._currentTransform.original = {left:target.left,top:target.top,scaleX:target.scaleX,scaleY:target.scaleY,originX:origin.x,originY:origin.y};this._resetCurrentTransform(e);}, /**
	     * Translates object by "setting" its left/top
	     * @private
	     * @param {Number} x pointer's x coordinate
	     * @param {Number} y pointer's y coordinate
	     */_translateObject:function _translateObject(x,y){var target=this._currentTransform.target;if(!target.get('lockMovementX')){target.set('left',x - this._currentTransform.offsetX);}if(!target.get('lockMovementY')){target.set('top',y - this._currentTransform.offsetY);}}, /**
	     * Scales object by invoking its scaleX/scaleY methods
	     * @private
	     * @param {Number} x pointer's x coordinate
	     * @param {Number} y pointer's y coordinate
	     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.
	     *                    When not provided, an object is scaled by both dimensions equally
	     */_scaleObject:function _scaleObject(x,y,by){var t=this._currentTransform,target=t.target,lockScalingX=target.get('lockScalingX'),lockScalingY=target.get('lockScalingY'),lockScalingFlip=target.get('lockScalingFlip');if(lockScalingX && lockScalingY){return;} // Get the constraint point
	var constraintPosition=target.translateToOriginPoint(target.getCenterPoint(),t.originX,t.originY),localMouse=target.toLocalPoint(new fabric.Point(x,y),t.originX,t.originY);this._setLocalMouse(localMouse,t); // Actually scale the object
	this._setObjectScale(localMouse,t,lockScalingX,lockScalingY,by,lockScalingFlip); // Make sure the constraints apply
	target.setPositionByOrigin(constraintPosition,t.originX,t.originY);}, /**
	     * @private
	     */_setObjectScale:function _setObjectScale(localMouse,transform,lockScalingX,lockScalingY,by,lockScalingFlip){var target=transform.target,forbidScalingX=false,forbidScalingY=false,strokeWidth=target.stroke?target.strokeWidth:0;transform.newScaleX = localMouse.x / (target.width + strokeWidth / 2);transform.newScaleY = localMouse.y / (target.height + strokeWidth / 2);if(lockScalingFlip && transform.newScaleX <= 0 && transform.newScaleX < target.scaleX){forbidScalingX = true;}if(lockScalingFlip && transform.newScaleY <= 0 && transform.newScaleY < target.scaleY){forbidScalingY = true;}if(by === 'equally' && !lockScalingX && !lockScalingY){forbidScalingX || forbidScalingY || this._scaleObjectEqually(localMouse,target,transform);}else if(!by){forbidScalingX || lockScalingX || target.set('scaleX',transform.newScaleX);forbidScalingY || lockScalingY || target.set('scaleY',transform.newScaleY);}else if(by === 'x' && !target.get('lockUniScaling')){forbidScalingX || lockScalingX || target.set('scaleX',transform.newScaleX);}else if(by === 'y' && !target.get('lockUniScaling')){forbidScalingY || lockScalingY || target.set('scaleY',transform.newScaleY);}forbidScalingX || forbidScalingY || this._flipObject(transform,by);}, /**
	     * @private
	     */_scaleObjectEqually:function _scaleObjectEqually(localMouse,target,transform){var dist=localMouse.y + localMouse.x,strokeWidth=target.stroke?target.strokeWidth:0,lastDist=(target.height + strokeWidth / 2) * transform.original.scaleY + (target.width + strokeWidth / 2) * transform.original.scaleX; // We use transform.scaleX/Y instead of target.scaleX/Y
	// because the object may have a min scale and we'll loose the proportions
	transform.newScaleX = transform.original.scaleX * dist / lastDist;transform.newScaleY = transform.original.scaleY * dist / lastDist;target.set('scaleX',transform.newScaleX);target.set('scaleY',transform.newScaleY);}, /**
	     * @private
	     */_flipObject:function _flipObject(transform,by){if(transform.newScaleX < 0 && by !== 'y'){if(transform.originX === 'left'){transform.originX = 'right';}else if(transform.originX === 'right'){transform.originX = 'left';}}if(transform.newScaleY < 0 && by !== 'x'){if(transform.originY === 'top'){transform.originY = 'bottom';}else if(transform.originY === 'bottom'){transform.originY = 'top';}}}, /**
	     * @private
	     */_setLocalMouse:function _setLocalMouse(localMouse,t){var target=t.target;if(t.originX === 'right'){localMouse.x *= -1;}else if(t.originX === 'center'){localMouse.x *= t.mouseXSign * 2;if(localMouse.x < 0){t.mouseXSign = -t.mouseXSign;}}if(t.originY === 'bottom'){localMouse.y *= -1;}else if(t.originY === 'center'){localMouse.y *= t.mouseYSign * 2;if(localMouse.y < 0){t.mouseYSign = -t.mouseYSign;}} // adjust the mouse coordinates when dealing with padding
	if(abs(localMouse.x) > target.padding){if(localMouse.x < 0){localMouse.x += target.padding;}else {localMouse.x -= target.padding;}}else { // mouse is within the padding, set to 0
	localMouse.x = 0;}if(abs(localMouse.y) > target.padding){if(localMouse.y < 0){localMouse.y += target.padding;}else {localMouse.y -= target.padding;}}else {localMouse.y = 0;}}, /**
	     * Rotates object by invoking its rotate method
	     * @private
	     * @param {Number} x pointer's x coordinate
	     * @param {Number} y pointer's y coordinate
	     */_rotateObject:function _rotateObject(x,y){var t=this._currentTransform;if(t.target.get('lockRotation')){return;}var lastAngle=atan2(t.ey - t.top,t.ex - t.left),curAngle=atan2(y - t.top,x - t.left),angle=radiansToDegrees(curAngle - lastAngle + t.theta); // normalize angle to positive value
	if(angle < 0){angle = 360 + angle;}t.target.angle = angle % 360;}, /**
	     * Set the cursor type of the canvas element
	     * @param {String} value Cursor type of the canvas element.
	     * @see http://www.w3.org/TR/css3-ui/#cursor
	     */setCursor:function setCursor(value){this.upperCanvasEl.style.cursor = value;}, /**
	     * @private
	     */_resetObjectTransform:function _resetObjectTransform(target){target.scaleX = 1;target.scaleY = 1;target.setAngle(0);}, /**
	     * @private
	     */_drawSelection:function _drawSelection(){var ctx=this.contextTop,groupSelector=this._groupSelector,left=groupSelector.left,top=groupSelector.top,aleft=abs(left),atop=abs(top);ctx.fillStyle = this.selectionColor;ctx.fillRect(groupSelector.ex - (left > 0?0:-left),groupSelector.ey - (top > 0?0:-top),aleft,atop);ctx.lineWidth = this.selectionLineWidth;ctx.strokeStyle = this.selectionBorderColor; // selection border
	if(this.selectionDashArray.length > 1){var px=groupSelector.ex + STROKE_OFFSET - (left > 0?0:aleft),py=groupSelector.ey + STROKE_OFFSET - (top > 0?0:atop);ctx.beginPath();fabric.util.drawDashedLine(ctx,px,py,px + aleft,py,this.selectionDashArray);fabric.util.drawDashedLine(ctx,px,py + atop - 1,px + aleft,py + atop - 1,this.selectionDashArray);fabric.util.drawDashedLine(ctx,px,py,px,py + atop,this.selectionDashArray);fabric.util.drawDashedLine(ctx,px + aleft - 1,py,px + aleft - 1,py + atop,this.selectionDashArray);ctx.closePath();ctx.stroke();}else {ctx.strokeRect(groupSelector.ex + STROKE_OFFSET - (left > 0?0:aleft),groupSelector.ey + STROKE_OFFSET - (top > 0?0:atop),aleft,atop);}}, /**
	     * @private
	     */_isLastRenderedObject:function _isLastRenderedObject(e){return this.controlsAboveOverlay && this.lastRenderedObjectWithControlsAboveOverlay && this.lastRenderedObjectWithControlsAboveOverlay.visible && this.containsPoint(e,this.lastRenderedObjectWithControlsAboveOverlay) && this.lastRenderedObjectWithControlsAboveOverlay._findTargetCorner(this.getPointer(e,true));}, /**
	     * Method that determines what object we are clicking on
	     * @param {Event} e mouse event
	     * @param {Boolean} skipGroup when true, group is skipped and only objects are traversed through
	     */findTarget:function findTarget(e,skipGroup){if(this.skipTargetFind){return;}if(this._isLastRenderedObject(e)){return this.lastRenderedObjectWithControlsAboveOverlay;} // first check current group (if one exists)
	var activeGroup=this.getActiveGroup();if(activeGroup && !skipGroup && this.containsPoint(e,activeGroup)){return activeGroup;}var target=this._searchPossibleTargets(e);this._fireOverOutEvents(target);return target;}, /**
	     * @private
	     */_fireOverOutEvents:function _fireOverOutEvents(target){if(target){if(this._hoveredTarget !== target){this.fire('mouse:over',{target:target});target.fire('mouseover');if(this._hoveredTarget){this.fire('mouse:out',{target:this._hoveredTarget});this._hoveredTarget.fire('mouseout');}this._hoveredTarget = target;}}else if(this._hoveredTarget){this.fire('mouse:out',{target:this._hoveredTarget});this._hoveredTarget.fire('mouseout');this._hoveredTarget = null;}}, /**
	    * @private
	    */_checkTarget:function _checkTarget(e,obj,pointer){if(obj && obj.visible && obj.evented && this.containsPoint(e,obj)){if((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing){var isTransparent=this.isTargetTransparent(obj,pointer.x,pointer.y);if(!isTransparent){return true;}}else {return true;}}}, /**
	     * @private
	     */_searchPossibleTargets:function _searchPossibleTargets(e){ // Cache all targets where their bounding box contains point.
	var target,pointer=this.getPointer(e,true),i=this._objects.length; // Do not check for currently grouped objects, since we check the parent group itself.
	while(i--) {if(!this._objects[i].group && this._checkTarget(e,this._objects[i],pointer)){this.relatedTarget = this._objects[i];target = this._objects[i];break;}}return target;}, /**
	     * Returns pointer coordinates relative to canvas.
	     * @param {Event} e
	     * @return {Object} object with "x" and "y" number values
	     */getPointer:function getPointer(e,ignoreZoom,upperCanvasEl){if(!upperCanvasEl){upperCanvasEl = this.upperCanvasEl;}var pointer=_getPointer2(e,upperCanvasEl),bounds=upperCanvasEl.getBoundingClientRect(),boundsWidth=bounds.width || 0,boundsHeight=bounds.height || 0,cssScale;if(!boundsWidth || !boundsHeight){if('top' in bounds && 'bottom' in bounds){boundsHeight = Math.abs(bounds.top - bounds.bottom);}if('right' in bounds && 'left' in bounds){boundsWidth = Math.abs(bounds.right - bounds.left);}}this.calcOffset();pointer.x = pointer.x - this._offset.left;pointer.y = pointer.y - this._offset.top;if(!ignoreZoom){pointer = fabric.util.transformPoint(pointer,fabric.util.invertTransform(this.viewportTransform));}if(boundsWidth === 0 || boundsHeight === 0){ // If bounds are not available (i.e. not visible), do not apply scale.
	cssScale = {width:1,height:1};}else {cssScale = {width:upperCanvasEl.width / boundsWidth,height:upperCanvasEl.height / boundsHeight};}return {x:pointer.x * cssScale.width,y:pointer.y * cssScale.height};}, /**
	     * @private
	     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized
	     */_createUpperCanvas:function _createUpperCanvas(){var lowerCanvasClass=this.lowerCanvasEl.className.replace(/\s*lower-canvas\s*/,'');this.upperCanvasEl = this._createCanvasElement();fabric.util.addClass(this.upperCanvasEl,'upper-canvas ' + lowerCanvasClass);this.wrapperEl.appendChild(this.upperCanvasEl);this._copyCanvasStyle(this.lowerCanvasEl,this.upperCanvasEl);this._applyCanvasStyle(this.upperCanvasEl);this.contextTop = this.upperCanvasEl.getContext('2d');}, /**
	     * @private
	     */_createCacheCanvas:function _createCacheCanvas(){this.cacheCanvasEl = this._createCanvasElement();this.cacheCanvasEl.setAttribute('width',this.width);this.cacheCanvasEl.setAttribute('height',this.height);this.contextCache = this.cacheCanvasEl.getContext('2d');}, /**
	     * @private
	     */_initWrapperElement:function _initWrapperElement(){this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl,'div',{'class':this.containerClass});fabric.util.setStyle(this.wrapperEl,{width:this.getWidth() + 'px',height:this.getHeight() + 'px',position:'relative'});fabric.util.makeElementUnselectable(this.wrapperEl);}, /**
	     * @private
	     * @param {HTMLElement} element canvas element to apply styles on
	     */_applyCanvasStyle:function _applyCanvasStyle(element){var width=this.getWidth() || element.width,height=this.getHeight() || element.height;fabric.util.setStyle(element,{position:'absolute',width:width + 'px',height:height + 'px',left:0,top:0});element.width = width;element.height = height;fabric.util.makeElementUnselectable(element);}, /**
	     * Copys the the entire inline style from one element (fromEl) to another (toEl)
	     * @private
	     * @param {Element} fromEl Element style is copied from
	     * @param {Element} toEl Element copied style is applied to
	     */_copyCanvasStyle:function _copyCanvasStyle(fromEl,toEl){toEl.style.cssText = fromEl.style.cssText;}, /**
	     * Returns context of canvas where object selection is drawn
	     * @return {CanvasRenderingContext2D}
	     */getSelectionContext:function getSelectionContext(){return this.contextTop;}, /**
	     * Returns &lt;canvas> element on which object selection is drawn
	     * @return {HTMLCanvasElement}
	     */getSelectionElement:function getSelectionElement(){return this.upperCanvasEl;}, /**
	     * @private
	     * @param {Object} object
	     */_setActiveObject:function _setActiveObject(object){if(this._activeObject){this._activeObject.set('active',false);}this._activeObject = object;object.set('active',true);}, /**
	     * Sets given object as the only active object on canvas
	     * @param {fabric.Object} object Object to set as an active one
	     * @param {Event} [e] Event (passed along when firing "object:selected")
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */setActiveObject:function setActiveObject(object,e){this._setActiveObject(object);this.renderAll();this.fire('object:selected',{target:object,e:e});object.fire('selected',{e:e});return this;}, /**
	     * Returns currently active object
	     * @return {fabric.Object} active object
	     */getActiveObject:function getActiveObject(){return this._activeObject;}, /**
	     * @private
	     */_discardActiveObject:function _discardActiveObject(){if(this._activeObject){this._activeObject.set('active',false);}this._activeObject = null;}, /**
	     * Discards currently active object
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */discardActiveObject:function discardActiveObject(e){this._discardActiveObject();this.renderAll();this.fire('selection:cleared',{e:e});return this;}, /**
	     * @private
	     * @param {fabric.Group} group
	     */_setActiveGroup:function _setActiveGroup(group){this._activeGroup = group;if(group){group.set('active',true);}}, /**
	     * Sets active group to a speicified one
	     * @param {fabric.Group} group Group to set as a current one
	     * @return {fabric.Canvas} thisArg
	     * @chainable
	     */setActiveGroup:function setActiveGroup(group,e){this._setActiveGroup(group);if(group){this.fire('object:selected',{target:group,e:e});group.fire('selected',{e:e});}return this;}, /**
	     * Returns currently active group
	     * @return {fabric.Group} Current group
	     */getActiveGroup:function getActiveGroup(){return this._activeGroup;}, /**
	     * @private
	     */_discardActiveGroup:function _discardActiveGroup(){var g=this.getActiveGroup();if(g){g.destroy();}this.setActiveGroup(null);}, /**
	     * Discards currently active group
	     * @return {fabric.Canvas} thisArg
	     */discardActiveGroup:function discardActiveGroup(e){this._discardActiveGroup();this.fire('selection:cleared',{e:e});return this;}, /**
	     * Deactivates all objects on canvas, removing any active group or object
	     * @return {fabric.Canvas} thisArg
	     */deactivateAll:function deactivateAll(){var allObjects=this.getObjects(),i=0,len=allObjects.length;for(;i < len;i++) {allObjects[i].set('active',false);}this._discardActiveGroup();this._discardActiveObject();return this;}, /**
	     * Deactivates all objects and dispatches appropriate events
	     * @return {fabric.Canvas} thisArg
	     */deactivateAllWithDispatch:function deactivateAllWithDispatch(e){var activeObject=this.getActiveGroup() || this.getActiveObject();if(activeObject){this.fire('before:selection:cleared',{target:activeObject,e:e});}this.deactivateAll();if(activeObject){this.fire('selection:cleared',{e:e});}return this;}, /**
	     * Draws objects' controls (borders/controls)
	     * @param {CanvasRenderingContext2D} ctx Context to render controls on
	     */drawControls:function drawControls(ctx){var activeGroup=this.getActiveGroup();if(activeGroup){this._drawGroupControls(ctx,activeGroup);}else {this._drawObjectsControls(ctx);}}, /**
	     * @private
	     */_drawGroupControls:function _drawGroupControls(ctx,activeGroup){activeGroup._renderControls(ctx);}, /**
	     * @private
	     */_drawObjectsControls:function _drawObjectsControls(ctx){for(var i=0,len=this._objects.length;i < len;++i) {if(!this._objects[i] || !this._objects[i].active){continue;}this._objects[i]._renderControls(ctx);this.lastRenderedObjectWithControlsAboveOverlay = this._objects[i];}}}); // copying static properties manually to work around Opera's bug,
	// where "prototype" property is enumerable and overrides existing prototype
	for(var prop in fabric.StaticCanvas) {if(prop !== 'prototype'){fabric.Canvas[prop] = fabric.StaticCanvas[prop];}}if(fabric.isTouchSupported){ /** @ignore */fabric.Canvas.prototype._setCursorFromEvent = function(){};} /**
	   * @class fabric.Element
	   * @alias fabric.Canvas
	   * @deprecated Use {@link fabric.Canvas} instead.
	   * @constructor
	   */fabric.Element = fabric.Canvas;})();(function(){var cursorOffset={mt:0, // n
	tr:1, // ne
	mr:2, // e
	br:3, // se
	mb:4, // s
	bl:5, // sw
	ml:6, // w
	tl:7 // nw
	},addListener=fabric.util.addListener,removeListener=fabric.util.removeListener;fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */{ /**
	     * Map of cursor style values for each of the object controls
	     * @private
	     */cursorMap:['n-resize','ne-resize','e-resize','se-resize','s-resize','sw-resize','w-resize','nw-resize'], /**
	     * Adds mouse listeners to canvas
	     * @private
	     */_initEventListeners:function _initEventListeners(){this._bindEvents();addListener(fabric.window,'resize',this._onResize); // mouse events
	addListener(this.upperCanvasEl,'mousedown',this._onMouseDown);addListener(this.upperCanvasEl,'mousemove',this._onMouseMove);addListener(this.upperCanvasEl,'mousewheel',this._onMouseWheel); // touch events
	addListener(this.upperCanvasEl,'touchstart',this._onMouseDown);addListener(this.upperCanvasEl,'touchmove',this._onMouseMove);if(typeof eventjs !== 'undefined' && 'add' in eventjs){eventjs.add(this.upperCanvasEl,'gesture',this._onGesture);eventjs.add(this.upperCanvasEl,'drag',this._onDrag);eventjs.add(this.upperCanvasEl,'orientation',this._onOrientationChange);eventjs.add(this.upperCanvasEl,'shake',this._onShake);eventjs.add(this.upperCanvasEl,'longpress',this._onLongPress);}}, /**
	     * @private
	     */_bindEvents:function _bindEvents(){this._onMouseDown = this._onMouseDown.bind(this);this._onMouseMove = this._onMouseMove.bind(this);this._onMouseUp = this._onMouseUp.bind(this);this._onResize = this._onResize.bind(this);this._onGesture = this._onGesture.bind(this);this._onDrag = this._onDrag.bind(this);this._onShake = this._onShake.bind(this);this._onLongPress = this._onLongPress.bind(this);this._onOrientationChange = this._onOrientationChange.bind(this);this._onMouseWheel = this._onMouseWheel.bind(this);}, /**
	     * Removes all event listeners
	     */removeListeners:function removeListeners(){removeListener(fabric.window,'resize',this._onResize);removeListener(this.upperCanvasEl,'mousedown',this._onMouseDown);removeListener(this.upperCanvasEl,'mousemove',this._onMouseMove);removeListener(this.upperCanvasEl,'mousewheel',this._onMouseWheel);removeListener(this.upperCanvasEl,'touchstart',this._onMouseDown);removeListener(this.upperCanvasEl,'touchmove',this._onMouseMove);if(typeof eventjs !== 'undefined' && 'remove' in eventjs){eventjs.remove(this.upperCanvasEl,'gesture',this._onGesture);eventjs.remove(this.upperCanvasEl,'drag',this._onDrag);eventjs.remove(this.upperCanvasEl,'orientation',this._onOrientationChange);eventjs.remove(this.upperCanvasEl,'shake',this._onShake);eventjs.remove(this.upperCanvasEl,'longpress',this._onLongPress);}}, /**
	     * @private
	     * @param {Event} [e] Event object fired on Event.js gesture
	     * @param {Event} [self] Inner Event object
	     */_onGesture:function _onGesture(e,self){this.__onTransformGesture && this.__onTransformGesture(e,self);}, /**
	     * @private
	     * @param {Event} [e] Event object fired on Event.js drag
	     * @param {Event} [self] Inner Event object
	     */_onDrag:function _onDrag(e,self){this.__onDrag && this.__onDrag(e,self);}, /**
	     * @private
	     * @param {Event} [e] Event object fired on Event.js wheel event
	     * @param {Event} [self] Inner Event object
	     */_onMouseWheel:function _onMouseWheel(e,self){this.__onMouseWheel && this.__onMouseWheel(e,self);}, /**
	     * @private
	     * @param {Event} [e] Event object fired on Event.js orientation change
	     * @param {Event} [self] Inner Event object
	     */_onOrientationChange:function _onOrientationChange(e,self){this.__onOrientationChange && this.__onOrientationChange(e,self);}, /**
	     * @private
	     * @param {Event} [e] Event object fired on Event.js shake
	     * @param {Event} [self] Inner Event object
	     */_onShake:function _onShake(e,self){this.__onShake && this.__onShake(e,self);}, /**
	     * @private
	     * @param {Event} [e] Event object fired on Event.js shake
	     * @param {Event} [self] Inner Event object
	     */_onLongPress:function _onLongPress(e,self){this.__onLongPress && this.__onLongPress(e,self);}, /**
	     * @private
	     * @param {Event} e Event object fired on mousedown
	     */_onMouseDown:function _onMouseDown(e){this.__onMouseDown(e);addListener(fabric.document,'touchend',this._onMouseUp);addListener(fabric.document,'touchmove',this._onMouseMove);removeListener(this.upperCanvasEl,'mousemove',this._onMouseMove);removeListener(this.upperCanvasEl,'touchmove',this._onMouseMove);if(e.type === 'touchstart'){ // Unbind mousedown to prevent double triggers from touch devices
	removeListener(this.upperCanvasEl,'mousedown',this._onMouseDown);}else {addListener(fabric.document,'mouseup',this._onMouseUp);addListener(fabric.document,'mousemove',this._onMouseMove);}}, /**
	     * @private
	     * @param {Event} e Event object fired on mouseup
	     */_onMouseUp:function _onMouseUp(e){this.__onMouseUp(e);removeListener(fabric.document,'mouseup',this._onMouseUp);removeListener(fabric.document,'touchend',this._onMouseUp);removeListener(fabric.document,'mousemove',this._onMouseMove);removeListener(fabric.document,'touchmove',this._onMouseMove);addListener(this.upperCanvasEl,'mousemove',this._onMouseMove);addListener(this.upperCanvasEl,'touchmove',this._onMouseMove);if(e.type === 'touchend'){ // Wait 400ms before rebinding mousedown to prevent double triggers
	// from touch devices
	var _this=this;setTimeout(function(){addListener(_this.upperCanvasEl,'mousedown',_this._onMouseDown);},400);}}, /**
	     * @private
	     * @param {Event} e Event object fired on mousemove
	     */_onMouseMove:function _onMouseMove(e){!this.allowTouchScrolling && e.preventDefault && e.preventDefault();this.__onMouseMove(e);}, /**
	     * @private
	     */_onResize:function _onResize(){this.calcOffset();}, /**
	     * Decides whether the canvas should be redrawn in mouseup and mousedown events.
	     * @private
	     * @param {Object} target
	     * @param {Object} pointer
	     */_shouldRender:function _shouldRender(target,pointer){var activeObject=this.getActiveGroup() || this.getActiveObject();return !!(target && (target.isMoving || target !== activeObject) || !target && !!activeObject || !target && !activeObject && !this._groupSelector || pointer && this._previousPointer && this.selection && (pointer.x !== this._previousPointer.x || pointer.y !== this._previousPointer.y));}, /**
	     * Method that defines the actions when mouse is released on canvas.
	     * The method resets the currentTransform parameters, store the image corner
	     * position in the image object and render the canvas on top.
	     * @private
	     * @param {Event} e Event object fired on mouseup
	     */__onMouseUp:function __onMouseUp(e){var target;if(this.isDrawingMode && this._isCurrentlyDrawing){this._onMouseUpInDrawingMode(e);return;}if(this._currentTransform){this._finalizeCurrentTransform();target = this._currentTransform.target;}else {target = this.findTarget(e,true);}var shouldRender=this._shouldRender(target,this.getPointer(e));this._maybeGroupObjects(e);if(target){target.isMoving = false;}shouldRender && this.renderAll();this._handleCursorAndEvent(e,target);},_handleCursorAndEvent:function _handleCursorAndEvent(e,target){this._setCursorFromEvent(e,target); // TODO: why are we doing this?
	var _this=this;setTimeout(function(){_this._setCursorFromEvent(e,target);},50);this.fire('mouse:up',{target:target,e:e});target && target.fire('mouseup',{e:e});}, /**
	     * @private
	     */_finalizeCurrentTransform:function _finalizeCurrentTransform(){var transform=this._currentTransform,target=transform.target;if(target._scaling){target._scaling = false;}target.setCoords(); // only fire :modified event if target coordinates were changed during mousedown-mouseup
	if(this.stateful && target.hasStateChanged()){this.fire('object:modified',{target:target});target.fire('modified');}this._restoreOriginXY(target);}, /**
	     * @private
	     * @param {Object} target Object to restore
	     */_restoreOriginXY:function _restoreOriginXY(target){if(this._previousOriginX && this._previousOriginY){var originPoint=target.translateToOriginPoint(target.getCenterPoint(),this._previousOriginX,this._previousOriginY);target.originX = this._previousOriginX;target.originY = this._previousOriginY;target.left = originPoint.x;target.top = originPoint.y;this._previousOriginX = null;this._previousOriginY = null;}}, /**
	     * @private
	     * @param {Event} e Event object fired on mousedown
	     */_onMouseDownInDrawingMode:function _onMouseDownInDrawingMode(e){this._isCurrentlyDrawing = true;this.discardActiveObject(e).renderAll();if(this.clipTo){fabric.util.clipContext(this,this.contextTop);}var ivt=fabric.util.invertTransform(this.viewportTransform),pointer=fabric.util.transformPoint(this.getPointer(e,true),ivt);this.freeDrawingBrush.onMouseDown(pointer);this.fire('mouse:down',{e:e});var target=this.findTarget(e);if(typeof target !== 'undefined'){target.fire('mousedown',{e:e,target:target});}}, /**
	     * @private
	     * @param {Event} e Event object fired on mousemove
	     */_onMouseMoveInDrawingMode:function _onMouseMoveInDrawingMode(e){if(this._isCurrentlyDrawing){var ivt=fabric.util.invertTransform(this.viewportTransform),pointer=fabric.util.transformPoint(this.getPointer(e,true),ivt);this.freeDrawingBrush.onMouseMove(pointer);}this.setCursor(this.freeDrawingCursor);this.fire('mouse:move',{e:e});var target=this.findTarget(e);if(typeof target !== 'undefined'){target.fire('mousemove',{e:e,target:target});}}, /**
	     * @private
	     * @param {Event} e Event object fired on mouseup
	     */_onMouseUpInDrawingMode:function _onMouseUpInDrawingMode(e){this._isCurrentlyDrawing = false;if(this.clipTo){this.contextTop.restore();}this.freeDrawingBrush.onMouseUp();this.fire('mouse:up',{e:e});var target=this.findTarget(e);if(typeof target !== 'undefined'){target.fire('mouseup',{e:e,target:target});}}, /**
	     * Method that defines the actions when mouse is clic ked on canvas.
	     * The method inits the currentTransform parameters and renders all the
	     * canvas so the current image can be placed on the top canvas and the rest
	     * in on the container one.
	     * @private
	     * @param {Event} e Event object fired on mousedown
	     */__onMouseDown:function __onMouseDown(e){ // accept only left clicks
	var isLeftClick='which' in e?e.which === 1:e.button === 1;if(!isLeftClick && !fabric.isTouchSupported){return;}if(this.isDrawingMode){this._onMouseDownInDrawingMode(e);return;} // ignore if some object is being transformed at this moment
	if(this._currentTransform){return;}var target=this.findTarget(e),pointer=this.getPointer(e,true); // save pointer for check in __onMouseUp event
	this._previousPointer = pointer;var shouldRender=this._shouldRender(target,pointer),shouldGroup=this._shouldGroup(e,target);if(this._shouldClearSelection(e,target)){this._clearSelection(e,target,pointer);}else if(shouldGroup){this._handleGrouping(e,target);target = this.getActiveGroup();}if(target && target.selectable && !shouldGroup){this._beforeTransform(e,target);this._setupCurrentTransform(e,target);} // we must renderAll so that active image is placed on the top canvas
	shouldRender && this.renderAll();this.fire('mouse:down',{target:target,e:e});target && target.fire('mousedown',{e:e});}, /**
	     * @private
	     */_beforeTransform:function _beforeTransform(e,target){this.stateful && target.saveState(); // determine if it's a drag or rotate case
	if(target._findTargetCorner(this.getPointer(e))){this.onBeforeScaleRotate(target);}if(target !== this.getActiveGroup() && target !== this.getActiveObject()){this.deactivateAll();this.setActiveObject(target,e);}}, /**
	     * @private
	     */_clearSelection:function _clearSelection(e,target,pointer){this.deactivateAllWithDispatch(e);if(target && target.selectable){this.setActiveObject(target,e);}else if(this.selection){this._groupSelector = {ex:pointer.x,ey:pointer.y,top:0,left:0};}}, /**
	     * @private
	     * @param {Object} target Object for that origin is set to center
	     */_setOriginToCenter:function _setOriginToCenter(target){this._previousOriginX = this._currentTransform.target.originX;this._previousOriginY = this._currentTransform.target.originY;var center=target.getCenterPoint();target.originX = 'center';target.originY = 'center';target.left = center.x;target.top = center.y;this._currentTransform.left = target.left;this._currentTransform.top = target.top;}, /**
	     * @private
	     * @param {Object} target Object for that center is set to origin
	     */_setCenterToOrigin:function _setCenterToOrigin(target){var originPoint=target.translateToOriginPoint(target.getCenterPoint(),this._previousOriginX,this._previousOriginY);target.originX = this._previousOriginX;target.originY = this._previousOriginY;target.left = originPoint.x;target.top = originPoint.y;this._previousOriginX = null;this._previousOriginY = null;}, /**
	      * Method that defines the actions when mouse is hovering the canvas.
	      * The currentTransform parameter will definde whether the user is rotating/scaling/translating
	      * an image or neither of them (only hovering). A group selection is also possible and would cancel
	      * all any other type of action.
	      * In case of an image transformation only the top canvas will be rendered.
	      * @private
	      * @param {Event} e Event object fired on mousemove
	      */__onMouseMove:function __onMouseMove(e){var target,pointer;if(this.isDrawingMode){this._onMouseMoveInDrawingMode(e);return;}if(typeof e.touches !== 'undefined' && e.touches.length > 1){return;}var groupSelector=this._groupSelector; // We initially clicked in an empty area, so we draw a box for multiple selection
	if(groupSelector){pointer = this.getPointer(e,true);groupSelector.left = pointer.x - groupSelector.ex;groupSelector.top = pointer.y - groupSelector.ey;this.renderTop();}else if(!this._currentTransform){target = this.findTarget(e);if(!target || target && !target.selectable){this.setCursor(this.defaultCursor);}else {this._setCursorFromEvent(e,target);}}else {this._transformObject(e);}this.fire('mouse:move',{target:target,e:e});target && target.fire('mousemove',{e:e});}, /**
	     * @private
	     * @param {Event} e Event fired on mousemove
	     */_transformObject:function _transformObject(e){var pointer=this.getPointer(e),transform=this._currentTransform;transform.reset = false,transform.target.isMoving = true;this._beforeScaleTransform(e,transform);this._performTransformAction(e,transform,pointer);this.renderAll();}, /**
	     * @private
	     */_performTransformAction:function _performTransformAction(e,transform,pointer){var x=pointer.x,y=pointer.y,target=transform.target,action=transform.action;if(action === 'rotate'){this._rotateObject(x,y);this._fire('rotating',target,e);}else if(action === 'scale'){this._onScale(e,transform,x,y);this._fire('scaling',target,e);}else if(action === 'scaleX'){this._scaleObject(x,y,'x');this._fire('scaling',target,e);}else if(action === 'scaleY'){this._scaleObject(x,y,'y');this._fire('scaling',target,e);}else {this._translateObject(x,y);this._fire('moving',target,e);this.setCursor(this.moveCursor);}}, /**
	     * @private
	     */_fire:function _fire(eventName,target,e){this.fire('object:' + eventName,{target:target,e:e});target.fire(eventName,{e:e});}, /**
	     * @private
	     */_beforeScaleTransform:function _beforeScaleTransform(e,transform){if(transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY'){var centerTransform=this._shouldCenterTransform(e,transform.target); // Switch from a normal resize to center-based
	if(centerTransform && (transform.originX !== 'center' || transform.originY !== 'center') ||  // Switch from center-based resize to normal one
	!centerTransform && transform.originX === 'center' && transform.originY === 'center'){this._resetCurrentTransform(e);transform.reset = true;}}}, /**
	     * @private
	     */_onScale:function _onScale(e,transform,x,y){ // rotate object only if shift key is not pressed
	// and if it is not a group we are transforming
	if((e.shiftKey || this.uniScaleTransform) && !transform.target.get('lockUniScaling')){transform.currentAction = 'scale';this._scaleObject(x,y);}else { // Switch from a normal resize to proportional
	if(!transform.reset && transform.currentAction === 'scale'){this._resetCurrentTransform(e,transform.target);}transform.currentAction = 'scaleEqually';this._scaleObject(x,y,'equally');}}, /**
	     * Sets the cursor depending on where the canvas is being hovered.
	     * Note: very buggy in Opera
	     * @param {Event} e Event object
	     * @param {Object} target Object that the mouse is hovering, if so.
	     */_setCursorFromEvent:function _setCursorFromEvent(e,target){if(!target || !target.selectable){this.setCursor(this.defaultCursor);return false;}else {var activeGroup=this.getActiveGroup(), // only show proper corner when group selection is not active
	corner=target._findTargetCorner && (!activeGroup || !activeGroup.contains(target)) && target._findTargetCorner(this.getPointer(e,true));if(!corner){this.setCursor(target.hoverCursor || this.hoverCursor);}else {this._setCornerCursor(corner,target);}}return true;}, /**
	     * @private
	     */_setCornerCursor:function _setCornerCursor(corner,target){if(corner in cursorOffset){this.setCursor(this._getRotatedCornerCursor(corner,target));}else if(corner === 'mtr' && target.hasRotatingPoint){this.setCursor(this.rotationCursor);}else {this.setCursor(this.defaultCursor);return false;}}, /**
	     * @private
	     */_getRotatedCornerCursor:function _getRotatedCornerCursor(corner,target){var n=Math.round(target.getAngle() % 360 / 45);if(n < 0){n += 8; // full circle ahead
	}n += cursorOffset[corner]; // normalize n to be from 0 to 7
	n %= 8;return this.cursorMap[n];}});})();(function(){var min=Math.min,max=Math.max;fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */{ /**
	     * @private
	     * @param {Event} e Event object
	     * @param {fabric.Object} target
	     * @return {Boolean}
	     */_shouldGroup:function _shouldGroup(e,target){var activeObject=this.getActiveObject();return e.shiftKey && (this.getActiveGroup() || activeObject && activeObject !== target) && this.selection;}, /**
	     * @private
	     * @param {Event} e Event object
	     * @param {fabric.Object} target
	     */_handleGrouping:function _handleGrouping(e,target){if(target === this.getActiveGroup()){ // if it's a group, find target again, this time skipping group
	target = this.findTarget(e,true); // if even object is not found, bail out
	if(!target || target.isType('group')){return;}}if(this.getActiveGroup()){this._updateActiveGroup(target,e);}else {this._createActiveGroup(target,e);}if(this._activeGroup){this._activeGroup.saveCoords();}}, /**
	     * @private
	     */_updateActiveGroup:function _updateActiveGroup(target,e){var activeGroup=this.getActiveGroup();if(activeGroup.contains(target)){activeGroup.removeWithUpdate(target);this._resetObjectTransform(activeGroup);target.set('active',false);if(activeGroup.size() === 1){ // remove group alltogether if after removal it only contains 1 object
	this.discardActiveGroup(e); // activate last remaining object
	this.setActiveObject(activeGroup.item(0));return;}}else {activeGroup.addWithUpdate(target);this._resetObjectTransform(activeGroup);}this.fire('selection:created',{target:activeGroup,e:e});activeGroup.set('active',true);}, /**
	     * @private
	     */_createActiveGroup:function _createActiveGroup(target,e){if(this._activeObject && target !== this._activeObject){var group=this._createGroup(target);group.addWithUpdate();this.setActiveGroup(group);this._activeObject = null;this.fire('selection:created',{target:group,e:e});}target.set('active',true);}, /**
	     * @private
	     * @param {Object} target
	     */_createGroup:function _createGroup(target){var objects=this.getObjects(),isActiveLower=objects.indexOf(this._activeObject) < objects.indexOf(target),groupObjects=isActiveLower?[this._activeObject,target]:[target,this._activeObject];return new fabric.Group(groupObjects,{canvas:this});}, /**
	     * @private
	     * @param {Event} e mouse event
	     */_groupSelectedObjects:function _groupSelectedObjects(e){var group=this._collectObjects(); // do not create group for 1 element only
	if(group.length === 1){this.setActiveObject(group[0],e);}else if(group.length > 1){group = new fabric.Group(group.reverse(),{canvas:this});group.addWithUpdate();this.setActiveGroup(group,e);group.saveCoords();this.fire('selection:created',{target:group});this.renderAll();}}, /**
	     * @private
	     */_collectObjects:function _collectObjects(){var group=[],currentObject,x1=this._groupSelector.ex,y1=this._groupSelector.ey,x2=x1 + this._groupSelector.left,y2=y1 + this._groupSelector.top,selectionX1Y1=new fabric.Point(min(x1,x2),min(y1,y2)),selectionX2Y2=new fabric.Point(max(x1,x2),max(y1,y2)),isClick=x1 === x2 && y1 === y2;for(var i=this._objects.length;i--;) {currentObject = this._objects[i];if(!currentObject || !currentObject.selectable || !currentObject.visible){continue;}if(currentObject.intersectsWithRect(selectionX1Y1,selectionX2Y2) || currentObject.isContainedWithinRect(selectionX1Y1,selectionX2Y2) || currentObject.containsPoint(selectionX1Y1) || currentObject.containsPoint(selectionX2Y2)){currentObject.set('active',true);group.push(currentObject); // only add one object if it's a click
	if(isClick){break;}}}return group;}, /**
	     * @private
	     */_maybeGroupObjects:function _maybeGroupObjects(e){if(this.selection && this._groupSelector){this._groupSelectedObjects(e);}var activeGroup=this.getActiveGroup();if(activeGroup){activeGroup.setObjectsCoords().setCoords();activeGroup.isMoving = false;this.setCursor(this.defaultCursor);} // clear selection and current transformation
	this._groupSelector = null;this._currentTransform = null;}});})();fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */{ /**
	   * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately
	   * @param {Object} [options] Options object
	   * @param {String} [options.format=png] The format of the output image. Either "jpeg" or "png"
	   * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.
	   * @param {Number} [options.multiplier=1] Multiplier to scale by
	   * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14
	   * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14
	   * @param {Number} [options.width] Cropping width. Introduced in v1.2.14
	   * @param {Number} [options.height] Cropping height. Introduced in v1.2.14
	   * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format
	   * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}
	   * @example <caption>Generate jpeg dataURL with lower quality</caption>
	   * var dataURL = canvas.toDataURL({
	   *   format: 'jpeg',
	   *   quality: 0.8
	   * });
	   * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>
	   * var dataURL = canvas.toDataURL({
	   *   format: 'png',
	   *   left: 100,
	   *   top: 100,
	   *   width: 200,
	   *   height: 200
	   * });
	   * @example <caption>Generate double scaled png dataURL</caption>
	   * var dataURL = canvas.toDataURL({
	   *   format: 'png',
	   *   multiplier: 2
	   * });
	   */toDataURL:function toDataURL(options){options || (options = {});var format=options.format || 'png',quality=options.quality || 1,multiplier=options.multiplier || 1,cropping={left:options.left,top:options.top,width:options.width,height:options.height};if(multiplier !== 1){return this.__toDataURLWithMultiplier(format,quality,cropping,multiplier);}else {return this.__toDataURL(format,quality,cropping);}}, /**
	   * @private
	   */__toDataURL:function __toDataURL(format,quality,cropping){this.renderAll(true);var canvasEl=this.upperCanvasEl || this.lowerCanvasEl,croppedCanvasEl=this.__getCroppedCanvas(canvasEl,cropping); // to avoid common confusion https://github.com/kangax/fabric.js/issues/806
	if(format === 'jpg'){format = 'jpeg';}var data=fabric.StaticCanvas.supports('toDataURLWithQuality')?(croppedCanvasEl || canvasEl).toDataURL('image/' + format,quality):(croppedCanvasEl || canvasEl).toDataURL('image/' + format);this.contextTop && this.clearContext(this.contextTop);this.renderAll();if(croppedCanvasEl){croppedCanvasEl = null;}return data;}, /**
	   * @private
	   */__getCroppedCanvas:function __getCroppedCanvas(canvasEl,cropping){var croppedCanvasEl,croppedCtx,shouldCrop='left' in cropping || 'top' in cropping || 'width' in cropping || 'height' in cropping;if(shouldCrop){croppedCanvasEl = fabric.util.createCanvasElement();croppedCtx = croppedCanvasEl.getContext('2d');croppedCanvasEl.width = cropping.width || this.width;croppedCanvasEl.height = cropping.height || this.height;croppedCtx.drawImage(canvasEl,-cropping.left || 0,-cropping.top || 0);}return croppedCanvasEl;}, /**
	   * @private
	   */__toDataURLWithMultiplier:function __toDataURLWithMultiplier(format,quality,cropping,multiplier){var origWidth=this.getWidth(),origHeight=this.getHeight(),scaledWidth=origWidth * multiplier,scaledHeight=origHeight * multiplier,activeObject=this.getActiveObject(),activeGroup=this.getActiveGroup(),ctx=this.contextTop || this.contextContainer;if(multiplier > 1){this.setWidth(scaledWidth).setHeight(scaledHeight);}ctx.scale(multiplier,multiplier);if(cropping.left){cropping.left *= multiplier;}if(cropping.top){cropping.top *= multiplier;}if(cropping.width){cropping.width *= multiplier;}else if(multiplier < 1){cropping.width = scaledWidth;}if(cropping.height){cropping.height *= multiplier;}else if(multiplier < 1){cropping.height = scaledHeight;}if(activeGroup){ // not removing group due to complications with restoring it with correct state afterwords
	this._tempRemoveBordersControlsFromGroup(activeGroup);}else if(activeObject && this.deactivateAll){this.deactivateAll();}this.renderAll(true);var data=this.__toDataURL(format,quality,cropping); // restoring width, height for `renderAll` to draw
	// background properly (while context is scaled)
	this.width = origWidth;this.height = origHeight;ctx.scale(1 / multiplier,1 / multiplier);this.setWidth(origWidth).setHeight(origHeight);if(activeGroup){this._restoreBordersControlsOnGroup(activeGroup);}else if(activeObject && this.setActiveObject){this.setActiveObject(activeObject);}this.contextTop && this.clearContext(this.contextTop);this.renderAll();return data;}, /**
	   * Exports canvas element to a dataurl image (allowing to change image size via multiplier).
	   * @deprecated since 1.0.13
	   * @param {String} format (png|jpeg)
	   * @param {Number} multiplier
	   * @param {Number} quality (0..1)
	   * @return {String}
	   */toDataURLWithMultiplier:function toDataURLWithMultiplier(format,multiplier,quality){return this.toDataURL({format:format,multiplier:multiplier,quality:quality});}, /**
	   * @private
	   */_tempRemoveBordersControlsFromGroup:function _tempRemoveBordersControlsFromGroup(group){group.origHasControls = group.hasControls;group.origBorderColor = group.borderColor;group.hasControls = true;group.borderColor = 'rgba(0,0,0,0)';group.forEachObject(function(o){o.origBorderColor = o.borderColor;o.borderColor = 'rgba(0,0,0,0)';});}, /**
	   * @private
	   */_restoreBordersControlsOnGroup:function _restoreBordersControlsOnGroup(group){group.hideControls = group.origHideControls;group.borderColor = group.origBorderColor;group.forEachObject(function(o){o.borderColor = o.origBorderColor;delete o.origBorderColor;});}});fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */{ /**
	   * Populates canvas with data from the specified dataless JSON.
	   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}
	   * @deprecated since 1.2.2
	   * @param {String|Object} json JSON string or object
	   * @param {Function} callback Callback, invoked when json is parsed
	   *                            and corresponding objects (e.g: {@link fabric.Image})
	   *                            are initialized
	   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.
	   * @return {fabric.Canvas} instance
	   * @chainable
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#deserialization}
	   */loadFromDatalessJSON:function loadFromDatalessJSON(json,callback,reviver){return this.loadFromJSON(json,callback,reviver);}, /**
	   * Populates canvas with data from the specified JSON.
	   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}
	   * @param {String|Object} json JSON string or object
	   * @param {Function} callback Callback, invoked when json is parsed
	   *                            and corresponding objects (e.g: {@link fabric.Image})
	   *                            are initialized
	   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.
	   * @return {fabric.Canvas} instance
	   * @chainable
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#deserialization}
	   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}
	   * @example <caption>loadFromJSON</caption>
	   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));
	   * @example <caption>loadFromJSON with reviver</caption>
	   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {
	   *   // `o` = json object
	   *   // `object` = fabric.Object instance
	   *   // ... do some stuff ...
	   * });
	   */loadFromJSON:function loadFromJSON(json,callback,reviver){if(!json){return;} // serialize if it wasn't already
	var serialized=typeof json === 'string'?JSON.parse(json):json;this.clear();var _this=this;this._enlivenObjects(serialized.objects,function(){_this._setBgOverlay(serialized,callback);},reviver);return this;}, /**
	   * @private
	   * @param {Object} serialized Object with background and overlay information
	   * @param {Function} callback Invoked after all background and overlay images/patterns loaded
	   */_setBgOverlay:function _setBgOverlay(serialized,callback){var _this=this,loaded={backgroundColor:false,overlayColor:false,backgroundImage:false,overlayImage:false};if(!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay){callback && callback();return;}var cbIfLoaded=function cbIfLoaded(){if(loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor){_this.renderAll();callback && callback();}};this.__setBgOverlay('backgroundImage',serialized.backgroundImage,loaded,cbIfLoaded);this.__setBgOverlay('overlayImage',serialized.overlayImage,loaded,cbIfLoaded);this.__setBgOverlay('backgroundColor',serialized.background,loaded,cbIfLoaded);this.__setBgOverlay('overlayColor',serialized.overlay,loaded,cbIfLoaded);cbIfLoaded();}, /**
	   * @private
	   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)
	   * @param {(Object|String)} value Value to set
	   * @param {Object} loaded Set loaded property to true if property is set
	   * @param {Object} callback Callback function to invoke after property is set
	   */__setBgOverlay:function __setBgOverlay(property,value,loaded,callback){var _this=this;if(!value){loaded[property] = true;return;}if(property === 'backgroundImage' || property === 'overlayImage'){fabric.Image.fromObject(value,function(img){_this[property] = img;loaded[property] = true;callback && callback();});}else {this['set' + fabric.util.string.capitalize(property,true)](value,function(){loaded[property] = true;callback && callback();});}}, /**
	   * @private
	   * @param {Array} objects
	   * @param {Function} callback
	   * @param {Function} [reviver]
	   */_enlivenObjects:function _enlivenObjects(objects,callback,reviver){var _this=this;if(!objects || objects.length === 0){callback && callback();return;}var renderOnAddRemove=this.renderOnAddRemove;this.renderOnAddRemove = false;fabric.util.enlivenObjects(objects,function(enlivenedObjects){enlivenedObjects.forEach(function(obj,index){_this.insertAt(obj,index,true);});_this.renderOnAddRemove = renderOnAddRemove;callback && callback();},null,reviver);}, /**
	   * @private
	   * @param {String} format
	   * @param {Function} callback
	   */_toDataURL:function _toDataURL(format,callback){this.clone(function(clone){callback(clone.toDataURL(format));});}, /**
	   * @private
	   * @param {String} format
	   * @param {Number} multiplier
	   * @param {Function} callback
	   */_toDataURLWithMultiplier:function _toDataURLWithMultiplier(format,multiplier,callback){this.clone(function(clone){callback(clone.toDataURLWithMultiplier(format,multiplier));});}, /**
	   * Clones canvas instance
	   * @param {Object} [callback] Receives cloned instance as a first argument
	   * @param {Array} [properties] Array of properties to include in the cloned canvas and children
	   */clone:function clone(callback,properties){var data=JSON.stringify(this.toJSON(properties));this.cloneWithoutData(function(clone){clone.loadFromJSON(data,function(){callback && callback(clone);});});}, /**
	   * Clones canvas instance without cloning existing data.
	   * This essentially copies canvas dimensions, clipping properties, etc.
	   * but leaves data empty (so that you can populate it with your own)
	   * @param {Object} [callback] Receives cloned instance as a first argument
	   */cloneWithoutData:function cloneWithoutData(callback){var el=fabric.document.createElement('canvas');el.width = this.getWidth();el.height = this.getHeight();var clone=new fabric.Canvas(el);clone.clipTo = this.clipTo;if(this.backgroundImage){clone.setBackgroundImage(this.backgroundImage.src,function(){clone.renderAll();callback && callback(clone);});clone.backgroundImageOpacity = this.backgroundImageOpacity;clone.backgroundImageStretch = this.backgroundImageStretch;}else {callback && callback(clone);}}});(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend,toFixed=fabric.util.toFixed,capitalize=fabric.util.string.capitalize,degreesToRadians=fabric.util.degreesToRadians,supportsLineDash=fabric.StaticCanvas.supports('setLineDash');if(fabric.Object){return;} /**
	   * Root object class from which all 2d shape classes inherit from
	   * @class fabric.Object
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#objects}
	   * @see {@link fabric.Object#initialize} for constructor definition
	   *
	   * @fires added
	   * @fires removed
	   *
	   * @fires selected
	   * @fires modified
	   * @fires rotating
	   * @fires scaling
	   * @fires moving
	   *
	   * @fires mousedown
	   * @fires mouseup
	   */fabric.Object = fabric.util.createClass( /** @lends fabric.Object.prototype */{ /**
	     * Retrieves object's {@link fabric.Object#clipTo|clipping function}
	     * @method getClipTo
	     * @memberOf fabric.Object.prototype
	     * @return {Function}
	     */ /**
	     * Sets object's {@link fabric.Object#clipTo|clipping function}
	     * @method setClipTo
	     * @memberOf fabric.Object.prototype
	     * @param {Function} clipTo Clipping function
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#transformMatrix|transformMatrix}
	     * @method getTransformMatrix
	     * @memberOf fabric.Object.prototype
	     * @return {Array} transformMatrix
	     */ /**
	     * Sets object's {@link fabric.Object#transformMatrix|transformMatrix}
	     * @method setTransformMatrix
	     * @memberOf fabric.Object.prototype
	     * @param {Array} transformMatrix
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#visible|visible} state
	     * @method getVisible
	     * @memberOf fabric.Object.prototype
	     * @return {Boolean} True if visible
	     */ /**
	     * Sets object's {@link fabric.Object#visible|visible} state
	     * @method setVisible
	     * @memberOf fabric.Object.prototype
	     * @param {Boolean} value visible value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#shadow|shadow}
	     * @method getShadow
	     * @memberOf fabric.Object.prototype
	     * @return {Object} Shadow instance
	     */ /**
	     * Retrieves object's {@link fabric.Object#stroke|stroke}
	     * @method getStroke
	     * @memberOf fabric.Object.prototype
	     * @return {String} stroke value
	     */ /**
	     * Sets object's {@link fabric.Object#stroke|stroke}
	     * @method setStroke
	     * @memberOf fabric.Object.prototype
	     * @param {String} value stroke value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#strokeWidth|strokeWidth}
	     * @method getStrokeWidth
	     * @memberOf fabric.Object.prototype
	     * @return {Number} strokeWidth value
	     */ /**
	     * Sets object's {@link fabric.Object#strokeWidth|strokeWidth}
	     * @method setStrokeWidth
	     * @memberOf fabric.Object.prototype
	     * @param {Number} value strokeWidth value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#originX|originX}
	     * @method getOriginX
	     * @memberOf fabric.Object.prototype
	     * @return {String} originX value
	     */ /**
	     * Sets object's {@link fabric.Object#originX|originX}
	     * @method setOriginX
	     * @memberOf fabric.Object.prototype
	     * @param {String} value originX value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#originY|originY}
	     * @method getOriginY
	     * @memberOf fabric.Object.prototype
	     * @return {String} originY value
	     */ /**
	     * Sets object's {@link fabric.Object#originY|originY}
	     * @method setOriginY
	     * @memberOf fabric.Object.prototype
	     * @param {String} value originY value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#fill|fill}
	     * @method getFill
	     * @memberOf fabric.Object.prototype
	     * @return {String} Fill value
	     */ /**
	     * Sets object's {@link fabric.Object#fill|fill}
	     * @method setFill
	     * @memberOf fabric.Object.prototype
	     * @param {String} value Fill value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#opacity|opacity}
	     * @method getOpacity
	     * @memberOf fabric.Object.prototype
	     * @return {Number} Opacity value (0-1)
	     */ /**
	     * Sets object's {@link fabric.Object#opacity|opacity}
	     * @method setOpacity
	     * @memberOf fabric.Object.prototype
	     * @param {Number} value Opacity value (0-1)
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#angle|angle} (in degrees)
	     * @method getAngle
	     * @memberOf fabric.Object.prototype
	     * @return {Number}
	     */ /**
	     * Retrieves object's {@link fabric.Object#top|top position}
	     * @method getTop
	     * @memberOf fabric.Object.prototype
	     * @return {Number} Top value (in pixels)
	     */ /**
	     * Sets object's {@link fabric.Object#top|top position}
	     * @method setTop
	     * @memberOf fabric.Object.prototype
	     * @param {Number} value Top value (in pixels)
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#left|left position}
	     * @method getLeft
	     * @memberOf fabric.Object.prototype
	     * @return {Number} Left value (in pixels)
	     */ /**
	     * Sets object's {@link fabric.Object#left|left position}
	     * @method setLeft
	     * @memberOf fabric.Object.prototype
	     * @param {Number} value Left value (in pixels)
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#scaleX|scaleX} value
	     * @method getScaleX
	     * @memberOf fabric.Object.prototype
	     * @return {Number} scaleX value
	     */ /**
	     * Sets object's {@link fabric.Object#scaleX|scaleX} value
	     * @method setScaleX
	     * @memberOf fabric.Object.prototype
	     * @param {Number} value scaleX value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#scaleY|scaleY} value
	     * @method getScaleY
	     * @memberOf fabric.Object.prototype
	     * @return {Number} scaleY value
	     */ /**
	     * Sets object's {@link fabric.Object#scaleY|scaleY} value
	     * @method setScaleY
	     * @memberOf fabric.Object.prototype
	     * @param {Number} value scaleY value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#flipX|flipX} value
	     * @method getFlipX
	     * @memberOf fabric.Object.prototype
	     * @return {Boolean} flipX value
	     */ /**
	     * Sets object's {@link fabric.Object#flipX|flipX} value
	     * @method setFlipX
	     * @memberOf fabric.Object.prototype
	     * @param {Boolean} value flipX value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Retrieves object's {@link fabric.Object#flipY|flipY} value
	     * @method getFlipY
	     * @memberOf fabric.Object.prototype
	     * @return {Boolean} flipY value
	     */ /**
	     * Sets object's {@link fabric.Object#flipY|flipY} value
	     * @method setFlipY
	     * @memberOf fabric.Object.prototype
	     * @param {Boolean} value flipY value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */ /**
	     * Type of an object (rect, circle, path, etc.).
	     * Note that this property is meant to be read-only and not meant to be modified.
	     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.
	     * @type String
	     * @default
	     */type:'object', /**
	     * Horizontal origin of transformation of an object (one of "left", "right", "center")
	     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups
	     * @type String
	     * @default
	     */originX:'left', /**
	     * Vertical origin of transformation of an object (one of "top", "bottom", "center")
	     * See http://jsfiddle.net/1ow02gea/40/ on how originX/originY affect objects in groups
	     * @type String
	     * @default
	     */originY:'top', /**
	     * Top position of an object. Note that by default it's relative to object center. You can change this by setting originY={top/center/bottom}
	     * @type Number
	     * @default
	     */top:0, /**
	     * Left position of an object. Note that by default it's relative to object center. You can change this by setting originX={left/center/right}
	     * @type Number
	     * @default
	     */left:0, /**
	     * Object width
	     * @type Number
	     * @default
	     */width:0, /**
	     * Object height
	     * @type Number
	     * @default
	     */height:0, /**
	     * Object scale factor (horizontal)
	     * @type Number
	     * @default
	     */scaleX:1, /**
	     * Object scale factor (vertical)
	     * @type Number
	     * @default
	     */scaleY:1, /**
	     * When true, an object is rendered as flipped horizontally
	     * @type Boolean
	     * @default
	     */flipX:false, /**
	     * When true, an object is rendered as flipped vertically
	     * @type Boolean
	     * @default
	     */flipY:false, /**
	     * Opacity of an object
	     * @type Number
	     * @default
	     */opacity:1, /**
	     * Angle of rotation of an object (in degrees)
	     * @type Number
	     * @default
	     */angle:0, /**
	     * Size of object's controlling corners (in pixels)
	     * @type Number
	     * @default
	     */cornerSize:12, /**
	     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)
	     * @type Boolean
	     * @default
	     */transparentCorners:true, /**
	     * Default cursor value used when hovering over this object on canvas
	     * @type String
	     * @default
	     */hoverCursor:null, /**
	     * Padding between object and its controlling borders (in pixels)
	     * @type Number
	     * @default
	     */padding:0, /**
	     * Color of controlling borders of an object (when it's active)
	     * @type String
	     * @default
	     */borderColor:'rgba(102,153,255,0.75)', /**
	     * Color of controlling corners of an object (when it's active)
	     * @type String
	     * @default
	     */cornerColor:'rgba(102,153,255,0.5)', /**
	     * When true, this object will use center point as the origin of transformation
	     * when being scaled via the controls.
	     * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
	     * @since 1.3.4
	     * @type Boolean
	     * @default
	     */centeredScaling:false, /**
	     * When true, this object will use center point as the origin of transformation
	     * when being rotated via the controls.
	     * <b>Backwards incompatibility note:</b> This property replaces "centerTransform" (Boolean).
	     * @since 1.3.4
	     * @type Boolean
	     * @default
	     */centeredRotation:true, /**
	     * Color of object's fill
	     * @type String
	     * @default
	     */fill:'rgb(0,0,0)', /**
	     * Fill rule used to fill an object
	     * accepted values are nonzero, evenodd
	     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)
	     * @type String
	     * @default
	     */fillRule:'nonzero', /**
	     * Composite rule used for canvas globalCompositeOperation
	     * @type String
	     * @default
	     */globalCompositeOperation:'source-over', /**
	     * Background color of an object. Only works with text objects at the moment.
	     * @type String
	     * @default
	     */backgroundColor:'', /**
	     * When defined, an object is rendered via stroke and this property specifies its color
	     * @type String
	     * @default
	     */stroke:null, /**
	     * Width of a stroke used to render this object
	     * @type Number
	     * @default
	     */strokeWidth:1, /**
	     * Array specifying dash pattern of an object's stroke (stroke must be defined)
	     * @type Array
	     */strokeDashArray:null, /**
	     * Line endings style of an object's stroke (one of "butt", "round", "square")
	     * @type String
	     * @default
	     */strokeLineCap:'butt', /**
	     * Corner style of an object's stroke (one of "bevil", "round", "miter")
	     * @type String
	     * @default
	     */strokeLineJoin:'miter', /**
	     * Maximum miter length (used for strokeLineJoin = "miter") of an object's stroke
	     * @type Number
	     * @default
	     */strokeMiterLimit:10, /**
	     * Shadow object representing shadow of this shape
	     * @type fabric.Shadow
	     * @default
	     */shadow:null, /**
	     * Opacity of object's controlling borders when object is active and moving
	     * @type Number
	     * @default
	     */borderOpacityWhenMoving:0.4, /**
	     * Scale factor of object's controlling borders
	     * @type Number
	     * @default
	     */borderScaleFactor:1, /**
	     * Transform matrix (similar to SVG's transform matrix)
	     * @type Array
	     */transformMatrix:null, /**
	     * Minimum allowed scale value of an object
	     * @type Number
	     * @default
	     */minScaleLimit:0.01, /**
	     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).
	     * But events still fire on it.
	     * @type Boolean
	     * @default
	     */selectable:true, /**
	     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4
	     * @type Boolean
	     * @default
	     */evented:true, /**
	     * When set to `false`, an object is not rendered on canvas
	     * @type Boolean
	     * @default
	     */visible:true, /**
	     * When set to `false`, object's controls are not displayed and can not be used to manipulate object
	     * @type Boolean
	     * @default
	     */hasControls:true, /**
	     * When set to `false`, object's controlling borders are not rendered
	     * @type Boolean
	     * @default
	     */hasBorders:true, /**
	     * When set to `false`, object's controlling rotating point will not be visible or selectable
	     * @type Boolean
	     * @default
	     */hasRotatingPoint:true, /**
	     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)
	     * @type Number
	     * @default
	     */rotatingPointOffset:40, /**
	     * When set to `true`, objects are "found" on canvas on per-pixel basis rather than according to bounding box
	     * @type Boolean
	     * @default
	     */perPixelTargetFind:false, /**
	     * When `false`, default object's values are not included in its serialization
	     * @type Boolean
	     * @default
	     */includeDefaultValues:true, /**
	     * Function that determines clipping of an object (context is passed as a first argument)
	     * Note that context origin is at the object's center point (not left/top corner)
	     * @type Function
	     */clipTo:null, /**
	     * When `true`, object horizontal movement is locked
	     * @type Boolean
	     * @default
	     */lockMovementX:false, /**
	     * When `true`, object vertical movement is locked
	     * @type Boolean
	     * @default
	     */lockMovementY:false, /**
	     * When `true`, object rotation is locked
	     * @type Boolean
	     * @default
	     */lockRotation:false, /**
	     * When `true`, object horizontal scaling is locked
	     * @type Boolean
	     * @default
	     */lockScalingX:false, /**
	     * When `true`, object vertical scaling is locked
	     * @type Boolean
	     * @default
	     */lockScalingY:false, /**
	     * When `true`, object non-uniform scaling is locked
	     * @type Boolean
	     * @default
	     */lockUniScaling:false, /**
	     * When `true`, object cannot be flipped by scaling into negative values
	     * @type Boolean
	     * @default
	     */lockScalingFlip:false, /**
	     * List of properties to consider when checking if state
	     * of an object is changed (fabric.Object#hasStateChanged)
	     * as well as for history (undo/redo) purposes
	     * @type Array
	     */stateProperties:('top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' + 'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' + 'angle opacity fill fillRule globalCompositeOperation shadow clipTo visible backgroundColor').split(' '), /**
	     * Constructor
	     * @param {Object} [options] Options object
	     */initialize:function initialize(options){if(options){this.setOptions(options);}}, /**
	     * @private
	     * @param {Object} [options] Options object
	     */_initGradient:function _initGradient(options){if(options.fill && options.fill.colorStops && !(options.fill instanceof fabric.Gradient)){this.set('fill',new fabric.Gradient(options.fill));}}, /**
	     * @private
	     * @param {Object} [options] Options object
	     */_initPattern:function _initPattern(options){if(options.fill && options.fill.source && !(options.fill instanceof fabric.Pattern)){this.set('fill',new fabric.Pattern(options.fill));}if(options.stroke && options.stroke.source && !(options.stroke instanceof fabric.Pattern)){this.set('stroke',new fabric.Pattern(options.stroke));}}, /**
	     * @private
	     * @param {Object} [options] Options object
	     */_initClipping:function _initClipping(options){if(!options.clipTo || typeof options.clipTo !== 'string'){return;}var functionBody=fabric.util.getFunctionBody(options.clipTo);if(typeof functionBody !== 'undefined'){this.clipTo = new Function('ctx',functionBody);}}, /**
	     * Sets object's properties from options
	     * @param {Object} [options] Options object
	     */setOptions:function setOptions(options){for(var prop in options) {this.set(prop,options[prop]);}this._initGradient(options);this._initPattern(options);this._initClipping(options);}, /**
	     * Transforms context when rendering an object
	     * @param {CanvasRenderingContext2D} ctx Context
	     * @param {Boolean} fromLeft When true, context is transformed to object's top/left corner. This is used when rendering text on Node
	     */transform:function transform(ctx,fromLeft){var center=fromLeft?this._getLeftTopCoords():this.getCenterPoint();ctx.translate(center.x,center.y);ctx.rotate(degreesToRadians(this.angle));ctx.scale(this.scaleX * (this.flipX?-1:1),this.scaleY * (this.flipY?-1:1));}, /**
	     * Returns an object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(propertiesToInclude){var NUM_FRACTION_DIGITS=fabric.Object.NUM_FRACTION_DIGITS,object={type:this.type,originX:this.originX,originY:this.originY,left:toFixed(this.left,NUM_FRACTION_DIGITS),top:toFixed(this.top,NUM_FRACTION_DIGITS),width:toFixed(this.width,NUM_FRACTION_DIGITS),height:toFixed(this.height,NUM_FRACTION_DIGITS),fill:this.fill && this.fill.toObject?this.fill.toObject():this.fill,stroke:this.stroke && this.stroke.toObject?this.stroke.toObject():this.stroke,strokeWidth:toFixed(this.strokeWidth,NUM_FRACTION_DIGITS),strokeDashArray:this.strokeDashArray,strokeLineCap:this.strokeLineCap,strokeLineJoin:this.strokeLineJoin,strokeMiterLimit:toFixed(this.strokeMiterLimit,NUM_FRACTION_DIGITS),scaleX:toFixed(this.scaleX,NUM_FRACTION_DIGITS),scaleY:toFixed(this.scaleY,NUM_FRACTION_DIGITS),angle:toFixed(this.getAngle(),NUM_FRACTION_DIGITS),flipX:this.flipX,flipY:this.flipY,opacity:toFixed(this.opacity,NUM_FRACTION_DIGITS),shadow:this.shadow && this.shadow.toObject?this.shadow.toObject():this.shadow,visible:this.visible,clipTo:this.clipTo && String(this.clipTo),backgroundColor:this.backgroundColor,fillRule:this.fillRule,globalCompositeOperation:this.globalCompositeOperation};if(!this.includeDefaultValues){object = this._removeDefaultValues(object);}fabric.util.populateWithProperties(this,object,propertiesToInclude);return object;}, /**
	     * Returns (dataless) object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} Object representation of an instance
	     */toDatalessObject:function toDatalessObject(propertiesToInclude){ // will be overwritten by subclasses
	return this.toObject(propertiesToInclude);}, /**
	     * @private
	     * @param {Object} object
	     */_removeDefaultValues:function _removeDefaultValues(object){var prototype=fabric.util.getKlass(object.type).prototype,stateProperties=prototype.stateProperties;stateProperties.forEach(function(prop){if(object[prop] === prototype[prop]){delete object[prop];}});return object;}, /**
	     * Returns a string representation of an instance
	     * @return {String}
	     */toString:function toString(){return '#<fabric.' + capitalize(this.type) + '>';}, /**
	     * Basic getter
	     * @param {String} property Property name
	     * @return {Any} value of a property
	     */get:function get(property){return this[property];}, /**
	     * @private
	     */_setObject:function _setObject(obj){for(var prop in obj) {this._set(prop,obj[prop]);}}, /**
	     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.
	     * @param {String|Object} key Property name or object (if object, iterate over the object properties)
	     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */set:function set(key,value){if(typeof key === 'object'){this._setObject(key);}else {if(typeof value === 'function' && key !== 'clipTo'){this._set(key,value(this.get(key)));}else {this._set(key,value);}}return this;}, /**
	     * @private
	     * @param {String} key
	     * @param {Any} value
	     * @return {fabric.Object} thisArg
	     */_set:function _set(key,value){var shouldConstrainValue=key === 'scaleX' || key === 'scaleY';if(shouldConstrainValue){value = this._constrainScale(value);}if(key === 'scaleX' && value < 0){this.flipX = !this.flipX;value *= -1;}else if(key === 'scaleY' && value < 0){this.flipY = !this.flipY;value *= -1;}else if(key === 'width' || key === 'height'){this.minScaleLimit = toFixed(Math.min(0.1,1 / Math.max(this.width,this.height)),2);}else if(key === 'shadow' && value && !(value instanceof fabric.Shadow)){value = new fabric.Shadow(value);}this[key] = value;return this;}, /**
	     * Toggles specified property from `true` to `false` or from `false` to `true`
	     * @param {String} property Property to toggle
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */toggle:function toggle(property){var value=this.get(property);if(typeof value === 'boolean'){this.set(property,!value);}return this;}, /**
	     * Sets sourcePath of an object
	     * @param {String} value Value to set sourcePath to
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */setSourcePath:function setSourcePath(value){this.sourcePath = value;return this;}, /**
	     * Retrieves viewportTransform from Object's canvas if possible
	     * @method getViewportTransform
	     * @memberOf fabric.Object.prototype
	     * @return {Boolean} flipY value // TODO
	     */getViewportTransform:function getViewportTransform(){if(this.canvas && this.canvas.viewportTransform){return this.canvas.viewportTransform;}return [1,0,0,1,0,0];}, /**
	     * Renders an object on a specified context
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {Boolean} [noTransform] When true, context is not transformed
	     */render:function render(ctx,noTransform){ // do not render if width/height are zeros or object is not visible
	if(this.width === 0 && this.height === 0 || !this.visible){return;}ctx.save(); //setup fill rule for current object
	this._setupCompositeOperation(ctx);if(!noTransform){this.transform(ctx);}this._setStrokeStyles(ctx);this._setFillStyles(ctx);if(this.transformMatrix){ctx.transform.apply(ctx,this.transformMatrix);}this._setOpacity(ctx);this._setShadow(ctx);this.clipTo && fabric.util.clipContext(this,ctx);this._render(ctx,noTransform);this.clipTo && ctx.restore();this._removeShadow(ctx);this._restoreCompositeOperation(ctx);ctx.restore();}, /* @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_setOpacity:function _setOpacity(ctx){if(this.group){this.group._setOpacity(ctx);}ctx.globalAlpha *= this.opacity;},_setStrokeStyles:function _setStrokeStyles(ctx){if(this.stroke){ctx.lineWidth = this.strokeWidth;ctx.lineCap = this.strokeLineCap;ctx.lineJoin = this.strokeLineJoin;ctx.miterLimit = this.strokeMiterLimit;ctx.strokeStyle = this.stroke.toLive?this.stroke.toLive(ctx,this):this.stroke;}},_setFillStyles:function _setFillStyles(ctx){if(this.fill){ctx.fillStyle = this.fill.toLive?this.fill.toLive(ctx,this):this.fill;}}, /**
	     * Renders controls and borders for the object
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {Boolean} [noTransform] When true, context is not transformed
	     */_renderControls:function _renderControls(ctx,noTransform){if(!this.active || noTransform){return;}var vpt=this.getViewportTransform();ctx.save();var center;if(this.group){center = fabric.util.transformPoint(this.group.getCenterPoint(),vpt);ctx.translate(center.x,center.y);ctx.rotate(degreesToRadians(this.group.angle));}center = fabric.util.transformPoint(this.getCenterPoint(),vpt,null != this.group);if(this.group){center.x *= this.group.scaleX;center.y *= this.group.scaleY;}ctx.translate(center.x,center.y);ctx.rotate(degreesToRadians(this.angle));this.drawBorders(ctx);this.drawControls(ctx);ctx.restore();}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_setShadow:function _setShadow(ctx){if(!this.shadow){return;}var multX=this.canvas && this.canvas.viewportTransform[0] || 1,multY=this.canvas && this.canvas.viewportTransform[3] || 1;ctx.shadowColor = this.shadow.color;ctx.shadowBlur = this.shadow.blur * (multX + multY) * (this.scaleX + this.scaleY) / 4;ctx.shadowOffsetX = this.shadow.offsetX * multX * this.scaleX;ctx.shadowOffsetY = this.shadow.offsetY * multY * this.scaleY;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_removeShadow:function _removeShadow(ctx){if(!this.shadow){return;}ctx.shadowColor = '';ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderFill:function _renderFill(ctx){if(!this.fill){return;}ctx.save();if(this.fill.gradientTransform){var g=this.fill.gradientTransform;ctx.transform.apply(ctx,g);}if(this.fill.toLive){ctx.translate(-this.width / 2 + this.fill.offsetX || 0,-this.height / 2 + this.fill.offsetY || 0);}if(this.fillRule === 'evenodd'){ctx.fill('evenodd');}else {ctx.fill();}ctx.restore();if(this.shadow && !this.shadow.affectStroke){this._removeShadow(ctx);}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderStroke:function _renderStroke(ctx){if(!this.stroke || this.strokeWidth === 0){return;}ctx.save();if(this.strokeDashArray){ // Spec requires the concatenation of two copies the dash list when the number of elements is odd
	if(1 & this.strokeDashArray.length){this.strokeDashArray.push.apply(this.strokeDashArray,this.strokeDashArray);}if(supportsLineDash){ctx.setLineDash(this.strokeDashArray);this._stroke && this._stroke(ctx);}else {this._renderDashedStroke && this._renderDashedStroke(ctx);}ctx.stroke();}else {if(this.stroke.gradientTransform){var g=this.stroke.gradientTransform;ctx.transform.apply(ctx,g);}this._stroke?this._stroke(ctx):ctx.stroke();}this._removeShadow(ctx);ctx.restore();}, /**
	     * Clones an instance
	     * @param {Function} callback Callback is invoked with a clone as a first argument
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {fabric.Object} clone of an instance
	     */clone:function clone(callback,propertiesToInclude){if(this.constructor.fromObject){return this.constructor.fromObject(this.toObject(propertiesToInclude),callback);}return new fabric.Object(this.toObject(propertiesToInclude));}, /**
	     * Creates an instance of fabric.Image out of an object
	     * @param {Function} callback callback, invoked with an instance as a first argument
	     * @return {fabric.Object} thisArg
	     */cloneAsImage:function cloneAsImage(callback){var dataUrl=this.toDataURL();fabric.util.loadImage(dataUrl,function(img){if(callback){callback(new fabric.Image(img));}});return this;}, /**
	     * Converts an object into a data-url-like string
	     * @param {Object} options Options object
	     * @param {String} [options.format=png] The format of the output image. Either "jpeg" or "png"
	     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.
	     * @param {Number} [options.multiplier=1] Multiplier to scale by
	     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14
	     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14
	     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14
	     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14
	     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format
	     */toDataURL:function toDataURL(options){options || (options = {});var el=fabric.util.createCanvasElement(),boundingRect=this.getBoundingRect();el.width = boundingRect.width;el.height = boundingRect.height;fabric.util.wrapElement(el,'div');var canvas=new fabric.StaticCanvas(el); // to avoid common confusion https://github.com/kangax/fabric.js/issues/806
	if(options.format === 'jpg'){options.format = 'jpeg';}if(options.format === 'jpeg'){canvas.backgroundColor = '#fff';}var origParams={active:this.get('active'),left:this.getLeft(),top:this.getTop()};this.set('active',false);this.setPositionByOrigin(new fabric.Point(el.width / 2,el.height / 2),'center','center');var originalCanvas=this.canvas;canvas.add(this);var data=canvas.toDataURL(options);this.set(origParams).setCoords();this.canvas = originalCanvas;canvas.dispose();canvas = null;return data;}, /**
	     * Returns true if specified type is identical to the type of an instance
	     * @param {String} type Type to check against
	     * @return {Boolean}
	     */isType:function isType(type){return this.type === type;}, /**
	     * Returns complexity of an instance
	     * @return {Number} complexity of this instance
	     */complexity:function complexity(){return 0;}, /**
	     * Returns a JSON representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} JSON
	     */toJSON:function toJSON(propertiesToInclude){ // delegate, not alias
	return this.toObject(propertiesToInclude);}, /**
	     * Sets gradient (fill or stroke) of an object
	     * <b>Backwards incompatibility note:</b> This method was named "setGradientFill" until v1.1.0
	     * @param {String} property Property name 'stroke' or 'fill'
	     * @param {Object} [options] Options object
	     * @param {String} [options.type] Type of gradient 'radial' or 'linear'
	     * @param {Number} [options.x1=0] x-coordinate of start point
	     * @param {Number} [options.y1=0] y-coordinate of start point
	     * @param {Number} [options.x2=0] x-coordinate of end point
	     * @param {Number} [options.y2=0] y-coordinate of end point
	     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)
	     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)
	     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}
	     * @return {fabric.Object} thisArg
	     * @chainable
	     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}
	     * @example <caption>Set linear gradient</caption>
	     * object.setGradient('fill', {
	     *   type: 'linear',
	     *   x1: -object.width / 2,
	     *   y1: 0,
	     *   x2: object.width / 2,
	     *   y2: 0,
	     *   colorStops: {
	     *     0: 'red',
	     *     0.5: '#005555',
	     *     1: 'rgba(0,0,255,0.5)'
	     *   }
	     * });
	     * canvas.renderAll();
	     * @example <caption>Set radial gradient</caption>
	     * object.setGradient('fill', {
	     *   type: 'radial',
	     *   x1: 0,
	     *   y1: 0,
	     *   x2: 0,
	     *   y2: 0,
	     *   r1: object.width / 2,
	     *   r2: 10,
	     *   colorStops: {
	     *     0: 'red',
	     *     0.5: '#005555',
	     *     1: 'rgba(0,0,255,0.5)'
	     *   }
	     * });
	     * canvas.renderAll();
	     */setGradient:function setGradient(property,options){options || (options = {});var gradient={colorStops:[]};gradient.type = options.type || (options.r1 || options.r2?'radial':'linear');gradient.coords = {x1:options.x1,y1:options.y1,x2:options.x2,y2:options.y2};if(options.r1 || options.r2){gradient.coords.r1 = options.r1;gradient.coords.r2 = options.r2;}for(var position in options.colorStops) {var color=new fabric.Color(options.colorStops[position]);gradient.colorStops.push({offset:position,color:color.toRgb(),opacity:color.getAlpha()});}return this.set(property,fabric.Gradient.forObject(this,gradient));}, /**
	     * Sets pattern fill of an object
	     * @param {Object} options Options object
	     * @param {(String|HTMLImageElement)} options.source Pattern source
	     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)
	     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner
	     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner
	     * @return {fabric.Object} thisArg
	     * @chainable
	     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}
	     * @example <caption>Set pattern</caption>
	     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {
	     *   object.setPatternFill({
	     *     source: img,
	     *     repeat: 'repeat'
	     *   });
	     *   canvas.renderAll();
	     * });
	     */setPatternFill:function setPatternFill(options){return this.set('fill',new fabric.Pattern(options));}, /**
	     * Sets {@link fabric.Object#shadow|shadow} of an object
	     * @param {Object|String} [options] Options object or string (e.g. "2px 2px 10px rgba(0,0,0,0.2)")
	     * @param {String} [options.color=rgb(0,0,0)] Shadow color
	     * @param {Number} [options.blur=0] Shadow blur
	     * @param {Number} [options.offsetX=0] Shadow horizontal offset
	     * @param {Number} [options.offsetY=0] Shadow vertical offset
	     * @return {fabric.Object} thisArg
	     * @chainable
	     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}
	     * @example <caption>Set shadow with string notation</caption>
	     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');
	     * canvas.renderAll();
	     * @example <caption>Set shadow with object notation</caption>
	     * object.setShadow({
	     *   color: 'red',
	     *   blur: 10,
	     *   offsetX: 20,
	     *   offsetY: 20
	     * });
	     * canvas.renderAll();
	     */setShadow:function setShadow(options){return this.set('shadow',options?new fabric.Shadow(options):null);}, /**
	     * Sets "color" of an instance (alias of `set('fill', &hellip;)`)
	     * @param {String} color Color value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */setColor:function setColor(color){this.set('fill',color);return this;}, /**
	     * Sets "angle" of an instance
	     * @param {Number} angle Angle value (in degrees)
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */setAngle:function setAngle(angle){var shouldCenterOrigin=(this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;if(shouldCenterOrigin){this._setOriginToCenter();}this.set('angle',angle);if(shouldCenterOrigin){this._resetOrigin();}return this;}, /**
	     * Centers object horizontally on canvas to which it was added last.
	     * You might need to call `setCoords` on an object after centering, to update controls area.
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */centerH:function centerH(){this.canvas.centerObjectH(this);return this;}, /**
	     * Centers object vertically on canvas to which it was added last.
	     * You might need to call `setCoords` on an object after centering, to update controls area.
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */centerV:function centerV(){this.canvas.centerObjectV(this);return this;}, /**
	     * Centers object vertically and horizontally on canvas to which is was added last
	     * You might need to call `setCoords` on an object after centering, to update controls area.
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */center:function center(){this.canvas.centerObject(this);return this;}, /**
	     * Removes object from canvas to which it was added last
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */remove:function remove(){this.canvas.remove(this);return this;}, /**
	     * Returns coordinates of a pointer relative to an object
	     * @param {Event} e Event to operate upon
	     * @param {Object} [pointer] Pointer to operate upon (instead of event)
	     * @return {Object} Coordinates of a pointer (x, y)
	     */getLocalPointer:function getLocalPointer(e,pointer){pointer = pointer || this.canvas.getPointer(e);var objectLeftTop=this.translateToOriginPoint(this.getCenterPoint(),'left','top');return {x:pointer.x - objectLeftTop.x,y:pointer.y - objectLeftTop.y};}, /**
	     * Sets canvas globalCompositeOperation for specific object
	     * custom composition operation for the particular object can be specifed using globalCompositeOperation property
	     * @param {CanvasRenderingContext2D} ctx Rendering canvas context
	     */_setupCompositeOperation:function _setupCompositeOperation(ctx){if(this.globalCompositeOperation){this._prevGlobalCompositeOperation = ctx.globalCompositeOperation;ctx.globalCompositeOperation = this.globalCompositeOperation;}}, /**
	     * Restores previously saved canvas globalCompositeOperation after obeject rendering
	     * @param {CanvasRenderingContext2D} ctx Rendering canvas context
	     */_restoreCompositeOperation:function _restoreCompositeOperation(ctx){if(this.globalCompositeOperation && this._prevGlobalCompositeOperation){ctx.globalCompositeOperation = this._prevGlobalCompositeOperation;}}});fabric.util.createAccessors(fabric.Object); /**
	   * Alias for {@link fabric.Object.prototype.setAngle}
	   * @alias rotate -> setAngle
	   * @memberof fabric.Object
	   */fabric.Object.prototype.rotate = fabric.Object.prototype.setAngle;extend(fabric.Object.prototype,fabric.Observable); /**
	   * Defines the number of fraction digits to use when serializing object values.
	   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.
	   * @static
	   * @memberof fabric.Object
	   * @constant
	   * @type Number
	   */fabric.Object.NUM_FRACTION_DIGITS = 2; /**
	   * Unique id used internally when creating SVG elements
	   * @static
	   * @memberof fabric.Object
	   * @type Number
	   */fabric.Object.__uid = 0;})( true?exports:undefined);(function(){var degreesToRadians=fabric.util.degreesToRadians;fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */{ /**
	     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)
	     * @param {fabric.Point} point The point which corresponds to the originX and originY params
	     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
	     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
	     * @return {fabric.Point}
	     */translateToCenterPoint:function translateToCenterPoint(point,originX,originY){var cx=point.x,cy=point.y,strokeWidth=this.stroke?this.strokeWidth:0;if(originX === 'left'){cx = point.x + (this.getWidth() + strokeWidth * this.scaleX) / 2;}else if(originX === 'right'){cx = point.x - (this.getWidth() + strokeWidth * this.scaleX) / 2;}if(originY === 'top'){cy = point.y + (this.getHeight() + strokeWidth * this.scaleY) / 2;}else if(originY === 'bottom'){cy = point.y - (this.getHeight() + strokeWidth * this.scaleY) / 2;} // Apply the reverse rotation to the point (it's already scaled properly)
	return fabric.util.rotatePoint(new fabric.Point(cx,cy),point,degreesToRadians(this.angle));}, /**
	     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)
	     * @param {fabric.Point} center The point which corresponds to center of the object
	     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
	     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
	     * @return {fabric.Point}
	     */translateToOriginPoint:function translateToOriginPoint(center,originX,originY){var x=center.x,y=center.y,strokeWidth=this.stroke?this.strokeWidth:0; // Get the point coordinates
	if(originX === 'left'){x = center.x - (this.getWidth() + strokeWidth * this.scaleX) / 2;}else if(originX === 'right'){x = center.x + (this.getWidth() + strokeWidth * this.scaleX) / 2;}if(originY === 'top'){y = center.y - (this.getHeight() + strokeWidth * this.scaleY) / 2;}else if(originY === 'bottom'){y = center.y + (this.getHeight() + strokeWidth * this.scaleY) / 2;} // Apply the rotation to the point (it's already scaled properly)
	return fabric.util.rotatePoint(new fabric.Point(x,y),center,degreesToRadians(this.angle));}, /**
	     * Returns the real center coordinates of the object
	     * @return {fabric.Point}
	     */getCenterPoint:function getCenterPoint(){var leftTop=new fabric.Point(this.left,this.top);return this.translateToCenterPoint(leftTop,this.originX,this.originY);}, /**
	     * Returns the coordinates of the object based on center coordinates
	     * @param {fabric.Point} point The point which corresponds to the originX and originY params
	     * @return {fabric.Point}
	     */ // getOriginPoint: function(center) {
	//   return this.translateToOriginPoint(center, this.originX, this.originY);
	// },
	/**
	     * Returns the coordinates of the object as if it has a different origin
	     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
	     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
	     * @return {fabric.Point}
	     */getPointByOrigin:function getPointByOrigin(originX,originY){var center=this.getCenterPoint();return this.translateToOriginPoint(center,originX,originY);}, /**
	     * Returns the point in local coordinates
	     * @param {fabric.Point} point The point relative to the global coordinate system
	     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
	     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
	     * @return {fabric.Point}
	     */toLocalPoint:function toLocalPoint(point,originX,originY){var center=this.getCenterPoint(),strokeWidth=this.stroke?this.strokeWidth:0,x,y;if(originX && originY){if(originX === 'left'){x = center.x - (this.getWidth() + strokeWidth * this.scaleX) / 2;}else if(originX === 'right'){x = center.x + (this.getWidth() + strokeWidth * this.scaleX) / 2;}else {x = center.x;}if(originY === 'top'){y = center.y - (this.getHeight() + strokeWidth * this.scaleY) / 2;}else if(originY === 'bottom'){y = center.y + (this.getHeight() + strokeWidth * this.scaleY) / 2;}else {y = center.y;}}else {x = this.left;y = this.top;}return fabric.util.rotatePoint(new fabric.Point(point.x,point.y),center,-degreesToRadians(this.angle)).subtractEquals(new fabric.Point(x,y));}, /**
	     * Returns the point in global coordinates
	     * @param {fabric.Point} The point relative to the local coordinate system
	     * @return {fabric.Point}
	     */ // toGlobalPoint: function(point) {
	//   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));
	// },
	/**
	     * Sets the position of the object taking into consideration the object's origin
	     * @param {fabric.Point} pos The new position of the object
	     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'
	     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'
	     * @return {void}
	     */setPositionByOrigin:function setPositionByOrigin(pos,originX,originY){var center=this.translateToCenterPoint(pos,originX,originY),position=this.translateToOriginPoint(center,this.originX,this.originY);this.set('left',position.x);this.set('top',position.y);}, /**
	     * @param {String} to One of 'left', 'center', 'right'
	     */adjustPosition:function adjustPosition(to){var angle=degreesToRadians(this.angle),hypotHalf=this.getWidth() / 2,xHalf=Math.cos(angle) * hypotHalf,yHalf=Math.sin(angle) * hypotHalf,hypotFull=this.getWidth(),xFull=Math.cos(angle) * hypotFull,yFull=Math.sin(angle) * hypotFull;if(this.originX === 'center' && to === 'left' || this.originX === 'right' && to === 'center'){ // move half left
	this.left -= xHalf;this.top -= yHalf;}else if(this.originX === 'left' && to === 'center' || this.originX === 'center' && to === 'right'){ // move half right
	this.left += xHalf;this.top += yHalf;}else if(this.originX === 'left' && to === 'right'){ // move full right
	this.left += xFull;this.top += yFull;}else if(this.originX === 'right' && to === 'left'){ // move full left
	this.left -= xFull;this.top -= yFull;}this.setCoords();this.originX = to;}, /**
	     * Sets the origin/position of the object to it's center point
	     * @private
	     * @return {void}
	     */_setOriginToCenter:function _setOriginToCenter(){this._originalOriginX = this.originX;this._originalOriginY = this.originY;var center=this.getCenterPoint();this.originX = 'center';this.originY = 'center';this.left = center.x;this.top = center.y;}, /**
	     * Resets the origin/position of the object to it's original origin
	     * @private
	     * @return {void}
	     */_resetOrigin:function _resetOrigin(){var originPoint=this.translateToOriginPoint(this.getCenterPoint(),this._originalOriginX,this._originalOriginY);this.originX = this._originalOriginX;this.originY = this._originalOriginY;this.left = originPoint.x;this.top = originPoint.y;this._originalOriginX = null;this._originalOriginY = null;}, /**
	     * @private
	     */_getLeftTopCoords:function _getLeftTopCoords(){return this.translateToOriginPoint(this.getCenterPoint(),'left','center');}});})();(function(){var degreesToRadians=fabric.util.degreesToRadians;fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */{ /**
	     * Object containing coordinates of object's controls
	     * @type Object
	     * @default
	     */oCoords:null, /**
	     * Checks if object intersects with an area formed by 2 points
	     * @param {Object} pointTL top-left point of area
	     * @param {Object} pointBR bottom-right point of area
	     * @return {Boolean} true if object intersects with an area formed by 2 points
	     */intersectsWithRect:function intersectsWithRect(pointTL,pointBR){var oCoords=this.oCoords,tl=new fabric.Point(oCoords.tl.x,oCoords.tl.y),tr=new fabric.Point(oCoords.tr.x,oCoords.tr.y),bl=new fabric.Point(oCoords.bl.x,oCoords.bl.y),br=new fabric.Point(oCoords.br.x,oCoords.br.y),intersection=fabric.Intersection.intersectPolygonRectangle([tl,tr,br,bl],pointTL,pointBR);return intersection.status === 'Intersection';}, /**
	     * Checks if object intersects with another object
	     * @param {Object} other Object to test
	     * @return {Boolean} true if object intersects with another object
	     */intersectsWithObject:function intersectsWithObject(other){ // extracts coords
	function getCoords(oCoords){return {tl:new fabric.Point(oCoords.tl.x,oCoords.tl.y),tr:new fabric.Point(oCoords.tr.x,oCoords.tr.y),bl:new fabric.Point(oCoords.bl.x,oCoords.bl.y),br:new fabric.Point(oCoords.br.x,oCoords.br.y)};}var thisCoords=getCoords(this.oCoords),otherCoords=getCoords(other.oCoords),intersection=fabric.Intersection.intersectPolygonPolygon([thisCoords.tl,thisCoords.tr,thisCoords.br,thisCoords.bl],[otherCoords.tl,otherCoords.tr,otherCoords.br,otherCoords.bl]);return intersection.status === 'Intersection';}, /**
	     * Checks if object is fully contained within area of another object
	     * @param {Object} other Object to test
	     * @return {Boolean} true if object is fully contained within area of another object
	     */isContainedWithinObject:function isContainedWithinObject(other){var boundingRect=other.getBoundingRect(),point1=new fabric.Point(boundingRect.left,boundingRect.top),point2=new fabric.Point(boundingRect.left + boundingRect.width,boundingRect.top + boundingRect.height);return this.isContainedWithinRect(point1,point2);}, /**
	     * Checks if object is fully contained within area formed by 2 points
	     * @param {Object} pointTL top-left point of area
	     * @param {Object} pointBR bottom-right point of area
	     * @return {Boolean} true if object is fully contained within area formed by 2 points
	     */isContainedWithinRect:function isContainedWithinRect(pointTL,pointBR){var boundingRect=this.getBoundingRect();return boundingRect.left >= pointTL.x && boundingRect.left + boundingRect.width <= pointBR.x && boundingRect.top >= pointTL.y && boundingRect.top + boundingRect.height <= pointBR.y;}, /**
	     * Checks if point is inside the object
	     * @param {fabric.Point} point Point to check against
	     * @return {Boolean} true if point is inside the object
	     */containsPoint:function containsPoint(point){var lines=this._getImageLines(this.oCoords),xPoints=this._findCrossPoints(point,lines); // if xPoints is odd then point is inside the object
	return xPoints !== 0 && xPoints % 2 === 1;}, /**
	     * Method that returns an object with the object edges in it, given the coordinates of the corners
	     * @private
	     * @param {Object} oCoords Coordinates of the object corners
	     */_getImageLines:function _getImageLines(oCoords){return {topline:{o:oCoords.tl,d:oCoords.tr},rightline:{o:oCoords.tr,d:oCoords.br},bottomline:{o:oCoords.br,d:oCoords.bl},leftline:{o:oCoords.bl,d:oCoords.tl}};}, /**
	     * Helper method to determine how many cross points are between the 4 object edges
	     * and the horizontal line determined by a point on canvas
	     * @private
	     * @param {fabric.Point} point Point to check
	     * @param {Object} oCoords Coordinates of the object being evaluated
	     */_findCrossPoints:function _findCrossPoints(point,oCoords){var b1,b2,a1,a2,xi,yi,xcount=0,iLine;for(var lineKey in oCoords) {iLine = oCoords[lineKey]; // optimisation 1: line below point. no cross
	if(iLine.o.y < point.y && iLine.d.y < point.y){continue;} // optimisation 2: line above point. no cross
	if(iLine.o.y >= point.y && iLine.d.y >= point.y){continue;} // optimisation 3: vertical line case
	if(iLine.o.x === iLine.d.x && iLine.o.x >= point.x){xi = iLine.o.x;yi = point.y;} // calculate the intersection point
	else {b1 = 0;b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);a1 = point.y - b1 * point.x;a2 = iLine.o.y - b2 * iLine.o.x;xi = -(a1 - a2) / (b1 - b2);yi = a1 + b1 * xi;} // dont count xi < point.x cases
	if(xi >= point.x){xcount += 1;} // optimisation 4: specific for square images
	if(xcount === 2){break;}}return xcount;}, /**
	     * Returns width of an object's bounding rectangle
	     * @deprecated since 1.0.4
	     * @return {Number} width value
	     */getBoundingRectWidth:function getBoundingRectWidth(){return this.getBoundingRect().width;}, /**
	     * Returns height of an object's bounding rectangle
	     * @deprecated since 1.0.4
	     * @return {Number} height value
	     */getBoundingRectHeight:function getBoundingRectHeight(){return this.getBoundingRect().height;}, /**
	     * Returns coordinates of object's bounding rectangle (left, top, width, height)
	     * @return {Object} Object with left, top, width, height properties
	     */getBoundingRect:function getBoundingRect(){this.oCoords || this.setCoords();var xCoords=[this.oCoords.tl.x,this.oCoords.tr.x,this.oCoords.br.x,this.oCoords.bl.x],minX=fabric.util.array.min(xCoords),maxX=fabric.util.array.max(xCoords),width=Math.abs(minX - maxX),yCoords=[this.oCoords.tl.y,this.oCoords.tr.y,this.oCoords.br.y,this.oCoords.bl.y],minY=fabric.util.array.min(yCoords),maxY=fabric.util.array.max(yCoords),height=Math.abs(minY - maxY);return {left:minX,top:minY,width:width,height:height};}, /**
	     * Returns width of an object
	     * @return {Number} width value
	     */getWidth:function getWidth(){return this.width * this.scaleX;}, /**
	     * Returns height of an object
	     * @return {Number} height value
	     */getHeight:function getHeight(){return this.height * this.scaleY;}, /**
	     * Makes sure the scale is valid and modifies it if necessary
	     * @private
	     * @param {Number} value
	     * @return {Number}
	     */_constrainScale:function _constrainScale(value){if(Math.abs(value) < this.minScaleLimit){if(value < 0){return -this.minScaleLimit;}else {return this.minScaleLimit;}}return value;}, /**
	     * Scales an object (equally by x and y)
	     * @param {Number} value Scale factor
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */scale:function scale(value){value = this._constrainScale(value);if(value < 0){this.flipX = !this.flipX;this.flipY = !this.flipY;value *= -1;}this.scaleX = value;this.scaleY = value;this.setCoords();return this;}, /**
	     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)
	     * @param {Number} value New width value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */scaleToWidth:function scaleToWidth(value){ // adjust to bounding rect factor so that rotated shapes would fit as well
	var boundingRectFactor=this.getBoundingRectWidth() / this.getWidth();return this.scale(value / this.width / boundingRectFactor);}, /**
	     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)
	     * @param {Number} value New height value
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */scaleToHeight:function scaleToHeight(value){ // adjust to bounding rect factor so that rotated shapes would fit as well
	var boundingRectFactor=this.getBoundingRectHeight() / this.getHeight();return this.scale(value / this.height / boundingRectFactor);}, /**
	     * Sets corner position coordinates based on current angle, width and height
	     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */setCoords:function setCoords(){var theta=degreesToRadians(this.angle),vpt=this.getViewportTransform(),f=function f(p){return fabric.util.transformPoint(p,vpt);},p=this._calculateCurrentDimensions(false),currentWidth=p.x,currentHeight=p.y; // If width is negative, make postive. Fixes path selection issue
	if(currentWidth < 0){currentWidth = Math.abs(currentWidth);}var _hypotenuse=Math.sqrt(Math.pow(currentWidth / 2,2) + Math.pow(currentHeight / 2,2)),_angle=Math.atan(isFinite(currentHeight / currentWidth)?currentHeight / currentWidth:0), // offset added for rotate and scale actions
	offsetX=Math.cos(_angle + theta) * _hypotenuse,offsetY=Math.sin(_angle + theta) * _hypotenuse,sinTh=Math.sin(theta),cosTh=Math.cos(theta),coords=this.getCenterPoint(),wh=new fabric.Point(currentWidth,currentHeight),_tl=new fabric.Point(coords.x - offsetX,coords.y - offsetY),_tr=new fabric.Point(_tl.x + wh.x * cosTh,_tl.y + wh.x * sinTh),bl=f(new fabric.Point(_tl.x - wh.y * sinTh,_tl.y + wh.y * cosTh)),br=f(new fabric.Point(_tr.x - wh.y * sinTh,_tr.y + wh.y * cosTh)),tl=f(_tl),tr=f(_tr),ml=new fabric.Point((tl.x + bl.x) / 2,(tl.y + bl.y) / 2),mt=new fabric.Point((tr.x + tl.x) / 2,(tr.y + tl.y) / 2),mr=new fabric.Point((br.x + tr.x) / 2,(br.y + tr.y) / 2),mb=new fabric.Point((br.x + bl.x) / 2,(br.y + bl.y) / 2),mtr=new fabric.Point(mt.x + sinTh * this.rotatingPointOffset,mt.y - cosTh * this.rotatingPointOffset); // debugging
	/* setTimeout(function() {
	         canvas.contextTop.fillStyle = 'green';
	         canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);
	         canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);
	         canvas.contextTop.fillRect(br.x, br.y, 3, 3);
	         canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);
	         canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);
	         canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);
	         canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);
	         canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);
	         canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);
	       }, 50); */this.oCoords = { // corners
	tl:tl,tr:tr,br:br,bl:bl, // middle
	ml:ml,mt:mt,mr:mr,mb:mb, // rotating point
	mtr:mtr}; // set coordinates of the draggable boxes in the corners used to scale/rotate the image
	this._setCornerCoords && this._setCornerCoords();return this;}});})();fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */{ /**
	   * Moves an object to the bottom of the stack of drawn objects
	   * @return {fabric.Object} thisArg
	   * @chainable
	   */sendToBack:function sendToBack(){if(this.group){fabric.StaticCanvas.prototype.sendToBack.call(this.group,this);}else {this.canvas.sendToBack(this);}return this;}, /**
	   * Moves an object to the top of the stack of drawn objects
	   * @return {fabric.Object} thisArg
	   * @chainable
	   */bringToFront:function bringToFront(){if(this.group){fabric.StaticCanvas.prototype.bringToFront.call(this.group,this);}else {this.canvas.bringToFront(this);}return this;}, /**
	   * Moves an object down in stack of drawn objects
	   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object
	   * @return {fabric.Object} thisArg
	   * @chainable
	   */sendBackwards:function sendBackwards(intersecting){if(this.group){fabric.StaticCanvas.prototype.sendBackwards.call(this.group,this,intersecting);}else {this.canvas.sendBackwards(this,intersecting);}return this;}, /**
	   * Moves an object up in stack of drawn objects
	   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object
	   * @return {fabric.Object} thisArg
	   * @chainable
	   */bringForward:function bringForward(intersecting){if(this.group){fabric.StaticCanvas.prototype.bringForward.call(this.group,this,intersecting);}else {this.canvas.bringForward(this,intersecting);}return this;}, /**
	   * Moves an object to specified level in stack of drawn objects
	   * @param {Number} index New position of object
	   * @return {fabric.Object} thisArg
	   * @chainable
	   */moveTo:function moveTo(index){if(this.group){fabric.StaticCanvas.prototype.moveTo.call(this.group,this,index);}else {this.canvas.moveTo(this,index);}return this;}}); /* _TO_SVG_START_ */fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */{ /**
	   * Returns styles-string for svg-export
	   * @return {String}
	   */getSvgStyles:function getSvgStyles(){var fill=this.fill?this.fill.toLive?'url(#SVGID_' + this.fill.id + ')':this.fill:'none',fillRule=this.fillRule,stroke=this.stroke?this.stroke.toLive?'url(#SVGID_' + this.stroke.id + ')':this.stroke:'none',strokeWidth=this.strokeWidth?this.strokeWidth:'0',strokeDashArray=this.strokeDashArray?this.strokeDashArray.join(' '):'',strokeLineCap=this.strokeLineCap?this.strokeLineCap:'butt',strokeLineJoin=this.strokeLineJoin?this.strokeLineJoin:'miter',strokeMiterLimit=this.strokeMiterLimit?this.strokeMiterLimit:'4',opacity=typeof this.opacity !== 'undefined'?this.opacity:'1',visibility=this.visible?'':' visibility: hidden;',filter=this.shadow?'filter: url(#SVGID_' + this.shadow.id + ');':'';return ['stroke: ',stroke,'; ','stroke-width: ',strokeWidth,'; ','stroke-dasharray: ',strokeDashArray,'; ','stroke-linecap: ',strokeLineCap,'; ','stroke-linejoin: ',strokeLineJoin,'; ','stroke-miterlimit: ',strokeMiterLimit,'; ','fill: ',fill,'; ','fill-rule: ',fillRule,'; ','opacity: ',opacity,';',filter,visibility].join('');}, /**
	   * Returns transform-string for svg-export
	   * @return {String}
	   */getSvgTransform:function getSvgTransform(){if(this.group && this.group.type === 'path-group'){return '';}var toFixed=fabric.util.toFixed,angle=this.getAngle(),vpt=!this.canvas || this.canvas.svgViewportTransformation?this.getViewportTransform():[1,0,0,1,0,0],center=fabric.util.transformPoint(this.getCenterPoint(),vpt),NUM_FRACTION_DIGITS=fabric.Object.NUM_FRACTION_DIGITS,translatePart=this.type === 'path-group'?'':'translate(' + toFixed(center.x,NUM_FRACTION_DIGITS) + ' ' + toFixed(center.y,NUM_FRACTION_DIGITS) + ')',anglePart=angle !== 0?' rotate(' + toFixed(angle,NUM_FRACTION_DIGITS) + ')':'',scalePart=this.scaleX === 1 && this.scaleY === 1 && vpt[0] === 1 && vpt[3] === 1?'':' scale(' + toFixed(this.scaleX * vpt[0],NUM_FRACTION_DIGITS) + ' ' + toFixed(this.scaleY * vpt[3],NUM_FRACTION_DIGITS) + ')',addTranslateX=this.type === 'path-group'?this.width * vpt[0]:0,flipXPart=this.flipX?' matrix(-1 0 0 1 ' + addTranslateX + ' 0) ':'',addTranslateY=this.type === 'path-group'?this.height * vpt[3]:0,flipYPart=this.flipY?' matrix(1 0 0 -1 0 ' + addTranslateY + ')':'';return [translatePart,anglePart,scalePart,flipXPart,flipYPart].join('');}, /**
	   * Returns transform-string for svg-export from the transform matrix of single elements
	   * @return {String}
	   */getSvgTransformMatrix:function getSvgTransformMatrix(){return this.transformMatrix?' matrix(' + this.transformMatrix.join(' ') + ') ':'';}, /**
	   * @private
	   */_createBaseSVGMarkup:function _createBaseSVGMarkup(){var markup=[];if(this.fill && this.fill.toLive){markup.push(this.fill.toSVG(this,false));}if(this.stroke && this.stroke.toLive){markup.push(this.stroke.toSVG(this,false));}if(this.shadow){markup.push(this.shadow.toSVG(this));}return markup;}}); /* _TO_SVG_END_ */ /*
	  Depends on `stateProperties`
	*/fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */{ /**
	   * Returns true if object state (one of its state properties) was changed
	   * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called
	   */hasStateChanged:function hasStateChanged(){return this.stateProperties.some(function(prop){return this.get(prop) !== this.originalState[prop];},this);}, /**
	   * Saves state of an object
	   * @param {Object} [options] Object with additional `stateProperties` array to include when saving state
	   * @return {fabric.Object} thisArg
	   */saveState:function saveState(options){this.stateProperties.forEach(function(prop){this.originalState[prop] = this.get(prop);},this);if(options && options.stateProperties){options.stateProperties.forEach(function(prop){this.originalState[prop] = this.get(prop);},this);}return this;}, /**
	   * Setups state of an object
	   * @return {fabric.Object} thisArg
	   */setupState:function setupState(){this.originalState = {};this.saveState();return this;}});(function(){var degreesToRadians=fabric.util.degreesToRadians, //jscs:disable requireCamelCaseOrUpperCaseIdentifiers
	isVML=function isVML(){return typeof G_vmlCanvasManager !== 'undefined';}; //jscs:enable requireCamelCaseOrUpperCaseIdentifiers
	fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */{ /**
	     * The object interactivity controls.
	     * @private
	     */_controlsVisibility:null, /**
	     * Determines which corner has been clicked
	     * @private
	     * @param {Object} pointer The pointer indicating the mouse position
	     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found
	     */_findTargetCorner:function _findTargetCorner(pointer){if(!this.hasControls || !this.active){return false;}var ex=pointer.x,ey=pointer.y,xPoints,lines;for(var i in this.oCoords) {if(!this.isControlVisible(i)){continue;}if(i === 'mtr' && !this.hasRotatingPoint){continue;}if(this.get('lockUniScaling') && (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')){continue;}lines = this._getImageLines(this.oCoords[i].corner); // debugging
	// canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);
	// canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);
	// canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);
	// canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);
	// canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);
	// canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);
	// canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);
	// canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);
	xPoints = this._findCrossPoints({x:ex,y:ey},lines);if(xPoints !== 0 && xPoints % 2 === 1){this.__corner = i;return i;}}return false;}, /**
	     * Sets the coordinates of the draggable boxes in the corners of
	     * the image used to scale/rotate it.
	     * @private
	     */_setCornerCoords:function _setCornerCoords(){var coords=this.oCoords,newTheta=degreesToRadians(45 - this.angle),cornerHypotenuse=Math.sqrt(2 * Math.pow(this.cornerSize,2)) / 2,cosHalfOffset=cornerHypotenuse * Math.cos(newTheta),sinHalfOffset=cornerHypotenuse * Math.sin(newTheta),x,y;for(var point in coords) {x = coords[point].x;y = coords[point].y;coords[point].corner = {tl:{x:x - sinHalfOffset,y:y - cosHalfOffset},tr:{x:x + cosHalfOffset,y:y - sinHalfOffset},bl:{x:x - cosHalfOffset,y:y + sinHalfOffset},br:{x:x + sinHalfOffset,y:y + cosHalfOffset}};}},_calculateCurrentDimensions:function _calculateCurrentDimensions(shouldTransform){var vpt=this.getViewportTransform(),strokeWidth=this.strokeWidth,w=this.width,h=this.height,capped=this.strokeLineCap === 'round' || this.strokeLineCap === 'square',vLine=this.type === 'line' && this.width === 0,hLine=this.type === 'line' && this.height === 0,sLine=vLine || hLine,strokeW=capped && hLine || !sLine,strokeH=capped && vLine || !sLine;if(vLine){w = strokeWidth;}else if(hLine){h = strokeWidth;}if(strokeW){w += w < 0?-strokeWidth:strokeWidth;}if(strokeH){h += h < 0?-strokeWidth:strokeWidth;}w = w * this.scaleX + 2 * this.padding;h = h * this.scaleY + 2 * this.padding;if(shouldTransform){return fabric.util.transformPoint(new fabric.Point(w,h),vpt,true);}return {x:w,y:h};}, /**
	     * Draws borders of an object's bounding box.
	     * Requires public properties: width, height
	     * Requires public options: padding, borderColor
	     * @param {CanvasRenderingContext2D} ctx Context to draw on
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */drawBorders:function drawBorders(ctx){if(!this.hasBorders){return this;}ctx.save();ctx.globalAlpha = this.isMoving?this.borderOpacityWhenMoving:1;ctx.strokeStyle = this.borderColor;ctx.lineWidth = 1 / this.borderScaleFactor;var wh=this._calculateCurrentDimensions(true),width=wh.x,height=wh.y;if(this.group){width = width * this.group.scaleX;height = height * this.group.scaleY;}ctx.strokeRect(~ ~ -(width / 2) - 0.5, // offset needed to make lines look sharper
	~ ~ -(height / 2) - 0.5,~ ~width + 1, // double offset needed to make lines look sharper
	~ ~height + 1);if(this.hasRotatingPoint && this.isControlVisible('mtr') && !this.get('lockRotation') && this.hasControls){var rotateHeight=-height / 2;ctx.beginPath();ctx.moveTo(0,rotateHeight);ctx.lineTo(0,rotateHeight - this.rotatingPointOffset);ctx.closePath();ctx.stroke();}ctx.restore();return this;}, /**
	     * Draws corners of an object's bounding box.
	     * Requires public properties: width, height
	     * Requires public options: cornerSize, padding
	     * @param {CanvasRenderingContext2D} ctx Context to draw on
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */drawControls:function drawControls(ctx){if(!this.hasControls){return this;}var wh=this._calculateCurrentDimensions(true),width=wh.x,height=wh.y,left=-(width / 2),top=-(height / 2),scaleOffset=this.cornerSize / 2,methodName=this.transparentCorners?'strokeRect':'fillRect';ctx.save();ctx.lineWidth = 1;ctx.globalAlpha = this.isMoving?this.borderOpacityWhenMoving:1;ctx.strokeStyle = ctx.fillStyle = this.cornerColor; // top-left
	this._drawControl('tl',ctx,methodName,left - scaleOffset,top - scaleOffset); // top-right
	this._drawControl('tr',ctx,methodName,left + width - scaleOffset,top - scaleOffset); // bottom-left
	this._drawControl('bl',ctx,methodName,left - scaleOffset,top + height - scaleOffset); // bottom-right
	this._drawControl('br',ctx,methodName,left + width - scaleOffset,top + height - scaleOffset);if(!this.get('lockUniScaling')){ // middle-top
	this._drawControl('mt',ctx,methodName,left + width / 2 - scaleOffset,top - scaleOffset); // middle-bottom
	this._drawControl('mb',ctx,methodName,left + width / 2 - scaleOffset,top + height - scaleOffset); // middle-right
	this._drawControl('mr',ctx,methodName,left + width - scaleOffset,top + height / 2 - scaleOffset); // middle-left
	this._drawControl('ml',ctx,methodName,left - scaleOffset,top + height / 2 - scaleOffset);} // middle-top-rotate
	if(this.hasRotatingPoint){this._drawControl('mtr',ctx,methodName,left + width / 2 - scaleOffset,top - this.rotatingPointOffset - scaleOffset);}ctx.restore();return this;}, /**
	     * @private
	     */_drawControl:function _drawControl(control,ctx,methodName,left,top){if(!this.isControlVisible(control)){return;}var size=this.cornerSize;isVML() || this.transparentCorners || ctx.clearRect(left,top,size,size);ctx[methodName](left,top,size,size);}, /**
	     * Returns true if the specified control is visible, false otherwise.
	     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.
	     * @returns {Boolean} true if the specified control is visible, false otherwise
	     */isControlVisible:function isControlVisible(controlName){return this._getControlsVisibility()[controlName];}, /**
	     * Sets the visibility of the specified control.
	     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.
	     * @param {Boolean} visible true to set the specified control visible, false otherwise
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */setControlVisible:function setControlVisible(controlName,visible){this._getControlsVisibility()[controlName] = visible;return this;}, /**
	     * Sets the visibility state of object controls.
	     * @param {Object} [options] Options object
	     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it
	     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it
	     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it
	     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it
	     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it
	     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it
	     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it
	     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it
	     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it
	     * @return {fabric.Object} thisArg
	     * @chainable
	     */setControlsVisibility:function setControlsVisibility(options){options || (options = {});for(var p in options) {this.setControlVisible(p,options[p]);}return this;}, /**
	     * Returns the instance of the control visibility set for this object.
	     * @private
	     * @returns {Object}
	     */_getControlsVisibility:function _getControlsVisibility(){if(!this._controlsVisibility){this._controlsVisibility = {tl:true,tr:true,br:true,bl:true,ml:true,mt:true,mr:true,mb:true,mtr:true};}return this._controlsVisibility;}});})();fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */{ /**
	   * Animation duration (in ms) for fx* methods
	   * @type Number
	   * @default
	   */FX_DURATION:500, /**
	   * Centers object horizontally with animation.
	   * @param {fabric.Object} object Object to center
	   * @param {Object} [callbacks] Callbacks object with optional "onComplete" and/or "onChange" properties
	   * @param {Function} [callbacks.onComplete] Invoked on completion
	   * @param {Function} [callbacks.onChange] Invoked on every step of animation
	   * @return {fabric.Canvas} thisArg
	   * @chainable
	   */fxCenterObjectH:function fxCenterObjectH(object,callbacks){callbacks = callbacks || {};var empty=function empty(){},_onComplete=callbacks.onComplete || empty,_onChange=callbacks.onChange || empty,_this=this;fabric.util.animate({startValue:object.get('left'),endValue:this.getCenter().left,duration:this.FX_DURATION,onChange:function onChange(value){object.set('left',value);_this.renderAll();_onChange();},onComplete:function onComplete(){object.setCoords();_onComplete();}});return this;}, /**
	   * Centers object vertically with animation.
	   * @param {fabric.Object} object Object to center
	   * @param {Object} [callbacks] Callbacks object with optional "onComplete" and/or "onChange" properties
	   * @param {Function} [callbacks.onComplete] Invoked on completion
	   * @param {Function} [callbacks.onChange] Invoked on every step of animation
	   * @return {fabric.Canvas} thisArg
	   * @chainable
	   */fxCenterObjectV:function fxCenterObjectV(object,callbacks){callbacks = callbacks || {};var empty=function empty(){},_onComplete2=callbacks.onComplete || empty,_onChange2=callbacks.onChange || empty,_this=this;fabric.util.animate({startValue:object.get('top'),endValue:this.getCenter().top,duration:this.FX_DURATION,onChange:function onChange(value){object.set('top',value);_this.renderAll();_onChange2();},onComplete:function onComplete(){object.setCoords();_onComplete2();}});return this;}, /**
	   * Same as `fabric.Canvas#remove` but animated
	   * @param {fabric.Object} object Object to remove
	   * @param {Object} [callbacks] Callbacks object with optional "onComplete" and/or "onChange" properties
	   * @param {Function} [callbacks.onComplete] Invoked on completion
	   * @param {Function} [callbacks.onChange] Invoked on every step of animation
	   * @return {fabric.Canvas} thisArg
	   * @chainable
	   */fxRemove:function fxRemove(object,callbacks){callbacks = callbacks || {};var empty=function empty(){},_onComplete3=callbacks.onComplete || empty,_onChange3=callbacks.onChange || empty,_this=this;fabric.util.animate({startValue:object.get('opacity'),endValue:0,duration:this.FX_DURATION,onStart:function onStart(){object.set('active',false);},onChange:function onChange(value){object.set('opacity',value);_this.renderAll();_onChange3();},onComplete:function onComplete(){_this.remove(object);_onComplete3();}});return this;}});fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */{ /**
	   * Animates object's properties
	   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)
	   * @param {Number|Object} value Value to animate property to (if string was given first) or options object
	   * @return {fabric.Object} thisArg
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#animation}
	   * @chainable
	   *
	   * As object — multiple properties
	   *
	   * object.animate({ left: ..., top: ... });
	   * object.animate({ left: ..., top: ... }, { duration: ... });
	   *
	   * As string — one property
	   *
	   * object.animate('left', ...);
	   * object.animate('left', { duration: ... });
	   *
	   */animate:function animate(){if(arguments[0] && typeof arguments[0] === 'object'){var propsToAnimate=[],prop,skipCallbacks;for(prop in arguments[0]) {propsToAnimate.push(prop);}for(var i=0,len=propsToAnimate.length;i < len;i++) {prop = propsToAnimate[i];skipCallbacks = i !== len - 1;this._animate(prop,arguments[0][prop],arguments[1],skipCallbacks);}}else {this._animate.apply(this,arguments);}return this;}, /**
	   * @private
	   * @param {String} property Property to animate
	   * @param {String} to Value to animate to
	   * @param {Object} [options] Options object
	   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked
	   */_animate:function _animate(property,to,options,skipCallbacks){var _this=this,propPair;to = to.toString();if(!options){options = {};}else {options = fabric.util.object.clone(options);}if(~property.indexOf('.')){propPair = property.split('.');}var currentValue=propPair?this.get(propPair[0])[propPair[1]]:this.get(property);if(!('from' in options)){options.from = currentValue;}if(~to.indexOf('=')){to = currentValue + parseFloat(to.replace('=',''));}else {to = parseFloat(to);}fabric.util.animate({startValue:options.from,endValue:to,byValue:options.by,easing:options.easing,duration:options.duration,abort:options.abort && function(){return options.abort.call(_this);},onChange:function onChange(value){if(propPair){_this[propPair[0]][propPair[1]] = value;}else {_this.set(property,value);}if(skipCallbacks){return;}options.onChange && options.onChange();},onComplete:function onComplete(){if(skipCallbacks){return;}_this.setCoords();options.onComplete && options.onComplete();}});}});(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend,coordProps={x1:1,x2:1,y1:1,y2:1},supportsLineDash=fabric.StaticCanvas.supports('setLineDash');if(fabric.Line){fabric.warn('fabric.Line is already defined');return;} /**
	   * Line class
	   * @class fabric.Line
	   * @extends fabric.Object
	   * @see {@link fabric.Line#initialize} for constructor definition
	   */fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'line', /**
	     * x value or first line edge
	     * @type Number
	     * @default
	     */x1:0, /**
	     * y value or first line edge
	     * @type Number
	     * @default
	     */y1:0, /**
	     * x value or second line edge
	     * @type Number
	     * @default
	     */x2:0, /**
	     * y value or second line edge
	     * @type Number
	     * @default
	     */y2:0, /**
	     * Constructor
	     * @param {Array} [points] Array of points
	     * @param {Object} [options] Options object
	     * @return {fabric.Line} thisArg
	     */initialize:function initialize(points,options){options = options || {};if(!points){points = [0,0,0,0];}this.callSuper('initialize',options);this.set('x1',points[0]);this.set('y1',points[1]);this.set('x2',points[2]);this.set('y2',points[3]);this._setWidthHeight(options);}, /**
	     * @private
	     * @param {Object} [options] Options
	     */_setWidthHeight:function _setWidthHeight(options){options || (options = {});this.width = Math.abs(this.x2 - this.x1);this.height = Math.abs(this.y2 - this.y1);this.left = 'left' in options?options.left:this._getLeftToOriginX();this.top = 'top' in options?options.top:this._getTopToOriginY();}, /**
	     * @private
	     * @param {String} key
	     * @param {Any} value
	     */_set:function _set(key,value){this.callSuper('_set',key,value);if(typeof coordProps[key] !== 'undefined'){this._setWidthHeight();}return this;}, /**
	     * @private
	     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.
	     */_getLeftToOriginX:makeEdgeToOriginGetter({ // property names
	origin:'originX',axis1:'x1',axis2:'x2',dimension:'width'},{ // possible values of origin
	nearest:'left',center:'center',farthest:'right'}), /**
	     * @private
	     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.
	     */_getTopToOriginY:makeEdgeToOriginGetter({ // property names
	origin:'originY',axis1:'y1',axis2:'y2',dimension:'height'},{ // possible values of origin
	nearest:'top',center:'center',farthest:'bottom'}), /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_render:function _render(ctx,noTransform){ctx.beginPath();if(noTransform){ //  Line coords are distances from left-top of canvas to origin of line.
	//  To render line in a path-group, we need to translate them to
	//  distances from center of path-group to center of line.
	var cp=this.getCenterPoint();ctx.translate(cp.x - this.strokeWidth / 2,cp.y - this.strokeWidth / 2);}if(!this.strokeDashArray || this.strokeDashArray && supportsLineDash){ // move from center (of virtual box) to its left/top corner
	// we can't assume x1, y1 is top left and x2, y2 is bottom right
	var p=this.calcLinePoints();ctx.moveTo(p.x1,p.y1);ctx.lineTo(p.x2,p.y2);}ctx.lineWidth = this.strokeWidth; // TODO: test this
	// make sure setting "fill" changes color of a line
	// (by copying fillStyle to strokeStyle, since line is stroked, not filled)
	var origStrokeStyle=ctx.strokeStyle;ctx.strokeStyle = this.stroke || ctx.fillStyle;this.stroke && this._renderStroke(ctx);ctx.strokeStyle = origStrokeStyle;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderDashedStroke:function _renderDashedStroke(ctx){var p=this.calcLinePoints();ctx.beginPath();fabric.util.drawDashedLine(ctx,p.x1,p.y1,p.x2,p.y2,this.strokeDashArray);ctx.closePath();}, /**
	     * Returns object representation of an instance
	     * @methd toObject
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toObject:function toObject(propertiesToInclude){return extend(this.callSuper('toObject',propertiesToInclude),this.calcLinePoints());}, /**
	     * Recalculates line points given width and height
	     * @private
	     */calcLinePoints:function calcLinePoints(){var xMult=this.x1 <= this.x2?-1:1,yMult=this.y1 <= this.y2?-1:1,x1=xMult * this.width * 0.5,y1=yMult * this.height * 0.5,x2=xMult * this.width * -0.5,y2=yMult * this.height * -0.5;return {x1:x1,x2:x2,y1:y1,y2:y2};}, /* _TO_SVG_START_ */ /**
	     * Returns SVG representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var markup=this._createBaseSVGMarkup(),p={x1:this.x1,x2:this.x2,y1:this.y1,y2:this.y2};if(!(this.group && this.group.type === 'path-group')){p = this.calcLinePoints();}markup.push('<line ','x1="',p.x1,'" y1="',p.y1,'" x2="',p.x2,'" y2="',p.y2,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'"/>\n');return reviver?reviver(markup.join('')):markup.join('');}, /* _TO_SVG_END_ */ /**
	     * Returns complexity of an instance
	     * @return {Number} complexity
	     */complexity:function complexity(){return 1;}}); /* _FROM_SVG_START_ */ /**
	   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})
	   * @static
	   * @memberOf fabric.Line
	   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement
	   */fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' ')); /**
	   * Returns fabric.Line instance from an SVG element
	   * @static
	   * @memberOf fabric.Line
	   * @param {SVGElement} element Element to parse
	   * @param {Object} [options] Options object
	   * @return {fabric.Line} instance of fabric.Line
	   */fabric.Line.fromElement = function(element,options){var parsedAttributes=fabric.parseAttributes(element,fabric.Line.ATTRIBUTE_NAMES),points=[parsedAttributes.x1 || 0,parsedAttributes.y1 || 0,parsedAttributes.x2 || 0,parsedAttributes.y2 || 0];return new fabric.Line(points,extend(parsedAttributes,options));}; /* _FROM_SVG_END_ */ /**
	   * Returns fabric.Line instance from an object representation
	   * @static
	   * @memberOf fabric.Line
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Line} instance of fabric.Line
	   */fabric.Line.fromObject = function(object){var points=[object.x1,object.y1,object.x2,object.y2];return new fabric.Line(points,object);}; /**
	   * Produces a function that calculates distance from canvas edge to Line origin.
	   */function makeEdgeToOriginGetter(propertyNames,originValues){var origin=propertyNames.origin,axis1=propertyNames.axis1,axis2=propertyNames.axis2,dimension=propertyNames.dimension,nearest=originValues.nearest,center=originValues.center,farthest=originValues.farthest;return function(){switch(this.get(origin)){case nearest:return Math.min(this.get(axis1),this.get(axis2));case center:return Math.min(this.get(axis1),this.get(axis2)) + 0.5 * this.get(dimension);case farthest:return Math.max(this.get(axis1),this.get(axis2));}};}})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),pi=Math.PI,extend=fabric.util.object.extend;if(fabric.Circle){fabric.warn('fabric.Circle is already defined.');return;} /**
	   * Circle class
	   * @class fabric.Circle
	   * @extends fabric.Object
	   * @see {@link fabric.Circle#initialize} for constructor definition
	   */fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'circle', /**
	     * Radius of this circle
	     * @type Number
	     * @default
	     */radius:0, /**
	     * Start angle of the circle, moving clockwise
	     * @type Number
	     * @default 0
	     */startAngle:0, /**
	     * End angle of the circle
	     * @type Number
	     * @default 2Pi
	     */endAngle:pi * 2, /**
	     * Constructor
	     * @param {Object} [options] Options object
	     * @return {fabric.Circle} thisArg
	     */initialize:function initialize(options){options = options || {};this.callSuper('initialize',options);this.set('radius',options.radius || 0);this.startAngle = options.startAngle || this.startAngle;this.endAngle = options.endAngle || this.endAngle;}, /**
	     * @private
	     * @param {String} key
	     * @param {Any} value
	     * @return {fabric.Circle} thisArg
	     */_set:function _set(key,value){this.callSuper('_set',key,value);if(key === 'radius'){this.setRadius(value);}return this;}, /**
	     * Returns object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toObject:function toObject(propertiesToInclude){return extend(this.callSuper('toObject',propertiesToInclude),{radius:this.get('radius'),startAngle:this.startAngle,endAngle:this.endAngle});}, /* _TO_SVG_START_ */ /**
	     * Returns svg representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var markup=this._createBaseSVGMarkup(),x=0,y=0,angle=(this.endAngle - this.startAngle) % (2 * pi);if(angle === 0){if(this.group && this.group.type === 'path-group'){x = this.left + this.radius;y = this.top + this.radius;}markup.push('<circle ','cx="' + x + '" cy="' + y + '" ','r="',this.radius,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),' ',this.getSvgTransformMatrix(),'"/>\n');}else {var startX=Math.cos(this.startAngle) * this.radius,startY=Math.sin(this.startAngle) * this.radius,endX=Math.cos(this.endAngle) * this.radius,endY=Math.sin(this.endAngle) * this.radius,largeFlag=angle > pi?'1':'0';markup.push('<path d="M ' + startX + ' ' + startY,' A ' + this.radius + ' ' + this.radius,' 0 ',+largeFlag + ' 1',' ' + endX + ' ' + endY,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),' ',this.getSvgTransformMatrix(),'"/>\n');}return reviver?reviver(markup.join('')):markup.join('');}, /* _TO_SVG_END_ */ /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx context to render on
	     * @param {Boolean} [noTransform] When true, context is not transformed
	     */_render:function _render(ctx,noTransform){ctx.beginPath();ctx.arc(noTransform?this.left + this.radius:0,noTransform?this.top + this.radius:0,this.radius,this.startAngle,this.endAngle,false);this._renderFill(ctx);this._renderStroke(ctx);}, /**
	     * Returns horizontal radius of an object (according to how an object is scaled)
	     * @return {Number}
	     */getRadiusX:function getRadiusX(){return this.get('radius') * this.get('scaleX');}, /**
	     * Returns vertical radius of an object (according to how an object is scaled)
	     * @return {Number}
	     */getRadiusY:function getRadiusY(){return this.get('radius') * this.get('scaleY');}, /**
	     * Sets radius of an object (and updates width accordingly)
	     * @return {Number}
	     */setRadius:function setRadius(value){this.radius = value;this.set('width',value * 2).set('height',value * 2);}, /**
	     * Returns complexity of an instance
	     * @return {Number} complexity of this instance
	     */complexity:function complexity(){return 1;}}); /* _FROM_SVG_START_ */ /**
	   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})
	   * @static
	   * @memberOf fabric.Circle
	   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement
	   */fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' ')); /**
	   * Returns {@link fabric.Circle} instance from an SVG element
	   * @static
	   * @memberOf fabric.Circle
	   * @param {SVGElement} element Element to parse
	   * @param {Object} [options] Options object
	   * @throws {Error} If value of `r` attribute is missing or invalid
	   * @return {fabric.Circle} Instance of fabric.Circle
	   */fabric.Circle.fromElement = function(element,options){options || (options = {});var parsedAttributes=fabric.parseAttributes(element,fabric.Circle.ATTRIBUTE_NAMES);if(!isValidRadius(parsedAttributes)){throw new Error('value of `r` attribute is required and can not be negative');}parsedAttributes.left = parsedAttributes.left || 0;parsedAttributes.top = parsedAttributes.top || 0;var obj=new fabric.Circle(extend(parsedAttributes,options));obj.left -= obj.radius;obj.top -= obj.radius;return obj;}; /**
	   * @private
	   */function isValidRadius(attributes){return 'radius' in attributes && attributes.radius >= 0;} /* _FROM_SVG_END_ */ /**
	   * Returns {@link fabric.Circle} instance from an object representation
	   * @static
	   * @memberOf fabric.Circle
	   * @param {Object} object Object to create an instance from
	   * @return {Object} Instance of fabric.Circle
	   */fabric.Circle.fromObject = function(object){return new fabric.Circle(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {});if(fabric.Triangle){fabric.warn('fabric.Triangle is already defined');return;} /**
	   * Triangle class
	   * @class fabric.Triangle
	   * @extends fabric.Object
	   * @return {fabric.Triangle} thisArg
	   * @see {@link fabric.Triangle#initialize} for constructor definition
	   */fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'triangle', /**
	     * Constructor
	     * @param {Object} [options] Options object
	     * @return {Object} thisArg
	     */initialize:function initialize(options){options = options || {};this.callSuper('initialize',options);this.set('width',options.width || 100).set('height',options.height || 100);}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_render:function _render(ctx){var widthBy2=this.width / 2,heightBy2=this.height / 2;ctx.beginPath();ctx.moveTo(-widthBy2,heightBy2);ctx.lineTo(0,-heightBy2);ctx.lineTo(widthBy2,heightBy2);ctx.closePath();this._renderFill(ctx);this._renderStroke(ctx);}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderDashedStroke:function _renderDashedStroke(ctx){var widthBy2=this.width / 2,heightBy2=this.height / 2;ctx.beginPath();fabric.util.drawDashedLine(ctx,-widthBy2,heightBy2,0,-heightBy2,this.strokeDashArray);fabric.util.drawDashedLine(ctx,0,-heightBy2,widthBy2,heightBy2,this.strokeDashArray);fabric.util.drawDashedLine(ctx,widthBy2,heightBy2,-widthBy2,heightBy2,this.strokeDashArray);ctx.closePath();}, /* _TO_SVG_START_ */ /**
	     * Returns SVG representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var markup=this._createBaseSVGMarkup(),widthBy2=this.width / 2,heightBy2=this.height / 2,points=[-widthBy2 + ' ' + heightBy2,'0 ' + -heightBy2,widthBy2 + ' ' + heightBy2].join(',');markup.push('<polygon ','points="',points,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),'"/>');return reviver?reviver(markup.join('')):markup.join('');}, /* _TO_SVG_END_ */ /**
	     * Returns complexity of an instance
	     * @return {Number} complexity of this instance
	     */complexity:function complexity(){return 1;}}); /**
	   * Returns fabric.Triangle instance from an object representation
	   * @static
	   * @memberOf fabric.Triangle
	   * @param {Object} object Object to create an instance from
	   * @return {Object} instance of Canvas.Triangle
	   */fabric.Triangle.fromObject = function(object){return new fabric.Triangle(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),piBy2=Math.PI * 2,extend=fabric.util.object.extend;if(fabric.Ellipse){fabric.warn('fabric.Ellipse is already defined.');return;} /**
	   * Ellipse class
	   * @class fabric.Ellipse
	   * @extends fabric.Object
	   * @return {fabric.Ellipse} thisArg
	   * @see {@link fabric.Ellipse#initialize} for constructor definition
	   */fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'ellipse', /**
	     * Horizontal radius
	     * @type Number
	     * @default
	     */rx:0, /**
	     * Vertical radius
	     * @type Number
	     * @default
	     */ry:0, /**
	     * Constructor
	     * @param {Object} [options] Options object
	     * @return {fabric.Ellipse} thisArg
	     */initialize:function initialize(options){options = options || {};this.callSuper('initialize',options);this.set('rx',options.rx || 0);this.set('ry',options.ry || 0);}, /**
	     * @private
	     * @param {String} key
	     * @param {Any} value
	     * @return {fabric.Ellipse} thisArg
	     */_set:function _set(key,value){this.callSuper('_set',key,value);switch(key){case 'rx':this.rx = value;this.set('width',value * 2);break;case 'ry':this.ry = value;this.set('height',value * 2);break;}return this;}, /**
	     * Returns horizontal radius of an object (according to how an object is scaled)
	     * @return {Number}
	     */getRx:function getRx(){return this.get('rx') * this.get('scaleX');}, /**
	     * Returns Vertical radius of an object (according to how an object is scaled)
	     * @return {Number}
	     */getRy:function getRy(){return this.get('ry') * this.get('scaleY');}, /**
	     * Returns object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toObject:function toObject(propertiesToInclude){return extend(this.callSuper('toObject',propertiesToInclude),{rx:this.get('rx'),ry:this.get('ry')});}, /* _TO_SVG_START_ */ /**
	     * Returns svg representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var markup=this._createBaseSVGMarkup(),x=0,y=0;if(this.group && this.group.type === 'path-group'){x = this.left + this.rx;y = this.top + this.ry;}markup.push('<ellipse ','cx="',x,'" cy="',y,'" ','rx="',this.rx,'" ry="',this.ry,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'"/>\n');return reviver?reviver(markup.join('')):markup.join('');}, /* _TO_SVG_END_ */ /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx context to render on
	     * @param {Boolean} [noTransform] When true, context is not transformed
	     */_render:function _render(ctx,noTransform){ctx.beginPath();ctx.save();ctx.transform(1,0,0,this.ry / this.rx,0,0);ctx.arc(noTransform?this.left + this.rx:0,noTransform?(this.top + this.ry) * this.rx / this.ry:0,this.rx,0,piBy2,false);ctx.restore();this._renderFill(ctx);this._renderStroke(ctx);}, /**
	     * Returns complexity of an instance
	     * @return {Number} complexity
	     */complexity:function complexity(){return 1;}}); /* _FROM_SVG_START_ */ /**
	   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})
	   * @static
	   * @memberOf fabric.Ellipse
	   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement
	   */fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' ')); /**
	   * Returns {@link fabric.Ellipse} instance from an SVG element
	   * @static
	   * @memberOf fabric.Ellipse
	   * @param {SVGElement} element Element to parse
	   * @param {Object} [options] Options object
	   * @return {fabric.Ellipse}
	   */fabric.Ellipse.fromElement = function(element,options){options || (options = {});var parsedAttributes=fabric.parseAttributes(element,fabric.Ellipse.ATTRIBUTE_NAMES);parsedAttributes.left = parsedAttributes.left || 0;parsedAttributes.top = parsedAttributes.top || 0;var ellipse=new fabric.Ellipse(extend(parsedAttributes,options));ellipse.top -= ellipse.ry;ellipse.left -= ellipse.rx;return ellipse;}; /* _FROM_SVG_END_ */ /**
	   * Returns {@link fabric.Ellipse} instance from an object representation
	   * @static
	   * @memberOf fabric.Ellipse
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Ellipse}
	   */fabric.Ellipse.fromObject = function(object){return new fabric.Ellipse(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend;if(fabric.Rect){console.warn('fabric.Rect is already defined');return;}var stateProperties=fabric.Object.prototype.stateProperties.concat();stateProperties.push('rx','ry','x','y'); /**
	   * Rectangle class
	   * @class fabric.Rect
	   * @extends fabric.Object
	   * @return {fabric.Rect} thisArg
	   * @see {@link fabric.Rect#initialize} for constructor definition
	   */fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */{ /**
	     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})
	     * as well as for history (undo/redo) purposes
	     * @type Array
	     */stateProperties:stateProperties, /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'rect', /**
	     * Horizontal border radius
	     * @type Number
	     * @default
	     */rx:0, /**
	     * Vertical border radius
	     * @type Number
	     * @default
	     */ry:0, /**
	     * Used to specify dash pattern for stroke on this object
	     * @type Array
	     */strokeDashArray:null, /**
	     * Constructor
	     * @param {Object} [options] Options object
	     * @return {Object} thisArg
	     */initialize:function initialize(options){options = options || {};this.callSuper('initialize',options);this._initRxRy();}, /**
	     * Initializes rx/ry attributes
	     * @private
	     */_initRxRy:function _initRxRy(){if(this.rx && !this.ry){this.ry = this.rx;}else if(this.ry && !this.rx){this.rx = this.ry;}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_render:function _render(ctx,noTransform){ // optimize 1x1 case (used in spray brush)
	if(this.width === 1 && this.height === 1){ctx.fillRect(0,0,1,1);return;}var rx=this.rx?Math.min(this.rx,this.width / 2):0,ry=this.ry?Math.min(this.ry,this.height / 2):0,w=this.width,h=this.height,x=noTransform?this.left:-this.width / 2,y=noTransform?this.top:-this.height / 2,isRounded=rx !== 0 || ry !== 0,k=1 - 0.5522847498 /* "magic number" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */;ctx.beginPath();ctx.moveTo(x + rx,y);ctx.lineTo(x + w - rx,y);isRounded && ctx.bezierCurveTo(x + w - k * rx,y,x + w,y + k * ry,x + w,y + ry);ctx.lineTo(x + w,y + h - ry);isRounded && ctx.bezierCurveTo(x + w,y + h - k * ry,x + w - k * rx,y + h,x + w - rx,y + h);ctx.lineTo(x + rx,y + h);isRounded && ctx.bezierCurveTo(x + k * rx,y + h,x,y + h - k * ry,x,y + h - ry);ctx.lineTo(x,y + ry);isRounded && ctx.bezierCurveTo(x,y + k * ry,x + k * rx,y,x + rx,y);ctx.closePath();this._renderFill(ctx);this._renderStroke(ctx);}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderDashedStroke:function _renderDashedStroke(ctx){var x=-this.width / 2,y=-this.height / 2,w=this.width,h=this.height;ctx.beginPath();fabric.util.drawDashedLine(ctx,x,y,x + w,y,this.strokeDashArray);fabric.util.drawDashedLine(ctx,x + w,y,x + w,y + h,this.strokeDashArray);fabric.util.drawDashedLine(ctx,x + w,y + h,x,y + h,this.strokeDashArray);fabric.util.drawDashedLine(ctx,x,y + h,x,y,this.strokeDashArray);ctx.closePath();}, /**
	     * Returns object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toObject:function toObject(propertiesToInclude){var object=extend(this.callSuper('toObject',propertiesToInclude),{rx:this.get('rx') || 0,ry:this.get('ry') || 0});if(!this.includeDefaultValues){this._removeDefaultValues(object);}return object;}, /* _TO_SVG_START_ */ /**
	     * Returns svg representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var markup=this._createBaseSVGMarkup(),x=this.left,y=this.top;if(!(this.group && this.group.type === 'path-group')){x = -this.width / 2;y = -this.height / 2;}markup.push('<rect ','x="',x,'" y="',y,'" rx="',this.get('rx'),'" ry="',this.get('ry'),'" width="',this.width,'" height="',this.height,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'"/>\n');return reviver?reviver(markup.join('')):markup.join('');}, /* _TO_SVG_END_ */ /**
	     * Returns complexity of an instance
	     * @return {Number} complexity
	     */complexity:function complexity(){return 1;}}); /* _FROM_SVG_START_ */ /**
	   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)
	   * @static
	   * @memberOf fabric.Rect
	   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement
	   */fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' ')); /**
	   * Returns {@link fabric.Rect} instance from an SVG element
	   * @static
	   * @memberOf fabric.Rect
	   * @param {SVGElement} element Element to parse
	   * @param {Object} [options] Options object
	   * @return {fabric.Rect} Instance of fabric.Rect
	   */fabric.Rect.fromElement = function(element,options){if(!element){return null;}options = options || {};var parsedAttributes=fabric.parseAttributes(element,fabric.Rect.ATTRIBUTE_NAMES);parsedAttributes.left = parsedAttributes.left || 0;parsedAttributes.top = parsedAttributes.top || 0;var rect=new fabric.Rect(extend(options?fabric.util.object.clone(options):{},parsedAttributes));rect.visible = rect.width > 0 && rect.height > 0;return rect;}; /* _FROM_SVG_END_ */ /**
	   * Returns {@link fabric.Rect} instance from an object representation
	   * @static
	   * @memberOf fabric.Rect
	   * @param {Object} object Object to create an instance from
	   * @return {Object} instance of fabric.Rect
	   */fabric.Rect.fromObject = function(object){return new fabric.Rect(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {});if(fabric.Polyline){fabric.warn('fabric.Polyline is already defined');return;} /**
	   * Polyline class
	   * @class fabric.Polyline
	   * @extends fabric.Object
	   * @see {@link fabric.Polyline#initialize} for constructor definition
	   */fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'polyline', /**
	     * Points array
	     * @type Array
	     * @default
	     */points:null, /**
	     * Minimum X from points values, necessary to offset points
	     * @type Number
	     * @default
	     */minX:0, /**
	     * Minimum Y from points values, necessary to offset points
	     * @type Number
	     * @default
	     */minY:0, /**
	     * Constructor
	     * @param {Array} points Array of points (where each point is an object with x and y)
	     * @param {Object} [options] Options object
	     * @param {Boolean} [skipOffset] Whether points offsetting should be skipped
	     * @return {fabric.Polyline} thisArg
	     * @example
	     * var poly = new fabric.Polyline([
	     *     { x: 10, y: 10 },
	     *     { x: 50, y: 30 },
	     *     { x: 40, y: 70 },
	     *     { x: 60, y: 50 },
	     *     { x: 100, y: 150 },
	     *     { x: 40, y: 100 }
	     *   ], {
	     *   stroke: 'red',
	     *   left: 100,
	     *   top: 100
	     * });
	     */initialize:function initialize(points,options){return fabric.Polygon.prototype.initialize.call(this,points,options);}, /**
	     * @private
	     */_calcDimensions:function _calcDimensions(){return fabric.Polygon.prototype._calcDimensions.call(this);}, /**
	     * @private
	     */_applyPointOffset:function _applyPointOffset(){return fabric.Polygon.prototype._applyPointOffset.call(this);}, /**
	     * Returns object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(propertiesToInclude){return fabric.Polygon.prototype.toObject.call(this,propertiesToInclude);}, /* _TO_SVG_START_ */ /**
	     * Returns SVG representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){return fabric.Polygon.prototype.toSVG.call(this,reviver);}, /* _TO_SVG_END_ */ /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_render:function _render(ctx){if(!fabric.Polygon.prototype.commonRender.call(this,ctx)){return;}this._renderFill(ctx);this._renderStroke(ctx);}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderDashedStroke:function _renderDashedStroke(ctx){var p1,p2;ctx.beginPath();for(var i=0,len=this.points.length;i < len;i++) {p1 = this.points[i];p2 = this.points[i + 1] || p1;fabric.util.drawDashedLine(ctx,p1.x,p1.y,p2.x,p2.y,this.strokeDashArray);}}, /**
	     * Returns complexity of an instance
	     * @return {Number} complexity of this instance
	     */complexity:function complexity(){return this.get('points').length;}}); /* _FROM_SVG_START_ */ /**
	   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})
	   * @static
	   * @memberOf fabric.Polyline
	   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement
	   */fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(); /**
	   * Returns fabric.Polyline instance from an SVG element
	   * @static
	   * @memberOf fabric.Polyline
	   * @param {SVGElement} element Element to parse
	   * @param {Object} [options] Options object
	   * @return {fabric.Polyline} Instance of fabric.Polyline
	   */fabric.Polyline.fromElement = function(element,options){if(!element){return null;}options || (options = {});var points=fabric.parsePointsAttribute(element.getAttribute('points')),parsedAttributes=fabric.parseAttributes(element,fabric.Polyline.ATTRIBUTE_NAMES);return new fabric.Polyline(points,fabric.util.object.extend(parsedAttributes,options));}; /* _FROM_SVG_END_ */ /**
	   * Returns fabric.Polyline instance from an object representation
	   * @static
	   * @memberOf fabric.Polyline
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Polyline} Instance of fabric.Polyline
	   */fabric.Polyline.fromObject = function(object){var points=object.points;return new fabric.Polyline(points,object,true);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend,min=fabric.util.array.min,max=fabric.util.array.max,toFixed=fabric.util.toFixed;if(fabric.Polygon){fabric.warn('fabric.Polygon is already defined');return;} /**
	   * Polygon class
	   * @class fabric.Polygon
	   * @extends fabric.Object
	   * @see {@link fabric.Polygon#initialize} for constructor definition
	   */fabric.Polygon = fabric.util.createClass(fabric.Object, /** @lends fabric.Polygon.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'polygon', /**
	     * Points array
	     * @type Array
	     * @default
	     */points:null, /**
	     * Minimum X from points values, necessary to offset points
	     * @type Number
	     * @default
	     */minX:0, /**
	     * Minimum Y from points values, necessary to offset points
	     * @type Number
	     * @default
	     */minY:0, /**
	     * Constructor
	     * @param {Array} points Array of points
	     * @param {Object} [options] Options object
	     * @return {fabric.Polygon} thisArg
	     */initialize:function initialize(points,options){options = options || {};this.points = points || [];this.callSuper('initialize',options);this._calcDimensions();if(!('top' in options)){this.top = this.minY;}if(!('left' in options)){this.left = this.minX;}}, /**
	     * @private
	     */_calcDimensions:function _calcDimensions(){var points=this.points,minX=min(points,'x'),minY=min(points,'y'),maxX=max(points,'x'),maxY=max(points,'y');this.width = maxX - minX || 0;this.height = maxY - minY || 0;this.minX = minX || 0,this.minY = minY || 0;}, /**
	     * @private
	     */_applyPointOffset:function _applyPointOffset(){ // change points to offset polygon into a bounding box
	// executed one time
	this.points.forEach(function(p){p.x -= this.minX + this.width / 2;p.y -= this.minY + this.height / 2;},this);}, /**
	     * Returns object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(propertiesToInclude){return extend(this.callSuper('toObject',propertiesToInclude),{points:this.points.concat()});}, /* _TO_SVG_START_ */ /**
	     * Returns svg representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var points=[],markup=this._createBaseSVGMarkup();for(var i=0,len=this.points.length;i < len;i++) {points.push(toFixed(this.points[i].x,2),',',toFixed(this.points[i].y,2),' ');}markup.push('<',this.type,' ','points="',points.join(''),'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),' ',this.getSvgTransformMatrix(),'"/>\n');return reviver?reviver(markup.join('')):markup.join('');}, /* _TO_SVG_END_ */ /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_render:function _render(ctx){if(!this.commonRender(ctx)){return;}this._renderFill(ctx);if(this.stroke || this.strokeDashArray){ctx.closePath();this._renderStroke(ctx);}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */commonRender:function commonRender(ctx){var point,len=this.points.length;if(!len || isNaN(this.points[len - 1].y)){ // do not draw if no points or odd points
	// NaN comes from parseFloat of a empty string in parser
	return false;}ctx.beginPath();if(this._applyPointOffset){if(!(this.group && this.group.type === 'path-group')){this._applyPointOffset();}this._applyPointOffset = null;}ctx.moveTo(this.points[0].x,this.points[0].y);for(var i=0;i < len;i++) {point = this.points[i];ctx.lineTo(point.x,point.y);}return true;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderDashedStroke:function _renderDashedStroke(ctx){fabric.Polyline.prototype._renderDashedStroke.call(this,ctx);ctx.closePath();}, /**
	     * Returns complexity of an instance
	     * @return {Number} complexity of this instance
	     */complexity:function complexity(){return this.points.length;}}); /* _FROM_SVG_START_ */ /**
	   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)
	   * @static
	   * @memberOf fabric.Polygon
	   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement
	   */fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(); /**
	   * Returns {@link fabric.Polygon} instance from an SVG element
	   * @static
	   * @memberOf fabric.Polygon
	   * @param {SVGElement} element Element to parse
	   * @param {Object} [options] Options object
	   * @return {fabric.Polygon} Instance of fabric.Polygon
	   */fabric.Polygon.fromElement = function(element,options){if(!element){return null;}options || (options = {});var points=fabric.parsePointsAttribute(element.getAttribute('points')),parsedAttributes=fabric.parseAttributes(element,fabric.Polygon.ATTRIBUTE_NAMES);return new fabric.Polygon(points,extend(parsedAttributes,options));}; /* _FROM_SVG_END_ */ /**
	   * Returns fabric.Polygon instance from an object representation
	   * @static
	   * @memberOf fabric.Polygon
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Polygon} Instance of fabric.Polygon
	   */fabric.Polygon.fromObject = function(object){return new fabric.Polygon(object.points,object,true);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),min=fabric.util.array.min,max=fabric.util.array.max,extend=fabric.util.object.extend,_toString=Object.prototype.toString,drawArc=fabric.util.drawArc,commandLengths={m:2,l:2,h:1,v:1,c:6,s:4,q:4,t:2,a:7},repeatedCommands={m:'l',M:'L'};if(fabric.Path){fabric.warn('fabric.Path is already defined');return;} /**
	   * Path class
	   * @class fabric.Path
	   * @extends fabric.Object
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#path_and_pathgroup}
	   * @see {@link fabric.Path#initialize} for constructor definition
	   */fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'path', /**
	     * Array of path points
	     * @type Array
	     * @default
	     */path:null, /**
	     * Minimum X from points values, necessary to offset points
	     * @type Number
	     * @default
	     */minX:0, /**
	     * Minimum Y from points values, necessary to offset points
	     * @type Number
	     * @default
	     */minY:0, /**
	     * Constructor
	     * @param {Array|String} path Path data (sequence of coordinates and corresponding "command" tokens)
	     * @param {Object} [options] Options object
	     * @return {fabric.Path} thisArg
	     */initialize:function initialize(path,options){options = options || {};this.setOptions(options);if(!path){throw new Error('`path` argument is required');}var fromArray=_toString.call(path) === '[object Array]';this.path = fromArray?path // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)
	:path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);if(!this.path){return;}if(!fromArray){this.path = this._parsePath();}this._setPositionDimensions();if(options.sourcePath){this.setSourcePath(options.sourcePath);}}, /**
	     * @private
	     */_setPositionDimensions:function _setPositionDimensions(){var calcDim=this._parseDimensions();this.minX = calcDim.left;this.minY = calcDim.top;this.width = calcDim.width;this.height = calcDim.height;calcDim.left += this.originX === 'center'?this.width / 2:this.originX === 'right'?this.width:0;calcDim.top += this.originY === 'center'?this.height / 2:this.originY === 'bottom'?this.height:0;this.top = this.top || calcDim.top;this.left = this.left || calcDim.left;this.pathOffset = this.pathOffset || {x:this.minX + this.width / 2,y:this.minY + this.height / 2};}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx context to render path on
	     */_render:function _render(ctx){var current, // current instruction
	previous=null,subpathStartX=0,subpathStartY=0,x=0, // current x
	y=0, // current y
	controlX=0, // current control point x
	controlY=0, // current control point y
	tempX,tempY,l=-this.pathOffset.x,t=-this.pathOffset.y;if(this.group && this.group.type === 'path-group'){l = 0;t = 0;}ctx.beginPath();for(var i=0,len=this.path.length;i < len;++i) {current = this.path[i];switch(current[0]){ // first letter
	case 'l': // lineto, relative
	x += current[1];y += current[2];ctx.lineTo(x + l,y + t);break;case 'L': // lineto, absolute
	x = current[1];y = current[2];ctx.lineTo(x + l,y + t);break;case 'h': // horizontal lineto, relative
	x += current[1];ctx.lineTo(x + l,y + t);break;case 'H': // horizontal lineto, absolute
	x = current[1];ctx.lineTo(x + l,y + t);break;case 'v': // vertical lineto, relative
	y += current[1];ctx.lineTo(x + l,y + t);break;case 'V': // verical lineto, absolute
	y = current[1];ctx.lineTo(x + l,y + t);break;case 'm': // moveTo, relative
	x += current[1];y += current[2];subpathStartX = x;subpathStartY = y;ctx.moveTo(x + l,y + t);break;case 'M': // moveTo, absolute
	x = current[1];y = current[2];subpathStartX = x;subpathStartY = y;ctx.moveTo(x + l,y + t);break;case 'c': // bezierCurveTo, relative
	tempX = x + current[5];tempY = y + current[6];controlX = x + current[3];controlY = y + current[4];ctx.bezierCurveTo(x + current[1] + l, // x1
	y + current[2] + t, // y1
	controlX + l, // x2
	controlY + t, // y2
	tempX + l,tempY + t);x = tempX;y = tempY;break;case 'C': // bezierCurveTo, absolute
	x = current[5];y = current[6];controlX = current[3];controlY = current[4];ctx.bezierCurveTo(current[1] + l,current[2] + t,controlX + l,controlY + t,x + l,y + t);break;case 's': // shorthand cubic bezierCurveTo, relative
	// transform to absolute x,y
	tempX = x + current[3];tempY = y + current[4];if(previous[0].match(/[CcSs]/) === null){ // If there is no previous command or if the previous command was not a C, c, S, or s,
	// the control point is coincident with the current point
	controlX = x;controlY = y;}else { // calculate reflection of previous control points
	controlX = 2 * x - controlX;controlY = 2 * y - controlY;}ctx.bezierCurveTo(controlX + l,controlY + t,x + current[1] + l,y + current[2] + t,tempX + l,tempY + t); // set control point to 2nd one of this command
	// "... the first control point is assumed to be
	// the reflection of the second control point on
	// the previous command relative to the current point."
	controlX = x + current[1];controlY = y + current[2];x = tempX;y = tempY;break;case 'S': // shorthand cubic bezierCurveTo, absolute
	tempX = current[3];tempY = current[4];if(previous[0].match(/[CcSs]/) === null){ // If there is no previous command or if the previous command was not a C, c, S, or s,
	// the control point is coincident with the current point
	controlX = x;controlY = y;}else { // calculate reflection of previous control points
	controlX = 2 * x - controlX;controlY = 2 * y - controlY;}ctx.bezierCurveTo(controlX + l,controlY + t,current[1] + l,current[2] + t,tempX + l,tempY + t);x = tempX;y = tempY; // set control point to 2nd one of this command
	// "... the first control point is assumed to be
	// the reflection of the second control point on
	// the previous command relative to the current point."
	controlX = current[1];controlY = current[2];break;case 'q': // quadraticCurveTo, relative
	// transform to absolute x,y
	tempX = x + current[3];tempY = y + current[4];controlX = x + current[1];controlY = y + current[2];ctx.quadraticCurveTo(controlX + l,controlY + t,tempX + l,tempY + t);x = tempX;y = tempY;break;case 'Q': // quadraticCurveTo, absolute
	tempX = current[3];tempY = current[4];ctx.quadraticCurveTo(current[1] + l,current[2] + t,tempX + l,tempY + t);x = tempX;y = tempY;controlX = current[1];controlY = current[2];break;case 't': // shorthand quadraticCurveTo, relative
	// transform to absolute x,y
	tempX = x + current[1];tempY = y + current[2];if(previous[0].match(/[QqTt]/) === null){ // If there is no previous command or if the previous command was not a Q, q, T or t,
	// assume the control point is coincident with the current point
	controlX = x;controlY = y;}else { // calculate reflection of previous control point
	controlX = 2 * x - controlX;controlY = 2 * y - controlY;}ctx.quadraticCurveTo(controlX + l,controlY + t,tempX + l,tempY + t);x = tempX;y = tempY;break;case 'T':tempX = current[1];tempY = current[2];if(previous[0].match(/[QqTt]/) === null){ // If there is no previous command or if the previous command was not a Q, q, T or t,
	// assume the control point is coincident with the current point
	controlX = x;controlY = y;}else { // calculate reflection of previous control point
	controlX = 2 * x - controlX;controlY = 2 * y - controlY;}ctx.quadraticCurveTo(controlX + l,controlY + t,tempX + l,tempY + t);x = tempX;y = tempY;break;case 'a': // TODO: optimize this
	drawArc(ctx,x + l,y + t,[current[1],current[2],current[3],current[4],current[5],current[6] + x + l,current[7] + y + t]);x += current[6];y += current[7];break;case 'A': // TODO: optimize this
	drawArc(ctx,x + l,y + t,[current[1],current[2],current[3],current[4],current[5],current[6] + l,current[7] + t]);x = current[6];y = current[7];break;case 'z':case 'Z':x = subpathStartX;y = subpathStartY;ctx.closePath();break;}previous = current;}this._renderFill(ctx);this._renderStroke(ctx);}, /**
	     * Returns string representation of an instance
	     * @return {String} string representation of an instance
	     */toString:function toString(){return '#<fabric.Path (' + this.complexity() + '): { "top": ' + this.top + ', "left": ' + this.left + ' }>';}, /**
	     * Returns object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toObject:function toObject(propertiesToInclude){var o=extend(this.callSuper('toObject',propertiesToInclude),{path:this.path.map(function(item){return item.slice();}),pathOffset:this.pathOffset});if(this.sourcePath){o.sourcePath = this.sourcePath;}if(this.transformMatrix){o.transformMatrix = this.transformMatrix;}return o;}, /**
	     * Returns dataless object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toDatalessObject:function toDatalessObject(propertiesToInclude){var o=this.toObject(propertiesToInclude);if(this.sourcePath){o.path = this.sourcePath;}delete o.sourcePath;return o;}, /* _TO_SVG_START_ */ /**
	     * Returns svg representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var chunks=[],markup=this._createBaseSVGMarkup(),addTransform='';for(var i=0,len=this.path.length;i < len;i++) {chunks.push(this.path[i].join(' '));}var path=chunks.join(' ');if(!(this.group && this.group.type === 'path-group')){addTransform = ' translate(' + -this.pathOffset.x + ', ' + -this.pathOffset.y + ') ';}markup.push( //jscs:disable validateIndentation
	'<path ','d="',path,'" style="',this.getSvgStyles(),'" transform="',this.getSvgTransform(),addTransform,this.getSvgTransformMatrix(),'" stroke-linecap="round" ','/>\n' //jscs:enable validateIndentation
	);return reviver?reviver(markup.join('')):markup.join('');}, /* _TO_SVG_END_ */ /**
	     * Returns number representation of an instance complexity
	     * @return {Number} complexity of this instance
	     */complexity:function complexity(){return this.path.length;}, /**
	     * @private
	     */_parsePath:function _parsePath(){var result=[],coords=[],currentPath,parsed,re=/([-+]?((\d+\.\d+)|((\d+)|(\.\d+)))(?:e[-+]?\d+)?)/ig,match,coordsStr;for(var i=0,coordsParsed,len=this.path.length;i < len;i++) {currentPath = this.path[i];coordsStr = currentPath.slice(1).trim();coords.length = 0;while(match = re.exec(coordsStr)) {coords.push(match[0]);}coordsParsed = [currentPath.charAt(0)];for(var j=0,jlen=coords.length;j < jlen;j++) {parsed = parseFloat(coords[j]);if(!isNaN(parsed)){coordsParsed.push(parsed);}}var command=coordsParsed[0],commandLength=commandLengths[command.toLowerCase()],repeatedCommand=repeatedCommands[command] || command;if(coordsParsed.length - 1 > commandLength){for(var k=1,klen=coordsParsed.length;k < klen;k += commandLength) {result.push([command].concat(coordsParsed.slice(k,k + commandLength)));command = repeatedCommand;}}else {result.push(coordsParsed);}}return result;}, /**
	     * @private
	     */_parseDimensions:function _parseDimensions(){var aX=[],aY=[],current, // current instruction
	previous=null,subpathStartX=0,subpathStartY=0,x=0, // current x
	y=0, // current y
	controlX=0, // current control point x
	controlY=0, // current control point y
	tempX,tempY,bounds;for(var i=0,len=this.path.length;i < len;++i) {current = this.path[i];switch(current[0]){ // first letter
	case 'l': // lineto, relative
	x += current[1];y += current[2];bounds = [];break;case 'L': // lineto, absolute
	x = current[1];y = current[2];bounds = [];break;case 'h': // horizontal lineto, relative
	x += current[1];bounds = [];break;case 'H': // horizontal lineto, absolute
	x = current[1];bounds = [];break;case 'v': // vertical lineto, relative
	y += current[1];bounds = [];break;case 'V': // verical lineto, absolute
	y = current[1];bounds = [];break;case 'm': // moveTo, relative
	x += current[1];y += current[2];subpathStartX = x;subpathStartY = y;bounds = [];break;case 'M': // moveTo, absolute
	x = current[1];y = current[2];subpathStartX = x;subpathStartY = y;bounds = [];break;case 'c': // bezierCurveTo, relative
	tempX = x + current[5];tempY = y + current[6];controlX = x + current[3];controlY = y + current[4];bounds = fabric.util.getBoundsOfCurve(x,y,x + current[1], // x1
	y + current[2], // y1
	controlX, // x2
	controlY, // y2
	tempX,tempY);x = tempX;y = tempY;break;case 'C': // bezierCurveTo, absolute
	x = current[5];y = current[6];controlX = current[3];controlY = current[4];bounds = fabric.util.getBoundsOfCurve(x,y,current[1],current[2],controlX,controlY,x,y);break;case 's': // shorthand cubic bezierCurveTo, relative
	// transform to absolute x,y
	tempX = x + current[3];tempY = y + current[4];if(previous[0].match(/[CcSs]/) === null){ // If there is no previous command or if the previous command was not a C, c, S, or s,
	// the control point is coincident with the current point
	controlX = x;controlY = y;}else { // calculate reflection of previous control points
	controlX = 2 * x - controlX;controlY = 2 * y - controlY;}bounds = fabric.util.getBoundsOfCurve(x,y,controlX,controlY,x + current[1],y + current[2],tempX,tempY); // set control point to 2nd one of this command
	// "... the first control point is assumed to be
	// the reflection of the second control point on
	// the previous command relative to the current point."
	controlX = x + current[1];controlY = y + current[2];x = tempX;y = tempY;break;case 'S': // shorthand cubic bezierCurveTo, absolute
	tempX = current[3];tempY = current[4];if(previous[0].match(/[CcSs]/) === null){ // If there is no previous command or if the previous command was not a C, c, S, or s,
	// the control point is coincident with the current point
	controlX = x;controlY = y;}else { // calculate reflection of previous control points
	controlX = 2 * x - controlX;controlY = 2 * y - controlY;}bounds = fabric.util.getBoundsOfCurve(x,y,controlX,controlY,current[1],current[2],tempX,tempY);x = tempX;y = tempY; // set control point to 2nd one of this command
	// "... the first control point is assumed to be
	// the reflection of the second control point on
	// the previous command relative to the current point."
	controlX = current[1];controlY = current[2];break;case 'q': // quadraticCurveTo, relative
	// transform to absolute x,y
	tempX = x + current[3];tempY = y + current[4];controlX = x + current[1];controlY = y + current[2];bounds = fabric.util.getBoundsOfCurve(x,y,controlX,controlY,controlX,controlY,tempX,tempY);x = tempX;y = tempY;break;case 'Q': // quadraticCurveTo, absolute
	controlX = current[1];controlY = current[2];bounds = fabric.util.getBoundsOfCurve(x,y,controlX,controlY,controlX,controlY,current[3],current[4]);x = current[3];y = current[4];break;case 't': // shorthand quadraticCurveTo, relative
	// transform to absolute x,y
	tempX = x + current[1];tempY = y + current[2];if(previous[0].match(/[QqTt]/) === null){ // If there is no previous command or if the previous command was not a Q, q, T or t,
	// assume the control point is coincident with the current point
	controlX = x;controlY = y;}else { // calculate reflection of previous control point
	controlX = 2 * x - controlX;controlY = 2 * y - controlY;}bounds = fabric.util.getBoundsOfCurve(x,y,controlX,controlY,controlX,controlY,tempX,tempY);x = tempX;y = tempY;break;case 'T':tempX = current[1];tempY = current[2];if(previous[0].match(/[QqTt]/) === null){ // If there is no previous command or if the previous command was not a Q, q, T or t,
	// assume the control point is coincident with the current point
	controlX = x;controlY = y;}else { // calculate reflection of previous control point
	controlX = 2 * x - controlX;controlY = 2 * y - controlY;}bounds = fabric.util.getBoundsOfCurve(x,y,controlX,controlY,controlX,controlY,tempX,tempY);x = tempX;y = tempY;break;case 'a': // TODO: optimize this
	bounds = fabric.util.getBoundsOfArc(x,y,current[1],current[2],current[3],current[4],current[5],current[6] + x,current[7] + y);x += current[6];y += current[7];break;case 'A': // TODO: optimize this
	bounds = fabric.util.getBoundsOfArc(x,y,current[1],current[2],current[3],current[4],current[5],current[6],current[7]);x = current[6];y = current[7];break;case 'z':case 'Z':x = subpathStartX;y = subpathStartY;break;}previous = current;bounds.forEach(function(point){aX.push(point.x);aY.push(point.y);});aX.push(x);aY.push(y);}var minX=min(aX),minY=min(aY),maxX=max(aX),maxY=max(aY),deltaX=maxX - minX,deltaY=maxY - minY,o={left:minX,top:minY,width:deltaX,height:deltaY};return o;}}); /**
	   * Creates an instance of fabric.Path from an object
	   * @static
	   * @memberOf fabric.Path
	   * @param {Object} object
	   * @param {Function} callback Callback to invoke when an fabric.Path instance is created
	   */fabric.Path.fromObject = function(object,callback){if(typeof object.path === 'string'){fabric.loadSVGFromURL(object.path,function(elements){var path=elements[0],pathUrl=object.path;delete object.path;fabric.util.object.extend(path,object);path.setSourcePath(pathUrl);callback(path);});}else {callback(new fabric.Path(object.path,object));}}; /* _FROM_SVG_START_ */ /**
	   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)
	   * @static
	   * @memberOf fabric.Path
	   * @see http://www.w3.org/TR/SVG/paths.html#PathElement
	   */fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']); /**
	   * Creates an instance of fabric.Path from an SVG <path> element
	   * @static
	   * @memberOf fabric.Path
	   * @param {SVGElement} element to parse
	   * @param {Function} callback Callback to invoke when an fabric.Path instance is created
	   * @param {Object} [options] Options object
	   */fabric.Path.fromElement = function(element,callback,options){var parsedAttributes=fabric.parseAttributes(element,fabric.Path.ATTRIBUTE_NAMES);callback && callback(new fabric.Path(parsedAttributes.d,extend(parsedAttributes,options)));}; /* _FROM_SVG_END_ */ /**
	   * Indicates that instances of this type are async
	   * @static
	   * @memberOf fabric.Path
	   * @type Boolean
	   * @default
	   */fabric.Path.async = true;})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend,invoke=fabric.util.array.invoke,parentToObject=fabric.Object.prototype.toObject;if(fabric.PathGroup){fabric.warn('fabric.PathGroup is already defined');return;} /**
	   * Path group class
	   * @class fabric.PathGroup
	   * @extends fabric.Path
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#path_and_pathgroup}
	   * @see {@link fabric.PathGroup#initialize} for constructor definition
	   */fabric.PathGroup = fabric.util.createClass(fabric.Path, /** @lends fabric.PathGroup.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'path-group', /**
	     * Fill value
	     * @type String
	     * @default
	     */fill:'', /**
	     * Constructor
	     * @param {Array} paths
	     * @param {Object} [options] Options object
	     * @return {fabric.PathGroup} thisArg
	     */initialize:function initialize(paths,options){options = options || {};this.paths = paths || [];for(var i=this.paths.length;i--;) {this.paths[i].group = this;}if(options.toBeParsed){this.parseDimensionsFromPaths(options);delete options.toBeParsed;}this.setOptions(options);this.setCoords();if(options.sourcePath){this.setSourcePath(options.sourcePath);}}, /**
	     * Calculate width and height based on paths contained
	     */parseDimensionsFromPaths:function parseDimensionsFromPaths(options){var points,p,xC=[],yC=[],path,height,width,m=this.transformMatrix;for(var j=this.paths.length;j--;) {path = this.paths[j];height = path.height + path.strokeWidth;width = path.width + path.strokeWidth;points = [{x:path.left,y:path.top},{x:path.left + width,y:path.top},{x:path.left,y:path.top + height},{x:path.left + width,y:path.top + height}];for(var i=0;i < points.length;i++) {p = points[i];if(m){p = fabric.util.transformPoint(p,m,false);}xC.push(p.x);yC.push(p.y);}}options.width = Math.max.apply(null,xC);options.height = Math.max.apply(null,yC);}, /**
	     * Renders this group on a specified context
	     * @param {CanvasRenderingContext2D} ctx Context to render this instance on
	     */render:function render(ctx){ // do not render if object is not visible
	if(!this.visible){return;}ctx.save();if(this.transformMatrix){ctx.transform.apply(ctx,this.transformMatrix);}this.transform(ctx);this._setShadow(ctx);this.clipTo && fabric.util.clipContext(this,ctx);ctx.translate(-this.width / 2,-this.height / 2);for(var i=0,l=this.paths.length;i < l;++i) {this.paths[i].render(ctx,true);}this.clipTo && ctx.restore();this._removeShadow(ctx);ctx.restore();}, /**
	     * Sets certain property to a certain value
	     * @param {String} prop
	     * @param {Any} value
	     * @return {fabric.PathGroup} thisArg
	     */_set:function _set(prop,value){if(prop === 'fill' && value && this.isSameColor()){var i=this.paths.length;while(i--) {this.paths[i]._set(prop,value);}}return this.callSuper('_set',prop,value);}, /**
	     * Returns object representation of this path group
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toObject:function toObject(propertiesToInclude){var o=extend(parentToObject.call(this,propertiesToInclude),{paths:invoke(this.getObjects(),'toObject',propertiesToInclude)});if(this.sourcePath){o.sourcePath = this.sourcePath;}return o;}, /**
	     * Returns dataless object representation of this path group
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} dataless object representation of an instance
	     */toDatalessObject:function toDatalessObject(propertiesToInclude){var o=this.toObject(propertiesToInclude);if(this.sourcePath){o.paths = this.sourcePath;}return o;}, /* _TO_SVG_START_ */ /**
	     * Returns svg representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var objects=this.getObjects(),p=this.getPointByOrigin('left','top'),translatePart='translate(' + p.x + ' ' + p.y + ')',markup=[ //jscs:disable validateIndentation
	'<g ','style="',this.getSvgStyles(),'" ','transform="',this.getSvgTransformMatrix(),translatePart,this.getSvgTransform(),'" ','>\n' //jscs:enable validateIndentation
	];for(var i=0,len=objects.length;i < len;i++) {markup.push(objects[i].toSVG(reviver));}markup.push('</g>\n');return reviver?reviver(markup.join('')):markup.join('');}, /* _TO_SVG_END_ */ /**
	     * Returns a string representation of this path group
	     * @return {String} string representation of an object
	     */toString:function toString(){return '#<fabric.PathGroup (' + this.complexity() + '): { top: ' + this.top + ', left: ' + this.left + ' }>';}, /**
	     * Returns true if all paths in this group are of same color
	     * @return {Boolean} true if all paths are of the same color (`fill`)
	     */isSameColor:function isSameColor(){var firstPathFill=(this.getObjects()[0].get('fill') || '').toLowerCase();return this.getObjects().every(function(path){return (path.get('fill') || '').toLowerCase() === firstPathFill;});}, /**
	     * Returns number representation of object's complexity
	     * @return {Number} complexity
	     */complexity:function complexity(){return this.paths.reduce(function(total,path){return total + (path && path.complexity?path.complexity():0);},0);}, /**
	     * Returns all paths in this path group
	     * @return {Array} array of path objects included in this path group
	     */getObjects:function getObjects(){return this.paths;}}); /**
	   * Creates fabric.PathGroup instance from an object representation
	   * @static
	   * @memberOf fabric.PathGroup
	   * @param {Object} object Object to create an instance from
	   * @param {Function} callback Callback to invoke when an fabric.PathGroup instance is created
	   */fabric.PathGroup.fromObject = function(object,callback){if(typeof object.paths === 'string'){fabric.loadSVGFromURL(object.paths,function(elements){var pathUrl=object.paths;delete object.paths;var pathGroup=fabric.util.groupSVGElements(elements,object,pathUrl);callback(pathGroup);});}else {fabric.util.enlivenObjects(object.paths,function(enlivenedObjects){delete object.paths;callback(new fabric.PathGroup(enlivenedObjects,object));});}}; /**
	   * Indicates that instances of this type are async
	   * @static
	   * @memberOf fabric.PathGroup
	   * @type Boolean
	   * @default
	   */fabric.PathGroup.async = true;})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend,min=fabric.util.array.min,max=fabric.util.array.max,invoke=fabric.util.array.invoke;if(fabric.Group){return;} // lock-related properties, for use in fabric.Group#get
	// to enable locking behavior on group
	// when one of its objects has lock-related properties set
	var _lockProperties={lockMovementX:true,lockMovementY:true,lockRotation:true,lockScalingX:true,lockScalingY:true,lockUniScaling:true}; /**
	   * Group class
	   * @class fabric.Group
	   * @extends fabric.Object
	   * @mixes fabric.Collection
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3/#groups}
	   * @see {@link fabric.Group#initialize} for constructor definition
	   */fabric.Group = fabric.util.createClass(fabric.Object,fabric.Collection, /** @lends fabric.Group.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'group', /**
	     * Constructor
	     * @param {Object} objects Group objects
	     * @param {Object} [options] Options object
	     * @return {Object} thisArg
	     */initialize:function initialize(objects,options){options = options || {};this._objects = objects || [];for(var i=this._objects.length;i--;) {this._objects[i].group = this;}this.originalState = {};this.callSuper('initialize');if(options.originX){this.originX = options.originX;}if(options.originY){this.originY = options.originY;}this._calcBounds();this._updateObjectsCoords();this.callSuper('initialize',options);this.setCoords();this.saveCoords();}, /**
	     * @private
	     */_updateObjectsCoords:function _updateObjectsCoords(){this.forEachObject(this._updateObjectCoords,this);}, /**
	     * @private
	     */_updateObjectCoords:function _updateObjectCoords(object){var objectLeft=object.getLeft(),objectTop=object.getTop(),center=this.getCenterPoint();object.set({originalLeft:objectLeft,originalTop:objectTop,left:objectLeft - center.x,top:objectTop - center.y});object.setCoords(); // do not display corners of objects enclosed in a group
	object.__origHasControls = object.hasControls;object.hasControls = false;}, /**
	     * Returns string represenation of a group
	     * @return {String}
	     */toString:function toString(){return '#<fabric.Group: (' + this.complexity() + ')>';}, /**
	     * Adds an object to a group; Then recalculates group's dimension, position.
	     * @param {Object} object
	     * @return {fabric.Group} thisArg
	     * @chainable
	     */addWithUpdate:function addWithUpdate(object){this._restoreObjectsState();if(object){this._objects.push(object);object.group = this;} // since _restoreObjectsState set objects inactive
	this.forEachObject(this._setObjectActive,this);this._calcBounds();this._updateObjectsCoords();return this;}, /**
	     * @private
	     */_setObjectActive:function _setObjectActive(object){object.set('active',true);object.group = this;}, /**
	     * Removes an object from a group; Then recalculates group's dimension, position.
	     * @param {Object} object
	     * @return {fabric.Group} thisArg
	     * @chainable
	     */removeWithUpdate:function removeWithUpdate(object){this._moveFlippedObject(object);this._restoreObjectsState(); // since _restoreObjectsState set objects inactive
	this.forEachObject(this._setObjectActive,this);this.remove(object);this._calcBounds();this._updateObjectsCoords();return this;}, /**
	     * @private
	     */_onObjectAdded:function _onObjectAdded(object){object.group = this;}, /**
	     * @private
	     */_onObjectRemoved:function _onObjectRemoved(object){delete object.group;object.set('active',false);}, /**
	     * Properties that are delegated to group objects when reading/writing
	     * @param {Object} delegatedProperties
	     */delegatedProperties:{fill:true,opacity:true,fontFamily:true,fontWeight:true,fontSize:true,fontStyle:true,lineHeight:true,textDecoration:true,textAlign:true,backgroundColor:true}, /**
	     * @private
	     */_set:function _set(key,value){if(key in this.delegatedProperties){var i=this._objects.length;while(i--) {this._objects[i].set(key,value);}}this.callSuper('_set',key,value);}, /**
	     * Returns object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toObject:function toObject(propertiesToInclude){return extend(this.callSuper('toObject',propertiesToInclude),{objects:invoke(this._objects,'toObject',propertiesToInclude)});}, /**
	     * Renders instance on a given context
	     * @param {CanvasRenderingContext2D} ctx context to render instance on
	     */render:function render(ctx){ // do not render if object is not visible
	if(!this.visible){return;}ctx.save();this.clipTo && fabric.util.clipContext(this,ctx);this.transform(ctx); // the array is now sorted in order of highest first, so start from end
	for(var i=0,len=this._objects.length;i < len;i++) {this._renderObject(this._objects[i],ctx);}this.clipTo && ctx.restore();ctx.restore();}, /**
	     * Renders controls and borders for the object
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {Boolean} [noTransform] When true, context is not transformed
	     */_renderControls:function _renderControls(ctx,noTransform){this.callSuper('_renderControls',ctx,noTransform);for(var i=0,len=this._objects.length;i < len;i++) {this._objects[i]._renderControls(ctx);}}, /**
	     * @private
	     */_renderObject:function _renderObject(object,ctx){var originalHasRotatingPoint=object.hasRotatingPoint; // do not render if object is not visible
	if(!object.visible){return;}object.hasRotatingPoint = false;object.render(ctx);object.hasRotatingPoint = originalHasRotatingPoint;}, /**
	     * Retores original state of each of group objects (original state is that which was before group was created).
	     * @private
	     * @return {fabric.Group} thisArg
	     * @chainable
	     */_restoreObjectsState:function _restoreObjectsState(){this._objects.forEach(this._restoreObjectState,this);return this;}, /**
	     * Realises the transform from this group onto the supplied object
	     * i.e. it tells you what would happen if the supplied object was in
	     * the group, and then the group was destroyed. It mutates the supplied
	     * object.
	     * @param {fabric.Object} object
	     * @return {fabric.Object} transformedObject
	    */realizeTransform:function realizeTransform(object){this._moveFlippedObject(object);this._setObjectPosition(object);return object;}, /**
	     * Moves a flipped object to the position where it's displayed
	     * @private
	     * @param {fabric.Object} object
	     * @return {fabric.Group} thisArg
	     */_moveFlippedObject:function _moveFlippedObject(object){var oldOriginX=object.get('originX'),oldOriginY=object.get('originY'),center=object.getCenterPoint();object.set({originX:'center',originY:'center',left:center.x,top:center.y});this._toggleFlipping(object);var newOrigin=object.getPointByOrigin(oldOriginX,oldOriginY);object.set({originX:oldOriginX,originY:oldOriginY,left:newOrigin.x,top:newOrigin.y});return this;}, /**
	     * @private
	     */_toggleFlipping:function _toggleFlipping(object){if(this.flipX){object.toggle('flipX');object.set('left',-object.get('left'));object.setAngle(-object.getAngle());}if(this.flipY){object.toggle('flipY');object.set('top',-object.get('top'));object.setAngle(-object.getAngle());}}, /**
	     * Restores original state of a specified object in group
	     * @private
	     * @param {fabric.Object} object
	     * @return {fabric.Group} thisArg
	     */_restoreObjectState:function _restoreObjectState(object){this._setObjectPosition(object);object.setCoords();object.hasControls = object.__origHasControls;delete object.__origHasControls;object.set('active',false);object.setCoords();delete object.group;return this;}, /**
	     * @private
	     */_setObjectPosition:function _setObjectPosition(object){var center=this.getCenterPoint(),rotated=this._getRotatedLeftTop(object);object.set({angle:object.getAngle() + this.getAngle(),left:center.x + rotated.left,top:center.y + rotated.top,scaleX:object.get('scaleX') * this.get('scaleX'),scaleY:object.get('scaleY') * this.get('scaleY')});}, /**
	     * @private
	     */_getRotatedLeftTop:function _getRotatedLeftTop(object){var groupAngle=this.getAngle() * (Math.PI / 180);return {left:-Math.sin(groupAngle) * object.getTop() * this.get('scaleY') + Math.cos(groupAngle) * object.getLeft() * this.get('scaleX'),top:Math.cos(groupAngle) * object.getTop() * this.get('scaleY') + Math.sin(groupAngle) * object.getLeft() * this.get('scaleX')};}, /**
	     * Destroys a group (restoring state of its objects)
	     * @return {fabric.Group} thisArg
	     * @chainable
	     */destroy:function destroy(){this._objects.forEach(this._moveFlippedObject,this);return this._restoreObjectsState();}, /**
	     * Saves coordinates of this instance (to be used together with `hasMoved`)
	     * @saveCoords
	     * @return {fabric.Group} thisArg
	     * @chainable
	     */saveCoords:function saveCoords(){this._originalLeft = this.get('left');this._originalTop = this.get('top');return this;}, /**
	     * Checks whether this group was moved (since `saveCoords` was called last)
	     * @return {Boolean} true if an object was moved (since fabric.Group#saveCoords was called)
	     */hasMoved:function hasMoved(){return this._originalLeft !== this.get('left') || this._originalTop !== this.get('top');}, /**
	     * Sets coordinates of all group objects
	     * @return {fabric.Group} thisArg
	     * @chainable
	     */setObjectsCoords:function setObjectsCoords(){this.forEachObject(function(object){object.setCoords();});return this;}, /**
	     * @private
	     */_calcBounds:function _calcBounds(onlyWidthHeight){var aX=[],aY=[],o,prop,props=['tr','br','bl','tl'];for(var i=0,len=this._objects.length;i < len;++i) {o = this._objects[i];o.setCoords();for(var j=0;j < props.length;j++) {prop = props[j];aX.push(o.oCoords[prop].x);aY.push(o.oCoords[prop].y);}}this.set(this._getBounds(aX,aY,onlyWidthHeight));}, /**
	     * @private
	     */_getBounds:function _getBounds(aX,aY,onlyWidthHeight){var ivt=fabric.util.invertTransform(this.getViewportTransform()),minXY=fabric.util.transformPoint(new fabric.Point(min(aX),min(aY)),ivt),maxXY=fabric.util.transformPoint(new fabric.Point(max(aX),max(aY)),ivt),obj={width:maxXY.x - minXY.x || 0,height:maxXY.y - minXY.y || 0};if(!onlyWidthHeight){obj.left = minXY.x || 0;obj.top = minXY.y || 0;if(this.originX === 'center'){obj.left += obj.width / 2;}if(this.originX === 'right'){obj.left += obj.width;}if(this.originY === 'center'){obj.top += obj.height / 2;}if(this.originY === 'bottom'){obj.top += obj.height;}}return obj;}, /* _TO_SVG_START_ */ /**
	     * Returns svg representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var markup=[ //jscs:disable validateIndentation
	'<g ','transform="',this.getSvgTransform(),'">\n' //jscs:enable validateIndentation
	];for(var i=0,len=this._objects.length;i < len;i++) {markup.push(this._objects[i].toSVG(reviver));}markup.push('</g>\n');return reviver?reviver(markup.join('')):markup.join('');}, /* _TO_SVG_END_ */ /**
	     * Returns requested property
	     * @param {String} prop Property to get
	     * @return {Any}
	     */get:function get(prop){if(prop in _lockProperties){if(this[prop]){return this[prop];}else {for(var i=0,len=this._objects.length;i < len;i++) {if(this._objects[i][prop]){return true;}}return false;}}else {if(prop in this.delegatedProperties){return this._objects[0] && this._objects[0].get(prop);}return this[prop];}}}); /**
	   * Returns {@link fabric.Group} instance from an object representation
	   * @static
	   * @memberOf fabric.Group
	   * @param {Object} object Object to create a group from
	   * @param {Function} [callback] Callback to invoke when an group instance is created
	   * @return {fabric.Group} An instance of fabric.Group
	   */fabric.Group.fromObject = function(object,callback){fabric.util.enlivenObjects(object.objects,function(enlivenedObjects){delete object.objects;callback && callback(new fabric.Group(enlivenedObjects,object));});}; /**
	   * Indicates that instances of this type are async
	   * @static
	   * @memberOf fabric.Group
	   * @type Boolean
	   * @default
	   */fabric.Group.async = true;})( true?exports:undefined);(function(global){'use strict';var extend=fabric.util.object.extend;if(!global.fabric){global.fabric = {};}if(global.fabric.Image){fabric.warn('fabric.Image is already defined.');return;} /**
	   * Image class
	   * @class fabric.Image
	   * @extends fabric.Object
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1/#images}
	   * @see {@link fabric.Image#initialize} for constructor definition
	   */fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'image', /**
	     * crossOrigin value (one of "", "anonymous", "allow-credentials")
	     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes
	     * @type String
	     * @default
	     */crossOrigin:'', /**
	     * AlignX value, part of preserveAspectRatio (one of "none", "mid", "min", "max")
	     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute
	     * This parameter defines how the picture is aligned to its viewport when image element width differs from image width.
	     * @type String
	     * @default
	     */alignX:'none', /**
	     * AlignY value, part of preserveAspectRatio (one of "none", "mid", "min", "max")
	     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute
	     * This parameter defines how the picture is aligned to its viewport when image element height differs from image height.
	     * @type String
	     * @default
	     */alignY:'none', /**
	     * meetOrSlice value, part of preserveAspectRatio  (one of "meet", "slice").
	     * if meet the image is always fully visibile, if slice the viewport is always filled with image.
	     * @see http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute
	     * @type String
	     * @default
	     */meetOrSlice:'meet', /**
	     * private
	     * contains last value of scaleX to detect
	     * if the Image got resized after the last Render
	     * @type Number
	     */_lastScaleX:1, /**
	     * private
	     * contains last value of scaleY to detect
	     * if the Image got resized after the last Render
	     * @type Number
	     */_lastScaleY:1, /**
	     * Constructor
	     * @param {HTMLImageElement | String} element Image element
	     * @param {Object} [options] Options object
	     * @return {fabric.Image} thisArg
	     */initialize:function initialize(element,options){options || (options = {});this.filters = [];this.resizeFilters = [];this.callSuper('initialize',options);this._initElement(element,options);this._initConfig(options);if(options.filters){this.filters = options.filters;this.applyFilters();}}, /**
	     * Returns image element which this instance if based on
	     * @return {HTMLImageElement} Image element
	     */getElement:function getElement(){return this._element;}, /**
	     * Sets image element for this instance to a specified one.
	     * If filters defined they are applied to new image.
	     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.
	     * @param {HTMLImageElement} element
	     * @param {Function} [callback] Callback is invoked when all filters have been applied and new image is generated
	     * @param {Object} [options] Options object
	     * @return {fabric.Image} thisArg
	     * @chainable
	     */setElement:function setElement(element,callback,options){this._element = element;this._originalElement = element;this._initConfig(options);if(this.filters.length !== 0){this.applyFilters(callback);}else if(callback){callback();}return this;}, /**
	     * Sets crossOrigin value (on an instance and corresponding image element)
	     * @return {fabric.Image} thisArg
	     * @chainable
	     */setCrossOrigin:function setCrossOrigin(value){this.crossOrigin = value;this._element.crossOrigin = value;return this;}, /**
	     * Returns original size of an image
	     * @return {Object} Object with "width" and "height" properties
	     */getOriginalSize:function getOriginalSize(){var element=this.getElement();return {width:element.width,height:element.height};}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_stroke:function _stroke(ctx){ctx.save();this._setStrokeStyles(ctx);ctx.beginPath();ctx.strokeRect(-this.width / 2,-this.height / 2,this.width,this.height);ctx.closePath();ctx.restore();}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderDashedStroke:function _renderDashedStroke(ctx){var x=-this.width / 2,y=-this.height / 2,w=this.width,h=this.height;ctx.save();this._setStrokeStyles(ctx);ctx.beginPath();fabric.util.drawDashedLine(ctx,x,y,x + w,y,this.strokeDashArray);fabric.util.drawDashedLine(ctx,x + w,y,x + w,y + h,this.strokeDashArray);fabric.util.drawDashedLine(ctx,x + w,y + h,x,y + h,this.strokeDashArray);fabric.util.drawDashedLine(ctx,x,y + h,x,y,this.strokeDashArray);ctx.closePath();ctx.restore();}, /**
	     * Returns object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(propertiesToInclude){return extend(this.callSuper('toObject',propertiesToInclude),{src:this._originalElement.src || this._originalElement._src,filters:this.filters.map(function(filterObj){return filterObj && filterObj.toObject();}),crossOrigin:this.crossOrigin,alignX:this.alignX,alignY:this.alignY,meetOrSlice:this.meetOrSlice});}, /* _TO_SVG_START_ */ /**
	     * Returns SVG representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var markup=[],x=-this.width / 2,y=-this.height / 2,preserveAspectRatio='none';if(this.group && this.group.type === 'path-group'){x = this.left;y = this.top;}if(this.alignX !== 'none' && this.alignY !== 'none'){preserveAspectRatio = 'x' + this.alignX + 'Y' + this.alignY + ' ' + this.meetOrSlice;}markup.push('<g transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'">\n','<image xlink:href="',this.getSvgSrc(),'" x="',x,'" y="',y,'" style="',this.getSvgStyles(), // we're essentially moving origin of transformation from top/left corner to the center of the shape
	// by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left
	// so that object's center aligns with container's left/top
	'" width="',this.width,'" height="',this.height,'" preserveAspectRatio="',preserveAspectRatio,'"','></image>\n');if(this.stroke || this.strokeDashArray){var origFill=this.fill;this.fill = null;markup.push('<rect ','x="',x,'" y="',y,'" width="',this.width,'" height="',this.height,'" style="',this.getSvgStyles(),'"/>\n');this.fill = origFill;}markup.push('</g>\n');return reviver?reviver(markup.join('')):markup.join('');}, /* _TO_SVG_END_ */ /**
	     * Returns source of an image
	     * @return {String} Source of an image
	     */getSrc:function getSrc(){if(this.getElement()){return this.getElement().src || this.getElement()._src;}}, /**
	     * Sets source of an image
	     * @param {String} src Source string (URL)
	     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)
	     * @param {Object} [options] Options object
	     * @return {fabric.Image} thisArg
	     * @chainable
	     */setSrc:function setSrc(src,callback,options){fabric.util.loadImage(src,function(img){return this.setElement(img,callback,options);},this,options && options.crossOrigin);}, /**
	     * Returns string representation of an instance
	     * @return {String} String representation of an instance
	     */toString:function toString(){return '#<fabric.Image: { src: "' + this.getSrc() + '" }>';}, /**
	     * Returns a clone of an instance
	     * @param {Function} callback Callback is invoked with a clone as a first argument
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     */clone:function clone(callback,propertiesToInclude){this.constructor.fromObject(this.toObject(propertiesToInclude),callback);}, /**
	     * Applies filters assigned to this image (from "filters" array)
	     * @method applyFilters
	     * @param {Function} callback Callback is invoked when all filters have been applied and new image is generated
	     * @return {fabric.Image} thisArg
	     * @chainable
	     */applyFilters:function applyFilters(callback,filters,imgElement,forResizing){filters = filters || this.filters;imgElement = imgElement || this._originalElement;if(!imgElement){return;}var imgEl=imgElement,canvasEl=fabric.util.createCanvasElement(),replacement=fabric.util.createImage(),_this=this;canvasEl.width = imgEl.width;canvasEl.height = imgEl.height;canvasEl.getContext('2d').drawImage(imgEl,0,0,imgEl.width,imgEl.height);if(filters.length === 0){this._element = imgElement;callback && callback();return canvasEl;}filters.forEach(function(filter){filter && filter.applyTo(canvasEl,filter.scaleX || _this.scaleX,filter.scaleY || _this.scaleY);if(!forResizing && filter && filter.type === 'Resize'){_this.width *= filter.scaleX;_this.height *= filter.scaleY;}}); /** @ignore */replacement.width = canvasEl.width;replacement.height = canvasEl.height;if(fabric.isLikelyNode){replacement.src = canvasEl.toBuffer(undefined,fabric.Image.pngCompression); // onload doesn't fire in some node versions, so we invoke callback manually
	_this._element = replacement;!forResizing && (_this._filteredEl = replacement);callback && callback();}else {replacement.onload = function(){_this._element = replacement;!forResizing && (_this._filteredEl = replacement);callback && callback();replacement.onload = canvasEl = imgEl = null;};replacement.src = canvasEl.toDataURL('image/png');}return canvasEl;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_render:function _render(ctx,noTransform){var x,y,imageMargins=this._findMargins(),elementToDraw;x = noTransform?this.left:-this.width / 2;y = noTransform?this.top:-this.height / 2;if(this.meetOrSlice === 'slice'){ctx.beginPath();ctx.rect(x,y,this.width,this.height);ctx.clip();}if(this.isMoving === false && this.resizeFilters.length && this._needsResize()){this._lastScaleX = this.scaleX;this._lastScaleY = this.scaleY;elementToDraw = this.applyFilters(null,this.resizeFilters,this._filteredEl || this._originalElement,true);}else {elementToDraw = this._element;}elementToDraw && ctx.drawImage(elementToDraw,x + imageMargins.marginX,y + imageMargins.marginY,imageMargins.width,imageMargins.height);this._renderStroke(ctx);}, /**
	     * @private, needed to check if image needs resize
	     */_needsResize:function _needsResize(){return this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY;}, /**
	     * @private
	     */_findMargins:function _findMargins(){var width=this.width,height=this.height,scales,scale,marginX=0,marginY=0;if(this.alignX !== 'none' || this.alignY !== 'none'){scales = [this.width / this._element.width,this.height / this._element.height];scale = this.meetOrSlice === 'meet'?Math.min.apply(null,scales):Math.max.apply(null,scales);width = this._element.width * scale;height = this._element.height * scale;if(this.alignX === 'Mid'){marginX = (this.width - width) / 2;}if(this.alignX === 'Max'){marginX = this.width - width;}if(this.alignY === 'Mid'){marginY = (this.height - height) / 2;}if(this.alignY === 'Max'){marginY = this.height - height;}}return {width:width,height:height,marginX:marginX,marginY:marginY};}, /**
	     * @private
	     */_resetWidthHeight:function _resetWidthHeight(){var element=this.getElement();this.set('width',element.width);this.set('height',element.height);}, /**
	     * The Image class's initialization method. This method is automatically
	     * called by the constructor.
	     * @private
	     * @param {HTMLImageElement|String} element The element representing the image
	     */_initElement:function _initElement(element){this.setElement(fabric.util.getById(element));fabric.util.addClass(this.getElement(),fabric.Image.CSS_CANVAS);}, /**
	     * @private
	     * @param {Object} [options] Options object
	     */_initConfig:function _initConfig(options){options || (options = {});this.setOptions(options);this._setWidthHeight(options);if(this._element && this.crossOrigin){this._element.crossOrigin = this.crossOrigin;}}, /**
	     * @private
	     * @param {Object} object Object with filters property
	     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created
	     */_initFilters:function _initFilters(object,callback){if(object.filters && object.filters.length){fabric.util.enlivenObjects(object.filters,function(enlivenedObjects){callback && callback(enlivenedObjects);},'fabric.Image.filters');}else {callback && callback();}}, /**
	     * @private
	     * @param {Object} [options] Object with width/height properties
	     */_setWidthHeight:function _setWidthHeight(options){this.width = 'width' in options?options.width:this.getElement()?this.getElement().width || 0:0;this.height = 'height' in options?options.height:this.getElement()?this.getElement().height || 0:0;}, /**
	     * Returns complexity of an instance
	     * @return {Number} complexity of this instance
	     */complexity:function complexity(){return 1;}}); /**
	   * Default CSS class name for canvas
	   * @static
	   * @type String
	   * @default
	   */fabric.Image.CSS_CANVAS = 'canvas-img'; /**
	   * Alias for getSrc
	   * @static
	   */fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc; /**
	   * Creates an instance of fabric.Image from its object representation
	   * @static
	   * @param {Object} object Object to create an instance from
	   * @param {Function} [callback] Callback to invoke when an image instance is created
	   */fabric.Image.fromObject = function(object,callback){fabric.util.loadImage(object.src,function(img){fabric.Image.prototype._initFilters.call(object,object,function(filters){object.filters = filters || [];var instance=new fabric.Image(img,object);callback && callback(instance);});},null,object.crossOrigin);}; /**
	   * Creates an instance of fabric.Image from an URL string
	   * @static
	   * @param {String} url URL to create an image from
	   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)
	   * @param {Object} [imgOptions] Options object
	   */fabric.Image.fromURL = function(url,callback,imgOptions){fabric.util.loadImage(url,function(img){callback && callback(new fabric.Image(img,imgOptions));},null,imgOptions && imgOptions.crossOrigin);}; /* _FROM_SVG_START_ */ /**
	   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})
	   * @static
	   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}
	   */fabric.Image.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href'.split(' ')); /**
	   * Returns {@link fabric.Image} instance from an SVG element
	   * @static
	   * @param {SVGElement} element Element to parse
	   * @param {Function} callback Callback to execute when fabric.Image object is created
	   * @param {Object} [options] Options object
	   * @return {fabric.Image} Instance of fabric.Image
	   */fabric.Image.fromElement = function(element,callback,options){var parsedAttributes=fabric.parseAttributes(element,fabric.Image.ATTRIBUTE_NAMES),align='xMidYMid',meetOrSlice='meet',alignX,alignY,aspectRatioAttrs;if(parsedAttributes.preserveAspectRatio){aspectRatioAttrs = parsedAttributes.preserveAspectRatio.split(' ');}if(aspectRatioAttrs && aspectRatioAttrs.length){meetOrSlice = aspectRatioAttrs.pop();if(meetOrSlice !== 'meet' && meetOrSlice !== 'slice'){align = meetOrSlice;meetOrSlice = 'meet';}else if(aspectRatioAttrs.length){align = aspectRatioAttrs.pop();}} //divide align in alignX and alignY
	alignX = align !== 'none'?align.slice(1,4):'none';alignY = align !== 'none'?align.slice(5,8):'none';parsedAttributes.alignX = alignX;parsedAttributes.alignY = alignY;parsedAttributes.meetOrSlice = meetOrSlice;fabric.Image.fromURL(parsedAttributes['xlink:href'],callback,extend(options?fabric.util.object.clone(options):{},parsedAttributes));}; /* _FROM_SVG_END_ */ /**
	   * Indicates that instances of this type are async
	   * @static
	   * @type Boolean
	   * @default
	   */fabric.Image.async = true; /**
	   * Indicates compression level used when generating PNG under Node (in applyFilters). Any of 0-9
	   * @static
	   * @type Number
	   * @default
	   */fabric.Image.pngCompression = 1;})( true?exports:undefined);fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */{ /**
	   * @private
	   * @return {Number} angle value
	   */_getAngleValueForStraighten:function _getAngleValueForStraighten(){var angle=this.getAngle() % 360;if(angle > 0){return Math.round((angle - 1) / 90) * 90;}return Math.round(angle / 90) * 90;}, /**
	   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)
	   * @return {fabric.Object} thisArg
	   * @chainable
	   */straighten:function straighten(){this.setAngle(this._getAngleValueForStraighten());return this;}, /**
	   * Same as {@link fabric.Object.prototype.straighten} but with animation
	   * @param {Object} callbacks Object with callback functions
	   * @param {Function} [callbacks.onComplete] Invoked on completion
	   * @param {Function} [callbacks.onChange] Invoked on every step of animation
	   * @return {fabric.Object} thisArg
	   * @chainable
	   */fxStraighten:function fxStraighten(callbacks){callbacks = callbacks || {};var empty=function empty(){},_onComplete4=callbacks.onComplete || empty,_onChange4=callbacks.onChange || empty,_this=this;fabric.util.animate({startValue:this.get('angle'),endValue:this._getAngleValueForStraighten(),duration:this.FX_DURATION,onChange:function onChange(value){_this.setAngle(value);_onChange4();},onComplete:function onComplete(){_this.setCoords();_onComplete4();},onStart:function onStart(){_this.set('active',false);}});return this;}});fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */{ /**
	   * Straightens object, then rerenders canvas
	   * @param {fabric.Object} object Object to straighten
	   * @return {fabric.Canvas} thisArg
	   * @chainable
	   */straightenObject:function straightenObject(object){object.straighten();this.renderAll();return this;}, /**
	   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated
	   * @param {fabric.Object} object Object to straighten
	   * @return {fabric.Canvas} thisArg
	   * @chainable
	   */fxStraightenObject:function fxStraightenObject(object){object.fxStraighten({onChange:this.renderAll.bind(this)});return this;}}); /**
	 * @namespace fabric.Image.filters
	 * @memberOf fabric.Image
	 * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#image_filters}
	 * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	 */fabric.Image.filters = fabric.Image.filters || {}; /**
	 * Root filter class from which all filter classes inherit from
	 * @class fabric.Image.filters.BaseFilter
	 * @memberOf fabric.Image.filters
	 */fabric.Image.filters.BaseFilter = fabric.util.createClass( /** @lends fabric.Image.filters.BaseFilter.prototype */{ /**
	   * Filter type
	   * @param {String} type
	   * @default
	   */type:'BaseFilter', /**
	   * Constructor
	   * @param {Object} [options] Options object
	   */initialize:function initialize(options){if(options){this.setOptions(options);}}, /**
	   * Sets filter's properties from options
	   * @param {Object} [options] Options object
	   */setOptions:function setOptions(options){for(var prop in options) {this[prop] = options[prop];}}, /**
	   * Returns object representation of an instance
	   * @return {Object} Object representation of an instance
	   */toObject:function toObject(){return {type:this.type};}, /**
	   * Returns a JSON representation of an instance
	   * @return {Object} JSON
	   */toJSON:function toJSON(){ // delegate, not alias
	return this.toObject();}});(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend; /**
	   * Brightness filter class
	   * @class fabric.Image.filters.Brightness
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example
	   * var filter = new fabric.Image.filters.Brightness({
	   *   brightness: 200
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Brightness = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Brightness', /**
	     * Constructor
	     * @memberOf fabric.Image.filters.Brightness.prototype
	     * @param {Object} [options] Options object
	     * @param {Number} [options.brightness=0] Value to brighten the image up (0..255)
	     */initialize:function initialize(options){options = options || {};this.brightness = options.brightness || 0;}, /**
	     * Applies filter to canvas element
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,brightness=this.brightness;for(var i=0,len=data.length;i < len;i += 4) {data[i] += brightness;data[i + 1] += brightness;data[i + 2] += brightness;}context.putImageData(imageData,0,0);}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return extend(this.callSuper('toObject'),{brightness:this.brightness});}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness
	   */fabric.Image.filters.Brightness.fromObject = function(object){return new fabric.Image.filters.Brightness(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend; /**
	   * Adapted from <a href="http://www.html5rocks.com/en/tutorials/canvas/imagefilters/">html5rocks article</a>
	   * @class fabric.Image.filters.Convolute
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example <caption>Sharpen filter</caption>
	   * var filter = new fabric.Image.filters.Convolute({
	   *   matrix: [ 0, -1,  0,
	   *            -1,  5, -1,
	   *             0, -1,  0 ]
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   * @example <caption>Blur filter</caption>
	   * var filter = new fabric.Image.filters.Convolute({
	   *   matrix: [ 1/9, 1/9, 1/9,
	   *             1/9, 1/9, 1/9,
	   *             1/9, 1/9, 1/9 ]
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   * @example <caption>Emboss filter</caption>
	   * var filter = new fabric.Image.filters.Convolute({
	   *   matrix: [ 1,   1,  1,
	   *             1, 0.7, -1,
	   *            -1,  -1, -1 ]
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   * @example <caption>Emboss filter with opaqueness</caption>
	   * var filter = new fabric.Image.filters.Convolute({
	   *   opaque: true,
	   *   matrix: [ 1,   1,  1,
	   *             1, 0.7, -1,
	   *            -1,  -1, -1 ]
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Convolute = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Convolute', /**
	     * Constructor
	     * @memberOf fabric.Image.filters.Convolute.prototype
	     * @param {Object} [options] Options object
	     * @param {Boolean} [options.opaque=false] Opaque value (true/false)
	     * @param {Array} [options.matrix] Filter matrix
	     */initialize:function initialize(options){options = options || {};this.opaque = options.opaque;this.matrix = options.matrix || [0,0,0,0,1,0,0,0,0];var canvasEl=fabric.util.createCanvasElement();this.tmpCtx = canvasEl.getContext('2d');}, /**
	     * @private
	     */_createImageData:function _createImageData(w,h){return this.tmpCtx.createImageData(w,h);}, /**
	     * Applies filter to canvas element
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var weights=this.matrix,context=canvasEl.getContext('2d'),pixels=context.getImageData(0,0,canvasEl.width,canvasEl.height),side=Math.round(Math.sqrt(weights.length)),halfSide=Math.floor(side / 2),src=pixels.data,sw=pixels.width,sh=pixels.height, // pad output by the convolution matrix
	w=sw,h=sh,output=this._createImageData(w,h),dst=output.data, // go through the destination image pixels
	alphaFac=this.opaque?1:0;for(var y=0;y < h;y++) {for(var x=0;x < w;x++) {var sy=y,sx=x,dstOff=(y * w + x) * 4, // calculate the weighed sum of the source image pixels that
	// fall under the convolution matrix
	r=0,g=0,b=0,a=0;for(var cy=0;cy < side;cy++) {for(var cx=0;cx < side;cx++) {var scy=sy + cy - halfSide,scx=sx + cx - halfSide; /* jshint maxdepth:5 */if(scy < 0 || scy > sh || scx < 0 || scx > sw){continue;}var srcOff=(scy * sw + scx) * 4,wt=weights[cy * side + cx];r += src[srcOff] * wt;g += src[srcOff + 1] * wt;b += src[srcOff + 2] * wt;a += src[srcOff + 3] * wt;}}dst[dstOff] = r;dst[dstOff + 1] = g;dst[dstOff + 2] = b;dst[dstOff + 3] = a + alphaFac * (255 - a);}}context.putImageData(output,0,0);}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return extend(this.callSuper('toObject'),{opaque:this.opaque,matrix:this.matrix});}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute
	   */fabric.Image.filters.Convolute.fromObject = function(object){return new fabric.Image.filters.Convolute(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend; /**
	   * GradientTransparency filter class
	   * @class fabric.Image.filters.GradientTransparency
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link fabric.Image.filters.GradientTransparency#initialize} for constructor definition
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example
	   * var filter = new fabric.Image.filters.GradientTransparency({
	   *   threshold: 200
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.GradientTransparency = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.GradientTransparency.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'GradientTransparency', /**
	     * Constructor
	     * @memberOf fabric.Image.filters.GradientTransparency.prototype
	     * @param {Object} [options] Options object
	     * @param {Number} [options.threshold=100] Threshold value
	     */initialize:function initialize(options){options = options || {};this.threshold = options.threshold || 100;}, /**
	     * Applies filter to canvas element
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,threshold=this.threshold,total=data.length;for(var i=0,len=data.length;i < len;i += 4) {data[i + 3] = threshold + 255 * (total - i) / total;}context.putImageData(imageData,0,0);}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return extend(this.callSuper('toObject'),{threshold:this.threshold});}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Image.filters.GradientTransparency} Instance of fabric.Image.filters.GradientTransparency
	   */fabric.Image.filters.GradientTransparency.fromObject = function(object){return new fabric.Image.filters.GradientTransparency(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}); /**
	   * Grayscale image filter class
	   * @class fabric.Image.filters.Grayscale
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example
	   * var filter = new fabric.Image.filters.Grayscale();
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Grayscale = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Grayscale', /**
	     * Applies filter to canvas element
	     * @memberOf fabric.Image.filters.Grayscale.prototype
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,len=imageData.width * imageData.height * 4,index=0,average;while(index < len) {average = (data[index] + data[index + 1] + data[index + 2]) / 3;data[index] = average;data[index + 1] = average;data[index + 2] = average;index += 4;}context.putImageData(imageData,0,0);}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale
	   */fabric.Image.filters.Grayscale.fromObject = function(){return new fabric.Image.filters.Grayscale();};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}); /**
	   * Invert filter class
	   * @class fabric.Image.filters.Invert
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example
	   * var filter = new fabric.Image.filters.Invert();
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Invert = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Invert', /**
	     * Applies filter to canvas element
	     * @memberOf fabric.Image.filters.Invert.prototype
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,iLen=data.length,i;for(i = 0;i < iLen;i += 4) {data[i] = 255 - data[i];data[i + 1] = 255 - data[i + 1];data[i + 2] = 255 - data[i + 2];}context.putImageData(imageData,0,0);}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert
	   */fabric.Image.filters.Invert.fromObject = function(){return new fabric.Image.filters.Invert();};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend; /**
	   * Mask filter class
	   * See http://resources.aleph-1.com/mask/
	   * @class fabric.Image.filters.Mask
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link fabric.Image.filters.Mask#initialize} for constructor definition
	   */fabric.Image.filters.Mask = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Mask.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Mask', /**
	     * Constructor
	     * @memberOf fabric.Image.filters.Mask.prototype
	     * @param {Object} [options] Options object
	     * @param {fabric.Image} [options.mask] Mask image object
	     * @param {Number} [options.channel=0] Rgb channel (0, 1, 2 or 3)
	     */initialize:function initialize(options){options = options || {};this.mask = options.mask;this.channel = [0,1,2,3].indexOf(options.channel) > -1?options.channel:0;}, /**
	     * Applies filter to canvas element
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){if(!this.mask){return;}var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,maskEl=this.mask.getElement(),maskCanvasEl=fabric.util.createCanvasElement(),channel=this.channel,i,iLen=imageData.width * imageData.height * 4;maskCanvasEl.width = maskEl.width;maskCanvasEl.height = maskEl.height;maskCanvasEl.getContext('2d').drawImage(maskEl,0,0,maskEl.width,maskEl.height);var maskImageData=maskCanvasEl.getContext('2d').getImageData(0,0,maskEl.width,maskEl.height),maskData=maskImageData.data;for(i = 0;i < iLen;i += 4) {data[i + 3] = maskData[i + channel];}context.putImageData(imageData,0,0);}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return extend(this.callSuper('toObject'),{mask:this.mask.toObject(),channel:this.channel});}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @param {Object} object Object to create an instance from
	   * @param {Function} [callback] Callback to invoke when a mask filter instance is created
	   */fabric.Image.filters.Mask.fromObject = function(object,callback){fabric.util.loadImage(object.mask.src,function(img){object.mask = new fabric.Image(img,object.mask);callback && callback(new fabric.Image.filters.Mask(object));});}; /**
	   * Indicates that instances of this type are async
	   * @static
	   * @type Boolean
	   * @default
	   */fabric.Image.filters.Mask.async = true;})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend; /**
	   * Noise filter class
	   * @class fabric.Image.filters.Noise
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example
	   * var filter = new fabric.Image.filters.Noise({
	   *   noise: 700
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Noise = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Noise', /**
	     * Constructor
	     * @memberOf fabric.Image.filters.Noise.prototype
	     * @param {Object} [options] Options object
	     * @param {Number} [options.noise=0] Noise value
	     */initialize:function initialize(options){options = options || {};this.noise = options.noise || 0;}, /**
	     * Applies filter to canvas element
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,noise=this.noise,rand;for(var i=0,len=data.length;i < len;i += 4) {rand = (0.5 - Math.random()) * noise;data[i] += rand;data[i + 1] += rand;data[i + 2] += rand;}context.putImageData(imageData,0,0);}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return extend(this.callSuper('toObject'),{noise:this.noise});}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise
	   */fabric.Image.filters.Noise.fromObject = function(object){return new fabric.Image.filters.Noise(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend; /**
	   * Pixelate filter class
	   * @class fabric.Image.filters.Pixelate
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example
	   * var filter = new fabric.Image.filters.Pixelate({
	   *   blocksize: 8
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Pixelate = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Pixelate', /**
	     * Constructor
	     * @memberOf fabric.Image.filters.Pixelate.prototype
	     * @param {Object} [options] Options object
	     * @param {Number} [options.blocksize=4] Blocksize for pixelate
	     */initialize:function initialize(options){options = options || {};this.blocksize = options.blocksize || 4;}, /**
	     * Applies filter to canvas element
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,iLen=imageData.height,jLen=imageData.width,index,i,j,r,g,b,a;for(i = 0;i < iLen;i += this.blocksize) {for(j = 0;j < jLen;j += this.blocksize) {index = i * 4 * jLen + j * 4;r = data[index];g = data[index + 1];b = data[index + 2];a = data[index + 3]; /*
	           blocksize: 4

	           [1,x,x,x,1]
	           [x,x,x,x,1]
	           [x,x,x,x,1]
	           [x,x,x,x,1]
	           [1,1,1,1,1]
	           */for(var _i=i,_ilen=i + this.blocksize;_i < _ilen;_i++) {for(var _j=j,_jlen=j + this.blocksize;_j < _jlen;_j++) {index = _i * 4 * jLen + _j * 4;data[index] = r;data[index + 1] = g;data[index + 2] = b;data[index + 3] = a;}}}}context.putImageData(imageData,0,0);}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return extend(this.callSuper('toObject'),{blocksize:this.blocksize});}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate
	   */fabric.Image.filters.Pixelate.fromObject = function(object){return new fabric.Image.filters.Pixelate(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend; /**
	   * Remove white filter class
	   * @class fabric.Image.filters.RemoveWhite
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link fabric.Image.filters.RemoveWhite#initialize} for constructor definition
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example
	   * var filter = new fabric.Image.filters.RemoveWhite({
	   *   threshold: 40,
	   *   distance: 140
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.RemoveWhite = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.RemoveWhite.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'RemoveWhite', /**
	     * Constructor
	     * @memberOf fabric.Image.filters.RemoveWhite.prototype
	     * @param {Object} [options] Options object
	     * @param {Number} [options.threshold=30] Threshold value
	     * @param {Number} [options.distance=20] Distance value
	     */initialize:function initialize(options){options = options || {};this.threshold = options.threshold || 30;this.distance = options.distance || 20;}, /**
	     * Applies filter to canvas element
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,threshold=this.threshold,distance=this.distance,limit=255 - threshold,abs=Math.abs,r,g,b;for(var i=0,len=data.length;i < len;i += 4) {r = data[i];g = data[i + 1];b = data[i + 2];if(r > limit && g > limit && b > limit && abs(r - g) < distance && abs(r - b) < distance && abs(g - b) < distance){data[i + 3] = 1;}}context.putImageData(imageData,0,0);}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return extend(this.callSuper('toObject'),{threshold:this.threshold,distance:this.distance});}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Image.filters.RemoveWhite} Instance of fabric.Image.filters.RemoveWhite
	   */fabric.Image.filters.RemoveWhite.fromObject = function(object){return new fabric.Image.filters.RemoveWhite(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}); /**
	   * Sepia filter class
	   * @class fabric.Image.filters.Sepia
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example
	   * var filter = new fabric.Image.filters.Sepia();
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Sepia = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Sepia.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Sepia', /**
	     * Applies filter to canvas element
	     * @memberOf fabric.Image.filters.Sepia.prototype
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,iLen=data.length,i,avg;for(i = 0;i < iLen;i += 4) {avg = 0.3 * data[i] + 0.59 * data[i + 1] + 0.11 * data[i + 2];data[i] = avg + 100;data[i + 1] = avg + 50;data[i + 2] = avg + 255;}context.putImageData(imageData,0,0);}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @return {fabric.Image.filters.Sepia} Instance of fabric.Image.filters.Sepia
	   */fabric.Image.filters.Sepia.fromObject = function(){return new fabric.Image.filters.Sepia();};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}); /**
	   * Sepia2 filter class
	   * @class fabric.Image.filters.Sepia2
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example
	   * var filter = new fabric.Image.filters.Sepia2();
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Sepia2 = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Sepia2.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Sepia2', /**
	     * Applies filter to canvas element
	     * @memberOf fabric.Image.filters.Sepia.prototype
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,iLen=data.length,i,r,g,b;for(i = 0;i < iLen;i += 4) {r = data[i];g = data[i + 1];b = data[i + 2];data[i] = (r * 0.393 + g * 0.769 + b * 0.189) / 1.351;data[i + 1] = (r * 0.349 + g * 0.686 + b * 0.168) / 1.203;data[i + 2] = (r * 0.272 + g * 0.534 + b * 0.131) / 2.140;}context.putImageData(imageData,0,0);}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @return {fabric.Image.filters.Sepia2} Instance of fabric.Image.filters.Sepia2
	   */fabric.Image.filters.Sepia2.fromObject = function(){return new fabric.Image.filters.Sepia2();};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend; /**
	   * Tint filter class
	   * Adapted from <a href="https://github.com/mezzoblue/PaintbrushJS">https://github.com/mezzoblue/PaintbrushJS</a>
	   * @class fabric.Image.filters.Tint
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link fabric.Image.filters.Tint#initialize} for constructor definition
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example <caption>Tint filter with hex color and opacity</caption>
	   * var filter = new fabric.Image.filters.Tint({
	   *   color: '#3513B0',
	   *   opacity: 0.5
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   * @example <caption>Tint filter with rgba color</caption>
	   * var filter = new fabric.Image.filters.Tint({
	   *   color: 'rgba(53, 21, 176, 0.5)'
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Tint = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Tint.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Tint', /**
	     * Constructor
	     * @memberOf fabric.Image.filters.Tint.prototype
	     * @param {Object} [options] Options object
	     * @param {String} [options.color=#000000] Color to tint the image with
	     * @param {Number} [options.opacity] Opacity value that controls the tint effect's transparency (0..1)
	     */initialize:function initialize(options){options = options || {};this.color = options.color || '#000000';this.opacity = typeof options.opacity !== 'undefined'?options.opacity:new fabric.Color(this.color).getAlpha();}, /**
	     * Applies filter to canvas element
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,iLen=data.length,i,tintR,tintG,tintB,r,g,b,alpha1,source;source = new fabric.Color(this.color).getSource();tintR = source[0] * this.opacity;tintG = source[1] * this.opacity;tintB = source[2] * this.opacity;alpha1 = 1 - this.opacity;for(i = 0;i < iLen;i += 4) {r = data[i];g = data[i + 1];b = data[i + 2]; // alpha compositing
	data[i] = tintR + r * alpha1;data[i + 1] = tintG + g * alpha1;data[i + 2] = tintB + b * alpha1;}context.putImageData(imageData,0,0);}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return extend(this.callSuper('toObject'),{color:this.color,opacity:this.opacity});}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Image.filters.Tint} Instance of fabric.Image.filters.Tint
	   */fabric.Image.filters.Tint.fromObject = function(object){return new fabric.Image.filters.Tint(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend; /**
	   * Multiply filter class
	   * Adapted from <a href="http://www.laurenscorijn.com/articles/colormath-basics">http://www.laurenscorijn.com/articles/colormath-basics</a>
	   * @class fabric.Image.filters.Multiply
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @example <caption>Multiply filter with hex color</caption>
	   * var filter = new fabric.Image.filters.Multiply({
	   *   color: '#F0F'
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   * @example <caption>Multiply filter with rgb color</caption>
	   * var filter = new fabric.Image.filters.Multiply({
	   *   color: 'rgb(53, 21, 176)'
	   * });
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Multiply = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Multiply.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Multiply', /**
	     * Constructor
	     * @memberOf fabric.Image.filters.Multiply.prototype
	     * @param {Object} [options] Options object
	     * @param {String} [options.color=#000000] Color to multiply the image pixels with
	     */initialize:function initialize(options){options = options || {};this.color = options.color || '#000000';}, /**
	     * Applies filter to canvas element
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,iLen=data.length,i,source;source = new fabric.Color(this.color).getSource();for(i = 0;i < iLen;i += 4) {data[i] *= source[0] / 255;data[i + 1] *= source[1] / 255;data[i + 2] *= source[2] / 255;}context.putImageData(imageData,0,0);}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return extend(this.callSuper('toObject'),{color:this.color});}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Image.filters.Multiply} Instance of fabric.Image.filters.Multiply
	   */fabric.Image.filters.Multiply.fromObject = function(object){return new fabric.Image.filters.Multiply(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric; /**
	   * Color Blend filter class
	   * @class fabric.Image.filter.Blend
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @example
	   * var filter = new fabric.Image.filters.Blend({
	   *  color: '#000',
	   *  mode: 'multiply'
	   * });
	   *
	   * var filter = new fabric.Image.filters.Blend({
	   *  image: fabricImageObject,
	   *  mode: 'multiply',
	   *  alpha: 0.5
	   * });

	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Blend = fabric.util.createClass({type:'Blend',initialize:function initialize(options){options = options || {};this.color = options.color || '#000';this.image = options.image || false;this.mode = options.mode || 'multiply';this.alpha = options.alpha || 1;},applyTo:function applyTo(canvasEl){var context=canvasEl.getContext('2d'),imageData=context.getImageData(0,0,canvasEl.width,canvasEl.height),data=imageData.data,tr,tg,tb,r,g,b,_r,_g,_b,source,isImage=false;if(this.image){ // Blend images
	isImage = true;var _el=fabric.util.createCanvasElement();_el.width = this.image.width;_el.height = this.image.height;var tmpCanvas=new fabric.StaticCanvas(_el);tmpCanvas.add(this.image);var context2=tmpCanvas.getContext('2d');source = context2.getImageData(0,0,tmpCanvas.width,tmpCanvas.height).data;}else { // Blend color
	source = new fabric.Color(this.color).getSource();tr = source[0] * this.alpha;tg = source[1] * this.alpha;tb = source[2] * this.alpha;}for(var i=0,len=data.length;i < len;i += 4) {r = data[i];g = data[i + 1];b = data[i + 2];if(isImage){tr = source[i] * this.alpha;tg = source[i + 1] * this.alpha;tb = source[i + 2] * this.alpha;}switch(this.mode){case 'multiply':data[i] = r * tr / 255;data[i + 1] = g * tg / 255;data[i + 2] = b * tb / 255;break;case 'screen':data[i] = 1 - (1 - r) * (1 - tr);data[i + 1] = 1 - (1 - g) * (1 - tg);data[i + 2] = 1 - (1 - b) * (1 - tb);break;case 'add':data[i] = Math.min(255,r + tr);data[i + 1] = Math.min(255,g + tg);data[i + 2] = Math.min(255,b + tb);break;case 'diff':case 'difference':data[i] = Math.abs(r - tr);data[i + 1] = Math.abs(g - tg);data[i + 2] = Math.abs(b - tb);break;case 'subtract':_r = r - tr;_g = g - tg;_b = b - tb;data[i] = _r < 0?0:_r;data[i + 1] = _g < 0?0:_g;data[i + 2] = _b < 0?0:_b;break;case 'darken':data[i] = Math.min(r,tr);data[i + 1] = Math.min(g,tg);data[i + 2] = Math.min(b,tb);break;case 'lighten':data[i] = Math.max(r,tr);data[i + 1] = Math.max(g,tg);data[i + 2] = Math.max(b,tb);break;}}context.putImageData(imageData,0,0);}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return {color:this.color,image:this.image,mode:this.mode,alpha:this.alpha};}});fabric.Image.filters.Blend.fromObject = function(object){return new fabric.Image.filters.Blend(object);};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),pow=Math.pow,floor=Math.floor,sqrt=Math.sqrt,abs=Math.abs,max=Math.max,round=Math.round,sin=Math.sin,ceil=Math.ceil; /**
	   * Resize image filter class
	   * @class fabric.Image.filters.Resize
	   * @memberOf fabric.Image.filters
	   * @extends fabric.Image.filters.BaseFilter
	   * @see {@link http://fabricjs.com/image-filters/|ImageFilters demo}
	   * @example
	   * var filter = new fabric.Image.filters.Resize();
	   * object.filters.push(filter);
	   * object.applyFilters(canvas.renderAll.bind(canvas));
	   */fabric.Image.filters.Resize = fabric.util.createClass(fabric.Image.filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */{ /**
	     * Filter type
	     * @param {String} type
	     * @default
	     */type:'Resize', /**
	     * Resize type
	     * @param {String} resizeType
	     * @default
	     */resizeType:'hermite', /**
	     * Scale factor for resizing, x axis
	     * @param {Number} scaleX
	     * @default
	     */scaleX:0, /**
	     * Scale factor for resizing, y axis
	     * @param {Number} scaleY
	     * @default
	     */scaleY:0, /**
	     * LanczosLobes parameter for lanczos filter
	     * @param {Number} lanczosLobes
	     * @default
	     */lanczosLobes:3, /**
	     * Applies filter to canvas element
	     * @memberOf fabric.Image.filters.Resize.prototype
	     * @param {Object} canvasEl Canvas element to apply filter to
	     */applyTo:function applyTo(canvasEl,scaleX,scaleY){this.rcpScaleX = 1 / scaleX;this.rcpScaleY = 1 / scaleY;var oW=canvasEl.width,oH=canvasEl.height,dW=round(oW * scaleX),dH=round(oH * scaleY),imageData;if(this.resizeType === 'sliceHack'){imageData = this.sliceByTwo(canvasEl,oW,oH,dW,dH);}if(this.resizeType === 'hermite'){imageData = this.hermiteFastResize(canvasEl,oW,oH,dW,dH);}if(this.resizeType === 'bilinear'){imageData = this.bilinearFiltering(canvasEl,oW,oH,dW,dH);}if(this.resizeType === 'lanczos'){imageData = this.lanczosResize(canvasEl,oW,oH,dW,dH);}canvasEl.width = dW;canvasEl.height = dH;canvasEl.getContext('2d').putImageData(imageData,0,0);},sliceByTwo:function sliceByTwo(canvasEl,width,height,newWidth,newHeight){var context=canvasEl.getContext('2d'),imageData,multW=0.5,multH=0.5,signW=1,signH=1,doneW=false,doneH=false,stepW=width,stepH=height,tmpCanvas=fabric.util.createCanvasElement(),tmpCtx=tmpCanvas.getContext('2d');newWidth = floor(newWidth);newHeight = floor(newHeight);tmpCanvas.width = max(newWidth,width);tmpCanvas.height = max(newHeight,height);if(newWidth > width){multW = 2;signW = -1;}if(newHeight > height){multH = 2;signH = -1;}imageData = context.getImageData(0,0,width,height);canvasEl.width = max(newWidth,width);canvasEl.height = max(newHeight,height);context.putImageData(imageData,0,0);while(!doneW || !doneH) {width = stepW;height = stepH;if(newWidth * signW < floor(stepW * multW * signW)){stepW = floor(stepW * multW);}else {stepW = newWidth;doneW = true;}if(newHeight * signH < floor(stepH * multH * signH)){stepH = floor(stepH * multH);}else {stepH = newHeight;doneH = true;}imageData = context.getImageData(0,0,width,height);tmpCtx.putImageData(imageData,0,0);context.clearRect(0,0,stepW,stepH);context.drawImage(tmpCanvas,0,0,width,height,0,0,stepW,stepH);}return context.getImageData(0,0,newWidth,newHeight);},lanczosResize:function lanczosResize(canvasEl,oW,oH,dW,dH){function lanczosCreate(lobes){return function(x){if(x > lobes){return 0;}x *= Math.PI;if(abs(x) < 1e-16){return 1;}var xx=x / lobes;return sin(x) * sin(xx) / x / xx;};}function process(_x){var _again=true;_function: while(_again) {var u=_x;v = i = weight = idx = a = red = green = blue = alpha = fX = fY = j = undefined;_again = false;var v,i,weight,idx,a,red,green,blue,alpha,fX,fY;center.x = (u + 0.5) * ratioX;icenter.x = floor(center.x);for(v = 0;v < dH;v++) {center.y = (v + 0.5) * ratioY;icenter.y = floor(center.y);a = 0,red = 0,green = 0,blue = 0,alpha = 0;for(i = icenter.x - range2X;i <= icenter.x + range2X;i++) {if(i < 0 || i >= oW){continue;}fX = floor(1000 * abs(i - center.x));if(!cacheLanc[fX]){cacheLanc[fX] = {};}for(var j=icenter.y - range2Y;j <= icenter.y + range2Y;j++) {if(j < 0 || j >= oH){continue;}fY = floor(1000 * abs(j - center.y));if(!cacheLanc[fX][fY]){cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX,2) + pow(fY * rcpRatioY,2)) / 1000);}weight = cacheLanc[fX][fY];if(weight > 0){idx = (j * oW + i) * 4;a += weight;red += weight * srcData[idx];green += weight * srcData[idx + 1];blue += weight * srcData[idx + 2];alpha += weight * srcData[idx + 3];}}}idx = (v * dW + u) * 4;destData[idx] = red / a;destData[idx + 1] = green / a;destData[idx + 2] = blue / a;destData[idx + 3] = alpha / a;}if(++u < dW){_x = u;_again = true;continue _function;}else {return destImg;}}}var context=canvasEl.getContext('2d'),srcImg=context.getImageData(0,0,oW,oH),destImg=context.getImageData(0,0,dW,dH),srcData=srcImg.data,destData=destImg.data,lanczos=lanczosCreate(this.lanczosLobes),ratioX=this.rcpScaleX,ratioY=this.rcpScaleY,rcpRatioX=2 / this.rcpScaleX,rcpRatioY=2 / this.rcpScaleY,range2X=ceil(ratioX * this.lanczosLobes / 2),range2Y=ceil(ratioY * this.lanczosLobes / 2),cacheLanc={},center={},icenter={};return process(0);},bilinearFiltering:function bilinearFiltering(canvasEl,w,h,w2,h2){var a,b,c,d,x,y,i,j,xDiff,yDiff,chnl,color,offset=0,origPix,ratioX=this.rcpScaleX,ratioY=this.rcpScaleY,context=canvasEl.getContext('2d'),w4=4 * (w - 1),img=context.getImageData(0,0,w,h),pixels=img.data,destImage=context.getImageData(0,0,w2,h2),destPixels=destImage.data;for(i = 0;i < h2;i++) {for(j = 0;j < w2;j++) {x = floor(ratioX * j);y = floor(ratioY * i);xDiff = ratioX * j - x;yDiff = ratioY * i - y;origPix = 4 * (y * w + x);for(chnl = 0;chnl < 4;chnl++) {a = pixels[origPix + chnl];b = pixels[origPix + 4 + chnl];c = pixels[origPix + w4 + chnl];d = pixels[origPix + w4 + 4 + chnl];color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) + c * yDiff * (1 - xDiff) + d * xDiff * yDiff;destPixels[offset++] = color;}}}return destImage;},hermiteFastResize:function hermiteFastResize(canvasEl,oW,oH,dW,dH){var ratioW=this.rcpScaleX,ratioH=this.rcpScaleY,ratioWHalf=ceil(ratioW / 2),ratioHHalf=ceil(ratioH / 2),context=canvasEl.getContext('2d'),img=context.getImageData(0,0,oW,oH),data=img.data,img2=context.getImageData(0,0,dW,dH),data2=img2.data;for(var j=0;j < dH;j++) {for(var i=0;i < dW;i++) {var x2=(i + j * dW) * 4,weight=0,weights=0,weightsAlpha=0,gxR=0,gxG=0,gxB=0,gxA=0,centerY=(j + 0.5) * ratioH;for(var yy=floor(j * ratioH);yy < (j + 1) * ratioH;yy++) {var dy=abs(centerY - (yy + 0.5)) / ratioHHalf,centerX=(i + 0.5) * ratioW,w0=dy * dy;for(var xx=floor(i * ratioW);xx < (i + 1) * ratioW;xx++) {var dx=abs(centerX - (xx + 0.5)) / ratioWHalf,w=sqrt(w0 + dx * dx); /*jshint maxdepth:5 */if(w > 1 && w < -1){continue;} //hermite filter
	weight = 2 * w * w * w - 3 * w * w + 1;if(weight > 0){dx = 4 * (xx + yy * oW); //alpha
	gxA += weight * data[dx + 3];weightsAlpha += weight; //colors
	/*jshint maxdepth:6 */if(data[dx + 3] < 255){weight = weight * data[dx + 3] / 250;} /*jshint maxdepth:5 */gxR += weight * data[dx];gxG += weight * data[dx + 1];gxB += weight * data[dx + 2];weights += weight;} /*jshint maxdepth:4 */}}data2[x2] = gxR / weights;data2[x2 + 1] = gxG / weights;data2[x2 + 2] = gxB / weights;data2[x2 + 3] = gxA / weightsAlpha;}}return img2;}, /**
	     * Returns object representation of an instance
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(){return {type:this.type,scaleX:this.scaleX,scaley:this.scaleY,resizeType:this.resizeType,lanczosLobes:this.lanczosLobes};}}); /**
	   * Returns filter instance from an object representation
	   * @static
	   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize
	   */fabric.Image.filters.Resize.fromObject = function(){return new fabric.Image.filters.Resize();};})( true?exports:undefined);(function(global){'use strict';var fabric=global.fabric || (global.fabric = {}),extend=fabric.util.object.extend,clone=fabric.util.object.clone,toFixed=fabric.util.toFixed,supportsLineDash=fabric.StaticCanvas.supports('setLineDash');if(fabric.Text){fabric.warn('fabric.Text is already defined');return;}var stateProperties=fabric.Object.prototype.stateProperties.concat();stateProperties.push('fontFamily','fontWeight','fontSize','text','textDecoration','textAlign','fontStyle','lineHeight','textBackgroundColor'); /**
	   * Text class
	   * @class fabric.Text
	   * @extends fabric.Object
	   * @return {fabric.Text} thisArg
	   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#text}
	   * @see {@link fabric.Text#initialize} for constructor definition
	   */fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */{ /**
	     * Properties which when set cause object to change dimensions
	     * @type Object
	     * @private
	     */_dimensionAffectingProps:{fontSize:true,fontWeight:true,fontFamily:true,fontStyle:true,lineHeight:true,stroke:true,strokeWidth:true,text:true,textAlign:true}, /**
	     * @private
	     */_reNewline:/\r?\n/, /**
	     * Retrieves object's fontSize
	     * @method getFontSize
	     * @memberOf fabric.Text.prototype
	     * @return {String} Font size (in pixels)
	     */ /**
	     * Sets object's fontSize
	     * @method setFontSize
	     * @memberOf fabric.Text.prototype
	     * @param {Number} fontSize Font size (in pixels)
	     * @return {fabric.Text}
	     * @chainable
	     */ /**
	     * Retrieves object's fontWeight
	     * @method getFontWeight
	     * @memberOf fabric.Text.prototype
	     * @return {(String|Number)} Font weight
	     */ /**
	     * Sets object's fontWeight
	     * @method setFontWeight
	     * @memberOf fabric.Text.prototype
	     * @param {(Number|String)} fontWeight Font weight
	     * @return {fabric.Text}
	     * @chainable
	     */ /**
	     * Retrieves object's fontFamily
	     * @method getFontFamily
	     * @memberOf fabric.Text.prototype
	     * @return {String} Font family
	     */ /**
	     * Sets object's fontFamily
	     * @method setFontFamily
	     * @memberOf fabric.Text.prototype
	     * @param {String} fontFamily Font family
	     * @return {fabric.Text}
	     * @chainable
	     */ /**
	     * Retrieves object's text
	     * @method getText
	     * @memberOf fabric.Text.prototype
	     * @return {String} text
	     */ /**
	     * Sets object's text
	     * @method setText
	     * @memberOf fabric.Text.prototype
	     * @param {String} text Text
	     * @return {fabric.Text}
	     * @chainable
	     */ /**
	     * Retrieves object's textDecoration
	     * @method getTextDecoration
	     * @memberOf fabric.Text.prototype
	     * @return {String} Text decoration
	     */ /**
	     * Sets object's textDecoration
	     * @method setTextDecoration
	     * @memberOf fabric.Text.prototype
	     * @param {String} textDecoration Text decoration
	     * @return {fabric.Text}
	     * @chainable
	     */ /**
	     * Retrieves object's fontStyle
	     * @method getFontStyle
	     * @memberOf fabric.Text.prototype
	     * @return {String} Font style
	     */ /**
	     * Sets object's fontStyle
	     * @method setFontStyle
	     * @memberOf fabric.Text.prototype
	     * @param {String} fontStyle Font style
	     * @return {fabric.Text}
	     * @chainable
	     */ /**
	     * Retrieves object's lineHeight
	     * @method getLineHeight
	     * @memberOf fabric.Text.prototype
	     * @return {Number} Line height
	     */ /**
	     * Sets object's lineHeight
	     * @method setLineHeight
	     * @memberOf fabric.Text.prototype
	     * @param {Number} lineHeight Line height
	     * @return {fabric.Text}
	     * @chainable
	     */ /**
	     * Retrieves object's textAlign
	     * @method getTextAlign
	     * @memberOf fabric.Text.prototype
	     * @return {String} Text alignment
	     */ /**
	     * Sets object's textAlign
	     * @method setTextAlign
	     * @memberOf fabric.Text.prototype
	     * @param {String} textAlign Text alignment
	     * @return {fabric.Text}
	     * @chainable
	     */ /**
	     * Retrieves object's textBackgroundColor
	     * @method getTextBackgroundColor
	     * @memberOf fabric.Text.prototype
	     * @return {String} Text background color
	     */ /**
	     * Sets object's textBackgroundColor
	     * @method setTextBackgroundColor
	     * @memberOf fabric.Text.prototype
	     * @param {String} textBackgroundColor Text background color
	     * @return {fabric.Text}
	     * @chainable
	     */ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'text', /**
	     * Font size (in pixels)
	     * @type Number
	     * @default
	     */fontSize:40, /**
	     * Font weight (e.g. bold, normal, 400, 600, 800)
	     * @type {(Number|String)}
	     * @default
	     */fontWeight:'normal', /**
	     * Font family
	     * @type String
	     * @default
	     */fontFamily:'Times New Roman', /**
	     * Text decoration Possible values: "", "underline", "overline" or "line-through".
	     * @type String
	     * @default
	     */textDecoration:'', /**
	     * Text alignment. Possible values: "left", "center", or "right".
	     * @type String
	     * @default
	     */textAlign:'left', /**
	     * Font style . Possible values: "", "normal", "italic" or "oblique".
	     * @type String
	     * @default
	     */fontStyle:'', /**
	     * Line height
	     * @type Number
	     * @default
	     */lineHeight:1.16, /**
	     * Background color of text lines
	     * @type String
	     * @default
	     */textBackgroundColor:'', /**
	     * List of properties to consider when checking if
	     * state of an object is changed ({@link fabric.Object#hasStateChanged})
	     * as well as for history (undo/redo) purposes
	     * @type Array
	     */stateProperties:stateProperties, /**
	     * When defined, an object is rendered via stroke and this property specifies its color.
	     * <b>Backwards incompatibility note:</b> This property was named "strokeStyle" until v1.1.6
	     * @type String
	     * @default
	     */stroke:null, /**
	     * Shadow object representing shadow of this shape.
	     * <b>Backwards incompatibility note:</b> This property was named "textShadow" (String) until v1.2.11
	     * @type fabric.Shadow
	     * @default
	     */shadow:null, /**
	     * @private
	     */_fontSizeFraction:0.25, /**
	     * Text Line proportion to font Size (in pixels)
	     * @type Number
	     * @default
	     */_fontSizeMult:1.13, /**
	     * Constructor
	     * @param {String} text Text string
	     * @param {Object} [options] Options object
	     * @return {fabric.Text} thisArg
	     */initialize:function initialize(text,options){options = options || {};this.text = text;this.__skipDimension = true;this.setOptions(options);this.__skipDimension = false;this._initDimensions();}, /**
	     * Renders text object on offscreen canvas, so that it would get dimensions
	     * @private
	     */_initDimensions:function _initDimensions(ctx){if(this.__skipDimension){return;}if(!ctx){ctx = fabric.util.createCanvasElement().getContext('2d');this._setTextStyles(ctx);}this._textLines = this.text.split(this._reNewline);this._clearCache();var currentTextAlign=this.textAlign;this.textAlign = 'left';this.width = this._getTextWidth(ctx);this.textAlign = currentTextAlign;this.height = this._getTextHeight(ctx);}, /**
	     * Returns string representation of an instance
	     * @return {String} String representation of text object
	     */toString:function toString(){return '#<fabric.Text (' + this.complexity() + '): { "text": "' + this.text + '", "fontFamily": "' + this.fontFamily + '" }>';}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_render:function _render(ctx){this.clipTo && fabric.util.clipContext(this,ctx);this._renderTextBackground(ctx);this._renderText(ctx);this._renderTextDecoration(ctx);this.clipTo && ctx.restore();}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderText:function _renderText(ctx){ctx.save();this._translateForTextAlign(ctx);this._setOpacity(ctx);this._setShadow(ctx);this._setupCompositeOperation(ctx);this._renderTextFill(ctx);this._renderTextStroke(ctx);this._restoreCompositeOperation(ctx);this._removeShadow(ctx);ctx.restore();}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_translateForTextAlign:function _translateForTextAlign(ctx){if(this.textAlign !== 'left' && this.textAlign !== 'justify'){ctx.translate(this.textAlign === 'center'?this.width / 2:this.width,0);}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_setTextStyles:function _setTextStyles(ctx){ctx.textBaseline = 'alphabetic';if(!this.skipTextAlign){ctx.textAlign = this.textAlign;}ctx.font = this._getFontDeclaration();}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @return {Number} Height of fabric.Text object
	     */_getTextHeight:function _getTextHeight(){return this._textLines.length * this._getHeightOfLine();}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @return {Number} Maximum width of fabric.Text object
	     */_getTextWidth:function _getTextWidth(ctx){var maxWidth=this._getLineWidth(ctx,0);for(var i=1,len=this._textLines.length;i < len;i++) {var currentLineWidth=this._getLineWidth(ctx,i);if(currentLineWidth > maxWidth){maxWidth = currentLineWidth;}}return maxWidth;}, /**
	     * @private
	     * @param {String} method Method name ("fillText" or "strokeText")
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {String} chars Chars to render
	     * @param {Number} left Left position of text
	     * @param {Number} top Top position of text
	     */_renderChars:function _renderChars(method,ctx,chars,left,top){ctx[method](chars,left,top);}, /**
	     * @private
	     * @param {String} method Method name ("fillText" or "strokeText")
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {String} line Text to render
	     * @param {Number} left Left position of text
	     * @param {Number} top Top position of text
	     * @param {Number} lineIndex Index of a line in a text
	     */_renderTextLine:function _renderTextLine(method,ctx,line,left,top,lineIndex){ // lift the line by quarter of fontSize
	top -= this.fontSize * this._fontSizeFraction; // short-circuit
	if(this.textAlign !== 'justify'){this._renderChars(method,ctx,line,left,top,lineIndex);return;}var lineWidth=this._getLineWidth(ctx,lineIndex),totalWidth=this.width;if(totalWidth >= lineWidth){ // stretch the line
	var words=line.split(/\s+/),wordsWidth=this._getWidthOfWords(ctx,line,lineIndex),widthDiff=totalWidth - wordsWidth,numSpaces=words.length - 1,spaceWidth=widthDiff / numSpaces,leftOffset=0;for(var i=0,len=words.length;i < len;i++) {this._renderChars(method,ctx,words[i],left + leftOffset,top,lineIndex);leftOffset += ctx.measureText(words[i]).width + spaceWidth;}}else {this._renderChars(method,ctx,line,left,top,lineIndex);}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {Number} line
	     */_getWidthOfWords:function _getWidthOfWords(ctx,line){return ctx.measureText(line.replace(/\s+/g,'')).width;}, /**
	     * @private
	     * @return {Number} Left offset
	     */_getLeftOffset:function _getLeftOffset(){return -this.width / 2;}, /**
	     * @private
	     * @return {Number} Top offset
	     */_getTopOffset:function _getTopOffset(){return -this.height / 2;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderTextFill:function _renderTextFill(ctx){if(!this.fill && !this._skipFillStrokeCheck){return;}var lineHeights=0;for(var i=0,len=this._textLines.length;i < len;i++) {var heightOfLine=this._getHeightOfLine(ctx,i),maxHeight=heightOfLine / this.lineHeight;this._renderTextLine('fillText',ctx,this._textLines[i],this._getLeftOffset(),this._getTopOffset() + lineHeights + maxHeight,i);lineHeights += heightOfLine;}if(this.shadow && !this.shadow.affectStroke){this._removeShadow(ctx);}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderTextStroke:function _renderTextStroke(ctx){if((!this.stroke || this.strokeWidth === 0) && !this._skipFillStrokeCheck){return;}var lineHeights=0;ctx.save();if(this.strokeDashArray){ // Spec requires the concatenation of two copies the dash list when the number of elements is odd
	if(1 & this.strokeDashArray.length){this.strokeDashArray.push.apply(this.strokeDashArray,this.strokeDashArray);}supportsLineDash && ctx.setLineDash(this.strokeDashArray);}ctx.beginPath();for(var i=0,len=this._textLines.length;i < len;i++) {var heightOfLine=this._getHeightOfLine(ctx,i),maxHeight=heightOfLine / this.lineHeight;this._renderTextLine('strokeText',ctx,this._textLines[i],this._getLeftOffset(),this._getTopOffset() + lineHeights + maxHeight,i);lineHeights += heightOfLine;}ctx.closePath();ctx.restore();},_getHeightOfLine:function _getHeightOfLine(){return this.fontSize * this._fontSizeMult * this.lineHeight;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {Array} textLines Array of all text lines
	     */_renderTextBackground:function _renderTextBackground(ctx){this._renderTextBoxBackground(ctx);this._renderTextLinesBackground(ctx);}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderTextBoxBackground:function _renderTextBoxBackground(ctx){if(!this.backgroundColor){return;}ctx.save();ctx.fillStyle = this.backgroundColor;ctx.fillRect(this._getLeftOffset(),this._getTopOffset(),this.width,this.height);ctx.restore();}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderTextLinesBackground:function _renderTextLinesBackground(ctx){var lineTopOffset=0,heightOfLine=this._getHeightOfLine();if(!this.textBackgroundColor){return;}ctx.save();ctx.fillStyle = this.textBackgroundColor;for(var i=0,len=this._textLines.length;i < len;i++) {if(this._textLines[i] !== ''){var lineWidth=this._getLineWidth(ctx,i),lineLeftOffset=this._getLineLeftOffset(lineWidth);ctx.fillRect(this._getLeftOffset() + lineLeftOffset,this._getTopOffset() + lineTopOffset,lineWidth,this.fontSize * this._fontSizeMult);}lineTopOffset += heightOfLine;}ctx.restore();}, /**
	     * @private
	     * @param {Number} lineWidth Width of text line
	     * @return {Number} Line left offset
	     */_getLineLeftOffset:function _getLineLeftOffset(lineWidth){if(this.textAlign === 'center'){return (this.width - lineWidth) / 2;}if(this.textAlign === 'right'){return this.width - lineWidth;}return 0;}, /**
	     * @private
	     */_clearCache:function _clearCache(){this.__lineWidths = [];this.__lineHeights = [];this.__lineOffsets = [];}, /**
	     * @private
	     */_shouldClearCache:function _shouldClearCache(){var shouldClear=false;for(var prop in this._dimensionAffectingProps) {if(this['__' + prop] !== this[prop]){this['__' + prop] = this[prop];shouldClear = true;}}return shouldClear;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @return {Number} Line width
	     */_getLineWidth:function _getLineWidth(ctx,lineIndex){if(this.__lineWidths[lineIndex]){return this.__lineWidths[lineIndex];}this.__lineWidths[lineIndex] = ctx.measureText(this._textLines[lineIndex]).width;return this.__lineWidths[lineIndex];}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderTextDecoration:function _renderTextDecoration(ctx){if(!this.textDecoration){return;}var halfOfVerticalBox=this.height / 2,_this=this,offsets=[]; /** @ignore */function renderLinesAtOffset(offsets){var i,lineHeight=0,len,j,oLen;for(i = 0,len = _this._textLines.length;i < len;i++) {var lineWidth=_this._getLineWidth(ctx,i),lineLeftOffset=_this._getLineLeftOffset(lineWidth),heightOfLine=_this._getHeightOfLine(ctx,i);for(j = 0,oLen = offsets.length;j < oLen;j++) {ctx.fillRect(_this._getLeftOffset() + lineLeftOffset,lineHeight + (_this._fontSizeMult - 1 + offsets[j]) * _this.fontSize - halfOfVerticalBox,lineWidth,_this.fontSize / 15);}lineHeight += heightOfLine;}}if(this.textDecoration.indexOf('underline') > -1){offsets.push(0.85); // 1 - 3/16
	}if(this.textDecoration.indexOf('line-through') > -1){offsets.push(0.43);}if(this.textDecoration.indexOf('overline') > -1){offsets.push(-0.12);}if(offsets.length > 0){renderLinesAtOffset(offsets);}}, /**
	     * @private
	     */_getFontDeclaration:function _getFontDeclaration(){return [ // node-canvas needs "weight style", while browsers need "style weight"
	fabric.isLikelyNode?this.fontWeight:this.fontStyle,fabric.isLikelyNode?this.fontStyle:this.fontWeight,this.fontSize + 'px',fabric.isLikelyNode?'"' + this.fontFamily + '"':this.fontFamily].join(' ');}, /**
	     * Renders text instance on a specified context
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */render:function render(ctx,noTransform){ // do not render if object is not visible
	if(!this.visible){return;}ctx.save();this._setTextStyles(ctx);if(this._shouldClearCache()){this._initDimensions(ctx);}if(!noTransform){this.transform(ctx);}this._setStrokeStyles(ctx);this._setFillStyles(ctx);if(this.transformMatrix){ctx.transform.apply(ctx,this.transformMatrix);}if(this.group && this.group.type === 'path-group'){ctx.translate(this.left,this.top);}this._render(ctx);ctx.restore();}, /**
	     * Returns object representation of an instance
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} Object representation of an instance
	     */toObject:function toObject(propertiesToInclude){var object=extend(this.callSuper('toObject',propertiesToInclude),{text:this.text,fontSize:this.fontSize,fontWeight:this.fontWeight,fontFamily:this.fontFamily,fontStyle:this.fontStyle,lineHeight:this.lineHeight,textDecoration:this.textDecoration,textAlign:this.textAlign,textBackgroundColor:this.textBackgroundColor});if(!this.includeDefaultValues){this._removeDefaultValues(object);}return object;}, /* _TO_SVG_START_ */ /**
	     * Returns SVG representation of an instance
	     * @param {Function} [reviver] Method for further parsing of svg representation.
	     * @return {String} svg representation of an instance
	     */toSVG:function toSVG(reviver){var markup=this._createBaseSVGMarkup(),offsets=this._getSVGLeftTopOffsets(this.ctx),textAndBg=this._getSVGTextAndBg(offsets.textTop,offsets.textLeft);this._wrapSVGTextAndBg(markup,textAndBg);return reviver?reviver(markup.join('')):markup.join('');}, /**
	     * @private
	     */_getSVGLeftTopOffsets:function _getSVGLeftTopOffsets(ctx){var lineTop=this._getHeightOfLine(ctx,0),textLeft=-this.width / 2,textTop=0;return {textLeft:textLeft + (this.group && this.group.type === 'path-group'?this.left:0),textTop:textTop + (this.group && this.group.type === 'path-group'?-this.top:0),lineTop:lineTop};}, /**
	     * @private
	     */_wrapSVGTextAndBg:function _wrapSVGTextAndBg(markup,textAndBg){markup.push('\t<g transform="',this.getSvgTransform(),this.getSvgTransformMatrix(),'">\n',textAndBg.textBgRects.join(''),'\t\t<text ',this.fontFamily?'font-family="' + this.fontFamily.replace(/"/g,'\'') + '" ':'',this.fontSize?'font-size="' + this.fontSize + '" ':'',this.fontStyle?'font-style="' + this.fontStyle + '" ':'',this.fontWeight?'font-weight="' + this.fontWeight + '" ':'',this.textDecoration?'text-decoration="' + this.textDecoration + '" ':'','style="',this.getSvgStyles(),'" >',textAndBg.textSpans.join(''),'</text>\n','\t</g>\n');}, /**
	     * @private
	     * @param {Number} textTopOffset Text top offset
	     * @param {Number} textLeftOffset Text left offset
	     * @return {Object}
	     */_getSVGTextAndBg:function _getSVGTextAndBg(textTopOffset,textLeftOffset){var textSpans=[],textBgRects=[],height=0; // bounding-box background
	this._setSVGBg(textBgRects); // text and text-background
	for(var i=0,len=this._textLines.length;i < len;i++) {if(this.textBackgroundColor){this._setSVGTextLineBg(textBgRects,i,textLeftOffset,textTopOffset,height);}this._setSVGTextLineText(i,textSpans,height,textLeftOffset,textTopOffset,textBgRects);height += this._getHeightOfLine(this.ctx,i);}return {textSpans:textSpans,textBgRects:textBgRects};},_setSVGTextLineText:function _setSVGTextLineText(i,textSpans,height,textLeftOffset,textTopOffset){var yPos=this.fontSize * (this._fontSizeMult - this._fontSizeFraction) - textTopOffset + height - this.height / 2;textSpans.push('<tspan x="',toFixed(textLeftOffset + this._getLineLeftOffset(this.__lineWidths[i]),4),'" ','y="',toFixed(yPos,4),'" ', // doing this on <tspan> elements since setting opacity
	// on containing <text> one doesn't work in Illustrator
	this._getFillAttributes(this.fill),'>',fabric.util.string.escapeXml(this._textLines[i]),'</tspan>');},_setSVGTextLineBg:function _setSVGTextLineBg(textBgRects,i,textLeftOffset,textTopOffset,height){textBgRects.push('\t\t<rect ',this._getFillAttributes(this.textBackgroundColor),' x="',toFixed(textLeftOffset + this._getLineLeftOffset(this.__lineWidths[i]),4),'" y="',toFixed(height - this.height / 2,4),'" width="',toFixed(this.__lineWidths[i],4),'" height="',toFixed(this._getHeightOfLine(this.ctx,i) / this.lineHeight,4),'"></rect>\n');},_setSVGBg:function _setSVGBg(textBgRects){if(this.backgroundColor){textBgRects.push('\t\t<rect ',this._getFillAttributes(this.backgroundColor),' x="',toFixed(-this.width / 2,4),'" y="',toFixed(-this.height / 2,4),'" width="',toFixed(this.width,4),'" height="',toFixed(this.height,4),'"></rect>\n');}}, /**
	     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values
	     * we work around it by "moving" alpha channel into opacity attribute and setting fill's alpha to 1
	     *
	     * @private
	     * @param {Any} value
	     * @return {String}
	     */_getFillAttributes:function _getFillAttributes(value){var fillColor=value && typeof value === 'string'?new fabric.Color(value):'';if(!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1){return 'fill="' + value + '"';}return 'opacity="' + fillColor.getAlpha() + '" fill="' + fillColor.setAlpha(1).toRgb() + '"';}, /* _TO_SVG_END_ */ /**
	     * Sets specified property to a specified value
	     * @param {String} key
	     * @param {Any} value
	     * @return {fabric.Text} thisArg
	     * @chainable
	     */_set:function _set(key,value){this.callSuper('_set',key,value);if(key in this._dimensionAffectingProps){this._initDimensions();this.setCoords();}}, /**
	     * Returns complexity of an instance
	     * @return {Number} complexity
	     */complexity:function complexity(){return 1;}}); /* _FROM_SVG_START_ */ /**
	   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})
	   * @static
	   * @memberOf fabric.Text
	   * @see: http://www.w3.org/TR/SVG/text.html#TextElement
	   */fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y dx dy font-family font-style font-weight font-size text-decoration text-anchor'.split(' ')); /**
	   * Default SVG font size
	   * @static
	   * @memberOf fabric.Text
	   */fabric.Text.DEFAULT_SVG_FONT_SIZE = 16; /**
	   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)
	   * @static
	   * @memberOf fabric.Text
	   * @param {SVGElement} element Element to parse
	   * @param {Object} [options] Options object
	   * @return {fabric.Text} Instance of fabric.Text
	   */fabric.Text.fromElement = function(element,options){if(!element){return null;}var parsedAttributes=fabric.parseAttributes(element,fabric.Text.ATTRIBUTE_NAMES);options = fabric.util.object.extend(options?fabric.util.object.clone(options):{},parsedAttributes);options.top = options.top || 0;options.left = options.left || 0;if('dx' in parsedAttributes){options.left += parsedAttributes.dx;}if('dy' in parsedAttributes){options.top += parsedAttributes.dy;}if(!('fontSize' in options)){options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;}if(!options.originX){options.originX = 'left';}var textContent=element.textContent.replace(/^\s+|\s+$|\n+/g,'').replace(/\s+/g,' '),text=new fabric.Text(textContent,options), /*
	          Adjust positioning:
	            x/y attributes in SVG correspond to the bottom-left corner of text bounding box
	            top/left properties in Fabric correspond to center point of text bounding box
	        */offX=0;if(text.originX === 'left'){offX = text.getWidth() / 2;}if(text.originX === 'right'){offX = -text.getWidth() / 2;}text.set({left:text.getLeft() + offX,top:text.getTop() - text.getHeight() / 2 + text.fontSize * (0.18 + text._fontSizeFraction) /* 0.3 is the old lineHeight */});return text;}; /* _FROM_SVG_END_ */ /**
	   * Returns fabric.Text instance from an object representation
	   * @static
	   * @memberOf fabric.Text
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.Text} Instance of fabric.Text
	   */fabric.Text.fromObject = function(object){return new fabric.Text(object.text,clone(object));};fabric.util.createAccessors(fabric.Text);})( true?exports:undefined);(function(){var clone=fabric.util.object.clone; /**
	   * IText class (introduced in <b>v1.4</b>) Events are also fired with "text:"
	   * prefix when observing canvas.
	   * @class fabric.IText
	   * @extends fabric.Text
	   * @mixes fabric.Observable
	   *
	   * @fires changed
	   * @fires selection:changed
	   * @fires editing:entered
	   * @fires editing:exited
	   *
	   * @return {fabric.IText} thisArg
	   * @see {@link fabric.IText#initialize} for constructor definition
	   *
	   * <p>Supported key combinations:</p>
	   * <pre>
	   *   Move cursor:                    left, right, up, down
	   *   Select character:               shift + left, shift + right
	   *   Select text vertically:         shift + up, shift + down
	   *   Move cursor by word:            alt + left, alt + right
	   *   Select words:                   shift + alt + left, shift + alt + right
	   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end
	   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end
	   *   Jump to start/end of text:      cmd + up, cmd + down
	   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown
	   *   Delete character:               backspace
	   *   Delete word:                    alt + backspace
	   *   Delete line:                    cmd + backspace
	   *   Forward delete:                 delete
	   *   Copy text:                      ctrl/cmd + c
	   *   Paste text:                     ctrl/cmd + v
	   *   Cut text:                       ctrl/cmd + x
	   *   Select entire text:             ctrl/cmd + a
	   *   Quit editing                    tab or esc
	   * </pre>
	   *
	   * <p>Supported mouse/touch combination</p>
	   * <pre>
	   *   Position cursor:                click/touch
	   *   Create selection:               click/touch & drag
	   *   Create selection:               click & shift + click
	   *   Select word:                    double click
	   *   Select line:                    triple click
	   * </pre>
	   */fabric.IText = fabric.util.createClass(fabric.Text,fabric.Observable, /** @lends fabric.IText.prototype */{ /**
	     * Type of an object
	     * @type String
	     * @default
	     */type:'i-text', /**
	     * Index where text selection starts (or where cursor is when there is no selection)
	     * @type Nubmer
	     * @default
	     */selectionStart:0, /**
	     * Index where text selection ends
	     * @type Nubmer
	     * @default
	     */selectionEnd:0, /**
	     * Color of text selection
	     * @type String
	     * @default
	     */selectionColor:'rgba(17,119,255,0.3)', /**
	     * Indicates whether text is in editing mode
	     * @type Boolean
	     * @default
	     */isEditing:false, /**
	     * Indicates whether a text can be edited
	     * @type Boolean
	     * @default
	     */editable:true, /**
	     * Border color of text object while it's in editing mode
	     * @type String
	     * @default
	     */editingBorderColor:'rgba(102,153,255,0.25)', /**
	     * Width of cursor (in px)
	     * @type Number
	     * @default
	     */cursorWidth:2, /**
	     * Color of default cursor (when not overwritten by character style)
	     * @type String
	     * @default
	     */cursorColor:'#333', /**
	     * Delay between cursor blink (in ms)
	     * @type Number
	     * @default
	     */cursorDelay:1000, /**
	     * Duration of cursor fadein (in ms)
	     * @type Number
	     * @default
	     */cursorDuration:600, /**
	     * Object containing character styles
	     * (where top-level properties corresponds to line number and 2nd-level properties -- to char number in a line)
	     * @type Object
	     * @default
	     */styles:null, /**
	     * Indicates whether internal text char widths can be cached
	     * @type Boolean
	     * @default
	     */caching:true, /**
	     * @private
	     * @type Boolean
	     * @default
	     */_skipFillStrokeCheck:false, /**
	     * @private
	     */_reSpace:/\s|\n/, /**
	     * @private
	     */_currentCursorOpacity:0, /**
	     * @private
	     */_selectionDirection:null, /**
	     * @private
	     */_abortCursorAnimation:false, /**
	     * @private
	     */_charWidthsCache:{}, /**
	     * Constructor
	     * @param {String} text Text string
	     * @param {Object} [options] Options object
	     * @return {fabric.IText} thisArg
	     */initialize:function initialize(text,options){this.styles = options?options.styles || {}:{};this.callSuper('initialize',text,options);this.initBehavior();}, /**
	     * @private
	     */_clearCache:function _clearCache(){this.callSuper('_clearCache');this.__maxFontHeights = [];this.__widthOfSpace = [];}, /**
	     * Returns true if object has no styling
	     */isEmptyStyles:function isEmptyStyles(){if(!this.styles){return true;}var obj=this.styles;for(var p1 in obj) {for(var p2 in obj[p1]) { /*jshint unused:false */for(var p3 in obj[p1][p2]) {return false;}}}return true;}, /**
	     * Sets selection start (left boundary of a selection)
	     * @param {Number} index Index to set selection start to
	     */setSelectionStart:function setSelectionStart(index){index = Math.max(index,0);if(this.selectionStart !== index){this.fire('selection:changed');this.canvas && this.canvas.fire('text:selection:changed',{target:this});this.selectionStart = index;}this._updateTextarea();}, /**
	     * Sets selection end (right boundary of a selection)
	     * @param {Number} index Index to set selection end to
	     */setSelectionEnd:function setSelectionEnd(index){index = Math.min(index,this.text.length);if(this.selectionEnd !== index){this.fire('selection:changed');this.canvas && this.canvas.fire('text:selection:changed',{target:this});this.selectionEnd = index;}this._updateTextarea();}, /**
	     * Gets style of a current selection/cursor (at the start position)
	     * @param {Number} [startIndex] Start index to get styles at
	     * @param {Number} [endIndex] End index to get styles at
	     * @return {Object} styles Style object at a specified (or current) index
	     */getSelectionStyles:function getSelectionStyles(startIndex,endIndex){if(arguments.length === 2){var styles=[];for(var i=startIndex;i < endIndex;i++) {styles.push(this.getSelectionStyles(i));}return styles;}var loc=this.get2DCursorLocation(startIndex);if(this.styles[loc.lineIndex]){return this.styles[loc.lineIndex][loc.charIndex] || {};}return {};}, /**
	     * Sets style of a current selection
	     * @param {Object} [styles] Styles object
	     * @return {fabric.IText} thisArg
	     * @chainable
	     */setSelectionStyles:function setSelectionStyles(styles){if(this.selectionStart === this.selectionEnd){this._extendStyles(this.selectionStart,styles);}else {for(var i=this.selectionStart;i < this.selectionEnd;i++) {this._extendStyles(i,styles);}} /* not included in _extendStyles to avoid clearing cache more than once */this._clearCache();return this;}, /**
	     * @private
	     */_extendStyles:function _extendStyles(index,styles){var loc=this.get2DCursorLocation(index);if(!this.styles[loc.lineIndex]){this.styles[loc.lineIndex] = {};}if(!this.styles[loc.lineIndex][loc.charIndex]){this.styles[loc.lineIndex][loc.charIndex] = {};}fabric.util.object.extend(this.styles[loc.lineIndex][loc.charIndex],styles);}, /**
	    * @private
	    * @param {CanvasRenderingContext2D} ctx Context to render on
	    */_render:function _render(ctx){this.callSuper('_render',ctx);this.ctx = ctx;this.isEditing && this.renderCursorOrSelection();}, /**
	     * Renders cursor or selection (depending on what exists)
	     */renderCursorOrSelection:function renderCursorOrSelection(){if(!this.active){return;}var chars=this.text.split(''),boundaries,ctx;if(this.canvas.contextTop){ctx = this.canvas.contextTop;ctx.save();ctx.transform.apply(ctx,this.canvas.viewportTransform);this.transform(ctx);}else {ctx = this.ctx;ctx.save();}if(this.selectionStart === this.selectionEnd){boundaries = this._getCursorBoundaries(chars,'cursor');this.renderCursor(boundaries,ctx);}else {boundaries = this._getCursorBoundaries(chars,'selection');this.renderSelection(chars,boundaries,ctx);}ctx.restore();}, /**
	     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)
	     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.
	     */get2DCursorLocation:function get2DCursorLocation(selectionStart){if(typeof selectionStart === 'undefined'){selectionStart = this.selectionStart;}var textBeforeCursor=this.text.slice(0,selectionStart),linesBeforeCursor=textBeforeCursor.split(this._reNewline);return {lineIndex:linesBeforeCursor.length - 1,charIndex:linesBeforeCursor[linesBeforeCursor.length - 1].length};}, /**
	     * Returns complete style of char at the current cursor
	     * @param {Number} lineIndex Line index
	     * @param {Number} charIndex Char index
	    * @return {Object} Character style
	     */getCurrentCharStyle:function getCurrentCharStyle(lineIndex,charIndex){var style=this.styles[lineIndex] && this.styles[lineIndex][charIndex === 0?0:charIndex - 1];return {fontSize:style && style.fontSize || this.fontSize,fill:style && style.fill || this.fill,textBackgroundColor:style && style.textBackgroundColor || this.textBackgroundColor,textDecoration:style && style.textDecoration || this.textDecoration,fontFamily:style && style.fontFamily || this.fontFamily,fontWeight:style && style.fontWeight || this.fontWeight,fontStyle:style && style.fontStyle || this.fontStyle,stroke:style && style.stroke || this.stroke,strokeWidth:style && style.strokeWidth || this.strokeWidth};}, /**
	     * Returns fontSize of char at the current cursor
	     * @param {Number} lineIndex Line index
	     * @param {Number} charIndex Char index
	     * @return {Number} Character font size
	     */getCurrentCharFontSize:function getCurrentCharFontSize(lineIndex,charIndex){return this.styles[lineIndex] && this.styles[lineIndex][charIndex === 0?0:charIndex - 1] && this.styles[lineIndex][charIndex === 0?0:charIndex - 1].fontSize || this.fontSize;}, /**
	     * Returns color (fill) of char at the current cursor
	     * @param {Number} lineIndex Line index
	     * @param {Number} charIndex Char index
	     * @return {String} Character color (fill)
	     */getCurrentCharColor:function getCurrentCharColor(lineIndex,charIndex){return this.styles[lineIndex] && this.styles[lineIndex][charIndex === 0?0:charIndex - 1] && this.styles[lineIndex][charIndex === 0?0:charIndex - 1].fill || this.cursorColor;}, /**
	     * Returns cursor boundaries (left, top, leftOffset, topOffset)
	     * @private
	     * @param {Array} chars Array of characters
	     * @param {String} typeOfBoundaries
	     */_getCursorBoundaries:function _getCursorBoundaries(chars,typeOfBoundaries){ // left/top are left/top of entire text box
	// leftOffset/topOffset are offset from that left/top point of a text box
	var left=Math.round(this._getLeftOffset()),top=this._getTopOffset(),offsets=this._getCursorBoundariesOffsets(chars,typeOfBoundaries);return {left:left,top:top,leftOffset:offsets.left + offsets.lineLeft,topOffset:offsets.top};}, /**
	     * @private
	     */_getCursorBoundariesOffsets:function _getCursorBoundariesOffsets(chars,typeOfBoundaries){var lineLeftOffset=0,lineIndex=0,charIndex=0,topOffset=0,leftOffset=0;for(var i=0;i < this.selectionStart;i++) {if(chars[i] === '\n'){leftOffset = 0;topOffset += this._getHeightOfLine(this.ctx,lineIndex);lineIndex++;charIndex = 0;}else {leftOffset += this._getWidthOfChar(this.ctx,chars[i],lineIndex,charIndex);charIndex++;}lineLeftOffset = this._getCachedLineOffset(lineIndex);}if(typeOfBoundaries === 'cursor'){topOffset += (1 - this._fontSizeFraction) * this._getHeightOfLine(this.ctx,lineIndex) / this.lineHeight - this.getCurrentCharFontSize(lineIndex,charIndex) * (1 - this._fontSizeFraction);}return {top:topOffset,left:leftOffset,lineLeft:lineLeftOffset};}, /**
	     * @private
	     */_getCachedLineOffset:function _getCachedLineOffset(lineIndex){var widthOfLine=this._getLineWidth(this.ctx,lineIndex);return this.__lineOffsets[lineIndex] || (this.__lineOffsets[lineIndex] = this._getLineLeftOffset(widthOfLine));}, /**
	     * Renders cursor
	     * @param {Object} boundaries
	     * @param {CanvasRenderingContext2D} ctx transformed context to draw on
	     */renderCursor:function renderCursor(boundaries,ctx){var cursorLocation=this.get2DCursorLocation(),lineIndex=cursorLocation.lineIndex,charIndex=cursorLocation.charIndex,charHeight=this.getCurrentCharFontSize(lineIndex,charIndex),leftOffset=lineIndex === 0 && charIndex === 0?this._getCachedLineOffset(lineIndex):boundaries.leftOffset;ctx.fillStyle = this.getCurrentCharColor(lineIndex,charIndex);ctx.globalAlpha = this.__isMousedown?1:this._currentCursorOpacity;ctx.fillRect(boundaries.left + leftOffset,boundaries.top + boundaries.topOffset,this.cursorWidth / this.scaleX,charHeight);}, /**
	     * Renders text selection
	     * @param {Array} chars Array of characters
	     * @param {Object} boundaries Object with left/top/leftOffset/topOffset
	     * @param {CanvasRenderingContext2D} ctx transformed context to draw on
	     */renderSelection:function renderSelection(chars,boundaries,ctx){ctx.fillStyle = this.selectionColor;var start=this.get2DCursorLocation(this.selectionStart),end=this.get2DCursorLocation(this.selectionEnd),startLine=start.lineIndex,endLine=end.lineIndex;for(var i=startLine;i <= endLine;i++) {var lineOffset=this._getCachedLineOffset(i) || 0,lineHeight=this._getHeightOfLine(this.ctx,i),boxWidth=0,line=this._textLines[i];if(i === startLine){for(var j=0,len=line.length;j < len;j++) {if(j >= start.charIndex && (i !== endLine || j < end.charIndex)){boxWidth += this._getWidthOfChar(ctx,line[j],i,j);}if(j < start.charIndex){lineOffset += this._getWidthOfChar(ctx,line[j],i,j);}}}else if(i > startLine && i < endLine){boxWidth += this._getLineWidth(ctx,i) || 5;}else if(i === endLine){for(var j2=0,j2len=end.charIndex;j2 < j2len;j2++) {boxWidth += this._getWidthOfChar(ctx,line[j2],i,j2);}}ctx.fillRect(boundaries.left + lineOffset,boundaries.top + boundaries.topOffset,boxWidth,lineHeight);boundaries.topOffset += lineHeight;}}, /**
	     * @private
	     * @param {String} method
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderChars:function _renderChars(method,ctx,line,left,top,lineIndex){if(this.isEmptyStyles()){return this._renderCharsFast(method,ctx,line,left,top);}this.skipTextAlign = true; // set proper box offset
	left -= this.textAlign === 'center'?this.width / 2:this.textAlign === 'right'?this.width:0; // set proper line offset
	var lineHeight=this._getHeightOfLine(ctx,lineIndex),lineLeftOffset=this._getCachedLineOffset(lineIndex),chars=line.split(''),prevStyle,charsToRender='';left += lineLeftOffset || 0;ctx.save();top -= lineHeight / this.lineHeight * this._fontSizeFraction;for(var i=0,len=chars.length;i <= len;i++) {prevStyle = prevStyle || this.getCurrentCharStyle(lineIndex,i);var thisStyle=this.getCurrentCharStyle(lineIndex,i + 1);if(this._hasStyleChanged(prevStyle,thisStyle) || i === len){this._renderChar(method,ctx,lineIndex,i - 1,charsToRender,left,top,lineHeight);charsToRender = '';prevStyle = thisStyle;}charsToRender += chars[i];}ctx.restore();}, /**
	     * @private
	     * @param {String} method
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {String} line Content of the line
	     * @param {Number} left Left coordinate
	     * @param {Number} top Top coordinate
	     */_renderCharsFast:function _renderCharsFast(method,ctx,line,left,top){this.skipTextAlign = false;if(method === 'fillText' && this.fill){this.callSuper('_renderChars',method,ctx,line,left,top);}if(method === 'strokeText' && (this.stroke && this.strokeWidth > 0 || this.skipFillStrokeCheck)){this.callSuper('_renderChars',method,ctx,line,left,top);}}, /**
	     * @private
	     * @param {String} method
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {Number} lineIndex
	     * @param {Number} i
	     * @param {String} _char
	     * @param {Number} left Left coordinate
	     * @param {Number} top Top coordinate
	     * @param {Number} lineHeight Height of the line
	     */_renderChar:function _renderChar(method,ctx,lineIndex,i,_char,left,top,lineHeight){var decl,charWidth,charHeight,offset=this._fontSizeFraction * lineHeight / this.lineHeight;if(this.styles && this.styles[lineIndex] && (decl = this.styles[lineIndex][i])){var shouldStroke=decl.stroke || this.stroke,shouldFill=decl.fill || this.fill;ctx.save();charWidth = this._applyCharStylesGetWidth(ctx,_char,lineIndex,i,decl);charHeight = this._getHeightOfChar(ctx,_char,lineIndex,i);if(shouldFill){ctx.fillText(_char,left,top);}if(shouldStroke){ctx.strokeText(_char,left,top);}this._renderCharDecoration(ctx,decl,left,top,offset,charWidth,charHeight);ctx.restore();ctx.translate(charWidth,0);}else {if(method === 'strokeText' && this.stroke){ctx[method](_char,left,top);}if(method === 'fillText' && this.fill){ctx[method](_char,left,top);}charWidth = this._applyCharStylesGetWidth(ctx,_char,lineIndex,i);this._renderCharDecoration(ctx,null,left,top,offset,charWidth,this.fontSize);ctx.translate(ctx.measureText(_char).width,0);}}, /**
	     * @private
	     * @param {Object} prevStyle
	     * @param {Object} thisStyle
	     */_hasStyleChanged:function _hasStyleChanged(prevStyle,thisStyle){return prevStyle.fill !== thisStyle.fill || prevStyle.fontSize !== thisStyle.fontSize || prevStyle.textBackgroundColor !== thisStyle.textBackgroundColor || prevStyle.textDecoration !== thisStyle.textDecoration || prevStyle.fontFamily !== thisStyle.fontFamily || prevStyle.fontWeight !== thisStyle.fontWeight || prevStyle.fontStyle !== thisStyle.fontStyle || prevStyle.stroke !== thisStyle.stroke || prevStyle.strokeWidth !== thisStyle.strokeWidth;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderCharDecoration:function _renderCharDecoration(ctx,styleDeclaration,left,top,offset,charWidth,charHeight){var textDecoration=styleDeclaration?styleDeclaration.textDecoration || this.textDecoration:this.textDecoration;if(!textDecoration){return;}if(textDecoration.indexOf('underline') > -1){ctx.fillRect(left,top + charHeight / 10,charWidth,charHeight / 15);}if(textDecoration.indexOf('line-through') > -1){ctx.fillRect(left,top - charHeight * (this._fontSizeFraction + this._fontSizeMult - 1) + charHeight / 15,charWidth,charHeight / 15);}if(textDecoration.indexOf('overline') > -1){ctx.fillRect(left,top - (this._fontSizeMult - this._fontSizeFraction) * charHeight,charWidth,charHeight / 15);}}, /**
	     * @private
	     * @param {String} method
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {String} line
	     */_renderTextLine:function _renderTextLine(method,ctx,line,left,top,lineIndex){ // to "cancel" this.fontSize subtraction in fabric.Text#_renderTextLine
	// the adding 0.03 is just to align text with itext by overlap test
	if(!this.isEmptyStyles()){top += this.fontSize * (this._fontSizeFraction + 0.03);}this.callSuper('_renderTextLine',method,ctx,line,left,top,lineIndex);}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderTextDecoration:function _renderTextDecoration(ctx){if(this.isEmptyStyles()){return this.callSuper('_renderTextDecoration',ctx);}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_renderTextLinesBackground:function _renderTextLinesBackground(ctx){if(!this.textBackgroundColor && !this.styles){return;}ctx.save();if(this.textBackgroundColor){ctx.fillStyle = this.textBackgroundColor;}var lineHeights=0;for(var i=0,len=this._textLines.length;i < len;i++) {var heightOfLine=this._getHeightOfLine(ctx,i);if(this._textLines[i] === ''){lineHeights += heightOfLine;continue;}var lineWidth=this._getLineWidth(ctx,i),lineLeftOffset=this._getCachedLineOffset(i);if(this.textBackgroundColor){ctx.fillStyle = this.textBackgroundColor;ctx.fillRect(this._getLeftOffset() + lineLeftOffset,this._getTopOffset() + lineHeights,lineWidth,heightOfLine / this.lineHeight);}if(this.styles[i]){for(var j=0,jlen=this._textLines[i].length;j < jlen;j++) {if(this.styles[i] && this.styles[i][j] && this.styles[i][j].textBackgroundColor){var _char=this._textLines[i][j];ctx.fillStyle = this.styles[i][j].textBackgroundColor;ctx.fillRect(this._getLeftOffset() + lineLeftOffset + this._getWidthOfCharsAt(ctx,i,j),this._getTopOffset() + lineHeights,this._getWidthOfChar(ctx,_char,i,j) + 1,heightOfLine / this.lineHeight);}}}lineHeights += heightOfLine;}ctx.restore();}, /**
	     * @private
	     */_getCacheProp:function _getCacheProp(_char,styleDeclaration){return _char + styleDeclaration.fontFamily + styleDeclaration.fontSize + styleDeclaration.fontWeight + styleDeclaration.fontStyle + styleDeclaration.shadow;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {String} _char
	     * @param {Number} lineIndex
	     * @param {Number} charIndex
	     * @param {Object} [decl]
	     */_applyCharStylesGetWidth:function _applyCharStylesGetWidth(ctx,_char,lineIndex,charIndex,decl){var styleDeclaration=decl || this.styles[lineIndex] && this.styles[lineIndex][charIndex];if(styleDeclaration){ // cloning so that original style object is not polluted with following font declarations
	styleDeclaration = clone(styleDeclaration);}else {styleDeclaration = {};}this._applyFontStyles(styleDeclaration);var cacheProp=this._getCacheProp(_char,styleDeclaration); // short-circuit if no styles
	if(this.isEmptyStyles() && this._charWidthsCache[cacheProp] && this.caching){return this._charWidthsCache[cacheProp];}if(typeof styleDeclaration.shadow === 'string'){styleDeclaration.shadow = new fabric.Shadow(styleDeclaration.shadow);}var fill=styleDeclaration.fill || this.fill;ctx.fillStyle = fill.toLive?fill.toLive(ctx,this):fill;if(styleDeclaration.stroke){ctx.strokeStyle = styleDeclaration.stroke && styleDeclaration.stroke.toLive?styleDeclaration.stroke.toLive(ctx,this):styleDeclaration.stroke;}ctx.lineWidth = styleDeclaration.strokeWidth || this.strokeWidth;ctx.font = this._getFontDeclaration.call(styleDeclaration);this._setShadow.call(styleDeclaration,ctx);if(!this.caching){return ctx.measureText(_char).width;}if(!this._charWidthsCache[cacheProp]){this._charWidthsCache[cacheProp] = ctx.measureText(_char).width;}return this._charWidthsCache[cacheProp];}, /**
	     * @private
	     * @param {Object} styleDeclaration
	     */_applyFontStyles:function _applyFontStyles(styleDeclaration){if(!styleDeclaration.fontFamily){styleDeclaration.fontFamily = this.fontFamily;}if(!styleDeclaration.fontSize){styleDeclaration.fontSize = this.fontSize;}if(!styleDeclaration.fontWeight){styleDeclaration.fontWeight = this.fontWeight;}if(!styleDeclaration.fontStyle){styleDeclaration.fontStyle = this.fontStyle;}}, /**
	     * @private
	     * @param {Number} lineIndex
	     * @param {Number} charIndex
	     */_getStyleDeclaration:function _getStyleDeclaration(lineIndex,charIndex){return this.styles[lineIndex] && this.styles[lineIndex][charIndex]?clone(this.styles[lineIndex][charIndex]):{};}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_getWidthOfChar:function _getWidthOfChar(ctx,_char,lineIndex,charIndex){if(this.textAlign === 'justify' && /\s/.test(_char)){return this._getWidthOfSpace(ctx,lineIndex);}var styleDeclaration=this._getStyleDeclaration(lineIndex,charIndex);this._applyFontStyles(styleDeclaration);var cacheProp=this._getCacheProp(_char,styleDeclaration);if(this._charWidthsCache[cacheProp] && this.caching){return this._charWidthsCache[cacheProp];}else if(ctx){ctx.save();var width=this._applyCharStylesGetWidth(ctx,_char,lineIndex,charIndex);ctx.restore();return width;}}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_getHeightOfChar:function _getHeightOfChar(ctx,_char,lineIndex,charIndex){if(this.styles[lineIndex] && this.styles[lineIndex][charIndex]){return this.styles[lineIndex][charIndex].fontSize || this.fontSize;}return this.fontSize;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_getHeightOfCharAt:function _getHeightOfCharAt(ctx,lineIndex,charIndex){var _char=this._textLines[lineIndex][charIndex];return this._getHeightOfChar(ctx,_char,lineIndex,charIndex);}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_getWidthOfCharsAt:function _getWidthOfCharsAt(ctx,lineIndex,charIndex){var width=0,i,_char;for(i = 0;i < charIndex;i++) {_char = this._textLines[lineIndex][i];width += this._getWidthOfChar(ctx,_char,lineIndex,i);}return width;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_getLineWidth:function _getLineWidth(ctx,lineIndex){if(this.__lineWidths[lineIndex]){return this.__lineWidths[lineIndex];}this.__lineWidths[lineIndex] = this._getWidthOfCharsAt(ctx,lineIndex,this._textLines[lineIndex].length);return this.__lineWidths[lineIndex];}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {Number} lineIndex
	     */_getWidthOfSpace:function _getWidthOfSpace(ctx,lineIndex){if(this.__widthOfSpace[lineIndex]){return this.__widthOfSpace[lineIndex];}var line=this._textLines[lineIndex],wordsWidth=this._getWidthOfWords(ctx,line,lineIndex),widthDiff=this.width - wordsWidth,numSpaces=line.length - line.replace(/\s+/g,'').length,width=widthDiff / numSpaces;this.__widthOfSpace[lineIndex] = width;return width;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     * @param {Number} line
	     * @param {Number} lineIndex
	     */_getWidthOfWords:function _getWidthOfWords(ctx,line,lineIndex){var width=0;for(var charIndex=0;charIndex < line.length;charIndex++) {var _char=line[charIndex];if(!_char.match(/\s/)){width += this._getWidthOfChar(ctx,_char,lineIndex,charIndex);}}return width;}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_getHeightOfLine:function _getHeightOfLine(ctx,lineIndex){if(this.__lineHeights[lineIndex]){return this.__lineHeights[lineIndex];}var line=this._textLines[lineIndex],maxHeight=this._getHeightOfChar(ctx,line[0],lineIndex,0);for(var i=1,len=line.length;i < len;i++) {var currentCharHeight=this._getHeightOfChar(ctx,line[i],lineIndex,i);if(currentCharHeight > maxHeight){maxHeight = currentCharHeight;}}this.__maxFontHeights[lineIndex] = maxHeight;this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;return this.__lineHeights[lineIndex];}, /**
	     * @private
	     * @param {CanvasRenderingContext2D} ctx Context to render on
	     */_getTextHeight:function _getTextHeight(ctx){var height=0;for(var i=0,len=this._textLines.length;i < len;i++) {height += this._getHeightOfLine(ctx,i);}return height;}, /**
	     * This method is overwritten to account for different top offset
	     * @private
	     */_renderTextBoxBackground:function _renderTextBoxBackground(ctx){if(!this.backgroundColor){return;}ctx.save();ctx.fillStyle = this.backgroundColor;ctx.fillRect(this._getLeftOffset(),this._getTopOffset(),this.width,this.height);ctx.restore();}, /**
	     * Returns object representation of an instance
	     * @method toObject
	     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output
	     * @return {Object} object representation of an instance
	     */toObject:function toObject(propertiesToInclude){return fabric.util.object.extend(this.callSuper('toObject',propertiesToInclude),{styles:clone(this.styles)});}}); /**
	   * Returns fabric.IText instance from an object representation
	   * @static
	   * @memberOf fabric.IText
	   * @param {Object} object Object to create an instance from
	   * @return {fabric.IText} instance of fabric.IText
	   */fabric.IText.fromObject = function(object){return new fabric.IText(object.text,clone(object));};})();(function(){var clone=fabric.util.object.clone;fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */{ /**
	     * Initializes all the interactive behavior of IText
	     */initBehavior:function initBehavior(){this.initAddedHandler();this.initRemovedHandler();this.initCursorSelectionHandlers();this.initDoubleClickSimulation();}, /**
	     * Initializes "selected" event handler
	     */initSelectedHandler:function initSelectedHandler(){this.on('selected',function(){var _this=this;setTimeout(function(){_this.selected = true;},100);});}, /**
	     * Initializes "added" event handler
	     */initAddedHandler:function initAddedHandler(){var _this=this;this.on('added',function(){if(this.canvas && !this.canvas._hasITextHandlers){this.canvas._hasITextHandlers = true;this._initCanvasHandlers();} // Track IText instances per-canvas. Only register in this array once added
	// to a canvas; we don't want to leak a reference to the instance forever
	// simply because it existed at some point.
	//
	// (Might be added to a collection, but not on a canvas.)
	if(_this.canvas){_this.canvas._iTextInstances = _this.canvas._iTextInstances || [];_this.canvas._iTextInstances.push(_this);}});},initRemovedHandler:function initRemovedHandler(){var _this=this;this.on('removed',function(){ // (Might be removed from a collection, but not on a canvas.)
	if(_this.canvas){_this.canvas._iTextInstances = _this.canvas._iTextInstances || [];fabric.util.removeFromArray(_this.canvas._iTextInstances,_this);}});}, /**
	     * @private
	     */_initCanvasHandlers:function _initCanvasHandlers(){var _this=this;this.canvas.on('selection:cleared',function(){fabric.IText.prototype.exitEditingOnOthers(_this.canvas);});this.canvas.on('mouse:up',function(){if(_this.canvas._iTextInstances){_this.canvas._iTextInstances.forEach(function(obj){obj.__isMousedown = false;});}});this.canvas.on('object:selected',function(){fabric.IText.prototype.exitEditingOnOthers(_this.canvas);});}, /**
	     * @private
	     */_tick:function _tick(){this._currentTickState = this._animateCursor(this,1,this.cursorDuration,'_onTickComplete');}, /**
	     * @private
	     */_animateCursor:function _animateCursor(obj,targetOpacity,duration,completeMethod){var tickState;tickState = {isAborted:false,abort:function abort(){this.isAborted = true;}};obj.animate('_currentCursorOpacity',targetOpacity,{duration:duration,onComplete:function onComplete(){if(!tickState.isAborted){obj[completeMethod]();}},onChange:function onChange(){if(obj.canvas){obj.canvas.clearContext(obj.canvas.contextTop || obj.ctx);obj.renderCursorOrSelection();}},abort:function abort(){return tickState.isAborted;}});return tickState;}, /**
	     * @private
	     */_onTickComplete:function _onTickComplete(){var _this=this;if(this._cursorTimeout1){clearTimeout(this._cursorTimeout1);}this._cursorTimeout1 = setTimeout(function(){_this._currentTickCompleteState = _this._animateCursor(_this,0,this.cursorDuration / 2,'_tick');},100);}, /**
	     * Initializes delayed cursor
	     */initDelayedCursor:function initDelayedCursor(restart){var _this=this,delay=restart?0:this.cursorDelay;this._currentTickState && this._currentTickState.abort();this._currentTickCompleteState && this._currentTickCompleteState.abort();clearTimeout(this._cursorTimeout1);this._currentCursorOpacity = 1;if(this.canvas){this.canvas.clearContext(this.canvas.contextTop || this.ctx);this.renderCursorOrSelection();}if(this._cursorTimeout2){clearTimeout(this._cursorTimeout2);}this._cursorTimeout2 = setTimeout(function(){_this._tick();},delay);}, /**
	     * Aborts cursor animation and clears all timeouts
	     */abortCursorAnimation:function abortCursorAnimation(){this._currentTickState && this._currentTickState.abort();this._currentTickCompleteState && this._currentTickCompleteState.abort();clearTimeout(this._cursorTimeout1);clearTimeout(this._cursorTimeout2);this._currentCursorOpacity = 0;this.canvas && this.canvas.clearContext(this.canvas.contextTop || this.ctx);}, /**
	     * Selects entire text
	     */selectAll:function selectAll(){this.setSelectionStart(0);this.setSelectionEnd(this.text.length);}, /**
	     * Returns selected text
	     * @return {String}
	     */getSelectedText:function getSelectedText(){return this.text.slice(this.selectionStart,this.selectionEnd);}, /**
	     * Find new selection index representing start of current word according to current selection index
	     * @param {Number} startFrom Surrent selection index
	     * @return {Number} New selection index
	     */findWordBoundaryLeft:function findWordBoundaryLeft(startFrom){var offset=0,index=startFrom - 1; // remove space before cursor first
	if(this._reSpace.test(this.text.charAt(index))){while(this._reSpace.test(this.text.charAt(index))) {offset++;index--;}}while(/\S/.test(this.text.charAt(index)) && index > -1) {offset++;index--;}return startFrom - offset;}, /**
	     * Find new selection index representing end of current word according to current selection index
	     * @param {Number} startFrom Current selection index
	     * @return {Number} New selection index
	     */findWordBoundaryRight:function findWordBoundaryRight(startFrom){var offset=0,index=startFrom; // remove space after cursor first
	if(this._reSpace.test(this.text.charAt(index))){while(this._reSpace.test(this.text.charAt(index))) {offset++;index++;}}while(/\S/.test(this.text.charAt(index)) && index < this.text.length) {offset++;index++;}return startFrom + offset;}, /**
	     * Find new selection index representing start of current line according to current selection index
	     * @param {Number} startFrom Current selection index
	     * @return {Number} New selection index
	     */findLineBoundaryLeft:function findLineBoundaryLeft(startFrom){var offset=0,index=startFrom - 1;while(!/\n/.test(this.text.charAt(index)) && index > -1) {offset++;index--;}return startFrom - offset;}, /**
	     * Find new selection index representing end of current line according to current selection index
	     * @param {Number} startFrom Current selection index
	     * @return {Number} New selection index
	     */findLineBoundaryRight:function findLineBoundaryRight(startFrom){var offset=0,index=startFrom;while(!/\n/.test(this.text.charAt(index)) && index < this.text.length) {offset++;index++;}return startFrom + offset;}, /**
	     * Returns number of newlines in selected text
	     * @return {Number} Number of newlines in selected text
	     */getNumNewLinesInSelectedText:function getNumNewLinesInSelectedText(){var selectedText=this.getSelectedText(),numNewLines=0;for(var i=0,chars=selectedText.split(''),len=chars.length;i < len;i++) {if(chars[i] === '\n'){numNewLines++;}}return numNewLines;}, /**
	     * Finds index corresponding to beginning or end of a word
	     * @param {Number} selectionStart Index of a character
	     * @param {Number} direction: 1 or -1
	     * @return {Number} Index of the beginning or end of a word
	     */searchWordBoundary:function searchWordBoundary(selectionStart,direction){var index=this._reSpace.test(this.text.charAt(selectionStart))?selectionStart - 1:selectionStart,_char=this.text.charAt(index),reNonWord=/[ \n\.,;!\?\-]/;while(!reNonWord.test(_char) && index > 0 && index < this.text.length) {index += direction;_char = this.text.charAt(index);}if(reNonWord.test(_char) && _char !== '\n'){index += direction === 1?0:1;}return index;}, /**
	     * Selects a word based on the index
	     * @param {Number} selectionStart Index of a character
	     */selectWord:function selectWord(selectionStart){var newSelectionStart=this.searchWordBoundary(selectionStart,-1), /* search backwards */newSelectionEnd=this.searchWordBoundary(selectionStart,1); /* search forward */this.setSelectionStart(newSelectionStart);this.setSelectionEnd(newSelectionEnd);}, /**
	     * Selects a line based on the index
	     * @param {Number} selectionStart Index of a character
	     */selectLine:function selectLine(selectionStart){var newSelectionStart=this.findLineBoundaryLeft(selectionStart),newSelectionEnd=this.findLineBoundaryRight(selectionStart);this.setSelectionStart(newSelectionStart);this.setSelectionEnd(newSelectionEnd);}, /**
	     * Enters editing state
	     * @return {fabric.IText} thisArg
	     * @chainable
	     */enterEditing:function enterEditing(){if(this.isEditing || !this.editable){return;}if(this.canvas){this.exitEditingOnOthers(this.canvas);}this.isEditing = true;this.initHiddenTextarea();this.hiddenTextarea.focus();this._updateTextarea();this._saveEditingProps();this._setEditingProps();this._tick();this.fire('editing:entered');if(!this.canvas){return this;}this.canvas.renderAll();this.canvas.fire('text:editing:entered',{target:this});this.initMouseMoveHandler();return this;},exitEditingOnOthers:function exitEditingOnOthers(canvas){if(canvas._iTextInstances){canvas._iTextInstances.forEach(function(obj){obj.selected = false;if(obj.isEditing){obj.exitEditing();}});}}, /**
	    * Initializes "mousemove" event handler
	    */initMouseMoveHandler:function initMouseMoveHandler(){var _this=this;this.canvas.on('mouse:move',function(options){if(!_this.__isMousedown || !_this.isEditing){return;}var newSelectionStart=_this.getSelectionStartFromPointer(options.e);if(newSelectionStart >= _this.__selectionStartOnMouseDown){_this.setSelectionStart(_this.__selectionStartOnMouseDown);_this.setSelectionEnd(newSelectionStart);}else {_this.setSelectionStart(newSelectionStart);_this.setSelectionEnd(_this.__selectionStartOnMouseDown);}});}, /**
	     * @private
	     */_setEditingProps:function _setEditingProps(){this.hoverCursor = 'text';if(this.canvas){this.canvas.defaultCursor = this.canvas.moveCursor = 'text';}this.borderColor = this.editingBorderColor;this.hasControls = this.selectable = false;this.lockMovementX = this.lockMovementY = true;}, /**
	     * @private
	     */_updateTextarea:function _updateTextarea(){if(!this.hiddenTextarea){return;}this.hiddenTextarea.value = this.text;this.hiddenTextarea.selectionStart = this.selectionStart;this.hiddenTextarea.selectionEnd = this.selectionEnd;}, /**
	     * @private
	     */_saveEditingProps:function _saveEditingProps(){this._savedProps = {hasControls:this.hasControls,borderColor:this.borderColor,lockMovementX:this.lockMovementX,lockMovementY:this.lockMovementY,hoverCursor:this.hoverCursor,defaultCursor:this.canvas && this.canvas.defaultCursor,moveCursor:this.canvas && this.canvas.moveCursor};}, /**
	     * @private
	     */_restoreEditingProps:function _restoreEditingProps(){if(!this._savedProps){return;}this.hoverCursor = this._savedProps.overCursor;this.hasControls = this._savedProps.hasControls;this.borderColor = this._savedProps.borderColor;this.lockMovementX = this._savedProps.lockMovementX;this.lockMovementY = this._savedProps.lockMovementY;if(this.canvas){this.canvas.defaultCursor = this._savedProps.defaultCursor;this.canvas.moveCursor = this._savedProps.moveCursor;}}, /**
	     * Exits from editing state
	     * @return {fabric.IText} thisArg
	     * @chainable
	     */exitEditing:function exitEditing(){this.selected = false;this.isEditing = false;this.selectable = true;this.selectionEnd = this.selectionStart;this.hiddenTextarea && this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);this.hiddenTextarea = null;this.abortCursorAnimation();this._restoreEditingProps();this._currentCursorOpacity = 0;this.fire('editing:exited');this.canvas && this.canvas.fire('text:editing:exited',{target:this});return this;}, /**
	     * @private
	     */_removeExtraneousStyles:function _removeExtraneousStyles(){for(var prop in this.styles) {if(!this._textLines[prop]){delete this.styles[prop];}}}, /**
	     * @private
	     */_removeCharsFromTo:function _removeCharsFromTo(start,end){var i=end;while(i !== start) {var prevIndex=this.get2DCursorLocation(i).charIndex;i--;var index=this.get2DCursorLocation(i).charIndex,isNewline=index > prevIndex;if(isNewline){this.removeStyleObject(isNewline,i + 1);}else {this.removeStyleObject(this.get2DCursorLocation(i).charIndex === 0,i);}}this.text = this.text.slice(0,start) + this.text.slice(end);this._clearCache();}, /**
	     * Inserts a character where cursor is (replacing selection if one exists)
	     * @param {String} _chars Characters to insert
	     */insertChars:function insertChars(_chars,useCopiedStyle){var isEndOfLine=this.text.slice(this.selectionStart,this.selectionStart + 1) === '\n';this.text = this.text.slice(0,this.selectionStart) + _chars + this.text.slice(this.selectionEnd);if(this.selectionStart === this.selectionEnd){this.insertStyleObjects(_chars,isEndOfLine,useCopiedStyle);} // else if (this.selectionEnd - this.selectionStart > 1) {
	// TODO: replace styles properly
	// console.log('replacing MORE than 1 char');
	// }
	this.setSelectionStart(this.selectionStart + _chars.length);this.setSelectionEnd(this.selectionStart);this._clearCache();this.canvas && this.canvas.renderAll();this.setCoords();this.fire('changed');this.canvas && this.canvas.fire('text:changed',{target:this});}, /**
	     * Inserts new style object
	     * @param {Number} lineIndex Index of a line
	     * @param {Number} charIndex Index of a char
	     * @param {Boolean} isEndOfLine True if it's end of line
	     */insertNewlineStyleObject:function insertNewlineStyleObject(lineIndex,charIndex,isEndOfLine){this.shiftLineStyles(lineIndex,+1);if(!this.styles[lineIndex + 1]){this.styles[lineIndex + 1] = {};}var currentCharStyle=this.styles[lineIndex][charIndex - 1],newLineStyles={}; // if there's nothing after cursor,
	// we clone current char style onto the next (otherwise empty) line
	if(isEndOfLine){newLineStyles[0] = clone(currentCharStyle);this.styles[lineIndex + 1] = newLineStyles;} // otherwise we clone styles of all chars
	// after cursor onto the next line, from the beginning
	else {for(var index in this.styles[lineIndex]) {if(parseInt(index,10) >= charIndex){newLineStyles[parseInt(index,10) - charIndex] = this.styles[lineIndex][index]; // remove lines from the previous line since they're on a new line now
	delete this.styles[lineIndex][index];}}this.styles[lineIndex + 1] = newLineStyles;}this._clearCache();}, /**
	     * Inserts style object for a given line/char index
	     * @param {Number} lineIndex Index of a line
	     * @param {Number} charIndex Index of a char
	     * @param {Object} [style] Style object to insert, if given
	     */insertCharStyleObject:function insertCharStyleObject(lineIndex,charIndex,style){var currentLineStyles=this.styles[lineIndex],currentLineStylesCloned=clone(currentLineStyles);if(charIndex === 0 && !style){charIndex = 1;} // shift all char styles by 1 forward
	// 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4
	for(var index in currentLineStylesCloned) {var numericIndex=parseInt(index,10);if(numericIndex >= charIndex){currentLineStyles[numericIndex + 1] = currentLineStylesCloned[numericIndex]; //delete currentLineStyles[index];
	}}this.styles[lineIndex][charIndex] = style || clone(currentLineStyles[charIndex - 1]);this._clearCache();}, /**
	     * Inserts style object(s)
	     * @param {String} _chars Characters at the location where style is inserted
	     * @param {Boolean} isEndOfLine True if it's end of line
	     * @param {Boolean} [useCopiedStyle] Style to insert
	     */insertStyleObjects:function insertStyleObjects(_chars,isEndOfLine,useCopiedStyle){ // removed shortcircuit over isEmptyStyles
	var cursorLocation=this.get2DCursorLocation(),lineIndex=cursorLocation.lineIndex,charIndex=cursorLocation.charIndex;if(!this.styles[lineIndex]){this.styles[lineIndex] = {};}if(_chars === '\n'){this.insertNewlineStyleObject(lineIndex,charIndex,isEndOfLine);}else {if(useCopiedStyle){this._insertStyles(this.copiedStyles);}else { // TODO: support multiple style insertion if _chars.length > 1
	this.insertCharStyleObject(lineIndex,charIndex);}}}, /**
	     * @private
	     */_insertStyles:function _insertStyles(styles){for(var i=0,len=styles.length;i < len;i++) {var cursorLocation=this.get2DCursorLocation(this.selectionStart + i),lineIndex=cursorLocation.lineIndex,charIndex=cursorLocation.charIndex;this.insertCharStyleObject(lineIndex,charIndex,styles[i]);}}, /**
	     * Shifts line styles up or down
	     * @param {Number} lineIndex Index of a line
	     * @param {Number} offset Can be -1 or +1
	     */shiftLineStyles:function shiftLineStyles(lineIndex,offset){ // shift all line styles by 1 upward
	var clonedStyles=clone(this.styles);for(var line in this.styles) {var numericLine=parseInt(line,10);if(numericLine > lineIndex){this.styles[numericLine + offset] = clonedStyles[numericLine];}}}, /**
	     * Removes style object
	     * @param {Boolean} isBeginningOfLine True if cursor is at the beginning of line
	     * @param {Number} [index] Optional index. When not given, current selectionStart is used.
	     */removeStyleObject:function removeStyleObject(isBeginningOfLine,index){var cursorLocation=this.get2DCursorLocation(index),lineIndex=cursorLocation.lineIndex,charIndex=cursorLocation.charIndex;if(isBeginningOfLine){var textOnPreviousLine=this._textLines[lineIndex - 1],newCharIndexOnPrevLine=textOnPreviousLine?textOnPreviousLine.length:0;if(!this.styles[lineIndex - 1]){this.styles[lineIndex - 1] = {};}for(charIndex in this.styles[lineIndex]) {this.styles[lineIndex - 1][parseInt(charIndex,10) + newCharIndexOnPrevLine] = this.styles[lineIndex][charIndex];}this.shiftLineStyles(lineIndex,-1);}else {var currentLineStyles=this.styles[lineIndex];if(currentLineStyles){var offset=this.selectionStart === this.selectionEnd?-1:0;delete currentLineStyles[charIndex + offset]; // console.log('deleting', lineIndex, charIndex + offset);
	}var currentLineStylesCloned=clone(currentLineStyles); // shift all styles by 1 backwards
	for(var i in currentLineStylesCloned) {var numericIndex=parseInt(i,10);if(numericIndex >= charIndex && numericIndex !== 0){currentLineStyles[numericIndex - 1] = currentLineStylesCloned[numericIndex];delete currentLineStyles[numericIndex];}}}}, /**
	     * Inserts new line
	     */insertNewline:function insertNewline(){this.insertChars('\n');}});})();fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */{ /**
	   * Initializes "dbclick" event handler
	   */initDoubleClickSimulation:function initDoubleClickSimulation(){ // for double click
	this.__lastClickTime = +new Date(); // for triple click
	this.__lastLastClickTime = +new Date();this.__lastPointer = {};this.on('mousedown',this.onMouseDown.bind(this));},onMouseDown:function onMouseDown(options){this.__newClickTime = +new Date();var newPointer=this.canvas.getPointer(options.e);if(this.isTripleClick(newPointer)){this.fire('tripleclick',options);this._stopEvent(options.e);}else if(this.isDoubleClick(newPointer)){this.fire('dblclick',options);this._stopEvent(options.e);}this.__lastLastClickTime = this.__lastClickTime;this.__lastClickTime = this.__newClickTime;this.__lastPointer = newPointer;this.__lastIsEditing = this.isEditing;this.__lastSelected = this.selected;},isDoubleClick:function isDoubleClick(newPointer){return this.__newClickTime - this.__lastClickTime < 500 && this.__lastPointer.x === newPointer.x && this.__lastPointer.y === newPointer.y && this.__lastIsEditing;},isTripleClick:function isTripleClick(newPointer){return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === newPointer.x && this.__lastPointer.y === newPointer.y;}, /**
	   * @private
	   */_stopEvent:function _stopEvent(e){e.preventDefault && e.preventDefault();e.stopPropagation && e.stopPropagation();}, /**
	   * Initializes event handlers related to cursor or selection
	   */initCursorSelectionHandlers:function initCursorSelectionHandlers(){this.initSelectedHandler();this.initMousedownHandler();this.initMouseupHandler();this.initClicks();}, /**
	   * Initializes double and triple click event handlers
	   */initClicks:function initClicks(){this.on('dblclick',function(options){this.selectWord(this.getSelectionStartFromPointer(options.e));});this.on('tripleclick',function(options){this.selectLine(this.getSelectionStartFromPointer(options.e));});}, /**
	   * Initializes "mousedown" event handler
	   */initMousedownHandler:function initMousedownHandler(){this.on('mousedown',function(options){var pointer=this.canvas.getPointer(options.e);this.__mousedownX = pointer.x;this.__mousedownY = pointer.y;this.__isMousedown = true;if(this.hiddenTextarea && this.canvas){this.canvas.wrapperEl.appendChild(this.hiddenTextarea);}if(this.selected){this.setCursorByClick(options.e);}if(this.isEditing){this.__selectionStartOnMouseDown = this.selectionStart;this.initDelayedCursor(true);}});}, /**
	   * @private
	   */_isObjectMoved:function _isObjectMoved(e){var pointer=this.canvas.getPointer(e);return this.__mousedownX !== pointer.x || this.__mousedownY !== pointer.y;}, /**
	   * Initializes "mouseup" event handler
	   */initMouseupHandler:function initMouseupHandler(){this.on('mouseup',function(options){this.__isMousedown = false;if(this._isObjectMoved(options.e)){return;}if(this.__lastSelected){this.enterEditing();this.initDelayedCursor(true);}this.selected = true;});}, /**
	   * Changes cursor location in a text depending on passed pointer (x/y) object
	   * @param {Event} e Event object
	   */setCursorByClick:function setCursorByClick(e){var newSelectionStart=this.getSelectionStartFromPointer(e);if(e.shiftKey){if(newSelectionStart < this.selectionStart){this.setSelectionEnd(this.selectionStart);this.setSelectionStart(newSelectionStart);}else {this.setSelectionEnd(newSelectionStart);}}else {this.setSelectionStart(newSelectionStart);this.setSelectionEnd(newSelectionStart);}}, /**
	   * @private
	   * @param {Event} e Event object
	   * @return {Object} Coordinates of a pointer (x, y)
	   */_getLocalRotatedPointer:function _getLocalRotatedPointer(e){var pointer=this.canvas.getPointer(e),pClicked=new fabric.Point(pointer.x,pointer.y),pLeftTop=new fabric.Point(this.left,this.top),rotated=fabric.util.rotatePoint(pClicked,pLeftTop,fabric.util.degreesToRadians(-this.angle));return this.getLocalPointer(e,rotated);}, /**
	   * Returns index of a character corresponding to where an object was clicked
	   * @param {Event} e Event object
	   * @return {Number} Index of a character
	   */getSelectionStartFromPointer:function getSelectionStartFromPointer(e){var mouseOffset=this._getLocalRotatedPointer(e),prevWidth=0,width=0,height=0,charIndex=0,newSelectionStart,line;for(var i=0,len=this._textLines.length;i < len;i++) {line = this._textLines[i].split('');height += this._getHeightOfLine(this.ctx,i) * this.scaleY;var widthOfLine=this._getLineWidth(this.ctx,i),lineLeftOffset=this._getLineLeftOffset(widthOfLine);width = lineLeftOffset * this.scaleX;if(this.flipX){ // when oject is horizontally flipped we reverse chars
	this._textLines[i] = line.reverse().join('');}for(var j=0,jlen=line.length;j < jlen;j++) {var _char=line[j];prevWidth = width;width += this._getWidthOfChar(this.ctx,_char,i,this.flipX?jlen - j:j) * this.scaleX;if(height <= mouseOffset.y || width <= mouseOffset.x){charIndex++;continue;}return this._getNewSelectionStartFromOffset(mouseOffset,prevWidth,width,charIndex + i,jlen);}if(mouseOffset.y < height){return this._getNewSelectionStartFromOffset(mouseOffset,prevWidth,width,charIndex + i,jlen);}} // clicked somewhere after all chars, so set at the end
	if(typeof newSelectionStart === 'undefined'){return this.text.length;}}, /**
	   * @private
	   */_getNewSelectionStartFromOffset:function _getNewSelectionStartFromOffset(mouseOffset,prevWidth,width,index,jlen){var distanceBtwLastCharAndCursor=mouseOffset.x - prevWidth,distanceBtwNextCharAndCursor=width - mouseOffset.x,offset=distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor?0:1,newSelectionStart=index + offset; // if object is horizontally flipped, mirror cursor location from the end
	if(this.flipX){newSelectionStart = jlen - newSelectionStart;}if(newSelectionStart > this.text.length){newSelectionStart = this.text.length;}return newSelectionStart;}});fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */{ /**
	   * Initializes hidden textarea (needed to bring up keyboard in iOS)
	   */initHiddenTextarea:function initHiddenTextarea(){this.hiddenTextarea = fabric.document.createElement('textarea');this.hiddenTextarea.setAttribute('autocapitalize','off');this.hiddenTextarea.style.cssText = 'position: fixed; bottom: 20px; left: 0px; opacity: 0;' + ' width: 0px; height: 0px; z-index: -999;';fabric.document.body.appendChild(this.hiddenTextarea);fabric.util.addListener(this.hiddenTextarea,'keydown',this.onKeyDown.bind(this));fabric.util.addListener(this.hiddenTextarea,'keypress',this.onKeyPress.bind(this));fabric.util.addListener(this.hiddenTextarea,'copy',this.copy.bind(this));fabric.util.addListener(this.hiddenTextarea,'paste',this.paste.bind(this));if(!this._clickHandlerInitialized && this.canvas){fabric.util.addListener(this.canvas.upperCanvasEl,'click',this.onClick.bind(this));this._clickHandlerInitialized = true;}}, /**
	   * @private
	   */_keysMap:{8:'removeChars',9:'exitEditing',27:'exitEditing',13:'insertNewline',33:'moveCursorUp',34:'moveCursorDown',35:'moveCursorRight',36:'moveCursorLeft',37:'moveCursorLeft',38:'moveCursorUp',39:'moveCursorRight',40:'moveCursorDown',46:'forwardDelete'}, /**
	   * @private
	   */_ctrlKeysMap:{65:'selectAll',88:'cut'},onClick:function onClick(){ // No need to trigger click event here, focus is enough to have the keyboard appear on Android
	this.hiddenTextarea && this.hiddenTextarea.focus();}, /**
	   * Handles keyup event
	   * @param {Event} e Event object
	   */onKeyDown:function onKeyDown(e){if(!this.isEditing){return;}if(e.keyCode in this._keysMap){this[this._keysMap[e.keyCode]](e);}else if(e.keyCode in this._ctrlKeysMap && (e.ctrlKey || e.metaKey)){this[this._ctrlKeysMap[e.keyCode]](e);}else {return;}e.stopImmediatePropagation();e.preventDefault();this.canvas && this.canvas.renderAll();}, /**
	   * Forward delete
	   */forwardDelete:function forwardDelete(e){if(this.selectionStart === this.selectionEnd){this.moveCursorRight(e);}this.removeChars(e);}, /**
	   * Copies selected text
	   * @param {Event} e Event object
	   */copy:function copy(e){var selectedText=this.getSelectedText(),clipboardData=this._getClipboardData(e); // Check for backward compatibility with old browsers
	if(clipboardData){clipboardData.setData('text',selectedText);}this.copiedText = selectedText;this.copiedStyles = this.getSelectionStyles(this.selectionStart,this.selectionEnd);}, /**
	   * Pastes text
	   * @param {Event} e Event object
	   */paste:function paste(e){var copiedText=null,clipboardData=this._getClipboardData(e); // Check for backward compatibility with old browsers
	if(clipboardData){copiedText = clipboardData.getData('text');}else {copiedText = this.copiedText;}if(copiedText){this.insertChars(copiedText,true);}}, /**
	   * Cuts text
	   * @param {Event} e Event object
	   */cut:function cut(e){if(this.selectionStart === this.selectionEnd){return;}this.copy();this.removeChars(e);}, /**
	   * @private
	   * @param {Event} e Event object
	   * @return {Object} Clipboard data object
	   */_getClipboardData:function _getClipboardData(e){return e && (e.clipboardData || fabric.window.clipboardData);}, /**
	   * Handles keypress event
	   * @param {Event} e Event object
	   */onKeyPress:function onKeyPress(e){if(!this.isEditing || e.metaKey || e.ctrlKey){return;}if(e.which !== 0){this.insertChars(String.fromCharCode(e.which));}e.stopPropagation();}, /**
	   * Gets start offset of a selection
	   * @param {Event} e Event object
	   * @param {Boolean} isRight
	   * @return {Number}
	   */getDownCursorOffset:function getDownCursorOffset(e,isRight){var selectionProp=isRight?this.selectionEnd:this.selectionStart,_char,lineLeftOffset,textBeforeCursor=this.text.slice(0,selectionProp),textAfterCursor=this.text.slice(selectionProp),textOnSameLineBeforeCursor=textBeforeCursor.slice(textBeforeCursor.lastIndexOf('\n') + 1),textOnSameLineAfterCursor=textAfterCursor.match(/(.*)\n?/)[1],textOnNextLine=(textAfterCursor.match(/.*\n(.*)\n?/) || {})[1] || '',cursorLocation=this.get2DCursorLocation(selectionProp); // if on last line, down cursor goes to end of line
	if(cursorLocation.lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34){ // move to the end of a text
	return this.text.length - selectionProp;}var widthOfSameLineBeforeCursor=this._getLineWidth(this.ctx,cursorLocation.lineIndex);lineLeftOffset = this._getLineLeftOffset(widthOfSameLineBeforeCursor);var widthOfCharsOnSameLineBeforeCursor=lineLeftOffset,lineIndex=cursorLocation.lineIndex;for(var i=0,len=textOnSameLineBeforeCursor.length;i < len;i++) {_char = textOnSameLineBeforeCursor[i];widthOfCharsOnSameLineBeforeCursor += this._getWidthOfChar(this.ctx,_char,lineIndex,i);}var indexOnNextLine=this._getIndexOnNextLine(cursorLocation,textOnNextLine,widthOfCharsOnSameLineBeforeCursor);return textOnSameLineAfterCursor.length + 1 + indexOnNextLine;}, /**
	   * @private
	   */_getIndexOnNextLine:function _getIndexOnNextLine(cursorLocation,textOnNextLine,widthOfCharsOnSameLineBeforeCursor){var lineIndex=cursorLocation.lineIndex + 1,widthOfNextLine=this._getLineWidth(this.ctx,lineIndex),lineLeftOffset=this._getLineLeftOffset(widthOfNextLine),widthOfCharsOnNextLine=lineLeftOffset,indexOnNextLine=0,foundMatch;for(var j=0,jlen=textOnNextLine.length;j < jlen;j++) {var _char=textOnNextLine[j],widthOfChar=this._getWidthOfChar(this.ctx,_char,lineIndex,j);widthOfCharsOnNextLine += widthOfChar;if(widthOfCharsOnNextLine > widthOfCharsOnSameLineBeforeCursor){foundMatch = true;var leftEdge=widthOfCharsOnNextLine - widthOfChar,rightEdge=widthOfCharsOnNextLine,offsetFromLeftEdge=Math.abs(leftEdge - widthOfCharsOnSameLineBeforeCursor),offsetFromRightEdge=Math.abs(rightEdge - widthOfCharsOnSameLineBeforeCursor);indexOnNextLine = offsetFromRightEdge < offsetFromLeftEdge?j + 1:j;break;}} // reached end
	if(!foundMatch){indexOnNextLine = textOnNextLine.length;}return indexOnNextLine;}, /**
	   * Moves cursor down
	   * @param {Event} e Event object
	   */moveCursorDown:function moveCursorDown(e){this.abortCursorAnimation();this._currentCursorOpacity = 1;var offset=this.getDownCursorOffset(e,this._selectionDirection === 'right');if(e.shiftKey){this.moveCursorDownWithShift(offset);}else {this.moveCursorDownWithoutShift(offset);}this.initDelayedCursor();}, /**
	   * Moves cursor down without keeping selection
	   * @param {Number} offset
	   */moveCursorDownWithoutShift:function moveCursorDownWithoutShift(offset){this._selectionDirection = 'right';this.setSelectionStart(this.selectionStart + offset);this.setSelectionEnd(this.selectionStart);}, /**
	   * private
	   */swapSelectionPoints:function swapSelectionPoints(){var swapSel=this.selectionEnd;this.setSelectionEnd(this.selectionStart);this.setSelectionStart(swapSel);}, /**
	   * Moves cursor down while keeping selection
	   * @param {Number} offset
	   */moveCursorDownWithShift:function moveCursorDownWithShift(offset){if(this.selectionEnd === this.selectionStart){this._selectionDirection = 'right';}if(this._selectionDirection === 'right'){this.setSelectionEnd(this.selectionEnd + offset);}else {this.setSelectionStart(this.selectionStart + offset);}if(this.selectionEnd < this.selectionStart && this._selectionDirection === 'left'){this.swapSelectionPoints();this._selectionDirection = 'right';}if(this.selectionEnd > this.text.length){this.setSelectionEnd(this.text.length);}}, /**
	   * @param {Event} e Event object
	   * @param {Boolean} isRight
	   * @return {Number}
	   */getUpCursorOffset:function getUpCursorOffset(e,isRight){var selectionProp=isRight?this.selectionEnd:this.selectionStart,cursorLocation=this.get2DCursorLocation(selectionProp); // if on first line, up cursor goes to start of line
	if(cursorLocation.lineIndex === 0 || e.metaKey || e.keyCode === 33){return selectionProp;}var textBeforeCursor=this.text.slice(0,selectionProp),textOnSameLineBeforeCursor=textBeforeCursor.slice(textBeforeCursor.lastIndexOf('\n') + 1),textOnPreviousLine=(textBeforeCursor.match(/\n?(.*)\n.*$/) || {})[1] || '',_char,widthOfSameLineBeforeCursor=this._getLineWidth(this.ctx,cursorLocation.lineIndex),lineLeftOffset=this._getLineLeftOffset(widthOfSameLineBeforeCursor),widthOfCharsOnSameLineBeforeCursor=lineLeftOffset,lineIndex=cursorLocation.lineIndex;for(var i=0,len=textOnSameLineBeforeCursor.length;i < len;i++) {_char = textOnSameLineBeforeCursor[i];widthOfCharsOnSameLineBeforeCursor += this._getWidthOfChar(this.ctx,_char,lineIndex,i);}var indexOnPrevLine=this._getIndexOnPrevLine(cursorLocation,textOnPreviousLine,widthOfCharsOnSameLineBeforeCursor);return textOnPreviousLine.length - indexOnPrevLine + textOnSameLineBeforeCursor.length;}, /**
	   * @private
	   */_getIndexOnPrevLine:function _getIndexOnPrevLine(cursorLocation,textOnPreviousLine,widthOfCharsOnSameLineBeforeCursor){var lineIndex=cursorLocation.lineIndex - 1,widthOfPreviousLine=this._getLineWidth(this.ctx,lineIndex),lineLeftOffset=this._getLineLeftOffset(widthOfPreviousLine),widthOfCharsOnPreviousLine=lineLeftOffset,indexOnPrevLine=0,foundMatch;for(var j=0,jlen=textOnPreviousLine.length;j < jlen;j++) {var _char=textOnPreviousLine[j],widthOfChar=this._getWidthOfChar(this.ctx,_char,lineIndex,j);widthOfCharsOnPreviousLine += widthOfChar;if(widthOfCharsOnPreviousLine > widthOfCharsOnSameLineBeforeCursor){foundMatch = true;var leftEdge=widthOfCharsOnPreviousLine - widthOfChar,rightEdge=widthOfCharsOnPreviousLine,offsetFromLeftEdge=Math.abs(leftEdge - widthOfCharsOnSameLineBeforeCursor),offsetFromRightEdge=Math.abs(rightEdge - widthOfCharsOnSameLineBeforeCursor);indexOnPrevLine = offsetFromRightEdge < offsetFromLeftEdge?j:j - 1;break;}} // reached end
	if(!foundMatch){indexOnPrevLine = textOnPreviousLine.length - 1;}return indexOnPrevLine;}, /**
	   * Moves cursor up
	   * @param {Event} e Event object
	   */moveCursorUp:function moveCursorUp(e){this.abortCursorAnimation();this._currentCursorOpacity = 1;var offset=this.getUpCursorOffset(e,this._selectionDirection === 'right');if(e.shiftKey){this.moveCursorUpWithShift(offset);}else {this.moveCursorUpWithoutShift(offset);}this.initDelayedCursor();}, /**
	   * Moves cursor up with shift
	   * @param {Number} offset
	   */moveCursorUpWithShift:function moveCursorUpWithShift(offset){if(this.selectionEnd === this.selectionStart){this._selectionDirection = 'left';}if(this._selectionDirection === 'right'){this.setSelectionEnd(this.selectionEnd - offset);}else {this.setSelectionStart(this.selectionStart - offset);}if(this.selectionEnd < this.selectionStart && this._selectionDirection === 'right'){this.swapSelectionPoints();this._selectionDirection = 'left';}}, /**
	   * Moves cursor up without shift
	   * @param {Number} offset
	   */moveCursorUpWithoutShift:function moveCursorUpWithoutShift(offset){if(this.selectionStart === this.selectionEnd){this.setSelectionStart(this.selectionStart - offset);}this.setSelectionEnd(this.selectionStart);this._selectionDirection = 'left';}, /**
	   * Moves cursor left
	   * @param {Event} e Event object
	   */moveCursorLeft:function moveCursorLeft(e){if(this.selectionStart === 0 && this.selectionEnd === 0){return;}this.abortCursorAnimation();this._currentCursorOpacity = 1;if(e.shiftKey){this.moveCursorLeftWithShift(e);}else {this.moveCursorLeftWithoutShift(e);}this.initDelayedCursor();}, /**
	   * @private
	   */_move:function _move(e,prop,direction){var propMethod=prop === 'selectionStart'?'setSelectionStart':'setSelectionEnd';if(e.altKey){this[propMethod](this['findWordBoundary' + direction](this[prop]));}else if(e.metaKey || e.keyCode === 35 || e.keyCode === 36){this[propMethod](this['findLineBoundary' + direction](this[prop]));}else {this[propMethod](this[prop] + (direction === 'Left'?-1:1));}}, /**
	   * @private
	   */_moveLeft:function _moveLeft(e,prop){this._move(e,prop,'Left');}, /**
	   * @private
	   */_moveRight:function _moveRight(e,prop){this._move(e,prop,'Right');}, /**
	   * Moves cursor left without keeping selection
	   * @param {Event} e
	   */moveCursorLeftWithoutShift:function moveCursorLeftWithoutShift(e){this._selectionDirection = 'left'; // only move cursor when there is no selection,
	// otherwise we discard it, and leave cursor on same place
	if(this.selectionEnd === this.selectionStart){this._moveLeft(e,'selectionStart');}this.setSelectionEnd(this.selectionStart);}, /**
	   * Moves cursor left while keeping selection
	   * @param {Event} e
	   */moveCursorLeftWithShift:function moveCursorLeftWithShift(e){if(this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd){this._moveLeft(e,'selectionEnd');}else {this._selectionDirection = 'left';this._moveLeft(e,'selectionStart'); // increase selection by one if it's a newline
	if(this.text.charAt(this.selectionStart) === '\n'){this.setSelectionStart(this.selectionStart - 1);}}}, /**
	   * Moves cursor right
	   * @param {Event} e Event object
	   */moveCursorRight:function moveCursorRight(e){if(this.selectionStart >= this.text.length && this.selectionEnd >= this.text.length){return;}this.abortCursorAnimation();this._currentCursorOpacity = 1;if(e.shiftKey){this.moveCursorRightWithShift(e);}else {this.moveCursorRightWithoutShift(e);}this.initDelayedCursor();}, /**
	   * Moves cursor right while keeping selection
	   * @param {Event} e
	   */moveCursorRightWithShift:function moveCursorRightWithShift(e){if(this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd){this._moveRight(e,'selectionStart');}else {this._selectionDirection = 'right';this._moveRight(e,'selectionEnd'); // increase selection by one if it's a newline
	if(this.text.charAt(this.selectionEnd - 1) === '\n'){this.setSelectionEnd(this.selectionEnd + 1);}}}, /**
	   * Moves cursor right without keeping selection
	   * @param {Event} e Event object
	   */moveCursorRightWithoutShift:function moveCursorRightWithoutShift(e){this._selectionDirection = 'right';if(this.selectionStart === this.selectionEnd){this._moveRight(e,'selectionStart');this.setSelectionEnd(this.selectionStart);}else {this.setSelectionEnd(this.selectionEnd + this.getNumNewLinesInSelectedText());this.setSelectionStart(this.selectionEnd);}}, /**
	   * Removes characters selected by selection
	   * @param {Event} e Event object
	   */removeChars:function removeChars(e){if(this.selectionStart === this.selectionEnd){this._removeCharsNearCursor(e);}else {this._removeCharsFromTo(this.selectionStart,this.selectionEnd);}this.setSelectionEnd(this.selectionStart);this._removeExtraneousStyles();this._clearCache();this.canvas && this.canvas.renderAll();this.setCoords();this.fire('changed');this.canvas && this.canvas.fire('text:changed',{target:this});}, /**
	   * @private
	   * @param {Event} e Event object
	   */_removeCharsNearCursor:function _removeCharsNearCursor(e){if(this.selectionStart !== 0){if(e.metaKey){ // remove all till the start of current line
	var leftLineBoundary=this.findLineBoundaryLeft(this.selectionStart);this._removeCharsFromTo(leftLineBoundary,this.selectionStart);this.setSelectionStart(leftLineBoundary);}else if(e.altKey){ // remove all till the start of current word
	var leftWordBoundary=this.findWordBoundaryLeft(this.selectionStart);this._removeCharsFromTo(leftWordBoundary,this.selectionStart);this.setSelectionStart(leftWordBoundary);}else {var isBeginningOfLine=this.text.slice(this.selectionStart - 1,this.selectionStart) === '\n';this.removeStyleObject(isBeginningOfLine);this.setSelectionStart(this.selectionStart - 1);this.text = this.text.slice(0,this.selectionStart) + this.text.slice(this.selectionStart + 1);}}}}); /* _TO_SVG_START_ */fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */{ /**
	   * @private
	   */_setSVGTextLineText:function _setSVGTextLineText(lineIndex,textSpans,height,textLeftOffset,textTopOffset,textBgRects){if(!this.styles[lineIndex]){this.callSuper('_setSVGTextLineText',lineIndex,textSpans,height,textLeftOffset,textTopOffset);}else {this._setSVGTextLineChars(lineIndex,textSpans,height,textLeftOffset,textBgRects);}}, /**
	   * @private
	   */_setSVGTextLineChars:function _setSVGTextLineChars(lineIndex,textSpans,height,textLeftOffset,textBgRects){var chars=this._textLines[lineIndex].split(''),charOffset=0,lineLeftOffset=this._getSVGLineLeftOffset(lineIndex) - this.width / 2,lineOffset=this._getSVGLineTopOffset(lineIndex),heightOfLine=this._getHeightOfLine(this.ctx,lineIndex);for(var i=0,len=chars.length;i < len;i++) {var styleDecl=this.styles[lineIndex][i] || {};textSpans.push(this._createTextCharSpan(chars[i],styleDecl,lineLeftOffset,lineOffset.lineTop + lineOffset.offset,charOffset));var charWidth=this._getWidthOfChar(this.ctx,chars[i],lineIndex,i);if(styleDecl.textBackgroundColor){textBgRects.push(this._createTextCharBg(styleDecl,lineLeftOffset,lineOffset.lineTop,heightOfLine,charWidth,charOffset));}charOffset += charWidth;}}, /**
	   * @private
	   */_getSVGLineLeftOffset:function _getSVGLineLeftOffset(lineIndex){return fabric.util.toFixed(this._getLineLeftOffset(this.__lineWidths[lineIndex]),2);}, /**
	   * @private
	   */_getSVGLineTopOffset:function _getSVGLineTopOffset(lineIndex){var lineTopOffset=0,lastHeight=0;for(var j=0;j < lineIndex;j++) {lineTopOffset += this._getHeightOfLine(this.ctx,j);}lastHeight = this._getHeightOfLine(this.ctx,j);return {lineTop:lineTopOffset,offset:(this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)};}, /**
	   * @private
	   */_createTextCharBg:function _createTextCharBg(styleDecl,lineLeftOffset,lineTopOffset,heightOfLine,charWidth,charOffset){return [ //jscs:disable validateIndentation
	'<rect fill="',styleDecl.textBackgroundColor,'" x="',lineLeftOffset + charOffset,'" y="',lineTopOffset - this.height / 2,'" width="',charWidth,'" height="',heightOfLine / this.lineHeight,'"></rect>' //jscs:enable validateIndentation
	].join('');}, /**
	   * @private
	   */_createTextCharSpan:function _createTextCharSpan(_char,styleDecl,lineLeftOffset,lineTopOffset,charOffset){var fillStyles=this.getSvgStyles.call(fabric.util.object.extend({visible:true,fill:this.fill,stroke:this.stroke,type:'text'},styleDecl));return [ //jscs:disable validateIndentation
	'<tspan x="',lineLeftOffset + charOffset,'" y="',lineTopOffset - this.height / 2,'" ',styleDecl.fontFamily?'font-family="' + styleDecl.fontFamily.replace(/"/g,'\'') + '" ':'',styleDecl.fontSize?'font-size="' + styleDecl.fontSize + '" ':'',styleDecl.fontStyle?'font-style="' + styleDecl.fontStyle + '" ':'',styleDecl.fontWeight?'font-weight="' + styleDecl.fontWeight + '" ':'',styleDecl.textDecoration?'text-decoration="' + styleDecl.textDecoration + '" ':'','style="',fillStyles,'">',fabric.util.string.escapeXml(_char),'</tspan>' //jscs:enable validateIndentation
	].join('');}}); /* _TO_SVG_END_ */(function(){if(typeof document !== 'undefined' && typeof window !== 'undefined'){return;}var DOMParser=__webpack_require__(649).DOMParser,URL=__webpack_require__(13),HTTP=__webpack_require__(21),HTTPS=__webpack_require__(22),Canvas=__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"canvas\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),Image=__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"canvas\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())).Image; /** @private */function request(url,encoding,callback){var oURL=URL.parse(url); // detect if http or https is used
	if(!oURL.port){oURL.port = oURL.protocol.indexOf('https:') === 0?443:80;} // assign request handler based on protocol
	var reqHandler=oURL.protocol.indexOf('https:') === 0?HTTPS:HTTP,req=reqHandler.request({hostname:oURL.hostname,port:oURL.port,path:oURL.path,method:'GET'},function(response){var body='';if(encoding){response.setEncoding(encoding);}response.on('end',function(){callback(body);});response.on('data',function(chunk){if(response.statusCode === 200){body += chunk;}});});req.on('error',function(err){if(err.errno === process.ECONNREFUSED){fabric.log('ECONNREFUSED: connection refused to ' + oURL.hostname + ':' + oURL.port);}else {fabric.log(err.message);}});req.end();} /** @private */function requestFs(path,callback){var fs=__webpack_require__(11);fs.readFile(path,function(err,data){if(err){fabric.log(err);throw err;}else {callback(data);}});}fabric.util.loadImage = function(url,callback,context){function createImageAndCallBack(data){img.src = new Buffer(data,'binary'); // preserving original url, which seems to be lost in node-canvas
	img._src = url;callback && callback.call(context,img);}var img=new Image();if(url && (url instanceof Buffer || url.indexOf('data') === 0)){img.src = img._src = url;callback && callback.call(context,img);}else if(url && url.indexOf('http') !== 0){requestFs(url,createImageAndCallBack);}else if(url){request(url,'binary',createImageAndCallBack);}else {callback && callback.call(context,url);}};fabric.loadSVGFromURL = function(url,callback,reviver){url = url.replace(/^\n\s*/,'').replace(/\?.*$/,'').trim();if(url.indexOf('http') !== 0){requestFs(url,function(body){fabric.loadSVGFromString(body.toString(),callback,reviver);});}else {request(url,'',function(body){fabric.loadSVGFromString(body,callback,reviver);});}};fabric.loadSVGFromString = function(string,callback,reviver){var doc=new DOMParser().parseFromString(string);fabric.parseSVGDocument(doc.documentElement,function(results,options){callback && callback(results,options);},reviver);};fabric.util.getScript = function(url,callback){request(url,'',function(body){eval(body);callback && callback();});};fabric.Image.fromObject = function(object,callback){fabric.util.loadImage(object.src,function(img){var oImg=new fabric.Image(img);oImg._initConfig(object);oImg._initFilters(object,function(filters){oImg.filters = filters || [];callback && callback(oImg);});});}; /**
	   * Only available when running fabric on node.js
	   * @param {Number} width Canvas width
	   * @param {Number} height Canvas height
	   * @param {Object} [options] Options to pass to FabricCanvas.
	   * @param {Object} [nodeCanvasOptions] Options to pass to NodeCanvas.
	   * @return {Object} wrapped canvas instance
	   */fabric.createCanvasForNode = function(width,height,options,nodeCanvasOptions){nodeCanvasOptions = nodeCanvasOptions || options;var canvasEl=fabric.document.createElement('canvas'),nodeCanvas=new Canvas(width || 600,height || 600,nodeCanvasOptions); // jsdom doesn't create style on canvas element, so here be temp. workaround
	canvasEl.style = {};canvasEl.width = nodeCanvas.width;canvasEl.height = nodeCanvas.height;var FabricCanvas=fabric.Canvas || fabric.StaticCanvas,fabricCanvas=new FabricCanvas(canvasEl,options);fabricCanvas.contextContainer = nodeCanvas.getContext('2d');fabricCanvas.nodeCanvas = nodeCanvas;fabricCanvas.Font = Canvas.Font;return fabricCanvas;}; /** @ignore */fabric.StaticCanvas.prototype.createPNGStream = function(){return this.nodeCanvas.createPNGStream();};fabric.StaticCanvas.prototype.createJPEGStream = function(opts){return this.nodeCanvas.createJPEGStream(opts);};var origSetWidth=fabric.StaticCanvas.prototype.setWidth;fabric.StaticCanvas.prototype.setWidth = function(width,options){origSetWidth.call(this,width,options);this.nodeCanvas.width = width;return this;};if(fabric.Canvas){fabric.Canvas.prototype.setWidth = fabric.StaticCanvas.prototype.setWidth;}var origSetHeight=fabric.StaticCanvas.prototype.setHeight;fabric.StaticCanvas.prototype.setHeight = function(height,options){origSetHeight.call(this,height,options);this.nodeCanvas.height = height;return this;};if(fabric.Canvas){fabric.Canvas.prototype.setHeight = fabric.StaticCanvas.prototype.setHeight;}})();

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {var fs = __webpack_require__(11);
	var path = __webpack_require__(12);
	var URL = __webpack_require__(13);

	var toFileUrl = __webpack_require__(14).toFileUrl;
	var defineGetter = __webpack_require__(14).defineGetter;
	var defineSetter = __webpack_require__(14).defineSetter;
	var style = __webpack_require__(15);
	var features = __webpack_require__(20);
	var dom = __webpack_require__(438).dom;
	var createWindow = __webpack_require__(514).createWindow;
	var browserAugmentation = __webpack_require__(514).browserAugmentation;
	var windowAugmentation = __webpack_require__(514).windowAugmentation;

	var domToHtml = __webpack_require__(511).domToHtml;

	var request = function(options, cb) {
	  request = __webpack_require__(525);
	  return request(options, cb);
	}

	exports.defaultLevel = dom.living.html;
	exports.debugMode = false;

	// Proxy feature functions to features module.
	['availableDocumentFeatures',
	 'defaultDocumentFeatures',
	 'applyDocumentFeatures'].forEach(function (propName) {
	  defineGetter(exports, propName, function () {
	    return features[propName];
	  });
	  defineSetter(exports, propName, function (val) {
	    return features[propName] = val;
	  });
	});

	var level2Html = __webpack_require__(18);
	exports.level = function (level, feature) {
	  if(!feature) {
	    feature = 'core';
	  }

	  if (String(level) === '1' || String(level) === '2' || String(level) === '3') {
	    level = 'level' + level;
	  }

	  return __webpack_require__(639)("./" + level + '/' + feature).dom[level][feature];
	};

	exports.jsdom = function (html, options) {
	  options = options || {};

	  if (typeof options.level === 'string') {
	    options.level = exports.level(options.level, 'html');
	  } else {
	    options.level = options.level || exports.defaultLevel;
	  }
	  options.parsingMode = options.parsingMode || "auto";

	  if (!options.url) {
	    if (typeof location !== 'undefined' && location.href) {
	      options.url = location.href;
	    } else {
	      options.url = module.parent.id === 'jsdom' ? module.parent.parent.filename : module.parent.filename;
	      options.url = options.url.replace(/\\/g, '/');
	      if (options.url[0] !== '/') {
	        options.url = '/' + options.url;
	      }
	      options.url = 'file://' + options.url;
	    }
	  }

	  var browser = browserAugmentation(options.level, options);
	  var doc = browser.HTMLDocument ? new browser.HTMLDocument(options) : new browser.Document(options);

	  if (options.created) {
	    options.created(null, doc.parentWindow);
	  }

	  __webpack_require__(647).applyQuerySelectorPrototype(options.level);

	  features.applyDocumentFeatures(doc, options.features);

	  if (html === undefined) {
	    html = '';
	  }
	  html = String(html);
	  doc.write(html);

	  if (doc.close && !options.deferClose) {
	    doc.close();
	  }

	  return doc;
	};

	exports.jQueryify = exports.jsdom.jQueryify = function (window, jqueryUrl, callback) {
	  if (!window || !window.document) {
	    return;
	  }

	  var features = window.document.implementation._features;
	  window.document.implementation.addFeature('FetchExternalResources', ['script']);
	  window.document.implementation.addFeature('ProcessExternalResources', ['script']);
	  window.document.implementation.addFeature('MutationEvents', ['2.0']);

	  var scriptEl = window.document.createElement('script');
	  scriptEl.className = 'jsdom';
	  scriptEl.src = jqueryUrl;
	  scriptEl.onload = scriptEl.onerror = function () {
	    window.document.implementation._features = features;

	    if (callback) {
	      callback(window, window.jQuery);
	    }
	  };

	  window.document.body.appendChild(scriptEl);
	};

	exports.env = exports.jsdom.env = function () {
	  var config = getConfigFromArguments(arguments);

	  if (config.file) {
	    fs.readFile(config.file, 'utf-8', function (err, text) {
	      if (err) {
	        if (config.created) {
	          config.created(err);
	        }
	        if (config.done) {
	          config.done([err]);
	        }
	        return;
	      }

	      setParsingModeFromExtension(config, config.file);

	      config.html = text;
	      processHTML(config);
	    });
	  } else if (config.html) {
	    processHTML(config);
	  } else if (config.url) {
	    handleUrl(config);
	  } else if (config.somethingToAutodetect !== undefined) {
	    var url = URL.parse(config.somethingToAutodetect);
	    if (url.protocol && url.hostname) {
	      config.url = config.somethingToAutodetect;
	      handleUrl(config.somethingToAutodetect);
	    } else {
	      fs.readFile(config.somethingToAutodetect, 'utf-8', function (err, text) {
	        if (err) {
	          if (err.code === 'ENOENT' || err.code === 'ENAMETOOLONG') {
	            config.html = config.somethingToAutodetect;
	            processHTML(config);
	          } else {
	            if (config.created) {
	              config.created(err);
	            }
	            if (config.done) {
	              config.done([err]);
	            }
	          }
	        } else {
	          setParsingModeFromExtension(config, config.somethingToAutodetect);

	          config.html = text;
	          config.url = toFileUrl(config.somethingToAutodetect);
	          processHTML(config);
	        }
	      });
	    }
	  }

	  function handleUrl() {
	    var options = {
	      uri: config.url,
	      encoding: config.encoding || 'utf8',
	      headers: config.headers || {},
	      proxy: config.proxy || null,
	      jar: config.jar !== undefined ? config.jar : true
	    };

	    request(options, function (err, res, responseText) {
	      if (err) {
	        if (config.created) {
	          config.created(err);
	        }
	        if (config.done) {
	          config.done([err]);
	        }
	        return;
	      }

	      // The use of `res.request.uri.href` ensures that `window.location.href`
	      // is updated when `request` follows redirects.
	      config.html = responseText;
	      config.url = res.request.uri.href;

	      if (config.parsingMode === "auto" && (
	        res.headers["content-type"] === "application/xml" ||
	        res.headers["content-type"] === "text/xml" ||
	        res.headers["content-type"] === "application/xhtml+xml")) {
	        config.parsingMode = "xml";
	      }

	      processHTML(config);
	    });
	  }
	};

	exports.serializeDocument = function (doc) {
	  return domToHtml(doc, true);
	};

	function processHTML(config) {
	  var options = {
	    features: config.features,
	    url: config.url,
	    parser: config.parser,
	    parsingMode: config.parsingMode,
	    created: config.created,
	    level: config.level
	  };

	  if (config.document) {
	    options.referrer = config.document.referrer;
	    options.cookie = config.document.cookie;
	    options.cookieDomain = config.document.cookieDomain;
	  }

	  var window = exports.jsdom(config.html, options).parentWindow;
	  var features = JSON.parse(JSON.stringify(window.document.implementation._features));

	  var docsLoaded = 0;
	  var totalDocs = config.scripts.length + config.src.length;
	  var readyState = null;
	  var errors = [];

	  if (!window || !window.document) {
	    if (config.created) {
	      config.created(new Error('JSDOM: a window object could not be created.'));
	    }
	    if (config.done) {
	      config.done([new Error('JSDOM: a window object could not be created.')]);
	    }
	    return;
	  }

	  window.document.implementation.addFeature('FetchExternalResources', ['script']);
	  window.document.implementation.addFeature('ProcessExternalResources', ['script']);
	  window.document.implementation.addFeature('MutationEvents', ['2.0']);

	  function scriptComplete() {
	    docsLoaded++;

	    if (docsLoaded >= totalDocs) {
	      window.document.implementation._features = features;

	      errors = errors.concat(window.document.errors || []);
	      if (errors.length === 0) {
	        errors = null;
	      }

	      process.nextTick(function() {
	        if (config.loaded) {
	          config.loaded(errors, window);
	        }
	        if (config.done) {
	          config.done(errors, window);
	        }
	      });
	    }
	  }

	  function handleScriptError(e) {
	    if (!errors) {
	      errors = [];
	    }
	    errors.push(e.error || e.message);

	    // nextTick so that an exception within scriptComplete won't cause
	    // another script onerror (which would be an infinite loop)
	    process.nextTick(scriptComplete);
	  }

	  if (config.scripts.length > 0 || config.src.length > 0) {
	    config.scripts.forEach(function (scriptSrc) {
	      var script = window.document.createElement('script');
	      script.className = 'jsdom';
	      script.onload = scriptComplete;
	      script.onerror = handleScriptError;
	      script.src = scriptSrc;

	      try {
	        // protect against invalid dom
	        // ex: http://www.google.com/foo#bar
	        window.document.documentElement.appendChild(script);
	      } catch (e) {
	        handleScriptError(e);
	      }
	    });

	    config.src.forEach(function (scriptText) {
	      var script = window.document.createElement('script');
	      script.onload = scriptComplete;
	      script.onerror = handleScriptError;
	      script.text = scriptText;

	      window.document.documentElement.appendChild(script);
	      window.document.documentElement.removeChild(script);
	    });
	  } else {
	    if (window.document.readyState === 'complete') {
	      scriptComplete();
	    } else {
	      window.addEventListener('load', function() {
	        scriptComplete();
	      });
	    }
	  }
	}

	function getConfigFromArguments(args, callback) {
	  var config = {};
	  if (typeof args[0] === 'object') {
	    var configToClone = args[0];
	    Object.keys(configToClone).forEach(function (key) {
	      config[key] = configToClone[key];
	    });
	  } else {
	    var stringToAutodetect = null;

	    Array.prototype.forEach.call(args, function (arg) {
	      switch (typeof arg) {
	        case 'string':
	          config.somethingToAutodetect = arg;
	          break;
	        case 'function':
	          config.done = arg;
	          break;
	        case 'object':
	          if (Array.isArray(arg)) {
	            config.scripts = arg;
	          } else {
	            extend(config, arg);
	          }
	          break;
	      }
	    });
	  }

	  if (!config.done && !config.created && !config.loaded) {
	    throw new Error('Must pass a "created", "loaded", "done" option or a callback to jsdom.env.');
	  }

	  if (config.somethingToAutodetect === undefined &&
	      config.html === undefined && !config.file && !config.url) {
	    throw new Error('Must pass a "html", "file", or "url" option, or a string, to jsdom.env');
	  }

	  config.scripts = ensureArray(config.scripts);
	  config.src = ensureArray(config.src);
	  config.parsingMode = config.parsingMode || "auto";

	  config.features = config.features || {
	    FetchExternalResources: false,
	    ProcessExternalResources: false,
	    SkipExternalResources: false
	  };

	  if (!config.url && config.file) {
	    config.url = toFileUrl(config.file);
	  }

	  return config;
	}

	function ensureArray(value) {
	  var array = value || [];
	  if (typeof array === 'string') {
	    array = [array];
	  }
	  return array;
	}

	function extend(config, overrides) {
	  Object.keys(overrides).forEach(function (key) {
	    config[key] = overrides[key];
	  });
	}

	function setParsingModeFromExtension(config, filename) {
	  if (config.parsingMode === "auto") {
	    var ext = path.extname(filename);
	    if (ext === ".xhtml" || ext === ".xml") {
	      config.parsingMode = "xml";
	    }
	  }
	}

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)(module)))

/***/ },
/* 10 */
/***/ function(module, exports) {

	module.exports = function(module) {
		if(!module.webpackPolyfill) {
			module.deprecate = function() {};
			module.paths = [];
			// module.parent = undefined by default
			module.children = [];
			module.webpackPolyfill = 1;
		}
		return module;
	}


/***/ },
/* 11 */
/***/ function(module, exports) {

	module.exports = require("fs");

/***/ },
/* 12 */
/***/ function(module, exports) {

	module.exports = require("path");

/***/ },
/* 13 */
/***/ function(module, exports) {

	module.exports = require("url");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	var path = __webpack_require__(12);

	/**
	 * Intercepts a method by replacing the prototype's implementation
	 * with a wrapper that invokes the given interceptor instead.
	 *
	 *     utils.intercept(core.Element, 'inserBefore',
	 *       function(_super, args, newChild, refChild) {
	 *         console.log('insertBefore', newChild, refChild);
	 *         return _super.apply(this, args);
	 *       }
	 *     );
	 */
	exports.intercept = function(clazz, method, interceptor) {
	  var proto = clazz.prototype,
	      _super = proto[method],
	      unwrapArgs = interceptor.length > 2;

	  proto[method] = function() {
	    if (unwrapArgs) {
	      var args = Array.prototype.slice.call(arguments);
	      args.unshift(_super, arguments);
	      return interceptor.apply(this, args);
	    }
	    else {
	      return interceptor.call(this, _super, arguments);
	    }
	  };
	};

	exports.toFileUrl = function (fileName) {
	  // Beyond just the `path.resolve`, this is mostly for the benefit of Windows,
	  // where we need to convert '\' to '/' and add an extra '/' prefix before the
	  // drive letter.
	  var pathname = path.resolve(process.cwd(), fileName).replace(/\\/g, '/');
	  if (pathname[0] !== '/') {
	    pathname = '/' + pathname;
	  }

	  return 'file://' + pathname;
	};

	/**
	 * Define a setter on an object
	 *
	 * This method replaces any existing setter but leaves getters in place.
	 *
	 * - `object` {Object} the object to define the setter on
	 * - `property` {String} the name of the setter
	 * - `setterFn` {Function} the setter
	 */
	exports.defineSetter = function defineSetter(object, property, setterFn) {
	  var descriptor = Object.getOwnPropertyDescriptor(object, property) || {
	    configurable: true,
	    enumerable: true
	  };

	  descriptor.set = setterFn;

	  Object.defineProperty(object, property, descriptor);
	};

	/**
	 * Define a getter on an object
	 *
	 * This method replaces any existing getter but leaves setters in place.
	 *
	 * - `object` {Object} the object to define the getter on
	 * - `property` {String} the name of the getter
	 * - `getterFn` {Function} the getter
	 */
	exports.defineGetter = function defineGetter(object, property, getterFn) {
	  var descriptor = Object.getOwnPropertyDescriptor(object, property) || {
	    configurable: true,
	    enumerable: true
	  };

	  descriptor.get = getterFn;

	  Object.defineProperty(object, property, descriptor);
	};

	/**
	 * Create an object with the given prototype
	 *
	 * Optionally augment the created object.
	 *
	 * - `prototyp` {Object} the created object's prototype
	 * - `[properties]` {Object} properties to attach to the created object
	 */
	exports.createFrom = function createFrom(prototype, properties) {
	  properties = properties || {};

	  var descriptors = {};
	  Object.getOwnPropertyNames(properties).forEach(function (name) {
	    descriptors[name] = Object.getOwnPropertyDescriptor(properties, name);
	  });

	  return Object.create(prototype, descriptors);
	};

	/**
	 * Create an inheritance relationship between two classes
	 *
	 * Optionally augment the inherited prototype.
	 *
	 * - `Superclass` {Function} the inherited class
	 * - `Subclass` {Function} the inheriting class
	 * - `[properties]` {Object} properties to attach to the inherited prototype
	 */
	exports.inheritFrom = function inheritFrom(Superclass, Subclass, properties) {
	  properties = properties || {};

	  Object.defineProperty(properties, 'constructor', {
	    value: Subclass,
	    writable: true,
	    configurable: true
	  });

	  Subclass.prototype = exports.createFrom(Superclass.prototype, properties);
	};


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var core = __webpack_require__(16).dom.level2.core,
	    html = __webpack_require__(18).dom.level2.html,
	    utils = __webpack_require__(14),
	    defineGetter = utils.defineGetter,
	    defineSetter = utils.defineSetter,
	    inheritFrom = utils.inheritFrom,
	    cssom = __webpack_require__(24),
	    cssstyle = __webpack_require__(42),
	    assert = __webpack_require__(437);

	// What works now:
	// - Accessing the rules defined in individual stylesheets
	// - Modifications to style content attribute are reflected in style property
	// - Modifications to style property are reflected in style content attribute
	// TODO
	// - Modifications to style element's textContent are reflected in sheet property.
	// - Modifications to style element's sheet property are reflected in textContent.
	// - Modifications to link.href property are reflected in sheet property.
	// - Less-used features of link: disabled
	// - Less-used features of style: disabled, scoped, title
	// - CSSOM-View
	//   - getComputedStyle(): requires default stylesheet, cascading, inheritance,
	//     filtering by @media (screen? print?), layout for widths/heights
	// - Load events are not in the specs, but apparently some browsers
	//   implement something. Should onload only fire after all @imports have been
	//   loaded, or only the primary sheet?

	core.StyleSheet = cssom.StyleSheet;
	core.MediaList = cssom.MediaList;
	core.CSSStyleSheet = cssom.CSSStyleSheet;
	core.CSSRule = cssom.CSSRule;
	core.CSSStyleRule = cssom.CSSStyleRule;
	core.CSSMediaRule = cssom.CSSMediaRule;
	core.CSSImportRule = cssom.CSSImportRule;
	core.CSSStyleDeclaration = cssstyle.CSSStyleDeclaration;

	// Relavant specs
	// http://www.w3.org/TR/DOM-Level-2-Style (2000)
	// http://www.w3.org/TR/cssom-view/ (2008)
	// http://dev.w3.org/csswg/cssom/ (2010) Meant to replace DOM Level 2 Style
	// http://www.whatwg.org/specs/web-apps/current-work/multipage/ HTML5, of course
	// http://dev.w3.org/csswg/css-style-attr/  not sure what's new here

	// Objects that aren't in cssom library but should be:
	//   CSSRuleList  (cssom just uses array)
	//   CSSFontFaceRule
	//   CSSPageRule

	// These rules don't really make sense to implement, so CSSOM draft makes them
	// obsolete.
	//   CSSCharsetRule
	//   CSSUnknownRule

	// These objects are considered obsolete by CSSOM draft, although modern
	// browsers implement them.
	//   CSSValue
	//   CSSPrimitiveValue
	//   CSSValueList
	//   RGBColor
	//   Rect
	//   Counter

	// StyleSheetList -
	// http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList
	// added a push method to help manage the length
	core.StyleSheetList = function() {
	  this._length = 0;
	};
	core.StyleSheetList.prototype = {
	  item: function (i) {
	    return this[i];
	  },
	  push: function (sheet) {
	    this[this._length] = sheet;
	    this._length++;
	  },
	  get length() {
	    return this._length;
	  }
	};

	defineGetter(core.Document.prototype, 'styleSheets', function() {
	  if (!this._styleSheets) {
	    this._styleSheets = new core.StyleSheetList();
	  }
	  // TODO: each style and link element should register its sheet on creation
	  // and remove it on removal.
	  return this._styleSheets;
	});


	/**
	 * @this {html.HTMLLinkElement|html.HTMLStyleElement}
	 * @param {string} url
	 * @param {cssom.CSSStyleSheet} sheet
	 * @see http://dev.w3.org/csswg/cssom/#requirements-on-user-agents-implementing0
	 */
	function fetchStylesheet(url, sheet) {
	  html.resourceLoader.load(this, url, function(data, filename) {
	    // TODO: abort if the content-type is not text/css, and the document is
	    // in strict mode
	    sheet.href = html.resourceLoader.resolve(this.ownerDocument, url);
	    evaluateStylesheet.call(this, data, sheet, url);
	  });
	}
	/**
	 * @this {html.HTMLLinkElement|html.HTMLStyleElement}
	 * @param {string} data
	 * @param {cssom.CSSStyleSheet} sheet
	 * @param {string} baseUrl
	 */
	function evaluateStylesheet(data, sheet, baseUrl) {
	  // this is the element
	  var newStyleSheet = cssom.parse(data);
	  var spliceArgs = newStyleSheet.cssRules;
	  spliceArgs.unshift(0, sheet.cssRules.length);
	  Array.prototype.splice.apply(sheet.cssRules, spliceArgs);
	  scanForImportRules.call(this, sheet.cssRules, baseUrl);
	  this.ownerDocument.styleSheets.push(sheet);
	}
	/**
	 * @this {html.HTMLLinkElement|html.HTMLStyleElement}
	 * @param {cssom.CSSStyleSheet} sheet
	 * @param {string} baseUrl
	 */
	function scanForImportRules(cssRules, baseUrl) {
	  if (!cssRules) return;
	  for (var i = 0; i < cssRules.length; ++i) {
	    if (cssRules[i].cssRules) {
	      // @media rule: keep searching inside it.
	      scanForImportRules.call(this, cssRules[i].cssRules, baseUrl);
	    } else if (cssRules[i].href) {
	      // @import rule: fetch the resource and evaluate it.
	      // See http://dev.w3.org/csswg/cssom/#css-import-rule
	      //     If loading of the style sheet fails its cssRules list is simply
	      //     empty. I.e. an @import rule always has an associated style sheet.
	      fetchStylesheet.call(this, cssRules[i].href, this.sheet);
	    }
	  }
	}

	/**
	 * @param {string} data
	 * @param {cssstyle.CSSStyleDeclaration} style
	 */
	function evaluateStyleAttribute(data) {
	  // this is the element.

	}

	/**
	 * Subclass of core.Attr that reflects the current cssText.
	 */
	function StyleAttr(node, value) {
	  this._node = node;
	  core.Attr.call(this, node.ownerDocument, 'style');
	  if (!this._node._ignoreValueOfStyleAttr) {
	    this.nodeValue = value;
	  }
	}
	inheritFrom(core.Attr, StyleAttr, {
	  get nodeValue() {
	    if (typeof this._node._style === 'string') {
	      return this._node._style;
	    } else {
	      return this._node.style.cssText;
	    }
	  },
	  set nodeValue(value) {
	    this._node._style = value;
	  }
	});

	/**
	 * Overwrite core.AttrNodeMap#setNamedItem to create a StyleAttr instance
	 * instead of a core.Attr if the name equals 'style'.
	 */
	utils.intercept(core.AttributeList, '$setNode', function(_super, args, attr) {
	  if (attr.name == 'style') {
	    attr = new StyleAttr(this._parentNode, attr.nodeValue);
	  }
	  return _super.call(this, attr);
	});

	/**
	 * Lazily create a CSSStyleDeclaration.
	 */
	defineGetter(html.HTMLElement.prototype, 'style', function() {
	  if (typeof this._style === 'string') {
	    // currently, cssom's parse doesn't really work if you pass in
	    // {state: 'name'}, so instead we just build a dummy sheet.
	    var styleSheet = cssom.parse('dummy{' + this._style + '}');
	    this._style = new cssstyle.CSSStyleDeclaration();
	    if (styleSheet.cssRules.length > 0 && styleSheet.cssRules[0].style) {
	      var newStyle = styleSheet.cssRules[0].style;
	      for (var i = 0; i < newStyle.length; ++i) {
	        var prop = newStyle[i];
	        this._style.setProperty(
	            prop,
	            newStyle.getPropertyValue(prop),
	            newStyle.getPropertyPriority(prop));
	      }
	    }
	  }
	  if (!this._style) {
	    this._style = new cssstyle.CSSStyleDeclaration();

	  }
	  if (!this.getAttributeNode('style')) {
	    // Tell the StyleAttr constructor to not overwrite this._style
	    this._ignoreValueOfStyleAttr = true;
	    this.setAttribute('style');
	    this._ignoreValueOfStyleAttr = false;
	  }
	  return this._style;
	});

	assert.equal(undefined, html.HTMLLinkElement._init);
	html.HTMLLinkElement._init = function() {
	  this.addEventListener('DOMNodeInsertedIntoDocument', function() {
	    if (!/(?:[ \t\n\r\f]|^)stylesheet(?:[ \t\n\r\f]|$)/i.test(this.rel)) {
	      // rel is a space-separated list of tokens, and the original rel types
	      // are case-insensitive.
	      return;
	    }
	    if (this.href) {
	      fetchStylesheet.call(this, this.href, this.sheet);
	    }
	  });
	  this.addEventListener('DOMNodeRemovedFromDocument', function() {
	  });
	};
	/**
	 * @this {HTMLStyleElement|HTMLLinkElement}
	 */
	var getOrCreateSheet = function() {
	  if (!this._cssStyleSheet) {
	    this._cssStyleSheet = new cssom.CSSStyleSheet();
	  }
	  return this._cssStyleSheet;
	};
	defineGetter(html.HTMLLinkElement.prototype, 'sheet', getOrCreateSheet);

	assert.equal(undefined, html.HTMLStyleElement._init);
	html.HTMLStyleElement._init = function() {
	  //console.log('init style')
	  this.addEventListener('DOMNodeInsertedIntoDocument', function() {
	    //console.log('style inserted')
	    //console.log('sheet: ', this.sheet);
	    if (this.type && this.type !== 'text/css') {
	      //console.log('bad type: ' + this.type)
	      return;
	    }
	    var content = '';
	    Array.prototype.forEach.call(this.childNodes, function (child) {
	      if (child.nodeType === child.TEXT_NODE) { // text node
	        content += child.nodeValue;
	      }
	    });
	    evaluateStylesheet.call(this, content, this.sheet, this._ownerDocument.URL);
	  });
	};
	defineGetter(html.HTMLStyleElement.prototype, 'sheet', getOrCreateSheet);

	exports.dom = {
	  level2 : {
	    html : html,
	    core : core
	  }
	};


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var core                     = __webpack_require__(17).dom.level1.core;
	var defineGetter = __webpack_require__(14).defineGetter;
	var defineSetter = __webpack_require__(14).defineSetter;

	// modify cloned instance for more info check: https://github.com/tmpvar/jsdom/issues/325
	core = Object.create(core);

	var INVALID_STATE_ERR        = core.INVALID_STATE_ERR        = 11,
	    SYNTAX_ERR               = core.SYNTAX_ERR               = 12,
	    INVALID_MODIFICATION_ERR = core.INVALID_MODIFICATION_ERR = 13,
	    NAMESPACE_ERR            = core.NAMESPACE_ERR            = 14,
	    INVALID_ACCESS_ERR       = core.INVALID_ACCESS_ERR       = 15,
	    ns = {
	      validate : function(ns, URI) {
	        if (!ns) {
	          throw new core.DOMException(core.INVALID_CHARACTER_ERR, "namespace is undefined");
	        }

	        if(ns.match(/[^0-9a-z\.:\-_]/i) !== null) {
	          throw new core.DOMException(core.INVALID_CHARACTER_ERR, ns);
	        }

	        var msg = false, parts = ns.split(':');
	        if (ns === 'xmlns'                          &&
	            URI !== "http://www.w3.org/2000/xmlns/")
	        {
	          msg = "localName is 'xmlns' but the namespaceURI is invalid";

	        } else if (ns === "xml"                                   &&
	                   URI !== "http://www.w3.org/XML/1998/namespace")
	        {
	          msg = "localName is 'xml' but the namespaceURI is invalid";

	        } else if (ns[ns.length-1] === ':') {
	          msg = "Namespace seperator found with no localName";

	        } else if (ns[0] === ':') {
	          msg = "Namespace seperator found, without a prefix";

	        } else if (parts.length > 2) {
	          msg = "Too many namespace seperators";

	        }

	        if (msg) {
	          throw new core.DOMException(NAMESPACE_ERR, msg + " (" + ns + "@" + URI + ")");
	        }
	      }
	    };

	core.exceptionMessages['NAMESPACE_ERR'] = "Invalid namespace";

	core.DOMImplementation.prototype.createDocumentType = function(/* String */ qualifiedName,
	                                                               /* String */ publicId,
	                                                               /* String */ systemId)
	{
	  ns.validate(qualifiedName);
	  var doctype = new core.DocumentType(null, qualifiedName);
	  doctype._publicId = String(publicId);
	  doctype._systemId = String(systemId);
	  return doctype;
	};

	/**
	  Creates an XML Document object of the specified type with its document element.
	  HTML-only DOM implementations do not need to implement this method.
	*/
	core.DOMImplementation.prototype.createDocument = function(/* String */       namespaceURI,
	                                                           /* String */       qualifiedName,
	                                                           /* DocumentType */ doctype)
	{
	  if (qualifiedName || namespaceURI) {
	    ns.validate(qualifiedName, namespaceURI);
	  }

	  if (doctype && doctype._ownerDocument !== null) {
	    throw new core.DOMException(core.WRONG_DOCUMENT_ERR);
	  }

	  if (qualifiedName && qualifiedName.indexOf(':') > -1 && !namespaceURI) {
	    throw new core.DOMException(NAMESPACE_ERR);
	  }

	  var document = new core.Document();

	  if (doctype) {
	    document.doctype = doctype;
	    doctype._ownerDocument = document;
	    document.appendChild(doctype);
	  } else {
	    document.doctype = null;
	  }

	  if (doctype && !doctype.entities) {
	    doctype.entities = new core.EntityNodeMap();
	  }

	  document._ownerDocument = document;

	  if (qualifiedName) {
	    var docElement = document.createElementNS(namespaceURI, qualifiedName);
	    document.appendChild(docElement);
	  }

	  return document;
	};

	defineGetter(core.Node.prototype, "ownerDocument", function() {
	  return this._ownerDocument || null;
	});

	core.Node.prototype.isSupported = function(/* string */ feature,
	                                           /* string */ version)
	{
	  return this._ownerDocument.implementation.hasFeature(feature, version);
	};

	core.Node.prototype._namespaceURI = null;
	defineGetter(core.Node.prototype, "namespaceURI", function() {
	  return this._namespaceURI || null;
	});

	defineSetter(core.Node.prototype, "namespaceURI", function(value) {
	  this._namespaceURI = value;
	});

	defineGetter(core.Node.prototype, "prefix", function() {
	  return this._prefix || null;
	});

	defineSetter(core.Node.prototype, "prefix", function(value) {

	  if (this.readonly) {
	    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);
	  }

	  ns.validate(value, this._namespaceURI);

	  if ((this._created && !this._namespaceURI)  ||
	      this._prefix === "xmlns"                ||
	      (!this._prefix && this._created))
	  {
	    throw new core.DOMException(core.NAMESPACE_ERR);
	  }

	  if (this._localName) {
	    this._nodeName = value + ':' + this._localName;
	  }

	  this._prefix = value;
	});

	defineGetter(core.Node.prototype, "localName", function() {
	  return this._localName || null;
	});

	/* return boolean */
	core.Node.prototype.hasAttributes = function() {
	  return (this.nodeType === this.ELEMENT_NODE &&
	          this._attributes                    &&
	          this._attributes.length > 0);
	};

	core.NamedNodeMap.prototype.getNamedItemNS = function(/* string */ namespaceURI,
	                                                      /* string */ localName)
	{
	  if (this._nsStore[namespaceURI] && this._nsStore[namespaceURI][localName]) {
	    return this._nsStore[namespaceURI][localName];
	  }
	  return null;
	};

	core.NamedNodeMap.prototype.setNamedItemNS = function(/* Node */ arg)
	{
	  if (this._readonly) {
	    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);
	  }

	  var owner = this._ownerDocument;
	  if (this._parentNode &&
	      this._parentNode._parentNode &&
	      this._parentNode._parentNode.nodeType === owner.ENTITY_NODE)
	  {
	    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);
	  }

	  if (this._ownerDocument !== arg.ownerDocument) {
	    throw new core.DOMException(core.WRONG_DOCUMENT_ERR);
	  }

	  if (arg._ownerElement) {
	    throw new core.DOMException(core.INUSE_ATTRIBUTE_ERR);
	  }

	  // readonly
	  if (this._readonly === true) {
	    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);
	  }


	  if (!this._nsStore[arg.namespaceURI]) {
	    this._nsStore[arg.namespaceURI] = {};
	  }
	  var existing = null;
	  if (this._nsStore[arg.namespaceURI][arg.localName]) {
	    var existing = this._nsStore[arg.namespaceURI][arg.localName];
	  }

	  this._nsStore[arg.namespaceURI][arg.localName] = arg;

	  arg._specified = true;
	  arg._ownerDocument = this._ownerDocument;

	  return this.setNamedItem(arg);
	};

	core.NamedNodeMap.prototype.removeNamedItemNS = function(/*string */ namespaceURI,
	                                                         /* string */ localName)
	{

	  if (this.readonly) {
	    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);
	  }


	  var parent = this._parentNode,
	      found = null,
	      defaults,
	      clone,
	      defaultEl,
	      defaultAttr;

	  if (this._parentNode &&
	      this._parentNode._parentNode &&
	      this._parentNode._parentNode.nodeType === this._ownerDocument.ENTITY_NODE)
	  {
	    throw new core.DOMException(core.NO_MODIFICATION_ALLOWED_ERR);
	  }

	  if (this._nsStore[namespaceURI] &&
	      this._nsStore[namespaceURI][localName])
	  {
	    found = this._nsStore[namespaceURI][localName];
	    this.removeNamedItem(found.qualifiedName);
	    delete this._nsStore[namespaceURI][localName];
	  }

	  if (!found) {
	    throw new core.DOMException(core.NOT_FOUND_ERR);
	  }

	  if (parent.ownerDocument.doctype && parent.ownerDocument.doctype._attributes) {
	    defaults = parent.ownerDocument.doctype._attributes;
	    defaultEl = defaults.getNamedItemNS(parent._namespaceURI, parent._localName);
	  }

	  if (defaultEl) {
	    defaultAttr = defaultEl._attributes.getNamedItemNS(namespaceURI, localName);

	    if (defaultAttr) {
	      clone = defaultAttr.cloneNode(true);
	      clone._created               = false;
	      clone._namespaceURI          = found._namespaceURI;
	      clone._nodeName              = found.name;
	      clone._localName             = found._localName;
	      clone._prefix                = found._prefix
	      this.setNamedItemNS(clone);
	      clone._created               = true;
	      clone._specified             = false;
	    }
	  }

	  return found;
	};

	defineGetter(core.Attr.prototype, "ownerElement", function() {
	  return this._ownerElement || null;
	});


	core.Node.prototype._prefix = false;

	defineSetter(core.Node.prototype, "qualifiedName", function(qualifiedName) {
	  ns.validate(qualifiedName, this._namespaceURI);
	  qualifiedName       = qualifiedName || "";
	  this._localName     = qualifiedName.split(":")[1] || null;
	  this.prefix         = qualifiedName.split(":")[0] || null;
	  this._nodeName = qualifiedName;
	});

	defineGetter(core.Node.prototype, "qualifiedName", function() {
	  return this._nodeName;
	});

	core.NamedNodeMap.prototype._map = function(fn) {
	  var ret = [], l = this.length, i = 0, node;
	  for(i; i<l; i++) {
	    node = this.item(i);
	    if (fn && fn(node)) {
	      ret.push(node);
	    }
	  }
	  return ret;
	};

	core.Element.prototype.getAttribute = function(/* string */ name)
	{
	  var attr =  this.getAttributeNode(name);
	  return attr && attr.value;
	};

	core.Element.prototype.getAttributeNode = function(/* string */ name)
	{
	  return this._attributes.$getNoNS(name);
	};

	core.Element.prototype.removeAttribute = function(/* string */ name)
	{
	  return this._attributes.$removeNoNS(name);
	};

	core.Element.prototype.getAttributeNS = function(/* string */ namespaceURI,
	                                                 /* string */ localName)
	{
	  if (namespaceURI === "") {
	    namespaceURI = null;
	  }

	  var attr =  this._attributes.$getNode(namespaceURI, localName);
	  return attr && attr.value;
	};

	core.Element.prototype.setAttribute = function(/* string */ name,
	                                               /* string */ value)
	{
	  this._attributes.$setNoNS(name, value);
	};

	core.Element.prototype.setAttributeNS = function(/* string */ namespaceURI,
	                                                 /* string */ qualifiedName,
	                                                 /* string */ value)
	{
	  if (namespaceURI === "") {
	    namespaceURI = null;
	  }

	  var s       = qualifiedName.split(':'),
	      local   = s.pop(),
	      prefix  = s.pop() || null,
	      attr;

	  ns.validate(qualifiedName, namespaceURI);

	  if (prefix !== null && !namespaceURI) {
	    throw new core.DOMException(core.NAMESPACE_ERR);
	  }

	  if (prefix === "xml" &&
	      namespaceURI !== "http://www.w3.org/XML/1998/namespace") {
	    throw new core.DOMException(core.NAMESPACE_ERR);
	  }

	  if (prefix === "xmlns" && namespaceURI !== "http://www.w3.org/2000/xmlns/") {
	    throw new core.DOMException(core.NAMESPACE_ERR);
	  }

	  this._attributes.$set(local, value, qualifiedName, prefix, namespaceURI);
	};

	core.Element.prototype.removeAttributeNS = function(/* string */ namespaceURI,
	                                                    /* string */ localName)
	{
	  if (namespaceURI === "") {
	    namespaceURI = null;
	  }

	  this._attributes.$remove(namespaceURI, localName);
	};

	core.Element.prototype.getAttributeNodeNS = function(/* string */ namespaceURI,
	                                                     /* string */ localName)
	{
	  if (namespaceURI === "") {
	    namespaceURI = null;
	  }

	  return this._attributes.$getNode(namespaceURI, localName);
	};
	core.Element.prototype._created = false;

	core.Element.prototype.setAttributeNodeNS = function(/* Attr */ newAttr)
	{
	  if (newAttr.ownerElement) {
	    throw new core.DOMException(core.INUSE_ATTRIBUTE_ERR);
	  }

	  return this._attributes.$setNode(newAttr);
	};

	core.Element.prototype.getElementsByTagNameNS = core.memoizeQuery(function(/* String */ namespaceURI,
	                                                         /* String */ localName)
	{
	  var nsPrefixCache = {};

	  function filterByTagName(child) {
	    if (child.nodeType && child.nodeType === this.ENTITY_REFERENCE_NODE) {
	      child = child._entity;
	    }

	    var localMatch = child.localName === localName,
	        nsMatch    = child.namespaceURI === namespaceURI;

	    if ((localMatch || localName === "*") &&
	        (nsMatch || namespaceURI === "*"))
	    {
	      if (child.nodeType === child.ELEMENT_NODE) {
	        return true;
	      }
	    }
	    return false;
	  }

	  return new core.NodeList(this.ownerDocument || this,
	                           core.mapper(this, filterByTagName));
	});

	core.Element.prototype.hasAttribute = function(/* string */name)
	{
	  if (!this._attributes) {
	    return false;
	  }

	  return !!this._attributes.$getNoNS(name);
	};

	core.Element.prototype.hasAttributeNS = function(/* string */namespaceURI,
	                                                 /* string */localName)
	{
	  if (namespaceURI === "") {
	    namespaceURI = null;
	  }

	  return (this._attributes.getNamedItemNS(namespaceURI, localName) ||
	          this.hasAttribute(localName));
	};

	defineGetter(core.DocumentType.prototype, "publicId", function() {
	  return this._publicId || "";
	});

	defineGetter(core.DocumentType.prototype, "systemId", function() {
	  return this._systemId || "";
	});

	defineGetter(core.DocumentType.prototype, "internalSubset", function() {
	  return this._internalSubset || null;
	});

	core.Document.prototype.importNode = function(/* Node */ importedNode,
	                                              /* bool */ deep)
	{
	  if (importedNode && importedNode.nodeType) {
	    if (importedNode.nodeType === this.DOCUMENT_NODE ||
	        importedNode.nodeType === this.DOCUMENT_TYPE_NODE) {
	      throw new core.DOMException(core.NOT_SUPPORTED_ERR);
	    }
	  }

	  var self = this,
	      newNode = importedNode.cloneNode(deep, function(a, b) {
	        b._namespaceURI  = a._namespaceURI;
	        b._nodeName      = a._nodeName;
	        b._localName     = a._localName;
	      }),
	      defaults = false,
	      defaultEl;

	  if (this.doctype && this.doctype._attributes) {
	    defaults = this.doctype._attributes;
	  }

	  function lastChance(el) {
	    var attr, defaultEl, i, len;

	    el._ownerDocument = self;
	    if (el.id) {
	      if (!self._ids) {self._ids = {};}
	      if (!self._ids[el.id]) {self._ids[el.id] = [];}
	      self._ids[el.id].push(el);
	    }
	    if (el._attributes) {
	      var drop = [];
	      el._attributes._ownerDocument = self;
	      for (i=0,len=el._attributes.length; i < len; i++) {
	        attr = el._attributes[i];
	        // Attributes nodes that were expressing default values in the
	        // original document must not be copied over. Record them.
	        if (!attr._specified) {
	          drop.push(attr);
	          continue;
	        }

	        attr._ownerDocument = self;
	      }

	      // Remove obsolete default nodes.
	      for(i = 0; i < drop.length; ++i) {
	        el._attributes.$removeNode(drop[i]);
	      }

	    }
	    if (defaults) {

	      defaultEl = defaults.getNamedItemNS(el._namespaceURI,
	                                          el._localName);

	      // TODO: This could use some love
	      if (defaultEl) {
	        for(i = 0; i < defaultEl._attributes.length; ++i) {
	          var defaultAttr = defaultEl._attributes[i];
	          if (!el.hasAttributeNS(defaultAttr.namespaceURL,
	                                 defaultAttr.localName))
	          {
	            var clone = defaultAttr.cloneNode(true);
	            clone._namespaceURI = defaultAttr._namespaceURI;
	            clone._prefix       = defaultAttr._prefix;
	            clone._localName    = defaultAttr._localName;
	            el.setAttributeNodeNS(clone);
	            clone._specified = false;
	          }
	        }
	      }
	    }

	  }

	  if (deep) {
	    core.visitTree(newNode, lastChance);
	  }
	  else {
	    lastChance(newNode);
	  }

	  if (newNode.nodeType == newNode.ATTRIBUTE_NODE) {
	    newNode._specified = true;
	  }

	  return newNode;
	};

	core.Document.prototype.createElementNS = function(/* string */ namespaceURI,
	                                                   /* string */ qualifiedName)
	{
	  var parts   = qualifiedName.split(':'),
	      element, prefix;

	  if (parts.length > 1 && !namespaceURI) {
	    throw new core.DOMException(core.NAMESPACE_ERR);
	  }

	  ns.validate(qualifiedName, namespaceURI);
	  element = this.createElement(qualifiedName),

	  element._created = false;

	  element._namespaceURI = namespaceURI;
	  element._nodeName = qualifiedName;
	  element._localName = parts.pop();

	  if (parts.length > 0) {
	    prefix = parts.pop();
	    element.prefix = prefix;
	  }

	  element._created = true;
	  return element;
	};

	core.Document.prototype.createAttributeNS = function(/* string */ namespaceURI,
	                                                     /* string */ qualifiedName)
	{
	  var attribute, parts = qualifiedName.split(':');

	  if (parts.length > 1 && !namespaceURI) {
	    throw new core.DOMException(core.NAMESPACE_ERR,
	                                "Prefix specified without namespaceURI (" + qualifiedName + ")");
	  }


	  ns.validate(qualifiedName, namespaceURI);

	  attribute = this.createAttribute(qualifiedName);
	  attribute.namespaceURI = namespaceURI;
	  attribute.qualifiedName = qualifiedName;

	  attribute._localName = parts.pop();
	  attribute._prefix = (parts.length > 0) ? parts.pop() : null;
	  return attribute;
	};

	core.Document.prototype.getElementsByTagNameNS = function(/* String */ namespaceURI,
	                                                          /* String */ localName)
	{
	  return core.Element.prototype.getElementsByTagNameNS.call(this,
	                                                            namespaceURI,
	                                                            localName);
	};

	defineSetter(core.Element.prototype, "id", function(id) {
	  this.setAttribute("id", id);
	});

	defineGetter(core.Element.prototype, "id", function() {
	  return this.getAttribute("id");
	});

	core.Document.prototype.getElementById = function(id) {
	  // return the first element
	  return (this._ids && this._ids[id] && this._ids[id].length > 0 ? this._ids[id][0] : null);
	};


	exports.dom =
	{
	  level2 : {
	    core : core
	  }
	};


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	/*
	  ServerJS Javascript DOM Level 1
	*/
	var inheritFrom = __webpack_require__(14).inheritFrom;

	// utility functions
	var attachId = function(id,elm,doc) {
	  if (id && elm && doc) {
	    if (!doc._ids[id]) {
	      doc._ids[id] = [];
	    }
	    doc._ids[id].push(elm);
	  }
	};
	var detachId = function(id,elm,doc) {
	  var elms, i;
	  if (id && elm && doc) {
	    if (doc._ids && doc._ids[id]) {
	      elms = doc._ids[id];
	      for (i=0;i<elms.length;i++) {
	        if (elms[i] === elm) {
	          elms.splice(i,1);
	          i--;
	        }
	      }
	      if (elms.length === 0) {
	        delete doc._ids[id];
	      }
	    }
	  }
	};

	var core = {

	  mapper: function(parent, filter, recursive) {
	    return function() {
	      return core.mapDOMNodes(parent, recursive !== false, filter);
	    };
	  },

	  memoizeQuery: function(fn) {
	    var type = core.memoizeQueryType = core.memoizeQueryType || 1;
	    core.memoizeQueryType++;
	    // Only memoize query functions with arity <= 2
	    if (fn.length > 2) {
	      return fn;
	    }
	    return function() {
	      if (!this._memoizedQueries) {
	        return fn.apply(this, arguments);
	      }
	      if (!this._memoizedQueries[type]) {
	        this._memoizedQueries[type] = {};
	      }
	      if (arguments.length !== 0 && typeof arguments[0] === 'string' && (arguments.length === 1 || (typeof arguments[1] === 'string' && arguments.length === 2))) {
	        var k = String(arguments[0]);
	        if (arguments.length === 2) {
	          k += '::' + String(arguments[1]);
	        }
	        if (this._memoizedQueries[type].hasOwnProperty(k)) {
	          return this._memoizedQueries[type][k];
	        }
	        return (this._memoizedQueries[type][k] = fn.apply(this, arguments));
	      }
	      return fn.apply(this, arguments);
	    }
	  },

	  // Returns Array
	  mapDOMNodes : function(parent, recursive, callback) {
	    function visit(parent, result) {
	      return Array.prototype.reduce.call(parent.childNodes, reducer, result);
	    }

	    function reducer(array, child) {
	      if (callback(child)) {
	        array.push(child);
	      }
	      if (recursive && child._childNodes) {
	        visit(child, array);
	      }
	      return array;
	    }

	    return visit(parent, []);
	  },

	  visitTree: function(root, callback) {
	    var cur = root; // TODO: Unroll this.

	    function visit(el) {
	      if (el) {
	        callback(el);
	        if (el._childNodes) {
	          var i        = 0,
	              children = el._childNodes,
	              l        = children.length;

	          for (i; i<l; i++) {
	            visit(children[i]);
	          }
	        }
	      }
	    }
	    visit(root);
	  },

	  markTreeReadonly: function(node) {
	    function markLevel(el) {
	      el._readonly = true;
	      // also mark attributes and their children read-only
	      if (el.attributes) {
	        var attributes = el.attributes, l = attributes.length, i=0;
	        attributes._readonly = true;

	        for (i; i<l; i++) {
	          core.visitTree(attributes[i], markLevel);
	        }
	      }
	    }

	    core.visitTree(node, markLevel);
	  }
	};

	// ExceptionCode
	var INDEX_SIZE_ERR              = core.INDEX_SIZE_ERR              = 1,
	    DOMSTRING_SIZE_ERR          = core.DOMSTRING_SIZE_ERR          = 2,
	    HIERARCHY_REQUEST_ERR       = core.HIERARCHY_REQUEST_ERR       = 3,
	    WRONG_DOCUMENT_ERR          = core.WRONG_DOCUMENT_ERR          = 4,
	    INVALID_CHARACTER_ERR       = core.INVALID_CHARACTER_ERR       = 5,
	    NO_DATA_ALLOWED_ERR         = core.NO_DATA_ALLOWED_ERR         = 6,
	    NO_MODIFICATION_ALLOWED_ERR = core.NO_MODIFICATION_ALLOWED_ERR = 7,
	    NOT_FOUND_ERR               = core.NOT_FOUND_ERR               = 8,
	    NOT_SUPPORTED_ERR           = core.NOT_SUPPORTED_ERR           = 9,
	    INUSE_ATTRIBUTE_ERR         = core.INUSE_ATTRIBUTE_ERR         = 10,

	// Node Types
	    ELEMENT_NODE                = 1,
	    ATTRIBUTE_NODE              = 2,
	    TEXT_NODE                   = 3,
	    CDATA_SECTION_NODE          = 4,
	    ENTITY_REFERENCE_NODE       = 5,
	    ENTITY_NODE                 = 6,
	    PROCESSING_INSTRUCTION_NODE = 7,
	    COMMENT_NODE                = 8,
	    DOCUMENT_NODE               = 9,
	    DOCUMENT_TYPE_NODE          = 10,
	    DOCUMENT_FRAGMENT_NODE      = 11,
	    NOTATION_NODE               = 12;

	var messages = core.exceptionMessages = { };
	messages[INDEX_SIZE_ERR]              = "Index size error";
	messages[DOMSTRING_SIZE_ERR]          = "DOMString size error";
	messages[HIERARCHY_REQUEST_ERR]       = "Hierarchy request error";
	messages[WRONG_DOCUMENT_ERR]          = "Wrong document";
	messages[INVALID_CHARACTER_ERR]       = "Invalid character";
	messages[NO_DATA_ALLOWED_ERR]         = "No data allowed";
	messages[NO_MODIFICATION_ALLOWED_ERR] = "No modification allowed";
	messages[NOT_FOUND_ERR]               = "Not found";
	messages[NOT_SUPPORTED_ERR]           = "Not supported";
	messages[INUSE_ATTRIBUTE_ERR]         = "Attribute in use";

	core.DOMException = function(code, message) {
	  this.code = code;
	  Error.call(this, core.exceptionMessages[code]);
	  this.message = core.exceptionMessages[code];
	  if(message) this.message = this.message + ": " + message;
	  if(Error.captureStackTrace) Error.captureStackTrace(this, core.DOMException);
	};

	core.DOMException.INDEX_SIZE_ERR              = INDEX_SIZE_ERR;
	core.DOMException.DOMSTRING_SIZE_ERR          = DOMSTRING_SIZE_ERR;
	core.DOMException.HIERARCHY_REQUEST_ERR       = HIERARCHY_REQUEST_ERR;
	core.DOMException.WRONG_DOCUMENT_ERR          = WRONG_DOCUMENT_ERR;
	core.DOMException.INVALID_CHARACTER_ERR       = INVALID_CHARACTER_ERR;
	core.DOMException.NO_DATA_ALLOWED_ERR         = NO_DATA_ALLOWED_ERR;
	core.DOMException.NO_MODIFICATION_ALLOWED_ERR = NO_MODIFICATION_ALLOWED_ERR;
	core.DOMException.NOT_FOUND_ERR               = NOT_FOUND_ERR;
	core.DOMException.NOT_SUPPORTED_ERR           = NOT_SUPPORTED_ERR;
	core.DOMException.INUSE_ATTRIBUTE_ERR         = INUSE_ATTRIBUTE_ERR;

	inheritFrom(Error, core.DOMException, {
	  INDEX_SIZE_ERR              : INDEX_SIZE_ERR,
	  DOMSTRING_SIZE_ERR          : DOMSTRING_SIZE_ERR,
	  HIERARCHY_REQUEST_ERR       : HIERARCHY_REQUEST_ERR,
	  WRONG_DOCUMENT_ERR          : WRONG_DOCUMENT_ERR,
	  INVALID_CHARACTER_ERR       : INVALID_CHARACTER_ERR,
	  NO_DATA_ALLOWED_ERR         : NO_DATA_ALLOWED_ERR,
	  NO_MODIFICATION_ALLOWED_ERR : NO_MODIFICATION_ALLOWED_ERR,
	  NOT_FOUND_ERR               : NOT_FOUND_ERR,
	  NOT_SUPPORTED_ERR           : NOT_SUPPORTED_ERR,
	  INUSE_ATTRIBUTE_ERR         : INUSE_ATTRIBUTE_ERR
	});

	core.NodeList = function NodeList(element, query) {
	  if (!query) {
	    // Non-live NodeList
	    if (Array.isArray(element)) {
	      Array.prototype.push.apply(this, element);
	    }
	    Object.defineProperties(this, {
	      _length: {value: element ? element.length : 0, writable:true}
	    });
	  } else {
	    Object.defineProperties(this, {
	      _element: {value: element},
	      _query: {value: query},
	      _snapshot: {writable: true},
	      _length: {value: 0, writable: true},
	      _version: {value: -1, writable: true}
	    });
	    this._update();
	  }
	};

	function lengthFromProperties(arrayLike) {
	  var max = -1;
	  for (var i in arrayLike) {
	    var asNumber = +i;
	    if (!isNaN(asNumber) && asNumber > max) {
	      max = asNumber;
	    }
	  }
	  return max + 1;
	}
	core.NodeList.prototype = {
	  _update: function() {
	    var i;

	    if (!this._element) {
	      this._length = lengthFromProperties(this);
	    } else {
	      if (this._version < this._element._version) {
	        var nodes = this._snapshot = this._query();
	        this._resetTo(nodes);
	        this._version = this._element._version;
	      }
	    }
	  },
	  _resetTo: function(array) {
	    var startingLength = lengthFromProperties(this);
	    for (var i = 0; i < startingLength; ++i) {
	      delete this[i];
	    }

	    for (var j = 0; j < array.length; ++j) {
	      this[j] = array[j];
	    }
	    this._length = array.length;
	  },
	  _toArray: function() {
	    if (this._element) {
	      this._update();
	      return this._snapshot;
	    }

	    return Array.prototype.slice.call(this);
	  },
	  get length() {
	    this._update();
	    return this._length || 0;
	  },
	  set length(length) {
	    return this._length;
	  },
	  item: function(index) {
	    this._update();
	    return this[index] || null;
	  },
	  toString: function() {
	    return '[ jsdom NodeList ]: contains ' + this.length + ' items';
	  }
	};
	Object.defineProperty(core.NodeList.prototype, 'constructor', {
	  value: core.NodeList,
	  writable: true,
	  configurable: true
	});

	core.DOMImplementation = function DOMImplementation(document, /* Object */ features) {
	  this._ownerDocument = document;
	  this._features = {};

	  if (features) {
	    for (var feature in features) {
	      if (features.hasOwnProperty(feature)) {
	        this.addFeature(feature.toLowerCase(), features[feature]);
	      }
	    }
	  }
	};

	core.DOMImplementation.prototype = {
	  get ownerDocument() { return this._ownerDocument },
	  removeFeature : function(feature, version) {
	    feature = feature.toLowerCase();
	    if (this._features[feature]) {
	      if (version) {
	        var j        = 0,
	            versions = this._features[feature],
	            l        = versions.length;

	        for (j; j<l; j++) {
	          if (versions[j] === version) {
	            versions.splice(j,1);
	            return;
	          }
	        }
	      } else {
	        delete this._features[feature];
	      }
	    }
	  },

	  addFeature: function(feature, version) {
	    feature = feature.toLowerCase();

	    if (version) {

	      if (!this._features[feature]) {
	        this._features[feature] = [];
	      }

	      if (version instanceof Array) {
	        Array.prototype.push.apply(this._features[feature], version);
	      } else {
	        this._features[feature].push(version);
	      }
	    }
	  },

	  hasFeature: function(/* string */ feature, /* string */ version) {
	    feature = (feature) ? feature.toLowerCase() : '';
	    var versions = (this._features[feature]) ?
	                    this._features[feature]  :
	                    false;

	    if (!version && versions.length && versions.length > 0) {
	      return true;
	    } else if (typeof versions === 'string') {
	      return versions === version;
	    } else if (versions.indexOf && versions.length > 0) {
	      for (var i = 0; i < versions.length; i++) {
	        var found = versions[i] instanceof RegExp ?
	          versions[i].test(version) :
	          versions[i] === version;
	        if (found) { return true; }
	      }
	      return false;
	    } else {
	      return false;
	    }
	  }
	};


	var attrCopy = function(src, dest, fn) {
	  if (src.attributes) {
	    var attrs = src.attributes, i, l = attrs.length, attr, copied;
	    for (i=0;i<l;i++) {
	      attr = attrs[i];
	      // skip over default attributes
	      if (!attr.specified) {
	        continue;
	      }
	      // TODO: consider duplicating this code and moving it into level2/core
	      if (attr.namespaceURI) {
	        dest.setAttributeNS(attr.namespaceURI,
	                                     attr.nodeName,
	                                     attr.nodeValue);
	        var localName = attr.nodeName.split(':').pop();
	        copied = dest.getAttributeNodeNS(attr.namespaceURI, localName);
	      } else {
	        dest.setAttribute(attr.nodeName, attr.nodeValue);
	        copied = dest.getAttributeNode(attr.nodeName);
	      }
	      if (typeof fn == "function") {
	        fn(attr, copied);
	      }

	    }
	  }
	  return dest;
	};

	core.Node = function Node(ownerDocument) {
	  this._childNodes = new core.NodeList();
	  this._ownerDocument = ownerDocument;
	  this._attributes = new AttributeList(ownerDocument, this);
	  this._nodeName = null;
	  this._childrenList = null;
	  this._version = 0;
	  this._nodeValue = null;
	  this._parentNode = null;
	  this._nodeName = null;
	  this._memoizedQueries = {};
	  this._readonly = false;
	};

	core.Node.ELEMENT_NODE                = ELEMENT_NODE;
	core.Node.ATTRIBUTE_NODE              = ATTRIBUTE_NODE;
	core.Node.TEXT_NODE                   = TEXT_NODE;
	core.Node.CDATA_SECTION_NODE          = CDATA_SECTION_NODE;
	core.Node.ENTITY_REFERENCE_NODE       = ENTITY_REFERENCE_NODE;
	core.Node.ENTITY_NODE                 = ENTITY_NODE;
	core.Node.PROCESSING_INSTRUCTION_NODE = PROCESSING_INSTRUCTION_NODE;
	core.Node.COMMENT_NODE                = COMMENT_NODE;
	core.Node.DOCUMENT_NODE               = DOCUMENT_NODE;
	core.Node.DOCUMENT_TYPE_NODE          = DOCUMENT_TYPE_NODE;
	core.Node.DOCUMENT_FRAGMENT_NODE      = DOCUMENT_FRAGMENT_NODE;
	core.Node.NOTATION_NODE               = NOTATION_NODE;

	core.Node.prototype = {
	  ELEMENT_NODE                : ELEMENT_NODE,
	  ATTRIBUTE_NODE              : ATTRIBUTE_NODE,
	  TEXT_NODE                   : TEXT_NODE,
	  CDATA_SECTION_NODE          : CDATA_SECTION_NODE,
	  ENTITY_REFERENCE_NODE       : ENTITY_REFERENCE_NODE,
	  ENTITY_NODE                 : ENTITY_NODE,
	  PROCESSING_INSTRUCTION_NODE : PROCESSING_INSTRUCTION_NODE,
	  COMMENT_NODE                : COMMENT_NODE,
	  DOCUMENT_NODE               : DOCUMENT_NODE,
	  DOCUMENT_TYPE_NODE          : DOCUMENT_TYPE_NODE,
	  DOCUMENT_FRAGMENT_NODE      : DOCUMENT_FRAGMENT_NODE,
	  NOTATION_NODE               : NOTATION_NODE,

	  get children() {
	    if (!this._childrenList) {
	      var self = this;
	      this._childrenList = new core.NodeList(this, function() {
	        return Array.prototype.filter.call(self._childNodes, function(node) {
	          return node.tagName;
	        });
	      });
	    }
	    return this._childrenList;
	  },
	  get nodeValue() {
	    return this._nodeValue;
	  },
	  set nodeValue(value) {
	    // readonly
	    if (this._readonly === true) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR, 'Attempting to modify a read-only node');
	    }

	    this._nodeValue = value;
	  },
	  get parentNode() { return this._parentNode;},

	  get nodeName() {
	    var name = this._nodeName || this._tagName;
	    if (this.nodeType === ELEMENT_NODE &&
	        this._ownerDocument                  &&
	        this._ownerDocument._doctype          &&
	        this._ownerDocument._doctype.name.toLowerCase().indexOf("html") !== -1)
	    {
	      return name.toUpperCase();
	    }
	    return name;
	  },
	  set nodeName(unused) { throw new core.DOMException();},
	  get attributes() { return this._attributes;},
	  get firstChild() {
	    return this._childNodes.length > 0 ? this._childNodes[0] : null;
	  },
	  set firstChild(unused) { throw new core.DOMException();},
	  get ownerDocument() { return this._ownerDocument;},
	  get readonly() { return this._readonly;},

	  get lastChild() {
	    var len = this._childNodes.length;
	    return len > 0 ? this._childNodes[len -1] : null;
	  },
	  set lastChild(unused) { throw new core.DOMException();},

	  get childNodes() {
	    return this._childNodes;
	  },
	  set childNodes(unused) { throw new core.DOMException();},

	  _indexOf: function(/*Node*/ child) {
	    if (!this._childNodes ||
		!this._childNodes.length) {
	      return -1;
	    }

	    var currentNode, index = 0, children = this._childNodes;

	    while ((currentNode = children[index])) {
	      if (currentNode == child) {
	        break;
	      }
	      index++;
	    }

	    if (currentNode == child) {
	      return index;
	    }
	    return -1;
	  },

	  get nextSibling() {
	    // find this node's index in the parentNode, add one and call it a day
	    if (!this._parentNode || !this._parentNode._indexOf) {
	      return null;
	    }

	    var index = this._parentNode._indexOf(this);

	    if (index == -1 || index+1 >= this._parentNode._childNodes.length) {
	      return null;
	    }

	    return this._parentNode._childNodes[index+1] || null;
	  },
	  set nextSibling(unused) { throw new core.DOMException();},

	  get previousSibling() {
	    if (!this._parentNode || !this._parentNode._indexOf) {
	      return null;
	    }

	    var index = this._parentNode._indexOf(this);

	    if (index == -1 || index-1 < 0) {
	      return null;
	    }

	    return this._parentNode._childNodes[index-1] || null;
	  },
	  set previousSibling(unused) { throw new core.DOMException();},

	  /* returns Node */
	  insertBefore :  function(/* Node */ newChild, /* Node*/ refChild) {
	    if (this._readonly === true) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR, 'Attempting to modify a read-only node');
	    }

	    // Adopt unowned children, for weird nodes like DocumentType
	    if (!newChild._ownerDocument) newChild._ownerDocument = this._ownerDocument;

	    // TODO - if (!newChild) then?
	    if (newChild._ownerDocument !== this._ownerDocument) {
	      throw new core.DOMException(WRONG_DOCUMENT_ERR);
	    }

	    if (newChild.nodeType && newChild.nodeType === ATTRIBUTE_NODE) {
	      throw new core.DOMException(HIERARCHY_REQUEST_ERR);
	    }

	    // search for parents matching the newChild
	    var current = this;
	    do {
	      if (current === newChild) {
	        throw new core.DOMException(HIERARCHY_REQUEST_ERR);
	      }
	    } while((current = current._parentNode));

	    // fragments are merged into the element
	    if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {
	      var tmpNode, i = newChild._childNodes.length;
	      while (i-- > 0) {
	        tmpNode = newChild.removeChild(newChild.firstChild);
	        this.insertBefore(tmpNode, refChild);
	      }
	    } else if (newChild === refChild) {
	      return newChild;
	    } else {
	      // if the newChild is already in the tree elsewhere, remove it first
	      if (newChild._parentNode) {
	        newChild._parentNode.removeChild(newChild);
	      }

	      if (refChild == null) {
	        var refChildIndex = this._childNodes.length;
	      } else {
	        var refChildIndex = this._indexOf(refChild);
	        if (refChildIndex == -1) {
	          throw new core.DOMException(NOT_FOUND_ERR);
	        }
	      }

	      Array.prototype.splice.call(this._childNodes, refChildIndex, 0, newChild);

	      newChild._parentNode = this;
	      if (this._attached && newChild._attach) {
	        newChild._attach();
	      }

	      this._modified();
	    }

	    return newChild;
	  }, // raises(DOMException);

	  _modified: function() {
	    this._version++;
	    if (this._ownerDocument) {
	      this._ownerDocument._version++;
	    }

	    if (this._childrenList) {
	      this._childrenList._update();
	    }
	    this._clearMemoizedQueries()
	  },

	  _clearMemoizedQueries: function() {
	    this._memoizedQueries = {};
	    if (this._parentNode && this._parentNode !== this) {
	      this._parentNode._clearMemoizedQueries();
	    }
	  },

	  _attrModified: function(name, value, oldValue) {
	    if (name == 'id' && this._attached) {
	      var doc = this._ownerDocument;
	      detachId(oldValue,this,doc);
	      attachId(value,this,doc);
	    }

	    // Check for inline event handlers.
	    // We can't set these like other attributes then look it up in
	    // dispatchEvent() because that would create 2 'traditional' event handlers
	    // in the case where there's an inline event handler attribute, plus one
	    // set using element.on* in a script.
	    //
	    // @see http://www.w3.org/TR/2011/WD-html5-20110405/webappapis.html#event-handler-content-attributes
	    if ((name.length > 2) && (name[0] == 'o') && (name[1] == 'n')) {
	        if (value) {
	          var self = this;
	          // Check whether we're the window. This can happen because inline
	          // handlers on the body are proxied to the window.
	          var w = (typeof self.run !== 'undefined') ? self : self._ownerDocument.parentWindow;
	          self[name] = function (event) {
	              // The handler code probably refers to functions declared in the
	              // window context, so we need to call run().

	              // Use awesome hacks to get the correct `this` context for the
	              // inline event handler. This would only be necessary if we're an
	              // element, but for the sake of simplicity we also do it on window.

	              // Also set event variable and support `return false`.
	              w.__tempContextForInlineEventHandler = self;
	              w.__tempEvent = event;
	              w.run("if ((function (event) {" + value + "}).call(" +
	                "window.__tempContextForInlineEventHandler, window.__tempEvent) === false) {" +
	                "window.__tempEvent.preventDefault()}");
	              delete w.__tempContextForInlineEventHandler;
	              delete w.__tempEvent;
	          };
	        } else {
	          this[name] = null;
	        }
	    }
	  },

	  /* returns Node */
	  replaceChild : function(/* Node */ newChild, /* Node */ oldChild){
	    this.insertBefore(newChild, oldChild);
	    return this.removeChild(oldChild);
	  }, //raises(DOMException);

	  /* returns void */
	  _attach : function() {
	    this._attached = true;
	    if (this.id) {
	      attachId(this.id,this,this._ownerDocument);
	    }
	    for (var i=0,len=this._childNodes.length;i<len;i++) {
	      if (this._childNodes[i]._attach) {
	        this._childNodes[i]._attach();
	      }
	    }
	  },
	  /* returns void */
	  _detach : function() {
	    var i, elms;
	    this._attached = false;
	    if (this.id) {
	      detachId(this.id,this,this._ownerDocument);
	    }
	    for (var i=0,len=this._childNodes.length;i<len;i++) {
	      this._childNodes[i]._detach();
	    }
	  },

	  /* returns Node */
	  removeChild : function(/* Node */ oldChild){
	    if (this._readonly === true) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    // TODO - if (!oldChild) then?
	    var oldChildIndex = this._indexOf(oldChild);
	    if (oldChildIndex == -1) {
	      throw new core.DOMException(NOT_FOUND_ERR);
	    }

	    Array.prototype.splice.call(this._childNodes, oldChildIndex, 1);
	    oldChild._parentNode = null;
	    this._modified();
	    oldChild._detach();
	    return oldChild;
	  }, // raises(DOMException);

	  /* returns Node */
	  appendChild : function(/* Node */ newChild) {
	    return this.insertBefore(newChild, null);
	  }, // raises(DOMException);

	  /* returns boolean */
	  hasChildNodes : function() {
	    return this._childNodes.length > 0;
	  },

	  /* returns Node */
	  cloneNode : function(/* bool */ deep, fn) {

	    var object = null;
	    switch (this.nodeType) {

	      case this.ELEMENT_NODE:
	        object = attrCopy(this,this._ownerDocument.createElement(this.tagName), fn);
	      break;

	      case this.TEXT_NODE:
	        object = attrCopy(this,this._ownerDocument.createTextNode(this.tagName));
	        object.nodeValue = this.nodeValue;
	      break;
	      case this.CDATA_SECTION_NODE:
	        object = this._ownerDocument.createCDATASection(this.tagName);
	        object.nodeValue = this.nodeValue;
	      break;
	      case this.ENTITY_REFERENCE_NODE:
	        var name = (this._entity) ? this._entity.name : this._entityName,
	            ref  = this._ownerDocument.createEntityReference(name);

	        object = attrCopy(this, ref);
	        object.nodeValue = this.nodeValue;
	      break;
	      case this.ATTRIBUTE_NODE:
	        object = this._ownerDocument.createAttribute(this.name);
	      break;
	      case this.ENTITY_NODE:
	        var entity = this._ownerDocument.createEntityNode(this.name);
	        object = attrCopy(this, entity);
	        object.nodeValue = this.nodeValue;
	        object._publicId = this._publicId;
	        object._systemId = this._systemId;
	        object._notationName = this.notationName;
	      break;
	      case this.PROCESSING_INSTRUCTION_NODE:
	        var pi = this._ownerDocument.createProcessingInstruction(this._target,
	                                                                this._data);
	        object = attrCopy(this, pi);
	        object.nodeValue = this.nodeValue;
	      break;
	      case this.COMMENT_NODE:
	        object = this._ownerDocument.createComment(this.tagName);
	        object.nodeValue = this.nodeValue;
	      break;
	      case this.DOCUMENT_NODE:
	        object = attrCopy(this, new core.Document());
	        // TODO: clone the doctype/entities/notations/etc?
	      break;
	      case this.DOCUMENT_TYPE_NODE:
	        object = attrCopy(this, new core.DocumentType());
	        object.nodeValue = this.nodeValue;
	      break;
	      case this.DOCUMENT_FRAGMENT_NODE:
	        object = this._ownerDocument.createDocumentFragment();
	      break;
	      case this.NOTATION_NODE:
	        object = this._ownerDocument.createNotationNode(this._name,
	                                                       this._publicId,
	                                                       this._systemId);
	        object = attrCopy(this,object);
	        object.nodeValue = this.nodeValue;
	      break;
	      default:
	        throw new core.DOMException(NOT_FOUND_ERR);
	      break;
	    }

	    if (typeof fn === "function") {
	      fn(this, object);
	    }

	    if (deep || this.nodeType === ATTRIBUTE_NODE) {
	      var clone = null;
	      for (var i=0,len=this._childNodes.length;i<len;i++)
	      {
	        clone = this._childNodes[i].cloneNode(true);
	        if (clone.nodeType === ATTRIBUTE_NODE) {
	          object.setAttributeNode(clone);
	        } else {
	          var readonly = object._readonly;
	          object._readonly = false;
	          object.appendChild(clone);
	          object._readonly = readonly;
	        }
	      }
	    }

	    return object;
	  },

	  /* returns void */
	  normalize: function() {
	    var prevChild, child, attr,i;

	    if (this._attributes && this._attributes.length) {
	      for (i=0;i<this._attributes.length;i++)
	      {
	        if (this._attributes[i]) {
	          attr = this._attributes[i].normalize();
	        }
	      }
	    }

	    for (i=0;i<this._childNodes.length;i++)
	    {
	      child = this._childNodes[i];

	      if (child.normalize) {
	        child.normalize();
	      }

	      // Level2/core clean off empty nodes
	      if (child.nodeValue === "") {
	        this.removeChild(child);
	        i--;
	        continue;
	      }

	      if (i>0) {
	        prevChild = this._childNodes[i-1];

	        if (child.nodeType === TEXT_NODE &&
	            prevChild.nodeType === TEXT_NODE)
	        {

	          // remove the child and decrement i
	          prevChild.appendData(child.nodeValue);

	          this.removeChild(child);
	          i--;
	        }
	      }
	    }
	  },
	  toString: function() {
	    var id = '';
	    if (this.id) {
	        id = '#' + this.id;
	    }
	    if (this.className) {
	        var classes = this.className.split(/\s+/);
		for (var i = 0, len = classes.length; i < len; i++) {
		    id += '.' + classes[i];
		}
	    }
	    return '[ ' + this.tagName + id + ' ]';
	  },
	  raise: function(type, message, data) {
	    var text = type + ": " + message;

	    if (data) {
	      if (data.exception) {
	        text = data.exception.stack;
	      } else {
	        text += ' - More:\n' + data;
	      }
	    }

	    if (type === "error") {
	      if (!this.errors) {
	        this.errors = [];
	      }
	      // TODO: consider using actual `Error` objects or `DOMException`s even..
	      var err = {
	        type    : type,
	        message : message || "No message",
	        data    : data || null
	      };

	      this.errors.push(err);

	      if (this._ownerDocument        &&
	          this._ownerDocument.raise &&
	          this !== this._ownerDocument)
	      {
	        this._ownerDocument.raise(type, message, data);
	      }
	    }
	  }
	};


	core.NamedNodeMap = function NamedNodeMap(document) {
	  this._nodes = Object.create(null);
	  this._nsStore = {};
	  this.length = 0;
	  this._ownerDocument = document;
	  this._readonly = false;
	};
	core.NamedNodeMap.prototype = {
	  get readonly() { return this._readonly;},
	  get ownerDocument() { this._ownerDocument;},

	  exists : function(name) {
	    return (this._nodes[name] || this._nodes[name] === null) ? true : false;
	  },

	  /* returns Node */
	  getNamedItem: function(/* string */ name) {
	    return this._nodes[name] || null;
	  },

	  /* returns Node */
	  setNamedItem: function(/* Node */ arg) {

	    // readonly
	    if (this._readonly === true) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    // arg is from a different document
	    if (arg && arg._ownerDocument !== this._ownerDocument) {
	      throw new core.DOMException(WRONG_DOCUMENT_ERR);
	    }

	    // if this argument is already in use..
	    if (arg && arg._ownerElement) {
	      throw new core.DOMException(INUSE_ATTRIBUTE_ERR);
	    }

	    var name = arg.name || arg.tagName;
	    var ret = this._nodes[name];
	    if (!ret) {
	      this.length++;
	      ret = null;
	    }
	    arg._specified = true;
	    this._nodes[name] = arg;

	    // Avoid overwriting prototype methods etc.:
	    if (this.hasOwnProperty(name) || !(name in this)) {
	      this[name] = arg;
	    }
	    return ret;
	  }, // raises: function(DOMException) {},

	  /* returns Node */
	  removeNamedItem: function(/* string */ name) {

	    // readonly
	    if (this._readonly === true) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    if (!this._nodes[name]) {
	      throw new core.DOMException(NOT_FOUND_ERR);
	    }

	    var prev = this._nodes[name] || null;
	    delete this._nodes[name];
	    delete this[name];

	    this.length--;
	    return prev;
	  }, // raises: function(DOMException) {},

	  /* returns Node */
	  item: function(/* int */ index) {
	    var current = 0;
	    for (var member in this._nodes) {
	      if (current === index && this._nodes[member]) {
	        return this._nodes[member];
	      }
	      current++;
	    }
	    return null;
	  }
	};

	//
	// For historical reasons, AttributeList objects must allow accessing
	// attributes as if the object were an associative array. For
	// instance, if `attributes` is an AttributeList object then
	// `attributes.x` should evaluate to the attribute named `x` (which is
	// not in any namespace). The AttributeList class uses the dollar
	// symbol ($) to reduce the possibility of a clash between its field
	// names and possible attribute names. For instance, if the method
	// currently named `$set` were instead named `set` then it would not
	// be possible to access an attribute named `set` through
	// `attributes.set`. The dollar symbol is not valid in attribute names
	// so `$set` cannot clash.
	//
	// Some fields do not get the $ because:
	//
	// * They are part of the API (e.g. `setNamedItem`, `length`), so they
	//   must be visible under a specific name.
	//
	// * Jsdom's code which traverses the DOM tree expects regularly named
	//   fields (e.g. `_parentNode`).
	//
	function AttributeList(document, parentNode) {
	  this._ownerDocument = document;
	  this._parentNode = parentNode;
	  this._readonly = false;
	  this._$ns_to_attrs = Object.create(null);
	  this._$name_to_attrs = Object.create(null);
	  this.length = 0;
	}

	AttributeList.prototype = {
	  _$reserved: [], // Initialized later


	  //
	  // Code internal to jsdom and which manipulates an AttributeList
	  // object should use the following methods rather than the methods
	  // that provide the NamedNodeMap interface.
	  //

	  // This method *ignores* namespaces. This is *not* the same thing as
	  // requesting an attribute with a null namespace.
	  $getNoNS: function (name) {
	    var attrs = this._$name_to_attrs[name];
	    if (!attrs) {
	      return null;
	    }

	    return attrs[0] || null;
	  },

	  $getNode: function (namespace, localName) {
	    var attrs = this._$ns_to_attrs[namespace];
	    if (!attrs) {
	      return null;
	    }

	    var ret = attrs[localName];
	    if (!ret) {
	      return null;
	    }

	    return ret;
	  },

	  // This method *ignores* namespaces. This is *not* the same thing as
	  // requesting an attribute with a null namespace.
	  $setNoNS: function (name, value) {
	    var attr = this.$getNoNS(name);
	    if (!attr) {
	      this.$set(name, value);
	      return;
	    }

	    var prev_val = attr.value;
	    attr.value = value;
	    attr._specified = true;

	    this._parentNode._attrModified(attr.name, attr.value, prev_val);
	    this._parentNode._modified();
	  },

	  $set: function (localName, value, name, prefix, namespace) {
	    if (this._readonly) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    if (name === undefined) {
	      name = localName;
	    }

	    if (prefix === undefined) {
	      prefix = null;
	    }

	    if (namespace === undefined) {
	      namespace = null;
	    }

	    var prev_attr = this.$getNode(namespace, localName);
	    var attr;

	    var prev_val = null;
	    if (prev_attr) {
	      prev_val = prev_attr.value;
	      prev_attr._prefix = prefix;
	      prev_attr.value = value;
	      attr = prev_attr;
	      attr._specified = true;

	      this._parentNode._attrModified(attr.name, attr.value, prev_val);
	      this._parentNode._modified();
	    }
	    else {
	      attr = this._ownerDocument.createAttribute(name);
	      attr._ownerElement = this._parentNode;
	      attr.value = value;
	      attr._namespaceURI = namespace;
	      attr._prefix = prefix;
	      attr._localName = localName;
	      attr._parentNode = this._parentNode;
	      attr._created = true;
	      this.$setNode(attr);
	      // $setNode calls the parent node methods.
	    }
	  },

	  $setNode: function (attr) {
	    if (this._readonly) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    if (attr.nodeType !== ATTRIBUTE_NODE) {
	      throw new core.DOMException(HIERARCHY_REQUEST_ERR);
	    }

	    if (attr._ownerDocument !== this._ownerDocument) {
	      throw new core.DOMException(WRONG_DOCUMENT_ERR);
	    }

	    if (attr._parentNode && attr._parentNode !== this._parentNode) {
	      throw new core.DOMException(INUSE_ATTRIBUTE_ERR);
	    }

	    var localName = attr._localName;
	    var name = attr.name;
	    var prefix = attr._prefix;
	    var namespace = attr._namespaceURI;

	    if (name === undefined) {
	      name = localName;
	    }

	    if (prefix === undefined) {
	      prefix = null;
	    }

	    if (namespace === undefined) {
	      namespace = null;
	    }

	    var prev_attr = this.$getNode(namespace, localName);

	    var prev_val = null;
	    if (prev_attr) {
	      prev_val = prev_attr.value;
	      // Remove the old attribute
	      this._$onlyRemoveNode(prev_attr);
	    }

	    attr._parentNode = this._parentNode;
	    attr._ownerElement = this._parentNode;
	    attr._specified = true;

	    var attrs = this._$ns_to_attrs[namespace];
	    if (!attrs) {
	      attrs = this._$ns_to_attrs[namespace] = Object.create(null);
	    }
	    attrs[localName] = attr;

	    attrs = this._$name_to_attrs[name];
	    if (!attrs) {
	      attrs = this._$name_to_attrs[name] = [attr];
	    }
	    else {
	      attrs.push(attr);
	    }

	    // Only attributes in the null namespace can be set this way.
	    if (namespace === null) {
	      // Make the node a field on this object but ONLY if it does not
	      // clash with the reserved names.
	      if (this._$reserved.indexOf(name) === -1) {
	        this[name] = attr;
	      }
	    }

	    this[this.length] = attr;
	    this.length++;

	    this._parentNode._attrModified(attr.name, attr.value, prev_val);
	    this._parentNode._modified();

	    return prev_attr;
	  },

	  // This method *ignores* namespaces. This is *not* the same thing as
	  // requesting an attribute with a null namespace.
	  $removeNoNS: function (name) {
	    var attr = this.$getNoNS(name);
	    return attr ? this.$removeNode(attr) : null;
	  },

	  $remove: function (namespace, localName) {
	    var attr = this.$getNode(namespace, localName);
	    return attr ? this.$removeNode(attr) : null;
	  },

	  /* Only removes the node, and does not add a default value. */
	  _$onlyRemoveNode: function (attr) {
	    var namespace = attr._namespaceURI;
	    var localName = attr._localName;

	    var attrs = this._$ns_to_attrs[namespace];
	    if (!attrs) {
	      return null;
	    }

	    var found_attr = attrs[localName];
	    if (found_attr !== attr) {
	      return null;
	    }

	    if (this._readonly) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    attr._ownerElement = null;
	    attr._parentNode = null;
	    delete attrs[localName];

	    attrs = this._$name_to_attrs[attr.name];
	    attrs.splice(attrs.indexOf(attr), 1);

	    var ix = Array.prototype.indexOf.call(this, attr);
	    // Splice also modifies length.
	    Array.prototype.splice.call(this, ix, 1);

	    if (this[attr.name] === attr) {
	      delete this[attr.name];
	    }

	    this._parentNode._attrModified(attr.name);
	    this._parentNode._modified();

	    return attr;
	  },

	  $removeNode: function (attr) {
	    if (!this._$onlyRemoveNode(attr)) {
	      return null;
	    }

	    // set default value if available
	    var doc = this._ownerDocument;
	    if (doc && doc._doctype && doc._doctype.name.toLowerCase() !== "html") {
	      var elem =
	            doc._doctype._attributes.getNamedItem(this._parentNode.nodeName);

	      if (elem) {
	        var defaultValue = elem.attributes.getNamedItemNS(attr._namespaceURI,
	                                                          attr._localName);

	        if (defaultValue) {
	          this.$set(attr._localName, defaultValue.value, attr.name, attr._prefix,
	                   attr._namespaceURI);
	          var new_attr = this.$getNode(attr._namespaceURI, attr._localName);
	          new_attr._specified = false;
	        }
	      }
	    }
	    return attr;
	  },

	  // Although http://dom.spec.whatwg.org/#concept-element-attribute
	  // does not specify that the attributes field on an Element should
	  // support NamedNodeMap, in practice browsers still support this
	  // interface so we should support it for compatibility.

	  getNamedItem: function (name) {
	    return this.getNamedItemNS(null, name);
	  },
	  removeNamedItem: function (name) {
	    return this.removeNamedItemNS(null, name);
	  },
	  item: function (i) {
	      return this[i];
	  },
	  getNamedItemNS: function (namespaceURI, localName) {
	    if (namespaceURI === "") {
	      namespaceURI = null;
	    }

	    return this.$getNode(namespaceURI, localName);
	  },
	  removeNamedItemNS: function (namespaceURI, localName) {
	    var ret = this.$remove(namespaceURI, localName);

	    if (ret === null) {
	      throw new core.DOMException(NOT_FOUND_ERR);
	    }

	    return ret;
	  }
	};

	// Alias these methods.
	AttributeList.prototype.setNamedItem = AttributeList.prototype.$setNode;
	AttributeList.prototype.setNamedItemNS = AttributeList.prototype.$setNode;

	(function () {
	  // Construct the list of reserved attribute names from a temporarily
	  // created AttributeList and from the chain of prototypes. We need
	  // this because JavaScript code running an a browser expects to be
	  // able to do el.attributes.x to get the value of the attribute "x"
	  // on an element. Unfortunately, JavaScript *currently* does not
	  // allow us to elegantly provide such functionality without risking
	  // a clash with the fields and methods set on the AttributeList
	  // object. Hence we need a list of reserved field names.

	  var reserved = Object.keys(new AttributeList());
	  var prototype = AttributeList.prototype;
	  while (prototype) {
	    reserved = reserved.concat(Object.getOwnPropertyNames(prototype));
	    prototype = Object.getPrototypeOf(prototype);
	  }
	  AttributeList.prototype._$reserved = reserved;
	})();

	core.AttributeList = AttributeList;

	core.NotationNodeMap = function NotationNodeMap(document) {
	  core.NamedNodeMap.call(this, document);
	  this._readonly = false;
	  for (var i=1;i<arguments.length;i++) {
	    this.setNamedItem(arguments[i]);
	  }
	  this._readonly = true;
	};
	inheritFrom(core.NamedNodeMap, core.NotationNodeMap);

	core.EntityNodeMap = function EntityNodeMap(document) {
	  core.NamedNodeMap.call(this,document);
	  this._readonly = false;
	  var i = 1, l = arguments.length;

	  for (i=1; i<l; i++) {
	    this.setNamedItem(arguments[i]);
	  }
	  core.markTreeReadonly(this);
	};
	inheritFrom(core.NamedNodeMap, core.EntityNodeMap);

	core.Element = function Element(document, tagName) {
	  this._ownerDocument = document;
	  core.Node.call(this, document);
	  this._nodeName = tagName;
	  this._tagName = tagName;
	};

	inheritFrom(core.Node, core.Element, {

	  get nodeValue() { return null;},
	  set nodeValue(value) { /* do nothing */ },
	  get tagName() {
	    if (this.nodeType === ELEMENT_NODE &&
	        this._ownerDocument                  &&
	        this._ownerDocument._doctype          &&
	        this._ownerDocument._doctype.name.toLowerCase().indexOf("html") !== -1)
	    {
	      return this.nodeName.toUpperCase();
	    }
	    return this.nodeName;
	  },
	  nodeType : ELEMENT_NODE,
	  get attributes() {
	    return this._attributes;
	  },

	  /* returns string */
	  getAttribute: function(/* string */ name) {
	    var attribute = this._attributes.$getNode(null, name);
	    if (attribute) {
	      return attribute.value;
	    }
	    return null;
	  },

	  setAttribute: function(/* string */ name, /* string */ value) {
	    if (this._ownerDocument) {
	      var attr = this._ownerDocument.createAttribute(name);
	      attr.value = value;
	      attr._ownerElement = this;
	      attr._created = true;
	      this._attributes.$setNode(attr);
	    }

	  }, //raises: function(DOMException) {},

	  removeAttribute: function(/* string */ name) {
	    this._attributes.$remove(null, name);
	  }, // raises: function(DOMException) {},

	  /* returns Attr */
	  getAttributeNode: function(/* string */ name) {
	    return this._attributes.$getNode(null, name);
	  },

	  /* returns Attr */
	  setAttributeNode: function(/* Attr */ newAttr) {
	    var prevNode = this._attributes.$getNode(null, newAttr.name);
	    if (prevNode) {
	      prevNode._ownerElement = null;
	    }

	    newAttr._ownerElement = this;
	    this._attributes.$setNode(newAttr);

	    return (prevNode && prevNode.specified) ? prevNode : null;
	  }, //  raises: function(DOMException) {},

	  /* returns Attr */
	  removeAttributeNode: function(/* Attr */ oldAttr) {
	    var ret = this._attributes.$removeNode(oldAttr);

	    if (ret !== null) {
	      return ret;
	    }

	    throw new core.DOMException(NOT_FOUND_ERR);
	  }, //raises: function(DOMException) {},

	  /* returns NodeList */
	  getElementsByTagName: core.memoizeQuery(function(/* string */ name) {
	    name = name.toLowerCase();

	    function filterByTagName(child) {
	      child = (child.nodeType === ENTITY_REFERENCE_NODE) ?
	               child._entity                             :
	               child;

	      if (child.nodeName && child.nodeType === ELEMENT_NODE) {
	        return name === "*" || (child.nodeName.toLowerCase() === name);
	      }

	      return false;
	    }
	    return new core.NodeList(this._ownerDocument || this, core.mapper(this, filterByTagName, true));
	  }),
	});

	core.DocumentFragment = function DocumentFragment(document) {
	  core.Node.call(this, document);
	  this._nodeName = this._tagName = "#document-fragment";
	};
	inheritFrom(core.Node, core.DocumentFragment, {
	  nodeType : DOCUMENT_FRAGMENT_NODE,
	  get nodeValue() { return null;},
	  set nodeValue(unused) { /* do nothing */ },
	  get attributes() { return null;}
	});

	core.ProcessingInstruction = function ProcessingInstruction(document, target, data) {
	  this._ownerDocument = document;
	  core.Node.call(this, document);
	  this._nodeName = target;
	  this._tagName = target;
	  this._target = target;
	  this._nodeValue = data;
	}
	inheritFrom(core.Node, core.ProcessingInstruction, {
	  nodeType : PROCESSING_INSTRUCTION_NODE,
	  get target() { return this._target;},
	  set target(value) { throw new core.DOMException(1);},
	  get nodeValue() { return this._nodeValue;},
	  set nodeValue(value) { this._nodeValue = value},
	  get data()   { return this._nodeValue;},
	  set data(unused)   { throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);},
	  get attributes() { return null;}

	});

	core.Document = function Document(options) {
	  if (!options) {
	    options = {};
	  }
	  else if (typeof options == 'string') {
	    options = {
	      name: options
	    };
	  }
	  core.Node.call(this, "#document");
	  this._nodeName = this._tagName = "#document";
	  this._contentType = options.contentType || "text/xml";
	  this._doctype = options._doctype;
	  this._implementation = options.implementation || new (core.DOMImplementation)();
	  this._documentElement = null;
	  this._ids = Object.create(null);
	  this._attached = true;
	  this._ownerDocument = this;
	  this._readonly = false;
	};


	var tagRegEx = /[^\w:\d_\.-]+/i;
	var entRegEx = /[^\w\d_\-&;]+/;
	var invalidAttrRegEx = /[\s"'>/=\u0000-\u001A]/;

	inheritFrom(core.Node, core.Document, {
	  nodeType : DOCUMENT_NODE,
	  _elementBuilders : { },
	  _defaultElementBuilder: function(document, tagName) {
	    return new core.Element(document, tagName);
	  },
	  get contentType() { return this._contentType;},
	  get doctype() { return this._doctype || null;},
	  set doctype(doctype) { this._doctype = doctype;},
	  get documentElement() {
	    if (this._documentElement) {
	      return this._documentElement;
	    } else {
	      var children = this._childNodes, len = this._childNodes.length, i=0;
	      for (i;i<len;i++) {
	        if (children[i].nodeType === ELEMENT_NODE) {
	          this._documentElement = children[i];
	          return children[i];
	        }
	      }
	      return null;
	    }
	  },

	  get implementation() { return this._implementation;},
	  set implementation(implementation) { this._implementation = implementation;},
	  get nodeName() { return '#document'; },
	  get tagName() {
	    return null;
	  },
	  get nodeValue() { return null; },
	  set nodeValue(unused) { /* noop */ },
	  get attributes() { return null;},
	  get ownerDocument() { return null;},
	  get readonly() { return this._readonly;},

	  /* returns Element */
	  _createElementNoTagNameValidation: function(/*string*/ tagName) {
	    var lower = tagName.toLowerCase();
	    var element = (this._elementBuilders[lower] || this._defaultElementBuilder)(this, tagName);

	    // Check for and introduce default elements
	    if (this._doctype && this._doctype._attributes && this._doctype.name.toLowerCase() !== "html") {
	      var attrElement = this._doctype._attributes.getNamedItem(tagName);
	      if (attrElement && attrElement._childNodes) {

	        var attrs = attrElement.attributes;
	        var attr, len = attrs.length, defaultAttr;
	        for (var i = 0; i < len; i++) {
	          defaultAttr = attrs[i];
	          if (defaultAttr) {
	            attr = this.createAttribute(defaultAttr.name);
	            attr.value = defaultAttr.value;
	            element.setAttributeNode(attr);
	            attr._specified = false;
	            attr._created = true;
	          }
	        }
	      }
	    }

	    if (!element.namespaceURI) element._namespaceURI = "http://www.w3.org/1999/xhtml";

	    element._created = true;
	    return element;
	  },

	  /* returns Element */
	  createElement: function(/* string */ tagName) {
	    tagName = String(tagName);

	    var c = [];

	    if (tagName.length === 0 || (c = tagName.match(tagRegEx))) {
	      throw new core.DOMException(INVALID_CHARACTER_ERR, 'Invalid character in tag name: ' + c.pop());
	    }

	    return this._createElementNoTagNameValidation(tagName);
	  }, //raises: function(DOMException) {},

	  /* returns DocumentFragment */
	  createDocumentFragment: function() {
	    return new core.DocumentFragment(this);
	  },

	  /* returns Text */
	  createTextNode: function(/* string */ data) {
	    return new core.Text(this,data);
	  },

	  /* returns Comment */
	  createComment: function(/* string */ data) {
	    return new core.Comment(this,data);
	  },

	  /* returns CDATASection */
	  createCDATASection: function(/* string */ data) {
	    if (this._doctype && this._doctype.name === "html") {
	      throw new core.DOMException(NOT_SUPPORTED_ERR);
	    }

	    return new core.CDATASection(this,data);
	  }, // raises: function(DOMException) {},

	  /* returns ProcessingInstruction */
	  createProcessingInstruction: function(/* string */ target,/* string */ data) {
	    if (target.match(tagRegEx) || !target || !target.length) {
	      throw new core.DOMException(INVALID_CHARACTER_ERR);
	    }

	    return new core.ProcessingInstruction(this, target, data);
	  }, // raises: function(DOMException) {},

	  /* returns Attr */
	  createAttribute: function(/* string */ name) {
	    if (!name || !name.length || name.match(invalidAttrRegEx) ) {
	      throw new core.DOMException(INVALID_CHARACTER_ERR, "attribute name: " + name);
	    }
	    return new core.Attr(this, name,false);
	  }, // raises: function(DOMException) {},

	  /* returns EntityReference */
	  createEntityReference: function(/* string */ name) {

	    if (this._doctype && this._doctype.name === "html") {
	      throw new core.DOMException(NOT_SUPPORTED_ERR);
	    }

	    name = name.replace(/[&;]/g,"");
	    if (!name || !name.length) {
	      throw new core.DOMException(INVALID_CHARACTER_ERR);
	    }

	    if (name.match(tagRegEx)) {
	      throw new core.DOMException(INVALID_CHARACTER_ERR);
	    }

	    var entity;
	    if (this._doctype && this._doctype.entities) {
	      entity = this._doctype.entities.getNamedItem(name);
	    } else {
	      entity = null;
	    }

	    var ref    = new core.EntityReference(this, entity);

	    ref._entityName = name;

	    return ref;
	  }, //raises: function(DOMException) {},

	  /* returns Entity */
	  createEntityNode : function(/* string */ name)
	  {

	    if (name.match(entRegEx) || !name || !name.length) {
	      throw new core.DOMException(INVALID_CHARACTER_ERR);
	    }

	    var ret = new core.Entity(this, name);
	    ret._readonly = false;// TODO: fix me please.

	    for (var i=1;i<arguments.length;i++)
	    {
	      ret.appendChild(arguments[i]);
	    }

	    core.markTreeReadonly(ret);

	    return ret;
	  },

	  /* returns Notation */
	  createNotationNode : function(/* string */ name,/* string */ publicId,/* string */ systemId)
	  {

	    if (name.match(entRegEx) || !name || !name.length) {
	      throw new core.DOMException(INVALID_CHARACTER_ERR);
	    }

	    var ret = new core.Notation(this, name, publicId, systemId);
	    ret._readonly = false;// TODO: fix me please.

	    for (var i=3;i<arguments.length;i++)
	    {
	      ret.appendChild(arguments[i]);
	    }

	    core.markTreeReadonly(ret);

	    return ret;
	  },

	  appendChild : function(/* Node */ arg) {
	    if (this.documentElement && arg.nodeType == ELEMENT_NODE) {
	      throw new core.DOMException(HIERARCHY_REQUEST_ERR);
	    }
	    return core.Node.prototype.appendChild.call(this, arg);
	  },

	  removeChild : function(/* Node */ arg) {
	    var ret = core.Node.prototype.removeChild.call(this, arg);
	    if (arg == this._documentElement) {
	      this._documentElement = null;// force a recalculation
	    }
	    return ret;
	  },

	  /* returns NodeList */
	  getElementsByTagName: core.memoizeQuery(function(/* string */ name) {
	    function filterByTagName(child) {
	      if (child.nodeType && child.nodeType === ENTITY_REFERENCE_NODE)
	      {
	        child = child._entity;
	      }

	      if (child.nodeName && child.nodeType === ELEMENT_NODE)
	      {
	        if (name === "*") {
	          return true;

	        // case insensitivity for html
	        } else if (child._ownerDocument && child._ownerDocument._doctype &&
	                   //child._ownerDocument._doctype.name === "html" &&
	                   child.nodeName.toLowerCase() === name.toLowerCase())
	        {
	          return true;
	        } else if (child.nodeName.toLowerCase() === name.toLowerCase()) {
	          return true;
	        }
	      }
	      return false;
	    }
	    return new core.NodeList(this.documentElement || this, core.mapper(this, filterByTagName, true));
	  })
	});

	core.CharacterData = function CharacterData(document, value) {
	  core.Node.call(this, document);

	  this._nodeValue = value + "";
	};
	inheritFrom(core.Node, core.CharacterData, {

	  get data() { return this._nodeValue;},
	  set data(data) {

	    // readonly
	    if (this._readonly === true) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    this._nodeValue = data;
	  },

	  /* returns int */
	  get length() { return this._nodeValue.length || 0;},

	  /* returns string */
	  substringData: function(/* int */ offset, /* int */ count) {

	    if (count < 0 || offset < 0 || offset > this._nodeValue.length) {
	      throw new core.DOMException(INDEX_SIZE_ERR);
	    }

	    return (this._nodeValue.length < offset + count) ?
	            this._nodeValue.substring(offset) :
	            this._nodeValue.substring(offset, offset+count);

	  }, // raises: function(DOMException) {},

	  /* returns string */
	  appendData: function(/* string */ arg) {

	    // readonly
	    if (this._readonly === true) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    this._nodeValue+=arg;
	    return this._nodeValue;
	  }, // raises: function(DOMException) {},

	  /* returns string */
	  insertData: function(/* int */ offset, /* string */ arg) {

	    // readonly
	    if (this._readonly === true) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    if (offset < 0 || offset > this._nodeValue.length) {
	      throw new core.DOMException(INDEX_SIZE_ERR);
	    }

	    var start = this._nodeValue.substring(0,offset);
	    var end = this._nodeValue.substring(offset);

	    this._nodeValue = start + arg + end;

	  }, //raises: function(DOMException) {},

	  /* returns void */
	  deleteData: function(/* int */ offset, /* int */ count) {

	    // readonly
	    if (this._readonly === true) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    if (offset       < 0                     ||
	        offset       > this._nodeValue.length ||
	        count        < 0)
	    {
	      throw new core.DOMException(INDEX_SIZE_ERR);
	    }

	    var start = this._nodeValue.substring(0,offset);

	    this._nodeValue = (offset+count<this._nodeValue.length) ?
	                     start + this._nodeValue.substring(offset+count) :
	                     start;
	  }, // raises: function(DOMException) {},

	  /* returns void */
	  replaceData: function(/* int */ offset, /* int */ count, /* string */ arg) {

	    // readonly
	    if (this._readonly === true) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    count = (offset+count > this._nodeValue.length) ?
	             this.nodeValue.length-offset           :
	             count;

	    if (offset       < 0                     ||
	        offset       > this._nodeValue.length ||
	        count        < 0                     /*||
	        offset+count > this._nodeValue.length*/)
	    {
	      throw new core.DOMException(INDEX_SIZE_ERR);
	    }

	    var start = this._nodeValue.substring(0,offset);
	    var end = this._nodeValue.substring(offset+count);

	    this._nodeValue = start + arg + end;
	  } // raises: function(DOMException) {},
	});


	core.Attr = function Attr(document, name, value) {
	  core.Node.call(this, document);
	  this._nodeValue = value;
	  this._name = name;
	  this._specified = (value) ? true : false;
	  this._tagName   = name;
	  this._nodeName  = name;

	  // Proactively set some level 2 information so that AttributeList
	  // can operate.
	  this._namespaceURI = null;
	  this._nodeName = name;
	  this._localName = name;
	  this._prefix = null;
	};
	inheritFrom(core.Node, core.Attr, {
	  nodeType : ATTRIBUTE_NODE,
	  get nodeValue() {
	    var val = '';
	    for (var i=0,len=this._childNodes.length;i<len;i++) {
	      var child = this._childNodes[i];
	      if (child.nodeType === ENTITY_REFERENCE_NODE) {
	        val += Array.prototype.reduce.call(child.childNodes, function(prev, c) {
	          return prev += (c.nodeValue || c);
	        }, '');
	      } else {
	        val += child.nodeValue;
	      }
	    }
	    return val;
	  },
	  set nodeValue(value) {
	    // readonly
	    if (this._readonly) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    this._childNodes._resetTo([this._ownerDocument.createTextNode(value)]);
	    this._modified();
	    this._specified = true;
	    var prev = this._nodeValue;
	    this._nodeValue = value;
	    if (this._ownerElement) {
	      this._ownerElement._attrModified(this._name, value, prev);
	    }
	  },
	  get name() { return this._name;},
	  get specified() { return this._specified },
	  get value() {
	    return this.nodeValue;
	  },
	  set value(value) {
	    this.nodeValue = value;
	  },
	  get parentNode() { return null;},
	  get attributes() { return null;},

	  insertBefore : function(/* Node */ newChild, /* Node*/ refChild){
	    if (newChild.nodeType === CDATA_SECTION_NODE ||
	        newChild.nodeType === ELEMENT_NODE)
	    {
	      throw new core.DOMException(HIERARCHY_REQUEST_ERR);
	    }

	    return core.Node.prototype.insertBefore.call(this, newChild, refChild);
	  },

	  appendChild : function(/* Node */ arg) {

	    if (arg.nodeType === CDATA_SECTION_NODE ||
	        arg.nodeType === ELEMENT_NODE)
	    {
	      throw new core.DOMException(HIERARCHY_REQUEST_ERR);
	    }

	    return core.Node.prototype.appendChild.call(this, arg);
	  }

	});

	core.Text = function Text(document, text, readonly) {
	    core.CharacterData.call(this, document, text);
	    this._nodeName = "#text";
	    this._readonly = readonly ? true : false
	};
	inheritFrom(core.CharacterData, core.Text, {
	  nodeType : TEXT_NODE,
	  get attributes() { return null;},

	  /* returns Text */
	  splitText: function(offset) {

	    // readonly
	    if (this._readonly) {
	      throw new core.DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    if (offset < 0 || offset > this._nodeValue.length) {
	      throw new core.DOMException(INDEX_SIZE_ERR);
	    }

	    var newText = this._nodeValue.substring(offset);
	    this._nodeValue = this._nodeValue.substring(0, offset);
	    var newNode = this._ownerDocument.createTextNode(newText);

	    if(this._parentNode.lastChild === this) {
	      this._parentNode.appendChild(newNode);
	    } else {
	      this._parentNode.insertBefore(newNode, this.nextSibling);
	    }

	    return newNode;
	  }, //raises: function(DOMException) {},
	  toString: function() {
	    return this.nodeName;
	  }
	});


	core.Comment = function Comment(document, text) {
	  core.Text.call(this, document, text);
	  this._nodeName = "#comment";
	  this._tagName  = "#comment";
	};
	inheritFrom(core.Text, core.Comment, {
	  nodeType : COMMENT_NODE
	});


	core.CDATASection = function CDATASection(document, value) {
	  core.Text.call(this, document, value);
	  this._nodeName = "#cdata-section";
	};
	inheritFrom(core.Text, core.CDATASection, {
	  nodeType : CDATA_SECTION_NODE
	});

	core.DocumentType = function DocumentType(document, name, entities, notations, attributes) {
	  core.Node.call(this, document);
	  this._name = name;
	  this._tagName = name;
	  this._nodeName = name;
	  this._entities = entities || new core.EntityNodeMap(document);
	  this._notations = notations || new core.NotationNodeMap(document);
	  this._parentNode = document;

	  core.markTreeReadonly(this._notations);

	  this._attributes = attributes || new AttributeList(document);
	};
	inheritFrom(core.Node, core.DocumentType, {
	  nodeType : DOCUMENT_TYPE_NODE,
	  get nodeValue() { return null;},
	  set nodeValue(unused) { /* do nothing */ },
	  get name() { return this._name;},
	  get entities() { return this._entities;},
	  get notations() { return this._notations;},
	  get attributes() { return null;}
	});


	core.Notation = function Notation(document, name, publicId, systemId){
	  core.Node.call(this, document);
	  this._name = name;
	  this._nodeName = name;
	  this._publicId = publicId || null;
	  this._systemId = systemId || null;
	  this._nodeValue = null;
	};
	inheritFrom(core.Node, core.Notation, {
	  nodeType : NOTATION_NODE,
	  get publicId() { return this._publicId;},
	  get systemId() { return this._systemId;},
	  get name() { return this._name || this._nodeName;},
	  get attributes() { /* as per spec */ return null;},
	  set nodeValue(unused) { /* intentionally left blank */ },
	  get nodeValue() { return this._nodeValue;},
	});


	core.Entity = function Entity(document, name) {
	  core.Node.call(this, document);
	  this._name = name;
	  this._nodeName = name;
	  this._tagName = name;
	  this._publicId = null;
	  this._systemId = null;
	  this._notationName = null;
	  this._readonly = true;
	};
	inheritFrom(core.Node, core.Entity, {
	  nodeType : ENTITY_NODE,
	  get nodeValue() { return null;},
	  set nodeValue(unused) {
	    // readonly
	    if (this._readonly === true) {
	      // TODO: is this needed?
	      // throw new DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }
	    /* do nothing */
	  },
	  get name() { return this._name },
	  get publicId() { return this._publicId;},
	  get systemId() { return this._systemId;},

	  set publicId(publicId) { this._publicId = publicId;},
	  set systemId(systemId) { this._systemId = systemId;},
	  set notationName(notationName) { this._notationName = notationName;},

	  get notationName() { return this._notationName;},
	  get attributes() { return null;},

	});


	core.EntityReference = function EntityReference(document, entity) {
	  core.Node.call(this, document);
	  this._entity = entity;
	  this._nodeName = (entity) ? entity.name : null;
	  this._readonly = true;
	};
	inheritFrom(core.Node, core.EntityReference, {
	  nodeType : ENTITY_REFERENCE_NODE,
	  get nodeValue() { return (this._entity) ? this._entity.nodeValue : null;},
	  set nodeValue(unused) {
	    // readonly
	    if (this._readonly === true) {
	      // TODO: is this needed?
	      //throw new DOMException(NO_MODIFICATION_ALLOWED_ERR);
	    }

	    /* do nothing */
	  },
	  get attributes() { return null;},

	  // Proxy to the entity
	  get nodeName() { return this._entityName;},
	  get firstChild() { return this._entity.firstChild || null;},
	  get childNodes() { return this._entity.childNodes;},
	  get lastChild() { return this._entity.lastChild || null;},

	});

	exports.dom = { "level1" : { "core" : core }};


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	var core                  = __webpack_require__(16).dom.level2.core,
	    events                = __webpack_require__(19).dom.level2.events,
	    applyDocumentFeatures = __webpack_require__(20).applyDocumentFeatures,
	    defineGetter          = __webpack_require__(14).defineGetter,
	    defineSetter          = __webpack_require__(14).defineSetter,
	    inheritFrom           = __webpack_require__(14).inheritFrom,
	    URL                   = __webpack_require__(13),
	    Path                  = __webpack_require__(12),
	    fs                    = __webpack_require__(11),
	    http                  = __webpack_require__(21),
	    https                 = __webpack_require__(22);

	// modify cloned instance for more info check: https://github.com/tmpvar/jsdom/issues/325
	core = Object.create(core);

	// Setup the javascript language processor
	core.languageProcessors = {
	  javascript : __webpack_require__(23).javascript
	};

	// TODO its own package? Pull request to Node?
	function resolveHref(baseUrl, href) {
	  if (baseUrl === resolveHref.memoizedUrl && resolveHref.cache && resolveHref.cache[href]) {
	    return resolveHref.cache[href];
	  }
	  // When switching protocols, the path doesn't get canonicalized (i.e. .s and ..s are still left):
	  // https://github.com/joyent/node/issues/5453
	  var intermediate = URL.resolve(baseUrl, href);

	  // This canonicalizes the path, at the cost of overwriting the hash.
	  var nextStep = URL.resolve(intermediate, '#');

	  // So, insert the hash back in, if there was one.
	  var parsed = URL.parse(intermediate);
	  var fixed = nextStep.slice(0, -1) + (parsed.hash || '');

	  // Finally, fix file:/// URLs on Windows, where Node removes their drive letters:
	  // https://github.com/joyent/node/issues/5452
	  if (/^file\:\/\/\/[a-z]\:\//i.test(baseUrl) && /^file\:\/\/\//.test(fixed) && !/^file\:\/\/\/[a-z]\:\//i.test(fixed)) {
	    fixed = fixed.replace(/^file\:\/\/\//, baseUrl.substring(0, 11));
	  }

	  // HORRIBLE HACK: encode \u00E4 correctly just so that we pass
	  // https://github.com/w3c/web-platform-tests/blob/e75f01a689a3481f5c773315c2c2527712cf8c2c/dom/nodes/DOMImplementation-createHTMLDocument.html#L71-L72
	  // Eventually we should replace this with a real URL parser based on the URL standard.
	  fixed = fixed.replace(/\u00E4/, "%C3%A4");

	  if (baseUrl !== resolveHref.memoizedUrl) {
	    resolveHref.memoizedUrl = baseUrl;
	    resolveHref.cache = {};
	  }
	  resolveHref.cache[href] = fixed;
	  return fixed;
	}

	core.resourceLoader = {
	  load: function(element, href, callback) {
	    var ownerImplementation = element._ownerDocument.implementation;

	    if (ownerImplementation.hasFeature('FetchExternalResources', element.tagName.toLowerCase())) {
	      var full = this.resolve(element._ownerDocument, href);
	      var url = URL.parse(full);
	      if (ownerImplementation.hasFeature('SkipExternalResources', full)) {
	        return false;
	      }
	      if (url.hostname) {
	        this.download(url, element._ownerDocument._cookie, element._ownerDocument._cookieDomain, this.baseUrl(element._ownerDocument), this.enqueue(element, callback, full));
	      }
	      else {
	        this.readFile(url.pathname, this.enqueue(element, callback, full));
	      }
	    }
	  },
	  enqueue: function(element, callback, filename) {
	    var loader = this,
	        doc    = element.nodeType === core.Node.DOCUMENT_NODE ?
	                 element                :
	                 element._ownerDocument;

	    if (!doc._queue) {
	      return function() {};
	    }

	    return doc._queue.push(function(err, data) {
	      var ev = doc.createEvent('HTMLEvents');

	      if (!err) {
	        try {
	          callback.call(element, data, filename || doc.URL);
	          ev.initEvent('load', false, false);
	        }
	        catch(e) {
	          err = e;
	        }
	      }

	      if (err) {
	        ev.initEvent('error', false, false);
	        ev.error = err;
	      }

	      element.dispatchEvent(ev);
	    });
	  },

	  baseUrl: function(document) {
	    var baseElements = document.getElementsByTagName('base');
	    var baseUrl = document.URL;

	    if (baseElements.length > 0) {
	      var baseHref = baseElements.item(0).href;
	      if (baseHref) {
	        baseUrl = resolveHref(baseUrl, baseHref);
	      }
	    }

	    return baseUrl;
	  },
	  resolve: function(document, href) {
	    // if getAttribute returns null, there is no href
	    // lets resolve to an empty string (nulls are not expected farther up)
	    if (href === null) {
	      return '';
	    }

	    var baseUrl = this.baseUrl(document);

	    return resolveHref(baseUrl, href);
	  },
	  download: function(url, cookie, cookieDomain, referrer, callback) {
	    var path    = url.pathname + (url.search || ''),
	        options = {'method': 'GET', 'host': url.hostname, 'path': path},
	        request;
	    if (url.protocol === 'https:') {
	      options.port = url.port || 443;
	      request = https.request(options);
	    } else {
	      options.port = url.port || 80;
	      request = http.request(options);
	    }

	    // set header.
	    if (referrer) {
	        request.setHeader('Referer', referrer);
	    }
	    if (cookie) {
	      var host = url.host.split(':')[0];
	      if (host.indexOf(cookieDomain, host.length - cookieDomain.length) !== -1) {
	        request.setHeader('cookie', cookie);
	      }
	    }

	    request.on('response', function (response) {
	      var data = '';
	      function success () {
	        if ([301, 302, 303, 307].indexOf(response.statusCode) > -1) {
	          var redirect = URL.resolve(url, response.headers["location"]);
	          core.resourceLoader.download(URL.parse(redirect), cookie, cookieDomain, referrer, callback);
	        } else {
	          callback(null, data);
	        }
	      }
	      response.setEncoding('utf8');
	      response.on('data', function (chunk) {
	        data += chunk.toString();
	      });
	      response.on('end', function() {
	        // According to node docs, 'close' can fire after 'end', but not
	        // vice versa.  Remove 'close' listener so we don't call success twice.
	        response.removeAllListeners('close');
	        success();
	      });
	      response.on('close', function (err) {
	        if (err) {
	          callback(err);
	        } else {
	          success();
	        }
	      });
	    });

	    request.on('error', callback);
	    request.end();
	  },
	  readFile: function(url, callback) {
	    fs.readFile(url.replace(/^file:\/\//, "").replace(/^\/([a-z]):\//i, '$1:/').replace(/%20/g, ' '), 'utf8', callback);
	  }
	};

	function define(elementClass, def) {
	  var tagName = def.tagName,
	    tagNames = def.tagNames || (tagName? [tagName] : []),
	    parentClass = def.parentClass || core.HTMLElement,
	    attrs = def.attributes || [],
	    proto = def.proto || {};

	  var elem = core[elementClass] = function(document, name) {
	    parentClass.call(this, document, name || tagName.toUpperCase());
	    if (elem._init) {
	      elem._init.call(this);
	    }
	  };
	  elem._init = def.init;

	  inheritFrom(parentClass, elem, proto);

	  attrs.forEach(function(n) {
	      var prop = n.prop || n,
	        attr = n.attr || prop.toLowerCase();

	      if (!n.prop || n.read !== false) {
	        defineGetter(elem.prototype, prop, function() {
	          var s = this.getAttribute(attr);
	          if (n.type && n.type === 'boolean') {
	            return s !== null;
	          }
	          if (n.type && n.type === 'long') {
	            return +s;
	          }
	          if (typeof n === 'object' && n.normalize) { // see GH-491
	            return n.normalize(s);
	          }
	          if (s === null) {
	            s = '';
	          }
	          return s;
	        });
	      }

	      if (!n.prop || n.write !== false) {
	        defineSetter(elem.prototype, prop, function(val) {
	          if (!val) {
	            this.removeAttribute(attr);
	          }
	          else {
	            var s = val.toString();
	            if (typeof n === 'object' && n.normalize) {
	              s = n.normalize(s);
	            }
	            this.setAttribute(attr, s);
	          }
	        });
	      }
	  });

	  tagNames.forEach(function(tag) {
	    core.Document.prototype._elementBuilders[tag.toLowerCase()] = function(doc, s) {
	      var el = new elem(doc, s);

	      if (def.elementBuilder) {
	        return def.elementBuilder(el, doc, s);
	      }

	      return el;
	    };
	  });
	}



	core.HTMLCollection = function HTMLCollection(element, query) {
	  this._keys = [];
	  core.NodeList.call(this, element, query);
	};
	inheritFrom(core.NodeList, core.HTMLCollection, {
	  namedItem: function(name) {
	    // Try property shortcut; should work in most cases
	    if (Object.prototype.hasOwnProperty.call(this, name)) {
	      return this[name];
	    }

	    var results = this._toArray(),
	        l       = results.length,
	        node,
	        matchingName = null;

	    for (var i=0; i<l; i++) {
	      node = results[i];
	      if (node.getAttribute('id') === name) {
	        return node;
	      } else if (node.getAttribute('name') === name) {
	        matchingName = node;
	      }
	    }
	    return matchingName;
	  },
	  toString: function() {
	    return '[ jsdom HTMLCollection ]: contains ' + this.length + ' items';
	  },
	  _resetTo: function(array) {
	    var i, _this = this;

	    for (i = 0; i < this._keys.length; ++i) {
	      delete this[this._keys[i]];
	    }
	    this._keys = [];

	    core.NodeList.prototype._resetTo.apply(this, arguments);

	    function testAttr(node, attr) {
	      var val = node.getAttribute(attr);
	      if (val && !Object.prototype.hasOwnProperty.call(_this, val)) {
	        _this[val] = node;
	        _this._keys.push(val);
	      }
	    }
	    for (i = 0; i < array.length; ++i) {
	      testAttr(array[i], 'id');
	    }
	    for (i = 0; i < array.length; ++i) {
	      testAttr(array[i], 'name');
	    }
	  }
	});
	Object.defineProperty(core.HTMLCollection.prototype, 'constructor', {
	  value: core.NodeList,
	  writable: true,
	  configurable: true
	});

	core.HTMLOptionsCollection = core.HTMLCollection;

	function closest(e, tagName) {
	  tagName = tagName.toUpperCase();
	  while (e) {
	    if (e.nodeName.toUpperCase() === tagName ||
	        (e.tagName && e.tagName.toUpperCase() === tagName))
	    {
	      return e;
	    }
	    e = e._parentNode;
	  }
	  return null;
	}

	function descendants(e, tagName, recursive) {
	  var owner = recursive ? e._ownerDocument || e : e;
	  return new core.HTMLCollection(owner, core.mapper(e, function(n) {
	    return n.nodeName === tagName && typeof n._publicId == 'undefined';
	  }, recursive));
	}

	function firstChild(e, tagName) {
	  if (!e) {
	    return null;
	  }
	  var c = descendants(e, tagName, false);
	  return c.length > 0 ? c[0] : null;
	}

	function ResourceQueue(paused) {
	  this.paused = !!paused;
	}
	ResourceQueue.prototype = {
	  push: function(callback) {
	    var q = this;
	    var item = {
	      prev: q.tail,
	      check: function() {
	        if (!q.paused && !this.prev && this.fired){
	          callback(this.err, this.data);
	          if (this.next) {
	            this.next.prev = null;
	            this.next.check();
	          }else{//q.tail===this
	      q.tail = null;
	    }
	        }
	      }
	    };
	    if (q.tail) {
	      q.tail.next = item;
	    }
	    q.tail = item;
	    return function(err, data) {
	      item.fired = 1;
	      item.err = err;
	      item.data = data;
	      item.check();
	    };
	  },
	  resume: function() {
	    if(!this.paused){
	      return;
	    }
	    this.paused = false;
	    var head = this.tail;
	    while(head && head.prev){
	      head = head.prev;
	    }
	    if(head){
	      head.check();
	    }
	  }
	};

	core.HTMLDocument = function HTMLDocument(options) {
	  options = options || {};
	  if (!options.contentType) {
	    options.contentType = 'text/html';
	  }
	  core.Document.call(this, options);
	  this._referrer = options.referrer;
	  this._cookie = options.cookie;
	  this._cookieDomain = options.cookieDomain || '127.0.0.1';
	  this._URL = options.url || '/';
	  this._documentRoot = options.documentRoot || Path.dirname(this._URL);
	  this._queue = new ResourceQueue(options.deferClose);
	  this.readyState = 'loading';

	  // Add level2 features
	  this.implementation.addFeature('core'  , '2.0');
	  this.implementation.addFeature('html'  , '2.0');
	  this.implementation.addFeature('xhtml' , '2.0');
	  this.implementation.addFeature('xml'   , '2.0');
	};

	inheritFrom(core.Document, core.HTMLDocument, {
	  _referrer : "",
	  get referrer() {
	    return this._referrer || '';
	  },
	  get domain() {
	    return "";
	  },
	  _URL : "",
	  get URL() {
	    return this._URL;
	  },
	  get images() {
	    return this.getElementsByTagName('IMG');
	  },
	  get applets() {
	    return new core.HTMLCollection(this, core.mapper(this, function(el) {
	      if (el && el.tagName) {
	        var upper = el.tagName.toUpperCase();
	        if (upper === "APPLET") {
	          return true;
	        } else if (upper === "OBJECT" &&
	          el.getElementsByTagName('APPLET').length > 0)
	        {
	          return true;
	        }
	      }
	    }));
	  },
	  get links() {
	    return new core.HTMLCollection(this, core.mapper(this, function(el) {
	      if (el && el.tagName) {
	        var upper = el.tagName.toUpperCase();
	        if (upper === "AREA" || (upper === "A" && el.href)) {
	          return true;
	        }
	      }
	    }));
	  },
	  get forms() {
	    return this.getElementsByTagName('FORM');
	  },
	  get anchors() {
	    return this.getElementsByTagName('A');
	  },
	  open  : function() {
	    this._childNodes = new core.NodeList();
	    this._documentElement = null;
	    this._modified();
	  },
	  close : function() {
	    this._queue.resume();
	    // Set the readyState to 'complete' once all resources are loaded.
	    // As a side-effect the document's load-event will be dispatched.
	    core.resourceLoader.enqueue(this, function() {
	      this.readyState = 'complete';
	      var ev = this.createEvent('HTMLEvents');
	      ev.initEvent('DOMContentLoaded', false, false);
	      this.dispatchEvent(ev);
	    })(null, true);
	  },

	  // document.write is defined in browser/index.js.

	  writeln : function(text) {
	    this.write(text + '\n');
	  },

	  getElementsByName : function(elementName) {
	    return new core.HTMLCollection(this, core.mapper(this, function(el) {
	      return (el.getAttribute && el.getAttribute("name") === elementName);
	    }));
	  },

	  get title() {
	    var head = this.head,
	      title = head ? firstChild(head, 'TITLE') : null;
	    return title ? title.textContent : '';
	  },

	  set title(val) {
	    var title = firstChild(this.head, 'TITLE');
	    if (!title) {
	      title = this.createElement('TITLE');
	      var head = this.head;
	      if (!head) {
	        head = this.createElement('HEAD');
	        this.documentElement.insertBefore(head, this.documentElement.firstChild);
	      }
	      head.appendChild(title);
	    }
	    title.textContent = val;
	  },

	  get head() {
	    return firstChild(this.documentElement, 'HEAD');
	  },

	  set head(unused) { /* noop */ },

	  get body() {
	    var body = firstChild(this.documentElement, 'BODY');
	    if (!body) {
	      body = firstChild(this.documentElement, 'FRAMESET');
	    }
	    return body;
	  },

	  get documentElement() {
	    if (!this._documentElement) {
	      this._documentElement = firstChild(this, 'HTML');
	    }
	    return this._documentElement;
	  },

	  _cookie : "",
	  get cookie() {
	    var cookies = Array.isArray(this._cookie) ?
	      this._cookie :
	      (this._cookie && this._cookie.length > 0 ? [this._cookie] : []);

	    return cookies.map(function (x) {
	      return x.split(';')[0];
	    }).join('; ');
	  },
	  set cookie(val) {
	    if (val == null) return val;
	    var key = val.split('=')[0];
	    var cookies = Array.isArray(this._cookie) ?
	      this._cookie :
	      (this._cookie && this._cookie.length > 0 ? [this._cookie] : []);
	    for (var i = 0; i < cookies.length; i++) {
	      if (cookies[i].lastIndexOf(key + '=', 0) === 0) {
	        cookies[i] = val;
	        key = null;
	        break;
	      }
	    }
	    if (key) {
	      cookies.push(val);
	    }
	    if (cookies.length === 1) {
	      this._cookie = cookies[0];
	    } else {
	      this._cookie = cookies;
	    }
	    return val;
	  }
	});

	define('HTMLElement', {
	  parentClass: core.Element,
	  proto : {
	    // Add default event behavior (click link to navigate, click button to submit
	    // form, etc). We start by wrapping dispatchEvent so we can forward events to
	    // the element's _eventDefault function (only events that did not incur
	    // preventDefault).
	    dispatchEvent : function (event) {
	      var outcome = core.Node.prototype.dispatchEvent.call(this, event)

	      if (!event._preventDefault     &&
	          event.target._eventDefaults[event.type] &&
	          typeof event.target._eventDefaults[event.type] === 'function')
	      {
	        event.target._eventDefaults[event.type](event)
	      }
	      return outcome;
	    },
	    getBoundingClientRect: function () {
	      return {
	        bottom: 0,
	        height: 0,
	        left: 0,
	        right: 0,
	        top: 0,
	        width: 0
	      };
	    },
	    _eventDefaults : {}
	  },
	  attributes: [
	    'id',
	    'title',
	    'lang',
	    'dir',
	    {prop: 'className', attr: 'class', normalize: function(s) { return s || ''; }}
	  ]
	});

	core.Document.prototype._defaultElementBuilder = function(document, tagName) {
	  return new core.HTMLElement(document, tagName);
	};

	// http://www.whatwg.org/specs/web-apps/current-work/#category-listed
	var listedElements = /button|fieldset|input|keygen|object|select|textarea/i;

	define('HTMLFormElement', {
	  tagName: 'FORM',
	  proto: {
	    get elements() {
	      return new core.HTMLCollection(this._ownerDocument, core.mapper(this, function(e) {
	        return listedElements.test(e.nodeName) ; // TODO exclude <input type="image">
	      }));
	    },
	    get length() {
	      return this.elements.length;
	    },
	    _dispatchSubmitEvent: function() {
	      var ev = this._ownerDocument.createEvent('HTMLEvents');
	      ev.initEvent('submit', true, true);
	      if (!this.dispatchEvent(ev)) {
	        this.submit();
	      };
	    },
	    submit: function() {
	    },
	    reset: function() {
	      this.elements._toArray().forEach(function(el) {
	        el.value = el.defaultValue;
	      });
	    }
	  },
	  attributes: [
	    'name',
	    {prop: 'acceptCharset', attr: 'accept-charset'},
	    'action',
	    'enctype',
	    'method',
	    'target'
	  ]
	});

	define('HTMLLinkElement', {
	  tagName: 'LINK',
	  proto: {
	    get href() {
	      return core.resourceLoader.resolve(this._ownerDocument, this.getAttribute('href'));
	    }
	  },
	  attributes: [
	    {prop: 'disabled', type: 'boolean'},
	    'charset',
	    'href',
	    'hreflang',
	    'media',
	    'rel',
	    'rev',
	    'target',
	    'type'
	  ]
	});

	define('HTMLMetaElement', {
	  tagName: 'META',
	  attributes: [
	    'content',
	    {prop: 'httpEquiv', attr: 'http-equiv'},
	    'name',
	    'scheme'
	  ]
	});

	define('HTMLHtmlElement', {
	  tagName: 'HTML',
	  attributes: [
	    'version'
	  ]
	});

	define('HTMLHeadElement', {
	  tagName: 'HEAD',
	  attributes: [
	    'profile'
	  ]
	});

	define('HTMLTitleElement', {
	  tagName: 'TITLE',
	  proto: {
	    get text() {
	      return this.innerHTML;
	    },
	    set text(s) {
	      this.innerHTML = s;
	    }
	  }
	});

	define('HTMLBaseElement', {
	  tagName: 'BASE',
	  attributes: [
	    'href',
	    'target'
	  ]
	});


	//**Deprecated**
	define('HTMLIsIndexElement', {
	  tagName : 'ISINDEX',
	  parentClass : core.Element,
	  proto : {
	    get form() {
	      return closest(this, 'FORM');
	    }
	  },
	  attributes : [
	    'prompt'
	  ]
	});


	define('HTMLStyleElement', {
	  tagName: 'STYLE',
	  attributes: [
	    {prop: 'disabled', type: 'boolean'},
	    'media',
	    'type',
	  ]
	});

	define('HTMLBodyElement', {
	  proto: (function() {
	    var proto = {};
	    // The body element's "traditional" event handlers are proxied to the
	    // window object.
	    // See: http://www.whatwg.org/specs/web-apps/current-work/#the-body-element
	    ['onafterprint', 'onbeforeprint', 'onbeforeunload', 'onblur', 'onerror',
	     'onfocus', 'onhashchange', 'onload', 'onmessage', 'onoffline', 'ononline',
	     'onpagehide', 'onpageshow', 'onpopstate', 'onresize', 'onscroll',
	     'onstorage', 'onunload'].forEach(function (name) {
	      defineSetter(proto, name, function (handler) {
	        this._ownerDocument.parentWindow[name] = handler;
	      });
	      defineGetter(proto, name, function () {
	        return this._ownerDocument.parentWindow[name];
	      });
	    });
	    return proto;
	  })(),
	  tagName: 'BODY',
	  attributes: [
	    'aLink',
	    'background',
	    'bgColor',
	    'link',
	    'text',
	    'vLink'
	  ]
	});

	define('HTMLSelectElement', {
	  tagName: 'SELECT',
	  proto: {
	    get options() {
	      return new core.HTMLOptionsCollection(this, core.mapper(this, function(n) {
	        return n.nodeName === 'OPTION';
	      }));
	    },

	    get length() {
	      return this.options.length;
	    },

	    get selectedIndex() {
	      return this.options._toArray().reduceRight(function(prev, option, i) {
	        return option.selected ? i : prev;
	      }, -1);
	    },

	    set selectedIndex(index) {
	      this.options._toArray().forEach(function(option, i) {
	        option.selected = i === index;
	      });
	    },

	    get value() {
	      var i = this.selectedIndex;
	      if (this.options.length && (i === -1)) {
	        i = 0;
	      }
	      if (i === -1) {
	        return '';
	      }
	      return this.options[i].value;
	    },

	    set value(val) {
	      var self = this;
	      this.options._toArray().forEach(function(option) {
	        if (option.value === val) {
	          option.selected = true;
	        } else {
	          if (!self.hasAttribute('multiple')) {
	            // Remove the selected bit from all other options in this group
	            // if the multiple attr is not present on the select
	            option.selected = false;
	          }
	        }
	      });
	    },

	    get form() {
	      return closest(this, 'FORM');
	    },

	    get type() {
	      return this.multiple ? 'select-multiple' : 'select-one';
	    },

	    add: function(opt, before) {
	      if (before) {
	        this.insertBefore(opt, before);
	      }
	      else {
	        this.appendChild(opt);
	      }
	    },

	    remove: function(index) {
	      var opts = this.options._toArray();
	      if (index >= 0 && index < opts.length) {
	        var el = opts[index];
	        el._parentNode.removeChild(el);
	      }
	    },

	    blur : function() {
	      this._ownerDocument.activeElement = this._ownerDocument.body;
	    },
	    focus : function() {
	      this._ownerDocument.activeElement = this;
	    }

	  },
	  attributes: [
	    {prop: 'disabled', type: 'boolean'},
	    {prop: 'multiple', type: 'boolean'},
	    'name',
	    {prop: 'size', type: 'long'},
	    {prop: 'tabIndex', type: 'long'},
	  ]
	});

	define('HTMLOptGroupElement', {
	  tagName: 'OPTGROUP',
	  attributes: [
	    {prop: 'disabled', type: 'boolean'},
	    'label'
	  ]
	});

	define('HTMLOptionElement', {
	  tagName: 'OPTION',
	  proto: {
	    _attrModified: function(name, value) {
	      if (name === 'selected') {
	        this.selected = this.defaultSelected;
	      }
	      core.HTMLElement.prototype._attrModified.call(this, arguments);
	    },
	    get form() {
	      return closest(this, 'FORM');
	    },
	    get defaultSelected() {
	      return this.getAttribute('selected') !== null;
	    },
	    set defaultSelected(s) {
	      if (s) this.setAttribute('selected', 'selected');
	      else this.removeAttribute('selected');
	    },
	    get text() {
	      return this.innerHTML;
	    },
	    get value() {
	      return (this.hasAttribute('value')) ? this.getAttribute('value') : this.innerHTML;
	    },
	    set value(val) {
	      this.setAttribute('value', val);
	    },
	    get index() {
	      return closest(this, 'SELECT').options._toArray().indexOf(this);
	    },
	    get selected() {
	      if (this._selected === undefined) {
	        this._selected = this.defaultSelected;
	      }

	      if (!this._selected && this.parentNode) {
	        var select = closest(this, 'SELECT');

	        if (select) {
	          var options = select.options;

	          if (options.item(0) === this && !select.hasAttribute('multiple')) {
	            var found = false, optArray = options._toArray();

	            for (var i = 1, l = optArray.length; i<l; i++) {
	              if (optArray[i]._selected) {
	                return false;
	              }
	            }
	            return true;
	          }
	        }
	      }

	      return this._selected;
	    },
	    set selected(s) {
	      // TODO: The 'selected' content attribute is the initial value of the
	      // IDL attribute, but the IDL attribute should not relfect the content
	      this._selected = !!s;
	      if (s) {
	        //Remove the selected bit from all other options in this select
	        var select = this._parentNode;
	        if (!select) return;
	        if (select.nodeName !== 'SELECT') {
	          select = select._parentNode;
	          if (!select) return;
	          if (select.nodeName !== 'SELECT') return;
	        }
	        if (!select.multiple) {
	          var o = select.options;
	          for (var i = 0; i < o.length; i++) {
	            if (o[i] !== this) {
	                o[i].selected = false;
	            }
	          }
	        }
	      }
	    }
	  },
	  attributes: [
	    {prop: 'disabled', type: 'boolean'},
	    'label'
	  ]
	});

	define('HTMLInputElement', {
	  tagName: 'INPUT',
	  init: function() {
	    if (!this.type) {
	      this.type = 'text';
	    }
	  },
	  proto: {
	    _value: null,

	    _initDefaultChecked: function() {
	      if (this._defaultChecked === undefined) {
	        this._defaultChecked = !!this.getAttribute('checked');
	      }
	      return this._defaultChecked;
	    },
	    get form() {
	      return closest(this, 'FORM');
	    },
	    get defaultValue() {
	      var val = this.getAttribute('value');
	      return val !== null ? val : "";
	    },
	    set defaultValue(val) {
	      this.setAttribute('value', String(val));
	    },
	    get defaultChecked() {
	      return this._initDefaultChecked();
	    },
	    get checked() {
	      return !!this._attributes.getNamedItem('checked');
	    },
	    set checked(checked) {
	      this._initDefaultChecked();
	      if (checked) {
	        this.setAttribute('checked', 'checked');
	        if (this.type === 'radio') {
	          var elements = this._ownerDocument.getElementsByName(this.name);
	          for (var i = 0; i < elements.length; i++) {
	            if (elements[i] !== this && elements[i].tagName === "INPUT" && elements[i].type === "radio" && elements[i].form === this.form) {
	              elements[i].checked = false;
	            }
	          }
	        }
	      } else {
	        this.removeAttribute('checked');
	      }
	    },
	    get value() {
	      return this._value !== null ? this._value : this.defaultValue;
	    },
	    set value(val) {
	      if (val === null) {
	        this._value = null;
	        return;
	      } else {
	        this._value = String(val);
	      }
	    },
	    get type() {
	        var type = this.getAttribute('type');
	        return type ? type : 'text';
	    },
	    set type(type) {
	        this.setAttribute('type', type);
	    },
	    blur : function() {
	      this._ownerDocument.activeElement = this._ownerDocument.body;
	    },
	    focus : function() {
	      this._ownerDocument.activeElement = this;
	    },
	    select: function() {
	    },

	    _dispatchClickEvent: function() {
	      var event = this._ownerDocument.createEvent("HTMLEvents");
	      event.initEvent("click", true, true);
	      this.dispatchEvent(event);
	    },

	    click: function() {
	      if (this.type === 'checkbox') {
	        this.checked = !this.checked;
	      }
	      else if (this.type === 'radio') {
	        this.checked = true;
	      }
	      else if (this.type === 'submit') {
	        var form = this.form;
	        if (form) {
	          form._dispatchSubmitEvent();
	        }
	      }
	      this._dispatchClickEvent();
	    }
	  },
	  attributes: [
	    'accept',
	    'accessKey',
	    'align',
	    'alt',
	    {prop: 'disabled', type: 'boolean'},
	    {prop: 'maxLength', type: 'long'},
	    'name',
	    {prop: 'readOnly', type: 'boolean'},
	    {prop: 'size', type: 'long'},
	    'src',
	    {prop: 'tabIndex', type: 'long'},
	    {prop: 'type', normalize: function(val) {
	        return val ? val.toLowerCase() : 'text';
	    }},
	    'useMap'
	  ]
	});

	define('HTMLTextAreaElement', {
	  tagName: 'TEXTAREA',
	  proto: {
	    _initDefaultValue: function() {
	      if (this._defaultValue === undefined) {
	        this._defaultValue = this.textContent;
	      }
	      return this._defaultValue;
	    },
	    get form() {
	      return closest(this, 'FORM');
	    },
	    get defaultValue() {
	      return this._initDefaultValue();
	    },
	    get value() {
	      return this.textContent;
	    },
	    set value(val) {
	      this._initDefaultValue();
	      this.textContent = val;
	    },
	    get type() {
	      return 'textarea';
	    },
	    blur : function() {
	      this._ownerDocument.activeElement = this._ownerDocument.body;
	    },
	    focus : function() {
	      this._ownerDocument.activeElement = this;
	    },
	    select: function() {
	    }
	  },
	  attributes: [
	    'accessKey',
	    {prop: 'cols', type: 'long'},
	    {prop: 'disabled', type: 'boolean'},
	    {prop: 'maxLength', type: 'long'},
	    'name',
	    {prop: 'readOnly', type: 'boolean'},
	    {prop: 'rows', type: 'long'},
	    {prop: 'tabIndex', type: 'long'}
	  ]
	});

	define('HTMLButtonElement', {
	  tagName: 'BUTTON',
	  proto: {
	    get form() {
	      return closest(this, 'FORM');
	    },
	    focus : function() {
	      this._ownerDocument.activeElement = this;
	    },
	    blur : function() {
	      this._ownerDocument.activeElement = this._ownerDocument.body;
	    }
	  },
	  attributes: [
	    'accessKey',
	    {prop: 'disabled', type: 'boolean'},
	    'name',
	    {prop: 'tabIndex', type: 'long'},
	    'type',
	    'value'
	  ]
	});

	define('HTMLLabelElement', {
	  tagName: 'LABEL',
	  proto: {
	    get form() {
	      return closest(this, 'FORM');
	    }
	  },
	  attributes: [
	    'accessKey',
	    {prop: 'htmlFor', attr: 'for'}
	  ]
	});

	define('HTMLFieldSetElement', {
	  tagName: 'FIELDSET',
	  proto: {
	    get form() {
	      return closest(this, 'FORM');
	    }
	  }
	});

	define('HTMLLegendElement', {
	  tagName: 'LEGEND',
	  proto: {
	    get form() {
	      return closest(this, 'FORM');
	    }
	  },
	  attributes: [
	    'accessKey',
	    'align'
	  ]
	});

	define('HTMLUListElement', {
	  tagName: 'UL',
	  attributes: [
	    {prop: 'compact', type: 'boolean'},
	    'type'
	  ]
	});

	define('HTMLOListElement', {
	  tagName: 'OL',
	  attributes: [
	    {prop: 'compact', type: 'boolean'},
	    {prop: 'start', type: 'long'},
	    'type'
	  ]
	});

	define('HTMLDListElement', {
	  tagName: 'DL',
	  attributes: [
	    {prop: 'compact', type: 'boolean'}
	  ]
	});

	define('HTMLDirectoryElement', {
	  tagName: 'DIR',
	  attributes: [
	    {prop: 'compact', type: 'boolean'}
	  ]
	});

	define('HTMLMenuElement', {
	  tagName: 'MENU',
	  attributes: [
	    {prop: 'compact', type: 'boolean'}
	  ]
	});

	define('HTMLLIElement', {
	  tagName: 'LI',
	  attributes: [
	    'type',
	    {prop: 'value', type: 'long'}
	  ]
	});

	define('HTMLCanvasElement', {
	  tagName: 'CANVAS',
	  attributes: [
	    'align'
	  ],
	  elementBuilder: function (element) {
	    // require node-canvas and catch the error if it blows up
	    try {
	      var canvas = new (__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"canvas\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())))(0,0);
	      for (var attr in element) {
	        if (!canvas[attr]) {
	          canvas[attr] = element[attr];
	        }
	      }
	      return canvas;
	    } catch (e) {
	      return element;
	    }
	  }
	});

	define('HTMLDivElement', {
	  tagName: 'DIV',
	  attributes: [
	    'align'
	  ]
	});

	define('HTMLParagraphElement', {
	  tagName: 'P',
	  attributes: [
	    'align'
	  ]
	});

	define('HTMLHeadingElement', {
	  tagNames: ['H1','H2','H3','H4','H5','H6'],
	  attributes: [
	    'align'
	  ]
	});

	define('HTMLQuoteElement', {
	  tagNames: ['Q','BLOCKQUOTE'],
	  attributes: [
	    'cite'
	  ]
	});

	define('HTMLPreElement', {
	  tagName: 'PRE',
	  attributes: [
	    {prop: 'width', type: 'long'}
	  ]
	});

	define('HTMLBRElement', {
	  tagName: 'BR',
	  attributes: [
	    'clear'
	  ]
	});

	define('HTMLBaseFontElement', {
	  tagName: 'BASEFONT',
	  attributes: [
	    'color',
	    'face',
	    {prop: 'size', type: 'long'}
	  ]
	});

	define('HTMLFontElement', {
	  tagName: 'FONT',
	  attributes: [
	    'color',
	    'face',
	    'size'
	  ]
	});

	define('HTMLHRElement', {
	  tagName: 'HR',
	  attributes: [
	    'align',
	    {prop: 'noShade', type: 'boolean'},
	    'size',
	    'width'
	  ]
	});

	define('HTMLModElement', {
	  tagNames: ['INS', 'DEL'],
	  attributes: [
	    'cite',
	    'dateTime'
	  ]
	});

	define('HTMLAnchorElement', {
	  tagName: 'A',

	  proto: {
	    blur : function() {
	      this._ownerDocument.activeElement = this._ownerDocument.body;
	    },
	    focus : function() {
	      this._ownerDocument.activeElement = this;
	    },
	    get href() {
	      return core.resourceLoader.resolve(this._ownerDocument, this.getAttribute('href'));
	    },
	    get hostname() {
	      return URL.parse(this.href).hostname || '';
	    },
	    get host() {
	      return URL.parse(this.href).host || '';
	    },
	    get origin() {
	      var proto = URL.parse(this.href).protocol;

	      if (proto !== undefined && proto !== null) {
	        proto += '//';
	      }

	      return proto + URL.parse(this.href).host || '';
	    },
	    get port() {
	      return URL.parse(this.href).port || '';
	    },
	    get protocol() {
	      var protocol = URL.parse(this.href).protocol;
	      return (protocol == null) ? ':' : protocol;
	    },
	    get password() {
	      var auth = URL.parse(this.href).auth;
	      return auth.substr(auth.indexOf(':') + 1);
	    },
	    get pathname() {
	      return URL.parse(this.href).pathname || '';
	    },
	    get username() {
	      var auth = URL.parse(this.href).auth;
	      return auth.substr(0, auth.indexOf(':'));
	    },
	    get search() {
	      return URL.parse(this.href).search || '';
	    },
	    get hash() {
	      return URL.parse(this.href).hash || '';
	    }
	  },
	  attributes: [
	    'accessKey',
	    'charset',
	    'coords',
	    {prop: 'href', type: 'string', read: false},
	    'hreflang',
	    'name',
	    'rel',
	    'rev',
	    'shape',
	    {prop: 'tabIndex', type: 'long'},
	    'target',
	    'type'
	  ]
	});

	define('HTMLImageElement', {
	  tagName: 'IMG',
	  proto: {
	    _attrModified: function(name, value, oldVal) {
	      if (name == 'src' && value !== oldVal) {
	        core.resourceLoader.enqueue(this, function() {})();
	      }
	    },
	    get src() {
	      return core.resourceLoader.resolve(this._ownerDocument, this.getAttribute('src'));
	    }
	  },
	  attributes: [
	    'name',
	    'align',
	    'alt',
	    'border',
	    {prop: 'height', type: 'long'},
	    {prop: 'hspace', type: 'long'},
	    {prop: 'isMap', type: 'boolean'},
	    'longDesc',
	    {prop: 'src', type: 'string', read: false},
	    'useMap',
	    {prop: 'vspace', type: 'long'},
	    {prop: 'width', type: 'long'}
	  ]
	});

	define('HTMLObjectElement', {
	  tagName: 'OBJECT',
	  proto: {
	    get form() {
	      return closest(this, 'FORM');
	    },
	    get contentDocument() {
	      return null;
	    }
	  },
	  attributes: [
	    'code',
	    'align',
	    'archive',
	    'border',
	    'codeBase',
	    'codeType',
	    'data',
	    {prop: 'declare', type: 'boolean'},
	    {prop: 'height',  type: 'long'},
	    {prop: 'hspace',  type: 'long'},
	    'name',
	    'standby',
	    {prop: 'tabIndex', type: 'long'},
	    'type',
	    'useMap',
	    {prop: 'vspace', type: 'long'},
	    {prop: 'width', type: 'long'}
	  ]
	});

	define('HTMLParamElement', {
	  tagName: 'PARAM',
	  attributes: [
	    'name',
	    'type',
	    'value',
	    'valueType'
	  ]
	});

	define('HTMLAppletElement', {
	  tagName: 'APPLET',
	  attributes: [
	    'align',
	    'alt',
	    'archive',
	    'code',
	    'codeBase',
	    'height',
	    {prop: 'hspace', type: 'long'},
	    'name',
	    'object',
	    {prop: 'vspace', type: 'long'},
	    'width'
	  ]
	});

	define('HTMLMapElement', {
	  tagName: 'MAP',
	  proto: {
	    get areas() {
	      return this.getElementsByTagName("AREA");
	    }
	  },
	  attributes: [
	    'name'
	  ]
	});

	define('HTMLAreaElement', {
	  tagName: 'AREA',
	  attributes: [
	    'accessKey',
	    'alt',
	    'coords',
	    'href',
	    {prop: 'noHref', type: 'boolean'},
	    'shape',
	    {prop: 'tabIndex', type: 'long'},
	    'target'
	  ]
	});

	define('HTMLScriptElement', {
	  tagName: 'SCRIPT',
	  init: function() {
	    this.addEventListener('DOMNodeInsertedIntoDocument', function() {
	      if (this.src) {
	        core.resourceLoader.load(this, this.src, this._eval);
	      }
	      else {
	        var src = this.sourceLocation || {},
	            filename = src.file || this._ownerDocument.URL;

	        if (src) {
	          filename += ':' + src.line + ':' + src.col;
	        }
	        filename += '<script>';

	        core.resourceLoader.enqueue(this, this._eval, filename)(null, this.text);
	      }
	    });
	  },
	  proto: {
	    _eval: function(text, filename) {
	      if (this._ownerDocument.implementation.hasFeature("ProcessExternalResources", "script") &&
	          this.language                                                                      &&
	          core.languageProcessors[this.language])
	      {
	        this._ownerDocument._writeAfterElement = this;
	        core.languageProcessors[this.language](this, text, filename);
	        delete this._ownerDocument._writeAfterElement;
	      }
	    },
	    get language() {
	      var type = this.type || "text/javascript";
	      return type.split("/").pop().toLowerCase();
	    },
	    get text() {
	      var i=0, children = this.childNodes, l = children.length, ret = [];

	      for (i; i<l; i++) {
	        ret.push(children.item(i).nodeValue);
	      }

	      return ret.join("");
	    },
	    set text(text) {
	      while (this.childNodes.length) {
	        this.removeChild(this.childNodes[0]);
	      }
	      this.appendChild(this._ownerDocument.createTextNode(text));
	    }
	  },
	  attributes : [
	    {prop: 'defer', 'type': 'boolean'},
	    'htmlFor',
	    'event',
	    'charset',
	    'type',
	    'src'
	  ]
	})

	define('HTMLTableElement', {
	  tagName: 'TABLE',
	  proto: {
	    get caption() {
	      return firstChild(this, 'CAPTION');
	    },
	    get tHead() {
	      return firstChild(this, 'THEAD');
	    },
	    get tFoot() {
	      return firstChild(this, 'TFOOT');
	    },
	    get rows() {
	      if (!this._rows) {
	        var table = this;
	        this._rows = new core.HTMLCollection(this._ownerDocument, function() {
	          var sections = [table.tHead].concat(table.tBodies._toArray(), table.tFoot).filter(function(s) { return !!s });

	          if (sections.length === 0) {
	            return core.mapDOMNodes(table, false, function(el) {
	              return el.tagName === 'TR';
	            });
	          }

	          return sections.reduce(function(prev, s) {
	            return prev.concat(s.rows._toArray());
	          }, []);

	        });
	      }
	      return this._rows;
	    },
	    get tBodies() {
	      if (!this._tBodies) {
	        this._tBodies = descendants(this, 'TBODY', false);
	      }
	      return this._tBodies;
	    },
	    createTHead: function() {
	      var el = this.tHead;
	      if (!el) {
	        el = this._ownerDocument.createElement('THEAD');
	        this.appendChild(el);
	      }
	      return el;
	    },
	    deleteTHead: function() {
	      var el = this.tHead;
	      if (el) {
	        el._parentNode.removeChild(el);
	      }
	    },
	    createTFoot: function() {
	      var el = this.tFoot;
	      if (!el) {
	        el = this._ownerDocument.createElement('TFOOT');
	        this.appendChild(el);
	      }
	      return el;
	    },
	    deleteTFoot: function() {
	      var el = this.tFoot;
	      if (el) {
	        el._parentNode.removeChild(el);
	      }
	    },
	    createCaption: function() {
	      var el = this.caption;
	      if (!el) {
	        el = this._ownerDocument.createElement('CAPTION');
	        this.appendChild(el);
	      }
	      return el;
	    },
	    deleteCaption: function() {
	      var c = this.caption;
	      if (c) {
	        c._parentNode.removeChild(c);
	      }
	    },
	    insertRow: function(index) {
	      var tr = this._ownerDocument.createElement('TR');
	      if (this.childNodes.length === 0) {
	        this.appendChild(this._ownerDocument.createElement('TBODY'));
	      }
	      var rows = this.rows._toArray();
	      if (index < -1 || index > rows.length) {
	        throw new core.DOMException(core.INDEX_SIZE_ERR);
	      }
	      if (index === -1 || (index === 0 && rows.length === 0)) {
	        this.tBodies.item(0).appendChild(tr);
	      }
	      else if (index === rows.length) {
	        var ref = rows[index-1];
	        ref._parentNode.appendChild(tr);
	      }
	      else {
	        var ref = rows[index];
	        ref._parentNode.insertBefore(tr, ref);
	      }
	      return tr;
	    },
	    deleteRow: function(index) {
	      var rows = this.rows._toArray(), l = rows.length;
	      if (index === -1) {
	        index = l-1;
	      }
	      if (index < 0 || index >= l) {
	        throw new core.DOMException(core.INDEX_SIZE_ERR);
	      }
	      var tr = rows[index];
	      tr._parentNode.removeChild(tr);
	    }
	  },
	  attributes: [
	    'align',
	    'bgColor',
	    'border',
	    'cellPadding',
	    'cellSpacing',
	    'frame',
	    'rules',
	    'summary',
	    'width'
	  ]
	});

	define('HTMLTableCaptionElement', {
	  tagName: 'CAPTION',
	  attributes: [
	    'align'
	  ]
	});

	define('HTMLTableColElement', {
	  tagNames: ['COL','COLGROUP'],
	  attributes: [
	    'align',
	    {prop: 'ch', attr: 'char'},
	    {prop: 'chOff', attr: 'charoff'},
	    {prop: 'span', type: 'long'},
	    'vAlign',
	    'width',
	  ]
	});

	define('HTMLTableSectionElement', {
	  tagNames: ['THEAD','TBODY','TFOOT'],
	  proto: {
	    get rows() {
	      if (!this._rows) {
	        this._rows = descendants(this, 'TR', false);
	      }
	      return this._rows;
	    },
	    insertRow: function(index) {
	      var tr = this._ownerDocument.createElement('TR');
	      var rows = this.rows._toArray();
	      if (index < -1 || index > rows.length) {
	        throw new core.DOMException(core.INDEX_SIZE_ERR);
	      }
	      if (index === -1 || index === rows.length) {
	        this.appendChild(tr);
	      }
	      else {
	        var ref = rows[index];
	        this.insertBefore(tr, ref);
	      }
	      return tr;
	    },
	    deleteRow: function(index) {
	      var rows = this.rows._toArray();
	      if (index === -1) {
	        index = rows.length-1;
	      }
	      if (index < 0 || index >= rows.length) {
	        throw new core.DOMException(core.INDEX_SIZE_ERR);
	      }
	      var tr = this.rows[index];
	      this.removeChild(tr);
	    }
	  },
	  attributes: [
	    'align',
	    {prop: 'ch', attr: 'char'},
	    {prop: 'chOff', attr: 'charoff'},
	    {prop: 'span', type: 'long'},
	    'vAlign',
	    'width',
	  ]
	});

	define('HTMLTableRowElement', {
	  tagName: 'TR',
	  proto: {
	    get cells() {
	      if (!this._cells) {
	        this._cells = new core.HTMLCollection(this, core.mapper(this, function(n) {
	          return n.nodeName === 'TD' || n.nodeName === 'TH';
	        }, false));
	      }
	      return this._cells;
	    },
	    get rowIndex() {
	      var table = closest(this, 'TABLE');
	      return table ? table.rows._toArray().indexOf(this) : -1;
	    },

	    get sectionRowIndex() {
	      return this._parentNode.rows._toArray().indexOf(this);
	    },
	    insertCell: function(index) {
	      var td = this._ownerDocument.createElement('TD');
	      var cells = this.cells._toArray();
	      if (index < -1 || index > cells.length) {
	        throw new core.DOMException(core.INDEX_SIZE_ERR);
	      }
	      if (index === -1 || index === cells.length) {
	        this.appendChild(td);
	      }
	      else {
	        var ref = cells[index];
	        this.insertBefore(td, ref);
	      }
	      return td;
	    },
	    deleteCell: function(index) {
	      var cells = this.cells._toArray();
	      if (index === -1) {
	        index = cells.length-1;
	      }
	      if (index < 0 || index >= cells.length) {
	        throw new core.DOMException(core.INDEX_SIZE_ERR);
	      }
	      var td = this.cells[index];
	      this.removeChild(td);
	    }
	  },
	  attributes: [
	    'align',
	    'bgColor',
	    {prop: 'ch', attr: 'char'},
	    {prop: 'chOff', attr: 'charoff'},
	    'vAlign'
	  ]
	});

	define('HTMLTableCellElement', {
	  tagNames: ['TH','TD'],
	  proto: {
	    _headers: null,
	    set headers(h) {
	      if (h === '') {
	        //Handle resetting headers so the dynamic getter returns a query
	        this._headers = null;
	        return;
	      }
	      if (!(h instanceof Array)) {
	        h = [h];
	      }
	      this._headers = h;
	    },
	    get headers() {
	      if (this._headers) {
	        return this._headers.join(' ');
	      }
	      var cellIndex = this.cellIndex,
	          headings  = [],
	          siblings  = this._parentNode.getElementsByTagName(this.tagName);

	      for (var i=0; i<siblings.length; i++) {
	        if (siblings.item(i).cellIndex >= cellIndex) {
	          break;
	        }
	        headings.push(siblings.item(i).id);
	      }
	      this._headers = headings;
	      return headings.join(' ');
	    },
	    get cellIndex() {
	      return closest(this, 'TR').cells._toArray().indexOf(this);
	    }
	  },
	  attributes: [
	    'abbr',
	    'align',
	    'axis',
	    'bgColor',
	    {prop: 'ch', attr: 'char'},
	    {prop: 'chOff', attr: 'charoff'},
	    {prop: 'colSpan', type: 'long'},
	    'height',
	    {prop: 'noWrap', type: 'boolean'},
	    {prop: 'rowSpan', type: 'long'},
	    'scope',
	    'vAlign',
	    'width'
	  ]
	});

	define('HTMLFrameSetElement', {
	  tagName: 'FRAMESET',
	  attributes: [
	    'cols',
	    'rows'
	  ]
	});

	function loadFrame (frame) {
	  if (frame._contentDocument) {
	    // We don't want to access document.parentWindow, since the getter will
	    // cause a new window to be allocated if it doesn't exist.  Probe the
	    // private variable instead.
	    if (frame._contentDocument._parentWindow) {
	      // close calls delete on its document.
	      frame._contentDocument.parentWindow.close();
	    } else {
	      delete frame._contentDocument;
	    }
	  }

	  var src = frame.src.trim() === '' ? 'about:blank' : frame.src;
	  var parentDoc = frame._ownerDocument;

	  // If the URL can't be resolved or the src attribute is missing / blank,
	  // then url should be set to the string "about:blank".
	  // (http://www.whatwg.org/specs/web-apps/current-work/#the-iframe-element)
	  var url = core.resourceLoader.resolve(parentDoc, src);
	  var contentDoc = frame._contentDocument = new core.HTMLDocument({
	    url: url,
	    documentRoot: Path.dirname(url)
	  });
	  applyDocumentFeatures(contentDoc, parentDoc.implementation._features);

	  var parent = parentDoc.parentWindow;
	  var contentWindow = contentDoc.parentWindow;
	  contentWindow.parent = parent;
	  contentWindow.top = parent.top;

	  // Handle about:blank with a simulated load of an empty document.
	  if(url === 'about:blank') {
	    core.resourceLoader.enqueue(frame, function() {
	      contentDoc.write();
	      contentDoc.close();
	    })();
	  } else {
	    core.resourceLoader.load(frame, url, function(html, filename) {
	      contentDoc.write(html);
	      contentDoc.close();
	    });
	  }
	}

	define('HTMLFrameElement', {
	  tagName: 'FRAME',
	  init : function () {
	    // Set up the frames array.  window.frames really just returns a reference
	    // to the window object, so the frames array is just implemented as indexes
	    // on the window.
	    var parent = this._ownerDocument.parentWindow;
	    var frameID = parent._length++;
	    var self = this;
	    defineGetter(parent, frameID, function () {
	      return self.contentWindow;
	    });

	    // The contentDocument/contentWindow shouldn't be created until the frame
	    // is inserted:
	    // "When an iframe element is first inserted into a document, the user
	    //  agent must create a nested browsing context, and then process the
	    //  iframe attributes for the first time."
	    //  (http://www.whatwg.org/specs/web-apps/current-work/#the-iframe-element)
	    this._initInsertListener = function () {
	      loadFrame(self);
	    };
	    this.addEventListener('DOMNodeInsertedIntoDocument', this._initInsertListener, false);
	  },
	  proto: {
	    _attrModified: function(name, value, oldVal) {
	      core.HTMLElement.prototype._attrModified.call(this, name, value, oldVal);
	      var self = this;
	      if (name === 'name') {
	        // Remove named frame access.
	        if (oldVal) {
	          this._ownerDocument.parentWindow._frame(oldVal);
	        }
	        // Set up named frame access.
	        if (value) {
	          this._ownerDocument.parentWindow._frame(value, this);
	        }
	      } else if (name === 'src') {
	        // Page we don't fetch the page until the node is inserted. This at
	        // least seems to be the way Chrome does it.
	        if (!this._attachedToDocument) {
	          if (!this._waitingOnInsert) {
	            // First, remove the listener added in 'init'.
	            this.removeEventListener('DOMNodeInsertedIntoDocument',
	                                     this._initInsertListener, false)

	            // If we aren't already waiting on an insert, add a listener.
	            // This guards against src being set multiple times before the frame
	            // is inserted into the document - we don't want to register multiple
	            // callbacks.
	            this.addEventListener('DOMNodeInsertedIntoDocument', function loader () {
	              self.removeEventListener('DOMNodeInsertedIntoDocument', loader, false);
	              this._waitingOnInsert = false;
	              loadFrame(self);
	            }, false);
	            this._waitingOnInsert = true;
	          }
	        } else {
	          loadFrame(self);
	        }
	      }
	    },
	    _contentDocument : null,
	    get contentDocument() {
	      if (this._contentDocument == null) {
	        this._contentDocument = new core.HTMLDocument();
	      }
	      return this._contentDocument;
	    },
	    get contentWindow() {
	      return this.contentDocument.parentWindow;
	    }
	  },
	  attributes: [
	    'frameBorder',
	    'longDesc',
	    'marginHeight',
	    'marginWidth',
	    'name',
	    {prop: 'noResize', type: 'boolean'},
	    'scrolling',
	    {prop: 'src', type: 'string', write: false}
	  ]
	});

	define('HTMLIFrameElement', {
	  tagName: 'IFRAME',
	  parentClass: core.HTMLFrameElement,
	  attributes: [
	    'align',
	    'frameBorder',
	    'height',
	    'longDesc',
	    'marginHeight',
	    'marginWidth',
	    'name',
	    'scrolling',
	    'src',
	    'width'
	  ]
	});

	exports.define = define;
	exports.dom = {
	  level2 : {
	    html : core
	  }
	}



/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	/* DOM Level2 Events implemented as described here:
	 *
	 * http://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html
	 *
	 */
	var core = __webpack_require__(16).dom.level2.core,
	    utils = __webpack_require__(14),
	    defineGetter = utils.defineGetter,
	    defineSetter = utils.defineSetter,
	    inheritFrom = utils.inheritFrom;

	// modify cloned instance for more info check: https://github.com/tmpvar/jsdom/issues/325
	core = Object.create(core);

	var events = {};

	events.EventException = function() {
	    if (arguments.length > 0) {
	        this._code = arguments[0];
	    } else {
	        this._code = 0;
	    }
	    if (arguments.length > 1) {
	        this._message = arguments[1];
	    } else {
	        this._message = "Unspecified event type";
	    }
	    Error.call(this, this._message);
	    if (Error.captureStackTrace) {
	        Error.captureStackTrace(this, events.EventException);
	    }
	};
	inheritFrom(Error, events.EventException, {
	  UNSPECIFIED_EVENT_TYPE_ERR : 0,
	  get code() { return this._code;}
	});

	events.Event = function(eventType) {
	    this._eventType = eventType;
	    this._type = null;
	    this._bubbles = null;
	    this._cancelable = null;
	    this._target = null;
	    this._currentTarget = null;
	    this._eventPhase = 0;
	    this._timeStamp = null;
	    this._preventDefault = false;
	    this._stopPropagation = false;
	};
	events.Event.prototype = {
	    initEvent: function(type, bubbles, cancelable) {
	        this._type = type;
	        this._bubbles = bubbles;
	        this._cancelable = cancelable;
	    },
	    preventDefault: function() {
	        if (this._cancelable) {
	            this._preventDefault = true;
	        }
	    },
	    stopPropagation: function() {
	        this._stopPropagation = true;
	    },
	    NONE            : 0,
	    CAPTURING_PHASE : 1,
	    AT_TARGET       : 2,
	    BUBBLING_PHASE  : 3,
	    get eventType() { return this._eventType; },
	    get type() { return this._type; },
	    get bubbles() { return this._bubbles; },
	    get cancelable() { return this._cancelable; },
	    get target() { return this._target; },
	    get currentTarget() { return this._currentTarget; },
	    get eventPhase() { return this._eventPhase; },
	    get timeStamp() { return this._timeStamp; }
	};


	events.UIEvent = function(eventType) {
	    events.Event.call(this, eventType);
	    this.view = null;
	    this.detail = null;
	};
	inheritFrom(events.Event, events.UIEvent, {
	    initUIEvent: function(type, bubbles, cancelable, view, detail) {
	        this.initEvent(type, bubbles, cancelable);
	        this.view = view;
	        this.detail = detail;
	    },
	});


	events.MouseEvent = function(eventType) {
	    events.UIEvent.call(this, eventType);
	    this.screenX = null;
	    this.screenY = null;
	    this.clientX = null;
	    this.clientY = null;
	    this.ctrlKey = null;
	    this.shiftKey = null;
	    this.altKey = null;
	    this.metaKey = null;
	    this.button = null;
	    this.relatedTarget = null;
	};
	inheritFrom(events.UIEvent, events.MouseEvent, {
	    initMouseEvent:   function(type,
	                               bubbles,
	                               cancelable,
	                               view,
	                               detail,
	                               screenX,
	                               screenY,
	                               clientX,
	                               clientY,
	                               ctrlKey,
	                               altKey,
	                               shiftKey,
	                               metaKey,
	                               button,
	                               relatedTarget) {
	        this.initUIEvent(type, bubbles, cancelable, view, detail);
	        this.screenX  = screenX
	        this.screenY  = screenY
	        this.clientX  = clientX
	        this.clientY  = clientY
	        this.ctrlKey  = ctrlKey
	        this.shiftKey  = shiftKey
	        this.altKey  = altKey
	        this.metaKey  = metaKey
	        this.button  = button
	        this.relatedTarget  = relatedTarget
	    }
	});


	events.MutationEvent = function(eventType) {
	    events.Event.call(this, eventType);
	    this.relatedNode = null;
	    this.prevValue = null;
	    this.newValue = null;
	    this.attrName = null;
	    this.attrChange = null;
	};
	inheritFrom(events.Event, events.MutationEvent, {
	    initMutationEvent:   function(type,
	                                  bubbles,
	                                  cancelable,
	                                  relatedNode,
	                                  prevValue,
	                                  newValue,
	                                  attrName,
	                                  attrChange) {
	        this.initEvent(type, bubbles, cancelable);
	        this.relatedNode = relatedNode;
	        this.prevValue = prevValue;
	        this.newValue = newValue;
	        this.attrName = attrName;
	        this.attrChange = attrChange;
	    },
	    MODIFICATION : 1,
	    ADDITION     : 2,
	    REMOVAL      : 3
	});

	events.EventTarget = function() {};

	function getListeners(target, type, capturing) {
	    var listeners = target._listeners
	            && target._listeners[type]
	            && target._listeners[type][capturing] || [];
	    if (!capturing) {
	        var traditionalHandler = target['on' + type];
	        if (traditionalHandler) {
	            var implementation = (target._ownerDocument ? target._ownerDocument.implementation
	                                                        : target.document.implementation);

	            if (implementation.hasFeature('ProcessExternalResources', 'script')) {
	                if (listeners.indexOf(traditionalHandler) < 0) {
	                    listeners.push(traditionalHandler);
	                }
	            }
	        }
	    }
	    return listeners;
	}

	function dispatchPhase(event, iterator) {
	    var target = iterator();

	    while (target && !event._stopPropagation) {
	        if (event._eventPhase === event.CAPTURING_PHASE || event._eventPhase === event.AT_TARGET) {
	            callListeners(event, target, getListeners(target, event._type, true));
	        }
	        if (event._eventPhase === event.AT_TARGET || event._eventPhase === event.BUBBLING_PHASE) {
	            callListeners(event, target, getListeners(target, event._type, false));
	        }
	        target = iterator();
	    }
	}

	function callListeners(event, target, listeners) {
	    var currentListener = listeners.length;
	    while (currentListener--) {
	        event._currentTarget = target;
	        try {
	          listeners[currentListener].call(target, event);
	        } catch (e) {
	          target.raise(
	            'error', "Dispatching event '" + event._type + "' failed",
	            {error: e, event: event}
	          );
	        }
	    }
	}

	function forwardIterator(list) {
	  var i = 0, len = list.length;
	  return function iterator() { return i < len ? list[i++] : null };
	}

	function backwardIterator(list) {
	  var i = list.length;
	  return function iterator() { return i >=0 ? list[--i] : null };
	}

	function singleIterator(obj) {
	  var i = 1;
	  return function iterator() { return i-- ? obj : null };
	}

	events.EventTarget.prototype = {
	    addEventListener: function(type, listener, capturing) {
	        this._listeners = this._listeners || {};
	        var listeners = this._listeners[type] || {};
	        capturing = (capturing === true);
	        var capturingListeners = listeners[capturing] || [];
	        for (var i=0; i < capturingListeners.length; i++) {
	            if (capturingListeners[i] === listener) {
	                return;
	            }
	        }
	        capturingListeners.push(listener);
	        listeners[capturing] = capturingListeners;
	        this._listeners[type] = listeners;
	    },

	    removeEventListener: function(type, listener, capturing) {
	        var listeners  = this._listeners && this._listeners[type];
	        if (!listeners) return;
	        var capturingListeners = listeners[(capturing === true)];
	        if (!capturingListeners) return;
	        for (var i=0; i < capturingListeners.length; i++) {
	            if (capturingListeners[i] === listener) {
	                capturingListeners.splice(i, 1);
	                return;
	            }
	        }
	    },

	    dispatchEvent: function(event) {
	        if (event == null) {
	            throw new events.EventException(0, "Null event");
	        }
	        if (event._type == null || event._type == "") {
	            throw new events.EventException(0, "Uninitialized event");
	        }

	        var targetList = [];

	        event._target = this;

	        //per the spec we gather the list of targets first to ensure
	        //against dom modifications during actual event dispatch
	        var target = this,
	            targetParent = target._parentNode;
	        while (targetParent) {
	            targetList.push(targetParent);
	            target = targetParent;
	            targetParent = target._parentNode;
	        }
	        targetParent = target._parentWindow;
	        if (targetParent) {
	            targetList.push(targetParent);
	        }

	        var iterator = backwardIterator(targetList);

	        event._eventPhase = event.CAPTURING_PHASE;
	        dispatchPhase(event, iterator);

	        iterator = singleIterator(event._target);
	        event._eventPhase = event.AT_TARGET;
	        dispatchPhase(event, iterator);

	        if (event._bubbles) {
	            iterator = forwardIterator(targetList);
	            event._eventPhase = event.BUBBLING_PHASE;
	            dispatchPhase(event, iterator);
	        }

	        event._currentTarget = null;
	        event._eventPhase = event.NONE;

	        return !event._preventDefault;
	    }

	};

	// Reinherit class heirarchy with EventTarget at its root
	inheritFrom(events.EventTarget, core.Node, core.Node.prototype);

	// Node
	inheritFrom(core.Node, core.Attr, core.Attr.prototype);
	inheritFrom(core.Node, core.CharacterData, core.CharacterData.prototype);
	inheritFrom(core.Node, core.Document, core.Document.prototype);
	inheritFrom(core.Node, core.DocumentFragment, core.DocumentFragment.prototype);
	inheritFrom(core.Node, core.DocumentType, core.DocumentType.prototype);
	inheritFrom(core.Node, core.Element, core.Element.prototype);
	inheritFrom(core.Node, core.Entity, core.Entity.prototype);
	inheritFrom(core.Node, core.EntityReference, core.EntityReference.prototype);
	inheritFrom(core.Node, core.Notation, core.Notation.prototype);
	inheritFrom(core.Node, core.ProcessingInstruction, core.ProcessingInstruction.prototype);

	// CharacterData
	inheritFrom(core.CharacterData, core.Text, core.Text.prototype);

	// Text
	inheritFrom(core.Text, core.CDATASection, core.CDATASection.prototype);
	inheritFrom(core.Text, core.Comment, core.Comment.prototype);

	function getDocument(el) {
	  return el.nodeType == core.Node.DOCUMENT_NODE ? el : el._ownerDocument;
	}

	function mutationEventsEnabled(el) {
	  return el.nodeType != core.Node.ATTRIBUTE_NODE &&
	         getDocument(el).implementation.hasFeature('MutationEvents');
	}

	utils.intercept(core.Node, 'insertBefore', function(_super, args, newChild, refChild) {
	  var ret = _super.apply(this, args);
	  if (mutationEventsEnabled(this)) {
	    var doc = getDocument(this),
	        ev = doc.createEvent("MutationEvents");

	    ev.initMutationEvent("DOMNodeInserted", true, false, this, null, null, null, null);
	    newChild.dispatchEvent(ev);
	    if (this.nodeType == core.Node.DOCUMENT_NODE || this._attachedToDocument) {
	      ev = doc.createEvent("MutationEvents");
	      ev.initMutationEvent("DOMNodeInsertedIntoDocument", false, false, null, null, null, null, null);
	      core.visitTree(newChild, function(el) {
	        if (el.nodeType == core.Node.ELEMENT_NODE) {
	          el.dispatchEvent(ev);
	          el._attachedToDocument = true;
	        }
	      });
	    }
	  }
	  return ret;
	});

	utils.intercept(core.Node, 'removeChild', function (_super, args, oldChild) {
	  if (mutationEventsEnabled(this)) {
	    var doc = getDocument(this),
	        ev = doc.createEvent("MutationEvents");

	    ev.initMutationEvent("DOMNodeRemoved", true, false, this, null, null, null, null);
	    oldChild.dispatchEvent(ev);

	    ev = doc.createEvent("MutationEvents");
	    ev.initMutationEvent("DOMNodeRemovedFromDocument", false, false, null, null, null, null, null);
	    core.visitTree(oldChild, function(el) {
	      if (el.nodeType == core.Node.ELEMENT_NODE) {
	        el.dispatchEvent(ev);
	        el._attachedToDocument = false;
	      }
	    });
	  }
	  return _super.apply(this, args);
	});

	function dispatchAttrEvent(doc, target, prevVal, newVal, attrName, attrChange) {
	  if (!newVal || newVal != prevVal) {
	    var ev = doc.createEvent("MutationEvents");
	    ev.initMutationEvent("DOMAttrModified", true, false, target, prevVal,
	                         newVal, attrName, attrChange);
	    target.dispatchEvent(ev);
	  }
	}

	function attrNodeInterceptor(change) {
	  return function(_super, args, node) {
	    var target = this._parentNode,
	        prev = _super.apply(this, args);

	    if (mutationEventsEnabled(target)) {
	      dispatchAttrEvent(target._ownerDocument,
	                        target,
	                        prev && prev.value || null,
	                        change == 'ADDITION' ? node.value : null,
	                        prev && prev.name || node.name,
	                        events.MutationEvent.prototype[change]);
	    }

	    return prev;
	  };
	}

	function attrInterceptor(ns) {
	  return function(_super, args, localName, value, _name, _prefix, namespace) {
	    var target = this._parentNode;

	    if (!mutationEventsEnabled(target)) {
	      _super.apply(this, args);
	      return;
	    }

	    if (namespace === undefined) {
	        namespace = null;
	    }

	    var prev =
	          ns ? this.$getNode(namespace, localName) : this.$getNoNS(localName);
	    var prevVal = prev && prev.value || null;

	    _super.apply(this, args);

	    var node = ns ? this.$getNode(namespace, localName):
	            this.$getNoNS(localName);

	    dispatchAttrEvent(target._ownerDocument,
	                      target,
	                      prevVal,
	                      node.value,
	                      node.name,
	                      events.MutationEvent.prototype.ADDITION);
	  };
	}


	utils.intercept(core.AttributeList, '$removeNode',
	                attrNodeInterceptor('REMOVAL'));
	utils.intercept(core.AttributeList, '$setNode',
	                attrNodeInterceptor('ADDITION'));
	utils.intercept(core.AttributeList, '$set', attrInterceptor(true));
	utils.intercept(core.AttributeList, '$setNoNS', attrInterceptor(false));

	defineGetter(core.CharacterData.prototype, "_nodeValue", function() {
	  return this.__nodeValue;
	});
	defineSetter(core.CharacterData.prototype, "_nodeValue", function(value) {
	  var oldValue = this.__nodeValue;
	  this.__nodeValue = value;
	  if (this._ownerDocument && this._parentNode && mutationEventsEnabled(this)) {
	    var ev = this._ownerDocument.createEvent("MutationEvents")
	    ev.initMutationEvent("DOMCharacterDataModified", true, false, this, oldValue, value, null, null);
	    this.dispatchEvent(ev);
	  }
	});

	core.Document.prototype.createEvent = function(eventType) {
	    switch (eventType) {
	        case "MutationEvents": return new events.MutationEvent(eventType);
	        case "UIEvents": return new events.UIEvent(eventType);
	        case "MouseEvents": return new events.MouseEvent(eventType);
	        case "HTMLEvents": return new events.Event(eventType);
	    }
	    return new events.Event(eventType);
	};

	exports.dom =
	{
	  level2 : {
	    core   : core,
	    events : events
	  }
	};


/***/ },
/* 20 */
/***/ function(module, exports) {

	exports.availableDocumentFeatures = [
	  'FetchExternalResources',
	  'ProcessExternalResources',
	  'MutationEvents',
	  'SkipExternalResources'
	];

	exports.defaultDocumentFeatures = {
	  "FetchExternalResources": ['script', 'link'/*, 'img', 'css', 'frame'*/],
	  "ProcessExternalResources": ['script'/*, 'frame', 'iframe'*/],
	  "MutationEvents": '2.0',
	  "SkipExternalResources": false
	};

	exports.applyDocumentFeatures = function(doc, features) {
	  var i, maxFeatures = exports.availableDocumentFeatures.length,
	      defaultFeatures = exports.defaultDocumentFeatures,
	      j,
	      k,
	      featureName,
	      featureSource;

	  features = features || {};

	  for (i=0; i<maxFeatures; i++) {
	    featureName = exports.availableDocumentFeatures[i];
	    if (typeof features[featureName] !== 'undefined') {
	      featureSource = features[featureName];
	    // We have to check the lowercase version also because the Document feature
	    // methods convert everything to lowercase.
	    } else if (typeof features[featureName.toLowerCase()] !== 'undefined') {
	      featureSource = features[featureName.toLowerCase()];
	    } else if (defaultFeatures[featureName]) {
	      featureSource = defaultFeatures[featureName];
	    } else {
	      continue;
	    }

	    doc.implementation.removeFeature(featureName);

	    if (typeof featureSource !== 'undefined') {
	      if (featureSource instanceof Array) {
	        k = featureSource.length;
	        for (j=0; j<k; j++) {
	          doc.implementation.addFeature(featureName, featureSource[j]);
	        }
	      } else {
	        doc.implementation.addFeature(featureName, featureSource);
	      }
	    }
	  }
	};


/***/ },
/* 21 */
/***/ function(module, exports) {

	module.exports = require("http");

/***/ },
/* 22 */
/***/ function(module, exports) {

	module.exports = require("https");

/***/ },
/* 23 */
/***/ function(module, exports) {

	exports.javascript = function(element, code, filename) {
	  var doc = element.ownerDocument, window = doc && doc.parentWindow;
	  if (window) {
	    try {
	      window.run(code, filename);
	    } catch (e) {
	      element.raise(
	        'error', 'Running ' + filename + ' failed.',
	        {error: e, filename: filename}
	      );
	    }
	  }
	};


/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.CSSStyleDeclaration = __webpack_require__(25).CSSStyleDeclaration;
	exports.CSSRule = __webpack_require__(30).CSSRule;
	exports.CSSStyleRule = __webpack_require__(29).CSSStyleRule;
	exports.MediaList = __webpack_require__(32).MediaList;
	exports.CSSMediaRule = __webpack_require__(33).CSSMediaRule;
	exports.CSSImportRule = __webpack_require__(31).CSSImportRule;
	exports.CSSFontFaceRule = __webpack_require__(34).CSSFontFaceRule;
	exports.StyleSheet = __webpack_require__(28).StyleSheet;
	exports.CSSStyleSheet = __webpack_require__(27).CSSStyleSheet;
	exports.CSSKeyframesRule = __webpack_require__(36).CSSKeyframesRule;
	exports.CSSKeyframeRule = __webpack_require__(35).CSSKeyframeRule;
	exports.MatcherList = __webpack_require__(40).MatcherList;
	exports.CSSDocumentRule = __webpack_require__(39).CSSDocumentRule;
	exports.CSSValue = __webpack_require__(38).CSSValue;
	exports.CSSValueExpression = __webpack_require__(37).CSSValueExpression;
	exports.parse = __webpack_require__(26).parse;
	exports.clone = __webpack_require__(41).clone;


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {};
	///CommonJS


	/**
	 * @constructor
	 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration
	 */
	CSSOM.CSSStyleDeclaration = function CSSStyleDeclaration(){
		this.length = 0;
		this.parentRule = null;

		// NON-STANDARD
		this._importants = {};
	};


	CSSOM.CSSStyleDeclaration.prototype = {

		constructor: CSSOM.CSSStyleDeclaration,

		/**
		 *
		 * @param {string} name
		 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyValue
		 * @return {string} the value of the property if it has been explicitly set for this declaration block.
		 * Returns the empty string if the property has not been set.
		 */
		getPropertyValue: function(name) {
			return this[name] || "";
		},

		/**
		 *
		 * @param {string} name
		 * @param {string} value
		 * @param {string} [priority=null] "important" or null
		 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-setProperty
		 */
		setProperty: function(name, value, priority) {
			if (this[name]) {
				// Property already exist. Overwrite it.
				var index = Array.prototype.indexOf.call(this, name);
				if (index < 0) {
					this[this.length] = name;
					this.length++;
				}
			} else {
				// New property.
				this[this.length] = name;
				this.length++;
			}
			this[name] = value;
			this._importants[name] = priority;
		},

		/**
		 *
		 * @param {string} name
		 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-removeProperty
		 * @return {string} the value of the property if it has been explicitly set for this declaration block.
		 * Returns the empty string if the property has not been set or the property name does not correspond to a known CSS property.
		 */
		removeProperty: function(name) {
			if (!(name in this)) {
				return "";
			}
			var index = Array.prototype.indexOf.call(this, name);
			if (index < 0) {
				return "";
			}
			var prevValue = this[name];
			this[name] = "";

			// That's what WebKit and Opera do
			Array.prototype.splice.call(this, index, 1);

			// That's what Firefox does
			//this[index] = ""

			return prevValue;
		},

		getPropertyCSSValue: function() {
			//FIXME
		},

		/**
		 *
		 * @param {String} name
		 */
		getPropertyPriority: function(name) {
			return this._importants[name] || "";
		},


		/**
		 *   element.style.overflow = "auto"
		 *   element.style.getPropertyShorthand("overflow-x")
		 *   -> "overflow"
		 */
		getPropertyShorthand: function() {
			//FIXME
		},

		isPropertyImplicit: function() {
			//FIXME
		},

		// Doesn't work in IE < 9
		get cssText(){
			var properties = [];
			for (var i=0, length=this.length; i < length; ++i) {
				var name = this[i];
				var value = this.getPropertyValue(name);
				var priority = this.getPropertyPriority(name);
				if (priority) {
					priority = " !" + priority;
				}
				properties[i] = name + ": " + value + priority + ";";
			}
			return properties.join(" ");
		},

		set cssText(cssText){
			var i, name;
			for (i = this.length; i--;) {
				name = this[i];
				this[name] = "";
			}
			Array.prototype.splice.call(this, 0, this.length);
			this._importants = {};

			var dummyRule = CSSOM.parse('#bogus{' + cssText + '}').cssRules[0].style;
			var length = dummyRule.length;
			for (i = 0; i < length; ++i) {
				name = dummyRule[i];
				this.setProperty(dummyRule[i], dummyRule.getPropertyValue(name), dummyRule.getPropertyPriority(name));
			}
		}
	};


	//.CommonJS
	exports.CSSStyleDeclaration = CSSOM.CSSStyleDeclaration;
	CSSOM.parse = __webpack_require__(26).parse; // Cannot be included sooner due to the mutual dependency between parse.js and CSSStyleDeclaration.js
	///CommonJS


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {};
	///CommonJS


	/**
	 * @param {string} token
	 */
	CSSOM.parse = function parse(token) {

		var i = 0;

		/**
			"before-selector" or
			"selector" or
			"atRule" or
			"atBlock" or
			"before-name" or
			"name" or
			"before-value" or
			"value"
		*/
		var state = "before-selector";

		var index;
		var buffer = "";

		var SIGNIFICANT_WHITESPACE = {
			"selector": true,
			"value": true,
			"atRule": true,
			"importRule-begin": true,
			"importRule": true,
			"atBlock": true,
			'documentRule-begin': true
		};

		var styleSheet = new CSSOM.CSSStyleSheet;

		// @type CSSStyleSheet|CSSMediaRule|CSSFontFaceRule|CSSKeyframesRule|CSSDocumentRule
		var currentScope = styleSheet;

		// @type CSSMediaRule|CSSKeyframesRule|CSSDocumentRule
		var parentRule;

		var selector, name, value, priority="", styleRule, mediaRule, importRule, fontFaceRule, keyframesRule, keyframeRule, documentRule;

		var atKeyframesRegExp = /@(-(?:\w+-)+)?keyframes/g;

		var parseError = function(message) {
			var lines = token.substring(0, i).split('\n');
			var lineCount = lines.length;
			var charCount = lines.pop().length + 1;
			var error = new Error(message + ' (line ' + lineCount + ', char ' + charCount + ')');
			error.line = lineCount;
			error.char = charCount;
			error.styleSheet = styleSheet;
			throw error;
		};

		for (var character; character = token.charAt(i); i++) {

			switch (character) {

			case " ":
			case "\t":
			case "\r":
			case "\n":
			case "\f":
				if (SIGNIFICANT_WHITESPACE[state]) {
					buffer += character;
				}
				break;

			// String
			case '"':
				index = i + 1;
				do {
					index = token.indexOf('"', index) + 1;
					if (!index) {
						parseError('Unmatched "');
					}
				} while (token[index - 2] === '\\')
				buffer += token.slice(i, index);
				i = index - 1;
				switch (state) {
					case 'before-value':
						state = 'value';
						break;
					case 'importRule-begin':
						state = 'importRule';
						break;
				}
				break;

			case "'":
				index = i + 1;
				do {
					index = token.indexOf("'", index) + 1;
					if (!index) {
						parseError("Unmatched '");
					}
				} while (token[index - 2] === '\\')
				buffer += token.slice(i, index);
				i = index - 1;
				switch (state) {
					case 'before-value':
						state = 'value';
						break;
					case 'importRule-begin':
						state = 'importRule';
						break;
				}
				break;

			// Comment
			case "/":
				if (token.charAt(i + 1) === "*") {
					i += 2;
					index = token.indexOf("*/", i);
					if (index === -1) {
						parseError("Missing */");
					} else {
						i = index + 1;
					}
				} else {
					buffer += character;
				}
				if (state === "importRule-begin") {
					buffer += " ";
					state = "importRule";
				}
				break;

			// At-rule
			case "@":
				if (token.indexOf("@-moz-document", i) === i) {
					state = "documentRule-begin";
					documentRule = new CSSOM.CSSDocumentRule;
					documentRule.__starts = i;
					i += "-moz-document".length;
					buffer = "";
					break;
				} else if (token.indexOf("@media", i) === i) {
					state = "atBlock";
					mediaRule = new CSSOM.CSSMediaRule;
					mediaRule.__starts = i;
					i += "media".length;
					buffer = "";
					break;
				} else if (token.indexOf("@import", i) === i) {
					state = "importRule-begin";
					i += "import".length;
					buffer += "@import";
					break;
				} else if (token.indexOf("@font-face", i) === i) {
					state = "fontFaceRule-begin";
					i += "font-face".length;
					fontFaceRule = new CSSOM.CSSFontFaceRule;
					fontFaceRule.__starts = i;
					buffer = "";
					break;
				} else {
					atKeyframesRegExp.lastIndex = i;
					var matchKeyframes = atKeyframesRegExp.exec(token);
					if (matchKeyframes && matchKeyframes.index === i) {
						state = "keyframesRule-begin";
						keyframesRule = new CSSOM.CSSKeyframesRule;
						keyframesRule.__starts = i;
						keyframesRule._vendorPrefix = matchKeyframes[1]; // Will come out as undefined if no prefix was found
						i += matchKeyframes[0].length - 1;
						buffer = "";
						break;
					} else if (state == "selector") {
						state = "atRule";
					}
				}
				buffer += character;
				break;

			case "{":
				if (state === "selector" || state === "atRule") {
					styleRule.selectorText = buffer.trim();
					styleRule.style.__starts = i;
					buffer = "";
					state = "before-name";
				} else if (state === "atBlock") {
					mediaRule.media.mediaText = buffer.trim();
					currentScope = parentRule = mediaRule;
					mediaRule.parentStyleSheet = styleSheet;
					buffer = "";
					state = "before-selector";
				} else if (state === "fontFaceRule-begin") {
					if (parentRule) {
						fontFaceRule.parentRule = parentRule;
					}
					fontFaceRule.parentStyleSheet = styleSheet;
					styleRule = fontFaceRule;
					buffer = "";
					state = "before-name";
				} else if (state === "keyframesRule-begin") {
					keyframesRule.name = buffer.trim();
					if (parentRule) {
						keyframesRule.parentRule = parentRule;
					}
					keyframesRule.parentStyleSheet = styleSheet;
					currentScope = parentRule = keyframesRule;
					buffer = "";
					state = "keyframeRule-begin";
				} else if (state === "keyframeRule-begin") {
					styleRule = new CSSOM.CSSKeyframeRule;
					styleRule.keyText = buffer.trim();
					styleRule.__starts = i;
					buffer = "";
					state = "before-name";
				} else if (state === "documentRule-begin") {
					// FIXME: what if this '{' is in the url text of the match function?
					documentRule.matcher.matcherText = buffer.trim();
					if (parentRule) {
						documentRule.parentRule = parentRule;
					}
					currentScope = parentRule = documentRule;
					documentRule.parentStyleSheet = styleSheet;
					buffer = "";
					state = "before-selector";
				}
				break;

			case ":":
				if (state === "name") {
					name = buffer.trim();
					buffer = "";
					state = "before-value";
				} else {
					buffer += character;
				}
				break;

			case '(':
				if (state === 'value') {
					// ie css expression mode
					if (buffer.trim() == 'expression') {
						var info = (new CSSOM.CSSValueExpression(token, i)).parse();

						if (info.error) {
							parseError(info.error);
						} else {
							buffer += info.expression;
							i = info.idx;
						}
					} else {
						index = token.indexOf(')', i + 1);
						if (index === -1) {
							parseError('Unmatched "("');
						}
						buffer += token.slice(i, index + 1);
						i = index;
					}
				} else {
					buffer += character;
				}

				break;

			case "!":
				if (state === "value" && token.indexOf("!important", i) === i) {
					priority = "important";
					i += "important".length;
				} else {
					buffer += character;
				}
				break;

			case ";":
				switch (state) {
					case "value":
						styleRule.style.setProperty(name, buffer.trim(), priority);
						priority = "";
						buffer = "";
						state = "before-name";
						break;
					case "atRule":
						buffer = "";
						state = "before-selector";
						break;
					case "importRule":
						importRule = new CSSOM.CSSImportRule;
						importRule.parentStyleSheet = importRule.styleSheet.parentStyleSheet = styleSheet;
						importRule.cssText = buffer + character;
						styleSheet.cssRules.push(importRule);
						buffer = "";
						state = "before-selector";
						break;
					default:
						buffer += character;
						break;
				}
				break;

			case "}":
				switch (state) {
					case "value":
						styleRule.style.setProperty(name, buffer.trim(), priority);
						priority = "";
					case "before-name":
					case "name":
						styleRule.__ends = i + 1;
						if (parentRule) {
							styleRule.parentRule = parentRule;
						}
						styleRule.parentStyleSheet = styleSheet;
						currentScope.cssRules.push(styleRule);
						buffer = "";
						if (currentScope.constructor === CSSOM.CSSKeyframesRule) {
							state = "keyframeRule-begin";
						} else {
							state = "before-selector";
						}
						break;
					case "keyframeRule-begin":
					case "before-selector":
					case "selector":
						// End of media/document rule.
						if (!parentRule) {
							parseError("Unexpected }");
						}
						currentScope.__ends = i + 1;
						// Nesting rules aren't supported yet
						styleSheet.cssRules.push(currentScope);
						currentScope = styleSheet;
						parentRule = null;
						buffer = "";
						state = "before-selector";
						break;
				}
				break;

			default:
				switch (state) {
					case "before-selector":
						state = "selector";
						styleRule = new CSSOM.CSSStyleRule;
						styleRule.__starts = i;
						break;
					case "before-name":
						state = "name";
						break;
					case "before-value":
						state = "value";
						break;
					case "importRule-begin":
						state = "importRule";
						break;
				}
				buffer += character;
				break;
			}
		}

		return styleSheet;
	};


	//.CommonJS
	exports.parse = CSSOM.parse;
	// The following modules cannot be included sooner due to the mutual dependency with parse.js
	CSSOM.CSSStyleSheet = __webpack_require__(27).CSSStyleSheet;
	CSSOM.CSSStyleRule = __webpack_require__(29).CSSStyleRule;
	CSSOM.CSSImportRule = __webpack_require__(31).CSSImportRule;
	CSSOM.CSSMediaRule = __webpack_require__(33).CSSMediaRule;
	CSSOM.CSSFontFaceRule = __webpack_require__(34).CSSFontFaceRule;
	CSSOM.CSSStyleDeclaration = __webpack_require__(25).CSSStyleDeclaration;
	CSSOM.CSSKeyframeRule = __webpack_require__(35).CSSKeyframeRule;
	CSSOM.CSSKeyframesRule = __webpack_require__(36).CSSKeyframesRule;
	CSSOM.CSSValueExpression = __webpack_require__(37).CSSValueExpression;
	CSSOM.CSSDocumentRule = __webpack_require__(39).CSSDocumentRule;
	///CommonJS


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {
		StyleSheet: __webpack_require__(28).StyleSheet,
		CSSStyleRule: __webpack_require__(29).CSSStyleRule
	};
	///CommonJS


	/**
	 * @constructor
	 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet
	 */
	CSSOM.CSSStyleSheet = function CSSStyleSheet() {
		CSSOM.StyleSheet.call(this);
		this.cssRules = [];
	};


	CSSOM.CSSStyleSheet.prototype = new CSSOM.StyleSheet;
	CSSOM.CSSStyleSheet.prototype.constructor = CSSOM.CSSStyleSheet;


	/**
	 * Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade.
	 *
	 *   sheet = new Sheet("body {margin: 0}")
	 *   sheet.toString()
	 *   -> "body{margin:0;}"
	 *   sheet.insertRule("img {border: none}", 0)
	 *   -> 0
	 *   sheet.toString()
	 *   -> "img{border:none;}body{margin:0;}"
	 *
	 * @param {string} rule
	 * @param {number} index
	 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-insertRule
	 * @return {number} The index within the style sheet's rule collection of the newly inserted rule.
	 */
	CSSOM.CSSStyleSheet.prototype.insertRule = function(rule, index) {
		if (index < 0 || index > this.cssRules.length) {
			throw new RangeError("INDEX_SIZE_ERR");
		}
		var cssRule = CSSOM.parse(rule).cssRules[0];
		cssRule.parentStyleSheet = this;
		this.cssRules.splice(index, 0, cssRule);
		return index;
	};


	/**
	 * Used to delete a rule from the style sheet.
	 *
	 *   sheet = new Sheet("img{border:none} body{margin:0}")
	 *   sheet.toString()
	 *   -> "img{border:none;}body{margin:0;}"
	 *   sheet.deleteRule(0)
	 *   sheet.toString()
	 *   -> "body{margin:0;}"
	 *
	 * @param {number} index within the style sheet's rule list of the rule to remove.
	 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet-deleteRule
	 */
	CSSOM.CSSStyleSheet.prototype.deleteRule = function(index) {
		if (index < 0 || index >= this.cssRules.length) {
			throw new RangeError("INDEX_SIZE_ERR");
		}
		this.cssRules.splice(index, 1);
	};


	/**
	 * NON-STANDARD
	 * @return {string} serialize stylesheet
	 */
	CSSOM.CSSStyleSheet.prototype.toString = function() {
		var result = "";
		var rules = this.cssRules;
		for (var i=0; i<rules.length; i++) {
			result += rules[i].cssText + "\n";
		}
		return result;
	};


	//.CommonJS
	exports.CSSStyleSheet = CSSOM.CSSStyleSheet;
	CSSOM.parse = __webpack_require__(26).parse; // Cannot be included sooner due to the mutual dependency between parse.js and CSSStyleSheet.js
	///CommonJS


/***/ },
/* 28 */
/***/ function(module, exports) {

	//.CommonJS
	var CSSOM = {};
	///CommonJS


	/**
	 * @constructor
	 * @see http://dev.w3.org/csswg/cssom/#the-stylesheet-interface
	 */
	CSSOM.StyleSheet = function StyleSheet() {
		this.parentStyleSheet = null;
	};


	//.CommonJS
	exports.StyleSheet = CSSOM.StyleSheet;
	///CommonJS


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {
		CSSStyleDeclaration: __webpack_require__(25).CSSStyleDeclaration,
		CSSRule: __webpack_require__(30).CSSRule
	};
	///CommonJS


	/**
	 * @constructor
	 * @see http://dev.w3.org/csswg/cssom/#cssstylerule
	 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule
	 */
	CSSOM.CSSStyleRule = function CSSStyleRule() {
		CSSOM.CSSRule.call(this);
		this.selectorText = "";
		this.style = new CSSOM.CSSStyleDeclaration;
		this.style.parentRule = this;
	};

	CSSOM.CSSStyleRule.prototype = new CSSOM.CSSRule;
	CSSOM.CSSStyleRule.prototype.constructor = CSSOM.CSSStyleRule;
	CSSOM.CSSStyleRule.prototype.type = 1;

	Object.defineProperty(CSSOM.CSSStyleRule.prototype, "cssText", {
		get: function() {
			var text;
			if (this.selectorText) {
				text = this.selectorText + " {" + this.style.cssText + "}";
			} else {
				text = "";
			}
			return text;
		},
		set: function(cssText) {
			var rule = CSSOM.CSSStyleRule.parse(cssText);
			this.style = rule.style;
			this.selectorText = rule.selectorText;
		}
	});


	/**
	 * NON-STANDARD
	 * lightweight version of parse.js.
	 * @param {string} ruleText
	 * @return CSSStyleRule
	 */
	CSSOM.CSSStyleRule.parse = function(ruleText) {
		var i = 0;
		var state = "selector";
		var index;
		var j = i;
		var buffer = "";

		var SIGNIFICANT_WHITESPACE = {
			"selector": true,
			"value": true
		};

		var styleRule = new CSSOM.CSSStyleRule;
		var selector, name, value, priority="";

		for (var character; character = ruleText.charAt(i); i++) {

			switch (character) {

			case " ":
			case "\t":
			case "\r":
			case "\n":
			case "\f":
				if (SIGNIFICANT_WHITESPACE[state]) {
					// Squash 2 or more white-spaces in the row into 1
					switch (ruleText.charAt(i - 1)) {
						case " ":
						case "\t":
						case "\r":
						case "\n":
						case "\f":
							break;
						default:
							buffer += " ";
							break;
					}
				}
				break;

			// String
			case '"':
				j = i + 1;
				index = ruleText.indexOf('"', j) + 1;
				if (!index) {
					throw '" is missing';
				}
				buffer += ruleText.slice(i, index);
				i = index - 1;
				break;

			case "'":
				j = i + 1;
				index = ruleText.indexOf("'", j) + 1;
				if (!index) {
					throw "' is missing";
				}
				buffer += ruleText.slice(i, index);
				i = index - 1;
				break;

			// Comment
			case "/":
				if (ruleText.charAt(i + 1) === "*") {
					i += 2;
					index = ruleText.indexOf("*/", i);
					if (index === -1) {
						throw new SyntaxError("Missing */");
					} else {
						i = index + 1;
					}
				} else {
					buffer += character;
				}
				break;

			case "{":
				if (state === "selector") {
					styleRule.selectorText = buffer.trim();
					buffer = "";
					state = "name";
				}
				break;

			case ":":
				if (state === "name") {
					name = buffer.trim();
					buffer = "";
					state = "value";
				} else {
					buffer += character;
				}
				break;

			case "!":
				if (state === "value" && ruleText.indexOf("!important", i) === i) {
					priority = "important";
					i += "important".length;
				} else {
					buffer += character;
				}
				break;

			case ";":
				if (state === "value") {
					styleRule.style.setProperty(name, buffer.trim(), priority);
					priority = "";
					buffer = "";
					state = "name";
				} else {
					buffer += character;
				}
				break;

			case "}":
				if (state === "value") {
					styleRule.style.setProperty(name, buffer.trim(), priority);
					priority = "";
					buffer = "";
				} else if (state === "name") {
					break;
				} else {
					buffer += character;
				}
				state = "selector";
				break;

			default:
				buffer += character;
				break;

			}
		}

		return styleRule;

	};


	//.CommonJS
	exports.CSSStyleRule = CSSOM.CSSStyleRule;
	///CommonJS


/***/ },
/* 30 */
/***/ function(module, exports) {

	//.CommonJS
	var CSSOM = {};
	///CommonJS


	/**
	 * @constructor
	 * @see http://dev.w3.org/csswg/cssom/#the-cssrule-interface
	 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule
	 */
	CSSOM.CSSRule = function CSSRule() {
		this.parentRule = null;
		this.parentStyleSheet = null;
	};

	CSSOM.CSSRule.STYLE_RULE = 1;
	CSSOM.CSSRule.IMPORT_RULE = 3;
	CSSOM.CSSRule.MEDIA_RULE = 4;
	CSSOM.CSSRule.FONT_FACE_RULE = 5;
	CSSOM.CSSRule.PAGE_RULE = 6;
	CSSOM.CSSRule.WEBKIT_KEYFRAMES_RULE = 8;
	CSSOM.CSSRule.WEBKIT_KEYFRAME_RULE = 9;

	// Obsolete in CSSOM http://dev.w3.org/csswg/cssom/
	//CSSOM.CSSRule.UNKNOWN_RULE = 0;
	//CSSOM.CSSRule.CHARSET_RULE = 2;

	// Never implemented
	//CSSOM.CSSRule.VARIABLES_RULE = 7;

	CSSOM.CSSRule.prototype = {
		constructor: CSSOM.CSSRule
		//FIXME
	};


	//.CommonJS
	exports.CSSRule = CSSOM.CSSRule;
	///CommonJS


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {
		CSSRule: __webpack_require__(30).CSSRule,
		CSSStyleSheet: __webpack_require__(27).CSSStyleSheet,
		MediaList: __webpack_require__(32).MediaList
	};
	///CommonJS


	/**
	 * @constructor
	 * @see http://dev.w3.org/csswg/cssom/#cssimportrule
	 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule
	 */
	CSSOM.CSSImportRule = function CSSImportRule() {
		CSSOM.CSSRule.call(this);
		this.href = "";
		this.media = new CSSOM.MediaList;
		this.styleSheet = new CSSOM.CSSStyleSheet;
	};

	CSSOM.CSSImportRule.prototype = new CSSOM.CSSRule;
	CSSOM.CSSImportRule.prototype.constructor = CSSOM.CSSImportRule;
	CSSOM.CSSImportRule.prototype.type = 3;

	Object.defineProperty(CSSOM.CSSImportRule.prototype, "cssText", {
	  get: function() {
	    var mediaText = this.media.mediaText;
	    return "@import url(" + this.href + ")" + (mediaText ? " " + mediaText : "") + ";";
	  },
	  set: function(cssText) {
	    var i = 0;

	    /**
	     * @import url(partial.css) screen, handheld;
	     *        ||               |
	     *        after-import     media
	     *         |
	     *         url
	     */
	    var state = '';

	    var buffer = '';
	    var index;
	    var mediaText = '';
	    for (var character; character = cssText.charAt(i); i++) {

	      switch (character) {
	        case ' ':
	        case '\t':
	        case '\r':
	        case '\n':
	        case '\f':
	          if (state === 'after-import') {
	            state = 'url';
	          } else {
	            buffer += character;
	          }
	          break;

	        case '@':
	          if (!state && cssText.indexOf('@import', i) === i) {
	            state = 'after-import';
	            i += 'import'.length;
	            buffer = '';
	          }
	          break;

	        case 'u':
	          if (state === 'url' && cssText.indexOf('url(', i) === i) {
	            index = cssText.indexOf(')', i + 1);
	            if (index === -1) {
	              throw i + ': ")" not found';
	            }
	            i += 'url('.length;
	            var url = cssText.slice(i, index);
	            if (url[0] === url[url.length - 1]) {
	              if (url[0] === '"' || url[0] === "'") {
	                url = url.slice(1, -1);
	              }
	            }
	            this.href = url;
	            i = index;
	            state = 'media';
	          }
	          break;

	        case '"':
	          if (state === 'url') {
	            index = cssText.indexOf('"', i + 1);
	            if (!index) {
	              throw i + ": '\"' not found";
	            }
	            this.href = cssText.slice(i + 1, index);
	            i = index;
	            state = 'media';
	          }
	          break;

	        case "'":
	          if (state === 'url') {
	            index = cssText.indexOf("'", i + 1);
	            if (!index) {
	              throw i + ': "\'" not found';
	            }
	            this.href = cssText.slice(i + 1, index);
	            i = index;
	            state = 'media';
	          }
	          break;

	        case ';':
	          if (state === 'media') {
	            if (buffer) {
	              this.media.mediaText = buffer.trim();
	            }
	          }
	          break;

	        default:
	          if (state === 'media') {
	            buffer += character;
	          }
	          break;
	      }
	    }
	  }
	});


	//.CommonJS
	exports.CSSImportRule = CSSOM.CSSImportRule;
	///CommonJS


/***/ },
/* 32 */
/***/ function(module, exports) {

	//.CommonJS
	var CSSOM = {};
	///CommonJS


	/**
	 * @constructor
	 * @see http://dev.w3.org/csswg/cssom/#the-medialist-interface
	 */
	CSSOM.MediaList = function MediaList(){
		this.length = 0;
	};

	CSSOM.MediaList.prototype = {

		constructor: CSSOM.MediaList,

		/**
		 * @return {string}
		 */
		get mediaText() {
			return Array.prototype.join.call(this, ", ");
		},

		/**
		 * @param {string} value
		 */
		set mediaText(value) {
			var values = value.split(",");
			var length = this.length = values.length;
			for (var i=0; i<length; i++) {
				this[i] = values[i].trim();
			}
		},

		/**
		 * @param {string} medium
		 */
		appendMedium: function(medium) {
			if (Array.prototype.indexOf.call(this, medium) === -1) {
				this[this.length] = medium;
				this.length++;
			}
		},

		/**
		 * @param {string} medium
		 */
		deleteMedium: function(medium) {
			var index = Array.prototype.indexOf.call(this, medium);
			if (index !== -1) {
				Array.prototype.splice.call(this, index, 1);
			}
		}

	};


	//.CommonJS
	exports.MediaList = CSSOM.MediaList;
	///CommonJS


/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {
		CSSRule: __webpack_require__(30).CSSRule,
		MediaList: __webpack_require__(32).MediaList
	};
	///CommonJS


	/**
	 * @constructor
	 * @see http://dev.w3.org/csswg/cssom/#cssmediarule
	 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule
	 */
	CSSOM.CSSMediaRule = function CSSMediaRule() {
		CSSOM.CSSRule.call(this);
		this.media = new CSSOM.MediaList;
		this.cssRules = [];
	};

	CSSOM.CSSMediaRule.prototype = new CSSOM.CSSRule;
	CSSOM.CSSMediaRule.prototype.constructor = CSSOM.CSSMediaRule;
	CSSOM.CSSMediaRule.prototype.type = 4;
	//FIXME
	//CSSOM.CSSMediaRule.prototype.insertRule = CSSStyleSheet.prototype.insertRule;
	//CSSOM.CSSMediaRule.prototype.deleteRule = CSSStyleSheet.prototype.deleteRule;

	// http://opensource.apple.com/source/WebCore/WebCore-658.28/css/CSSMediaRule.cpp
	Object.defineProperty(CSSOM.CSSMediaRule.prototype, "cssText", {
	  get: function() {
	    var cssTexts = [];
	    for (var i=0, length=this.cssRules.length; i < length; i++) {
	      cssTexts.push(this.cssRules[i].cssText);
	    }
	    return "@media " + this.media.mediaText + " {" + cssTexts.join("") + "}";
	  }
	});


	//.CommonJS
	exports.CSSMediaRule = CSSOM.CSSMediaRule;
	///CommonJS


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {
		CSSStyleDeclaration: __webpack_require__(25).CSSStyleDeclaration,
		CSSRule: __webpack_require__(30).CSSRule
	};
	///CommonJS


	/**
	 * @constructor
	 * @see http://dev.w3.org/csswg/cssom/#css-font-face-rule
	 */
	CSSOM.CSSFontFaceRule = function CSSFontFaceRule() {
		CSSOM.CSSRule.call(this);
		this.style = new CSSOM.CSSStyleDeclaration;
		this.style.parentRule = this;
	};

	CSSOM.CSSFontFaceRule.prototype = new CSSOM.CSSRule;
	CSSOM.CSSFontFaceRule.prototype.constructor = CSSOM.CSSFontFaceRule;
	CSSOM.CSSFontFaceRule.prototype.type = 5;
	//FIXME
	//CSSOM.CSSFontFaceRule.prototype.insertRule = CSSStyleSheet.prototype.insertRule;
	//CSSOM.CSSFontFaceRule.prototype.deleteRule = CSSStyleSheet.prototype.deleteRule;

	// http://www.opensource.apple.com/source/WebCore/WebCore-955.66.1/css/WebKitCSSFontFaceRule.cpp
	Object.defineProperty(CSSOM.CSSFontFaceRule.prototype, "cssText", {
	  get: function() {
	    return "@font-face {" + this.style.cssText + "}";
	  }
	});


	//.CommonJS
	exports.CSSFontFaceRule = CSSOM.CSSFontFaceRule;
	///CommonJS


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {
		CSSRule: __webpack_require__(30).CSSRule,
		CSSStyleDeclaration: __webpack_require__(25).CSSStyleDeclaration
	};
	///CommonJS


	/**
	 * @constructor
	 * @see http://www.w3.org/TR/css3-animations/#DOM-CSSKeyframeRule
	 */
	CSSOM.CSSKeyframeRule = function CSSKeyframeRule() {
		CSSOM.CSSRule.call(this);
		this.keyText = '';
		this.style = new CSSOM.CSSStyleDeclaration;
		this.style.parentRule = this;
	};

	CSSOM.CSSKeyframeRule.prototype = new CSSOM.CSSRule;
	CSSOM.CSSKeyframeRule.prototype.constructor = CSSOM.CSSKeyframeRule;
	CSSOM.CSSKeyframeRule.prototype.type = 9;
	//FIXME
	//CSSOM.CSSKeyframeRule.prototype.insertRule = CSSStyleSheet.prototype.insertRule;
	//CSSOM.CSSKeyframeRule.prototype.deleteRule = CSSStyleSheet.prototype.deleteRule;

	// http://www.opensource.apple.com/source/WebCore/WebCore-955.66.1/css/WebKitCSSKeyframeRule.cpp
	Object.defineProperty(CSSOM.CSSKeyframeRule.prototype, "cssText", {
	  get: function() {
	    return this.keyText + " {" + this.style.cssText + "} ";
	  }
	});


	//.CommonJS
	exports.CSSKeyframeRule = CSSOM.CSSKeyframeRule;
	///CommonJS


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {
		CSSRule: __webpack_require__(30).CSSRule
	};
	///CommonJS


	/**
	 * @constructor
	 * @see http://www.w3.org/TR/css3-animations/#DOM-CSSKeyframesRule
	 */
	CSSOM.CSSKeyframesRule = function CSSKeyframesRule() {
		CSSOM.CSSRule.call(this);
		this.name = '';
		this.cssRules = [];
	};

	CSSOM.CSSKeyframesRule.prototype = new CSSOM.CSSRule;
	CSSOM.CSSKeyframesRule.prototype.constructor = CSSOM.CSSKeyframesRule;
	CSSOM.CSSKeyframesRule.prototype.type = 8;
	//FIXME
	//CSSOM.CSSKeyframesRule.prototype.insertRule = CSSStyleSheet.prototype.insertRule;
	//CSSOM.CSSKeyframesRule.prototype.deleteRule = CSSStyleSheet.prototype.deleteRule;

	// http://www.opensource.apple.com/source/WebCore/WebCore-955.66.1/css/WebKitCSSKeyframesRule.cpp
	Object.defineProperty(CSSOM.CSSKeyframesRule.prototype, "cssText", {
	  get: function() {
	    var cssTexts = [];
	    for (var i=0, length=this.cssRules.length; i < length; i++) {
	      cssTexts.push("  " + this.cssRules[i].cssText);
	    }
	    return "@" + (this._vendorPrefix || '') + "keyframes " + this.name + " { \n" + cssTexts.join("\n") + "\n}";
	  }
	});


	//.CommonJS
	exports.CSSKeyframesRule = CSSOM.CSSKeyframesRule;
	///CommonJS


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {
		CSSValue: __webpack_require__(38).CSSValue
	};
	///CommonJS


	/**
	 * @constructor
	 * @see http://msdn.microsoft.com/en-us/library/ms537634(v=vs.85).aspx
	 *
	 */
	CSSOM.CSSValueExpression = function CSSValueExpression(token, idx) {
		this._token = token;
		this._idx = idx;
	};

	CSSOM.CSSValueExpression.prototype = new CSSOM.CSSValue;
	CSSOM.CSSValueExpression.prototype.constructor = CSSOM.CSSValueExpression;

	/**
	 * parse css expression() value
	 *
	 * @return {Object}
	 *				 - error:
	 *				 or
	 *				 - idx:
	 *				 - expression:
	 *
	 * Example:
	 *
	 * .selector {
	 *		zoom: expression(documentElement.clientWidth > 1000 ? '1000px' : 'auto');
	 * }
	 */
	CSSOM.CSSValueExpression.prototype.parse = function() {
		var token = this._token,
				idx = this._idx;

		var character = '',
				expression = '',
				error = '',
				info,
				paren = [];


		for (; ; ++idx) {
			character = token.charAt(idx);

			// end of token
			if (character == '') {
				error = 'css expression error: unfinished expression!';
				break;
			}

			switch(character) {
				case '(':
					paren.push(character);
					expression += character;
					break;

				case ')':
					paren.pop(character);
					expression += character;
					break;

				case '/':
					if (info = this._parseJSComment(token, idx)) { // comment?
						if (info.error) {
							error = 'css expression error: unfinished comment in expression!';
						} else {
							idx = info.idx;
							// ignore the comment
						}
					} else if (info = this._parseJSRexExp(token, idx)) { // regexp
						idx = info.idx;
						expression += info.text;
					} else { // other
						expression += character;
					}
					break;

				case "'":
				case '"':
					info = this._parseJSString(token, idx, character);
					if (info) { // string
						idx = info.idx;
						expression += info.text;
					} else {
						expression += character;
					}
					break;

				default:
					expression += character;
					break;
			}

			if (error) {
				break;
			}

			// end of expression
			if (paren.length == 0) {
				break;
			}
		}

		var ret;
		if (error) {
			ret = {
				error: error
			}
		} else {
			ret = {
				idx: idx,
				expression: expression
			}
		}

		return ret;
	};


	/**
	 *
	 * @return {Object|false}
	 *          - idx:
	 *          - text:
	 *          or
	 *          - error:
	 *          or
	 *          false
	 *
	 */
	CSSOM.CSSValueExpression.prototype._parseJSComment = function(token, idx) {
		var nextChar = token.charAt(idx + 1),
				text;

		if (nextChar == '/' || nextChar == '*') {
			var startIdx = idx,
					endIdx,
					commentEndChar;

			if (nextChar == '/') { // line comment
				commentEndChar = '\n';
			} else if (nextChar == '*') { // block comment
				commentEndChar = '*/';
			}

			endIdx = token.indexOf(commentEndChar, startIdx + 1 + 1);
			if (endIdx !== -1) {
				endIdx = endIdx + commentEndChar.length - 1;
				text = token.substring(idx, endIdx + 1);
				return {
					idx: endIdx,
					text: text
				}
			} else {
				error = 'css expression error: unfinished comment in expression!';
				return {
					error: error
				}
			}
		} else {
			return false;
		}
	};


	/**
	 *
	 * @return {Object|false}
	 *					- idx:
	 *					- text:
	 *					or 
	 *					false
	 *
	 */
	CSSOM.CSSValueExpression.prototype._parseJSString = function(token, idx, sep) {
		var endIdx = this._findMatchedIdx(token, idx, sep),
				text;

		if (endIdx === -1) {
			return false;
		} else {
			text = token.substring(idx, endIdx + sep.length);

			return {
				idx: endIdx,
				text: text
			}
		}
	};


	/**
	 * parse regexp in css expression
	 *
	 * @return {Object|false}
	 *				 - idx:
	 *				 - regExp:
	 *				 or 
	 *				 false
	 */

	/*

	all legal RegExp
	 
	/a/
	(/a/)
	[/a/]
	[12, /a/]

	!/a/

	+/a/
	-/a/
	* /a/
	/ /a/
	%/a/

	===/a/
	!==/a/
	==/a/
	!=/a/
	>/a/
	>=/a/
	</a/
	<=/a/

	&/a/
	|/a/
	^/a/
	~/a/
	<</a/
	>>/a/
	>>>/a/

	&&/a/
	||/a/
	?/a/
	=/a/
	,/a/

			delete /a/
					in /a/
	instanceof /a/
				 new /a/
			typeof /a/
				void /a/

	*/
	CSSOM.CSSValueExpression.prototype._parseJSRexExp = function(token, idx) {
		var before = token.substring(0, idx).replace(/\s+$/, ""),
				legalRegx = [
					/^$/,
					/\($/,
					/\[$/,
					/\!$/,
					/\+$/,
					/\-$/,
					/\*$/,
					/\/\s+/,
					/\%$/,
					/\=$/,
					/\>$/,
					/\<$/,
					/\&$/,
					/\|$/,
					/\^$/,
					/\~$/,
					/\?$/,
					/\,$/,
					/delete$/,
					/in$/,
					/instanceof$/,
					/new$/,
					/typeof$/,
					/void$/,
				];

		var isLegal = legalRegx.some(function(reg) {
			return reg.test(before);
		});

		if (!isLegal) {
			return false;
		} else {
			var sep = '/';

			// same logic as string
			return this._parseJSString(token, idx, sep);
		}
	};


	/**
	 *
	 * find next sep(same line) index in `token`
	 *
	 * @return {Number}
	 *
	 */
	CSSOM.CSSValueExpression.prototype._findMatchedIdx = function(token, idx, sep) {
		var startIdx = idx,
				endIdx;

		var NOT_FOUND = -1;

		while(true) {
			endIdx = token.indexOf(sep, startIdx + 1);

			if (endIdx === -1) { // not found
				endIdx = NOT_FOUND;
				break;
			} else {
				var text = token.substring(idx + 1, endIdx),
						matched = text.match(/\\+$/);
				if (!matched || matched[0] % 2 == 0) { // not escaped
					break;
				} else {
					startIdx = endIdx;
				}
			}
		}

		// boundary must be in the same line(js sting or regexp)
		var nextNewLineIdx = token.indexOf('\n', idx + 1);
		if (nextNewLineIdx < endIdx) {
			endIdx = NOT_FOUND;
		}


		return endIdx;
	}




	//.CommonJS
	exports.CSSValueExpression = CSSOM.CSSValueExpression;
	///CommonJS


/***/ },
/* 38 */
/***/ function(module, exports) {

	//.CommonJS
	var CSSOM = {};
	///CommonJS


	/**
	 * @constructor
	 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue
	 *
	 * TODO: add if needed
	 */
	CSSOM.CSSValue = function CSSValue() {
	};

	CSSOM.CSSValue.prototype = {
		constructor: CSSOM.CSSValue,

		// @see: http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue
		set cssText(text) {
			var name = this._getConstructorName();

			throw new Exception('DOMException: property "cssText" of "' + name + '" is readonly!');
		},

		get cssText() {
			var name = this._getConstructorName();

			throw new Exception('getter "cssText" of "' + name + '" is not implemented!');
		},

		_getConstructorName: function() {
			var s = this.constructor.toString(),
					c = s.match(/function\s([^\(]+)/),
					name = c[1];

			return name;
		}
	};


	//.CommonJS
	exports.CSSValue = CSSOM.CSSValue;
	///CommonJS


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {
	    CSSRule: __webpack_require__(30).CSSRule,
	    MatcherList: __webpack_require__(40).MatcherList
	};
	///CommonJS


	/**
	 * @constructor
	 * @see https://developer.mozilla.org/en/CSS/@-moz-document
	 */
	CSSOM.CSSDocumentRule = function CSSDocumentRule() {
	    CSSOM.CSSRule.call(this);
	    this.matcher = new CSSOM.MatcherList;
	    this.cssRules = [];
	};

	CSSOM.CSSDocumentRule.prototype = new CSSOM.CSSRule;
	CSSOM.CSSDocumentRule.prototype.constructor = CSSOM.CSSDocumentRule;
	CSSOM.CSSDocumentRule.prototype.type = 10;
	//FIXME
	//CSSOM.CSSDocumentRule.prototype.insertRule = CSSStyleSheet.prototype.insertRule;
	//CSSOM.CSSDocumentRule.prototype.deleteRule = CSSStyleSheet.prototype.deleteRule;

	Object.defineProperty(CSSOM.CSSDocumentRule.prototype, "cssText", {
	  get: function() {
	    var cssTexts = [];
	    for (var i=0, length=this.cssRules.length; i < length; i++) {
	        cssTexts.push(this.cssRules[i].cssText);
	    }
	    return "@-moz-document " + this.matcher.matcherText + " {" + cssTexts.join("") + "}";
	  }
	});


	//.CommonJS
	exports.CSSDocumentRule = CSSOM.CSSDocumentRule;
	///CommonJS


/***/ },
/* 40 */
/***/ function(module, exports) {

	//.CommonJS
	var CSSOM = {};
	///CommonJS


	/**
	 * @constructor
	 * @see https://developer.mozilla.org/en/CSS/@-moz-document
	 */
	CSSOM.MatcherList = function MatcherList(){
	    this.length = 0;
	};

	CSSOM.MatcherList.prototype = {

	    constructor: CSSOM.MatcherList,

	    /**
	     * @return {string}
	     */
	    get matcherText() {
	        return Array.prototype.join.call(this, ", ");
	    },

	    /**
	     * @param {string} value
	     */
	    set matcherText(value) {
	        // just a temporary solution, actually it may be wrong by just split the value with ',', because a url can include ','.
	        var values = value.split(",");
	        var length = this.length = values.length;
	        for (var i=0; i<length; i++) {
	            this[i] = values[i].trim();
	        }
	    },

	    /**
	     * @param {string} matcher
	     */
	    appendMatcher: function(matcher) {
	        if (Array.prototype.indexOf.call(this, matcher) === -1) {
	            this[this.length] = matcher;
	            this.length++;
	        }
	    },

	    /**
	     * @param {string} matcher
	     */
	    deleteMatcher: function(matcher) {
	        var index = Array.prototype.indexOf.call(this, matcher);
	        if (index !== -1) {
	            Array.prototype.splice.call(this, index, 1);
	        }
	    }

	};


	//.CommonJS
	exports.MatcherList = CSSOM.MatcherList;
	///CommonJS


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	//.CommonJS
	var CSSOM = {
		CSSStyleSheet: __webpack_require__(27).CSSStyleSheet,
		CSSStyleRule: __webpack_require__(29).CSSStyleRule,
		CSSMediaRule: __webpack_require__(33).CSSMediaRule,
		CSSStyleDeclaration: __webpack_require__(25).CSSStyleDeclaration,
		CSSKeyframeRule: __webpack_require__(35).CSSKeyframeRule,
		CSSKeyframesRule: __webpack_require__(36).CSSKeyframesRule
	};
	///CommonJS


	/**
	 * Produces a deep copy of stylesheet — the instance variables of stylesheet are copied recursively.
	 * @param {CSSStyleSheet|CSSOM.CSSStyleSheet} stylesheet
	 * @nosideeffects
	 * @return {CSSOM.CSSStyleSheet}
	 */
	CSSOM.clone = function clone(stylesheet) {

		var cloned = new CSSOM.CSSStyleSheet;

		var rules = stylesheet.cssRules;
		if (!rules) {
			return cloned;
		}

		var RULE_TYPES = {
			1: CSSOM.CSSStyleRule,
			4: CSSOM.CSSMediaRule,
			//3: CSSOM.CSSImportRule,
			//5: CSSOM.CSSFontFaceRule,
			//6: CSSOM.CSSPageRule,
			8: CSSOM.CSSKeyframesRule,
			9: CSSOM.CSSKeyframeRule
		};

		for (var i=0, rulesLength=rules.length; i < rulesLength; i++) {
			var rule = rules[i];
			var ruleClone = cloned.cssRules[i] = new RULE_TYPES[rule.type];

			var style = rule.style;
			if (style) {
				var styleClone = ruleClone.style = new CSSOM.CSSStyleDeclaration;
				for (var j=0, styleLength=style.length; j < styleLength; j++) {
					var name = styleClone[j] = style[j];
					styleClone[name] = style[name];
					styleClone._importants[name] = style.getPropertyPriority(name);
				}
				styleClone.length = style.length;
			}

			if (rule.hasOwnProperty('keyText')) {
				ruleClone.keyText = rule.keyText;
			}

			if (rule.hasOwnProperty('selectorText')) {
				ruleClone.selectorText = rule.selectorText;
			}

			if (rule.hasOwnProperty('mediaText')) {
				ruleClone.mediaText = rule.mediaText;
			}

			if (rule.hasOwnProperty('cssRules')) {
				ruleClone.cssRules = clone(rule).cssRules;
			}
		}

		return cloned;

	};

	//.CommonJS
	exports.clone = CSSOM.clone;
	///CommonJS


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/*********************************************************************
	 * This is a fork from the CSS Style Declaration part of
	 * https://github.com/NV/CSSOM
	 ********************************************************************/
	"use strict";
	var CSSOM = __webpack_require__(24);
	var fs = __webpack_require__(11);
	var path = __webpack_require__(12);

	var camelToDashed = __webpack_require__(43).camelToDashed;
	var dashedToCamelCase = __webpack_require__(43).dashedToCamelCase;

	/**
	 * @constructor
	 * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration
	 */
	var CSSStyleDeclaration = function CSSStyleDeclaration(onChangeCallback) {
	    this._values = {};
	    this._importants = {};
	    this._length = 0;
	    this._onChange = onChangeCallback || function () { return; };
	};
	CSSStyleDeclaration.prototype = {
	    constructor: CSSStyleDeclaration,

	    /**
	     *
	     * @param {string} name
	     * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyValue
	     * @return {string} the value of the property if it has been explicitly set for this declaration block.
	     * Returns the empty string if the property has not been set.
	     */
	    getPropertyValue: function (name) {
	        if (!this._values.hasOwnProperty(name)) {
	            return "";
	        }
	        return this._values[name].toString();
	    },

	    /**
	     *
	     * @param {string} name
	     * @param {string} value
	     * @param {string} [priority=null] "important" or null
	     * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-setProperty
	     */
	    setProperty: function (name, value, priority) {
	        if (value === undefined) {
	            return;
	        }
	        if (value === null || value === '') {
	            this.removeProperty(name);
	            return;
	        }
	        var camel_case = dashedToCamelCase(name);
	        this[camel_case] = value;
	        this._importants[name] = priority;
	    },
	    _setProperty: function (name, value, priority) {
	        if (value === undefined) {
	            return;
	        }
	        if (value === null || value === '') {
	            this.removeProperty(name);
	            return;
	        }
	        if (this._values[name]) {
	            // Property already exist. Overwrite it.
	            var index = Array.prototype.indexOf.call(this, name);
	            if (index < 0) {
	                this[this._length] = name;
	                this._length++;
	            }
	        } else {
	            // New property.
	            this[this._length] = name;
	            this._length++;
	        }
	        this._values[name] = value;
	        this._importants[name] = priority;
	        this._onChange(this.cssText);
	    },

	    /**
	     *
	     * @param {string} name
	     * @see http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-removeProperty
	     * @return {string} the value of the property if it has been explicitly set for this declaration block.
	     * Returns the empty string if the property has not been set or the property name does not correspond to a known CSS property.
	     */
	    removeProperty: function (name) {
	        if (!this._values.hasOwnProperty(name)) {
	            return "";
	        }

	        var prevValue = this._values[name];
	        delete this._values[name];

	        var index = Array.prototype.indexOf.call(this, name);
	        if (index < 0) {
	            return prevValue;
	        }

	        // That's what WebKit and Opera do
	        Array.prototype.splice.call(this, index, 1);

	        // That's what Firefox does
	        //this[index] = ""

	        this._onChange(this.cssText);
	        return prevValue;
	    },


	    /**
	     *
	     * @param {String} name
	     */
	    getPropertyPriority: function (name) {
	        return this._importants[name] || "";
	    },


	    getPropertyCSSValue: function () {
	        //FIXME
	        return;
	    },

	    /**
	     *   element.style.overflow = "auto"
	     *   element.style.getPropertyShorthand("overflow-x")
	     *   -> "overflow"
	     */
	    getPropertyShorthand: function () {
	        //FIXME
	        return;
	    },

	    isPropertyImplicit: function () {
	        //FIXME
	        return;
	    },

	    /**
	     *   http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-item
	     */
	    item: function (index) {
	        index = parseInt(index, 10);
	        if (index < 0 || index >= this._length) {
	            return '';
	        }
	        return this[index];
	    }
	};

	Object.defineProperties(CSSStyleDeclaration.prototype, {
	    cssText: {
	        get: function () {
	            var properties = [];
	            var i;
	            var name;
	            var value;
	            var priority;
	            for (i = 0; i < this._length; i++) {
	                name = this[i];
	                value = this.getPropertyValue(name);
	                priority = this.getPropertyPriority(name);
	                if (priority !== '') {
	                    priority = " !" + priority;
	                }
	                properties.push([name, ': ', value, priority, ';'].join(''));
	            }
	            return properties.join(' ');
	        },
	        set: function (value) {
	            var i;
	            this._values = {};
	            Array.prototype.splice.call(this, 0, this._length);
	            this._importants = {};
	            var dummyRule;
	            try {
	                dummyRule = CSSOM.parse('#bogus{' + value + '}').cssRules[0].style;
	            } catch (err) {
	                // malformed css, just return
	                return;
	            }
	            var rule_length = dummyRule.length;
	            var name;
	            for (i = 0; i < rule_length; ++i) {
	                name = dummyRule[i];
	                this.setProperty(dummyRule[i], dummyRule.getPropertyValue(name), dummyRule.getPropertyPriority(name));
	            }
	            this._onChange(this.cssText);
	        },
	        enumerable: true,
	        configurable: true
	    },
	    parentRule: {
	        get: function () { return null; },
	        enumerable: true,
	        configurable: true
	    },
	    length: {
	        get: function () { return this._length; },
	        /**
	         * This deletes indices if the new length is less then the current
	         * length. If the new length is more, it does nothing, the new indices
	         * will be undefined until set.
	         **/
	        set: function (value) {
	            var i;
	            for (i = value; i < this._length; i++) {
	                delete this[i];
	            }
	            this._length = value;
	        },
	        enumerable: true,
	        configurable: true
	    },
	    'float': {
	        get: function () { return this.cssFloat; },
	        set: function (value) {
	            this.cssFloat = value;
	        },
	        enumerable: true,
	        configurable: true
	    }
	});

	__webpack_require__(44)(CSSStyleDeclaration.prototype);

	exports.CSSStyleDeclaration = CSSStyleDeclaration;


/***/ },
/* 43 */
/***/ function(module, exports) {

	/*********************************************************************
	 * These are commonly used parsers for CSS Values they take a string *
	 * to parse and return a string after it's been converted, if needed *
	 ********************************************************************/
	'use strict';

	exports.TYPES = {
	    INTEGER: 1,
	    NUMBER: 2,
	    LENGTH: 3,
	    PERCENT: 4,
	    URL: 5,
	    COLOR: 6,
	    STRING: 7,
	    ANGLE: 8,
	    KEYWORD: 9,
	    NULL_OR_EMPTY_STR: 10
	};

	/*jslint regexp: true*/
	// rough regular expressions
	var integerRegEx = /^[\-+]?[0-9]+$/;
	var numberRegEx = /^[\-+]?[0-9]*\.[0-9]+$/;
	var lengthRegEx = /^(0|[\-+]?[0-9]*\.?[0-9]+(in|cm|em|mm|pt|pc|px))$/;
	var percentRegEx = /^[\-+]?[0-9]*\.?[0-9]+%$/;
	var urlRegEx = /^url\(\s*([^\)]*)\s*\)$/;
	var stringRegEx = /^("[^"]*"|'[^']*')$/;
	var colorRegEx1 = /^#[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]([0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])?$/;
	var colorRegEx2 = /^rgb\(([^\)]*)\)$/;
	var colorRegEx3 = /^rgba\(([^\)]*)\)$/;
	var angleRegEx = /^([\-+]?[0-9]*\.?[0-9]+)(deg|grad|rad)$/;
	/*jslint regexp: false*/

	// This will return one of the above types based on the passed in string
	exports.valueType = function valueType(val) {
	    if (val === '' || val === null) {
	        return exports.TYPES.NULL_OR_EMPTY_STR;
	    }
	    if (typeof val === 'number') {
	        val = val.toString();
	    }

	    if (typeof val !== 'string') {
	        return undefined;
	    }

	    if (integerRegEx.test(val)) {
	        return exports.TYPES.INTEGER;
	    }
	    if (numberRegEx.test(val)) {
	        return exports.TYPES.NUMBER;
	    }
	    if (lengthRegEx.test(val)) {
	        return exports.TYPES.LENGTH;
	    }
	    if (percentRegEx.test(val)) {
	        return exports.TYPES.PERCENT;
	    }
	    if (urlRegEx.test(val)) {
	        return exports.TYPES.URL;
	    }
	    if (stringRegEx.test(val)) {
	        return exports.TYPES.STRING;
	    }
	    if (angleRegEx.test(val)) {
	        return exports.TYPES.ANGLE;
	    }
	    if (colorRegEx1.test(val)) {
	        return exports.TYPES.COLOR;
	    }
	    var res = colorRegEx2.exec(val);
	    var parts;
	    if (res !== null) {
	        parts = res[1].split(/\s*,\s*/);
	        if (parts.length !== 3) {
	            return undefined;
	        }
	        if (parts.every(percentRegEx.test.bind(percentRegEx)) || parts.every(integerRegEx.test.bind(integerRegEx))) {
	            return exports.TYPES.COLOR;
	        }
	        return undefined;
	    }
	    res = colorRegEx3.exec(val);
	    if (res !== null) {
	        parts = res[1].split(/\s*,\s*/);
	        if (parts.length !== 4) {
	            return undefined;
	        }
	        if (parts.slice(0, 3).every(percentRegEx.test.bind(percentRegEx)) || parts.every(integerRegEx.test.bind(integerRegEx))) {
	            if (numberRegEx.test(parts[3])) {
	                return exports.TYPES.COLOR;
	            }
	        }
	        return undefined;
	    }

	    // could still be a color, one of the standard keyword colors
	    val = val.toLowerCase();
	    switch (val) {
	    case 'maroon':
	    case 'red':
	    case 'orange':
	    case 'yellow':
	    case 'olive':
	    case 'purple':
	    case 'fuchsia':
	    case 'white':
	    case 'lime':
	    case 'green':
	    case 'navy':
	    case 'blue':
	    case 'aqua':
	    case 'teal':
	    case 'black':
	    case 'silver':
	    case 'gray':
	        // the following are deprecated in CSS3
	    case 'activeborder':
	    case 'activecaption':
	    case 'appworkspace':
	    case 'background':
	    case 'buttonface':
	    case 'buttonhighlight':
	    case 'buttonshadow':
	    case 'buttontext':
	    case 'captiontext':
	    case 'graytext':
	    case 'highlight':
	    case 'highlighttext':
	    case 'inactiveborder':
	    case 'inactivecaption':
	    case 'inactivecaptiontext':
	    case 'infobackground':
	    case 'infotext':
	    case 'menu':
	    case 'menutext':
	    case 'scrollbar':
	    case 'threeddarkshadow':
	    case 'threedface':
	    case 'threedhighlight':
	    case 'threedlightshadow':
	    case 'threedshadow':
	    case 'window':
	    case 'windowframe':
	    case 'windowtext':
	        return exports.TYPES.COLOR;
	    default:
	        return exports.TYPES.KEYWORD;
	    }
	};

	exports.parseInteger = function parseInteger(val) {
	    var type = exports.valueType(val);
	    if (type === exports.TYPES.NULL_OR_EMPTY_STR) {
	        return val;
	    }
	    if (type !== exports.TYPES.INTEGER) {
	        return undefined;
	    }
	    return String(parseInt(val, 10));
	};

	exports.parseNumber = function parseNumber(val) {
	    var type = exports.valueType(val);
	    if (type === exports.TYPES.NULL_OR_EMPTY_STR) {
	        return val;
	    }
	    if (type !== exports.TYPES.NUMBER && type !== exports.TYPES.INTEGER) {
	        return undefined;
	    }
	    return String(parseFloat(val));
	};

	exports.parseLength = function parseLength(val) {
	    if (val === 0 || val === '0') {
	        return '0px';
	    }
	    var type = exports.valueType(val);
	    if (type === exports.TYPES.NULL_OR_EMPTY_STR) {
	        return val;
	    }
	    if (type !== exports.TYPES.LENGTH) {
	        return undefined;
	    }
	    return val;
	};

	exports.parsePercent = function parsePercent(val) {
	    if (val === 0 || val === '0') {
	        return '0%';
	    }
	    var type = exports.valueType(val);
	    if (type === exports.TYPES.NULL_OR_EMPTY_STR) {
	        return val;
	    }
	    if (type !== exports.TYPES.PERCENT) {
	        return undefined;
	    }
	    return val;
	};

	// either a length or a percent
	exports.parseMeasurement = function parseMeasurement(val) {
	    var length = exports.parseLength(val);
	    if (length !== undefined) {
	        return length;
	    }
	    return exports.parsePercent(val);
	};

	exports.parseUrl = function parseUrl(val) {
	    var type = exports.valueType(val);
	    if (type === exports.TYPES.NULL_OR_EMPTY_STR) {
	        return val;
	    }
	    var res = urlRegEx.exec(val);
	    // does it match the regex?
	    if (!res) {
	        return undefined;
	    }
	    var str = res[1];
	    // if it starts with single or double quotes, does it end with the same?
	    if ((str[0] === '"' || str[0] === "'") && str[0] !== str[str.length - 1]) {
	        return undefined;
	    }
	    if (str[0] === '"' || str[0] === "'") {
	        str = str.substr(1, str.length - 2);
	    }

	    var i;
	    for (i = 0; i < str.length; i++) {
	        switch (str[i]) {
	        case '(':
	        case ')':
	        case ' ':
	        case '\t':
	        case '\n':
	        case "'":
	        case '"':
	            return undefined;
	        case '\\':
	            i++;
	            break;
	        }
	    }

	    return 'url(' + str + ')';
	};

	exports.parseString = function parseString(val) {
	    var type = exports.valueType(val);
	    if (type === exports.TYPES.NULL_OR_EMPTY_STR) {
	        return val;
	    }
	    if (type !== exports.TYPES.STRING) {
	        return undefined;
	    }
	    var i;
	    for (i = 1; i < val.length - 1; i++) {
	        switch (val[i]) {
	        case val[0]:
	            return undefined;
	        case '\\':
	            i++;
	            while (i < val.length - 1 && /[0-9A-Fa-f]/.test(val[i])) {
	                i++;
	            }
	            break;
	        }
	    }
	    if (i >= val.length) {
	        return undefined;
	    }
	    return val;
	};

	exports.parseColor = function parseColor(val) {
	    var type = exports.valueType(val);
	    if (type === exports.TYPES.NULL_OR_EMPTY_STR) {
	        return val;
	    }
	    var red, green, blue, alpha = 1;
	    var parts;
	    var res = colorRegEx1.exec(val);
	    // is it #aaa or #ababab
	    if (res) {
	        var hex = val.substr(1);
	        if (hex.length === 3) {
	            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];
	        }
	        red = parseInt(hex.substr(0, 2), 16);
	        green = parseInt(hex.substr(2, 2), 16);
	        blue = parseInt(hex.substr(4, 2), 16);
	        return 'rgb(' + red + ', ' + green + ', ' + blue + ')';
	    }

	    res = colorRegEx2.exec(val);
	    if (res) {
	        parts = res[1].split(/\s*,\s*/);
	        if (parts.length !== 3) {
	            return undefined;
	        }
	        if (parts.every(percentRegEx.test.bind(percentRegEx))) {
	            red = Math.floor(parseFloat(parts[0].slice(0, -1)) * 255 / 100);
	            green = Math.floor(parseFloat(parts[1].slice(0, -1)) * 255 / 100);
	            blue = Math.floor(parseFloat(parts[2].slice(0, -1)) * 255 / 100);
	        } else if (parts.every(integerRegEx.test.bind(integerRegEx))) {
	            red = parseInt(parts[0], 10);
	            green = parseInt(parts[1], 10);
	            blue = parseInt(parts[2], 10);
	        } else {
	            return undefined;
	        }
	        red = Math.min(255, Math.max(0, red));
	        green = Math.min(255, Math.max(0, green));
	        blue = Math.min(255, Math.max(0, blue));
	        return 'rgb(' + red + ', ' + green + ', ' + blue + ')';
	    }

	    res = colorRegEx3.exec(val);
	    if (res) {
	        parts = res[1].split(/\s*,\s*/);
	        if (parts.length !== 4) {
	            return undefined;
	        }
	        if (parts.slice(0, 3).every(percentRegEx.test.bind(percentRegEx))) {
	            red = Math.floor(parseFloat(parts[0].slice(0, -1)) * 255 / 100);
	            green = Math.floor(parseFloat(parts[1].slice(0, -1)) * 255 / 100);
	            blue = Math.floor(parseFloat(parts[2].slice(0, -1)) * 255 / 100);
	            alpha = parseFloat(parts[3]);
	        } else if (parts.slice(0, 3).every(integerRegEx.test.bind(integerRegEx))) {
	            red = parseInt(parts[0], 10);
	            green = parseInt(parts[1], 10);
	            blue = parseInt(parts[2], 10);
	            alpha = parseFloat(parts[3]);
	        } else {
	            return undefined;
	        }
	        if (isNaN(alpha)) {
	            alpha = 1;
	        }
	        red = Math.min(255, Math.max(0, red));
	        green = Math.min(255, Math.max(0, green));
	        blue = Math.min(255, Math.max(0, blue));
	        alpha = Math.min(1, Math.max(0, alpha));
	        if (alpha === 1) {
	            return 'rgb(' + red + ', ' + green + ', ' + blue + ')';
	        }
	        return 'rgba(' + red + ', ' + green + ', ' + blue + ', ' + alpha + ')';
	    }

	    if (type === exports.TYPES.COLOR) {
	        return val;
	    }
	    return undefined;
	};

	exports.parseAngle = function parseAngle(val) {
	    var type = exports.valueType(val);
	    if (type === exports.TYPES.NULL_OR_EMPTY_STR) {
	        return val;
	    }
	    if (type !== exports.TYPES.ANGLE) {
	        return undefined;
	    }
	    var res = angleRegEx.exec(val);
	    var flt = parseFloat(res[1]);
	    if (res[2] === 'rad') {
	        flt *= 180 / Math.PI;
	    } else if (res[2] === 'grad') {
	        flt *= 360 / 400;
	    }

	    while (flt < 0) {
	        flt += 360;
	    }
	    while (flt > 360) {
	        flt -= 360;
	    }
	    return flt + 'deg';
	};

	exports.parseKeyword = function parseKeyword(val, valid_keywords) {
	    var type = exports.valueType(val);
	    if (type === exports.TYPES.NULL_OR_EMPTY_STR) {
	        return val;
	    }
	    if (type !== exports.TYPES.KEYWORD) {
	        return undefined;
	    }
	    val = val.toString().toLowerCase();
	    var i;
	    for (i = 0; i < valid_keywords.length; i++) {
	        if (valid_keywords[i].toLowerCase() === val) {
	            return valid_keywords[i];
	        }
	    }
	    return undefined;
	};

	// utility to translate from border-width to borderWidth
	var dashedToCamelCase = function (dashed) {
	    var i;
	    var camel = '';
	    var nextCap = false;
	    for (i = 0; i < dashed.length; i++) {
	        if (dashed[i] !== '-') {
	            camel += nextCap ? dashed[i].toUpperCase() : dashed[i];
	            nextCap = false;
	        } else {
	            nextCap = true;
	        }
	    }
	    return camel;
	};
	exports.dashedToCamelCase = dashedToCamelCase;

	var is_space = /\s/;
	var opening_deliminators = ['"', '\'', '('];
	var closing_deliminators = ['"', '\'', ')'];
	// this splits on whitespace, but keeps quoted and parened parts together
	var getParts = function (str) {
	    var deliminator_stack = [];
	    var length = str.length;
	    var i;
	    var parts = [];
	    var current_part = '';
	    var opening_index;
	    var closing_index;
	    for (i = 0; i < length; i++) {
	        opening_index = opening_deliminators.indexOf(str[i]);
	        closing_index = closing_deliminators.indexOf(str[i]);
	        if (is_space.test(str[i])) {
	            if (deliminator_stack.length === 0) {
	                parts.push(current_part);
	                current_part = '';
	            } else {
	                current_part += str[i];
	            }
	        } else {
	            if (str[i] === '\\') {
	                i++;
	                current_part += str[i];
	            } else {
	                current_part += str[i];
	                if (closing_index !== -1 && closing_index === deliminator_stack[deliminator_stack.length - 1]) {
	                    deliminator_stack.pop();
	                } else if (opening_index !== -1) {
	                    deliminator_stack.push(opening_index);
	                }
	            }
	        }
	    }
	    if (current_part !== '') {
	        parts.push(current_part);
	    }
	    return parts;
	};

	/*
	 * this either returns undefined meaning that it isn't valid
	 * or returns an object where the keys are dashed short
	 * hand properties and the values are the values to set
	 * on them
	 */
	exports.shorthandParser = function parse(v, shorthand_for) {
	    var obj = {};
	    var type = exports.valueType(v);
	    if (type === exports.TYPES.NULL_OR_EMPTY_STR) {
	        Object.keys(shorthand_for).forEach(function (property) {
	            obj[property] = v;
	        });
	        return obj;
	    }

	    if (typeof v === 'number') {
	        v = v.toString();
	    }

	    if (typeof v !== 'string') {
	        return undefined;
	    }

	    if (v.toLowerCase() === 'inherit') {
	        return {};
	    }
	    var parts = getParts(v);
	    var valid = true;
	    parts.forEach(function (part) {
	        var part_valid = false;
	        Object.keys(shorthand_for).forEach(function (property) {
	            if (shorthand_for[property].isValid(part)) {
	                part_valid = true;
	                obj[property] = part;
	            }
	        });
	        valid = valid && part_valid;
	    });
	    if (!valid) {
	        return undefined;
	    }
	    return obj;
	};

	exports.shorthandSetter = function (property, shorthand_for) {
	    return function (v) {
	        var obj = exports.shorthandParser(v, shorthand_for);
	        if (obj === undefined) {
	            return;
	        }
	        //console.log('shorthandSetter for:', property, 'obj:', obj);
	        Object.keys(obj).forEach(function (subprop) {
	            // in case subprop is an implicit property, this will clear
	            // *its* subpropertiesX
	            var camel = dashedToCamelCase(subprop);
	            this[camel] = obj[subprop];
	            // in case it gets translated into something else (0 -> 0px)
	            obj[subprop] = this[camel];
	            this.removeProperty(subprop);
	            this._values[subprop] = obj[subprop];
	        }, this);
	        Object.keys(shorthand_for).forEach(function (subprop) {
	            if (!obj.hasOwnProperty(subprop)) {
	                this.removeProperty(subprop);
	                delete this._values[subprop];
	            }
	        }, this);
	        // in case the value is something like 'none' that removes all values,
	        // check that the generated one is not empty, first remove the property
	        // if it already exists, then call the shorthandGetter, if it's an empty
	        // string, don't set the property
	        this.removeProperty(property);
	        var calculated = exports.shorthandGetter(property, shorthand_for).call(this);
	        if (calculated !== '') {
	            this._setProperty(property, calculated);
	        }
	    };
	};

	exports.shorthandGetter = function (property, shorthand_for) {
	    return function () {
	        if (this._values[property] !== undefined) {
	            return this.getPropertyValue(property);
	        }
	        return Object.keys(shorthand_for).map(function (subprop) {
	            return this.getPropertyValue(subprop);
	        }, this).filter(function (value) {
	            return value !== '';
	        }).join(' ');
	    };
	};

	// isValid(){1,4} | inherit
	// if one, it applies to all
	// if two, the first applies to the top and bottom, and the second to left and right
	// if three, the first applies to the top, the second to left and right, the third bottom
	// if four, top, right, bottom, left
	exports.implicitSetter = function (property_before, property_after, isValid, parser) {
	    property_after = property_after || '';
	    if (property_after !== '') {
	        property_after = '-' + property_after;
	    }

	    return function (v) {
	        if (typeof v === 'number') {
	            v = v.toString();
	        }
	        if (typeof v !== 'string') {
	            return undefined;
	        }
	        var parts;
	        if (v.toLowerCase() === 'inherit' || v === '') {
	            parts = [v];
	        } else {
	            parts = getParts(v);
	        }
	        if (parts.length < 1 || parts.length > 4) {
	            return undefined;
	        }

	        if (!parts.every(isValid)) {
	            return undefined;
	        }

	        this._setProperty(property_before + property_after, parts.map(function (part) { return parser(part); }).join(' '));

	        this.removeProperty(property_before + '-top' + property_after);
	        this.removeProperty(property_before + '-right' + property_after);
	        this.removeProperty(property_before + '-bottom' + property_after);
	        this.removeProperty(property_before + '-left' + property_after);
	        switch (parts.length) {
	        case 1:
	            this._values[property_before + '-top' + property_after] = parser(parts[0]);
	            this._values[property_before + '-right' + property_after] = parser(parts[0]);
	            this._values[property_before + '-bottom' + property_after] = parser(parts[0]);
	            this._values[property_before + '-left' + property_after] = parser(parts[0]);
	            return v;
	        case 2:
	            this._values[property_before + '-top' + property_after] = parser(parts[0]);
	            this._values[property_before + '-right' + property_after] = parser(parts[1]);
	            this._values[property_before + '-bottom' + property_after] = parser(parts[0]);
	            this._values[property_before + '-left' + property_after] = parser(parts[1]);
	            return v;
	        case 3:
	            this._values[property_before + '-top' + property_after] = parser(parts[0]);
	            this._values[property_before + '-right' + property_after] = parser(parts[1]);
	            this._values[property_before + '-bottom' + property_after] = parser(parts[2]);
	            this._values[property_before + '-left' + property_after] = parser(parts[1]);
	            return v;
	        case 4:
	            this._values[property_before + '-top' + property_after] = parser(parts[0]);
	            this._values[property_before + '-right' + property_after] = parser(parts[1]);
	            this._values[property_before + '-bottom' + property_after] = parser(parts[2]);
	            this._values[property_before + '-left' + property_after] = parser(parts[3]);
	            return v;
	        }
	    };
	};

	var camel_to_dashed = /[A-Z]/g;
	/*jslint regexp: true*/
	var first_segment = /^\([^\-]\)-/;
	/*jslint regexp: false*/
	var vendor_prefixes = ['o', 'moz', 'ms', 'webkit'];
	exports.camelToDashed = function (camel_case) {
	    var match;
	    var dashed = camel_case.replace(camel_to_dashed, '-$&').toLowerCase();
	    match = dashed.match(first_segment);
	    if (match && vendor_prefixes.indexOf(match[1]) !== -1) {
	        dashed = '-' + dashed;
	    }
	    return dashed;
	};


/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	// autogenerated

	/*
	 *
	 * http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties
	 */

	module.exports = function (prototype) {
	    Object.defineProperty(prototype, 'alignmentBaseline', {
	        get: function () {
	            var definition = __webpack_require__(45).definition;
	            Object.defineProperty(prototype, 'alignmentBaseline', definition);
	            return this.alignmentBaseline;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(45).definition;
	            Object.defineProperty(prototype, 'alignmentBaseline', definition);
	            this.alignmentBaseline = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'alignment-baseline', {
	        get: function () {
	            var definition = __webpack_require__(45).definition;
	            Object.defineProperty(prototype, 'alignmentBaseline', definition);
	            return this.alignmentBaseline;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(45).definition;
	            Object.defineProperty(prototype, 'alignmentBaseline', definition);
	            this.alignmentBaseline = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'azimuth', {
	        get: function () {
	            var definition = __webpack_require__(46).definition;
	            Object.defineProperty(prototype, 'azimuth', definition);
	            return this.azimuth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(46).definition;
	            Object.defineProperty(prototype, 'azimuth', definition);
	            this.azimuth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background', {
	        get: function () {
	            var definition = __webpack_require__(47).definition;
	            Object.defineProperty(prototype, 'background', definition);
	            return this.background;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(47).definition;
	            Object.defineProperty(prototype, 'background', definition);
	            this.background = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundAttachment', {
	        get: function () {
	            var definition = __webpack_require__(51).definition;
	            Object.defineProperty(prototype, 'backgroundAttachment', definition);
	            return this.backgroundAttachment;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(51).definition;
	            Object.defineProperty(prototype, 'backgroundAttachment', definition);
	            this.backgroundAttachment = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-attachment', {
	        get: function () {
	            var definition = __webpack_require__(51).definition;
	            Object.defineProperty(prototype, 'backgroundAttachment', definition);
	            return this.backgroundAttachment;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(51).definition;
	            Object.defineProperty(prototype, 'backgroundAttachment', definition);
	            this.backgroundAttachment = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundClip', {
	        get: function () {
	            var definition = __webpack_require__(53).definition;
	            Object.defineProperty(prototype, 'backgroundClip', definition);
	            return this.backgroundClip;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(53).definition;
	            Object.defineProperty(prototype, 'backgroundClip', definition);
	            this.backgroundClip = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-clip', {
	        get: function () {
	            var definition = __webpack_require__(53).definition;
	            Object.defineProperty(prototype, 'backgroundClip', definition);
	            return this.backgroundClip;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(53).definition;
	            Object.defineProperty(prototype, 'backgroundClip', definition);
	            this.backgroundClip = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundColor', {
	        get: function () {
	            var definition = __webpack_require__(48).definition;
	            Object.defineProperty(prototype, 'backgroundColor', definition);
	            return this.backgroundColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(48).definition;
	            Object.defineProperty(prototype, 'backgroundColor', definition);
	            this.backgroundColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-color', {
	        get: function () {
	            var definition = __webpack_require__(48).definition;
	            Object.defineProperty(prototype, 'backgroundColor', definition);
	            return this.backgroundColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(48).definition;
	            Object.defineProperty(prototype, 'backgroundColor', definition);
	            this.backgroundColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundImage', {
	        get: function () {
	            var definition = __webpack_require__(49).definition;
	            Object.defineProperty(prototype, 'backgroundImage', definition);
	            return this.backgroundImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(49).definition;
	            Object.defineProperty(prototype, 'backgroundImage', definition);
	            this.backgroundImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-image', {
	        get: function () {
	            var definition = __webpack_require__(49).definition;
	            Object.defineProperty(prototype, 'backgroundImage', definition);
	            return this.backgroundImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(49).definition;
	            Object.defineProperty(prototype, 'backgroundImage', definition);
	            this.backgroundImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundOrigin', {
	        get: function () {
	            var definition = __webpack_require__(54).definition;
	            Object.defineProperty(prototype, 'backgroundOrigin', definition);
	            return this.backgroundOrigin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(54).definition;
	            Object.defineProperty(prototype, 'backgroundOrigin', definition);
	            this.backgroundOrigin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-origin', {
	        get: function () {
	            var definition = __webpack_require__(54).definition;
	            Object.defineProperty(prototype, 'backgroundOrigin', definition);
	            return this.backgroundOrigin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(54).definition;
	            Object.defineProperty(prototype, 'backgroundOrigin', definition);
	            this.backgroundOrigin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundPosition', {
	        get: function () {
	            var definition = __webpack_require__(52).definition;
	            Object.defineProperty(prototype, 'backgroundPosition', definition);
	            return this.backgroundPosition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(52).definition;
	            Object.defineProperty(prototype, 'backgroundPosition', definition);
	            this.backgroundPosition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-position', {
	        get: function () {
	            var definition = __webpack_require__(52).definition;
	            Object.defineProperty(prototype, 'backgroundPosition', definition);
	            return this.backgroundPosition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(52).definition;
	            Object.defineProperty(prototype, 'backgroundPosition', definition);
	            this.backgroundPosition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundPositionX', {
	        get: function () {
	            var definition = __webpack_require__(55).definition;
	            Object.defineProperty(prototype, 'backgroundPositionX', definition);
	            return this.backgroundPositionX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(55).definition;
	            Object.defineProperty(prototype, 'backgroundPositionX', definition);
	            this.backgroundPositionX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-position-x', {
	        get: function () {
	            var definition = __webpack_require__(55).definition;
	            Object.defineProperty(prototype, 'backgroundPositionX', definition);
	            return this.backgroundPositionX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(55).definition;
	            Object.defineProperty(prototype, 'backgroundPositionX', definition);
	            this.backgroundPositionX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundPositionY', {
	        get: function () {
	            var definition = __webpack_require__(56).definition;
	            Object.defineProperty(prototype, 'backgroundPositionY', definition);
	            return this.backgroundPositionY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(56).definition;
	            Object.defineProperty(prototype, 'backgroundPositionY', definition);
	            this.backgroundPositionY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-position-y', {
	        get: function () {
	            var definition = __webpack_require__(56).definition;
	            Object.defineProperty(prototype, 'backgroundPositionY', definition);
	            return this.backgroundPositionY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(56).definition;
	            Object.defineProperty(prototype, 'backgroundPositionY', definition);
	            this.backgroundPositionY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundRepeat', {
	        get: function () {
	            var definition = __webpack_require__(50).definition;
	            Object.defineProperty(prototype, 'backgroundRepeat', definition);
	            return this.backgroundRepeat;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(50).definition;
	            Object.defineProperty(prototype, 'backgroundRepeat', definition);
	            this.backgroundRepeat = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-repeat', {
	        get: function () {
	            var definition = __webpack_require__(50).definition;
	            Object.defineProperty(prototype, 'backgroundRepeat', definition);
	            return this.backgroundRepeat;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(50).definition;
	            Object.defineProperty(prototype, 'backgroundRepeat', definition);
	            this.backgroundRepeat = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundRepeatX', {
	        get: function () {
	            var definition = __webpack_require__(57).definition;
	            Object.defineProperty(prototype, 'backgroundRepeatX', definition);
	            return this.backgroundRepeatX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(57).definition;
	            Object.defineProperty(prototype, 'backgroundRepeatX', definition);
	            this.backgroundRepeatX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-repeat-x', {
	        get: function () {
	            var definition = __webpack_require__(57).definition;
	            Object.defineProperty(prototype, 'backgroundRepeatX', definition);
	            return this.backgroundRepeatX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(57).definition;
	            Object.defineProperty(prototype, 'backgroundRepeatX', definition);
	            this.backgroundRepeatX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundRepeatY', {
	        get: function () {
	            var definition = __webpack_require__(58).definition;
	            Object.defineProperty(prototype, 'backgroundRepeatY', definition);
	            return this.backgroundRepeatY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(58).definition;
	            Object.defineProperty(prototype, 'backgroundRepeatY', definition);
	            this.backgroundRepeatY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-repeat-y', {
	        get: function () {
	            var definition = __webpack_require__(58).definition;
	            Object.defineProperty(prototype, 'backgroundRepeatY', definition);
	            return this.backgroundRepeatY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(58).definition;
	            Object.defineProperty(prototype, 'backgroundRepeatY', definition);
	            this.backgroundRepeatY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'backgroundSize', {
	        get: function () {
	            var definition = __webpack_require__(59).definition;
	            Object.defineProperty(prototype, 'backgroundSize', definition);
	            return this.backgroundSize;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(59).definition;
	            Object.defineProperty(prototype, 'backgroundSize', definition);
	            this.backgroundSize = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'background-size', {
	        get: function () {
	            var definition = __webpack_require__(59).definition;
	            Object.defineProperty(prototype, 'backgroundSize', definition);
	            return this.backgroundSize;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(59).definition;
	            Object.defineProperty(prototype, 'backgroundSize', definition);
	            this.backgroundSize = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'baselineShift', {
	        get: function () {
	            var definition = __webpack_require__(60).definition;
	            Object.defineProperty(prototype, 'baselineShift', definition);
	            return this.baselineShift;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(60).definition;
	            Object.defineProperty(prototype, 'baselineShift', definition);
	            this.baselineShift = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'baseline-shift', {
	        get: function () {
	            var definition = __webpack_require__(60).definition;
	            Object.defineProperty(prototype, 'baselineShift', definition);
	            return this.baselineShift;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(60).definition;
	            Object.defineProperty(prototype, 'baselineShift', definition);
	            this.baselineShift = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border', {
	        get: function () {
	            var definition = __webpack_require__(61).definition;
	            Object.defineProperty(prototype, 'border', definition);
	            return this.border;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(61).definition;
	            Object.defineProperty(prototype, 'border', definition);
	            this.border = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderBottom', {
	        get: function () {
	            var definition = __webpack_require__(65).definition;
	            Object.defineProperty(prototype, 'borderBottom', definition);
	            return this.borderBottom;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(65).definition;
	            Object.defineProperty(prototype, 'borderBottom', definition);
	            this.borderBottom = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-bottom', {
	        get: function () {
	            var definition = __webpack_require__(65).definition;
	            Object.defineProperty(prototype, 'borderBottom', definition);
	            return this.borderBottom;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(65).definition;
	            Object.defineProperty(prototype, 'borderBottom', definition);
	            this.borderBottom = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderBottomColor', {
	        get: function () {
	            var definition = __webpack_require__(68).definition;
	            Object.defineProperty(prototype, 'borderBottomColor', definition);
	            return this.borderBottomColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(68).definition;
	            Object.defineProperty(prototype, 'borderBottomColor', definition);
	            this.borderBottomColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-bottom-color', {
	        get: function () {
	            var definition = __webpack_require__(68).definition;
	            Object.defineProperty(prototype, 'borderBottomColor', definition);
	            return this.borderBottomColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(68).definition;
	            Object.defineProperty(prototype, 'borderBottomColor', definition);
	            this.borderBottomColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderBottomLeftRadius', {
	        get: function () {
	            var definition = __webpack_require__(69).definition;
	            Object.defineProperty(prototype, 'borderBottomLeftRadius', definition);
	            return this.borderBottomLeftRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(69).definition;
	            Object.defineProperty(prototype, 'borderBottomLeftRadius', definition);
	            this.borderBottomLeftRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-bottom-left-radius', {
	        get: function () {
	            var definition = __webpack_require__(69).definition;
	            Object.defineProperty(prototype, 'borderBottomLeftRadius', definition);
	            return this.borderBottomLeftRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(69).definition;
	            Object.defineProperty(prototype, 'borderBottomLeftRadius', definition);
	            this.borderBottomLeftRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderBottomRightRadius', {
	        get: function () {
	            var definition = __webpack_require__(70).definition;
	            Object.defineProperty(prototype, 'borderBottomRightRadius', definition);
	            return this.borderBottomRightRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(70).definition;
	            Object.defineProperty(prototype, 'borderBottomRightRadius', definition);
	            this.borderBottomRightRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-bottom-right-radius', {
	        get: function () {
	            var definition = __webpack_require__(70).definition;
	            Object.defineProperty(prototype, 'borderBottomRightRadius', definition);
	            return this.borderBottomRightRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(70).definition;
	            Object.defineProperty(prototype, 'borderBottomRightRadius', definition);
	            this.borderBottomRightRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderBottomStyle', {
	        get: function () {
	            var definition = __webpack_require__(67).definition;
	            Object.defineProperty(prototype, 'borderBottomStyle', definition);
	            return this.borderBottomStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(67).definition;
	            Object.defineProperty(prototype, 'borderBottomStyle', definition);
	            this.borderBottomStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-bottom-style', {
	        get: function () {
	            var definition = __webpack_require__(67).definition;
	            Object.defineProperty(prototype, 'borderBottomStyle', definition);
	            return this.borderBottomStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(67).definition;
	            Object.defineProperty(prototype, 'borderBottomStyle', definition);
	            this.borderBottomStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderBottomWidth', {
	        get: function () {
	            var definition = __webpack_require__(66).definition;
	            Object.defineProperty(prototype, 'borderBottomWidth', definition);
	            return this.borderBottomWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(66).definition;
	            Object.defineProperty(prototype, 'borderBottomWidth', definition);
	            this.borderBottomWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-bottom-width', {
	        get: function () {
	            var definition = __webpack_require__(66).definition;
	            Object.defineProperty(prototype, 'borderBottomWidth', definition);
	            return this.borderBottomWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(66).definition;
	            Object.defineProperty(prototype, 'borderBottomWidth', definition);
	            this.borderBottomWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderCollapse', {
	        get: function () {
	            var definition = __webpack_require__(71).definition;
	            Object.defineProperty(prototype, 'borderCollapse', definition);
	            return this.borderCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(71).definition;
	            Object.defineProperty(prototype, 'borderCollapse', definition);
	            this.borderCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-collapse', {
	        get: function () {
	            var definition = __webpack_require__(71).definition;
	            Object.defineProperty(prototype, 'borderCollapse', definition);
	            return this.borderCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(71).definition;
	            Object.defineProperty(prototype, 'borderCollapse', definition);
	            this.borderCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderColor', {
	        get: function () {
	            var definition = __webpack_require__(64).definition;
	            Object.defineProperty(prototype, 'borderColor', definition);
	            return this.borderColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(64).definition;
	            Object.defineProperty(prototype, 'borderColor', definition);
	            this.borderColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-color', {
	        get: function () {
	            var definition = __webpack_require__(64).definition;
	            Object.defineProperty(prototype, 'borderColor', definition);
	            return this.borderColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(64).definition;
	            Object.defineProperty(prototype, 'borderColor', definition);
	            this.borderColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderImage', {
	        get: function () {
	            var definition = __webpack_require__(72).definition;
	            Object.defineProperty(prototype, 'borderImage', definition);
	            return this.borderImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(72).definition;
	            Object.defineProperty(prototype, 'borderImage', definition);
	            this.borderImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-image', {
	        get: function () {
	            var definition = __webpack_require__(72).definition;
	            Object.defineProperty(prototype, 'borderImage', definition);
	            return this.borderImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(72).definition;
	            Object.defineProperty(prototype, 'borderImage', definition);
	            this.borderImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderImageOutset', {
	        get: function () {
	            var definition = __webpack_require__(73).definition;
	            Object.defineProperty(prototype, 'borderImageOutset', definition);
	            return this.borderImageOutset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(73).definition;
	            Object.defineProperty(prototype, 'borderImageOutset', definition);
	            this.borderImageOutset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-image-outset', {
	        get: function () {
	            var definition = __webpack_require__(73).definition;
	            Object.defineProperty(prototype, 'borderImageOutset', definition);
	            return this.borderImageOutset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(73).definition;
	            Object.defineProperty(prototype, 'borderImageOutset', definition);
	            this.borderImageOutset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderImageRepeat', {
	        get: function () {
	            var definition = __webpack_require__(74).definition;
	            Object.defineProperty(prototype, 'borderImageRepeat', definition);
	            return this.borderImageRepeat;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(74).definition;
	            Object.defineProperty(prototype, 'borderImageRepeat', definition);
	            this.borderImageRepeat = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-image-repeat', {
	        get: function () {
	            var definition = __webpack_require__(74).definition;
	            Object.defineProperty(prototype, 'borderImageRepeat', definition);
	            return this.borderImageRepeat;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(74).definition;
	            Object.defineProperty(prototype, 'borderImageRepeat', definition);
	            this.borderImageRepeat = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderImageSlice', {
	        get: function () {
	            var definition = __webpack_require__(75).definition;
	            Object.defineProperty(prototype, 'borderImageSlice', definition);
	            return this.borderImageSlice;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(75).definition;
	            Object.defineProperty(prototype, 'borderImageSlice', definition);
	            this.borderImageSlice = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-image-slice', {
	        get: function () {
	            var definition = __webpack_require__(75).definition;
	            Object.defineProperty(prototype, 'borderImageSlice', definition);
	            return this.borderImageSlice;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(75).definition;
	            Object.defineProperty(prototype, 'borderImageSlice', definition);
	            this.borderImageSlice = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderImageSource', {
	        get: function () {
	            var definition = __webpack_require__(76).definition;
	            Object.defineProperty(prototype, 'borderImageSource', definition);
	            return this.borderImageSource;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(76).definition;
	            Object.defineProperty(prototype, 'borderImageSource', definition);
	            this.borderImageSource = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-image-source', {
	        get: function () {
	            var definition = __webpack_require__(76).definition;
	            Object.defineProperty(prototype, 'borderImageSource', definition);
	            return this.borderImageSource;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(76).definition;
	            Object.defineProperty(prototype, 'borderImageSource', definition);
	            this.borderImageSource = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderImageWidth', {
	        get: function () {
	            var definition = __webpack_require__(77).definition;
	            Object.defineProperty(prototype, 'borderImageWidth', definition);
	            return this.borderImageWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(77).definition;
	            Object.defineProperty(prototype, 'borderImageWidth', definition);
	            this.borderImageWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-image-width', {
	        get: function () {
	            var definition = __webpack_require__(77).definition;
	            Object.defineProperty(prototype, 'borderImageWidth', definition);
	            return this.borderImageWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(77).definition;
	            Object.defineProperty(prototype, 'borderImageWidth', definition);
	            this.borderImageWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderLeft', {
	        get: function () {
	            var definition = __webpack_require__(78).definition;
	            Object.defineProperty(prototype, 'borderLeft', definition);
	            return this.borderLeft;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(78).definition;
	            Object.defineProperty(prototype, 'borderLeft', definition);
	            this.borderLeft = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-left', {
	        get: function () {
	            var definition = __webpack_require__(78).definition;
	            Object.defineProperty(prototype, 'borderLeft', definition);
	            return this.borderLeft;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(78).definition;
	            Object.defineProperty(prototype, 'borderLeft', definition);
	            this.borderLeft = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderLeftColor', {
	        get: function () {
	            var definition = __webpack_require__(81).definition;
	            Object.defineProperty(prototype, 'borderLeftColor', definition);
	            return this.borderLeftColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(81).definition;
	            Object.defineProperty(prototype, 'borderLeftColor', definition);
	            this.borderLeftColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-left-color', {
	        get: function () {
	            var definition = __webpack_require__(81).definition;
	            Object.defineProperty(prototype, 'borderLeftColor', definition);
	            return this.borderLeftColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(81).definition;
	            Object.defineProperty(prototype, 'borderLeftColor', definition);
	            this.borderLeftColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderLeftStyle', {
	        get: function () {
	            var definition = __webpack_require__(80).definition;
	            Object.defineProperty(prototype, 'borderLeftStyle', definition);
	            return this.borderLeftStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(80).definition;
	            Object.defineProperty(prototype, 'borderLeftStyle', definition);
	            this.borderLeftStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-left-style', {
	        get: function () {
	            var definition = __webpack_require__(80).definition;
	            Object.defineProperty(prototype, 'borderLeftStyle', definition);
	            return this.borderLeftStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(80).definition;
	            Object.defineProperty(prototype, 'borderLeftStyle', definition);
	            this.borderLeftStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderLeftWidth', {
	        get: function () {
	            var definition = __webpack_require__(79).definition;
	            Object.defineProperty(prototype, 'borderLeftWidth', definition);
	            return this.borderLeftWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(79).definition;
	            Object.defineProperty(prototype, 'borderLeftWidth', definition);
	            this.borderLeftWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-left-width', {
	        get: function () {
	            var definition = __webpack_require__(79).definition;
	            Object.defineProperty(prototype, 'borderLeftWidth', definition);
	            return this.borderLeftWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(79).definition;
	            Object.defineProperty(prototype, 'borderLeftWidth', definition);
	            this.borderLeftWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderRadius', {
	        get: function () {
	            var definition = __webpack_require__(82).definition;
	            Object.defineProperty(prototype, 'borderRadius', definition);
	            return this.borderRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(82).definition;
	            Object.defineProperty(prototype, 'borderRadius', definition);
	            this.borderRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-radius', {
	        get: function () {
	            var definition = __webpack_require__(82).definition;
	            Object.defineProperty(prototype, 'borderRadius', definition);
	            return this.borderRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(82).definition;
	            Object.defineProperty(prototype, 'borderRadius', definition);
	            this.borderRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderRight', {
	        get: function () {
	            var definition = __webpack_require__(83).definition;
	            Object.defineProperty(prototype, 'borderRight', definition);
	            return this.borderRight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(83).definition;
	            Object.defineProperty(prototype, 'borderRight', definition);
	            this.borderRight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-right', {
	        get: function () {
	            var definition = __webpack_require__(83).definition;
	            Object.defineProperty(prototype, 'borderRight', definition);
	            return this.borderRight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(83).definition;
	            Object.defineProperty(prototype, 'borderRight', definition);
	            this.borderRight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderRightColor', {
	        get: function () {
	            var definition = __webpack_require__(86).definition;
	            Object.defineProperty(prototype, 'borderRightColor', definition);
	            return this.borderRightColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(86).definition;
	            Object.defineProperty(prototype, 'borderRightColor', definition);
	            this.borderRightColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-right-color', {
	        get: function () {
	            var definition = __webpack_require__(86).definition;
	            Object.defineProperty(prototype, 'borderRightColor', definition);
	            return this.borderRightColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(86).definition;
	            Object.defineProperty(prototype, 'borderRightColor', definition);
	            this.borderRightColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderRightStyle', {
	        get: function () {
	            var definition = __webpack_require__(85).definition;
	            Object.defineProperty(prototype, 'borderRightStyle', definition);
	            return this.borderRightStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(85).definition;
	            Object.defineProperty(prototype, 'borderRightStyle', definition);
	            this.borderRightStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-right-style', {
	        get: function () {
	            var definition = __webpack_require__(85).definition;
	            Object.defineProperty(prototype, 'borderRightStyle', definition);
	            return this.borderRightStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(85).definition;
	            Object.defineProperty(prototype, 'borderRightStyle', definition);
	            this.borderRightStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderRightWidth', {
	        get: function () {
	            var definition = __webpack_require__(84).definition;
	            Object.defineProperty(prototype, 'borderRightWidth', definition);
	            return this.borderRightWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(84).definition;
	            Object.defineProperty(prototype, 'borderRightWidth', definition);
	            this.borderRightWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-right-width', {
	        get: function () {
	            var definition = __webpack_require__(84).definition;
	            Object.defineProperty(prototype, 'borderRightWidth', definition);
	            return this.borderRightWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(84).definition;
	            Object.defineProperty(prototype, 'borderRightWidth', definition);
	            this.borderRightWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderSpacing', {
	        get: function () {
	            var definition = __webpack_require__(87).definition;
	            Object.defineProperty(prototype, 'borderSpacing', definition);
	            return this.borderSpacing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(87).definition;
	            Object.defineProperty(prototype, 'borderSpacing', definition);
	            this.borderSpacing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-spacing', {
	        get: function () {
	            var definition = __webpack_require__(87).definition;
	            Object.defineProperty(prototype, 'borderSpacing', definition);
	            return this.borderSpacing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(87).definition;
	            Object.defineProperty(prototype, 'borderSpacing', definition);
	            this.borderSpacing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderStyle', {
	        get: function () {
	            var definition = __webpack_require__(63).definition;
	            Object.defineProperty(prototype, 'borderStyle', definition);
	            return this.borderStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(63).definition;
	            Object.defineProperty(prototype, 'borderStyle', definition);
	            this.borderStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-style', {
	        get: function () {
	            var definition = __webpack_require__(63).definition;
	            Object.defineProperty(prototype, 'borderStyle', definition);
	            return this.borderStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(63).definition;
	            Object.defineProperty(prototype, 'borderStyle', definition);
	            this.borderStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderTop', {
	        get: function () {
	            var definition = __webpack_require__(88).definition;
	            Object.defineProperty(prototype, 'borderTop', definition);
	            return this.borderTop;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(88).definition;
	            Object.defineProperty(prototype, 'borderTop', definition);
	            this.borderTop = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-top', {
	        get: function () {
	            var definition = __webpack_require__(88).definition;
	            Object.defineProperty(prototype, 'borderTop', definition);
	            return this.borderTop;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(88).definition;
	            Object.defineProperty(prototype, 'borderTop', definition);
	            this.borderTop = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderTopColor', {
	        get: function () {
	            var definition = __webpack_require__(91).definition;
	            Object.defineProperty(prototype, 'borderTopColor', definition);
	            return this.borderTopColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(91).definition;
	            Object.defineProperty(prototype, 'borderTopColor', definition);
	            this.borderTopColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-top-color', {
	        get: function () {
	            var definition = __webpack_require__(91).definition;
	            Object.defineProperty(prototype, 'borderTopColor', definition);
	            return this.borderTopColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(91).definition;
	            Object.defineProperty(prototype, 'borderTopColor', definition);
	            this.borderTopColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderTopLeftRadius', {
	        get: function () {
	            var definition = __webpack_require__(92).definition;
	            Object.defineProperty(prototype, 'borderTopLeftRadius', definition);
	            return this.borderTopLeftRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(92).definition;
	            Object.defineProperty(prototype, 'borderTopLeftRadius', definition);
	            this.borderTopLeftRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-top-left-radius', {
	        get: function () {
	            var definition = __webpack_require__(92).definition;
	            Object.defineProperty(prototype, 'borderTopLeftRadius', definition);
	            return this.borderTopLeftRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(92).definition;
	            Object.defineProperty(prototype, 'borderTopLeftRadius', definition);
	            this.borderTopLeftRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderTopRightRadius', {
	        get: function () {
	            var definition = __webpack_require__(93).definition;
	            Object.defineProperty(prototype, 'borderTopRightRadius', definition);
	            return this.borderTopRightRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(93).definition;
	            Object.defineProperty(prototype, 'borderTopRightRadius', definition);
	            this.borderTopRightRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-top-right-radius', {
	        get: function () {
	            var definition = __webpack_require__(93).definition;
	            Object.defineProperty(prototype, 'borderTopRightRadius', definition);
	            return this.borderTopRightRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(93).definition;
	            Object.defineProperty(prototype, 'borderTopRightRadius', definition);
	            this.borderTopRightRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderTopStyle', {
	        get: function () {
	            var definition = __webpack_require__(90).definition;
	            Object.defineProperty(prototype, 'borderTopStyle', definition);
	            return this.borderTopStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(90).definition;
	            Object.defineProperty(prototype, 'borderTopStyle', definition);
	            this.borderTopStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-top-style', {
	        get: function () {
	            var definition = __webpack_require__(90).definition;
	            Object.defineProperty(prototype, 'borderTopStyle', definition);
	            return this.borderTopStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(90).definition;
	            Object.defineProperty(prototype, 'borderTopStyle', definition);
	            this.borderTopStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderTopWidth', {
	        get: function () {
	            var definition = __webpack_require__(89).definition;
	            Object.defineProperty(prototype, 'borderTopWidth', definition);
	            return this.borderTopWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(89).definition;
	            Object.defineProperty(prototype, 'borderTopWidth', definition);
	            this.borderTopWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-top-width', {
	        get: function () {
	            var definition = __webpack_require__(89).definition;
	            Object.defineProperty(prototype, 'borderTopWidth', definition);
	            return this.borderTopWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(89).definition;
	            Object.defineProperty(prototype, 'borderTopWidth', definition);
	            this.borderTopWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'borderWidth', {
	        get: function () {
	            var definition = __webpack_require__(62).definition;
	            Object.defineProperty(prototype, 'borderWidth', definition);
	            return this.borderWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(62).definition;
	            Object.defineProperty(prototype, 'borderWidth', definition);
	            this.borderWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'border-width', {
	        get: function () {
	            var definition = __webpack_require__(62).definition;
	            Object.defineProperty(prototype, 'borderWidth', definition);
	            return this.borderWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(62).definition;
	            Object.defineProperty(prototype, 'borderWidth', definition);
	            this.borderWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'bottom', {
	        get: function () {
	            var definition = __webpack_require__(94).definition;
	            Object.defineProperty(prototype, 'bottom', definition);
	            return this.bottom;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(94).definition;
	            Object.defineProperty(prototype, 'bottom', definition);
	            this.bottom = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'boxShadow', {
	        get: function () {
	            var definition = __webpack_require__(95).definition;
	            Object.defineProperty(prototype, 'boxShadow', definition);
	            return this.boxShadow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(95).definition;
	            Object.defineProperty(prototype, 'boxShadow', definition);
	            this.boxShadow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'box-shadow', {
	        get: function () {
	            var definition = __webpack_require__(95).definition;
	            Object.defineProperty(prototype, 'boxShadow', definition);
	            return this.boxShadow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(95).definition;
	            Object.defineProperty(prototype, 'boxShadow', definition);
	            this.boxShadow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'boxSizing', {
	        get: function () {
	            var definition = __webpack_require__(96).definition;
	            Object.defineProperty(prototype, 'boxSizing', definition);
	            return this.boxSizing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(96).definition;
	            Object.defineProperty(prototype, 'boxSizing', definition);
	            this.boxSizing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'box-sizing', {
	        get: function () {
	            var definition = __webpack_require__(96).definition;
	            Object.defineProperty(prototype, 'boxSizing', definition);
	            return this.boxSizing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(96).definition;
	            Object.defineProperty(prototype, 'boxSizing', definition);
	            this.boxSizing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'captionSide', {
	        get: function () {
	            var definition = __webpack_require__(97).definition;
	            Object.defineProperty(prototype, 'captionSide', definition);
	            return this.captionSide;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(97).definition;
	            Object.defineProperty(prototype, 'captionSide', definition);
	            this.captionSide = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'caption-side', {
	        get: function () {
	            var definition = __webpack_require__(97).definition;
	            Object.defineProperty(prototype, 'captionSide', definition);
	            return this.captionSide;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(97).definition;
	            Object.defineProperty(prototype, 'captionSide', definition);
	            this.captionSide = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'clear', {
	        get: function () {
	            var definition = __webpack_require__(98).definition;
	            Object.defineProperty(prototype, 'clear', definition);
	            return this.clear;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(98).definition;
	            Object.defineProperty(prototype, 'clear', definition);
	            this.clear = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'clip', {
	        get: function () {
	            var definition = __webpack_require__(99).definition;
	            Object.defineProperty(prototype, 'clip', definition);
	            return this.clip;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(99).definition;
	            Object.defineProperty(prototype, 'clip', definition);
	            this.clip = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'color', {
	        get: function () {
	            var definition = __webpack_require__(100).definition;
	            Object.defineProperty(prototype, 'color', definition);
	            return this.color;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(100).definition;
	            Object.defineProperty(prototype, 'color', definition);
	            this.color = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'colorInterpolation', {
	        get: function () {
	            var definition = __webpack_require__(101).definition;
	            Object.defineProperty(prototype, 'colorInterpolation', definition);
	            return this.colorInterpolation;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(101).definition;
	            Object.defineProperty(prototype, 'colorInterpolation', definition);
	            this.colorInterpolation = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'color-interpolation', {
	        get: function () {
	            var definition = __webpack_require__(101).definition;
	            Object.defineProperty(prototype, 'colorInterpolation', definition);
	            return this.colorInterpolation;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(101).definition;
	            Object.defineProperty(prototype, 'colorInterpolation', definition);
	            this.colorInterpolation = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'colorInterpolationFilters', {
	        get: function () {
	            var definition = __webpack_require__(102).definition;
	            Object.defineProperty(prototype, 'colorInterpolationFilters', definition);
	            return this.colorInterpolationFilters;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(102).definition;
	            Object.defineProperty(prototype, 'colorInterpolationFilters', definition);
	            this.colorInterpolationFilters = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'color-interpolation-filters', {
	        get: function () {
	            var definition = __webpack_require__(102).definition;
	            Object.defineProperty(prototype, 'colorInterpolationFilters', definition);
	            return this.colorInterpolationFilters;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(102).definition;
	            Object.defineProperty(prototype, 'colorInterpolationFilters', definition);
	            this.colorInterpolationFilters = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'colorProfile', {
	        get: function () {
	            var definition = __webpack_require__(103).definition;
	            Object.defineProperty(prototype, 'colorProfile', definition);
	            return this.colorProfile;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(103).definition;
	            Object.defineProperty(prototype, 'colorProfile', definition);
	            this.colorProfile = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'color-profile', {
	        get: function () {
	            var definition = __webpack_require__(103).definition;
	            Object.defineProperty(prototype, 'colorProfile', definition);
	            return this.colorProfile;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(103).definition;
	            Object.defineProperty(prototype, 'colorProfile', definition);
	            this.colorProfile = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'colorRendering', {
	        get: function () {
	            var definition = __webpack_require__(104).definition;
	            Object.defineProperty(prototype, 'colorRendering', definition);
	            return this.colorRendering;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(104).definition;
	            Object.defineProperty(prototype, 'colorRendering', definition);
	            this.colorRendering = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'color-rendering', {
	        get: function () {
	            var definition = __webpack_require__(104).definition;
	            Object.defineProperty(prototype, 'colorRendering', definition);
	            return this.colorRendering;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(104).definition;
	            Object.defineProperty(prototype, 'colorRendering', definition);
	            this.colorRendering = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'content', {
	        get: function () {
	            var definition = __webpack_require__(105).definition;
	            Object.defineProperty(prototype, 'content', definition);
	            return this.content;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(105).definition;
	            Object.defineProperty(prototype, 'content', definition);
	            this.content = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'counterIncrement', {
	        get: function () {
	            var definition = __webpack_require__(106).definition;
	            Object.defineProperty(prototype, 'counterIncrement', definition);
	            return this.counterIncrement;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(106).definition;
	            Object.defineProperty(prototype, 'counterIncrement', definition);
	            this.counterIncrement = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'counter-increment', {
	        get: function () {
	            var definition = __webpack_require__(106).definition;
	            Object.defineProperty(prototype, 'counterIncrement', definition);
	            return this.counterIncrement;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(106).definition;
	            Object.defineProperty(prototype, 'counterIncrement', definition);
	            this.counterIncrement = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'counterReset', {
	        get: function () {
	            var definition = __webpack_require__(107).definition;
	            Object.defineProperty(prototype, 'counterReset', definition);
	            return this.counterReset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(107).definition;
	            Object.defineProperty(prototype, 'counterReset', definition);
	            this.counterReset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'counter-reset', {
	        get: function () {
	            var definition = __webpack_require__(107).definition;
	            Object.defineProperty(prototype, 'counterReset', definition);
	            return this.counterReset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(107).definition;
	            Object.defineProperty(prototype, 'counterReset', definition);
	            this.counterReset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'cssFloat', {
	        get: function () {
	            var definition = __webpack_require__(108).definition;
	            Object.defineProperty(prototype, 'cssFloat', definition);
	            return this.cssFloat;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(108).definition;
	            Object.defineProperty(prototype, 'cssFloat', definition);
	            this.cssFloat = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'css-float', {
	        get: function () {
	            var definition = __webpack_require__(108).definition;
	            Object.defineProperty(prototype, 'cssFloat', definition);
	            return this.cssFloat;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(108).definition;
	            Object.defineProperty(prototype, 'cssFloat', definition);
	            this.cssFloat = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'cue', {
	        get: function () {
	            var definition = __webpack_require__(109).definition;
	            Object.defineProperty(prototype, 'cue', definition);
	            return this.cue;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(109).definition;
	            Object.defineProperty(prototype, 'cue', definition);
	            this.cue = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'cueAfter', {
	        get: function () {
	            var definition = __webpack_require__(110).definition;
	            Object.defineProperty(prototype, 'cueAfter', definition);
	            return this.cueAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(110).definition;
	            Object.defineProperty(prototype, 'cueAfter', definition);
	            this.cueAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'cue-after', {
	        get: function () {
	            var definition = __webpack_require__(110).definition;
	            Object.defineProperty(prototype, 'cueAfter', definition);
	            return this.cueAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(110).definition;
	            Object.defineProperty(prototype, 'cueAfter', definition);
	            this.cueAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'cueBefore', {
	        get: function () {
	            var definition = __webpack_require__(111).definition;
	            Object.defineProperty(prototype, 'cueBefore', definition);
	            return this.cueBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(111).definition;
	            Object.defineProperty(prototype, 'cueBefore', definition);
	            this.cueBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'cue-before', {
	        get: function () {
	            var definition = __webpack_require__(111).definition;
	            Object.defineProperty(prototype, 'cueBefore', definition);
	            return this.cueBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(111).definition;
	            Object.defineProperty(prototype, 'cueBefore', definition);
	            this.cueBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'cursor', {
	        get: function () {
	            var definition = __webpack_require__(112).definition;
	            Object.defineProperty(prototype, 'cursor', definition);
	            return this.cursor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(112).definition;
	            Object.defineProperty(prototype, 'cursor', definition);
	            this.cursor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'direction', {
	        get: function () {
	            var definition = __webpack_require__(113).definition;
	            Object.defineProperty(prototype, 'direction', definition);
	            return this.direction;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(113).definition;
	            Object.defineProperty(prototype, 'direction', definition);
	            this.direction = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'display', {
	        get: function () {
	            var definition = __webpack_require__(114).definition;
	            Object.defineProperty(prototype, 'display', definition);
	            return this.display;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(114).definition;
	            Object.defineProperty(prototype, 'display', definition);
	            this.display = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'dominantBaseline', {
	        get: function () {
	            var definition = __webpack_require__(115).definition;
	            Object.defineProperty(prototype, 'dominantBaseline', definition);
	            return this.dominantBaseline;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(115).definition;
	            Object.defineProperty(prototype, 'dominantBaseline', definition);
	            this.dominantBaseline = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'dominant-baseline', {
	        get: function () {
	            var definition = __webpack_require__(115).definition;
	            Object.defineProperty(prototype, 'dominantBaseline', definition);
	            return this.dominantBaseline;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(115).definition;
	            Object.defineProperty(prototype, 'dominantBaseline', definition);
	            this.dominantBaseline = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'elevation', {
	        get: function () {
	            var definition = __webpack_require__(116).definition;
	            Object.defineProperty(prototype, 'elevation', definition);
	            return this.elevation;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(116).definition;
	            Object.defineProperty(prototype, 'elevation', definition);
	            this.elevation = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'emptyCells', {
	        get: function () {
	            var definition = __webpack_require__(117).definition;
	            Object.defineProperty(prototype, 'emptyCells', definition);
	            return this.emptyCells;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(117).definition;
	            Object.defineProperty(prototype, 'emptyCells', definition);
	            this.emptyCells = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'empty-cells', {
	        get: function () {
	            var definition = __webpack_require__(117).definition;
	            Object.defineProperty(prototype, 'emptyCells', definition);
	            return this.emptyCells;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(117).definition;
	            Object.defineProperty(prototype, 'emptyCells', definition);
	            this.emptyCells = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'enableBackground', {
	        get: function () {
	            var definition = __webpack_require__(118).definition;
	            Object.defineProperty(prototype, 'enableBackground', definition);
	            return this.enableBackground;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(118).definition;
	            Object.defineProperty(prototype, 'enableBackground', definition);
	            this.enableBackground = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'enable-background', {
	        get: function () {
	            var definition = __webpack_require__(118).definition;
	            Object.defineProperty(prototype, 'enableBackground', definition);
	            return this.enableBackground;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(118).definition;
	            Object.defineProperty(prototype, 'enableBackground', definition);
	            this.enableBackground = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fill', {
	        get: function () {
	            var definition = __webpack_require__(119).definition;
	            Object.defineProperty(prototype, 'fill', definition);
	            return this.fill;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(119).definition;
	            Object.defineProperty(prototype, 'fill', definition);
	            this.fill = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fillOpacity', {
	        get: function () {
	            var definition = __webpack_require__(120).definition;
	            Object.defineProperty(prototype, 'fillOpacity', definition);
	            return this.fillOpacity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(120).definition;
	            Object.defineProperty(prototype, 'fillOpacity', definition);
	            this.fillOpacity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fill-opacity', {
	        get: function () {
	            var definition = __webpack_require__(120).definition;
	            Object.defineProperty(prototype, 'fillOpacity', definition);
	            return this.fillOpacity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(120).definition;
	            Object.defineProperty(prototype, 'fillOpacity', definition);
	            this.fillOpacity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fillRule', {
	        get: function () {
	            var definition = __webpack_require__(121).definition;
	            Object.defineProperty(prototype, 'fillRule', definition);
	            return this.fillRule;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(121).definition;
	            Object.defineProperty(prototype, 'fillRule', definition);
	            this.fillRule = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fill-rule', {
	        get: function () {
	            var definition = __webpack_require__(121).definition;
	            Object.defineProperty(prototype, 'fillRule', definition);
	            return this.fillRule;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(121).definition;
	            Object.defineProperty(prototype, 'fillRule', definition);
	            this.fillRule = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'filter', {
	        get: function () {
	            var definition = __webpack_require__(122).definition;
	            Object.defineProperty(prototype, 'filter', definition);
	            return this.filter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(122).definition;
	            Object.defineProperty(prototype, 'filter', definition);
	            this.filter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'floodColor', {
	        get: function () {
	            var definition = __webpack_require__(123).definition;
	            Object.defineProperty(prototype, 'floodColor', definition);
	            return this.floodColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(123).definition;
	            Object.defineProperty(prototype, 'floodColor', definition);
	            this.floodColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'flood-color', {
	        get: function () {
	            var definition = __webpack_require__(123).definition;
	            Object.defineProperty(prototype, 'floodColor', definition);
	            return this.floodColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(123).definition;
	            Object.defineProperty(prototype, 'floodColor', definition);
	            this.floodColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'floodOpacity', {
	        get: function () {
	            var definition = __webpack_require__(124).definition;
	            Object.defineProperty(prototype, 'floodOpacity', definition);
	            return this.floodOpacity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(124).definition;
	            Object.defineProperty(prototype, 'floodOpacity', definition);
	            this.floodOpacity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'flood-opacity', {
	        get: function () {
	            var definition = __webpack_require__(124).definition;
	            Object.defineProperty(prototype, 'floodOpacity', definition);
	            return this.floodOpacity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(124).definition;
	            Object.defineProperty(prototype, 'floodOpacity', definition);
	            this.floodOpacity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'font', {
	        get: function () {
	            var definition = __webpack_require__(125).definition;
	            Object.defineProperty(prototype, 'font', definition);
	            return this.font;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(125).definition;
	            Object.defineProperty(prototype, 'font', definition);
	            this.font = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fontFamily', {
	        get: function () {
	            var definition = __webpack_require__(126).definition;
	            Object.defineProperty(prototype, 'fontFamily', definition);
	            return this.fontFamily;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(126).definition;
	            Object.defineProperty(prototype, 'fontFamily', definition);
	            this.fontFamily = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'font-family', {
	        get: function () {
	            var definition = __webpack_require__(126).definition;
	            Object.defineProperty(prototype, 'fontFamily', definition);
	            return this.fontFamily;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(126).definition;
	            Object.defineProperty(prototype, 'fontFamily', definition);
	            this.fontFamily = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fontSize', {
	        get: function () {
	            var definition = __webpack_require__(127).definition;
	            Object.defineProperty(prototype, 'fontSize', definition);
	            return this.fontSize;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(127).definition;
	            Object.defineProperty(prototype, 'fontSize', definition);
	            this.fontSize = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'font-size', {
	        get: function () {
	            var definition = __webpack_require__(127).definition;
	            Object.defineProperty(prototype, 'fontSize', definition);
	            return this.fontSize;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(127).definition;
	            Object.defineProperty(prototype, 'fontSize', definition);
	            this.fontSize = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fontSizeAdjust', {
	        get: function () {
	            var definition = __webpack_require__(132).definition;
	            Object.defineProperty(prototype, 'fontSizeAdjust', definition);
	            return this.fontSizeAdjust;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(132).definition;
	            Object.defineProperty(prototype, 'fontSizeAdjust', definition);
	            this.fontSizeAdjust = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'font-size-adjust', {
	        get: function () {
	            var definition = __webpack_require__(132).definition;
	            Object.defineProperty(prototype, 'fontSizeAdjust', definition);
	            return this.fontSizeAdjust;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(132).definition;
	            Object.defineProperty(prototype, 'fontSizeAdjust', definition);
	            this.fontSizeAdjust = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fontStretch', {
	        get: function () {
	            var definition = __webpack_require__(133).definition;
	            Object.defineProperty(prototype, 'fontStretch', definition);
	            return this.fontStretch;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(133).definition;
	            Object.defineProperty(prototype, 'fontStretch', definition);
	            this.fontStretch = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'font-stretch', {
	        get: function () {
	            var definition = __webpack_require__(133).definition;
	            Object.defineProperty(prototype, 'fontStretch', definition);
	            return this.fontStretch;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(133).definition;
	            Object.defineProperty(prototype, 'fontStretch', definition);
	            this.fontStretch = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fontStyle', {
	        get: function () {
	            var definition = __webpack_require__(128).definition;
	            Object.defineProperty(prototype, 'fontStyle', definition);
	            return this.fontStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(128).definition;
	            Object.defineProperty(prototype, 'fontStyle', definition);
	            this.fontStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'font-style', {
	        get: function () {
	            var definition = __webpack_require__(128).definition;
	            Object.defineProperty(prototype, 'fontStyle', definition);
	            return this.fontStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(128).definition;
	            Object.defineProperty(prototype, 'fontStyle', definition);
	            this.fontStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fontVariant', {
	        get: function () {
	            var definition = __webpack_require__(129).definition;
	            Object.defineProperty(prototype, 'fontVariant', definition);
	            return this.fontVariant;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(129).definition;
	            Object.defineProperty(prototype, 'fontVariant', definition);
	            this.fontVariant = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'font-variant', {
	        get: function () {
	            var definition = __webpack_require__(129).definition;
	            Object.defineProperty(prototype, 'fontVariant', definition);
	            return this.fontVariant;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(129).definition;
	            Object.defineProperty(prototype, 'fontVariant', definition);
	            this.fontVariant = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'fontWeight', {
	        get: function () {
	            var definition = __webpack_require__(130).definition;
	            Object.defineProperty(prototype, 'fontWeight', definition);
	            return this.fontWeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(130).definition;
	            Object.defineProperty(prototype, 'fontWeight', definition);
	            this.fontWeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'font-weight', {
	        get: function () {
	            var definition = __webpack_require__(130).definition;
	            Object.defineProperty(prototype, 'fontWeight', definition);
	            return this.fontWeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(130).definition;
	            Object.defineProperty(prototype, 'fontWeight', definition);
	            this.fontWeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'glyphOrientationHorizontal', {
	        get: function () {
	            var definition = __webpack_require__(134).definition;
	            Object.defineProperty(prototype, 'glyphOrientationHorizontal', definition);
	            return this.glyphOrientationHorizontal;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(134).definition;
	            Object.defineProperty(prototype, 'glyphOrientationHorizontal', definition);
	            this.glyphOrientationHorizontal = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'glyph-orientation-horizontal', {
	        get: function () {
	            var definition = __webpack_require__(134).definition;
	            Object.defineProperty(prototype, 'glyphOrientationHorizontal', definition);
	            return this.glyphOrientationHorizontal;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(134).definition;
	            Object.defineProperty(prototype, 'glyphOrientationHorizontal', definition);
	            this.glyphOrientationHorizontal = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'glyphOrientationVertical', {
	        get: function () {
	            var definition = __webpack_require__(135).definition;
	            Object.defineProperty(prototype, 'glyphOrientationVertical', definition);
	            return this.glyphOrientationVertical;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(135).definition;
	            Object.defineProperty(prototype, 'glyphOrientationVertical', definition);
	            this.glyphOrientationVertical = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'glyph-orientation-vertical', {
	        get: function () {
	            var definition = __webpack_require__(135).definition;
	            Object.defineProperty(prototype, 'glyphOrientationVertical', definition);
	            return this.glyphOrientationVertical;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(135).definition;
	            Object.defineProperty(prototype, 'glyphOrientationVertical', definition);
	            this.glyphOrientationVertical = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'height', {
	        get: function () {
	            var definition = __webpack_require__(136).definition;
	            Object.defineProperty(prototype, 'height', definition);
	            return this.height;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(136).definition;
	            Object.defineProperty(prototype, 'height', definition);
	            this.height = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'imageRendering', {
	        get: function () {
	            var definition = __webpack_require__(137).definition;
	            Object.defineProperty(prototype, 'imageRendering', definition);
	            return this.imageRendering;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(137).definition;
	            Object.defineProperty(prototype, 'imageRendering', definition);
	            this.imageRendering = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'image-rendering', {
	        get: function () {
	            var definition = __webpack_require__(137).definition;
	            Object.defineProperty(prototype, 'imageRendering', definition);
	            return this.imageRendering;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(137).definition;
	            Object.defineProperty(prototype, 'imageRendering', definition);
	            this.imageRendering = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'kerning', {
	        get: function () {
	            var definition = __webpack_require__(138).definition;
	            Object.defineProperty(prototype, 'kerning', definition);
	            return this.kerning;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(138).definition;
	            Object.defineProperty(prototype, 'kerning', definition);
	            this.kerning = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'left', {
	        get: function () {
	            var definition = __webpack_require__(139).definition;
	            Object.defineProperty(prototype, 'left', definition);
	            return this.left;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(139).definition;
	            Object.defineProperty(prototype, 'left', definition);
	            this.left = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'letterSpacing', {
	        get: function () {
	            var definition = __webpack_require__(140).definition;
	            Object.defineProperty(prototype, 'letterSpacing', definition);
	            return this.letterSpacing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(140).definition;
	            Object.defineProperty(prototype, 'letterSpacing', definition);
	            this.letterSpacing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'letter-spacing', {
	        get: function () {
	            var definition = __webpack_require__(140).definition;
	            Object.defineProperty(prototype, 'letterSpacing', definition);
	            return this.letterSpacing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(140).definition;
	            Object.defineProperty(prototype, 'letterSpacing', definition);
	            this.letterSpacing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'lightingColor', {
	        get: function () {
	            var definition = __webpack_require__(141).definition;
	            Object.defineProperty(prototype, 'lightingColor', definition);
	            return this.lightingColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(141).definition;
	            Object.defineProperty(prototype, 'lightingColor', definition);
	            this.lightingColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'lighting-color', {
	        get: function () {
	            var definition = __webpack_require__(141).definition;
	            Object.defineProperty(prototype, 'lightingColor', definition);
	            return this.lightingColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(141).definition;
	            Object.defineProperty(prototype, 'lightingColor', definition);
	            this.lightingColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'lineHeight', {
	        get: function () {
	            var definition = __webpack_require__(131).definition;
	            Object.defineProperty(prototype, 'lineHeight', definition);
	            return this.lineHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(131).definition;
	            Object.defineProperty(prototype, 'lineHeight', definition);
	            this.lineHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'line-height', {
	        get: function () {
	            var definition = __webpack_require__(131).definition;
	            Object.defineProperty(prototype, 'lineHeight', definition);
	            return this.lineHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(131).definition;
	            Object.defineProperty(prototype, 'lineHeight', definition);
	            this.lineHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'listStyle', {
	        get: function () {
	            var definition = __webpack_require__(142).definition;
	            Object.defineProperty(prototype, 'listStyle', definition);
	            return this.listStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(142).definition;
	            Object.defineProperty(prototype, 'listStyle', definition);
	            this.listStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'list-style', {
	        get: function () {
	            var definition = __webpack_require__(142).definition;
	            Object.defineProperty(prototype, 'listStyle', definition);
	            return this.listStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(142).definition;
	            Object.defineProperty(prototype, 'listStyle', definition);
	            this.listStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'listStyleImage', {
	        get: function () {
	            var definition = __webpack_require__(143).definition;
	            Object.defineProperty(prototype, 'listStyleImage', definition);
	            return this.listStyleImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(143).definition;
	            Object.defineProperty(prototype, 'listStyleImage', definition);
	            this.listStyleImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'list-style-image', {
	        get: function () {
	            var definition = __webpack_require__(143).definition;
	            Object.defineProperty(prototype, 'listStyleImage', definition);
	            return this.listStyleImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(143).definition;
	            Object.defineProperty(prototype, 'listStyleImage', definition);
	            this.listStyleImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'listStylePosition', {
	        get: function () {
	            var definition = __webpack_require__(144).definition;
	            Object.defineProperty(prototype, 'listStylePosition', definition);
	            return this.listStylePosition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(144).definition;
	            Object.defineProperty(prototype, 'listStylePosition', definition);
	            this.listStylePosition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'list-style-position', {
	        get: function () {
	            var definition = __webpack_require__(144).definition;
	            Object.defineProperty(prototype, 'listStylePosition', definition);
	            return this.listStylePosition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(144).definition;
	            Object.defineProperty(prototype, 'listStylePosition', definition);
	            this.listStylePosition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'listStyleType', {
	        get: function () {
	            var definition = __webpack_require__(145).definition;
	            Object.defineProperty(prototype, 'listStyleType', definition);
	            return this.listStyleType;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(145).definition;
	            Object.defineProperty(prototype, 'listStyleType', definition);
	            this.listStyleType = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'list-style-type', {
	        get: function () {
	            var definition = __webpack_require__(145).definition;
	            Object.defineProperty(prototype, 'listStyleType', definition);
	            return this.listStyleType;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(145).definition;
	            Object.defineProperty(prototype, 'listStyleType', definition);
	            this.listStyleType = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'margin', {
	        get: function () {
	            var definition = __webpack_require__(146).definition;
	            Object.defineProperty(prototype, 'margin', definition);
	            return this.margin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(146).definition;
	            Object.defineProperty(prototype, 'margin', definition);
	            this.margin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'marginBottom', {
	        get: function () {
	            var definition = __webpack_require__(147).definition;
	            Object.defineProperty(prototype, 'marginBottom', definition);
	            return this.marginBottom;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(147).definition;
	            Object.defineProperty(prototype, 'marginBottom', definition);
	            this.marginBottom = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'margin-bottom', {
	        get: function () {
	            var definition = __webpack_require__(147).definition;
	            Object.defineProperty(prototype, 'marginBottom', definition);
	            return this.marginBottom;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(147).definition;
	            Object.defineProperty(prototype, 'marginBottom', definition);
	            this.marginBottom = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'marginLeft', {
	        get: function () {
	            var definition = __webpack_require__(148).definition;
	            Object.defineProperty(prototype, 'marginLeft', definition);
	            return this.marginLeft;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(148).definition;
	            Object.defineProperty(prototype, 'marginLeft', definition);
	            this.marginLeft = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'margin-left', {
	        get: function () {
	            var definition = __webpack_require__(148).definition;
	            Object.defineProperty(prototype, 'marginLeft', definition);
	            return this.marginLeft;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(148).definition;
	            Object.defineProperty(prototype, 'marginLeft', definition);
	            this.marginLeft = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'marginRight', {
	        get: function () {
	            var definition = __webpack_require__(149).definition;
	            Object.defineProperty(prototype, 'marginRight', definition);
	            return this.marginRight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(149).definition;
	            Object.defineProperty(prototype, 'marginRight', definition);
	            this.marginRight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'margin-right', {
	        get: function () {
	            var definition = __webpack_require__(149).definition;
	            Object.defineProperty(prototype, 'marginRight', definition);
	            return this.marginRight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(149).definition;
	            Object.defineProperty(prototype, 'marginRight', definition);
	            this.marginRight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'marginTop', {
	        get: function () {
	            var definition = __webpack_require__(150).definition;
	            Object.defineProperty(prototype, 'marginTop', definition);
	            return this.marginTop;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(150).definition;
	            Object.defineProperty(prototype, 'marginTop', definition);
	            this.marginTop = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'margin-top', {
	        get: function () {
	            var definition = __webpack_require__(150).definition;
	            Object.defineProperty(prototype, 'marginTop', definition);
	            return this.marginTop;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(150).definition;
	            Object.defineProperty(prototype, 'marginTop', definition);
	            this.marginTop = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'marker', {
	        get: function () {
	            var definition = __webpack_require__(151).definition;
	            Object.defineProperty(prototype, 'marker', definition);
	            return this.marker;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(151).definition;
	            Object.defineProperty(prototype, 'marker', definition);
	            this.marker = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'markerEnd', {
	        get: function () {
	            var definition = __webpack_require__(152).definition;
	            Object.defineProperty(prototype, 'markerEnd', definition);
	            return this.markerEnd;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(152).definition;
	            Object.defineProperty(prototype, 'markerEnd', definition);
	            this.markerEnd = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'marker-end', {
	        get: function () {
	            var definition = __webpack_require__(152).definition;
	            Object.defineProperty(prototype, 'markerEnd', definition);
	            return this.markerEnd;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(152).definition;
	            Object.defineProperty(prototype, 'markerEnd', definition);
	            this.markerEnd = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'markerMid', {
	        get: function () {
	            var definition = __webpack_require__(153).definition;
	            Object.defineProperty(prototype, 'markerMid', definition);
	            return this.markerMid;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(153).definition;
	            Object.defineProperty(prototype, 'markerMid', definition);
	            this.markerMid = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'marker-mid', {
	        get: function () {
	            var definition = __webpack_require__(153).definition;
	            Object.defineProperty(prototype, 'markerMid', definition);
	            return this.markerMid;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(153).definition;
	            Object.defineProperty(prototype, 'markerMid', definition);
	            this.markerMid = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'markerOffset', {
	        get: function () {
	            var definition = __webpack_require__(154).definition;
	            Object.defineProperty(prototype, 'markerOffset', definition);
	            return this.markerOffset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(154).definition;
	            Object.defineProperty(prototype, 'markerOffset', definition);
	            this.markerOffset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'marker-offset', {
	        get: function () {
	            var definition = __webpack_require__(154).definition;
	            Object.defineProperty(prototype, 'markerOffset', definition);
	            return this.markerOffset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(154).definition;
	            Object.defineProperty(prototype, 'markerOffset', definition);
	            this.markerOffset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'markerStart', {
	        get: function () {
	            var definition = __webpack_require__(155).definition;
	            Object.defineProperty(prototype, 'markerStart', definition);
	            return this.markerStart;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(155).definition;
	            Object.defineProperty(prototype, 'markerStart', definition);
	            this.markerStart = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'marker-start', {
	        get: function () {
	            var definition = __webpack_require__(155).definition;
	            Object.defineProperty(prototype, 'markerStart', definition);
	            return this.markerStart;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(155).definition;
	            Object.defineProperty(prototype, 'markerStart', definition);
	            this.markerStart = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'marks', {
	        get: function () {
	            var definition = __webpack_require__(156).definition;
	            Object.defineProperty(prototype, 'marks', definition);
	            return this.marks;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(156).definition;
	            Object.defineProperty(prototype, 'marks', definition);
	            this.marks = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'mask', {
	        get: function () {
	            var definition = __webpack_require__(157).definition;
	            Object.defineProperty(prototype, 'mask', definition);
	            return this.mask;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(157).definition;
	            Object.defineProperty(prototype, 'mask', definition);
	            this.mask = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'maxHeight', {
	        get: function () {
	            var definition = __webpack_require__(158).definition;
	            Object.defineProperty(prototype, 'maxHeight', definition);
	            return this.maxHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(158).definition;
	            Object.defineProperty(prototype, 'maxHeight', definition);
	            this.maxHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'max-height', {
	        get: function () {
	            var definition = __webpack_require__(158).definition;
	            Object.defineProperty(prototype, 'maxHeight', definition);
	            return this.maxHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(158).definition;
	            Object.defineProperty(prototype, 'maxHeight', definition);
	            this.maxHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'maxWidth', {
	        get: function () {
	            var definition = __webpack_require__(159).definition;
	            Object.defineProperty(prototype, 'maxWidth', definition);
	            return this.maxWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(159).definition;
	            Object.defineProperty(prototype, 'maxWidth', definition);
	            this.maxWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'max-width', {
	        get: function () {
	            var definition = __webpack_require__(159).definition;
	            Object.defineProperty(prototype, 'maxWidth', definition);
	            return this.maxWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(159).definition;
	            Object.defineProperty(prototype, 'maxWidth', definition);
	            this.maxWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'minHeight', {
	        get: function () {
	            var definition = __webpack_require__(160).definition;
	            Object.defineProperty(prototype, 'minHeight', definition);
	            return this.minHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(160).definition;
	            Object.defineProperty(prototype, 'minHeight', definition);
	            this.minHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'min-height', {
	        get: function () {
	            var definition = __webpack_require__(160).definition;
	            Object.defineProperty(prototype, 'minHeight', definition);
	            return this.minHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(160).definition;
	            Object.defineProperty(prototype, 'minHeight', definition);
	            this.minHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'minWidth', {
	        get: function () {
	            var definition = __webpack_require__(161).definition;
	            Object.defineProperty(prototype, 'minWidth', definition);
	            return this.minWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(161).definition;
	            Object.defineProperty(prototype, 'minWidth', definition);
	            this.minWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'min-width', {
	        get: function () {
	            var definition = __webpack_require__(161).definition;
	            Object.defineProperty(prototype, 'minWidth', definition);
	            return this.minWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(161).definition;
	            Object.defineProperty(prototype, 'minWidth', definition);
	            this.minWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'opacity', {
	        get: function () {
	            var definition = __webpack_require__(162).definition;
	            Object.defineProperty(prototype, 'opacity', definition);
	            return this.opacity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(162).definition;
	            Object.defineProperty(prototype, 'opacity', definition);
	            this.opacity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'orphans', {
	        get: function () {
	            var definition = __webpack_require__(163).definition;
	            Object.defineProperty(prototype, 'orphans', definition);
	            return this.orphans;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(163).definition;
	            Object.defineProperty(prototype, 'orphans', definition);
	            this.orphans = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'outline', {
	        get: function () {
	            var definition = __webpack_require__(164).definition;
	            Object.defineProperty(prototype, 'outline', definition);
	            return this.outline;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(164).definition;
	            Object.defineProperty(prototype, 'outline', definition);
	            this.outline = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'outlineColor', {
	        get: function () {
	            var definition = __webpack_require__(165).definition;
	            Object.defineProperty(prototype, 'outlineColor', definition);
	            return this.outlineColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(165).definition;
	            Object.defineProperty(prototype, 'outlineColor', definition);
	            this.outlineColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'outline-color', {
	        get: function () {
	            var definition = __webpack_require__(165).definition;
	            Object.defineProperty(prototype, 'outlineColor', definition);
	            return this.outlineColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(165).definition;
	            Object.defineProperty(prototype, 'outlineColor', definition);
	            this.outlineColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'outlineOffset', {
	        get: function () {
	            var definition = __webpack_require__(166).definition;
	            Object.defineProperty(prototype, 'outlineOffset', definition);
	            return this.outlineOffset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(166).definition;
	            Object.defineProperty(prototype, 'outlineOffset', definition);
	            this.outlineOffset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'outline-offset', {
	        get: function () {
	            var definition = __webpack_require__(166).definition;
	            Object.defineProperty(prototype, 'outlineOffset', definition);
	            return this.outlineOffset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(166).definition;
	            Object.defineProperty(prototype, 'outlineOffset', definition);
	            this.outlineOffset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'outlineStyle', {
	        get: function () {
	            var definition = __webpack_require__(167).definition;
	            Object.defineProperty(prototype, 'outlineStyle', definition);
	            return this.outlineStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(167).definition;
	            Object.defineProperty(prototype, 'outlineStyle', definition);
	            this.outlineStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'outline-style', {
	        get: function () {
	            var definition = __webpack_require__(167).definition;
	            Object.defineProperty(prototype, 'outlineStyle', definition);
	            return this.outlineStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(167).definition;
	            Object.defineProperty(prototype, 'outlineStyle', definition);
	            this.outlineStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'outlineWidth', {
	        get: function () {
	            var definition = __webpack_require__(168).definition;
	            Object.defineProperty(prototype, 'outlineWidth', definition);
	            return this.outlineWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(168).definition;
	            Object.defineProperty(prototype, 'outlineWidth', definition);
	            this.outlineWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'outline-width', {
	        get: function () {
	            var definition = __webpack_require__(168).definition;
	            Object.defineProperty(prototype, 'outlineWidth', definition);
	            return this.outlineWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(168).definition;
	            Object.defineProperty(prototype, 'outlineWidth', definition);
	            this.outlineWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'overflow', {
	        get: function () {
	            var definition = __webpack_require__(169).definition;
	            Object.defineProperty(prototype, 'overflow', definition);
	            return this.overflow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(169).definition;
	            Object.defineProperty(prototype, 'overflow', definition);
	            this.overflow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'overflowX', {
	        get: function () {
	            var definition = __webpack_require__(170).definition;
	            Object.defineProperty(prototype, 'overflowX', definition);
	            return this.overflowX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(170).definition;
	            Object.defineProperty(prototype, 'overflowX', definition);
	            this.overflowX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'overflow-x', {
	        get: function () {
	            var definition = __webpack_require__(170).definition;
	            Object.defineProperty(prototype, 'overflowX', definition);
	            return this.overflowX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(170).definition;
	            Object.defineProperty(prototype, 'overflowX', definition);
	            this.overflowX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'overflowY', {
	        get: function () {
	            var definition = __webpack_require__(171).definition;
	            Object.defineProperty(prototype, 'overflowY', definition);
	            return this.overflowY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(171).definition;
	            Object.defineProperty(prototype, 'overflowY', definition);
	            this.overflowY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'overflow-y', {
	        get: function () {
	            var definition = __webpack_require__(171).definition;
	            Object.defineProperty(prototype, 'overflowY', definition);
	            return this.overflowY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(171).definition;
	            Object.defineProperty(prototype, 'overflowY', definition);
	            this.overflowY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'padding', {
	        get: function () {
	            var definition = __webpack_require__(172).definition;
	            Object.defineProperty(prototype, 'padding', definition);
	            return this.padding;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(172).definition;
	            Object.defineProperty(prototype, 'padding', definition);
	            this.padding = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'paddingBottom', {
	        get: function () {
	            var definition = __webpack_require__(173).definition;
	            Object.defineProperty(prototype, 'paddingBottom', definition);
	            return this.paddingBottom;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(173).definition;
	            Object.defineProperty(prototype, 'paddingBottom', definition);
	            this.paddingBottom = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'padding-bottom', {
	        get: function () {
	            var definition = __webpack_require__(173).definition;
	            Object.defineProperty(prototype, 'paddingBottom', definition);
	            return this.paddingBottom;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(173).definition;
	            Object.defineProperty(prototype, 'paddingBottom', definition);
	            this.paddingBottom = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'paddingLeft', {
	        get: function () {
	            var definition = __webpack_require__(174).definition;
	            Object.defineProperty(prototype, 'paddingLeft', definition);
	            return this.paddingLeft;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(174).definition;
	            Object.defineProperty(prototype, 'paddingLeft', definition);
	            this.paddingLeft = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'padding-left', {
	        get: function () {
	            var definition = __webpack_require__(174).definition;
	            Object.defineProperty(prototype, 'paddingLeft', definition);
	            return this.paddingLeft;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(174).definition;
	            Object.defineProperty(prototype, 'paddingLeft', definition);
	            this.paddingLeft = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'paddingRight', {
	        get: function () {
	            var definition = __webpack_require__(175).definition;
	            Object.defineProperty(prototype, 'paddingRight', definition);
	            return this.paddingRight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(175).definition;
	            Object.defineProperty(prototype, 'paddingRight', definition);
	            this.paddingRight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'padding-right', {
	        get: function () {
	            var definition = __webpack_require__(175).definition;
	            Object.defineProperty(prototype, 'paddingRight', definition);
	            return this.paddingRight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(175).definition;
	            Object.defineProperty(prototype, 'paddingRight', definition);
	            this.paddingRight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'paddingTop', {
	        get: function () {
	            var definition = __webpack_require__(176).definition;
	            Object.defineProperty(prototype, 'paddingTop', definition);
	            return this.paddingTop;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(176).definition;
	            Object.defineProperty(prototype, 'paddingTop', definition);
	            this.paddingTop = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'padding-top', {
	        get: function () {
	            var definition = __webpack_require__(176).definition;
	            Object.defineProperty(prototype, 'paddingTop', definition);
	            return this.paddingTop;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(176).definition;
	            Object.defineProperty(prototype, 'paddingTop', definition);
	            this.paddingTop = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'page', {
	        get: function () {
	            var definition = __webpack_require__(177).definition;
	            Object.defineProperty(prototype, 'page', definition);
	            return this.page;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(177).definition;
	            Object.defineProperty(prototype, 'page', definition);
	            this.page = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pageBreakAfter', {
	        get: function () {
	            var definition = __webpack_require__(178).definition;
	            Object.defineProperty(prototype, 'pageBreakAfter', definition);
	            return this.pageBreakAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(178).definition;
	            Object.defineProperty(prototype, 'pageBreakAfter', definition);
	            this.pageBreakAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'page-break-after', {
	        get: function () {
	            var definition = __webpack_require__(178).definition;
	            Object.defineProperty(prototype, 'pageBreakAfter', definition);
	            return this.pageBreakAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(178).definition;
	            Object.defineProperty(prototype, 'pageBreakAfter', definition);
	            this.pageBreakAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pageBreakBefore', {
	        get: function () {
	            var definition = __webpack_require__(179).definition;
	            Object.defineProperty(prototype, 'pageBreakBefore', definition);
	            return this.pageBreakBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(179).definition;
	            Object.defineProperty(prototype, 'pageBreakBefore', definition);
	            this.pageBreakBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'page-break-before', {
	        get: function () {
	            var definition = __webpack_require__(179).definition;
	            Object.defineProperty(prototype, 'pageBreakBefore', definition);
	            return this.pageBreakBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(179).definition;
	            Object.defineProperty(prototype, 'pageBreakBefore', definition);
	            this.pageBreakBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pageBreakInside', {
	        get: function () {
	            var definition = __webpack_require__(180).definition;
	            Object.defineProperty(prototype, 'pageBreakInside', definition);
	            return this.pageBreakInside;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(180).definition;
	            Object.defineProperty(prototype, 'pageBreakInside', definition);
	            this.pageBreakInside = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'page-break-inside', {
	        get: function () {
	            var definition = __webpack_require__(180).definition;
	            Object.defineProperty(prototype, 'pageBreakInside', definition);
	            return this.pageBreakInside;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(180).definition;
	            Object.defineProperty(prototype, 'pageBreakInside', definition);
	            this.pageBreakInside = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pause', {
	        get: function () {
	            var definition = __webpack_require__(181).definition;
	            Object.defineProperty(prototype, 'pause', definition);
	            return this.pause;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(181).definition;
	            Object.defineProperty(prototype, 'pause', definition);
	            this.pause = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pauseAfter', {
	        get: function () {
	            var definition = __webpack_require__(182).definition;
	            Object.defineProperty(prototype, 'pauseAfter', definition);
	            return this.pauseAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(182).definition;
	            Object.defineProperty(prototype, 'pauseAfter', definition);
	            this.pauseAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pause-after', {
	        get: function () {
	            var definition = __webpack_require__(182).definition;
	            Object.defineProperty(prototype, 'pauseAfter', definition);
	            return this.pauseAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(182).definition;
	            Object.defineProperty(prototype, 'pauseAfter', definition);
	            this.pauseAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pauseBefore', {
	        get: function () {
	            var definition = __webpack_require__(183).definition;
	            Object.defineProperty(prototype, 'pauseBefore', definition);
	            return this.pauseBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(183).definition;
	            Object.defineProperty(prototype, 'pauseBefore', definition);
	            this.pauseBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pause-before', {
	        get: function () {
	            var definition = __webpack_require__(183).definition;
	            Object.defineProperty(prototype, 'pauseBefore', definition);
	            return this.pauseBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(183).definition;
	            Object.defineProperty(prototype, 'pauseBefore', definition);
	            this.pauseBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pitch', {
	        get: function () {
	            var definition = __webpack_require__(184).definition;
	            Object.defineProperty(prototype, 'pitch', definition);
	            return this.pitch;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(184).definition;
	            Object.defineProperty(prototype, 'pitch', definition);
	            this.pitch = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pitchRange', {
	        get: function () {
	            var definition = __webpack_require__(185).definition;
	            Object.defineProperty(prototype, 'pitchRange', definition);
	            return this.pitchRange;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(185).definition;
	            Object.defineProperty(prototype, 'pitchRange', definition);
	            this.pitchRange = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pitch-range', {
	        get: function () {
	            var definition = __webpack_require__(185).definition;
	            Object.defineProperty(prototype, 'pitchRange', definition);
	            return this.pitchRange;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(185).definition;
	            Object.defineProperty(prototype, 'pitchRange', definition);
	            this.pitchRange = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'playDuring', {
	        get: function () {
	            var definition = __webpack_require__(186).definition;
	            Object.defineProperty(prototype, 'playDuring', definition);
	            return this.playDuring;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(186).definition;
	            Object.defineProperty(prototype, 'playDuring', definition);
	            this.playDuring = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'play-during', {
	        get: function () {
	            var definition = __webpack_require__(186).definition;
	            Object.defineProperty(prototype, 'playDuring', definition);
	            return this.playDuring;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(186).definition;
	            Object.defineProperty(prototype, 'playDuring', definition);
	            this.playDuring = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pointerEvents', {
	        get: function () {
	            var definition = __webpack_require__(187).definition;
	            Object.defineProperty(prototype, 'pointerEvents', definition);
	            return this.pointerEvents;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(187).definition;
	            Object.defineProperty(prototype, 'pointerEvents', definition);
	            this.pointerEvents = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'pointer-events', {
	        get: function () {
	            var definition = __webpack_require__(187).definition;
	            Object.defineProperty(prototype, 'pointerEvents', definition);
	            return this.pointerEvents;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(187).definition;
	            Object.defineProperty(prototype, 'pointerEvents', definition);
	            this.pointerEvents = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'position', {
	        get: function () {
	            var definition = __webpack_require__(188).definition;
	            Object.defineProperty(prototype, 'position', definition);
	            return this.position;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(188).definition;
	            Object.defineProperty(prototype, 'position', definition);
	            this.position = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'quotes', {
	        get: function () {
	            var definition = __webpack_require__(189).definition;
	            Object.defineProperty(prototype, 'quotes', definition);
	            return this.quotes;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(189).definition;
	            Object.defineProperty(prototype, 'quotes', definition);
	            this.quotes = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'resize', {
	        get: function () {
	            var definition = __webpack_require__(190).definition;
	            Object.defineProperty(prototype, 'resize', definition);
	            return this.resize;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(190).definition;
	            Object.defineProperty(prototype, 'resize', definition);
	            this.resize = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'richness', {
	        get: function () {
	            var definition = __webpack_require__(191).definition;
	            Object.defineProperty(prototype, 'richness', definition);
	            return this.richness;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(191).definition;
	            Object.defineProperty(prototype, 'richness', definition);
	            this.richness = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'right', {
	        get: function () {
	            var definition = __webpack_require__(192).definition;
	            Object.defineProperty(prototype, 'right', definition);
	            return this.right;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(192).definition;
	            Object.defineProperty(prototype, 'right', definition);
	            this.right = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'shapeRendering', {
	        get: function () {
	            var definition = __webpack_require__(193).definition;
	            Object.defineProperty(prototype, 'shapeRendering', definition);
	            return this.shapeRendering;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(193).definition;
	            Object.defineProperty(prototype, 'shapeRendering', definition);
	            this.shapeRendering = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'shape-rendering', {
	        get: function () {
	            var definition = __webpack_require__(193).definition;
	            Object.defineProperty(prototype, 'shapeRendering', definition);
	            return this.shapeRendering;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(193).definition;
	            Object.defineProperty(prototype, 'shapeRendering', definition);
	            this.shapeRendering = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'size', {
	        get: function () {
	            var definition = __webpack_require__(194).definition;
	            Object.defineProperty(prototype, 'size', definition);
	            return this.size;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(194).definition;
	            Object.defineProperty(prototype, 'size', definition);
	            this.size = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'speak', {
	        get: function () {
	            var definition = __webpack_require__(195).definition;
	            Object.defineProperty(prototype, 'speak', definition);
	            return this.speak;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(195).definition;
	            Object.defineProperty(prototype, 'speak', definition);
	            this.speak = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'speakHeader', {
	        get: function () {
	            var definition = __webpack_require__(196).definition;
	            Object.defineProperty(prototype, 'speakHeader', definition);
	            return this.speakHeader;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(196).definition;
	            Object.defineProperty(prototype, 'speakHeader', definition);
	            this.speakHeader = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'speak-header', {
	        get: function () {
	            var definition = __webpack_require__(196).definition;
	            Object.defineProperty(prototype, 'speakHeader', definition);
	            return this.speakHeader;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(196).definition;
	            Object.defineProperty(prototype, 'speakHeader', definition);
	            this.speakHeader = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'speakNumeral', {
	        get: function () {
	            var definition = __webpack_require__(197).definition;
	            Object.defineProperty(prototype, 'speakNumeral', definition);
	            return this.speakNumeral;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(197).definition;
	            Object.defineProperty(prototype, 'speakNumeral', definition);
	            this.speakNumeral = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'speak-numeral', {
	        get: function () {
	            var definition = __webpack_require__(197).definition;
	            Object.defineProperty(prototype, 'speakNumeral', definition);
	            return this.speakNumeral;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(197).definition;
	            Object.defineProperty(prototype, 'speakNumeral', definition);
	            this.speakNumeral = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'speakPunctuation', {
	        get: function () {
	            var definition = __webpack_require__(198).definition;
	            Object.defineProperty(prototype, 'speakPunctuation', definition);
	            return this.speakPunctuation;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(198).definition;
	            Object.defineProperty(prototype, 'speakPunctuation', definition);
	            this.speakPunctuation = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'speak-punctuation', {
	        get: function () {
	            var definition = __webpack_require__(198).definition;
	            Object.defineProperty(prototype, 'speakPunctuation', definition);
	            return this.speakPunctuation;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(198).definition;
	            Object.defineProperty(prototype, 'speakPunctuation', definition);
	            this.speakPunctuation = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'speechRate', {
	        get: function () {
	            var definition = __webpack_require__(199).definition;
	            Object.defineProperty(prototype, 'speechRate', definition);
	            return this.speechRate;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(199).definition;
	            Object.defineProperty(prototype, 'speechRate', definition);
	            this.speechRate = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'speech-rate', {
	        get: function () {
	            var definition = __webpack_require__(199).definition;
	            Object.defineProperty(prototype, 'speechRate', definition);
	            return this.speechRate;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(199).definition;
	            Object.defineProperty(prototype, 'speechRate', definition);
	            this.speechRate = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'src', {
	        get: function () {
	            var definition = __webpack_require__(200).definition;
	            Object.defineProperty(prototype, 'src', definition);
	            return this.src;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(200).definition;
	            Object.defineProperty(prototype, 'src', definition);
	            this.src = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stopColor', {
	        get: function () {
	            var definition = __webpack_require__(201).definition;
	            Object.defineProperty(prototype, 'stopColor', definition);
	            return this.stopColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(201).definition;
	            Object.defineProperty(prototype, 'stopColor', definition);
	            this.stopColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stop-color', {
	        get: function () {
	            var definition = __webpack_require__(201).definition;
	            Object.defineProperty(prototype, 'stopColor', definition);
	            return this.stopColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(201).definition;
	            Object.defineProperty(prototype, 'stopColor', definition);
	            this.stopColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stopOpacity', {
	        get: function () {
	            var definition = __webpack_require__(202).definition;
	            Object.defineProperty(prototype, 'stopOpacity', definition);
	            return this.stopOpacity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(202).definition;
	            Object.defineProperty(prototype, 'stopOpacity', definition);
	            this.stopOpacity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stop-opacity', {
	        get: function () {
	            var definition = __webpack_require__(202).definition;
	            Object.defineProperty(prototype, 'stopOpacity', definition);
	            return this.stopOpacity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(202).definition;
	            Object.defineProperty(prototype, 'stopOpacity', definition);
	            this.stopOpacity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stress', {
	        get: function () {
	            var definition = __webpack_require__(203).definition;
	            Object.defineProperty(prototype, 'stress', definition);
	            return this.stress;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(203).definition;
	            Object.defineProperty(prototype, 'stress', definition);
	            this.stress = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stroke', {
	        get: function () {
	            var definition = __webpack_require__(204).definition;
	            Object.defineProperty(prototype, 'stroke', definition);
	            return this.stroke;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(204).definition;
	            Object.defineProperty(prototype, 'stroke', definition);
	            this.stroke = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'strokeDasharray', {
	        get: function () {
	            var definition = __webpack_require__(205).definition;
	            Object.defineProperty(prototype, 'strokeDasharray', definition);
	            return this.strokeDasharray;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(205).definition;
	            Object.defineProperty(prototype, 'strokeDasharray', definition);
	            this.strokeDasharray = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stroke-dasharray', {
	        get: function () {
	            var definition = __webpack_require__(205).definition;
	            Object.defineProperty(prototype, 'strokeDasharray', definition);
	            return this.strokeDasharray;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(205).definition;
	            Object.defineProperty(prototype, 'strokeDasharray', definition);
	            this.strokeDasharray = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'strokeDashoffset', {
	        get: function () {
	            var definition = __webpack_require__(206).definition;
	            Object.defineProperty(prototype, 'strokeDashoffset', definition);
	            return this.strokeDashoffset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(206).definition;
	            Object.defineProperty(prototype, 'strokeDashoffset', definition);
	            this.strokeDashoffset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stroke-dashoffset', {
	        get: function () {
	            var definition = __webpack_require__(206).definition;
	            Object.defineProperty(prototype, 'strokeDashoffset', definition);
	            return this.strokeDashoffset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(206).definition;
	            Object.defineProperty(prototype, 'strokeDashoffset', definition);
	            this.strokeDashoffset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'strokeLinecap', {
	        get: function () {
	            var definition = __webpack_require__(207).definition;
	            Object.defineProperty(prototype, 'strokeLinecap', definition);
	            return this.strokeLinecap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(207).definition;
	            Object.defineProperty(prototype, 'strokeLinecap', definition);
	            this.strokeLinecap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stroke-linecap', {
	        get: function () {
	            var definition = __webpack_require__(207).definition;
	            Object.defineProperty(prototype, 'strokeLinecap', definition);
	            return this.strokeLinecap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(207).definition;
	            Object.defineProperty(prototype, 'strokeLinecap', definition);
	            this.strokeLinecap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'strokeLinejoin', {
	        get: function () {
	            var definition = __webpack_require__(208).definition;
	            Object.defineProperty(prototype, 'strokeLinejoin', definition);
	            return this.strokeLinejoin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(208).definition;
	            Object.defineProperty(prototype, 'strokeLinejoin', definition);
	            this.strokeLinejoin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stroke-linejoin', {
	        get: function () {
	            var definition = __webpack_require__(208).definition;
	            Object.defineProperty(prototype, 'strokeLinejoin', definition);
	            return this.strokeLinejoin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(208).definition;
	            Object.defineProperty(prototype, 'strokeLinejoin', definition);
	            this.strokeLinejoin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'strokeMiterlimit', {
	        get: function () {
	            var definition = __webpack_require__(209).definition;
	            Object.defineProperty(prototype, 'strokeMiterlimit', definition);
	            return this.strokeMiterlimit;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(209).definition;
	            Object.defineProperty(prototype, 'strokeMiterlimit', definition);
	            this.strokeMiterlimit = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stroke-miterlimit', {
	        get: function () {
	            var definition = __webpack_require__(209).definition;
	            Object.defineProperty(prototype, 'strokeMiterlimit', definition);
	            return this.strokeMiterlimit;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(209).definition;
	            Object.defineProperty(prototype, 'strokeMiterlimit', definition);
	            this.strokeMiterlimit = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'strokeOpacity', {
	        get: function () {
	            var definition = __webpack_require__(210).definition;
	            Object.defineProperty(prototype, 'strokeOpacity', definition);
	            return this.strokeOpacity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(210).definition;
	            Object.defineProperty(prototype, 'strokeOpacity', definition);
	            this.strokeOpacity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stroke-opacity', {
	        get: function () {
	            var definition = __webpack_require__(210).definition;
	            Object.defineProperty(prototype, 'strokeOpacity', definition);
	            return this.strokeOpacity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(210).definition;
	            Object.defineProperty(prototype, 'strokeOpacity', definition);
	            this.strokeOpacity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'strokeWidth', {
	        get: function () {
	            var definition = __webpack_require__(211).definition;
	            Object.defineProperty(prototype, 'strokeWidth', definition);
	            return this.strokeWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(211).definition;
	            Object.defineProperty(prototype, 'strokeWidth', definition);
	            this.strokeWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'stroke-width', {
	        get: function () {
	            var definition = __webpack_require__(211).definition;
	            Object.defineProperty(prototype, 'strokeWidth', definition);
	            return this.strokeWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(211).definition;
	            Object.defineProperty(prototype, 'strokeWidth', definition);
	            this.strokeWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'tableLayout', {
	        get: function () {
	            var definition = __webpack_require__(212).definition;
	            Object.defineProperty(prototype, 'tableLayout', definition);
	            return this.tableLayout;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(212).definition;
	            Object.defineProperty(prototype, 'tableLayout', definition);
	            this.tableLayout = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'table-layout', {
	        get: function () {
	            var definition = __webpack_require__(212).definition;
	            Object.defineProperty(prototype, 'tableLayout', definition);
	            return this.tableLayout;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(212).definition;
	            Object.defineProperty(prototype, 'tableLayout', definition);
	            this.tableLayout = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textAlign', {
	        get: function () {
	            var definition = __webpack_require__(213).definition;
	            Object.defineProperty(prototype, 'textAlign', definition);
	            return this.textAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(213).definition;
	            Object.defineProperty(prototype, 'textAlign', definition);
	            this.textAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-align', {
	        get: function () {
	            var definition = __webpack_require__(213).definition;
	            Object.defineProperty(prototype, 'textAlign', definition);
	            return this.textAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(213).definition;
	            Object.defineProperty(prototype, 'textAlign', definition);
	            this.textAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textAnchor', {
	        get: function () {
	            var definition = __webpack_require__(214).definition;
	            Object.defineProperty(prototype, 'textAnchor', definition);
	            return this.textAnchor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(214).definition;
	            Object.defineProperty(prototype, 'textAnchor', definition);
	            this.textAnchor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-anchor', {
	        get: function () {
	            var definition = __webpack_require__(214).definition;
	            Object.defineProperty(prototype, 'textAnchor', definition);
	            return this.textAnchor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(214).definition;
	            Object.defineProperty(prototype, 'textAnchor', definition);
	            this.textAnchor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textDecoration', {
	        get: function () {
	            var definition = __webpack_require__(215).definition;
	            Object.defineProperty(prototype, 'textDecoration', definition);
	            return this.textDecoration;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(215).definition;
	            Object.defineProperty(prototype, 'textDecoration', definition);
	            this.textDecoration = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-decoration', {
	        get: function () {
	            var definition = __webpack_require__(215).definition;
	            Object.defineProperty(prototype, 'textDecoration', definition);
	            return this.textDecoration;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(215).definition;
	            Object.defineProperty(prototype, 'textDecoration', definition);
	            this.textDecoration = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textIndent', {
	        get: function () {
	            var definition = __webpack_require__(216).definition;
	            Object.defineProperty(prototype, 'textIndent', definition);
	            return this.textIndent;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(216).definition;
	            Object.defineProperty(prototype, 'textIndent', definition);
	            this.textIndent = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-indent', {
	        get: function () {
	            var definition = __webpack_require__(216).definition;
	            Object.defineProperty(prototype, 'textIndent', definition);
	            return this.textIndent;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(216).definition;
	            Object.defineProperty(prototype, 'textIndent', definition);
	            this.textIndent = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textLineThrough', {
	        get: function () {
	            var definition = __webpack_require__(217).definition;
	            Object.defineProperty(prototype, 'textLineThrough', definition);
	            return this.textLineThrough;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(217).definition;
	            Object.defineProperty(prototype, 'textLineThrough', definition);
	            this.textLineThrough = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-line-through', {
	        get: function () {
	            var definition = __webpack_require__(217).definition;
	            Object.defineProperty(prototype, 'textLineThrough', definition);
	            return this.textLineThrough;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(217).definition;
	            Object.defineProperty(prototype, 'textLineThrough', definition);
	            this.textLineThrough = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textLineThroughColor', {
	        get: function () {
	            var definition = __webpack_require__(218).definition;
	            Object.defineProperty(prototype, 'textLineThroughColor', definition);
	            return this.textLineThroughColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(218).definition;
	            Object.defineProperty(prototype, 'textLineThroughColor', definition);
	            this.textLineThroughColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-line-through-color', {
	        get: function () {
	            var definition = __webpack_require__(218).definition;
	            Object.defineProperty(prototype, 'textLineThroughColor', definition);
	            return this.textLineThroughColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(218).definition;
	            Object.defineProperty(prototype, 'textLineThroughColor', definition);
	            this.textLineThroughColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textLineThroughMode', {
	        get: function () {
	            var definition = __webpack_require__(219).definition;
	            Object.defineProperty(prototype, 'textLineThroughMode', definition);
	            return this.textLineThroughMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(219).definition;
	            Object.defineProperty(prototype, 'textLineThroughMode', definition);
	            this.textLineThroughMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-line-through-mode', {
	        get: function () {
	            var definition = __webpack_require__(219).definition;
	            Object.defineProperty(prototype, 'textLineThroughMode', definition);
	            return this.textLineThroughMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(219).definition;
	            Object.defineProperty(prototype, 'textLineThroughMode', definition);
	            this.textLineThroughMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textLineThroughStyle', {
	        get: function () {
	            var definition = __webpack_require__(220).definition;
	            Object.defineProperty(prototype, 'textLineThroughStyle', definition);
	            return this.textLineThroughStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(220).definition;
	            Object.defineProperty(prototype, 'textLineThroughStyle', definition);
	            this.textLineThroughStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-line-through-style', {
	        get: function () {
	            var definition = __webpack_require__(220).definition;
	            Object.defineProperty(prototype, 'textLineThroughStyle', definition);
	            return this.textLineThroughStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(220).definition;
	            Object.defineProperty(prototype, 'textLineThroughStyle', definition);
	            this.textLineThroughStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textLineThroughWidth', {
	        get: function () {
	            var definition = __webpack_require__(221).definition;
	            Object.defineProperty(prototype, 'textLineThroughWidth', definition);
	            return this.textLineThroughWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(221).definition;
	            Object.defineProperty(prototype, 'textLineThroughWidth', definition);
	            this.textLineThroughWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-line-through-width', {
	        get: function () {
	            var definition = __webpack_require__(221).definition;
	            Object.defineProperty(prototype, 'textLineThroughWidth', definition);
	            return this.textLineThroughWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(221).definition;
	            Object.defineProperty(prototype, 'textLineThroughWidth', definition);
	            this.textLineThroughWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textOverflow', {
	        get: function () {
	            var definition = __webpack_require__(222).definition;
	            Object.defineProperty(prototype, 'textOverflow', definition);
	            return this.textOverflow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(222).definition;
	            Object.defineProperty(prototype, 'textOverflow', definition);
	            this.textOverflow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-overflow', {
	        get: function () {
	            var definition = __webpack_require__(222).definition;
	            Object.defineProperty(prototype, 'textOverflow', definition);
	            return this.textOverflow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(222).definition;
	            Object.defineProperty(prototype, 'textOverflow', definition);
	            this.textOverflow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textOverline', {
	        get: function () {
	            var definition = __webpack_require__(223).definition;
	            Object.defineProperty(prototype, 'textOverline', definition);
	            return this.textOverline;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(223).definition;
	            Object.defineProperty(prototype, 'textOverline', definition);
	            this.textOverline = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-overline', {
	        get: function () {
	            var definition = __webpack_require__(223).definition;
	            Object.defineProperty(prototype, 'textOverline', definition);
	            return this.textOverline;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(223).definition;
	            Object.defineProperty(prototype, 'textOverline', definition);
	            this.textOverline = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textOverlineColor', {
	        get: function () {
	            var definition = __webpack_require__(224).definition;
	            Object.defineProperty(prototype, 'textOverlineColor', definition);
	            return this.textOverlineColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(224).definition;
	            Object.defineProperty(prototype, 'textOverlineColor', definition);
	            this.textOverlineColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-overline-color', {
	        get: function () {
	            var definition = __webpack_require__(224).definition;
	            Object.defineProperty(prototype, 'textOverlineColor', definition);
	            return this.textOverlineColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(224).definition;
	            Object.defineProperty(prototype, 'textOverlineColor', definition);
	            this.textOverlineColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textOverlineMode', {
	        get: function () {
	            var definition = __webpack_require__(225).definition;
	            Object.defineProperty(prototype, 'textOverlineMode', definition);
	            return this.textOverlineMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(225).definition;
	            Object.defineProperty(prototype, 'textOverlineMode', definition);
	            this.textOverlineMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-overline-mode', {
	        get: function () {
	            var definition = __webpack_require__(225).definition;
	            Object.defineProperty(prototype, 'textOverlineMode', definition);
	            return this.textOverlineMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(225).definition;
	            Object.defineProperty(prototype, 'textOverlineMode', definition);
	            this.textOverlineMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textOverlineStyle', {
	        get: function () {
	            var definition = __webpack_require__(226).definition;
	            Object.defineProperty(prototype, 'textOverlineStyle', definition);
	            return this.textOverlineStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(226).definition;
	            Object.defineProperty(prototype, 'textOverlineStyle', definition);
	            this.textOverlineStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-overline-style', {
	        get: function () {
	            var definition = __webpack_require__(226).definition;
	            Object.defineProperty(prototype, 'textOverlineStyle', definition);
	            return this.textOverlineStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(226).definition;
	            Object.defineProperty(prototype, 'textOverlineStyle', definition);
	            this.textOverlineStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textOverlineWidth', {
	        get: function () {
	            var definition = __webpack_require__(227).definition;
	            Object.defineProperty(prototype, 'textOverlineWidth', definition);
	            return this.textOverlineWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(227).definition;
	            Object.defineProperty(prototype, 'textOverlineWidth', definition);
	            this.textOverlineWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-overline-width', {
	        get: function () {
	            var definition = __webpack_require__(227).definition;
	            Object.defineProperty(prototype, 'textOverlineWidth', definition);
	            return this.textOverlineWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(227).definition;
	            Object.defineProperty(prototype, 'textOverlineWidth', definition);
	            this.textOverlineWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textRendering', {
	        get: function () {
	            var definition = __webpack_require__(228).definition;
	            Object.defineProperty(prototype, 'textRendering', definition);
	            return this.textRendering;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(228).definition;
	            Object.defineProperty(prototype, 'textRendering', definition);
	            this.textRendering = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-rendering', {
	        get: function () {
	            var definition = __webpack_require__(228).definition;
	            Object.defineProperty(prototype, 'textRendering', definition);
	            return this.textRendering;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(228).definition;
	            Object.defineProperty(prototype, 'textRendering', definition);
	            this.textRendering = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textShadow', {
	        get: function () {
	            var definition = __webpack_require__(229).definition;
	            Object.defineProperty(prototype, 'textShadow', definition);
	            return this.textShadow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(229).definition;
	            Object.defineProperty(prototype, 'textShadow', definition);
	            this.textShadow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-shadow', {
	        get: function () {
	            var definition = __webpack_require__(229).definition;
	            Object.defineProperty(prototype, 'textShadow', definition);
	            return this.textShadow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(229).definition;
	            Object.defineProperty(prototype, 'textShadow', definition);
	            this.textShadow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textTransform', {
	        get: function () {
	            var definition = __webpack_require__(230).definition;
	            Object.defineProperty(prototype, 'textTransform', definition);
	            return this.textTransform;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(230).definition;
	            Object.defineProperty(prototype, 'textTransform', definition);
	            this.textTransform = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-transform', {
	        get: function () {
	            var definition = __webpack_require__(230).definition;
	            Object.defineProperty(prototype, 'textTransform', definition);
	            return this.textTransform;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(230).definition;
	            Object.defineProperty(prototype, 'textTransform', definition);
	            this.textTransform = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textUnderline', {
	        get: function () {
	            var definition = __webpack_require__(231).definition;
	            Object.defineProperty(prototype, 'textUnderline', definition);
	            return this.textUnderline;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(231).definition;
	            Object.defineProperty(prototype, 'textUnderline', definition);
	            this.textUnderline = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-underline', {
	        get: function () {
	            var definition = __webpack_require__(231).definition;
	            Object.defineProperty(prototype, 'textUnderline', definition);
	            return this.textUnderline;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(231).definition;
	            Object.defineProperty(prototype, 'textUnderline', definition);
	            this.textUnderline = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textUnderlineColor', {
	        get: function () {
	            var definition = __webpack_require__(232).definition;
	            Object.defineProperty(prototype, 'textUnderlineColor', definition);
	            return this.textUnderlineColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(232).definition;
	            Object.defineProperty(prototype, 'textUnderlineColor', definition);
	            this.textUnderlineColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-underline-color', {
	        get: function () {
	            var definition = __webpack_require__(232).definition;
	            Object.defineProperty(prototype, 'textUnderlineColor', definition);
	            return this.textUnderlineColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(232).definition;
	            Object.defineProperty(prototype, 'textUnderlineColor', definition);
	            this.textUnderlineColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textUnderlineMode', {
	        get: function () {
	            var definition = __webpack_require__(233).definition;
	            Object.defineProperty(prototype, 'textUnderlineMode', definition);
	            return this.textUnderlineMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(233).definition;
	            Object.defineProperty(prototype, 'textUnderlineMode', definition);
	            this.textUnderlineMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-underline-mode', {
	        get: function () {
	            var definition = __webpack_require__(233).definition;
	            Object.defineProperty(prototype, 'textUnderlineMode', definition);
	            return this.textUnderlineMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(233).definition;
	            Object.defineProperty(prototype, 'textUnderlineMode', definition);
	            this.textUnderlineMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textUnderlineStyle', {
	        get: function () {
	            var definition = __webpack_require__(234).definition;
	            Object.defineProperty(prototype, 'textUnderlineStyle', definition);
	            return this.textUnderlineStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(234).definition;
	            Object.defineProperty(prototype, 'textUnderlineStyle', definition);
	            this.textUnderlineStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-underline-style', {
	        get: function () {
	            var definition = __webpack_require__(234).definition;
	            Object.defineProperty(prototype, 'textUnderlineStyle', definition);
	            return this.textUnderlineStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(234).definition;
	            Object.defineProperty(prototype, 'textUnderlineStyle', definition);
	            this.textUnderlineStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'textUnderlineWidth', {
	        get: function () {
	            var definition = __webpack_require__(235).definition;
	            Object.defineProperty(prototype, 'textUnderlineWidth', definition);
	            return this.textUnderlineWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(235).definition;
	            Object.defineProperty(prototype, 'textUnderlineWidth', definition);
	            this.textUnderlineWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'text-underline-width', {
	        get: function () {
	            var definition = __webpack_require__(235).definition;
	            Object.defineProperty(prototype, 'textUnderlineWidth', definition);
	            return this.textUnderlineWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(235).definition;
	            Object.defineProperty(prototype, 'textUnderlineWidth', definition);
	            this.textUnderlineWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'top', {
	        get: function () {
	            var definition = __webpack_require__(236).definition;
	            Object.defineProperty(prototype, 'top', definition);
	            return this.top;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(236).definition;
	            Object.defineProperty(prototype, 'top', definition);
	            this.top = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'unicodeBidi', {
	        get: function () {
	            var definition = __webpack_require__(237).definition;
	            Object.defineProperty(prototype, 'unicodeBidi', definition);
	            return this.unicodeBidi;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(237).definition;
	            Object.defineProperty(prototype, 'unicodeBidi', definition);
	            this.unicodeBidi = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'unicode-bidi', {
	        get: function () {
	            var definition = __webpack_require__(237).definition;
	            Object.defineProperty(prototype, 'unicodeBidi', definition);
	            return this.unicodeBidi;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(237).definition;
	            Object.defineProperty(prototype, 'unicodeBidi', definition);
	            this.unicodeBidi = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'unicodeRange', {
	        get: function () {
	            var definition = __webpack_require__(238).definition;
	            Object.defineProperty(prototype, 'unicodeRange', definition);
	            return this.unicodeRange;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(238).definition;
	            Object.defineProperty(prototype, 'unicodeRange', definition);
	            this.unicodeRange = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'unicode-range', {
	        get: function () {
	            var definition = __webpack_require__(238).definition;
	            Object.defineProperty(prototype, 'unicodeRange', definition);
	            return this.unicodeRange;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(238).definition;
	            Object.defineProperty(prototype, 'unicodeRange', definition);
	            this.unicodeRange = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'vectorEffect', {
	        get: function () {
	            var definition = __webpack_require__(239).definition;
	            Object.defineProperty(prototype, 'vectorEffect', definition);
	            return this.vectorEffect;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(239).definition;
	            Object.defineProperty(prototype, 'vectorEffect', definition);
	            this.vectorEffect = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'vector-effect', {
	        get: function () {
	            var definition = __webpack_require__(239).definition;
	            Object.defineProperty(prototype, 'vectorEffect', definition);
	            return this.vectorEffect;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(239).definition;
	            Object.defineProperty(prototype, 'vectorEffect', definition);
	            this.vectorEffect = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'verticalAlign', {
	        get: function () {
	            var definition = __webpack_require__(240).definition;
	            Object.defineProperty(prototype, 'verticalAlign', definition);
	            return this.verticalAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(240).definition;
	            Object.defineProperty(prototype, 'verticalAlign', definition);
	            this.verticalAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'vertical-align', {
	        get: function () {
	            var definition = __webpack_require__(240).definition;
	            Object.defineProperty(prototype, 'verticalAlign', definition);
	            return this.verticalAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(240).definition;
	            Object.defineProperty(prototype, 'verticalAlign', definition);
	            this.verticalAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'visibility', {
	        get: function () {
	            var definition = __webpack_require__(241).definition;
	            Object.defineProperty(prototype, 'visibility', definition);
	            return this.visibility;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(241).definition;
	            Object.defineProperty(prototype, 'visibility', definition);
	            this.visibility = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'voiceFamily', {
	        get: function () {
	            var definition = __webpack_require__(242).definition;
	            Object.defineProperty(prototype, 'voiceFamily', definition);
	            return this.voiceFamily;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(242).definition;
	            Object.defineProperty(prototype, 'voiceFamily', definition);
	            this.voiceFamily = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'voice-family', {
	        get: function () {
	            var definition = __webpack_require__(242).definition;
	            Object.defineProperty(prototype, 'voiceFamily', definition);
	            return this.voiceFamily;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(242).definition;
	            Object.defineProperty(prototype, 'voiceFamily', definition);
	            this.voiceFamily = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'volume', {
	        get: function () {
	            var definition = __webpack_require__(243).definition;
	            Object.defineProperty(prototype, 'volume', definition);
	            return this.volume;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(243).definition;
	            Object.defineProperty(prototype, 'volume', definition);
	            this.volume = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAnimation', {
	        get: function () {
	            var definition = __webpack_require__(244).definition;
	            Object.defineProperty(prototype, 'webkitAnimation', definition);
	            return this.webkitAnimation;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(244).definition;
	            Object.defineProperty(prototype, 'webkitAnimation', definition);
	            this.webkitAnimation = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-animation', {
	        get: function () {
	            var definition = __webpack_require__(244).definition;
	            Object.defineProperty(prototype, 'webkitAnimation', definition);
	            return this.webkitAnimation;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(244).definition;
	            Object.defineProperty(prototype, 'webkitAnimation', definition);
	            this.webkitAnimation = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAnimationDelay', {
	        get: function () {
	            var definition = __webpack_require__(245).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDelay', definition);
	            return this.webkitAnimationDelay;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(245).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDelay', definition);
	            this.webkitAnimationDelay = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-animation-delay', {
	        get: function () {
	            var definition = __webpack_require__(245).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDelay', definition);
	            return this.webkitAnimationDelay;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(245).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDelay', definition);
	            this.webkitAnimationDelay = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAnimationDirection', {
	        get: function () {
	            var definition = __webpack_require__(246).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDirection', definition);
	            return this.webkitAnimationDirection;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(246).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDirection', definition);
	            this.webkitAnimationDirection = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-animation-direction', {
	        get: function () {
	            var definition = __webpack_require__(246).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDirection', definition);
	            return this.webkitAnimationDirection;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(246).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDirection', definition);
	            this.webkitAnimationDirection = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAnimationDuration', {
	        get: function () {
	            var definition = __webpack_require__(247).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDuration', definition);
	            return this.webkitAnimationDuration;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(247).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDuration', definition);
	            this.webkitAnimationDuration = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-animation-duration', {
	        get: function () {
	            var definition = __webpack_require__(247).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDuration', definition);
	            return this.webkitAnimationDuration;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(247).definition;
	            Object.defineProperty(prototype, 'webkitAnimationDuration', definition);
	            this.webkitAnimationDuration = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAnimationFillMode', {
	        get: function () {
	            var definition = __webpack_require__(248).definition;
	            Object.defineProperty(prototype, 'webkitAnimationFillMode', definition);
	            return this.webkitAnimationFillMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(248).definition;
	            Object.defineProperty(prototype, 'webkitAnimationFillMode', definition);
	            this.webkitAnimationFillMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-animation-fill-mode', {
	        get: function () {
	            var definition = __webpack_require__(248).definition;
	            Object.defineProperty(prototype, 'webkitAnimationFillMode', definition);
	            return this.webkitAnimationFillMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(248).definition;
	            Object.defineProperty(prototype, 'webkitAnimationFillMode', definition);
	            this.webkitAnimationFillMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAnimationIterationCount', {
	        get: function () {
	            var definition = __webpack_require__(249).definition;
	            Object.defineProperty(prototype, 'webkitAnimationIterationCount', definition);
	            return this.webkitAnimationIterationCount;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(249).definition;
	            Object.defineProperty(prototype, 'webkitAnimationIterationCount', definition);
	            this.webkitAnimationIterationCount = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-animation-iteration-count', {
	        get: function () {
	            var definition = __webpack_require__(249).definition;
	            Object.defineProperty(prototype, 'webkitAnimationIterationCount', definition);
	            return this.webkitAnimationIterationCount;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(249).definition;
	            Object.defineProperty(prototype, 'webkitAnimationIterationCount', definition);
	            this.webkitAnimationIterationCount = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAnimationName', {
	        get: function () {
	            var definition = __webpack_require__(250).definition;
	            Object.defineProperty(prototype, 'webkitAnimationName', definition);
	            return this.webkitAnimationName;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(250).definition;
	            Object.defineProperty(prototype, 'webkitAnimationName', definition);
	            this.webkitAnimationName = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-animation-name', {
	        get: function () {
	            var definition = __webpack_require__(250).definition;
	            Object.defineProperty(prototype, 'webkitAnimationName', definition);
	            return this.webkitAnimationName;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(250).definition;
	            Object.defineProperty(prototype, 'webkitAnimationName', definition);
	            this.webkitAnimationName = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAnimationPlayState', {
	        get: function () {
	            var definition = __webpack_require__(251).definition;
	            Object.defineProperty(prototype, 'webkitAnimationPlayState', definition);
	            return this.webkitAnimationPlayState;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(251).definition;
	            Object.defineProperty(prototype, 'webkitAnimationPlayState', definition);
	            this.webkitAnimationPlayState = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-animation-play-state', {
	        get: function () {
	            var definition = __webpack_require__(251).definition;
	            Object.defineProperty(prototype, 'webkitAnimationPlayState', definition);
	            return this.webkitAnimationPlayState;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(251).definition;
	            Object.defineProperty(prototype, 'webkitAnimationPlayState', definition);
	            this.webkitAnimationPlayState = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAnimationTimingFunction', {
	        get: function () {
	            var definition = __webpack_require__(252).definition;
	            Object.defineProperty(prototype, 'webkitAnimationTimingFunction', definition);
	            return this.webkitAnimationTimingFunction;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(252).definition;
	            Object.defineProperty(prototype, 'webkitAnimationTimingFunction', definition);
	            this.webkitAnimationTimingFunction = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-animation-timing-function', {
	        get: function () {
	            var definition = __webpack_require__(252).definition;
	            Object.defineProperty(prototype, 'webkitAnimationTimingFunction', definition);
	            return this.webkitAnimationTimingFunction;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(252).definition;
	            Object.defineProperty(prototype, 'webkitAnimationTimingFunction', definition);
	            this.webkitAnimationTimingFunction = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAppearance', {
	        get: function () {
	            var definition = __webpack_require__(253).definition;
	            Object.defineProperty(prototype, 'webkitAppearance', definition);
	            return this.webkitAppearance;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(253).definition;
	            Object.defineProperty(prototype, 'webkitAppearance', definition);
	            this.webkitAppearance = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-appearance', {
	        get: function () {
	            var definition = __webpack_require__(253).definition;
	            Object.defineProperty(prototype, 'webkitAppearance', definition);
	            return this.webkitAppearance;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(253).definition;
	            Object.defineProperty(prototype, 'webkitAppearance', definition);
	            this.webkitAppearance = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitAspectRatio', {
	        get: function () {
	            var definition = __webpack_require__(254).definition;
	            Object.defineProperty(prototype, 'webkitAspectRatio', definition);
	            return this.webkitAspectRatio;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(254).definition;
	            Object.defineProperty(prototype, 'webkitAspectRatio', definition);
	            this.webkitAspectRatio = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-aspect-ratio', {
	        get: function () {
	            var definition = __webpack_require__(254).definition;
	            Object.defineProperty(prototype, 'webkitAspectRatio', definition);
	            return this.webkitAspectRatio;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(254).definition;
	            Object.defineProperty(prototype, 'webkitAspectRatio', definition);
	            this.webkitAspectRatio = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBackfaceVisibility', {
	        get: function () {
	            var definition = __webpack_require__(255).definition;
	            Object.defineProperty(prototype, 'webkitBackfaceVisibility', definition);
	            return this.webkitBackfaceVisibility;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(255).definition;
	            Object.defineProperty(prototype, 'webkitBackfaceVisibility', definition);
	            this.webkitBackfaceVisibility = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-backface-visibility', {
	        get: function () {
	            var definition = __webpack_require__(255).definition;
	            Object.defineProperty(prototype, 'webkitBackfaceVisibility', definition);
	            return this.webkitBackfaceVisibility;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(255).definition;
	            Object.defineProperty(prototype, 'webkitBackfaceVisibility', definition);
	            this.webkitBackfaceVisibility = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBackgroundClip', {
	        get: function () {
	            var definition = __webpack_require__(256).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundClip', definition);
	            return this.webkitBackgroundClip;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(256).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundClip', definition);
	            this.webkitBackgroundClip = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-background-clip', {
	        get: function () {
	            var definition = __webpack_require__(256).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundClip', definition);
	            return this.webkitBackgroundClip;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(256).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundClip', definition);
	            this.webkitBackgroundClip = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBackgroundComposite', {
	        get: function () {
	            var definition = __webpack_require__(257).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundComposite', definition);
	            return this.webkitBackgroundComposite;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(257).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundComposite', definition);
	            this.webkitBackgroundComposite = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-background-composite', {
	        get: function () {
	            var definition = __webpack_require__(257).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundComposite', definition);
	            return this.webkitBackgroundComposite;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(257).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundComposite', definition);
	            this.webkitBackgroundComposite = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBackgroundOrigin', {
	        get: function () {
	            var definition = __webpack_require__(258).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundOrigin', definition);
	            return this.webkitBackgroundOrigin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(258).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundOrigin', definition);
	            this.webkitBackgroundOrigin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-background-origin', {
	        get: function () {
	            var definition = __webpack_require__(258).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundOrigin', definition);
	            return this.webkitBackgroundOrigin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(258).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundOrigin', definition);
	            this.webkitBackgroundOrigin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBackgroundSize', {
	        get: function () {
	            var definition = __webpack_require__(259).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundSize', definition);
	            return this.webkitBackgroundSize;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(259).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundSize', definition);
	            this.webkitBackgroundSize = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-background-size', {
	        get: function () {
	            var definition = __webpack_require__(259).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundSize', definition);
	            return this.webkitBackgroundSize;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(259).definition;
	            Object.defineProperty(prototype, 'webkitBackgroundSize', definition);
	            this.webkitBackgroundSize = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderAfter', {
	        get: function () {
	            var definition = __webpack_require__(260).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfter', definition);
	            return this.webkitBorderAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(260).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfter', definition);
	            this.webkitBorderAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-after', {
	        get: function () {
	            var definition = __webpack_require__(260).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfter', definition);
	            return this.webkitBorderAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(260).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfter', definition);
	            this.webkitBorderAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderAfterColor', {
	        get: function () {
	            var definition = __webpack_require__(261).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterColor', definition);
	            return this.webkitBorderAfterColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(261).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterColor', definition);
	            this.webkitBorderAfterColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-after-color', {
	        get: function () {
	            var definition = __webpack_require__(261).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterColor', definition);
	            return this.webkitBorderAfterColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(261).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterColor', definition);
	            this.webkitBorderAfterColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderAfterStyle', {
	        get: function () {
	            var definition = __webpack_require__(262).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterStyle', definition);
	            return this.webkitBorderAfterStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(262).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterStyle', definition);
	            this.webkitBorderAfterStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-after-style', {
	        get: function () {
	            var definition = __webpack_require__(262).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterStyle', definition);
	            return this.webkitBorderAfterStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(262).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterStyle', definition);
	            this.webkitBorderAfterStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderAfterWidth', {
	        get: function () {
	            var definition = __webpack_require__(263).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterWidth', definition);
	            return this.webkitBorderAfterWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(263).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterWidth', definition);
	            this.webkitBorderAfterWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-after-width', {
	        get: function () {
	            var definition = __webpack_require__(263).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterWidth', definition);
	            return this.webkitBorderAfterWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(263).definition;
	            Object.defineProperty(prototype, 'webkitBorderAfterWidth', definition);
	            this.webkitBorderAfterWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderBefore', {
	        get: function () {
	            var definition = __webpack_require__(264).definition;
	            Object.defineProperty(prototype, 'webkitBorderBefore', definition);
	            return this.webkitBorderBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(264).definition;
	            Object.defineProperty(prototype, 'webkitBorderBefore', definition);
	            this.webkitBorderBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-before', {
	        get: function () {
	            var definition = __webpack_require__(264).definition;
	            Object.defineProperty(prototype, 'webkitBorderBefore', definition);
	            return this.webkitBorderBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(264).definition;
	            Object.defineProperty(prototype, 'webkitBorderBefore', definition);
	            this.webkitBorderBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderBeforeColor', {
	        get: function () {
	            var definition = __webpack_require__(265).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeColor', definition);
	            return this.webkitBorderBeforeColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(265).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeColor', definition);
	            this.webkitBorderBeforeColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-before-color', {
	        get: function () {
	            var definition = __webpack_require__(265).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeColor', definition);
	            return this.webkitBorderBeforeColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(265).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeColor', definition);
	            this.webkitBorderBeforeColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderBeforeStyle', {
	        get: function () {
	            var definition = __webpack_require__(266).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeStyle', definition);
	            return this.webkitBorderBeforeStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(266).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeStyle', definition);
	            this.webkitBorderBeforeStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-before-style', {
	        get: function () {
	            var definition = __webpack_require__(266).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeStyle', definition);
	            return this.webkitBorderBeforeStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(266).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeStyle', definition);
	            this.webkitBorderBeforeStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderBeforeWidth', {
	        get: function () {
	            var definition = __webpack_require__(267).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeWidth', definition);
	            return this.webkitBorderBeforeWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(267).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeWidth', definition);
	            this.webkitBorderBeforeWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-before-width', {
	        get: function () {
	            var definition = __webpack_require__(267).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeWidth', definition);
	            return this.webkitBorderBeforeWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(267).definition;
	            Object.defineProperty(prototype, 'webkitBorderBeforeWidth', definition);
	            this.webkitBorderBeforeWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderEnd', {
	        get: function () {
	            var definition = __webpack_require__(268).definition;
	            Object.defineProperty(prototype, 'webkitBorderEnd', definition);
	            return this.webkitBorderEnd;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(268).definition;
	            Object.defineProperty(prototype, 'webkitBorderEnd', definition);
	            this.webkitBorderEnd = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-end', {
	        get: function () {
	            var definition = __webpack_require__(268).definition;
	            Object.defineProperty(prototype, 'webkitBorderEnd', definition);
	            return this.webkitBorderEnd;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(268).definition;
	            Object.defineProperty(prototype, 'webkitBorderEnd', definition);
	            this.webkitBorderEnd = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderEndColor', {
	        get: function () {
	            var definition = __webpack_require__(269).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndColor', definition);
	            return this.webkitBorderEndColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(269).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndColor', definition);
	            this.webkitBorderEndColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-end-color', {
	        get: function () {
	            var definition = __webpack_require__(269).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndColor', definition);
	            return this.webkitBorderEndColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(269).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndColor', definition);
	            this.webkitBorderEndColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderEndStyle', {
	        get: function () {
	            var definition = __webpack_require__(270).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndStyle', definition);
	            return this.webkitBorderEndStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(270).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndStyle', definition);
	            this.webkitBorderEndStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-end-style', {
	        get: function () {
	            var definition = __webpack_require__(270).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndStyle', definition);
	            return this.webkitBorderEndStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(270).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndStyle', definition);
	            this.webkitBorderEndStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderEndWidth', {
	        get: function () {
	            var definition = __webpack_require__(271).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndWidth', definition);
	            return this.webkitBorderEndWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(271).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndWidth', definition);
	            this.webkitBorderEndWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-end-width', {
	        get: function () {
	            var definition = __webpack_require__(271).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndWidth', definition);
	            return this.webkitBorderEndWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(271).definition;
	            Object.defineProperty(prototype, 'webkitBorderEndWidth', definition);
	            this.webkitBorderEndWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderFit', {
	        get: function () {
	            var definition = __webpack_require__(272).definition;
	            Object.defineProperty(prototype, 'webkitBorderFit', definition);
	            return this.webkitBorderFit;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(272).definition;
	            Object.defineProperty(prototype, 'webkitBorderFit', definition);
	            this.webkitBorderFit = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-fit', {
	        get: function () {
	            var definition = __webpack_require__(272).definition;
	            Object.defineProperty(prototype, 'webkitBorderFit', definition);
	            return this.webkitBorderFit;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(272).definition;
	            Object.defineProperty(prototype, 'webkitBorderFit', definition);
	            this.webkitBorderFit = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderHorizontalSpacing', {
	        get: function () {
	            var definition = __webpack_require__(273).definition;
	            Object.defineProperty(prototype, 'webkitBorderHorizontalSpacing', definition);
	            return this.webkitBorderHorizontalSpacing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(273).definition;
	            Object.defineProperty(prototype, 'webkitBorderHorizontalSpacing', definition);
	            this.webkitBorderHorizontalSpacing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-horizontal-spacing', {
	        get: function () {
	            var definition = __webpack_require__(273).definition;
	            Object.defineProperty(prototype, 'webkitBorderHorizontalSpacing', definition);
	            return this.webkitBorderHorizontalSpacing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(273).definition;
	            Object.defineProperty(prototype, 'webkitBorderHorizontalSpacing', definition);
	            this.webkitBorderHorizontalSpacing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderImage', {
	        get: function () {
	            var definition = __webpack_require__(274).definition;
	            Object.defineProperty(prototype, 'webkitBorderImage', definition);
	            return this.webkitBorderImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(274).definition;
	            Object.defineProperty(prototype, 'webkitBorderImage', definition);
	            this.webkitBorderImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-image', {
	        get: function () {
	            var definition = __webpack_require__(274).definition;
	            Object.defineProperty(prototype, 'webkitBorderImage', definition);
	            return this.webkitBorderImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(274).definition;
	            Object.defineProperty(prototype, 'webkitBorderImage', definition);
	            this.webkitBorderImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderRadius', {
	        get: function () {
	            var definition = __webpack_require__(275).definition;
	            Object.defineProperty(prototype, 'webkitBorderRadius', definition);
	            return this.webkitBorderRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(275).definition;
	            Object.defineProperty(prototype, 'webkitBorderRadius', definition);
	            this.webkitBorderRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-radius', {
	        get: function () {
	            var definition = __webpack_require__(275).definition;
	            Object.defineProperty(prototype, 'webkitBorderRadius', definition);
	            return this.webkitBorderRadius;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(275).definition;
	            Object.defineProperty(prototype, 'webkitBorderRadius', definition);
	            this.webkitBorderRadius = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderStart', {
	        get: function () {
	            var definition = __webpack_require__(276).definition;
	            Object.defineProperty(prototype, 'webkitBorderStart', definition);
	            return this.webkitBorderStart;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(276).definition;
	            Object.defineProperty(prototype, 'webkitBorderStart', definition);
	            this.webkitBorderStart = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-start', {
	        get: function () {
	            var definition = __webpack_require__(276).definition;
	            Object.defineProperty(prototype, 'webkitBorderStart', definition);
	            return this.webkitBorderStart;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(276).definition;
	            Object.defineProperty(prototype, 'webkitBorderStart', definition);
	            this.webkitBorderStart = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderStartColor', {
	        get: function () {
	            var definition = __webpack_require__(277).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartColor', definition);
	            return this.webkitBorderStartColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(277).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartColor', definition);
	            this.webkitBorderStartColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-start-color', {
	        get: function () {
	            var definition = __webpack_require__(277).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartColor', definition);
	            return this.webkitBorderStartColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(277).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartColor', definition);
	            this.webkitBorderStartColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderStartStyle', {
	        get: function () {
	            var definition = __webpack_require__(278).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartStyle', definition);
	            return this.webkitBorderStartStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(278).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartStyle', definition);
	            this.webkitBorderStartStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-start-style', {
	        get: function () {
	            var definition = __webpack_require__(278).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartStyle', definition);
	            return this.webkitBorderStartStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(278).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartStyle', definition);
	            this.webkitBorderStartStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderStartWidth', {
	        get: function () {
	            var definition = __webpack_require__(279).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartWidth', definition);
	            return this.webkitBorderStartWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(279).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartWidth', definition);
	            this.webkitBorderStartWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-start-width', {
	        get: function () {
	            var definition = __webpack_require__(279).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartWidth', definition);
	            return this.webkitBorderStartWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(279).definition;
	            Object.defineProperty(prototype, 'webkitBorderStartWidth', definition);
	            this.webkitBorderStartWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBorderVerticalSpacing', {
	        get: function () {
	            var definition = __webpack_require__(280).definition;
	            Object.defineProperty(prototype, 'webkitBorderVerticalSpacing', definition);
	            return this.webkitBorderVerticalSpacing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(280).definition;
	            Object.defineProperty(prototype, 'webkitBorderVerticalSpacing', definition);
	            this.webkitBorderVerticalSpacing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-border-vertical-spacing', {
	        get: function () {
	            var definition = __webpack_require__(280).definition;
	            Object.defineProperty(prototype, 'webkitBorderVerticalSpacing', definition);
	            return this.webkitBorderVerticalSpacing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(280).definition;
	            Object.defineProperty(prototype, 'webkitBorderVerticalSpacing', definition);
	            this.webkitBorderVerticalSpacing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBoxAlign', {
	        get: function () {
	            var definition = __webpack_require__(281).definition;
	            Object.defineProperty(prototype, 'webkitBoxAlign', definition);
	            return this.webkitBoxAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(281).definition;
	            Object.defineProperty(prototype, 'webkitBoxAlign', definition);
	            this.webkitBoxAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-box-align', {
	        get: function () {
	            var definition = __webpack_require__(281).definition;
	            Object.defineProperty(prototype, 'webkitBoxAlign', definition);
	            return this.webkitBoxAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(281).definition;
	            Object.defineProperty(prototype, 'webkitBoxAlign', definition);
	            this.webkitBoxAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBoxDirection', {
	        get: function () {
	            var definition = __webpack_require__(282).definition;
	            Object.defineProperty(prototype, 'webkitBoxDirection', definition);
	            return this.webkitBoxDirection;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(282).definition;
	            Object.defineProperty(prototype, 'webkitBoxDirection', definition);
	            this.webkitBoxDirection = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-box-direction', {
	        get: function () {
	            var definition = __webpack_require__(282).definition;
	            Object.defineProperty(prototype, 'webkitBoxDirection', definition);
	            return this.webkitBoxDirection;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(282).definition;
	            Object.defineProperty(prototype, 'webkitBoxDirection', definition);
	            this.webkitBoxDirection = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBoxFlex', {
	        get: function () {
	            var definition = __webpack_require__(283).definition;
	            Object.defineProperty(prototype, 'webkitBoxFlex', definition);
	            return this.webkitBoxFlex;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(283).definition;
	            Object.defineProperty(prototype, 'webkitBoxFlex', definition);
	            this.webkitBoxFlex = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-box-flex', {
	        get: function () {
	            var definition = __webpack_require__(283).definition;
	            Object.defineProperty(prototype, 'webkitBoxFlex', definition);
	            return this.webkitBoxFlex;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(283).definition;
	            Object.defineProperty(prototype, 'webkitBoxFlex', definition);
	            this.webkitBoxFlex = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBoxFlexGroup', {
	        get: function () {
	            var definition = __webpack_require__(284).definition;
	            Object.defineProperty(prototype, 'webkitBoxFlexGroup', definition);
	            return this.webkitBoxFlexGroup;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(284).definition;
	            Object.defineProperty(prototype, 'webkitBoxFlexGroup', definition);
	            this.webkitBoxFlexGroup = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-box-flex-group', {
	        get: function () {
	            var definition = __webpack_require__(284).definition;
	            Object.defineProperty(prototype, 'webkitBoxFlexGroup', definition);
	            return this.webkitBoxFlexGroup;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(284).definition;
	            Object.defineProperty(prototype, 'webkitBoxFlexGroup', definition);
	            this.webkitBoxFlexGroup = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBoxLines', {
	        get: function () {
	            var definition = __webpack_require__(285).definition;
	            Object.defineProperty(prototype, 'webkitBoxLines', definition);
	            return this.webkitBoxLines;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(285).definition;
	            Object.defineProperty(prototype, 'webkitBoxLines', definition);
	            this.webkitBoxLines = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-box-lines', {
	        get: function () {
	            var definition = __webpack_require__(285).definition;
	            Object.defineProperty(prototype, 'webkitBoxLines', definition);
	            return this.webkitBoxLines;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(285).definition;
	            Object.defineProperty(prototype, 'webkitBoxLines', definition);
	            this.webkitBoxLines = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBoxOrdinalGroup', {
	        get: function () {
	            var definition = __webpack_require__(286).definition;
	            Object.defineProperty(prototype, 'webkitBoxOrdinalGroup', definition);
	            return this.webkitBoxOrdinalGroup;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(286).definition;
	            Object.defineProperty(prototype, 'webkitBoxOrdinalGroup', definition);
	            this.webkitBoxOrdinalGroup = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-box-ordinal-group', {
	        get: function () {
	            var definition = __webpack_require__(286).definition;
	            Object.defineProperty(prototype, 'webkitBoxOrdinalGroup', definition);
	            return this.webkitBoxOrdinalGroup;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(286).definition;
	            Object.defineProperty(prototype, 'webkitBoxOrdinalGroup', definition);
	            this.webkitBoxOrdinalGroup = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBoxOrient', {
	        get: function () {
	            var definition = __webpack_require__(287).definition;
	            Object.defineProperty(prototype, 'webkitBoxOrient', definition);
	            return this.webkitBoxOrient;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(287).definition;
	            Object.defineProperty(prototype, 'webkitBoxOrient', definition);
	            this.webkitBoxOrient = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-box-orient', {
	        get: function () {
	            var definition = __webpack_require__(287).definition;
	            Object.defineProperty(prototype, 'webkitBoxOrient', definition);
	            return this.webkitBoxOrient;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(287).definition;
	            Object.defineProperty(prototype, 'webkitBoxOrient', definition);
	            this.webkitBoxOrient = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBoxPack', {
	        get: function () {
	            var definition = __webpack_require__(288).definition;
	            Object.defineProperty(prototype, 'webkitBoxPack', definition);
	            return this.webkitBoxPack;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(288).definition;
	            Object.defineProperty(prototype, 'webkitBoxPack', definition);
	            this.webkitBoxPack = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-box-pack', {
	        get: function () {
	            var definition = __webpack_require__(288).definition;
	            Object.defineProperty(prototype, 'webkitBoxPack', definition);
	            return this.webkitBoxPack;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(288).definition;
	            Object.defineProperty(prototype, 'webkitBoxPack', definition);
	            this.webkitBoxPack = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBoxReflect', {
	        get: function () {
	            var definition = __webpack_require__(289).definition;
	            Object.defineProperty(prototype, 'webkitBoxReflect', definition);
	            return this.webkitBoxReflect;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(289).definition;
	            Object.defineProperty(prototype, 'webkitBoxReflect', definition);
	            this.webkitBoxReflect = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-box-reflect', {
	        get: function () {
	            var definition = __webpack_require__(289).definition;
	            Object.defineProperty(prototype, 'webkitBoxReflect', definition);
	            return this.webkitBoxReflect;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(289).definition;
	            Object.defineProperty(prototype, 'webkitBoxReflect', definition);
	            this.webkitBoxReflect = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitBoxShadow', {
	        get: function () {
	            var definition = __webpack_require__(290).definition;
	            Object.defineProperty(prototype, 'webkitBoxShadow', definition);
	            return this.webkitBoxShadow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(290).definition;
	            Object.defineProperty(prototype, 'webkitBoxShadow', definition);
	            this.webkitBoxShadow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-box-shadow', {
	        get: function () {
	            var definition = __webpack_require__(290).definition;
	            Object.defineProperty(prototype, 'webkitBoxShadow', definition);
	            return this.webkitBoxShadow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(290).definition;
	            Object.defineProperty(prototype, 'webkitBoxShadow', definition);
	            this.webkitBoxShadow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColorCorrection', {
	        get: function () {
	            var definition = __webpack_require__(291).definition;
	            Object.defineProperty(prototype, 'webkitColorCorrection', definition);
	            return this.webkitColorCorrection;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(291).definition;
	            Object.defineProperty(prototype, 'webkitColorCorrection', definition);
	            this.webkitColorCorrection = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-color-correction', {
	        get: function () {
	            var definition = __webpack_require__(291).definition;
	            Object.defineProperty(prototype, 'webkitColorCorrection', definition);
	            return this.webkitColorCorrection;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(291).definition;
	            Object.defineProperty(prototype, 'webkitColorCorrection', definition);
	            this.webkitColorCorrection = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnAxis', {
	        get: function () {
	            var definition = __webpack_require__(292).definition;
	            Object.defineProperty(prototype, 'webkitColumnAxis', definition);
	            return this.webkitColumnAxis;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(292).definition;
	            Object.defineProperty(prototype, 'webkitColumnAxis', definition);
	            this.webkitColumnAxis = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-axis', {
	        get: function () {
	            var definition = __webpack_require__(292).definition;
	            Object.defineProperty(prototype, 'webkitColumnAxis', definition);
	            return this.webkitColumnAxis;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(292).definition;
	            Object.defineProperty(prototype, 'webkitColumnAxis', definition);
	            this.webkitColumnAxis = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnBreakAfter', {
	        get: function () {
	            var definition = __webpack_require__(293).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakAfter', definition);
	            return this.webkitColumnBreakAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(293).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakAfter', definition);
	            this.webkitColumnBreakAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-break-after', {
	        get: function () {
	            var definition = __webpack_require__(293).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakAfter', definition);
	            return this.webkitColumnBreakAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(293).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakAfter', definition);
	            this.webkitColumnBreakAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnBreakBefore', {
	        get: function () {
	            var definition = __webpack_require__(294).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakBefore', definition);
	            return this.webkitColumnBreakBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(294).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakBefore', definition);
	            this.webkitColumnBreakBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-break-before', {
	        get: function () {
	            var definition = __webpack_require__(294).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakBefore', definition);
	            return this.webkitColumnBreakBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(294).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakBefore', definition);
	            this.webkitColumnBreakBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnBreakInside', {
	        get: function () {
	            var definition = __webpack_require__(295).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakInside', definition);
	            return this.webkitColumnBreakInside;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(295).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakInside', definition);
	            this.webkitColumnBreakInside = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-break-inside', {
	        get: function () {
	            var definition = __webpack_require__(295).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakInside', definition);
	            return this.webkitColumnBreakInside;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(295).definition;
	            Object.defineProperty(prototype, 'webkitColumnBreakInside', definition);
	            this.webkitColumnBreakInside = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnCount', {
	        get: function () {
	            var definition = __webpack_require__(296).definition;
	            Object.defineProperty(prototype, 'webkitColumnCount', definition);
	            return this.webkitColumnCount;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(296).definition;
	            Object.defineProperty(prototype, 'webkitColumnCount', definition);
	            this.webkitColumnCount = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-count', {
	        get: function () {
	            var definition = __webpack_require__(296).definition;
	            Object.defineProperty(prototype, 'webkitColumnCount', definition);
	            return this.webkitColumnCount;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(296).definition;
	            Object.defineProperty(prototype, 'webkitColumnCount', definition);
	            this.webkitColumnCount = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnGap', {
	        get: function () {
	            var definition = __webpack_require__(297).definition;
	            Object.defineProperty(prototype, 'webkitColumnGap', definition);
	            return this.webkitColumnGap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(297).definition;
	            Object.defineProperty(prototype, 'webkitColumnGap', definition);
	            this.webkitColumnGap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-gap', {
	        get: function () {
	            var definition = __webpack_require__(297).definition;
	            Object.defineProperty(prototype, 'webkitColumnGap', definition);
	            return this.webkitColumnGap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(297).definition;
	            Object.defineProperty(prototype, 'webkitColumnGap', definition);
	            this.webkitColumnGap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnRule', {
	        get: function () {
	            var definition = __webpack_require__(298).definition;
	            Object.defineProperty(prototype, 'webkitColumnRule', definition);
	            return this.webkitColumnRule;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(298).definition;
	            Object.defineProperty(prototype, 'webkitColumnRule', definition);
	            this.webkitColumnRule = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-rule', {
	        get: function () {
	            var definition = __webpack_require__(298).definition;
	            Object.defineProperty(prototype, 'webkitColumnRule', definition);
	            return this.webkitColumnRule;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(298).definition;
	            Object.defineProperty(prototype, 'webkitColumnRule', definition);
	            this.webkitColumnRule = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnRuleColor', {
	        get: function () {
	            var definition = __webpack_require__(299).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleColor', definition);
	            return this.webkitColumnRuleColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(299).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleColor', definition);
	            this.webkitColumnRuleColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-rule-color', {
	        get: function () {
	            var definition = __webpack_require__(299).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleColor', definition);
	            return this.webkitColumnRuleColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(299).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleColor', definition);
	            this.webkitColumnRuleColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnRuleStyle', {
	        get: function () {
	            var definition = __webpack_require__(300).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleStyle', definition);
	            return this.webkitColumnRuleStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(300).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleStyle', definition);
	            this.webkitColumnRuleStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-rule-style', {
	        get: function () {
	            var definition = __webpack_require__(300).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleStyle', definition);
	            return this.webkitColumnRuleStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(300).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleStyle', definition);
	            this.webkitColumnRuleStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnRuleWidth', {
	        get: function () {
	            var definition = __webpack_require__(301).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleWidth', definition);
	            return this.webkitColumnRuleWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(301).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleWidth', definition);
	            this.webkitColumnRuleWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-rule-width', {
	        get: function () {
	            var definition = __webpack_require__(301).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleWidth', definition);
	            return this.webkitColumnRuleWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(301).definition;
	            Object.defineProperty(prototype, 'webkitColumnRuleWidth', definition);
	            this.webkitColumnRuleWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnSpan', {
	        get: function () {
	            var definition = __webpack_require__(302).definition;
	            Object.defineProperty(prototype, 'webkitColumnSpan', definition);
	            return this.webkitColumnSpan;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(302).definition;
	            Object.defineProperty(prototype, 'webkitColumnSpan', definition);
	            this.webkitColumnSpan = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-span', {
	        get: function () {
	            var definition = __webpack_require__(302).definition;
	            Object.defineProperty(prototype, 'webkitColumnSpan', definition);
	            return this.webkitColumnSpan;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(302).definition;
	            Object.defineProperty(prototype, 'webkitColumnSpan', definition);
	            this.webkitColumnSpan = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumnWidth', {
	        get: function () {
	            var definition = __webpack_require__(303).definition;
	            Object.defineProperty(prototype, 'webkitColumnWidth', definition);
	            return this.webkitColumnWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(303).definition;
	            Object.defineProperty(prototype, 'webkitColumnWidth', definition);
	            this.webkitColumnWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-column-width', {
	        get: function () {
	            var definition = __webpack_require__(303).definition;
	            Object.defineProperty(prototype, 'webkitColumnWidth', definition);
	            return this.webkitColumnWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(303).definition;
	            Object.defineProperty(prototype, 'webkitColumnWidth', definition);
	            this.webkitColumnWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitColumns', {
	        get: function () {
	            var definition = __webpack_require__(304).definition;
	            Object.defineProperty(prototype, 'webkitColumns', definition);
	            return this.webkitColumns;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(304).definition;
	            Object.defineProperty(prototype, 'webkitColumns', definition);
	            this.webkitColumns = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-columns', {
	        get: function () {
	            var definition = __webpack_require__(304).definition;
	            Object.defineProperty(prototype, 'webkitColumns', definition);
	            return this.webkitColumns;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(304).definition;
	            Object.defineProperty(prototype, 'webkitColumns', definition);
	            this.webkitColumns = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFilter', {
	        get: function () {
	            var definition = __webpack_require__(305).definition;
	            Object.defineProperty(prototype, 'webkitFilter', definition);
	            return this.webkitFilter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(305).definition;
	            Object.defineProperty(prototype, 'webkitFilter', definition);
	            this.webkitFilter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-filter', {
	        get: function () {
	            var definition = __webpack_require__(305).definition;
	            Object.defineProperty(prototype, 'webkitFilter', definition);
	            return this.webkitFilter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(305).definition;
	            Object.defineProperty(prototype, 'webkitFilter', definition);
	            this.webkitFilter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFlexAlign', {
	        get: function () {
	            var definition = __webpack_require__(306).definition;
	            Object.defineProperty(prototype, 'webkitFlexAlign', definition);
	            return this.webkitFlexAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(306).definition;
	            Object.defineProperty(prototype, 'webkitFlexAlign', definition);
	            this.webkitFlexAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-flex-align', {
	        get: function () {
	            var definition = __webpack_require__(306).definition;
	            Object.defineProperty(prototype, 'webkitFlexAlign', definition);
	            return this.webkitFlexAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(306).definition;
	            Object.defineProperty(prototype, 'webkitFlexAlign', definition);
	            this.webkitFlexAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFlexDirection', {
	        get: function () {
	            var definition = __webpack_require__(307).definition;
	            Object.defineProperty(prototype, 'webkitFlexDirection', definition);
	            return this.webkitFlexDirection;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(307).definition;
	            Object.defineProperty(prototype, 'webkitFlexDirection', definition);
	            this.webkitFlexDirection = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-flex-direction', {
	        get: function () {
	            var definition = __webpack_require__(307).definition;
	            Object.defineProperty(prototype, 'webkitFlexDirection', definition);
	            return this.webkitFlexDirection;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(307).definition;
	            Object.defineProperty(prototype, 'webkitFlexDirection', definition);
	            this.webkitFlexDirection = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFlexFlow', {
	        get: function () {
	            var definition = __webpack_require__(308).definition;
	            Object.defineProperty(prototype, 'webkitFlexFlow', definition);
	            return this.webkitFlexFlow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(308).definition;
	            Object.defineProperty(prototype, 'webkitFlexFlow', definition);
	            this.webkitFlexFlow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-flex-flow', {
	        get: function () {
	            var definition = __webpack_require__(308).definition;
	            Object.defineProperty(prototype, 'webkitFlexFlow', definition);
	            return this.webkitFlexFlow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(308).definition;
	            Object.defineProperty(prototype, 'webkitFlexFlow', definition);
	            this.webkitFlexFlow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFlexItemAlign', {
	        get: function () {
	            var definition = __webpack_require__(309).definition;
	            Object.defineProperty(prototype, 'webkitFlexItemAlign', definition);
	            return this.webkitFlexItemAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(309).definition;
	            Object.defineProperty(prototype, 'webkitFlexItemAlign', definition);
	            this.webkitFlexItemAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-flex-item-align', {
	        get: function () {
	            var definition = __webpack_require__(309).definition;
	            Object.defineProperty(prototype, 'webkitFlexItemAlign', definition);
	            return this.webkitFlexItemAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(309).definition;
	            Object.defineProperty(prototype, 'webkitFlexItemAlign', definition);
	            this.webkitFlexItemAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFlexLinePack', {
	        get: function () {
	            var definition = __webpack_require__(310).definition;
	            Object.defineProperty(prototype, 'webkitFlexLinePack', definition);
	            return this.webkitFlexLinePack;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(310).definition;
	            Object.defineProperty(prototype, 'webkitFlexLinePack', definition);
	            this.webkitFlexLinePack = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-flex-line-pack', {
	        get: function () {
	            var definition = __webpack_require__(310).definition;
	            Object.defineProperty(prototype, 'webkitFlexLinePack', definition);
	            return this.webkitFlexLinePack;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(310).definition;
	            Object.defineProperty(prototype, 'webkitFlexLinePack', definition);
	            this.webkitFlexLinePack = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFlexOrder', {
	        get: function () {
	            var definition = __webpack_require__(311).definition;
	            Object.defineProperty(prototype, 'webkitFlexOrder', definition);
	            return this.webkitFlexOrder;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(311).definition;
	            Object.defineProperty(prototype, 'webkitFlexOrder', definition);
	            this.webkitFlexOrder = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-flex-order', {
	        get: function () {
	            var definition = __webpack_require__(311).definition;
	            Object.defineProperty(prototype, 'webkitFlexOrder', definition);
	            return this.webkitFlexOrder;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(311).definition;
	            Object.defineProperty(prototype, 'webkitFlexOrder', definition);
	            this.webkitFlexOrder = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFlexPack', {
	        get: function () {
	            var definition = __webpack_require__(312).definition;
	            Object.defineProperty(prototype, 'webkitFlexPack', definition);
	            return this.webkitFlexPack;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(312).definition;
	            Object.defineProperty(prototype, 'webkitFlexPack', definition);
	            this.webkitFlexPack = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-flex-pack', {
	        get: function () {
	            var definition = __webpack_require__(312).definition;
	            Object.defineProperty(prototype, 'webkitFlexPack', definition);
	            return this.webkitFlexPack;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(312).definition;
	            Object.defineProperty(prototype, 'webkitFlexPack', definition);
	            this.webkitFlexPack = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFlexWrap', {
	        get: function () {
	            var definition = __webpack_require__(313).definition;
	            Object.defineProperty(prototype, 'webkitFlexWrap', definition);
	            return this.webkitFlexWrap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(313).definition;
	            Object.defineProperty(prototype, 'webkitFlexWrap', definition);
	            this.webkitFlexWrap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-flex-wrap', {
	        get: function () {
	            var definition = __webpack_require__(313).definition;
	            Object.defineProperty(prototype, 'webkitFlexWrap', definition);
	            return this.webkitFlexWrap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(313).definition;
	            Object.defineProperty(prototype, 'webkitFlexWrap', definition);
	            this.webkitFlexWrap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFlowFrom', {
	        get: function () {
	            var definition = __webpack_require__(314).definition;
	            Object.defineProperty(prototype, 'webkitFlowFrom', definition);
	            return this.webkitFlowFrom;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(314).definition;
	            Object.defineProperty(prototype, 'webkitFlowFrom', definition);
	            this.webkitFlowFrom = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-flow-from', {
	        get: function () {
	            var definition = __webpack_require__(314).definition;
	            Object.defineProperty(prototype, 'webkitFlowFrom', definition);
	            return this.webkitFlowFrom;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(314).definition;
	            Object.defineProperty(prototype, 'webkitFlowFrom', definition);
	            this.webkitFlowFrom = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFlowInto', {
	        get: function () {
	            var definition = __webpack_require__(315).definition;
	            Object.defineProperty(prototype, 'webkitFlowInto', definition);
	            return this.webkitFlowInto;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(315).definition;
	            Object.defineProperty(prototype, 'webkitFlowInto', definition);
	            this.webkitFlowInto = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-flow-into', {
	        get: function () {
	            var definition = __webpack_require__(315).definition;
	            Object.defineProperty(prototype, 'webkitFlowInto', definition);
	            return this.webkitFlowInto;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(315).definition;
	            Object.defineProperty(prototype, 'webkitFlowInto', definition);
	            this.webkitFlowInto = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFontFeatureSettings', {
	        get: function () {
	            var definition = __webpack_require__(316).definition;
	            Object.defineProperty(prototype, 'webkitFontFeatureSettings', definition);
	            return this.webkitFontFeatureSettings;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(316).definition;
	            Object.defineProperty(prototype, 'webkitFontFeatureSettings', definition);
	            this.webkitFontFeatureSettings = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-font-feature-settings', {
	        get: function () {
	            var definition = __webpack_require__(316).definition;
	            Object.defineProperty(prototype, 'webkitFontFeatureSettings', definition);
	            return this.webkitFontFeatureSettings;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(316).definition;
	            Object.defineProperty(prototype, 'webkitFontFeatureSettings', definition);
	            this.webkitFontFeatureSettings = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFontKerning', {
	        get: function () {
	            var definition = __webpack_require__(317).definition;
	            Object.defineProperty(prototype, 'webkitFontKerning', definition);
	            return this.webkitFontKerning;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(317).definition;
	            Object.defineProperty(prototype, 'webkitFontKerning', definition);
	            this.webkitFontKerning = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-font-kerning', {
	        get: function () {
	            var definition = __webpack_require__(317).definition;
	            Object.defineProperty(prototype, 'webkitFontKerning', definition);
	            return this.webkitFontKerning;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(317).definition;
	            Object.defineProperty(prototype, 'webkitFontKerning', definition);
	            this.webkitFontKerning = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFontSizeDelta', {
	        get: function () {
	            var definition = __webpack_require__(318).definition;
	            Object.defineProperty(prototype, 'webkitFontSizeDelta', definition);
	            return this.webkitFontSizeDelta;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(318).definition;
	            Object.defineProperty(prototype, 'webkitFontSizeDelta', definition);
	            this.webkitFontSizeDelta = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-font-size-delta', {
	        get: function () {
	            var definition = __webpack_require__(318).definition;
	            Object.defineProperty(prototype, 'webkitFontSizeDelta', definition);
	            return this.webkitFontSizeDelta;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(318).definition;
	            Object.defineProperty(prototype, 'webkitFontSizeDelta', definition);
	            this.webkitFontSizeDelta = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFontSmoothing', {
	        get: function () {
	            var definition = __webpack_require__(319).definition;
	            Object.defineProperty(prototype, 'webkitFontSmoothing', definition);
	            return this.webkitFontSmoothing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(319).definition;
	            Object.defineProperty(prototype, 'webkitFontSmoothing', definition);
	            this.webkitFontSmoothing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-font-smoothing', {
	        get: function () {
	            var definition = __webpack_require__(319).definition;
	            Object.defineProperty(prototype, 'webkitFontSmoothing', definition);
	            return this.webkitFontSmoothing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(319).definition;
	            Object.defineProperty(prototype, 'webkitFontSmoothing', definition);
	            this.webkitFontSmoothing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitFontVariantLigatures', {
	        get: function () {
	            var definition = __webpack_require__(320).definition;
	            Object.defineProperty(prototype, 'webkitFontVariantLigatures', definition);
	            return this.webkitFontVariantLigatures;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(320).definition;
	            Object.defineProperty(prototype, 'webkitFontVariantLigatures', definition);
	            this.webkitFontVariantLigatures = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-font-variant-ligatures', {
	        get: function () {
	            var definition = __webpack_require__(320).definition;
	            Object.defineProperty(prototype, 'webkitFontVariantLigatures', definition);
	            return this.webkitFontVariantLigatures;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(320).definition;
	            Object.defineProperty(prototype, 'webkitFontVariantLigatures', definition);
	            this.webkitFontVariantLigatures = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitHighlight', {
	        get: function () {
	            var definition = __webpack_require__(321).definition;
	            Object.defineProperty(prototype, 'webkitHighlight', definition);
	            return this.webkitHighlight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(321).definition;
	            Object.defineProperty(prototype, 'webkitHighlight', definition);
	            this.webkitHighlight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-highlight', {
	        get: function () {
	            var definition = __webpack_require__(321).definition;
	            Object.defineProperty(prototype, 'webkitHighlight', definition);
	            return this.webkitHighlight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(321).definition;
	            Object.defineProperty(prototype, 'webkitHighlight', definition);
	            this.webkitHighlight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitHyphenateCharacter', {
	        get: function () {
	            var definition = __webpack_require__(322).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateCharacter', definition);
	            return this.webkitHyphenateCharacter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(322).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateCharacter', definition);
	            this.webkitHyphenateCharacter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-hyphenate-character', {
	        get: function () {
	            var definition = __webpack_require__(322).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateCharacter', definition);
	            return this.webkitHyphenateCharacter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(322).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateCharacter', definition);
	            this.webkitHyphenateCharacter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitHyphenateLimitAfter', {
	        get: function () {
	            var definition = __webpack_require__(323).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitAfter', definition);
	            return this.webkitHyphenateLimitAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(323).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitAfter', definition);
	            this.webkitHyphenateLimitAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-hyphenate-limit-after', {
	        get: function () {
	            var definition = __webpack_require__(323).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitAfter', definition);
	            return this.webkitHyphenateLimitAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(323).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitAfter', definition);
	            this.webkitHyphenateLimitAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitHyphenateLimitBefore', {
	        get: function () {
	            var definition = __webpack_require__(324).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitBefore', definition);
	            return this.webkitHyphenateLimitBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(324).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitBefore', definition);
	            this.webkitHyphenateLimitBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-hyphenate-limit-before', {
	        get: function () {
	            var definition = __webpack_require__(324).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitBefore', definition);
	            return this.webkitHyphenateLimitBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(324).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitBefore', definition);
	            this.webkitHyphenateLimitBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitHyphenateLimitLines', {
	        get: function () {
	            var definition = __webpack_require__(325).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitLines', definition);
	            return this.webkitHyphenateLimitLines;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(325).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitLines', definition);
	            this.webkitHyphenateLimitLines = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-hyphenate-limit-lines', {
	        get: function () {
	            var definition = __webpack_require__(325).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitLines', definition);
	            return this.webkitHyphenateLimitLines;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(325).definition;
	            Object.defineProperty(prototype, 'webkitHyphenateLimitLines', definition);
	            this.webkitHyphenateLimitLines = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitHyphens', {
	        get: function () {
	            var definition = __webpack_require__(326).definition;
	            Object.defineProperty(prototype, 'webkitHyphens', definition);
	            return this.webkitHyphens;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(326).definition;
	            Object.defineProperty(prototype, 'webkitHyphens', definition);
	            this.webkitHyphens = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-hyphens', {
	        get: function () {
	            var definition = __webpack_require__(326).definition;
	            Object.defineProperty(prototype, 'webkitHyphens', definition);
	            return this.webkitHyphens;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(326).definition;
	            Object.defineProperty(prototype, 'webkitHyphens', definition);
	            this.webkitHyphens = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitLineAlign', {
	        get: function () {
	            var definition = __webpack_require__(327).definition;
	            Object.defineProperty(prototype, 'webkitLineAlign', definition);
	            return this.webkitLineAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(327).definition;
	            Object.defineProperty(prototype, 'webkitLineAlign', definition);
	            this.webkitLineAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-line-align', {
	        get: function () {
	            var definition = __webpack_require__(327).definition;
	            Object.defineProperty(prototype, 'webkitLineAlign', definition);
	            return this.webkitLineAlign;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(327).definition;
	            Object.defineProperty(prototype, 'webkitLineAlign', definition);
	            this.webkitLineAlign = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitLineBoxContain', {
	        get: function () {
	            var definition = __webpack_require__(328).definition;
	            Object.defineProperty(prototype, 'webkitLineBoxContain', definition);
	            return this.webkitLineBoxContain;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(328).definition;
	            Object.defineProperty(prototype, 'webkitLineBoxContain', definition);
	            this.webkitLineBoxContain = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-line-box-contain', {
	        get: function () {
	            var definition = __webpack_require__(328).definition;
	            Object.defineProperty(prototype, 'webkitLineBoxContain', definition);
	            return this.webkitLineBoxContain;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(328).definition;
	            Object.defineProperty(prototype, 'webkitLineBoxContain', definition);
	            this.webkitLineBoxContain = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitLineBreak', {
	        get: function () {
	            var definition = __webpack_require__(329).definition;
	            Object.defineProperty(prototype, 'webkitLineBreak', definition);
	            return this.webkitLineBreak;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(329).definition;
	            Object.defineProperty(prototype, 'webkitLineBreak', definition);
	            this.webkitLineBreak = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-line-break', {
	        get: function () {
	            var definition = __webpack_require__(329).definition;
	            Object.defineProperty(prototype, 'webkitLineBreak', definition);
	            return this.webkitLineBreak;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(329).definition;
	            Object.defineProperty(prototype, 'webkitLineBreak', definition);
	            this.webkitLineBreak = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitLineClamp', {
	        get: function () {
	            var definition = __webpack_require__(330).definition;
	            Object.defineProperty(prototype, 'webkitLineClamp', definition);
	            return this.webkitLineClamp;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(330).definition;
	            Object.defineProperty(prototype, 'webkitLineClamp', definition);
	            this.webkitLineClamp = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-line-clamp', {
	        get: function () {
	            var definition = __webpack_require__(330).definition;
	            Object.defineProperty(prototype, 'webkitLineClamp', definition);
	            return this.webkitLineClamp;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(330).definition;
	            Object.defineProperty(prototype, 'webkitLineClamp', definition);
	            this.webkitLineClamp = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitLineGrid', {
	        get: function () {
	            var definition = __webpack_require__(331).definition;
	            Object.defineProperty(prototype, 'webkitLineGrid', definition);
	            return this.webkitLineGrid;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(331).definition;
	            Object.defineProperty(prototype, 'webkitLineGrid', definition);
	            this.webkitLineGrid = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-line-grid', {
	        get: function () {
	            var definition = __webpack_require__(331).definition;
	            Object.defineProperty(prototype, 'webkitLineGrid', definition);
	            return this.webkitLineGrid;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(331).definition;
	            Object.defineProperty(prototype, 'webkitLineGrid', definition);
	            this.webkitLineGrid = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitLineSnap', {
	        get: function () {
	            var definition = __webpack_require__(332).definition;
	            Object.defineProperty(prototype, 'webkitLineSnap', definition);
	            return this.webkitLineSnap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(332).definition;
	            Object.defineProperty(prototype, 'webkitLineSnap', definition);
	            this.webkitLineSnap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-line-snap', {
	        get: function () {
	            var definition = __webpack_require__(332).definition;
	            Object.defineProperty(prototype, 'webkitLineSnap', definition);
	            return this.webkitLineSnap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(332).definition;
	            Object.defineProperty(prototype, 'webkitLineSnap', definition);
	            this.webkitLineSnap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitLocale', {
	        get: function () {
	            var definition = __webpack_require__(333).definition;
	            Object.defineProperty(prototype, 'webkitLocale', definition);
	            return this.webkitLocale;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(333).definition;
	            Object.defineProperty(prototype, 'webkitLocale', definition);
	            this.webkitLocale = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-locale', {
	        get: function () {
	            var definition = __webpack_require__(333).definition;
	            Object.defineProperty(prototype, 'webkitLocale', definition);
	            return this.webkitLocale;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(333).definition;
	            Object.defineProperty(prototype, 'webkitLocale', definition);
	            this.webkitLocale = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitLogicalHeight', {
	        get: function () {
	            var definition = __webpack_require__(334).definition;
	            Object.defineProperty(prototype, 'webkitLogicalHeight', definition);
	            return this.webkitLogicalHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(334).definition;
	            Object.defineProperty(prototype, 'webkitLogicalHeight', definition);
	            this.webkitLogicalHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-logical-height', {
	        get: function () {
	            var definition = __webpack_require__(334).definition;
	            Object.defineProperty(prototype, 'webkitLogicalHeight', definition);
	            return this.webkitLogicalHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(334).definition;
	            Object.defineProperty(prototype, 'webkitLogicalHeight', definition);
	            this.webkitLogicalHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitLogicalWidth', {
	        get: function () {
	            var definition = __webpack_require__(335).definition;
	            Object.defineProperty(prototype, 'webkitLogicalWidth', definition);
	            return this.webkitLogicalWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(335).definition;
	            Object.defineProperty(prototype, 'webkitLogicalWidth', definition);
	            this.webkitLogicalWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-logical-width', {
	        get: function () {
	            var definition = __webpack_require__(335).definition;
	            Object.defineProperty(prototype, 'webkitLogicalWidth', definition);
	            return this.webkitLogicalWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(335).definition;
	            Object.defineProperty(prototype, 'webkitLogicalWidth', definition);
	            this.webkitLogicalWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarginAfter', {
	        get: function () {
	            var definition = __webpack_require__(336).definition;
	            Object.defineProperty(prototype, 'webkitMarginAfter', definition);
	            return this.webkitMarginAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(336).definition;
	            Object.defineProperty(prototype, 'webkitMarginAfter', definition);
	            this.webkitMarginAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-margin-after', {
	        get: function () {
	            var definition = __webpack_require__(336).definition;
	            Object.defineProperty(prototype, 'webkitMarginAfter', definition);
	            return this.webkitMarginAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(336).definition;
	            Object.defineProperty(prototype, 'webkitMarginAfter', definition);
	            this.webkitMarginAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarginAfterCollapse', {
	        get: function () {
	            var definition = __webpack_require__(337).definition;
	            Object.defineProperty(prototype, 'webkitMarginAfterCollapse', definition);
	            return this.webkitMarginAfterCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(337).definition;
	            Object.defineProperty(prototype, 'webkitMarginAfterCollapse', definition);
	            this.webkitMarginAfterCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-margin-after-collapse', {
	        get: function () {
	            var definition = __webpack_require__(337).definition;
	            Object.defineProperty(prototype, 'webkitMarginAfterCollapse', definition);
	            return this.webkitMarginAfterCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(337).definition;
	            Object.defineProperty(prototype, 'webkitMarginAfterCollapse', definition);
	            this.webkitMarginAfterCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarginBefore', {
	        get: function () {
	            var definition = __webpack_require__(338).definition;
	            Object.defineProperty(prototype, 'webkitMarginBefore', definition);
	            return this.webkitMarginBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(338).definition;
	            Object.defineProperty(prototype, 'webkitMarginBefore', definition);
	            this.webkitMarginBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-margin-before', {
	        get: function () {
	            var definition = __webpack_require__(338).definition;
	            Object.defineProperty(prototype, 'webkitMarginBefore', definition);
	            return this.webkitMarginBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(338).definition;
	            Object.defineProperty(prototype, 'webkitMarginBefore', definition);
	            this.webkitMarginBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarginBeforeCollapse', {
	        get: function () {
	            var definition = __webpack_require__(339).definition;
	            Object.defineProperty(prototype, 'webkitMarginBeforeCollapse', definition);
	            return this.webkitMarginBeforeCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(339).definition;
	            Object.defineProperty(prototype, 'webkitMarginBeforeCollapse', definition);
	            this.webkitMarginBeforeCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-margin-before-collapse', {
	        get: function () {
	            var definition = __webpack_require__(339).definition;
	            Object.defineProperty(prototype, 'webkitMarginBeforeCollapse', definition);
	            return this.webkitMarginBeforeCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(339).definition;
	            Object.defineProperty(prototype, 'webkitMarginBeforeCollapse', definition);
	            this.webkitMarginBeforeCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarginBottomCollapse', {
	        get: function () {
	            var definition = __webpack_require__(340).definition;
	            Object.defineProperty(prototype, 'webkitMarginBottomCollapse', definition);
	            return this.webkitMarginBottomCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(340).definition;
	            Object.defineProperty(prototype, 'webkitMarginBottomCollapse', definition);
	            this.webkitMarginBottomCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-margin-bottom-collapse', {
	        get: function () {
	            var definition = __webpack_require__(340).definition;
	            Object.defineProperty(prototype, 'webkitMarginBottomCollapse', definition);
	            return this.webkitMarginBottomCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(340).definition;
	            Object.defineProperty(prototype, 'webkitMarginBottomCollapse', definition);
	            this.webkitMarginBottomCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarginCollapse', {
	        get: function () {
	            var definition = __webpack_require__(341).definition;
	            Object.defineProperty(prototype, 'webkitMarginCollapse', definition);
	            return this.webkitMarginCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(341).definition;
	            Object.defineProperty(prototype, 'webkitMarginCollapse', definition);
	            this.webkitMarginCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-margin-collapse', {
	        get: function () {
	            var definition = __webpack_require__(341).definition;
	            Object.defineProperty(prototype, 'webkitMarginCollapse', definition);
	            return this.webkitMarginCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(341).definition;
	            Object.defineProperty(prototype, 'webkitMarginCollapse', definition);
	            this.webkitMarginCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarginEnd', {
	        get: function () {
	            var definition = __webpack_require__(342).definition;
	            Object.defineProperty(prototype, 'webkitMarginEnd', definition);
	            return this.webkitMarginEnd;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(342).definition;
	            Object.defineProperty(prototype, 'webkitMarginEnd', definition);
	            this.webkitMarginEnd = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-margin-end', {
	        get: function () {
	            var definition = __webpack_require__(342).definition;
	            Object.defineProperty(prototype, 'webkitMarginEnd', definition);
	            return this.webkitMarginEnd;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(342).definition;
	            Object.defineProperty(prototype, 'webkitMarginEnd', definition);
	            this.webkitMarginEnd = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarginStart', {
	        get: function () {
	            var definition = __webpack_require__(343).definition;
	            Object.defineProperty(prototype, 'webkitMarginStart', definition);
	            return this.webkitMarginStart;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(343).definition;
	            Object.defineProperty(prototype, 'webkitMarginStart', definition);
	            this.webkitMarginStart = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-margin-start', {
	        get: function () {
	            var definition = __webpack_require__(343).definition;
	            Object.defineProperty(prototype, 'webkitMarginStart', definition);
	            return this.webkitMarginStart;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(343).definition;
	            Object.defineProperty(prototype, 'webkitMarginStart', definition);
	            this.webkitMarginStart = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarginTopCollapse', {
	        get: function () {
	            var definition = __webpack_require__(344).definition;
	            Object.defineProperty(prototype, 'webkitMarginTopCollapse', definition);
	            return this.webkitMarginTopCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(344).definition;
	            Object.defineProperty(prototype, 'webkitMarginTopCollapse', definition);
	            this.webkitMarginTopCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-margin-top-collapse', {
	        get: function () {
	            var definition = __webpack_require__(344).definition;
	            Object.defineProperty(prototype, 'webkitMarginTopCollapse', definition);
	            return this.webkitMarginTopCollapse;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(344).definition;
	            Object.defineProperty(prototype, 'webkitMarginTopCollapse', definition);
	            this.webkitMarginTopCollapse = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarquee', {
	        get: function () {
	            var definition = __webpack_require__(345).definition;
	            Object.defineProperty(prototype, 'webkitMarquee', definition);
	            return this.webkitMarquee;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(345).definition;
	            Object.defineProperty(prototype, 'webkitMarquee', definition);
	            this.webkitMarquee = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-marquee', {
	        get: function () {
	            var definition = __webpack_require__(345).definition;
	            Object.defineProperty(prototype, 'webkitMarquee', definition);
	            return this.webkitMarquee;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(345).definition;
	            Object.defineProperty(prototype, 'webkitMarquee', definition);
	            this.webkitMarquee = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarqueeDirection', {
	        get: function () {
	            var definition = __webpack_require__(346).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeDirection', definition);
	            return this.webkitMarqueeDirection;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(346).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeDirection', definition);
	            this.webkitMarqueeDirection = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-marquee-direction', {
	        get: function () {
	            var definition = __webpack_require__(346).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeDirection', definition);
	            return this.webkitMarqueeDirection;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(346).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeDirection', definition);
	            this.webkitMarqueeDirection = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarqueeIncrement', {
	        get: function () {
	            var definition = __webpack_require__(347).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeIncrement', definition);
	            return this.webkitMarqueeIncrement;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(347).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeIncrement', definition);
	            this.webkitMarqueeIncrement = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-marquee-increment', {
	        get: function () {
	            var definition = __webpack_require__(347).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeIncrement', definition);
	            return this.webkitMarqueeIncrement;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(347).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeIncrement', definition);
	            this.webkitMarqueeIncrement = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarqueeRepetition', {
	        get: function () {
	            var definition = __webpack_require__(348).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeRepetition', definition);
	            return this.webkitMarqueeRepetition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(348).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeRepetition', definition);
	            this.webkitMarqueeRepetition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-marquee-repetition', {
	        get: function () {
	            var definition = __webpack_require__(348).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeRepetition', definition);
	            return this.webkitMarqueeRepetition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(348).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeRepetition', definition);
	            this.webkitMarqueeRepetition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarqueeSpeed', {
	        get: function () {
	            var definition = __webpack_require__(349).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeSpeed', definition);
	            return this.webkitMarqueeSpeed;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(349).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeSpeed', definition);
	            this.webkitMarqueeSpeed = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-marquee-speed', {
	        get: function () {
	            var definition = __webpack_require__(349).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeSpeed', definition);
	            return this.webkitMarqueeSpeed;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(349).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeSpeed', definition);
	            this.webkitMarqueeSpeed = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMarqueeStyle', {
	        get: function () {
	            var definition = __webpack_require__(350).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeStyle', definition);
	            return this.webkitMarqueeStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(350).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeStyle', definition);
	            this.webkitMarqueeStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-marquee-style', {
	        get: function () {
	            var definition = __webpack_require__(350).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeStyle', definition);
	            return this.webkitMarqueeStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(350).definition;
	            Object.defineProperty(prototype, 'webkitMarqueeStyle', definition);
	            this.webkitMarqueeStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMask', {
	        get: function () {
	            var definition = __webpack_require__(351).definition;
	            Object.defineProperty(prototype, 'webkitMask', definition);
	            return this.webkitMask;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(351).definition;
	            Object.defineProperty(prototype, 'webkitMask', definition);
	            this.webkitMask = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask', {
	        get: function () {
	            var definition = __webpack_require__(351).definition;
	            Object.defineProperty(prototype, 'webkitMask', definition);
	            return this.webkitMask;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(351).definition;
	            Object.defineProperty(prototype, 'webkitMask', definition);
	            this.webkitMask = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskAttachment', {
	        get: function () {
	            var definition = __webpack_require__(352).definition;
	            Object.defineProperty(prototype, 'webkitMaskAttachment', definition);
	            return this.webkitMaskAttachment;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(352).definition;
	            Object.defineProperty(prototype, 'webkitMaskAttachment', definition);
	            this.webkitMaskAttachment = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-attachment', {
	        get: function () {
	            var definition = __webpack_require__(352).definition;
	            Object.defineProperty(prototype, 'webkitMaskAttachment', definition);
	            return this.webkitMaskAttachment;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(352).definition;
	            Object.defineProperty(prototype, 'webkitMaskAttachment', definition);
	            this.webkitMaskAttachment = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskBoxImage', {
	        get: function () {
	            var definition = __webpack_require__(353).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImage', definition);
	            return this.webkitMaskBoxImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(353).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImage', definition);
	            this.webkitMaskBoxImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-box-image', {
	        get: function () {
	            var definition = __webpack_require__(353).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImage', definition);
	            return this.webkitMaskBoxImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(353).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImage', definition);
	            this.webkitMaskBoxImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskBoxImageOutset', {
	        get: function () {
	            var definition = __webpack_require__(354).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageOutset', definition);
	            return this.webkitMaskBoxImageOutset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(354).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageOutset', definition);
	            this.webkitMaskBoxImageOutset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-box-image-outset', {
	        get: function () {
	            var definition = __webpack_require__(354).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageOutset', definition);
	            return this.webkitMaskBoxImageOutset;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(354).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageOutset', definition);
	            this.webkitMaskBoxImageOutset = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskBoxImageRepeat', {
	        get: function () {
	            var definition = __webpack_require__(355).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageRepeat', definition);
	            return this.webkitMaskBoxImageRepeat;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(355).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageRepeat', definition);
	            this.webkitMaskBoxImageRepeat = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-box-image-repeat', {
	        get: function () {
	            var definition = __webpack_require__(355).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageRepeat', definition);
	            return this.webkitMaskBoxImageRepeat;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(355).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageRepeat', definition);
	            this.webkitMaskBoxImageRepeat = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskBoxImageSlice', {
	        get: function () {
	            var definition = __webpack_require__(356).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageSlice', definition);
	            return this.webkitMaskBoxImageSlice;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(356).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageSlice', definition);
	            this.webkitMaskBoxImageSlice = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-box-image-slice', {
	        get: function () {
	            var definition = __webpack_require__(356).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageSlice', definition);
	            return this.webkitMaskBoxImageSlice;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(356).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageSlice', definition);
	            this.webkitMaskBoxImageSlice = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskBoxImageSource', {
	        get: function () {
	            var definition = __webpack_require__(357).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageSource', definition);
	            return this.webkitMaskBoxImageSource;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(357).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageSource', definition);
	            this.webkitMaskBoxImageSource = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-box-image-source', {
	        get: function () {
	            var definition = __webpack_require__(357).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageSource', definition);
	            return this.webkitMaskBoxImageSource;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(357).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageSource', definition);
	            this.webkitMaskBoxImageSource = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskBoxImageWidth', {
	        get: function () {
	            var definition = __webpack_require__(358).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageWidth', definition);
	            return this.webkitMaskBoxImageWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(358).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageWidth', definition);
	            this.webkitMaskBoxImageWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-box-image-width', {
	        get: function () {
	            var definition = __webpack_require__(358).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageWidth', definition);
	            return this.webkitMaskBoxImageWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(358).definition;
	            Object.defineProperty(prototype, 'webkitMaskBoxImageWidth', definition);
	            this.webkitMaskBoxImageWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskClip', {
	        get: function () {
	            var definition = __webpack_require__(359).definition;
	            Object.defineProperty(prototype, 'webkitMaskClip', definition);
	            return this.webkitMaskClip;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(359).definition;
	            Object.defineProperty(prototype, 'webkitMaskClip', definition);
	            this.webkitMaskClip = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-clip', {
	        get: function () {
	            var definition = __webpack_require__(359).definition;
	            Object.defineProperty(prototype, 'webkitMaskClip', definition);
	            return this.webkitMaskClip;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(359).definition;
	            Object.defineProperty(prototype, 'webkitMaskClip', definition);
	            this.webkitMaskClip = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskComposite', {
	        get: function () {
	            var definition = __webpack_require__(360).definition;
	            Object.defineProperty(prototype, 'webkitMaskComposite', definition);
	            return this.webkitMaskComposite;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(360).definition;
	            Object.defineProperty(prototype, 'webkitMaskComposite', definition);
	            this.webkitMaskComposite = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-composite', {
	        get: function () {
	            var definition = __webpack_require__(360).definition;
	            Object.defineProperty(prototype, 'webkitMaskComposite', definition);
	            return this.webkitMaskComposite;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(360).definition;
	            Object.defineProperty(prototype, 'webkitMaskComposite', definition);
	            this.webkitMaskComposite = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskImage', {
	        get: function () {
	            var definition = __webpack_require__(361).definition;
	            Object.defineProperty(prototype, 'webkitMaskImage', definition);
	            return this.webkitMaskImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(361).definition;
	            Object.defineProperty(prototype, 'webkitMaskImage', definition);
	            this.webkitMaskImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-image', {
	        get: function () {
	            var definition = __webpack_require__(361).definition;
	            Object.defineProperty(prototype, 'webkitMaskImage', definition);
	            return this.webkitMaskImage;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(361).definition;
	            Object.defineProperty(prototype, 'webkitMaskImage', definition);
	            this.webkitMaskImage = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskOrigin', {
	        get: function () {
	            var definition = __webpack_require__(362).definition;
	            Object.defineProperty(prototype, 'webkitMaskOrigin', definition);
	            return this.webkitMaskOrigin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(362).definition;
	            Object.defineProperty(prototype, 'webkitMaskOrigin', definition);
	            this.webkitMaskOrigin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-origin', {
	        get: function () {
	            var definition = __webpack_require__(362).definition;
	            Object.defineProperty(prototype, 'webkitMaskOrigin', definition);
	            return this.webkitMaskOrigin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(362).definition;
	            Object.defineProperty(prototype, 'webkitMaskOrigin', definition);
	            this.webkitMaskOrigin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskPosition', {
	        get: function () {
	            var definition = __webpack_require__(363).definition;
	            Object.defineProperty(prototype, 'webkitMaskPosition', definition);
	            return this.webkitMaskPosition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(363).definition;
	            Object.defineProperty(prototype, 'webkitMaskPosition', definition);
	            this.webkitMaskPosition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-position', {
	        get: function () {
	            var definition = __webpack_require__(363).definition;
	            Object.defineProperty(prototype, 'webkitMaskPosition', definition);
	            return this.webkitMaskPosition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(363).definition;
	            Object.defineProperty(prototype, 'webkitMaskPosition', definition);
	            this.webkitMaskPosition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskPositionX', {
	        get: function () {
	            var definition = __webpack_require__(364).definition;
	            Object.defineProperty(prototype, 'webkitMaskPositionX', definition);
	            return this.webkitMaskPositionX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(364).definition;
	            Object.defineProperty(prototype, 'webkitMaskPositionX', definition);
	            this.webkitMaskPositionX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-position-x', {
	        get: function () {
	            var definition = __webpack_require__(364).definition;
	            Object.defineProperty(prototype, 'webkitMaskPositionX', definition);
	            return this.webkitMaskPositionX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(364).definition;
	            Object.defineProperty(prototype, 'webkitMaskPositionX', definition);
	            this.webkitMaskPositionX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskPositionY', {
	        get: function () {
	            var definition = __webpack_require__(365).definition;
	            Object.defineProperty(prototype, 'webkitMaskPositionY', definition);
	            return this.webkitMaskPositionY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(365).definition;
	            Object.defineProperty(prototype, 'webkitMaskPositionY', definition);
	            this.webkitMaskPositionY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-position-y', {
	        get: function () {
	            var definition = __webpack_require__(365).definition;
	            Object.defineProperty(prototype, 'webkitMaskPositionY', definition);
	            return this.webkitMaskPositionY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(365).definition;
	            Object.defineProperty(prototype, 'webkitMaskPositionY', definition);
	            this.webkitMaskPositionY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskRepeat', {
	        get: function () {
	            var definition = __webpack_require__(366).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeat', definition);
	            return this.webkitMaskRepeat;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(366).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeat', definition);
	            this.webkitMaskRepeat = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-repeat', {
	        get: function () {
	            var definition = __webpack_require__(366).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeat', definition);
	            return this.webkitMaskRepeat;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(366).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeat', definition);
	            this.webkitMaskRepeat = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskRepeatX', {
	        get: function () {
	            var definition = __webpack_require__(367).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeatX', definition);
	            return this.webkitMaskRepeatX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(367).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeatX', definition);
	            this.webkitMaskRepeatX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-repeat-x', {
	        get: function () {
	            var definition = __webpack_require__(367).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeatX', definition);
	            return this.webkitMaskRepeatX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(367).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeatX', definition);
	            this.webkitMaskRepeatX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskRepeatY', {
	        get: function () {
	            var definition = __webpack_require__(368).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeatY', definition);
	            return this.webkitMaskRepeatY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(368).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeatY', definition);
	            this.webkitMaskRepeatY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-repeat-y', {
	        get: function () {
	            var definition = __webpack_require__(368).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeatY', definition);
	            return this.webkitMaskRepeatY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(368).definition;
	            Object.defineProperty(prototype, 'webkitMaskRepeatY', definition);
	            this.webkitMaskRepeatY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaskSize', {
	        get: function () {
	            var definition = __webpack_require__(369).definition;
	            Object.defineProperty(prototype, 'webkitMaskSize', definition);
	            return this.webkitMaskSize;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(369).definition;
	            Object.defineProperty(prototype, 'webkitMaskSize', definition);
	            this.webkitMaskSize = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-mask-size', {
	        get: function () {
	            var definition = __webpack_require__(369).definition;
	            Object.defineProperty(prototype, 'webkitMaskSize', definition);
	            return this.webkitMaskSize;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(369).definition;
	            Object.defineProperty(prototype, 'webkitMaskSize', definition);
	            this.webkitMaskSize = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMatchNearestMailBlockquoteColor', {
	        get: function () {
	            var definition = __webpack_require__(370).definition;
	            Object.defineProperty(prototype, 'webkitMatchNearestMailBlockquoteColor', definition);
	            return this.webkitMatchNearestMailBlockquoteColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(370).definition;
	            Object.defineProperty(prototype, 'webkitMatchNearestMailBlockquoteColor', definition);
	            this.webkitMatchNearestMailBlockquoteColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-match-nearest-mail-blockquote-color', {
	        get: function () {
	            var definition = __webpack_require__(370).definition;
	            Object.defineProperty(prototype, 'webkitMatchNearestMailBlockquoteColor', definition);
	            return this.webkitMatchNearestMailBlockquoteColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(370).definition;
	            Object.defineProperty(prototype, 'webkitMatchNearestMailBlockquoteColor', definition);
	            this.webkitMatchNearestMailBlockquoteColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaxLogicalHeight', {
	        get: function () {
	            var definition = __webpack_require__(371).definition;
	            Object.defineProperty(prototype, 'webkitMaxLogicalHeight', definition);
	            return this.webkitMaxLogicalHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(371).definition;
	            Object.defineProperty(prototype, 'webkitMaxLogicalHeight', definition);
	            this.webkitMaxLogicalHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-max-logical-height', {
	        get: function () {
	            var definition = __webpack_require__(371).definition;
	            Object.defineProperty(prototype, 'webkitMaxLogicalHeight', definition);
	            return this.webkitMaxLogicalHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(371).definition;
	            Object.defineProperty(prototype, 'webkitMaxLogicalHeight', definition);
	            this.webkitMaxLogicalHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMaxLogicalWidth', {
	        get: function () {
	            var definition = __webpack_require__(372).definition;
	            Object.defineProperty(prototype, 'webkitMaxLogicalWidth', definition);
	            return this.webkitMaxLogicalWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(372).definition;
	            Object.defineProperty(prototype, 'webkitMaxLogicalWidth', definition);
	            this.webkitMaxLogicalWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-max-logical-width', {
	        get: function () {
	            var definition = __webpack_require__(372).definition;
	            Object.defineProperty(prototype, 'webkitMaxLogicalWidth', definition);
	            return this.webkitMaxLogicalWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(372).definition;
	            Object.defineProperty(prototype, 'webkitMaxLogicalWidth', definition);
	            this.webkitMaxLogicalWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMinLogicalHeight', {
	        get: function () {
	            var definition = __webpack_require__(373).definition;
	            Object.defineProperty(prototype, 'webkitMinLogicalHeight', definition);
	            return this.webkitMinLogicalHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(373).definition;
	            Object.defineProperty(prototype, 'webkitMinLogicalHeight', definition);
	            this.webkitMinLogicalHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-min-logical-height', {
	        get: function () {
	            var definition = __webpack_require__(373).definition;
	            Object.defineProperty(prototype, 'webkitMinLogicalHeight', definition);
	            return this.webkitMinLogicalHeight;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(373).definition;
	            Object.defineProperty(prototype, 'webkitMinLogicalHeight', definition);
	            this.webkitMinLogicalHeight = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitMinLogicalWidth', {
	        get: function () {
	            var definition = __webpack_require__(374).definition;
	            Object.defineProperty(prototype, 'webkitMinLogicalWidth', definition);
	            return this.webkitMinLogicalWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(374).definition;
	            Object.defineProperty(prototype, 'webkitMinLogicalWidth', definition);
	            this.webkitMinLogicalWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-min-logical-width', {
	        get: function () {
	            var definition = __webpack_require__(374).definition;
	            Object.defineProperty(prototype, 'webkitMinLogicalWidth', definition);
	            return this.webkitMinLogicalWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(374).definition;
	            Object.defineProperty(prototype, 'webkitMinLogicalWidth', definition);
	            this.webkitMinLogicalWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitNbspMode', {
	        get: function () {
	            var definition = __webpack_require__(375).definition;
	            Object.defineProperty(prototype, 'webkitNbspMode', definition);
	            return this.webkitNbspMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(375).definition;
	            Object.defineProperty(prototype, 'webkitNbspMode', definition);
	            this.webkitNbspMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-nbsp-mode', {
	        get: function () {
	            var definition = __webpack_require__(375).definition;
	            Object.defineProperty(prototype, 'webkitNbspMode', definition);
	            return this.webkitNbspMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(375).definition;
	            Object.defineProperty(prototype, 'webkitNbspMode', definition);
	            this.webkitNbspMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitOverflowScrolling', {
	        get: function () {
	            var definition = __webpack_require__(376).definition;
	            Object.defineProperty(prototype, 'webkitOverflowScrolling', definition);
	            return this.webkitOverflowScrolling;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(376).definition;
	            Object.defineProperty(prototype, 'webkitOverflowScrolling', definition);
	            this.webkitOverflowScrolling = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-overflow-scrolling', {
	        get: function () {
	            var definition = __webpack_require__(376).definition;
	            Object.defineProperty(prototype, 'webkitOverflowScrolling', definition);
	            return this.webkitOverflowScrolling;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(376).definition;
	            Object.defineProperty(prototype, 'webkitOverflowScrolling', definition);
	            this.webkitOverflowScrolling = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitPaddingAfter', {
	        get: function () {
	            var definition = __webpack_require__(377).definition;
	            Object.defineProperty(prototype, 'webkitPaddingAfter', definition);
	            return this.webkitPaddingAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(377).definition;
	            Object.defineProperty(prototype, 'webkitPaddingAfter', definition);
	            this.webkitPaddingAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-padding-after', {
	        get: function () {
	            var definition = __webpack_require__(377).definition;
	            Object.defineProperty(prototype, 'webkitPaddingAfter', definition);
	            return this.webkitPaddingAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(377).definition;
	            Object.defineProperty(prototype, 'webkitPaddingAfter', definition);
	            this.webkitPaddingAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitPaddingBefore', {
	        get: function () {
	            var definition = __webpack_require__(378).definition;
	            Object.defineProperty(prototype, 'webkitPaddingBefore', definition);
	            return this.webkitPaddingBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(378).definition;
	            Object.defineProperty(prototype, 'webkitPaddingBefore', definition);
	            this.webkitPaddingBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-padding-before', {
	        get: function () {
	            var definition = __webpack_require__(378).definition;
	            Object.defineProperty(prototype, 'webkitPaddingBefore', definition);
	            return this.webkitPaddingBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(378).definition;
	            Object.defineProperty(prototype, 'webkitPaddingBefore', definition);
	            this.webkitPaddingBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitPaddingEnd', {
	        get: function () {
	            var definition = __webpack_require__(379).definition;
	            Object.defineProperty(prototype, 'webkitPaddingEnd', definition);
	            return this.webkitPaddingEnd;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(379).definition;
	            Object.defineProperty(prototype, 'webkitPaddingEnd', definition);
	            this.webkitPaddingEnd = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-padding-end', {
	        get: function () {
	            var definition = __webpack_require__(379).definition;
	            Object.defineProperty(prototype, 'webkitPaddingEnd', definition);
	            return this.webkitPaddingEnd;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(379).definition;
	            Object.defineProperty(prototype, 'webkitPaddingEnd', definition);
	            this.webkitPaddingEnd = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitPaddingStart', {
	        get: function () {
	            var definition = __webpack_require__(380).definition;
	            Object.defineProperty(prototype, 'webkitPaddingStart', definition);
	            return this.webkitPaddingStart;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(380).definition;
	            Object.defineProperty(prototype, 'webkitPaddingStart', definition);
	            this.webkitPaddingStart = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-padding-start', {
	        get: function () {
	            var definition = __webpack_require__(380).definition;
	            Object.defineProperty(prototype, 'webkitPaddingStart', definition);
	            return this.webkitPaddingStart;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(380).definition;
	            Object.defineProperty(prototype, 'webkitPaddingStart', definition);
	            this.webkitPaddingStart = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitPerspective', {
	        get: function () {
	            var definition = __webpack_require__(381).definition;
	            Object.defineProperty(prototype, 'webkitPerspective', definition);
	            return this.webkitPerspective;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(381).definition;
	            Object.defineProperty(prototype, 'webkitPerspective', definition);
	            this.webkitPerspective = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-perspective', {
	        get: function () {
	            var definition = __webpack_require__(381).definition;
	            Object.defineProperty(prototype, 'webkitPerspective', definition);
	            return this.webkitPerspective;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(381).definition;
	            Object.defineProperty(prototype, 'webkitPerspective', definition);
	            this.webkitPerspective = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitPerspectiveOrigin', {
	        get: function () {
	            var definition = __webpack_require__(382).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOrigin', definition);
	            return this.webkitPerspectiveOrigin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(382).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOrigin', definition);
	            this.webkitPerspectiveOrigin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-perspective-origin', {
	        get: function () {
	            var definition = __webpack_require__(382).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOrigin', definition);
	            return this.webkitPerspectiveOrigin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(382).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOrigin', definition);
	            this.webkitPerspectiveOrigin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitPerspectiveOriginX', {
	        get: function () {
	            var definition = __webpack_require__(383).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOriginX', definition);
	            return this.webkitPerspectiveOriginX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(383).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOriginX', definition);
	            this.webkitPerspectiveOriginX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-perspective-origin-x', {
	        get: function () {
	            var definition = __webpack_require__(383).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOriginX', definition);
	            return this.webkitPerspectiveOriginX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(383).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOriginX', definition);
	            this.webkitPerspectiveOriginX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitPerspectiveOriginY', {
	        get: function () {
	            var definition = __webpack_require__(384).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOriginY', definition);
	            return this.webkitPerspectiveOriginY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(384).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOriginY', definition);
	            this.webkitPerspectiveOriginY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-perspective-origin-y', {
	        get: function () {
	            var definition = __webpack_require__(384).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOriginY', definition);
	            return this.webkitPerspectiveOriginY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(384).definition;
	            Object.defineProperty(prototype, 'webkitPerspectiveOriginY', definition);
	            this.webkitPerspectiveOriginY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitPrintColorAdjust', {
	        get: function () {
	            var definition = __webpack_require__(385).definition;
	            Object.defineProperty(prototype, 'webkitPrintColorAdjust', definition);
	            return this.webkitPrintColorAdjust;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(385).definition;
	            Object.defineProperty(prototype, 'webkitPrintColorAdjust', definition);
	            this.webkitPrintColorAdjust = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-print-color-adjust', {
	        get: function () {
	            var definition = __webpack_require__(385).definition;
	            Object.defineProperty(prototype, 'webkitPrintColorAdjust', definition);
	            return this.webkitPrintColorAdjust;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(385).definition;
	            Object.defineProperty(prototype, 'webkitPrintColorAdjust', definition);
	            this.webkitPrintColorAdjust = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitRegionBreakAfter', {
	        get: function () {
	            var definition = __webpack_require__(386).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakAfter', definition);
	            return this.webkitRegionBreakAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(386).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakAfter', definition);
	            this.webkitRegionBreakAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-region-break-after', {
	        get: function () {
	            var definition = __webpack_require__(386).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakAfter', definition);
	            return this.webkitRegionBreakAfter;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(386).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakAfter', definition);
	            this.webkitRegionBreakAfter = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitRegionBreakBefore', {
	        get: function () {
	            var definition = __webpack_require__(387).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakBefore', definition);
	            return this.webkitRegionBreakBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(387).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakBefore', definition);
	            this.webkitRegionBreakBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-region-break-before', {
	        get: function () {
	            var definition = __webpack_require__(387).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakBefore', definition);
	            return this.webkitRegionBreakBefore;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(387).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakBefore', definition);
	            this.webkitRegionBreakBefore = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitRegionBreakInside', {
	        get: function () {
	            var definition = __webpack_require__(388).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakInside', definition);
	            return this.webkitRegionBreakInside;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(388).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakInside', definition);
	            this.webkitRegionBreakInside = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-region-break-inside', {
	        get: function () {
	            var definition = __webpack_require__(388).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakInside', definition);
	            return this.webkitRegionBreakInside;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(388).definition;
	            Object.defineProperty(prototype, 'webkitRegionBreakInside', definition);
	            this.webkitRegionBreakInside = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitRegionOverflow', {
	        get: function () {
	            var definition = __webpack_require__(389).definition;
	            Object.defineProperty(prototype, 'webkitRegionOverflow', definition);
	            return this.webkitRegionOverflow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(389).definition;
	            Object.defineProperty(prototype, 'webkitRegionOverflow', definition);
	            this.webkitRegionOverflow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-region-overflow', {
	        get: function () {
	            var definition = __webpack_require__(389).definition;
	            Object.defineProperty(prototype, 'webkitRegionOverflow', definition);
	            return this.webkitRegionOverflow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(389).definition;
	            Object.defineProperty(prototype, 'webkitRegionOverflow', definition);
	            this.webkitRegionOverflow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitRtlOrdering', {
	        get: function () {
	            var definition = __webpack_require__(390).definition;
	            Object.defineProperty(prototype, 'webkitRtlOrdering', definition);
	            return this.webkitRtlOrdering;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(390).definition;
	            Object.defineProperty(prototype, 'webkitRtlOrdering', definition);
	            this.webkitRtlOrdering = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-rtl-ordering', {
	        get: function () {
	            var definition = __webpack_require__(390).definition;
	            Object.defineProperty(prototype, 'webkitRtlOrdering', definition);
	            return this.webkitRtlOrdering;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(390).definition;
	            Object.defineProperty(prototype, 'webkitRtlOrdering', definition);
	            this.webkitRtlOrdering = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitSvgShadow', {
	        get: function () {
	            var definition = __webpack_require__(391).definition;
	            Object.defineProperty(prototype, 'webkitSvgShadow', definition);
	            return this.webkitSvgShadow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(391).definition;
	            Object.defineProperty(prototype, 'webkitSvgShadow', definition);
	            this.webkitSvgShadow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-svg-shadow', {
	        get: function () {
	            var definition = __webpack_require__(391).definition;
	            Object.defineProperty(prototype, 'webkitSvgShadow', definition);
	            return this.webkitSvgShadow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(391).definition;
	            Object.defineProperty(prototype, 'webkitSvgShadow', definition);
	            this.webkitSvgShadow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTapHighlightColor', {
	        get: function () {
	            var definition = __webpack_require__(392).definition;
	            Object.defineProperty(prototype, 'webkitTapHighlightColor', definition);
	            return this.webkitTapHighlightColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(392).definition;
	            Object.defineProperty(prototype, 'webkitTapHighlightColor', definition);
	            this.webkitTapHighlightColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-tap-highlight-color', {
	        get: function () {
	            var definition = __webpack_require__(392).definition;
	            Object.defineProperty(prototype, 'webkitTapHighlightColor', definition);
	            return this.webkitTapHighlightColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(392).definition;
	            Object.defineProperty(prototype, 'webkitTapHighlightColor', definition);
	            this.webkitTapHighlightColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextCombine', {
	        get: function () {
	            var definition = __webpack_require__(393).definition;
	            Object.defineProperty(prototype, 'webkitTextCombine', definition);
	            return this.webkitTextCombine;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(393).definition;
	            Object.defineProperty(prototype, 'webkitTextCombine', definition);
	            this.webkitTextCombine = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-combine', {
	        get: function () {
	            var definition = __webpack_require__(393).definition;
	            Object.defineProperty(prototype, 'webkitTextCombine', definition);
	            return this.webkitTextCombine;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(393).definition;
	            Object.defineProperty(prototype, 'webkitTextCombine', definition);
	            this.webkitTextCombine = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextDecorationsInEffect', {
	        get: function () {
	            var definition = __webpack_require__(394).definition;
	            Object.defineProperty(prototype, 'webkitTextDecorationsInEffect', definition);
	            return this.webkitTextDecorationsInEffect;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(394).definition;
	            Object.defineProperty(prototype, 'webkitTextDecorationsInEffect', definition);
	            this.webkitTextDecorationsInEffect = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-decorations-in-effect', {
	        get: function () {
	            var definition = __webpack_require__(394).definition;
	            Object.defineProperty(prototype, 'webkitTextDecorationsInEffect', definition);
	            return this.webkitTextDecorationsInEffect;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(394).definition;
	            Object.defineProperty(prototype, 'webkitTextDecorationsInEffect', definition);
	            this.webkitTextDecorationsInEffect = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextEmphasis', {
	        get: function () {
	            var definition = __webpack_require__(395).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasis', definition);
	            return this.webkitTextEmphasis;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(395).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasis', definition);
	            this.webkitTextEmphasis = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-emphasis', {
	        get: function () {
	            var definition = __webpack_require__(395).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasis', definition);
	            return this.webkitTextEmphasis;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(395).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasis', definition);
	            this.webkitTextEmphasis = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextEmphasisColor', {
	        get: function () {
	            var definition = __webpack_require__(396).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisColor', definition);
	            return this.webkitTextEmphasisColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(396).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisColor', definition);
	            this.webkitTextEmphasisColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-emphasis-color', {
	        get: function () {
	            var definition = __webpack_require__(396).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisColor', definition);
	            return this.webkitTextEmphasisColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(396).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisColor', definition);
	            this.webkitTextEmphasisColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextEmphasisPosition', {
	        get: function () {
	            var definition = __webpack_require__(397).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisPosition', definition);
	            return this.webkitTextEmphasisPosition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(397).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisPosition', definition);
	            this.webkitTextEmphasisPosition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-emphasis-position', {
	        get: function () {
	            var definition = __webpack_require__(397).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisPosition', definition);
	            return this.webkitTextEmphasisPosition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(397).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisPosition', definition);
	            this.webkitTextEmphasisPosition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextEmphasisStyle', {
	        get: function () {
	            var definition = __webpack_require__(398).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisStyle', definition);
	            return this.webkitTextEmphasisStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(398).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisStyle', definition);
	            this.webkitTextEmphasisStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-emphasis-style', {
	        get: function () {
	            var definition = __webpack_require__(398).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisStyle', definition);
	            return this.webkitTextEmphasisStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(398).definition;
	            Object.defineProperty(prototype, 'webkitTextEmphasisStyle', definition);
	            this.webkitTextEmphasisStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextFillColor', {
	        get: function () {
	            var definition = __webpack_require__(399).definition;
	            Object.defineProperty(prototype, 'webkitTextFillColor', definition);
	            return this.webkitTextFillColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(399).definition;
	            Object.defineProperty(prototype, 'webkitTextFillColor', definition);
	            this.webkitTextFillColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-fill-color', {
	        get: function () {
	            var definition = __webpack_require__(399).definition;
	            Object.defineProperty(prototype, 'webkitTextFillColor', definition);
	            return this.webkitTextFillColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(399).definition;
	            Object.defineProperty(prototype, 'webkitTextFillColor', definition);
	            this.webkitTextFillColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextOrientation', {
	        get: function () {
	            var definition = __webpack_require__(400).definition;
	            Object.defineProperty(prototype, 'webkitTextOrientation', definition);
	            return this.webkitTextOrientation;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(400).definition;
	            Object.defineProperty(prototype, 'webkitTextOrientation', definition);
	            this.webkitTextOrientation = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-orientation', {
	        get: function () {
	            var definition = __webpack_require__(400).definition;
	            Object.defineProperty(prototype, 'webkitTextOrientation', definition);
	            return this.webkitTextOrientation;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(400).definition;
	            Object.defineProperty(prototype, 'webkitTextOrientation', definition);
	            this.webkitTextOrientation = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextSecurity', {
	        get: function () {
	            var definition = __webpack_require__(401).definition;
	            Object.defineProperty(prototype, 'webkitTextSecurity', definition);
	            return this.webkitTextSecurity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(401).definition;
	            Object.defineProperty(prototype, 'webkitTextSecurity', definition);
	            this.webkitTextSecurity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-security', {
	        get: function () {
	            var definition = __webpack_require__(401).definition;
	            Object.defineProperty(prototype, 'webkitTextSecurity', definition);
	            return this.webkitTextSecurity;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(401).definition;
	            Object.defineProperty(prototype, 'webkitTextSecurity', definition);
	            this.webkitTextSecurity = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextSizeAdjust', {
	        get: function () {
	            var definition = __webpack_require__(402).definition;
	            Object.defineProperty(prototype, 'webkitTextSizeAdjust', definition);
	            return this.webkitTextSizeAdjust;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(402).definition;
	            Object.defineProperty(prototype, 'webkitTextSizeAdjust', definition);
	            this.webkitTextSizeAdjust = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-size-adjust', {
	        get: function () {
	            var definition = __webpack_require__(402).definition;
	            Object.defineProperty(prototype, 'webkitTextSizeAdjust', definition);
	            return this.webkitTextSizeAdjust;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(402).definition;
	            Object.defineProperty(prototype, 'webkitTextSizeAdjust', definition);
	            this.webkitTextSizeAdjust = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextStroke', {
	        get: function () {
	            var definition = __webpack_require__(403).definition;
	            Object.defineProperty(prototype, 'webkitTextStroke', definition);
	            return this.webkitTextStroke;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(403).definition;
	            Object.defineProperty(prototype, 'webkitTextStroke', definition);
	            this.webkitTextStroke = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-stroke', {
	        get: function () {
	            var definition = __webpack_require__(403).definition;
	            Object.defineProperty(prototype, 'webkitTextStroke', definition);
	            return this.webkitTextStroke;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(403).definition;
	            Object.defineProperty(prototype, 'webkitTextStroke', definition);
	            this.webkitTextStroke = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextStrokeColor', {
	        get: function () {
	            var definition = __webpack_require__(404).definition;
	            Object.defineProperty(prototype, 'webkitTextStrokeColor', definition);
	            return this.webkitTextStrokeColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(404).definition;
	            Object.defineProperty(prototype, 'webkitTextStrokeColor', definition);
	            this.webkitTextStrokeColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-stroke-color', {
	        get: function () {
	            var definition = __webpack_require__(404).definition;
	            Object.defineProperty(prototype, 'webkitTextStrokeColor', definition);
	            return this.webkitTextStrokeColor;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(404).definition;
	            Object.defineProperty(prototype, 'webkitTextStrokeColor', definition);
	            this.webkitTextStrokeColor = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTextStrokeWidth', {
	        get: function () {
	            var definition = __webpack_require__(405).definition;
	            Object.defineProperty(prototype, 'webkitTextStrokeWidth', definition);
	            return this.webkitTextStrokeWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(405).definition;
	            Object.defineProperty(prototype, 'webkitTextStrokeWidth', definition);
	            this.webkitTextStrokeWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-text-stroke-width', {
	        get: function () {
	            var definition = __webpack_require__(405).definition;
	            Object.defineProperty(prototype, 'webkitTextStrokeWidth', definition);
	            return this.webkitTextStrokeWidth;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(405).definition;
	            Object.defineProperty(prototype, 'webkitTextStrokeWidth', definition);
	            this.webkitTextStrokeWidth = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransform', {
	        get: function () {
	            var definition = __webpack_require__(406).definition;
	            Object.defineProperty(prototype, 'webkitTransform', definition);
	            return this.webkitTransform;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(406).definition;
	            Object.defineProperty(prototype, 'webkitTransform', definition);
	            this.webkitTransform = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transform', {
	        get: function () {
	            var definition = __webpack_require__(406).definition;
	            Object.defineProperty(prototype, 'webkitTransform', definition);
	            return this.webkitTransform;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(406).definition;
	            Object.defineProperty(prototype, 'webkitTransform', definition);
	            this.webkitTransform = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransformOrigin', {
	        get: function () {
	            var definition = __webpack_require__(407).definition;
	            Object.defineProperty(prototype, 'webkitTransformOrigin', definition);
	            return this.webkitTransformOrigin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(407).definition;
	            Object.defineProperty(prototype, 'webkitTransformOrigin', definition);
	            this.webkitTransformOrigin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transform-origin', {
	        get: function () {
	            var definition = __webpack_require__(407).definition;
	            Object.defineProperty(prototype, 'webkitTransformOrigin', definition);
	            return this.webkitTransformOrigin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(407).definition;
	            Object.defineProperty(prototype, 'webkitTransformOrigin', definition);
	            this.webkitTransformOrigin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransformOriginX', {
	        get: function () {
	            var definition = __webpack_require__(408).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginX', definition);
	            return this.webkitTransformOriginX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(408).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginX', definition);
	            this.webkitTransformOriginX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transform-origin-x', {
	        get: function () {
	            var definition = __webpack_require__(408).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginX', definition);
	            return this.webkitTransformOriginX;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(408).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginX', definition);
	            this.webkitTransformOriginX = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransformOriginY', {
	        get: function () {
	            var definition = __webpack_require__(409).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginY', definition);
	            return this.webkitTransformOriginY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(409).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginY', definition);
	            this.webkitTransformOriginY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transform-origin-y', {
	        get: function () {
	            var definition = __webpack_require__(409).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginY', definition);
	            return this.webkitTransformOriginY;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(409).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginY', definition);
	            this.webkitTransformOriginY = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransformOriginZ', {
	        get: function () {
	            var definition = __webpack_require__(410).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginZ', definition);
	            return this.webkitTransformOriginZ;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(410).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginZ', definition);
	            this.webkitTransformOriginZ = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transform-origin-z', {
	        get: function () {
	            var definition = __webpack_require__(410).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginZ', definition);
	            return this.webkitTransformOriginZ;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(410).definition;
	            Object.defineProperty(prototype, 'webkitTransformOriginZ', definition);
	            this.webkitTransformOriginZ = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransformStyle', {
	        get: function () {
	            var definition = __webpack_require__(411).definition;
	            Object.defineProperty(prototype, 'webkitTransformStyle', definition);
	            return this.webkitTransformStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(411).definition;
	            Object.defineProperty(prototype, 'webkitTransformStyle', definition);
	            this.webkitTransformStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transform-style', {
	        get: function () {
	            var definition = __webpack_require__(411).definition;
	            Object.defineProperty(prototype, 'webkitTransformStyle', definition);
	            return this.webkitTransformStyle;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(411).definition;
	            Object.defineProperty(prototype, 'webkitTransformStyle', definition);
	            this.webkitTransformStyle = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransition', {
	        get: function () {
	            var definition = __webpack_require__(412).definition;
	            Object.defineProperty(prototype, 'webkitTransition', definition);
	            return this.webkitTransition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(412).definition;
	            Object.defineProperty(prototype, 'webkitTransition', definition);
	            this.webkitTransition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transition', {
	        get: function () {
	            var definition = __webpack_require__(412).definition;
	            Object.defineProperty(prototype, 'webkitTransition', definition);
	            return this.webkitTransition;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(412).definition;
	            Object.defineProperty(prototype, 'webkitTransition', definition);
	            this.webkitTransition = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransitionDelay', {
	        get: function () {
	            var definition = __webpack_require__(413).definition;
	            Object.defineProperty(prototype, 'webkitTransitionDelay', definition);
	            return this.webkitTransitionDelay;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(413).definition;
	            Object.defineProperty(prototype, 'webkitTransitionDelay', definition);
	            this.webkitTransitionDelay = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transition-delay', {
	        get: function () {
	            var definition = __webpack_require__(413).definition;
	            Object.defineProperty(prototype, 'webkitTransitionDelay', definition);
	            return this.webkitTransitionDelay;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(413).definition;
	            Object.defineProperty(prototype, 'webkitTransitionDelay', definition);
	            this.webkitTransitionDelay = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransitionDuration', {
	        get: function () {
	            var definition = __webpack_require__(414).definition;
	            Object.defineProperty(prototype, 'webkitTransitionDuration', definition);
	            return this.webkitTransitionDuration;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(414).definition;
	            Object.defineProperty(prototype, 'webkitTransitionDuration', definition);
	            this.webkitTransitionDuration = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transition-duration', {
	        get: function () {
	            var definition = __webpack_require__(414).definition;
	            Object.defineProperty(prototype, 'webkitTransitionDuration', definition);
	            return this.webkitTransitionDuration;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(414).definition;
	            Object.defineProperty(prototype, 'webkitTransitionDuration', definition);
	            this.webkitTransitionDuration = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransitionProperty', {
	        get: function () {
	            var definition = __webpack_require__(415).definition;
	            Object.defineProperty(prototype, 'webkitTransitionProperty', definition);
	            return this.webkitTransitionProperty;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(415).definition;
	            Object.defineProperty(prototype, 'webkitTransitionProperty', definition);
	            this.webkitTransitionProperty = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transition-property', {
	        get: function () {
	            var definition = __webpack_require__(415).definition;
	            Object.defineProperty(prototype, 'webkitTransitionProperty', definition);
	            return this.webkitTransitionProperty;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(415).definition;
	            Object.defineProperty(prototype, 'webkitTransitionProperty', definition);
	            this.webkitTransitionProperty = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitTransitionTimingFunction', {
	        get: function () {
	            var definition = __webpack_require__(416).definition;
	            Object.defineProperty(prototype, 'webkitTransitionTimingFunction', definition);
	            return this.webkitTransitionTimingFunction;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(416).definition;
	            Object.defineProperty(prototype, 'webkitTransitionTimingFunction', definition);
	            this.webkitTransitionTimingFunction = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-transition-timing-function', {
	        get: function () {
	            var definition = __webpack_require__(416).definition;
	            Object.defineProperty(prototype, 'webkitTransitionTimingFunction', definition);
	            return this.webkitTransitionTimingFunction;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(416).definition;
	            Object.defineProperty(prototype, 'webkitTransitionTimingFunction', definition);
	            this.webkitTransitionTimingFunction = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitUserDrag', {
	        get: function () {
	            var definition = __webpack_require__(417).definition;
	            Object.defineProperty(prototype, 'webkitUserDrag', definition);
	            return this.webkitUserDrag;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(417).definition;
	            Object.defineProperty(prototype, 'webkitUserDrag', definition);
	            this.webkitUserDrag = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-user-drag', {
	        get: function () {
	            var definition = __webpack_require__(417).definition;
	            Object.defineProperty(prototype, 'webkitUserDrag', definition);
	            return this.webkitUserDrag;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(417).definition;
	            Object.defineProperty(prototype, 'webkitUserDrag', definition);
	            this.webkitUserDrag = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitUserModify', {
	        get: function () {
	            var definition = __webpack_require__(418).definition;
	            Object.defineProperty(prototype, 'webkitUserModify', definition);
	            return this.webkitUserModify;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(418).definition;
	            Object.defineProperty(prototype, 'webkitUserModify', definition);
	            this.webkitUserModify = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-user-modify', {
	        get: function () {
	            var definition = __webpack_require__(418).definition;
	            Object.defineProperty(prototype, 'webkitUserModify', definition);
	            return this.webkitUserModify;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(418).definition;
	            Object.defineProperty(prototype, 'webkitUserModify', definition);
	            this.webkitUserModify = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitUserSelect', {
	        get: function () {
	            var definition = __webpack_require__(419).definition;
	            Object.defineProperty(prototype, 'webkitUserSelect', definition);
	            return this.webkitUserSelect;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(419).definition;
	            Object.defineProperty(prototype, 'webkitUserSelect', definition);
	            this.webkitUserSelect = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-user-select', {
	        get: function () {
	            var definition = __webpack_require__(419).definition;
	            Object.defineProperty(prototype, 'webkitUserSelect', definition);
	            return this.webkitUserSelect;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(419).definition;
	            Object.defineProperty(prototype, 'webkitUserSelect', definition);
	            this.webkitUserSelect = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitWrap', {
	        get: function () {
	            var definition = __webpack_require__(420).definition;
	            Object.defineProperty(prototype, 'webkitWrap', definition);
	            return this.webkitWrap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(420).definition;
	            Object.defineProperty(prototype, 'webkitWrap', definition);
	            this.webkitWrap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-wrap', {
	        get: function () {
	            var definition = __webpack_require__(420).definition;
	            Object.defineProperty(prototype, 'webkitWrap', definition);
	            return this.webkitWrap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(420).definition;
	            Object.defineProperty(prototype, 'webkitWrap', definition);
	            this.webkitWrap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitWrapFlow', {
	        get: function () {
	            var definition = __webpack_require__(421).definition;
	            Object.defineProperty(prototype, 'webkitWrapFlow', definition);
	            return this.webkitWrapFlow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(421).definition;
	            Object.defineProperty(prototype, 'webkitWrapFlow', definition);
	            this.webkitWrapFlow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-wrap-flow', {
	        get: function () {
	            var definition = __webpack_require__(421).definition;
	            Object.defineProperty(prototype, 'webkitWrapFlow', definition);
	            return this.webkitWrapFlow;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(421).definition;
	            Object.defineProperty(prototype, 'webkitWrapFlow', definition);
	            this.webkitWrapFlow = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitWrapMargin', {
	        get: function () {
	            var definition = __webpack_require__(422).definition;
	            Object.defineProperty(prototype, 'webkitWrapMargin', definition);
	            return this.webkitWrapMargin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(422).definition;
	            Object.defineProperty(prototype, 'webkitWrapMargin', definition);
	            this.webkitWrapMargin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-wrap-margin', {
	        get: function () {
	            var definition = __webpack_require__(422).definition;
	            Object.defineProperty(prototype, 'webkitWrapMargin', definition);
	            return this.webkitWrapMargin;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(422).definition;
	            Object.defineProperty(prototype, 'webkitWrapMargin', definition);
	            this.webkitWrapMargin = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitWrapPadding', {
	        get: function () {
	            var definition = __webpack_require__(423).definition;
	            Object.defineProperty(prototype, 'webkitWrapPadding', definition);
	            return this.webkitWrapPadding;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(423).definition;
	            Object.defineProperty(prototype, 'webkitWrapPadding', definition);
	            this.webkitWrapPadding = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-wrap-padding', {
	        get: function () {
	            var definition = __webpack_require__(423).definition;
	            Object.defineProperty(prototype, 'webkitWrapPadding', definition);
	            return this.webkitWrapPadding;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(423).definition;
	            Object.defineProperty(prototype, 'webkitWrapPadding', definition);
	            this.webkitWrapPadding = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitWrapShapeInside', {
	        get: function () {
	            var definition = __webpack_require__(424).definition;
	            Object.defineProperty(prototype, 'webkitWrapShapeInside', definition);
	            return this.webkitWrapShapeInside;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(424).definition;
	            Object.defineProperty(prototype, 'webkitWrapShapeInside', definition);
	            this.webkitWrapShapeInside = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-wrap-shape-inside', {
	        get: function () {
	            var definition = __webpack_require__(424).definition;
	            Object.defineProperty(prototype, 'webkitWrapShapeInside', definition);
	            return this.webkitWrapShapeInside;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(424).definition;
	            Object.defineProperty(prototype, 'webkitWrapShapeInside', definition);
	            this.webkitWrapShapeInside = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitWrapShapeOutside', {
	        get: function () {
	            var definition = __webpack_require__(425).definition;
	            Object.defineProperty(prototype, 'webkitWrapShapeOutside', definition);
	            return this.webkitWrapShapeOutside;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(425).definition;
	            Object.defineProperty(prototype, 'webkitWrapShapeOutside', definition);
	            this.webkitWrapShapeOutside = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-wrap-shape-outside', {
	        get: function () {
	            var definition = __webpack_require__(425).definition;
	            Object.defineProperty(prototype, 'webkitWrapShapeOutside', definition);
	            return this.webkitWrapShapeOutside;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(425).definition;
	            Object.defineProperty(prototype, 'webkitWrapShapeOutside', definition);
	            this.webkitWrapShapeOutside = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitWrapThrough', {
	        get: function () {
	            var definition = __webpack_require__(426).definition;
	            Object.defineProperty(prototype, 'webkitWrapThrough', definition);
	            return this.webkitWrapThrough;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(426).definition;
	            Object.defineProperty(prototype, 'webkitWrapThrough', definition);
	            this.webkitWrapThrough = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-wrap-through', {
	        get: function () {
	            var definition = __webpack_require__(426).definition;
	            Object.defineProperty(prototype, 'webkitWrapThrough', definition);
	            return this.webkitWrapThrough;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(426).definition;
	            Object.defineProperty(prototype, 'webkitWrapThrough', definition);
	            this.webkitWrapThrough = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkitWritingMode', {
	        get: function () {
	            var definition = __webpack_require__(427).definition;
	            Object.defineProperty(prototype, 'webkitWritingMode', definition);
	            return this.webkitWritingMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(427).definition;
	            Object.defineProperty(prototype, 'webkitWritingMode', definition);
	            this.webkitWritingMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'webkit-writing-mode', {
	        get: function () {
	            var definition = __webpack_require__(427).definition;
	            Object.defineProperty(prototype, 'webkitWritingMode', definition);
	            return this.webkitWritingMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(427).definition;
	            Object.defineProperty(prototype, 'webkitWritingMode', definition);
	            this.webkitWritingMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'whiteSpace', {
	        get: function () {
	            var definition = __webpack_require__(428).definition;
	            Object.defineProperty(prototype, 'whiteSpace', definition);
	            return this.whiteSpace;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(428).definition;
	            Object.defineProperty(prototype, 'whiteSpace', definition);
	            this.whiteSpace = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'white-space', {
	        get: function () {
	            var definition = __webpack_require__(428).definition;
	            Object.defineProperty(prototype, 'whiteSpace', definition);
	            return this.whiteSpace;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(428).definition;
	            Object.defineProperty(prototype, 'whiteSpace', definition);
	            this.whiteSpace = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'widows', {
	        get: function () {
	            var definition = __webpack_require__(429).definition;
	            Object.defineProperty(prototype, 'widows', definition);
	            return this.widows;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(429).definition;
	            Object.defineProperty(prototype, 'widows', definition);
	            this.widows = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'width', {
	        get: function () {
	            var definition = __webpack_require__(430).definition;
	            Object.defineProperty(prototype, 'width', definition);
	            return this.width;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(430).definition;
	            Object.defineProperty(prototype, 'width', definition);
	            this.width = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'wordBreak', {
	        get: function () {
	            var definition = __webpack_require__(431).definition;
	            Object.defineProperty(prototype, 'wordBreak', definition);
	            return this.wordBreak;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(431).definition;
	            Object.defineProperty(prototype, 'wordBreak', definition);
	            this.wordBreak = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'word-break', {
	        get: function () {
	            var definition = __webpack_require__(431).definition;
	            Object.defineProperty(prototype, 'wordBreak', definition);
	            return this.wordBreak;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(431).definition;
	            Object.defineProperty(prototype, 'wordBreak', definition);
	            this.wordBreak = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'wordSpacing', {
	        get: function () {
	            var definition = __webpack_require__(432).definition;
	            Object.defineProperty(prototype, 'wordSpacing', definition);
	            return this.wordSpacing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(432).definition;
	            Object.defineProperty(prototype, 'wordSpacing', definition);
	            this.wordSpacing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'word-spacing', {
	        get: function () {
	            var definition = __webpack_require__(432).definition;
	            Object.defineProperty(prototype, 'wordSpacing', definition);
	            return this.wordSpacing;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(432).definition;
	            Object.defineProperty(prototype, 'wordSpacing', definition);
	            this.wordSpacing = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'wordWrap', {
	        get: function () {
	            var definition = __webpack_require__(433).definition;
	            Object.defineProperty(prototype, 'wordWrap', definition);
	            return this.wordWrap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(433).definition;
	            Object.defineProperty(prototype, 'wordWrap', definition);
	            this.wordWrap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'word-wrap', {
	        get: function () {
	            var definition = __webpack_require__(433).definition;
	            Object.defineProperty(prototype, 'wordWrap', definition);
	            return this.wordWrap;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(433).definition;
	            Object.defineProperty(prototype, 'wordWrap', definition);
	            this.wordWrap = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'writingMode', {
	        get: function () {
	            var definition = __webpack_require__(434).definition;
	            Object.defineProperty(prototype, 'writingMode', definition);
	            return this.writingMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(434).definition;
	            Object.defineProperty(prototype, 'writingMode', definition);
	            this.writingMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'writing-mode', {
	        get: function () {
	            var definition = __webpack_require__(434).definition;
	            Object.defineProperty(prototype, 'writingMode', definition);
	            return this.writingMode;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(434).definition;
	            Object.defineProperty(prototype, 'writingMode', definition);
	            this.writingMode = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'zIndex', {
	        get: function () {
	            var definition = __webpack_require__(435).definition;
	            Object.defineProperty(prototype, 'zIndex', definition);
	            return this.zIndex;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(435).definition;
	            Object.defineProperty(prototype, 'zIndex', definition);
	            this.zIndex = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'z-index', {
	        get: function () {
	            var definition = __webpack_require__(435).definition;
	            Object.defineProperty(prototype, 'zIndex', definition);
	            return this.zIndex;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(435).definition;
	            Object.defineProperty(prototype, 'zIndex', definition);
	            this.zIndex = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	    Object.defineProperty(prototype, 'zoom', {
	        get: function () {
	            var definition = __webpack_require__(436).definition;
	            Object.defineProperty(prototype, 'zoom', definition);
	            return this.zoom;
	        },
	        set: function (v) {
	            var definition = __webpack_require__(436).definition;
	            Object.defineProperty(prototype, 'zoom', definition);
	            this.zoom = v;
	        },
	        enumerable: true,
	        configurable: true
	    });
	};


/***/ },
/* 45 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('alignment-baseline', v);
	    },
	    get: function () {
	        return this.getPropertyValue('alignment-baseline');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parsers = __webpack_require__(43);

	module.exports.definition = {
	    set: function (v) {
	        var valueType = parsers.valueType(v);
	        if (valueType === parsers.TYPES.ANGLE) {
	            return this._setProperty('azimuth', parsers.parseAngle(v));
	        }
	        if (valueType === parsers.TYPES.KEYWORD) {
	            var keywords = v.toLowerCase().trim().split(/\s+/);
	            var hasBehind = false;
	            if (keywords.length > 2) {
	                return;
	            }
	            var behindIndex = keywords.indexOf('behind');
	            hasBehind = (behindIndex !== -1);

	            if (keywords.length === 2) {
	                if (!hasBehind) {
	                    return;
	                }
	                keywords.splice(behindIndex, 1);
	            }
	            if (keywords[0] === 'leftwards' || keywords[0] === 'rightwards') {
	                if (hasBehind) {
	                    return;
	                }
	                return this._setProperty('azimuth', keywords[0]);
	            }
	            if (keywords[0] === 'behind') {
	                return this._setProperty('azimuth', '180deg');
	            }
	            var deg;
	            switch (keywords[0]) {
	            case 'left-side':
	                return this._setProperty('azimuth', '270deg');
	            case 'far-left':
	                return this._setProperty('azimuth', (hasBehind ? 240 : 300) + 'deg');
	            case 'left':
	                return this._setProperty('azimuth', (hasBehind ? 220 : 320) + 'deg');
	            case 'center-left':
	                return this._setProperty('azimuth', (hasBehind ? 200 : 340) + 'deg');
	            case 'center':
	                return this._setProperty('azimuth', (hasBehind ? 180 : 0) + 'deg');
	            case 'center-right':
	                return this._setProperty('azimuth', (hasBehind ? 160 : 20) + 'deg');
	            case 'right':
	                return this._setProperty('azimuth', (hasBehind ? 140 : 40) + 'deg');
	            case 'far-right':
	                return this._setProperty('azimuth', (hasBehind ? 120 : 60) + 'deg');
	            case 'right-side':
	                return this._setProperty('azimuth', '90deg');
	            default:
	                return;
	            }
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('azimuth');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var shorthandParser = __webpack_require__(43).shorthandParser;
	var shorthandSetter = __webpack_require__(43).shorthandSetter;
	var shorthandGetter = __webpack_require__(43).shorthandGetter;

	var shorthand_for = {
	    'background-color': __webpack_require__(48),
	    'background-image': __webpack_require__(49),
	    'background-repeat': __webpack_require__(50),
	    'background-attachment': __webpack_require__(51),
	    'background-position': __webpack_require__(52)
	};

	module.exports.isValid = function isValid(v) {
	    return shorthandParser(v, shorthand_for) !== undefined;
	};

	module.exports.definition = {
	    set: shorthandSetter('background', shorthand_for),
	    get: shorthandGetter('background', shorthand_for),
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parsers = __webpack_require__(43);

	var parse = function parse(v) {
	    var parsed = parsers.parseColor(v);
	    if (parsed !== undefined) {
	        return parsed;
	    }
	    if (parsers.valueType(v) === parsers.TYPES.KEYWORD && (v.toLowerCase() === 'transparent' || v.toLowerCase() === 'inherit')) {
	        return v;
	    }
	    return undefined;
	};

	module.exports.isValid = function isValid(v) {
	    return parse(v) !== undefined;
	};

	module.exports.definition = {
	    set: function (v) {
	        var parsed = parse(v);
	        if (parsed === undefined) {
	            return;
	        }
	        this._setProperty('background-color', parsed);
	    },
	    get: function () {
	        return this.getPropertyValue('background-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 49 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parsers = __webpack_require__(43);

	var parse = function parse(v) {
	    var parsed = parsers.parseUrl(v);
	    if (parsed !== undefined) {
	        return parsed;
	    }
	    if (parsers.valueType(v) === parsers.TYPES.KEYWORD && (v.toLowerCase() === 'none' || v.toLowerCase() === 'inherit')) {
	        return v;
	    }
	    return undefined;
	};

	module.exports.isValid = function isValid(v) {
	    return parse(v) !== undefined;
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('background-image', parse(v));
	    },
	    get: function () {
	        return this.getPropertyValue('background-image');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 50 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parsers = __webpack_require__(43);

	var parse = function parse(v) {
	    if (parsers.valueType(v) === parsers.TYPES.KEYWORD && (v.toLowerCase() === 'repeat' || v.toLowerCase() === 'repeat-x' || v.toLowerCase() === 'repeat-y' || v.toLowerCase() === 'no-repeat' || v.toLowerCase() === 'inherit')) {
	        return v;
	    }
	    return undefined;
	};

	module.exports.isValid = function isValid(v) {
	    return parse(v) !== undefined;
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('background-repeat', parse(v));
	    },
	    get: function () {
	        return this.getPropertyValue('background-repeat');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parsers = __webpack_require__(43);

	var isValid = module.exports.isValid = function isValid(v) {
	    return parsers.valueType(v) === parsers.TYPES.KEYWORD &&
	        (v.toLowerCase() === 'scroll' || v.toLowerCase() === 'fixed' || v.toLowerCase() === 'inherit');
	};

	module.exports.definition = {
	    set: function (v) {
	        if (!isValid(v)) {
	            return;
	        }
	        this._setProperty('background-attachment', v);
	    },
	    get: function () {
	        return this.getPropertyValue('background-attachment');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 52 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parsers = __webpack_require__(43);

	var valid_keywords = ['top', 'center', 'bottom', 'left', 'right'];

	var parse = function parse(v) {
	    var parts = v.split(/\s+/);
	    if (parts.length > 2 || parts.length < 1) {
	        return undefined;
	    }
	    var types = [];
	    parts.forEach(function (part, index) {
	        types[index] = parsers.valueType(part);
	    });
	    if (parts.length === 1) {
	        if (types[0] === parsers.TYPES.LENGTH || types[0] === parsers.TYPES.PERCENT) {
	            return v;
	        }
	        if (types[0] === parsers.TYPES.KEYWORD) {
	            if (valid_keywords.indexOf(v.toLowerCase()) !== -1 || v.toLowerCase() === 'inherit') {
	                return v;
	            }
	        }
	        return undefined;
	    }
	    if ((types[0] === parsers.TYPES.LENGTH || types[0] === parsers.TYPES.PERCENT) &&
	            (types[1] === parsers.TYPES.LENGTH || types[1] === parsers.TYPES.PERCENT)) {
	        return v;
	    }
	    if (types[0] !== parsers.TYPES.KEYWORD || types[1] !== parsers.TYPES.KEYWORD) {
	        return undefined;
	    }
	    if (valid_keywords.indexOf(parts[0]) !== -1 && valid_keywords.indexOf(parts[1]) !== -1) {
	        return v;
	    }
	    return undefined;
	};

	module.exports.isValid = function isValid(v) {
	    return parse(v) !== undefined;
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('background-position', parse(v));
	    },
	    get: function () {
	        return this.getPropertyValue('background-position');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 53 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('background-clip', v);
	    },
	    get: function () {
	        return this.getPropertyValue('background-clip');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 54 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('background-origin', v);
	    },
	    get: function () {
	        return this.getPropertyValue('background-origin');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 55 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('background-position-x', v);
	    },
	    get: function () {
	        return this.getPropertyValue('background-position-x');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 56 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('background-position-y', v);
	    },
	    get: function () {
	        return this.getPropertyValue('background-position-y');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 57 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('background-repeat-x', v);
	    },
	    get: function () {
	        return this.getPropertyValue('background-repeat-x');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 58 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('background-repeat-y', v);
	    },
	    get: function () {
	        return this.getPropertyValue('background-repeat-y');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 59 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('background-size', v);
	    },
	    get: function () {
	        return this.getPropertyValue('background-size');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 60 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('baseline-shift', v);
	    },
	    get: function () {
	        return this.getPropertyValue('baseline-shift');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var shorthandParser = __webpack_require__(43).shorthandParser;
	var shorthandSetter = __webpack_require__(43).shorthandSetter;
	var shorthandGetter = __webpack_require__(43).shorthandGetter;

	var shorthand_for = {
	    'border-width': __webpack_require__(62),
	    'border-style': __webpack_require__(63),
	    'border-color': __webpack_require__(64)
	};

	var isValid = function isValid(v) {
	    return shorthandParser(v, shorthand_for) !== undefined;
	};
	module.exports.isValid = isValid;

	var parser = function (v) {
	    if (v.toString().toLowerCase() === 'none') {
	        v = '';
	    }
	    if (isValid(v)) {
	        return v;
	    }
	    return undefined;
	};

	var myShorthandSetter = shorthandSetter('border', shorthand_for);
	var myShorthandGetter = shorthandGetter('border', shorthand_for);

	module.exports.definition = {
	    set: function (v) {
	        if (v.toString().toLowerCase() === 'none') {
	            v = '';
	        }
	        myShorthandSetter.call(this, v);
	        this.removeProperty('border-top');
	        this.removeProperty('border-left');
	        this.removeProperty('border-right');
	        this.removeProperty('border-bottom');
	        this._values['border-top'] = this._values.border;
	        this._values['border-left'] = this._values.border;
	        this._values['border-right'] = this._values.border;
	        this._values['border-bottom'] = this._values.border;
	    },
	    get: myShorthandGetter,
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parsers = __webpack_require__(43);
	var parsers = __webpack_require__(43);
	var implicitSetter = __webpack_require__(43).implicitSetter;

	// the valid border-widths:
	var widths = ['thin', 'medium', 'thick'];

	module.exports.isValid = function parse(v) {
	    var length = parsers.parseLength(v);
	    if (length !== undefined) {
	        return true;
	    }
	    if (typeof v !== 'string') {
	        return false;
	    }
	    if (v === '') {
	        return true;
	    }
	    v = v.toLowerCase();
	    if (widths.indexOf(v) === -1) {
	        return false;
	    }
	    return true;
	};
	var isValid = module.exports.isValid;

	var parser = function (v) {
	    var length = parsers.parseLength(v);
	    if (length !== undefined) {
	        return length;
	    }
	    if (isValid(v)) {
	        return v.toLowerCase();
	    }
	    return undefined;
	};

	module.exports.definition = {
	    set: implicitSetter('border', 'width', isValid, parser),
	    get: function () {
	        return this.getPropertyValue('border-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 63 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var implicitSetter = __webpack_require__(43).implicitSetter;

	// the valid border-styles:
	var styles = ['none', 'hidden', 'dotted', 'dashed', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset'];

	module.exports.isValid = function parse(v) {
	    return typeof v === 'string' && (v === '' || styles.indexOf(v) !== -1);
	};
	var isValid = module.exports.isValid;

	var parser = function (v) {
	    if (isValid(v)) {
	        return v.toLowerCase();
	    }
	    return undefined;
	};

	module.exports.definition = {
	    set: implicitSetter('border', 'style', isValid, parser),
	    get: function () {
	        return this.getPropertyValue('border-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 64 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parsers = __webpack_require__(43);
	var implicitSetter = __webpack_require__(43).implicitSetter;

	module.exports.isValid = function parse(v) {
	    if (typeof v !== 'string') {
	        return false;
	    }
	    return (v === '' || v.toLowerCase() === 'transparent' || parsers.valueType(v) === parsers.TYPES.COLOR);
	};
	var isValid = module.exports.isValid;

	var parser = function (v) {
	    if (isValid(v)) {
	        return v.toLowerCase();
	    }
	    return undefined;
	};

	module.exports.definition = {
	    set: implicitSetter('border', 'color', isValid, parser),
	    get: function () {
	        return this.getPropertyValue('border-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 65 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var shorthandSetter = __webpack_require__(43).shorthandSetter;
	var shorthandGetter = __webpack_require__(43).shorthandGetter;
	var shorthandParser = __webpack_require__(43).shorthandParser;

	var shorthand_for = {
	    'border-bottom-width': __webpack_require__(66),
	    'border-bottom-style': __webpack_require__(67),
	    'border-bottom-color': __webpack_require__(68)
	};

	var isValid = function isValid(v) {
	    return shorthandParser(v, shorthand_for) !== undefined;
	};
	module.exports.isValid = isValid;

	module.exports.definition = {
	    set: shorthandSetter('border-bottom', shorthand_for),
	    get: shorthandGetter('border-bottom', shorthand_for),
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = module.exports.isValid = __webpack_require__(62).isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            this._setProperty('border-bottom-width', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-bottom-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 67 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = __webpack_require__(63).isValid;
	module.exports.isValid = isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            if (v.toLowerCase() === 'none') {
	                v = '';
	                this.removeProperty('border-bottom-width');
	            }
	            this._setProperty('border-bottom-style', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-bottom-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = module.exports.isValid = __webpack_require__(64).isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            this._setProperty('border-bottom-color', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-bottom-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 69 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-bottom-left-radius', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-bottom-left-radius');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 70 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-bottom-right-radius', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-bottom-right-radius');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parsers = __webpack_require__(43);

	var parse = function parse(v) {
	    if (parsers.valueType(v) === parsers.TYPES.KEYWORD && (v.toLowerCase() === 'collapse' || v.toLowerCase() === 'separate' || v.toLowerCase() === 'inherit')) {
	        return v;
	    }
	    return undefined;
	};

	module.exports.isValid = function isValid(v) {
	    return parse(v) !== undefined;
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-collapse', parse(v));
	    },
	    get: function () {
	        return this.getPropertyValue('border-collapse');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 72 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-image', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-image');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 73 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-image-outset', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-image-outset');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 74 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-image-repeat', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-image-repeat');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 75 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-image-slice', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-image-slice');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 76 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-image-source', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-image-source');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 77 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-image-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-image-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var shorthandSetter = __webpack_require__(43).shorthandSetter;
	var shorthandGetter = __webpack_require__(43).shorthandGetter;
	var shorthandParser = __webpack_require__(43).shorthandParser;

	var shorthand_for = {
	    'border-left-width': __webpack_require__(79),
	    'border-left-style': __webpack_require__(80),
	    'border-left-color': __webpack_require__(81)
	};

	var isValid = function isValid(v) {
	    return shorthandParser(v, shorthand_for) !== undefined;
	};
	module.exports.isValid = isValid;

	module.exports.definition = {
	    set: shorthandSetter('border-left', shorthand_for),
	    get: shorthandGetter('border-left', shorthand_for),
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = module.exports.isValid = __webpack_require__(62).isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            this._setProperty('border-left-width', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-left-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = __webpack_require__(63).isValid;
	module.exports.isValid = isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            if (v.toLowerCase() === 'none') {
	                v = '';
	                this.removeProperty('border-left-width');
	            }
	            this._setProperty('border-left-style', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-left-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = module.exports.isValid = __webpack_require__(64).isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            this._setProperty('border-left-color', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-left-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 82 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-radius', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-radius');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var shorthandSetter = __webpack_require__(43).shorthandSetter;
	var shorthandGetter = __webpack_require__(43).shorthandGetter;
	var shorthandParser = __webpack_require__(43).shorthandParser;

	var shorthand_for = {
	    'border-right-width': __webpack_require__(84),
	    'border-right-style': __webpack_require__(85),
	    'border-right-color': __webpack_require__(86)
	};

	var isValid = function isValid(v) {
	    return shorthandParser(v, shorthand_for) !== undefined;
	};
	module.exports.isValid = isValid;

	module.exports.definition = {
	    set: shorthandSetter('border-right', shorthand_for),
	    get: shorthandGetter('border-right', shorthand_for),
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = module.exports.isValid = __webpack_require__(62).isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            this._setProperty('border-right-width', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-right-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = __webpack_require__(63).isValid;
	module.exports.isValid = isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            if (v.toLowerCase() === 'none') {
	                v = '';
	                this.removeProperty('border-right-width');
	            }
	            this._setProperty('border-right-style', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-right-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = module.exports.isValid = __webpack_require__(64).isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            this._setProperty('border-right-color', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-right-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parsers = __webpack_require__(43);

	// <length> <length>? | inherit
	// if one, it applies to both horizontal and verical spacing
	// if two, the first applies to the horizontal and the second applies to vertical spacing

	var parse = function parse(v) {
	    if (v.toLowerCase() === 'inherit') {
	        return v;
	    }
	    var parts = v.split(/\s+/);
	    if (parts.length !== 1 && parts.length !== 2) {
	        return undefined;
	    }
	    parts.forEach(function (part) {
	        if (parsers.valueType(part) !== parsers.TYPES.LENGTH) {
	            return undefined;
	        }
	    });

	    return v;
	};

	module.exports.isValid = function isValid(v) {
	    return parse(v) !== undefined;
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-spacing', parse(v));
	    },
	    get: function () {
	        return this.getPropertyValue('border-spacing');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var shorthandSetter = __webpack_require__(43).shorthandSetter;
	var shorthandGetter = __webpack_require__(43).shorthandGetter;
	var shorthandParser = __webpack_require__(43).shorthandParser;

	var shorthand_for = {
	    'border-top-width': __webpack_require__(89),
	    'border-top-style': __webpack_require__(90),
	    'border-top-color': __webpack_require__(91)
	};

	module.exports.isValid = function (v) {
	    return shorthandParser(v, shorthand_for) !== undefined;
	};

	module.exports.definition = {
	    set: shorthandSetter('border-top', shorthand_for),
	    get: shorthandGetter('border-top', shorthand_for),
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = __webpack_require__(62).isValid;
	module.exports.isValid = isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            this._setProperty('border-top-width', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-top-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = __webpack_require__(63).isValid;
	module.exports.isValid = isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            if (v.toLowerCase() === 'none') {
	                v = '';
	                this.removeProperty('border-top-width');
	            }
	            this._setProperty('border-top-style', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-top-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var isValid = module.exports.isValid = __webpack_require__(64).isValid;

	module.exports.definition = {
	    set: function (v) {
	        if (isValid(v)) {
	            this._setProperty('border-top-color', v);
	        }
	    },
	    get: function () {
	        return this.getPropertyValue('border-top-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 92 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-top-left-radius', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-top-left-radius');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 93 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('border-top-right-radius', v);
	    },
	    get: function () {
	        return this.getPropertyValue('border-top-right-radius');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseMeasurement = __webpack_require__(43).parseMeasurement;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('bottom', parseMeasurement(v));
	    },
	    get: function () {
	        return this.getPropertyValue('bottom');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 95 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('box-shadow', v);
	    },
	    get: function () {
	        return this.getPropertyValue('box-shadow');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 96 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('box-sizing', v);
	    },
	    get: function () {
	        return this.getPropertyValue('box-sizing');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 97 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('caption-side', v);
	    },
	    get: function () {
	        return this.getPropertyValue('caption-side');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseKeyword = __webpack_require__(43).parseKeyword;

	var clear_keywords = [ 'none', 'left', 'right', 'both', 'inherit' ];

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('clear', parseKeyword(v, clear_keywords));
	    },
	    get: function () {
	        return this.getPropertyValue('clear');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseMeasurement = __webpack_require__(43).parseMeasurement;

	/*jslint regexp: true*/
	var shape_regex = /^rect\((.*)\)$/i;
	/*jslint regexp: false*/

	var parse = function (val) {
	    if (val === '' || val === null) {
	        return val;
	    }
	    if (typeof val !== 'string') {
	        return undefined;
	    }
	    val = val.toLowerCase();
	    if (val === 'auto' || val === 'inherit') {
	        return val;
	    }
	    var matches = val.match(shape_regex);
	    if (!matches) {
	        return undefined;
	    }
	    var parts = matches[1].split(/\s*,\s*/);
	    if (parts.length !== 4) {
	        return undefined;
	    }
	    var valid = parts.every(function (part, index) {
	        var measurement = parseMeasurement(part);
	        parts[index] = measurement;
	        return measurement !== undefined;
	    });
	    if (!valid) {
	        return undefined;
	    }
	    parts = parts.join(', ');
	    return val.replace(matches[1], parts);
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('clip', parse(v));
	    },
	    get: function () {
	        return this.getPropertyValue('clip');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 100 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 101 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('color-interpolation', v);
	    },
	    get: function () {
	        return this.getPropertyValue('color-interpolation');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 102 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('color-interpolation-filters', v);
	    },
	    get: function () {
	        return this.getPropertyValue('color-interpolation-filters');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 103 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('color-profile', v);
	    },
	    get: function () {
	        return this.getPropertyValue('color-profile');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 104 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('color-rendering', v);
	    },
	    get: function () {
	        return this.getPropertyValue('color-rendering');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 105 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('content', v);
	    },
	    get: function () {
	        return this.getPropertyValue('content');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 106 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('counter-increment', v);
	    },
	    get: function () {
	        return this.getPropertyValue('counter-increment');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 107 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('counter-reset', v);
	    },
	    get: function () {
	        return this.getPropertyValue('counter-reset');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 108 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('float', v);
	    },
	    get: function () {
	        return this.getPropertyValue('float');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 109 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('cue', v);
	    },
	    get: function () {
	        return this.getPropertyValue('cue');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 110 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('cue-after', v);
	    },
	    get: function () {
	        return this.getPropertyValue('cue-after');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 111 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('cue-before', v);
	    },
	    get: function () {
	        return this.getPropertyValue('cue-before');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 112 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('cursor', v);
	    },
	    get: function () {
	        return this.getPropertyValue('cursor');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 113 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('direction', v);
	    },
	    get: function () {
	        return this.getPropertyValue('direction');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 114 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('display', v);
	    },
	    get: function () {
	        return this.getPropertyValue('display');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 115 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('dominant-baseline', v);
	    },
	    get: function () {
	        return this.getPropertyValue('dominant-baseline');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 116 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('elevation', v);
	    },
	    get: function () {
	        return this.getPropertyValue('elevation');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 117 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('empty-cells', v);
	    },
	    get: function () {
	        return this.getPropertyValue('empty-cells');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 118 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('enable-background', v);
	    },
	    get: function () {
	        return this.getPropertyValue('enable-background');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 119 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('fill', v);
	    },
	    get: function () {
	        return this.getPropertyValue('fill');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 120 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('fill-opacity', v);
	    },
	    get: function () {
	        return this.getPropertyValue('fill-opacity');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 121 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('fill-rule', v);
	    },
	    get: function () {
	        return this.getPropertyValue('fill-rule');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 122 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('filter', v);
	    },
	    get: function () {
	        return this.getPropertyValue('filter');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('flood-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('flood-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 124 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('flood-opacity', v);
	    },
	    get: function () {
	        return this.getPropertyValue('flood-opacity');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 125 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TYPES = __webpack_require__(43).TYPES;
	var valueType = __webpack_require__(43).valueType;
	var shorthandParser = __webpack_require__(43).shorthandParser;
	var shorthandSetter = __webpack_require__(43).shorthandSetter;
	var shorthandGetter = __webpack_require__(43).shorthandGetter;

	var shorthand_for = {
	    'font-family': __webpack_require__(126),
	    'font-size': __webpack_require__(127),
	    'font-style': __webpack_require__(128),
	    'font-variant': __webpack_require__(129),
	    'font-weight': __webpack_require__(130),
	    'line-height': __webpack_require__(131)
	};

	var static_fonts = ['caption', 'icon', 'menu', 'message-box', 'small-caption', 'status-bar', 'inherit'];

	module.exports.isValid = function isValid(v) {
	    return (shorthandParser(v, shorthand_for) !== undefined) ||
	        (valueType(v) === TYPES.KEYWORD && static_fonts.indexOf(v.toLowerCase()) !== -1);
	};

	var setter = shorthandSetter('font', shorthand_for);

	module.exports.definition = {
	    set: function (v) {
	        var short = shorthandParser(v, shorthand_for);
	        if (short !== undefined) {
	            return setter.call(this, v);
	        }
	        if (valueType(v) === TYPES.KEYWORD && static_fonts.indexOf(v.toLowerCase()) !== -1) {
	            this._setProperty('font', v);
	        }
	    },
	    get: shorthandGetter('font', shorthand_for),
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TYPES = __webpack_require__(43).TYPES;
	var valueType = __webpack_require__(43).valueType;

	var partsRegEx = /\s*,\s*/;
	module.exports.isValid = function isValid(v) {
	    var parts = v.split(partsRegEx);
	    var len = parts.length;
	    var i;
	    var type;
	    for (i = 0; i < len; i++) {
	        type = valueType(parts[i]);
	        if (type === TYPES.STRING || type === TYPES.KEYWORD) {
	            return true;
	        }
	    }
	    return false;
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('font-family', v);
	    },
	    get: function () {
	        return this.getPropertyValue('font-family');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TYPES = __webpack_require__(43).TYPES;
	var valueType = __webpack_require__(43).valueType;

	var absoluteSizes = ['xx-small', 'x-small', 'small', 'medium', 'large', 'x-large', 'xx-large'];
	var relativeSizes = ['larger', 'smaller'];

	module.exports.isValid = function (v) {
	    var type = valueType(v.toLowerCase());
	    return type === TYPES.LENGTH || type === TYPES.PERCENT ||
	        (type === TYPES.KEYWORD && absoluteSizes.indexOf(v.toLowerCase()) !== -1) ||
	        (type === TYPES.KEYWORD && relativeSizes.indexOf(v.toLowerCase()) !== -1);
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('font-size', v);
	    },
	    get: function () {
	        return this.getPropertyValue('font-size');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 128 */
/***/ function(module, exports) {

	'use strict';

	var valid_styles = ['normal', 'italic', 'oblique', 'inherit'];

	module.exports.isValid = function (v) {
	    return valid_styles.indexOf(v.toLowerCase()) !== -1;
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('font-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('font-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 129 */
/***/ function(module, exports) {

	'use strict';

	var valid_variants = ['normal', 'small-caps', 'inherit'];

	module.exports.isValid = function isValid(v) {
	    return valid_variants.indexOf(v.toLowerCase()) !== -1;
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('font-variant', v);
	    },
	    get: function () {
	        return this.getPropertyValue('font-variant');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 130 */
/***/ function(module, exports) {

	'use strict';

	var valid_weights = ['normal', 'bold', 'bolder', 'lighter', '100', '200', '300', '400', '500', '600', '700', '800', '900', 'inherit'];

	module.exports.isValid = function isValid(v) {
	    return valid_weights.indexOf(v.toLowerCase()) !== -1;
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('font-weight', v);
	    },
	    get: function () {
	        return this.getPropertyValue('font-weight');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var TYPES = __webpack_require__(43).TYPES;
	var valueType = __webpack_require__(43).valueType;

	module.exports.isValid = function isValid(v) {
	    var type = valueType(v);
	    return (type === TYPES.KEYWORD && (v.toLowerCase() === 'normal') || (v.toLowerCase() === 'inherit')) ||
	        type === TYPES.NUMBER || type === TYPES.LENGTH || type === TYPES.PERCENT;
	};

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('line-height', v);
	    },
	    get: function () {
	        return this.getPropertyValue('line-height');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 132 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('font-size-adjust', v);
	    },
	    get: function () {
	        return this.getPropertyValue('font-size-adjust');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 133 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('font-stretch', v);
	    },
	    get: function () {
	        return this.getPropertyValue('font-stretch');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 134 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('glyph-orientation-horizontal', v);
	    },
	    get: function () {
	        return this.getPropertyValue('glyph-orientation-horizontal');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 135 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('glyph-orientation-vertical', v);
	    },
	    get: function () {
	        return this.getPropertyValue('glyph-orientation-vertical');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseMeasurement = __webpack_require__(43).parseMeasurement;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('height', parseMeasurement(v));
	    },
	    get: function () {
	        return this.getPropertyValue('height');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 137 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('image-rendering', v);
	    },
	    get: function () {
	        return this.getPropertyValue('image-rendering');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 138 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('kerning', v);
	    },
	    get: function () {
	        return this.getPropertyValue('kerning');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 139 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseMeasurement = __webpack_require__(43).parseMeasurement;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('left', parseMeasurement(v));
	    },
	    get: function () {
	        return this.getPropertyValue('left');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 140 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('letter-spacing', v);
	    },
	    get: function () {
	        return this.getPropertyValue('letter-spacing');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('lighting-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('lighting-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 142 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('list-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('list-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 143 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('list-style-image', v);
	    },
	    get: function () {
	        return this.getPropertyValue('list-style-image');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 144 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('list-style-position', v);
	    },
	    get: function () {
	        return this.getPropertyValue('list-style-position');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 145 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('list-style-type', v);
	    },
	    get: function () {
	        return this.getPropertyValue('list-style-type');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 146 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('margin', v);
	    },
	    get: function () {
	        return this.getPropertyValue('margin');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 147 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('margin-bottom', v);
	    },
	    get: function () {
	        return this.getPropertyValue('margin-bottom');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 148 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('margin-left', v);
	    },
	    get: function () {
	        return this.getPropertyValue('margin-left');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 149 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('margin-right', v);
	    },
	    get: function () {
	        return this.getPropertyValue('margin-right');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 150 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('margin-top', v);
	    },
	    get: function () {
	        return this.getPropertyValue('margin-top');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 151 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('marker', v);
	    },
	    get: function () {
	        return this.getPropertyValue('marker');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 152 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('marker-end', v);
	    },
	    get: function () {
	        return this.getPropertyValue('marker-end');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 153 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('marker-mid', v);
	    },
	    get: function () {
	        return this.getPropertyValue('marker-mid');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 154 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('marker-offset', v);
	    },
	    get: function () {
	        return this.getPropertyValue('marker-offset');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 155 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('marker-start', v);
	    },
	    get: function () {
	        return this.getPropertyValue('marker-start');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 156 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('marks', v);
	    },
	    get: function () {
	        return this.getPropertyValue('marks');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 157 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('mask', v);
	    },
	    get: function () {
	        return this.getPropertyValue('mask');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 158 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('max-height', v);
	    },
	    get: function () {
	        return this.getPropertyValue('max-height');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 159 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('max-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('max-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 160 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('min-height', v);
	    },
	    get: function () {
	        return this.getPropertyValue('min-height');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 161 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('min-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('min-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseNumber = __webpack_require__(43).parseNumber;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('opacity', parseNumber(v));
	    },
	    get: function () {
	        return this.getPropertyValue('opacity');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 163 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('orphans', v);
	    },
	    get: function () {
	        return this.getPropertyValue('orphans');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 164 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('outline', v);
	    },
	    get: function () {
	        return this.getPropertyValue('outline');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('outline-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('outline-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 166 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('outline-offset', v);
	    },
	    get: function () {
	        return this.getPropertyValue('outline-offset');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 167 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('outline-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('outline-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 168 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('outline-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('outline-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 169 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('overflow', v);
	    },
	    get: function () {
	        return this.getPropertyValue('overflow');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 170 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('overflow-x', v);
	    },
	    get: function () {
	        return this.getPropertyValue('overflow-x');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 171 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('overflow-y', v);
	    },
	    get: function () {
	        return this.getPropertyValue('overflow-y');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 172 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('padding', v);
	    },
	    get: function () {
	        return this.getPropertyValue('padding');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 173 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('padding-bottom', v);
	    },
	    get: function () {
	        return this.getPropertyValue('padding-bottom');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 174 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('padding-left', v);
	    },
	    get: function () {
	        return this.getPropertyValue('padding-left');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 175 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('padding-right', v);
	    },
	    get: function () {
	        return this.getPropertyValue('padding-right');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 176 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('padding-top', v);
	    },
	    get: function () {
	        return this.getPropertyValue('padding-top');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 177 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('page', v);
	    },
	    get: function () {
	        return this.getPropertyValue('page');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 178 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('page-break-after', v);
	    },
	    get: function () {
	        return this.getPropertyValue('page-break-after');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 179 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('page-break-before', v);
	    },
	    get: function () {
	        return this.getPropertyValue('page-break-before');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 180 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('page-break-inside', v);
	    },
	    get: function () {
	        return this.getPropertyValue('page-break-inside');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 181 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('pause', v);
	    },
	    get: function () {
	        return this.getPropertyValue('pause');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 182 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('pause-after', v);
	    },
	    get: function () {
	        return this.getPropertyValue('pause-after');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 183 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('pause-before', v);
	    },
	    get: function () {
	        return this.getPropertyValue('pause-before');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 184 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('pitch', v);
	    },
	    get: function () {
	        return this.getPropertyValue('pitch');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 185 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('pitch-range', v);
	    },
	    get: function () {
	        return this.getPropertyValue('pitch-range');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 186 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('play-during', v);
	    },
	    get: function () {
	        return this.getPropertyValue('play-during');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 187 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('pointer-events', v);
	    },
	    get: function () {
	        return this.getPropertyValue('pointer-events');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 188 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('position', v);
	    },
	    get: function () {
	        return this.getPropertyValue('position');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 189 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('quotes', v);
	    },
	    get: function () {
	        return this.getPropertyValue('quotes');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 190 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('resize', v);
	    },
	    get: function () {
	        return this.getPropertyValue('resize');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 191 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('richness', v);
	    },
	    get: function () {
	        return this.getPropertyValue('richness');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseMeasurement = __webpack_require__(43).parseMeasurement;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('right', parseMeasurement(v));
	    },
	    get: function () {
	        return this.getPropertyValue('right');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 193 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('shape-rendering', v);
	    },
	    get: function () {
	        return this.getPropertyValue('shape-rendering');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 194 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('size', v);
	    },
	    get: function () {
	        return this.getPropertyValue('size');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 195 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('speak', v);
	    },
	    get: function () {
	        return this.getPropertyValue('speak');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 196 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('speak-header', v);
	    },
	    get: function () {
	        return this.getPropertyValue('speak-header');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 197 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('speak-numeral', v);
	    },
	    get: function () {
	        return this.getPropertyValue('speak-numeral');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 198 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('speak-punctuation', v);
	    },
	    get: function () {
	        return this.getPropertyValue('speak-punctuation');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 199 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('speech-rate', v);
	    },
	    get: function () {
	        return this.getPropertyValue('speech-rate');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 200 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('src', v);
	    },
	    get: function () {
	        return this.getPropertyValue('src');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stop-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('stop-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 202 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stop-opacity', v);
	    },
	    get: function () {
	        return this.getPropertyValue('stop-opacity');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 203 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stress', v);
	    },
	    get: function () {
	        return this.getPropertyValue('stress');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 204 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stroke', v);
	    },
	    get: function () {
	        return this.getPropertyValue('stroke');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 205 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stroke-dasharray', v);
	    },
	    get: function () {
	        return this.getPropertyValue('stroke-dasharray');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 206 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stroke-dashoffset', v);
	    },
	    get: function () {
	        return this.getPropertyValue('stroke-dashoffset');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 207 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stroke-linecap', v);
	    },
	    get: function () {
	        return this.getPropertyValue('stroke-linecap');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 208 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stroke-linejoin', v);
	    },
	    get: function () {
	        return this.getPropertyValue('stroke-linejoin');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 209 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stroke-miterlimit', v);
	    },
	    get: function () {
	        return this.getPropertyValue('stroke-miterlimit');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 210 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stroke-opacity', v);
	    },
	    get: function () {
	        return this.getPropertyValue('stroke-opacity');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 211 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('stroke-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('stroke-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 212 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('table-layout', v);
	    },
	    get: function () {
	        return this.getPropertyValue('table-layout');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 213 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-align', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-align');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 214 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-anchor', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-anchor');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 215 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-decoration', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-decoration');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 216 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-indent', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-indent');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 217 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-line-through', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-line-through');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 218 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-line-through-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('text-line-through-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 219 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-line-through-mode', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-line-through-mode');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 220 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-line-through-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-line-through-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 221 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-line-through-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-line-through-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 222 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-overflow', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-overflow');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 223 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-overline', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-overline');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 224 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-overline-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('text-overline-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 225 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-overline-mode', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-overline-mode');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 226 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-overline-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-overline-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 227 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-overline-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-overline-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 228 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-rendering', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-rendering');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 229 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-shadow', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-shadow');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 230 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-transform', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-transform');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 231 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-underline', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-underline');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 232 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-underline-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('text-underline-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 233 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-underline-mode', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-underline-mode');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 234 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-underline-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-underline-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 235 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('text-underline-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('text-underline-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 236 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseMeasurement = __webpack_require__(43).parseMeasurement;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('top', parseMeasurement(v));
	    },
	    get: function () {
	        return this.getPropertyValue('top');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 237 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('unicode-bidi', v);
	    },
	    get: function () {
	        return this.getPropertyValue('unicode-bidi');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 238 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('unicode-range', v);
	    },
	    get: function () {
	        return this.getPropertyValue('unicode-range');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 239 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('vector-effect', v);
	    },
	    get: function () {
	        return this.getPropertyValue('vector-effect');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 240 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('vertical-align', v);
	    },
	    get: function () {
	        return this.getPropertyValue('vertical-align');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 241 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('visibility', v);
	    },
	    get: function () {
	        return this.getPropertyValue('visibility');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 242 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('voic-family', v);
	    },
	    get: function () {
	        return this.getPropertyValue('voice-family');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 243 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('volume', v);
	    },
	    get: function () {
	        return this.getPropertyValue('volume');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 244 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-animation', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-animation');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 245 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-animation-delay', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-animation-delay');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 246 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-animation-direction', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-animation-direction');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 247 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-animation-duration', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-animation-duration');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 248 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-animation-fill-mode', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-animation-fill-mode');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 249 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-animation-iteration-count', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-animation-iteration-count');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 250 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-animation-name', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-animation-name');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 251 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-animation-play-state', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-animation-play-state');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 252 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-animation-timing-function', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-animation-timing-function');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 253 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-appearance', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-appearance');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 254 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-aspect-ratio', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-aspect-ratio');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 255 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-backface-visibility', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-backface-visibility');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 256 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-background-clip', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-background-clip');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 257 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-background-composite', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-background-composite');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 258 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-background-origin', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-background-origin');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 259 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-background-size', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-background-size');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 260 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-after', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-after');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 261 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-after-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-after-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 262 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-after-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-after-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 263 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-after-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-after-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 264 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-before', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-before');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 265 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-before-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-before-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 266 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-before-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-before-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 267 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-before-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-before-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 268 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-end', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-end');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 269 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-end-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-end-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 270 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-end-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-end-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 271 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-end-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-end-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 272 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-fit', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-fit');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 273 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-horizontal-spacing', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-horizontal-spacing');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 274 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-image', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-image');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 275 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-radius', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-radius');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 276 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-start', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-start');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 277 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-start-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-start-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 278 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-start-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-start-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 279 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-start-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-start-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 280 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-border-vertical-spacing', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-border-vertical-spacing');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 281 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-box-align', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-box-align');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 282 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-box-direction', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-box-direction');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 283 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-box-flex', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-box-flex');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 284 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-box-flex-group', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-box-flex-group');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 285 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-box-lines', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-box-lines');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 286 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-box-ordinal-group', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-box-ordinal-group');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 287 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-box-orient', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-box-orient');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 288 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-box-pack', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-box-pack');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 289 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-box-reflect', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-box-reflect');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 290 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-box-shadow', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-box-shadow');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 291 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-color-correction', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-color-correction');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 292 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-axis', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-axis');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 293 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-break-after', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-break-after');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 294 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-break-before', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-break-before');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 295 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-break-inside', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-break-inside');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 296 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-count', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-count');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 297 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-gap', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-gap');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 298 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-rule', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-rule');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 299 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-rule-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-rule-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 300 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-rule-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-rule-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 301 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-rule-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-rule-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 302 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-span', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-span');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 303 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-column-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-column-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 304 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-columns', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-columns');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 305 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-filter', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-filter');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 306 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-flex-align', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-flex-align');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 307 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-flex-direction', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-flex-direction');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 308 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-flex-flow', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-flex-flow');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 309 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-flex-item-align', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-flex-item-align');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 310 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-flex-line-pack', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-flex-line-pack');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 311 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-flex-order', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-flex-order');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 312 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-flex-pack', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-flex-pack');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 313 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-flex-wrap', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-flex-wrap');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 314 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-flow-from', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-flow-from');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 315 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-flow-into', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-flow-into');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 316 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-font-feature-settings', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-font-feature-settings');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 317 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-font-kerning', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-font-kerning');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 318 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-font-size-delta', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-font-size-delta');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 319 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-font-smoothing', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-font-smoothing');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 320 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-font-variant-ligatures', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-font-variant-ligatures');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 321 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-highlight', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-highlight');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 322 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-hyphenate-character', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-hyphenate-character');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 323 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-hyphenate-limit-after', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-hyphenate-limit-after');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 324 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-hyphenate-limit-before', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-hyphenate-limit-before');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 325 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-hyphenate-limit-lines', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-hyphenate-limit-lines');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 326 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-hyphens', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-hyphens');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 327 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-line-align', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-line-align');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 328 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-line-box-contain', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-line-box-contain');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 329 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-line-break', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-line-break');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 330 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-line-clamp', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-line-clamp');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 331 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-line-grid', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-line-grid');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 332 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-line-snap', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-line-snap');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 333 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-locale', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-locale');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 334 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-logical-height', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-logical-height');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 335 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-logical-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-logical-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 336 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-margin-after', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-margin-after');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 337 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-margin-after-collapse', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-margin-after-collapse');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 338 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-margin-before', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-margin-before');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 339 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-margin-before-collapse', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-margin-before-collapse');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 340 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-margin-bottom-collapse', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-margin-bottom-collapse');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 341 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-margin-collapse', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-margin-collapse');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 342 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-margin-end', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-margin-end');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 343 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-margin-start', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-margin-start');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 344 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-margin-top-collapse', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-margin-top-collapse');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 345 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-marquee', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-marquee');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 346 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-marquee-direction', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-marquee-direction');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 347 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-marquee-increment', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-marquee-increment');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 348 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-marquee-repetition', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-marquee-repetition');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 349 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-marquee-speed', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-marquee-speed');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 350 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-marquee-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-marquee-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 351 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 352 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-attachment', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-attachment');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 353 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-box-image', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-box-image');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 354 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-box-image-outset', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-box-image-outset');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 355 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-box-image-repeat', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-box-image-repeat');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 356 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-box-image-slice', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-box-image-slice');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 357 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-box-image-source', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-box-image-source');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 358 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-box-image-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-box-image-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 359 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-clip', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-clip');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 360 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-composite', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-composite');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 361 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-image', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-image');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 362 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-origin', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-origin');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 363 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-position', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-position');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 364 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-position-x', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-position-x');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 365 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-position-y', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-position-y');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 366 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-repeat', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-repeat');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 367 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-repeat-x', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-repeat-x');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 368 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-repeat-y', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-repeat-y');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 369 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-mask-size', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-mask-size');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-match-nearest-mail-blockquote-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-match-nearest-mail-blockquote-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 371 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-max-logical-height', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-max-logical-height');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 372 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-max-logical-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-max-logical-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 373 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-min-logical-height', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-min-logical-height');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 374 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-min-logical-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-min-logical-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 375 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-nbsp-mode', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-nbsp-mode');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 376 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-overflow-scrolling', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-overflow-scrolling');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 377 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-padding-after', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-padding-after');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 378 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-padding-before', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-padding-before');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 379 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-padding-end', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-padding-end');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 380 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-padding-start', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-padding-start');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 381 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-perspective', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-perspective');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 382 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-perspective-origin', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-perspective-origin');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 383 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-perspective-origin-x', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-perspective-origin-x');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 384 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-perspective-origin-y', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-perspective-origin-y');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 385 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-print-color-adjust', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-print-color-adjust');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 386 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-region-break-after', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-region-break-after');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 387 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-region-break-before', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-region-break-before');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 388 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-region-break-inside', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-region-break-inside');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 389 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-region-overflow', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-region-overflow');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 390 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-rtl-ordering', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-rtl-ordering');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 391 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-svg-shadow', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-svg-shadow');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 392 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-tap-highlight-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-tap-highlight-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 393 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-combine', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-combine');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 394 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-decorations-in-effect', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-decorations-in-effect');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 395 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-emphasis', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-emphasis');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-emphasis-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-emphasis-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 397 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-emphasis-position', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-emphasis-position');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 398 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-emphasis-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-emphasis-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-fill-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-fill-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 400 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-orientation', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-orientation');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 401 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-security', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-security');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 402 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-size-adjust', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-size-adjust');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 403 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-stroke', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-stroke');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseColor = __webpack_require__(43).parseColor;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-stroke-color', parseColor(v));
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-stroke-color');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 405 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-text-stroke-width', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-text-stroke-width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 406 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transform', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transform');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 407 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transform-origin', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transform-origin');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 408 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transform-origin-x', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transform-origin-x');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 409 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transform-origin-y', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transform-origin-y');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 410 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transform-origin-z', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transform-origin-z');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 411 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transform-style', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transform-style');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 412 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transition', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transition');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 413 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transition-delay', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transition-delay');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 414 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transition-duration', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transition-duration');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 415 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transition-property', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transition-property');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 416 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-transition-timing-function', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-transition-timing-function');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 417 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-user-drag', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-user-drag');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 418 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-user-modify', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-user-modify');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 419 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-user-select', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-user-select');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 420 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-wrap', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-wrap');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 421 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-wrap-flow', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-wrap-flow');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 422 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-wrap-margin', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-wrap-margin');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 423 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-wrap-padding', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-wrap-padding');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 424 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-wrap-shape-inside', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-wrap-shape-inside');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 425 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-wrap-shape-outside', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-wrap-shape-outside');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 426 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-wrap-through', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-wrap-through');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 427 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('-webkit-writing-mode', v);
	    },
	    get: function () {
	        return this.getPropertyValue('-webkit-writing-mode');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 428 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('white-space', v);
	    },
	    get: function () {
	        return this.getPropertyValue('white-space');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 429 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('widows', v);
	    },
	    get: function () {
	        return this.getPropertyValue('widows');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 430 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var parseMeasurement = __webpack_require__(43).parseMeasurement;

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('width', parseMeasurement(v));
	    },
	    get: function () {
	        return this.getPropertyValue('width');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 431 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('word-break', v);
	    },
	    get: function () {
	        return this.getPropertyValue('word-break');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 432 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('word-spacing', v);
	    },
	    get: function () {
	        return this.getPropertyValue('word-spacing');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 433 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('word-wrap', v);
	    },
	    get: function () {
	        return this.getPropertyValue('word-wrap');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 434 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('writing-mode', v);
	    },
	    get: function () {
	        return this.getPropertyValue('writing-mode');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 435 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('z-index', v);
	    },
	    get: function () {
	        return this.getPropertyValue('z-index');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 436 */
/***/ function(module, exports) {

	'use strict';

	module.exports.definition = {
	    set: function (v) {
	        this._setProperty('zoom', v);
	    },
	    get: function () {
	        return this.getPropertyValue('zoom');
	    },
	    enumerable: true,
	    configurable: true
	};


/***/ },
/* 437 */
/***/ function(module, exports) {

	module.exports = require("assert");

/***/ },
/* 438 */
/***/ function(module, exports, __webpack_require__) {

	var core = __webpack_require__(439).dom.living.core;
	var html = __webpack_require__(18).dom.level2.html;

	exports.dom = { living: { core: core, html: html } };


/***/ },
/* 439 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	var defineGetter = __webpack_require__(14).defineGetter;
	var core = __webpack_require__(440).dom.level3.core;
	__webpack_require__(513);

	// modify cloned instance for more info check: https://github.com/tmpvar/jsdom/issues/325
	core = Object.create(core);


	/*
	  // Introduced in Living Standard:
	  interface DOMImplementation {
	    [NewObject] Document createHTMLDocument(optional DOMString title);
	  };
	*/

	core.DOMImplementation.prototype.createHTMLDocument = function(title) {
	  // Let doc be a new document that is an HTML document.
	  // Set doc's content type to "text/html".
	  var document = new core.Document({
	    contentType: "text/html"
	  });

	  // Values set according to w3c test suite:
	  // https://github.com/w3c/web-platform-tests/blob/master/dom/nodes/DOMImplementation-createHTMLDocument.html
	  document.URL = document.documentURI = "about:blank";
	  document.compatMode = "CSS1Compat";
	  document.characterSet = "UTF-8";

	  // Create a doctype, with "html" as its name and with its node document set
	  // to doc. Append the newly created node to doc.
	  document.doctype = this.createDocumentType("html", "", "");

	  // Create an html element in the HTML namespace, and append it to doc.
	  var htmlElement = document.createElementNS("http://www.w3.org/1999/xhtml", "html");
	  document.appendChild(htmlElement);

	  // Create a head element in the HTML namespace, and append it to the html
	  // element created in the previous step.
	  var headElement = document.createElement("head");
	  htmlElement.appendChild(headElement);

	  // If the title argument is not omitted:
	  if (title !== undefined) {
	    // Create a title element in the HTML namespace, and append it to the head
	    // element created in the previous step.
	    var titleElement = document.createElement("title");
	    headElement.appendChild(titleElement);

	    // Create a Text node, set its data to title (which could be the empty
	    // string), and append it to the title element created in the previous step.
	    titleElement.appendChild(document.createTextNode(title));
	  }

	  // Create a body element in the HTML namespace, and append it to the html
	  // element created in the earlier step.
	  htmlElement.appendChild(document.createElement("body"));

	  // doc's origin is an alias to the origin of the context object's associated
	  // document, and doc's effective script origin is an alias to the effective
	  // script origin of the context object's associated document.

	  return document;
	};



	// https://dom.spec.whatwg.org/#concept-element-local-name
	defineGetter(core.Node.prototype, "localName", function() {
	  if (this.nodeType !== 1 /* ELEMENT_NODE */) {
	    return this._localName || null;
	  }

	  var nodeName = this._nodeName.split(":")[1] || this._nodeName;
	  if (nodeName) { nodeName = nodeName.toLowerCase(); }
	  return this._localName || nodeName || null;
	});
	exports.dom = { living: { core: core } };


/***/ },
/* 440 */
/***/ function(module, exports, __webpack_require__) {

	var events        = __webpack_require__(19),
	    core          = __webpack_require__(16).dom.level2.core,
	    defineGetter  = __webpack_require__(14).defineGetter,
	    defineSetter  = __webpack_require__(14).defineSetter,
	    HtmlToDom     = __webpack_require__(441).HtmlToDom,
	    domToHtml     = __webpack_require__(511).domToHtml;

	// modify cloned instance for more info check: https://github.com/tmpvar/jsdom/issues/325
	core = Object.create(core);

	/*
	  valuetype DOMString sequence<unsigned short>;
	  typedef   unsigned long long DOMTimeStamp;
	  typedef   any DOMUserData;
	  typedef   Object DOMObject;

	*/
	// ExceptionCode
	core.VALIDATION_ERR                 = 16;
	core.TYPE_MISMATCH_ERR              = 17;

	/*
	  // Introduced in DOM Level 3:
	  interface NameList {
	    DOMString          getName(in unsigned long index);
	    DOMString          getNamespaceURI(in unsigned long index);
	    readonly attribute unsigned long   length;
	    boolean            contains(in DOMString str);
	    boolean            containsNS(in DOMString namespaceURI,
	                                  in DOMString name);
	  };

	  // Introduced in DOM Level 3:
	  interface DOMImplementationList {
	    DOMImplementation  item(in unsigned long index);
	    readonly attribute unsigned long   length;
	  };

	  // Introduced in DOM Level 3:
	  interface DOMImplementationSource {
	    DOMImplementation  getDOMImplementation(in DOMString features);
	    DOMImplementationList getDOMImplementationList(in DOMString features);
	  };
	*/


	core.DOMImplementation.prototype.getFeature = function(feature, version)  {

	};

	/*
	  interface Node {
	    // Modified in DOM Level 3:
	    Node               insertBefore(in Node newChild,
	                                    in Node refChild)
	                                        raises(DOMException);
	    // Modified in DOM Level 3:
	    Node               replaceChild(in Node newChild,
	                                    in Node oldChild)
	                                        raises(DOMException);
	    // Modified in DOM Level 3:
	    Node               removeChild(in Node oldChild)
	                                        raises(DOMException);
	    // Modified in DOM Level 3:
	    Node               appendChild(in Node newChild)
	                                        raises(DOMException);
	    boolean            hasChildNodes();
	    Node               cloneNode(in boolean deep);
	    // Modified in DOM Level 3:
	    void               normalize();
	    // Introduced in DOM Level 3:
	    readonly attribute DOMString       baseURI;
	*/

	// Compare Document Position
	var DOCUMENT_POSITION_DISCONNECTED = core.Node.DOCUMENT_POSITION_DISCONNECTED =
	                                     core.Node.prototype.DOCUMENT_POSITION_DISCONNECTED = 0x01;

	var DOCUMENT_POSITION_PRECEDING    = core.Node.DOCUMENT_POSITION_PRECEDING =
	                                     core.Node.prototype.DOCUMENT_POSITION_PRECEDING    = 0x02;

	var DOCUMENT_POSITION_FOLLOWING    = core.Node.DOCUMENT_POSITION_FOLLOWING =
	                                     core.Node.prototype.DOCUMENT_POSITION_FOLLOWING    = 0x04;

	var DOCUMENT_POSITION_CONTAINS     = core.Node.DOCUMENT_POSITION_CONTAINS =
	                                     core.Node.prototype.DOCUMENT_POSITION_CONTAINS     = 0x08;

	var DOCUMENT_POSITION_CONTAINED_BY = core.Node.DOCUMENT_POSITION_CONTAINED_BY =
	                                     core.Node.prototype.DOCUMENT_POSITION_CONTAINED_BY = 0x10;

	var DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = core.Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC =
	                                                core.Node.prototype.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 0x20;

	var DOCUMENT_TYPE_NODE = core.Node.prototype.DOCUMENT_TYPE_NODE;

	core.Node.prototype.compareDocumentPosition = function compareDocumentPosition( otherNode ) {
	  if( !(otherNode instanceof core.Node) ) {
	    throw Error("Comparing position against non-Node values is not allowed")
	  }
	  var thisOwner, otherOwner;

	  if( this.nodeType === this.DOCUMENT_NODE)
	    thisOwner = this
	  else
	    thisOwner = this.ownerDocument

	  if( otherNode.nodeType === this.DOCUMENT_NODE)
	    otherOwner = otherNode
	  else
	    otherOwner = otherNode.ownerDocument

	  if( this === otherNode ) return 0
	  if( this === otherNode.ownerDocument ) return DOCUMENT_POSITION_FOLLOWING + DOCUMENT_POSITION_CONTAINED_BY
	  if( this.ownerDocument === otherNode ) return DOCUMENT_POSITION_PRECEDING + DOCUMENT_POSITION_CONTAINS
	  if( thisOwner !== otherOwner ) return DOCUMENT_POSITION_DISCONNECTED

	  // Text nodes for attributes does not have a _parentNode. So we need to find them as attribute child.
	  if( this.nodeType === this.ATTRIBUTE_NODE && this._childNodes && this._childNodes._toArray().indexOf(otherNode) !== -1)
	    return DOCUMENT_POSITION_FOLLOWING + DOCUMENT_POSITION_CONTAINED_BY

	  if( otherNode.nodeType === this.ATTRIBUTE_NODE && otherNode._childNodes && otherNode._childNodes._toArray().indexOf(this) !== -1)
	    return DOCUMENT_POSITION_PRECEDING + DOCUMENT_POSITION_CONTAINS

	  var point = this
	  var parents = [ ]
	  var previous = null
	  while( point ) {
	    if( point == otherNode ) return DOCUMENT_POSITION_PRECEDING + DOCUMENT_POSITION_CONTAINS
	    parents.push( point )
	    point = point._parentNode
	  }
	  point = otherNode
	  previous = null
	  while( point ) {
	    if( point == this ) return DOCUMENT_POSITION_FOLLOWING + DOCUMENT_POSITION_CONTAINED_BY
	    var location_index = parents.indexOf( point )
	    if( location_index !== -1) {
	     var smallest_common_ancestor = parents[ location_index ]
	     var this_index = smallest_common_ancestor._childNodes._toArray().indexOf( parents[location_index - 1] )
	     var other_index = smallest_common_ancestor._childNodes._toArray().indexOf( previous )
	     if( this_index > other_index ) {
	           return DOCUMENT_POSITION_PRECEDING
	     }
	     else {
	       return DOCUMENT_POSITION_FOLLOWING
	     }
	    }
	    previous = point
	    point = point._parentNode
	  }
	  return DOCUMENT_POSITION_DISCONNECTED
	};
	/*
	    // Introduced in DOM Level 3:
	             attribute DOMString       textContent;
	                                        // raises(DOMException) on setting
	                                        // raises(DOMException) on retrieval
	*/
	core.Node.prototype.isSameNode = function(other) {
	  return (other === this);
	};

	// @see http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407/core.html#Node3-textContent
	defineGetter(core.Node.prototype, 'textContent', function() {
	  switch (this.nodeType) {
	    case this.COMMENT_NODE:
	    case this.CDATA_SECTION_NODE:
	    case this.PROCESSING_INSTRUCTION_NODE:
	    case this.TEXT_NODE:
	      return this.nodeValue;

	    case this.ATTRIBUTE_NODE:
	    case this.DOCUMENT_FRAGMENT_NODE:
	    case this.ELEMENT_NODE:
	    case this.ENTITY_NODE:
	    case this.ENTITY_REFERENCE_NODE:
	      var out = '';
	      for (var i = 0 ; i < this.childNodes.length ; ++i) {
	        if (this.childNodes[i].nodeType !== this.COMMENT_NODE &&
	            this.childNodes[i].nodeType !== this.PROCESSING_INSTRUCTION_NODE) {
	          out += this.childNodes[i].textContent || '';
	        }
	      }
	      return out;

	    default:
	      return null;
	  }
	});

	defineSetter(core.Node.prototype, 'textContent', function(txt) {
	  switch (this.nodeType) {
	    case this.COMMENT_NODE:
	    case this.CDATA_SECTION_NODE:
	    case this.PROCESSING_INSTRUCTION_NODE:
	    case this.TEXT_NODE:
	      return this.nodeValue = String(txt);
	  }

	  for (var i = this.childNodes.length; --i >=0;) {
	    this.removeChild(this.childNodes.item(i));
	  }
	  if (txt !== "" && txt != null) {
	    this.appendChild(this._ownerDocument.createTextNode(txt));
	  }
	  return txt;
	});

	/*
	    // Introduced in DOM Level 3:
	    DOMString          lookupPrefix(in DOMString namespaceURI);
	    // Introduced in DOM Level 3:
	    boolean            isDefaultNamespace(in DOMString namespaceURI);
	    // Introduced in DOM Level 3:
	    DOMString          lookupNamespaceURI(in DOMString prefix);
	*/
	// Introduced in DOM Level 3:
	core.Node.prototype.isEqualNode = function(other) {
	  var self = this;
	  var diffValues = function() {
	    for (var i=0;i<arguments.length;i++) {
	      var k = arguments[i];
	      if (self[k] != other[k]) return(true);
	    }
	    return(false);
	  };
	  var diffNamedNodeMaps = function(snnm, onnm) {
	    if ((snnm == null) && (onnm == null)) return(false);
	    if ((snnm == null) || (onnm == null)) return(true);
	    if (snnm.length != onnm.length) return(true);
	    var js = [];
	    for (var j=0;j<onnm.length;j++) { js[j] = j }
	    for (var i=0;i<snnm.length;i++) {
	      var found=false;
	      for (var j=0;j<js.length;j++) {
	        if (snnm.item(i).isEqualNode(onnm.item(js[j]))) {
	          found = true;
	          // in order to be 100% accurate, we remove index values from consideration once they've matched
	          js.splice(j,1);
	          break;
	        }
	      }
	      if (!found) return(true);
	    }
	    return(false);
	  };
	  var diffNodeLists = function(snl, onl) {
	    if ((snl == null) && (onl == null)) return(false);
	    if ((snl == null) || (onl == null)) return(true);
	    if (snl.length != onl.length) return(true);
	    for (var i=0;i<snl.length;i++) {
	      if (!snl.item(i).isEqualNode(onl.item(i))) return(true);
	    }
	    return(false);
	  };
	  if (!other) return(false);
	  if (this.isSameNode(other)) return(true);
	  if (this.nodeType != other.nodeType) return(false);
	  if (diffValues('nodeName', 'localName', 'namespaceURI', 'prefix', 'nodeValue')) return(false);
	  if (diffNamedNodeMaps(this.attributes, other.attributes)) return(false);
	  if (diffNodeLists(this.childNodes, other.childNodes)) return(false);
	  if (this.nodeType == DOCUMENT_TYPE_NODE) {
	    if (diffValues('publicId', 'systemId', 'internalSubset')) return(false);
	    if (diffNamedNodeMaps(this.entities, other.entities)) return(false);
	    if (diffNamedNodeMaps(this.notations, other.notations)) return(false);
	  }
	  return (true);
	};
	/*
	    // Introduced in DOM Level 3:
	    DOMObject          getFeature(in DOMString feature,
	                                  in DOMString version);
	*/
	// Introduced in DOM Level 3:
	core.Node.prototype.setUserData = function(key, data, handler) {
	  var r = this[key] || null;
	  this[key] = data;
	  return(r);
	};

	// Introduced in DOM Level 3:
	core.Node.prototype.getUserData = function(key) {
	  var r = this[key] || null;
	  return(r);
	};
	/*
	  interface NodeList {
	    Node               item(in unsigned long index);
	    readonly attribute unsigned long   length;
	  };

	  interface NamedNodeMap {
	    Node               getNamedItem(in DOMString name);
	    Node               setNamedItem(in Node arg)
	                                        raises(DOMException);
	    Node               removeNamedItem(in DOMString name)
	                                        raises(DOMException);
	    Node               item(in unsigned long index);
	    readonly attribute unsigned long   length;
	    // Introduced in DOM Level 2:
	    Node               getNamedItemNS(in DOMString namespaceURI,
	                                      in DOMString localName)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    Node               setNamedItemNS(in Node arg)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    Node               removeNamedItemNS(in DOMString namespaceURI,
	                                         in DOMString localName)
	                                        raises(DOMException);
	  };

	  interface CharacterData : Node {
	             attribute DOMString       data;
	                                        // raises(DOMException) on setting
	                                        // raises(DOMException) on retrieval

	    readonly attribute unsigned long   length;
	    DOMString          substringData(in unsigned long offset,
	                                     in unsigned long count)
	                                        raises(DOMException);
	    void               appendData(in DOMString arg)
	                                        raises(DOMException);
	    void               insertData(in unsigned long offset,
	                                  in DOMString arg)
	                                        raises(DOMException);
	    void               deleteData(in unsigned long offset,
	                                  in unsigned long count)
	                                        raises(DOMException);
	    void               replaceData(in unsigned long offset,
	                                   in unsigned long count,
	                                   in DOMString arg)
	                                        raises(DOMException);
	  };

	  interface Attr : Node {
	    readonly attribute DOMString       name;
	    readonly attribute boolean         specified;
	             attribute DOMString       value;
	                                        // raises(DOMException) on setting

	    // Introduced in DOM Level 2:
	    readonly attribute Element         ownerElement;
	    // Introduced in DOM Level 3:
	    readonly attribute TypeInfo        schemaTypeInfo;

	*/
	    // Introduced in DOM Level 3:
	defineGetter(core.Attr.prototype, 'isId', function() {
	  return (this.name.toLowerCase() === 'id');
	});
	/*
	  };

	  interface Element : Node {
	    readonly attribute DOMString       tagName;
	    DOMString          getAttribute(in DOMString name);
	    void               setAttribute(in DOMString name,
	                                    in DOMString value)
	                                        raises(DOMException);
	    void               removeAttribute(in DOMString name)
	                                        raises(DOMException);
	    Attr               getAttributeNode(in DOMString name);
	    Attr               setAttributeNode(in Attr newAttr)
	                                        raises(DOMException);
	    Attr               removeAttributeNode(in Attr oldAttr)
	                                        raises(DOMException);
	    NodeList           getElementsByTagName(in DOMString name);
	    // Introduced in DOM Level 2:
	    DOMString          getAttributeNS(in DOMString namespaceURI,
	                                      in DOMString localName)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    void               setAttributeNS(in DOMString namespaceURI,
	                                      in DOMString qualifiedName,
	                                      in DOMString value)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    void               removeAttributeNS(in DOMString namespaceURI,
	                                         in DOMString localName)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    Attr               getAttributeNodeNS(in DOMString namespaceURI,
	                                          in DOMString localName)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    Attr               setAttributeNodeNS(in Attr newAttr)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    NodeList           getElementsByTagNameNS(in DOMString namespaceURI,
	                                              in DOMString localName)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    boolean            hasAttribute(in DOMString name);
	    // Introduced in DOM Level 2:
	    boolean            hasAttributeNS(in DOMString namespaceURI,
	                                      in DOMString localName)
	                                        raises(DOMException);
	    // Introduced in DOM Level 3:
	    readonly attribute TypeInfo        schemaTypeInfo;
	    // Introduced in DOM Level 3:
	    void               setIdAttribute(in DOMString name,
	                                      in boolean isId)
	                                        raises(DOMException);
	    // Introduced in DOM Level 3:
	    void               setIdAttributeNS(in DOMString namespaceURI,
	                                        in DOMString localName,
	                                        in boolean isId)
	                                        raises(DOMException);
	    // Introduced in DOM Level 3:
	    void               setIdAttributeNode(in Attr idAttr,
	                                          in boolean isId)
	                                        raises(DOMException);
	  };

	  interface Text : CharacterData {
	    Text               splitText(in unsigned long offset)
	                                        raises(DOMException);
	    // Introduced in DOM Level 3:
	    readonly attribute boolean         isElementContentWhitespace;
	    // Introduced in DOM Level 3:
	    readonly attribute DOMString       wholeText;
	    // Introduced in DOM Level 3:
	    Text               replaceWholeText(in DOMString content)
	                                        raises(DOMException);
	  };

	  interface Comment : CharacterData {
	  };

	  // Introduced in DOM Level 3:
	  interface TypeInfo {
	    readonly attribute DOMString       typeName;
	    readonly attribute DOMString       typeNamespace;

	    // DerivationMethods
	    const unsigned long       DERIVATION_RESTRICTION         = 0x00000001;
	    const unsigned long       DERIVATION_EXTENSION           = 0x00000002;
	    const unsigned long       DERIVATION_UNION               = 0x00000004;
	    const unsigned long       DERIVATION_LIST                = 0x00000008;

	    boolean            isDerivedFrom(in DOMString typeNamespaceArg,
	                                     in DOMString typeNameArg,
	                                     in unsigned long derivationMethod);
	  };
	*/
	// Introduced in DOM Level 3:
	core.UserDataHandler = function() {};
	core.UserDataHandler.prototype.NODE_CLONED   = 1;
	core.UserDataHandler.prototype.NODE_IMPORTED = 2;
	core.UserDataHandler.prototype.NODE_DELETED  = 3;
	core.UserDataHandler.prototype.NODE_RENAMED  = 4;
	core.UserDataHandler.prototype.NODE_ADOPTED  = 5;
	core.UserDataHandler.prototype.handle = function(operation, key, data, src, dst) {};

	// Introduced in DOM Level 3:
	core.DOMError = function(severity, message, type, relatedException, relatedData, location) {
	  this._severity         = severity;
	  this._message          = message;
	  this._type             = type;
	  this._relatedException = relatedException;
	  this._relatedData      = relatedData;
	  this._location         = location;
	};
	core.DOMError.prototype = {};
	core.DOMError.prototype.SEVERITY_WARNING     = 1;
	core.DOMError.prototype.SEVERITY_ERROR       = 2;
	core.DOMError.prototype.SEVERITY_FATAL_ERROR = 3;
	defineGetter(core.DOMError.prototype, 'severity', function() {
	  return this._severity;
	});
	defineGetter(core.DOMError.prototype, 'message', function() {
	  return this._message;
	});
	defineGetter(core.DOMError.prototype, 'type', function() {
	  return this._type;
	});
	defineGetter(core.DOMError.prototype, 'relatedException', function() {
	  return this._relatedException;
	});
	defineGetter(core.DOMError.prototype, 'relatedData', function() {
	  return this._relatedData;
	});
	defineGetter(core.DOMError.prototype, 'location', function() {
	  return this._location;
	});

	/*
	  // Introduced in DOM Level 3:
	  interface DOMErrorHandler {
	    boolean            handleError(in DOMError error);
	  };

	  // Introduced in DOM Level 3:
	  interface DOMLocator {
	    readonly attribute long            lineNumber;
	    readonly attribute long            columnNumber;
	    readonly attribute long            byteOffset;
	    readonly attribute long            utf16Offset;
	    readonly attribute Node            relatedNode;
	    readonly attribute DOMString       uri;
	  };
	*/

	// Introduced in DOM Level 3:
	core.DOMConfiguration = function(){
	  var possibleParameterNames = {
	    'canonical-form': [false, true], // extra rules for true
	    'cdata-sections': [true, false],
	    'check-character-normalization': [false, true],
	    'comments': [true, false],
	    'datatype-normalization': [false, true],
	    'element-content-whitespace': [true, false],
	    'entities': [true, false],
	    // 'error-handler': [],
	    'infoset': [undefined, true, false], // extra rules for true
	    'namespaces': [true, false],
	    'namespace-declarations': [true, false], // only checked if namespaces is true
	    'normalize-characters': [false, true],
	    // 'schema-location': [],
	    // 'schema-type': [],
	    'split-cdata-sections': [true, false],
	    'validate': [false, true],
	    'validate-if-schema': [false, true],
	    'well-formed': [true, false]
	  }
	};

	core.DOMConfiguration.prototype = {
	  setParameter: function(name, value) {},
	  getParameter: function(name) {},
	  canSetParameter: function(name, value) {},
	  parameterNames: function() {}
	};

	//core.Document.prototype._domConfig = new core.DOMConfiguration();
	defineGetter(core.Document.prototype, 'domConfig', function() {
	  return this._domConfig || new core.DOMConfiguration();;
	});

	// Introduced in DOM Level 3:
	core.DOMStringList = function() {};

	core.DOMStringList.prototype = {
	  item: function() {},
	  length: function() {},
	  contains: function() {}
	};


	/*
	  interface CDATASection : Text {
	  };

	  interface DocumentType : Node {
	    readonly attribute DOMString       name;
	    readonly attribute NamedNodeMap    entities;
	    readonly attribute NamedNodeMap    notations;
	    // Introduced in DOM Level 2:
	    readonly attribute DOMString       publicId;
	    // Introduced in DOM Level 2:
	    readonly attribute DOMString       systemId;
	    // Introduced in DOM Level 2:
	    readonly attribute DOMString       internalSubset;
	  };

	  interface Notation : Node {
	    readonly attribute DOMString       publicId;
	    readonly attribute DOMString       systemId;
	  };

	  interface Entity : Node {
	    readonly attribute DOMString       publicId;
	    readonly attribute DOMString       systemId;
	    readonly attribute DOMString       notationName;
	    // Introduced in DOM Level 3:
	    readonly attribute DOMString       inputEncoding;
	    // Introduced in DOM Level 3:
	    readonly attribute DOMString       xmlEncoding;
	    // Introduced in DOM Level 3:
	    readonly attribute DOMString       xmlVersion;
	  };

	  interface EntityReference : Node {
	  };

	  interface ProcessingInstruction : Node {
	    readonly attribute DOMString       target;
	             attribute DOMString       data;
	                                        // raises(DOMException) on setting

	  };

	  interface DocumentFragment : Node {
	  };

	  interface Document : Node {
	    // Modified in DOM Level 3:
	    readonly attribute DocumentType    doctype;
	    readonly attribute DOMImplementation implementation;
	    readonly attribute Element         documentElement;
	    Element            createElement(in DOMString tagName)
	                                        raises(DOMException);
	    DocumentFragment   createDocumentFragment();
	    Text               createTextNode(in DOMString data);
	    Comment            createComment(in DOMString data);
	    CDATASection       createCDATASection(in DOMString data)
	                                        raises(DOMException);
	    ProcessingInstruction createProcessingInstruction(in DOMString target,
	                                                      in DOMString data)
	                                        raises(DOMException);
	    Attr               createAttribute(in DOMString name)
	                                        raises(DOMException);
	    EntityReference    createEntityReference(in DOMString name)
	                                        raises(DOMException);
	    NodeList           getElementsByTagName(in DOMString tagname);
	    // Introduced in DOM Level 2:
	    Node               importNode(in Node importedNode,
	                                  in boolean deep)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    Element            createElementNS(in DOMString namespaceURI,
	                                       in DOMString qualifiedName)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    Attr               createAttributeNS(in DOMString namespaceURI,
	                                         in DOMString qualifiedName)
	                                        raises(DOMException);
	    // Introduced in DOM Level 2:
	    NodeList           getElementsByTagNameNS(in DOMString namespaceURI,
	                                              in DOMString localName);
	    // Introduced in DOM Level 2:
	    Element            getElementById(in DOMString elementId);
	*/

	// Introduced in DOM Level 3:
	core.Document.prototype._inputEncoding = null;
	defineGetter(core.Document.prototype, 'inputEncoding', function() {
	  return this._inputEncoding;
	});
	/*
	    // Introduced in DOM Level 3:
	    readonly attribute DOMString       xmlEncoding;
	    // Introduced in DOM Level 3:
	             attribute boolean         xmlStandalone;
	                                        // raises(DOMException) on setting

	    // Introduced in DOM Level 3:
	             attribute DOMString       xmlVersion;
	                                        // raises(DOMException) on setting

	    // Introduced in DOM Level 3:
	             attribute boolean         strictErrorChecking;
	    // Introduced in DOM Level 3:
	             attribute DOMString       documentURI;
	    // Introduced in DOM Level 3:
	    Node               adoptNode(in Node source)
	                                        raises(DOMException);
	    // Introduced in DOM Level 3:
	    readonly attribute DOMConfiguration domConfig;
	    // Introduced in DOM Level 3:
	    void               normalizeDocument();
	    // Introduced in DOM Level 3:
	    Node               renameNode(in Node n,
	                                  in DOMString namespaceURI,
	                                  in DOMString qualifiedName)
	                                        raises(DOMException);
	  };
	};

	#endif // _DOM_IDL_
	*/

	exports.dom = {
	  level3 : {
	    core: core
	  }
	};


/***/ },
/* 441 */
/***/ function(module, exports, __webpack_require__) {

	var parse5 = __webpack_require__(442);
	var htmlparser2 = __webpack_require__(463);

	function HtmlToDom(parser, parsingMode) {
	  if (!parser) {
	    if (parsingMode === "xml") {
	      parser = htmlparser2;
	    } else {
	      parser = parse5;
	    }
	  }

	  if (parser.DefaultHandler || (parser.Parser && parser.TreeAdapters)) {

	    // Forgiving HTML parser

	    if (parser.DefaultHandler){
	      // fb55/htmlparser2

	      parser.ParseHtml = function(rawHtml) {
	        var handler = new parser.DefaultHandler();
	        // Check if document is XML
	        var isXML = parsingMode === "xml";
	        var parserInstance = new parser.Parser(handler, {
	          xmlMode: isXML,
	          lowerCaseTags: !isXML,
	          lowerCaseAttributeNames: !isXML,
	          decodeEntities: true
	        });

	        parserInstance.includeLocation = false;
	        parserInstance.parseComplete(rawHtml);
	        return handler.dom;
	      };
	    } else if (parser.Parser && parser.TreeAdapters) {
	      parser.ParseHtml = function (rawHtml) {
	        if (parsingMode === 'xml') {
	          throw new Error('Can\'t parse XML with parse5, please use htmlparser2 instead.');
	        }
	        var instance = new parser.Parser(parser.TreeAdapters.htmlparser2);
	        var dom = instance.parse(rawHtml);
	        return dom.children;
	      };
	    }

	    this.appendHtmlToElement = function(html, element) {

	      if (typeof html !== 'string') {
	        html +='';
	      }

	      var parsed = parser.ParseHtml(html);

	      for (var i = 0; i < parsed.length; i++) {
	        setChild(element, parsed[i]);
	      }

	      return element;
	    };
	    this.appendHtmlToDocument = this.appendHtmlToElement;

	    if (parser.Parser && parser.TreeAdapters) {
	      this.appendHtmlToElement = function (html, element) {

	        if (typeof html !== 'string') {
	          html += '';
	        }

	        var instance = new parser.Parser(parser.TreeAdapters.htmlparser2);
	        var parentElement = parser.TreeAdapters.htmlparser2.createElement(element.tagName.toLowerCase(), element.namespaceURI, []);
	        var dom = instance.parseFragment(html, parentElement);
	        var parsed = dom.children;

	        for (var i = 0; i < parsed.length; i++) {
	          setChild(element, parsed[i]);
	        }

	        return element;
	      };
	    }

	  } else if (parser.moduleName == 'HTML5') { /* HTML5 parser */
	    this.appendHtmlToElement = function(html, element) {

	      if (typeof html !== 'string') {
	        html += '';
	      }
	      if (html.length > 0) {
	        if (element.nodeType == 9) {
	          new parser.Parser({document: element}).parse(html);
	        }
	        else {
	          var p = new parser.Parser({document: element.ownerDocument});
	          p.parse_fragment(html, element);
	        }
	      }
	    };
	  } else {
	    this.appendHtmlToElement = function () {
	      console.log('');
	      console.log('###########################################################');
	      console.log('#  WARNING: No compatible HTML parser was given.');
	      console.log('#  Element.innerHTML setter support has been disabled');
	      console.log('#  Element.innerHTML getter support will still function');
	      console.log('###########################################################');
	      console.log('');
	    };
	  }
	};

	// utility function for forgiving parser
	function setChild(parent, node) {

	  var c, newNode, currentDocument = parent._ownerDocument || parent;

	  switch (node.type)
	  {
	    case 'tag':
	    case 'script':
	    case 'style':
	      try {
	        newNode = currentDocument._createElementNoTagNameValidation(node.name);
	        newNode._namespaceURI = node.namespace || "http://www.w3.org/1999/xhtml";
	        if (node.location) {
	          newNode.sourceLocation = node.location;
	          newNode.sourceLocation.file = parent.sourceLocation.file;
	        }
	      } catch (err) {
	        currentDocument.raise('error', 'invalid markup', {
	          exception: err,
	          node : node
	        });

	        return null;
	      }
	    break;

	    case 'text':
	      // HTML entities should already be decoded by the parser, so no need to decode them
	      newNode = currentDocument.createTextNode(node.data);
	    break;

	    case 'comment':
	      newNode = currentDocument.createComment(node.data);
	    break;

	    default:
	      return null;
	    break;
	  }

	  if (!newNode)
	    return null;

	  newNode._localName = node.name;

	  if (node.attribs) {
	    for (c in node.attribs) {
	      var prefix = node['x-attribsPrefix'] && node['x-attribsPrefix'][c] ? node['x-attribsPrefix'][c] + ':' : '';
	      // catchin errors here helps with improperly escaped attributes
	      // but properly fixing parent should (can only?) be done in the htmlparser itself
	      try {
	        newNode.setAttribute(prefix + c, node.attribs[c]);
	        newNode.attributes[prefix + c]._namespaceURI = node['x-attribsNamespace'][c] || null;
	        newNode.attributes[prefix + c]._prefix = node['x-attribsPrefix'][c] || null;
	        newNode.attributes[prefix + c]._localName = c;
	      } catch(e2) { /* noop */ }
	    }
	  }

	  if (node.children) {
	    for (c = 0; c < node.children.length; c++) {
	      setChild(newNode, node.children[c]);
	    }
	  }

	  try{
	    return parent.appendChild(newNode);
	  }catch(err){
	    currentDocument.raise('error', err.message, {
	          exception: err,
	          node : node
	        });
	    return null;
	  }
	}

	exports.HtmlToDom = HtmlToDom;


/***/ },
/* 442 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	exports.Parser = __webpack_require__(443);
	exports.SimpleApiParser = __webpack_require__(457);
	exports.TreeSerializer =
	exports.Serializer = __webpack_require__(459);
	exports.JsDomParser = __webpack_require__(460);

	exports.TreeAdapters = {
	    default: __webpack_require__(453),
	    htmlparser2: __webpack_require__(462)
	};


/***/ },
/* 443 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Tokenizer = __webpack_require__(444),
	    OpenElementStack = __webpack_require__(449),
	    FormattingElementList = __webpack_require__(451),
	    LocationInfoMixin = __webpack_require__(452),
	    DefaultTreeAdapter = __webpack_require__(453),
	    Doctype = __webpack_require__(454),
	    ForeignContent = __webpack_require__(455),
	    Utils = __webpack_require__(456),
	    UNICODE = __webpack_require__(446),
	    HTML = __webpack_require__(450);

	//Aliases
	var $ = HTML.TAG_NAMES,
	    NS = HTML.NAMESPACES,
	    ATTRS = HTML.ATTRS;

	//Default options
	var DEFAULT_OPTIONS = {
	    decodeHtmlEntities: true,
	    locationInfo: false
	};

	//Misc constants
	var SEARCHABLE_INDEX_DEFAULT_PROMPT = 'This is a searchable index. Enter search keywords: ',
	    SEARCHABLE_INDEX_INPUT_NAME = 'isindex',
	    HIDDEN_INPUT_TYPE = 'hidden';

	//Adoption agency loops iteration count
	var AA_OUTER_LOOP_ITER = 8,
	    AA_INNER_LOOP_ITER = 3;

	//Insertion modes
	var INITIAL_MODE = 'INITIAL_MODE',
	    BEFORE_HTML_MODE = 'BEFORE_HTML_MODE',
	    BEFORE_HEAD_MODE = 'BEFORE_HEAD_MODE',
	    IN_HEAD_MODE = 'IN_HEAD_MODE',
	    AFTER_HEAD_MODE = 'AFTER_HEAD_MODE',
	    IN_BODY_MODE = 'IN_BODY_MODE',
	    TEXT_MODE = 'TEXT_MODE',
	    IN_TABLE_MODE = 'IN_TABLE_MODE',
	    IN_TABLE_TEXT_MODE = 'IN_TABLE_TEXT_MODE',
	    IN_CAPTION_MODE = 'IN_CAPTION_MODE',
	    IN_COLUMN_GROUP_MODE = 'IN_COLUMN_GROUP_MODE',
	    IN_TABLE_BODY_MODE = 'IN_TABLE_BODY_MODE',
	    IN_ROW_MODE = 'IN_ROW_MODE',
	    IN_CELL_MODE = 'IN_CELL_MODE',
	    IN_SELECT_MODE = 'IN_SELECT_MODE',
	    IN_SELECT_IN_TABLE_MODE = 'IN_SELECT_IN_TABLE_MODE',
	    IN_TEMPLATE_MODE = 'IN_TEMPLATE_MODE',
	    AFTER_BODY_MODE = 'AFTER_BODY_MODE',
	    IN_FRAMESET_MODE = 'IN_FRAMESET_MODE',
	    AFTER_FRAMESET_MODE = 'AFTER_FRAMESET_MODE',
	    AFTER_AFTER_BODY_MODE = 'AFTER_AFTER_BODY_MODE',
	    AFTER_AFTER_FRAMESET_MODE = 'AFTER_AFTER_FRAMESET_MODE';

	//Insertion mode reset map
	var INSERTION_MODE_RESET_MAP = {};

	INSERTION_MODE_RESET_MAP[$.TR] = IN_ROW_MODE;
	INSERTION_MODE_RESET_MAP[$.TBODY] =
	INSERTION_MODE_RESET_MAP[$.THEAD] =
	INSERTION_MODE_RESET_MAP[$.TFOOT] = IN_TABLE_BODY_MODE;
	INSERTION_MODE_RESET_MAP[$.CAPTION] = IN_CAPTION_MODE;
	INSERTION_MODE_RESET_MAP[$.COLGROUP] = IN_COLUMN_GROUP_MODE;
	INSERTION_MODE_RESET_MAP[$.TABLE] = IN_TABLE_MODE;
	INSERTION_MODE_RESET_MAP[$.BODY] = IN_BODY_MODE;
	INSERTION_MODE_RESET_MAP[$.FRAMESET] = IN_FRAMESET_MODE;

	//Template insertion mode switch map
	var TEMPLATE_INSERTION_MODE_SWITCH_MAP = {};

	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.CAPTION] =
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.COLGROUP] =
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TBODY] =
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TFOOT] =
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.THEAD] = IN_TABLE_MODE;
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.COL] = IN_COLUMN_GROUP_MODE;
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TR] = IN_TABLE_BODY_MODE;
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TD] =
	TEMPLATE_INSERTION_MODE_SWITCH_MAP[$.TH] = IN_ROW_MODE;

	//Token handlers map for insertion modes
	var _ = {};

	_[INITIAL_MODE] = {};
	_[INITIAL_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[INITIAL_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenInInitialMode;
	_[INITIAL_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = ignoreToken;
	_[INITIAL_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[INITIAL_MODE][Tokenizer.DOCTYPE_TOKEN] = doctypeInInitialMode;
	_[INITIAL_MODE][Tokenizer.START_TAG_TOKEN] =
	_[INITIAL_MODE][Tokenizer.END_TAG_TOKEN] =
	_[INITIAL_MODE][Tokenizer.EOF_TOKEN] = tokenInInitialMode;

	_[BEFORE_HTML_MODE] = {};
	_[BEFORE_HTML_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[BEFORE_HTML_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenBeforeHtml;
	_[BEFORE_HTML_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = ignoreToken;
	_[BEFORE_HTML_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[BEFORE_HTML_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[BEFORE_HTML_MODE][Tokenizer.START_TAG_TOKEN] = startTagBeforeHtml;
	_[BEFORE_HTML_MODE][Tokenizer.END_TAG_TOKEN] = endTagBeforeHtml;
	_[BEFORE_HTML_MODE][Tokenizer.EOF_TOKEN] = tokenBeforeHtml;

	_[BEFORE_HEAD_MODE] = {};
	_[BEFORE_HEAD_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[BEFORE_HEAD_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenBeforeHead;
	_[BEFORE_HEAD_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = ignoreToken;
	_[BEFORE_HEAD_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[BEFORE_HEAD_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[BEFORE_HEAD_MODE][Tokenizer.START_TAG_TOKEN] = startTagBeforeHead;
	_[BEFORE_HEAD_MODE][Tokenizer.END_TAG_TOKEN] = endTagBeforeHead;
	_[BEFORE_HEAD_MODE][Tokenizer.EOF_TOKEN] = tokenBeforeHead;

	_[IN_HEAD_MODE] = {};
	_[IN_HEAD_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_HEAD_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenInHead;
	_[IN_HEAD_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[IN_HEAD_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_HEAD_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_HEAD_MODE][Tokenizer.START_TAG_TOKEN] = startTagInHead;
	_[IN_HEAD_MODE][Tokenizer.END_TAG_TOKEN] = endTagInHead;
	_[IN_HEAD_MODE][Tokenizer.EOF_TOKEN] = tokenInHead;

	_[AFTER_HEAD_MODE] = {};
	_[AFTER_HEAD_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[AFTER_HEAD_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenAfterHead;
	_[AFTER_HEAD_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[AFTER_HEAD_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[AFTER_HEAD_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[AFTER_HEAD_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterHead;
	_[AFTER_HEAD_MODE][Tokenizer.END_TAG_TOKEN] = endTagAfterHead;
	_[AFTER_HEAD_MODE][Tokenizer.EOF_TOKEN] = tokenAfterHead;

	_[IN_BODY_MODE] = {};
	_[IN_BODY_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;
	_[IN_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[IN_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagInBody;
	_[IN_BODY_MODE][Tokenizer.END_TAG_TOKEN] = endTagInBody;
	_[IN_BODY_MODE][Tokenizer.EOF_TOKEN] = eofInBody;

	_[TEXT_MODE] = {};
	_[TEXT_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[TEXT_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =
	_[TEXT_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[TEXT_MODE][Tokenizer.COMMENT_TOKEN] =
	_[TEXT_MODE][Tokenizer.DOCTYPE_TOKEN] =
	_[TEXT_MODE][Tokenizer.START_TAG_TOKEN] = ignoreToken;
	_[TEXT_MODE][Tokenizer.END_TAG_TOKEN] = endTagInText;
	_[TEXT_MODE][Tokenizer.EOF_TOKEN] = eofInText;

	_[IN_TABLE_MODE] = {};
	_[IN_TABLE_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_TABLE_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =
	_[IN_TABLE_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = characterInTable;
	_[IN_TABLE_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_TABLE_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_TABLE_MODE][Tokenizer.START_TAG_TOKEN] = startTagInTable;
	_[IN_TABLE_MODE][Tokenizer.END_TAG_TOKEN] = endTagInTable;
	_[IN_TABLE_MODE][Tokenizer.EOF_TOKEN] = eofInBody;

	_[IN_TABLE_TEXT_MODE] = {};
	_[IN_TABLE_TEXT_MODE][Tokenizer.CHARACTER_TOKEN] = characterInTableText;
	_[IN_TABLE_TEXT_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_TABLE_TEXT_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInTableText;
	_[IN_TABLE_TEXT_MODE][Tokenizer.COMMENT_TOKEN] =
	_[IN_TABLE_TEXT_MODE][Tokenizer.DOCTYPE_TOKEN] =
	_[IN_TABLE_TEXT_MODE][Tokenizer.START_TAG_TOKEN] =
	_[IN_TABLE_TEXT_MODE][Tokenizer.END_TAG_TOKEN] =
	_[IN_TABLE_TEXT_MODE][Tokenizer.EOF_TOKEN] = tokenInTableText;

	_[IN_CAPTION_MODE] = {};
	_[IN_CAPTION_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;
	_[IN_CAPTION_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_CAPTION_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[IN_CAPTION_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_CAPTION_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_CAPTION_MODE][Tokenizer.START_TAG_TOKEN] = startTagInCaption;
	_[IN_CAPTION_MODE][Tokenizer.END_TAG_TOKEN] = endTagInCaption;
	_[IN_CAPTION_MODE][Tokenizer.EOF_TOKEN] = eofInBody;

	_[IN_COLUMN_GROUP_MODE] = {};
	_[IN_COLUMN_GROUP_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_COLUMN_GROUP_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenInColumnGroup;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.START_TAG_TOKEN] = startTagInColumnGroup;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.END_TAG_TOKEN] = endTagInColumnGroup;
	_[IN_COLUMN_GROUP_MODE][Tokenizer.EOF_TOKEN] = eofInBody;

	_[IN_TABLE_BODY_MODE] = {};
	_[IN_TABLE_BODY_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_TABLE_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =
	_[IN_TABLE_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = characterInTable;
	_[IN_TABLE_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_TABLE_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_TABLE_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagInTableBody;
	_[IN_TABLE_BODY_MODE][Tokenizer.END_TAG_TOKEN] = endTagInTableBody;
	_[IN_TABLE_BODY_MODE][Tokenizer.EOF_TOKEN] = eofInBody;

	_[IN_ROW_MODE] = {};
	_[IN_ROW_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_ROW_MODE][Tokenizer.NULL_CHARACTER_TOKEN] =
	_[IN_ROW_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = characterInTable;
	_[IN_ROW_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_ROW_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_ROW_MODE][Tokenizer.START_TAG_TOKEN] = startTagInRow;
	_[IN_ROW_MODE][Tokenizer.END_TAG_TOKEN] = endTagInRow;
	_[IN_ROW_MODE][Tokenizer.EOF_TOKEN] = eofInBody;

	_[IN_CELL_MODE] = {};
	_[IN_CELL_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;
	_[IN_CELL_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_CELL_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[IN_CELL_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_CELL_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_CELL_MODE][Tokenizer.START_TAG_TOKEN] = startTagInCell;
	_[IN_CELL_MODE][Tokenizer.END_TAG_TOKEN] = endTagInCell;
	_[IN_CELL_MODE][Tokenizer.EOF_TOKEN] = eofInBody;

	_[IN_SELECT_MODE] = {};
	_[IN_SELECT_MODE][Tokenizer.CHARACTER_TOKEN] = insertCharacters;
	_[IN_SELECT_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_SELECT_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[IN_SELECT_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_SELECT_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_SELECT_MODE][Tokenizer.START_TAG_TOKEN] = startTagInSelect;
	_[IN_SELECT_MODE][Tokenizer.END_TAG_TOKEN] = endTagInSelect;
	_[IN_SELECT_MODE][Tokenizer.EOF_TOKEN] = eofInBody;

	_[IN_SELECT_IN_TABLE_MODE] = {};
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.CHARACTER_TOKEN] = insertCharacters;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.START_TAG_TOKEN] = startTagInSelectInTable;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.END_TAG_TOKEN] = endTagInSelectInTable;
	_[IN_SELECT_IN_TABLE_MODE][Tokenizer.EOF_TOKEN] = eofInBody;

	_[IN_TEMPLATE_MODE] = {};
	_[IN_TEMPLATE_MODE][Tokenizer.CHARACTER_TOKEN] = characterInBody;
	_[IN_TEMPLATE_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_TEMPLATE_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[IN_TEMPLATE_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_TEMPLATE_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_TEMPLATE_MODE][Tokenizer.START_TAG_TOKEN] = startTagInTemplate;
	_[IN_TEMPLATE_MODE][Tokenizer.END_TAG_TOKEN] = endTagInTemplate;
	_[IN_TEMPLATE_MODE][Tokenizer.EOF_TOKEN] = eofInTemplate;

	_[AFTER_BODY_MODE] = {};
	_[AFTER_BODY_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[AFTER_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenAfterBody;
	_[AFTER_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[AFTER_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendCommentToRootHtmlElement;
	_[AFTER_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[AFTER_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterBody;
	_[AFTER_BODY_MODE][Tokenizer.END_TAG_TOKEN] = endTagAfterBody;
	_[AFTER_BODY_MODE][Tokenizer.EOF_TOKEN] = stopParsing;

	_[IN_FRAMESET_MODE] = {};
	_[IN_FRAMESET_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[IN_FRAMESET_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[IN_FRAMESET_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[IN_FRAMESET_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[IN_FRAMESET_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[IN_FRAMESET_MODE][Tokenizer.START_TAG_TOKEN] = startTagInFrameset;
	_[IN_FRAMESET_MODE][Tokenizer.END_TAG_TOKEN] = endTagInFrameset;
	_[IN_FRAMESET_MODE][Tokenizer.EOF_TOKEN] = stopParsing;

	_[AFTER_FRAMESET_MODE] = {};
	_[AFTER_FRAMESET_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[AFTER_FRAMESET_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[AFTER_FRAMESET_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = insertCharacters;
	_[AFTER_FRAMESET_MODE][Tokenizer.COMMENT_TOKEN] = appendComment;
	_[AFTER_FRAMESET_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[AFTER_FRAMESET_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterFrameset;
	_[AFTER_FRAMESET_MODE][Tokenizer.END_TAG_TOKEN] = endTagAfterFrameset;
	_[AFTER_FRAMESET_MODE][Tokenizer.EOF_TOKEN] = stopParsing;

	_[AFTER_AFTER_BODY_MODE] = {};
	_[AFTER_AFTER_BODY_MODE][Tokenizer.CHARACTER_TOKEN] = tokenAfterAfterBody;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = tokenAfterAfterBody;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.COMMENT_TOKEN] = appendCommentToDocument;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterAfterBody;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.END_TAG_TOKEN] = tokenAfterAfterBody;
	_[AFTER_AFTER_BODY_MODE][Tokenizer.EOF_TOKEN] = stopParsing;

	_[AFTER_AFTER_FRAMESET_MODE] = {};
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.CHARACTER_TOKEN] =
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.NULL_CHARACTER_TOKEN] = ignoreToken;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.WHITESPACE_CHARACTER_TOKEN] = whitespaceCharacterInBody;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.COMMENT_TOKEN] = appendCommentToDocument;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.DOCTYPE_TOKEN] = ignoreToken;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.START_TAG_TOKEN] = startTagAfterAfterFrameset;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.END_TAG_TOKEN] = ignoreToken;
	_[AFTER_AFTER_FRAMESET_MODE][Tokenizer.EOF_TOKEN] = stopParsing;

	//Searchable index building utils (<isindex> tag)
	function getSearchableIndexFormAttrs(isindexStartTagToken) {
	    var indexAction = Tokenizer.getTokenAttr(isindexStartTagToken, ATTRS.ACTION),
	        attrs = [];

	    if (indexAction !== null) {
	        attrs.push({
	            name: ATTRS.ACTION,
	            value: indexAction
	        });
	    }

	    return attrs;
	}

	function getSearchableIndexLabelText(isindexStartTagToken) {
	    var indexPrompt = Tokenizer.getTokenAttr(isindexStartTagToken, ATTRS.PROMPT);

	    return indexPrompt === null ? SEARCHABLE_INDEX_DEFAULT_PROMPT : indexPrompt;
	}

	function getSearchableIndexInputAttrs(isindexStartTagToken) {
	    var isindexAttrs = isindexStartTagToken.attrs,
	        inputAttrs = [];

	    for (var i = 0; i < isindexAttrs.length; i++) {
	        var name = isindexAttrs[i].name;

	        if (name !== ATTRS.NAME && name !== ATTRS.ACTION && name !== ATTRS.PROMPT)
	            inputAttrs.push(isindexAttrs[i]);
	    }

	    inputAttrs.push({
	        name: ATTRS.NAME,
	        value: SEARCHABLE_INDEX_INPUT_NAME
	    });

	    return inputAttrs;
	}

	//Parser
	var Parser = module.exports = function (treeAdapter, options) {
	    this.treeAdapter = treeAdapter || DefaultTreeAdapter;
	    this.options = Utils.mergeOptions(DEFAULT_OPTIONS, options);
	    this.scriptHandler = null;

	    if (this.options.locationInfo)
	        LocationInfoMixin.assign(this);
	};

	//API
	Parser.prototype.parse = function (html) {
	    var document = this.treeAdapter.createDocument();

	    this._reset(html, document, null);
	    this._runParsingLoop();

	    return document;
	};

	Parser.prototype.parseFragment = function (html, fragmentContext) {
	    //NOTE: use <template> element as a fragment context if context element was not provided,
	    //so we will parse in "forgiving" manner
	    if (!fragmentContext)
	        fragmentContext = this.treeAdapter.createElement($.TEMPLATE, NS.HTML, []);

	    //NOTE: create fake element which will be used as 'document' for fragment parsing.
	    //This is important for jsdom there 'document' can't be recreated, therefore
	    //fragment parsing causes messing of the main `document`.
	    var documentMock = this.treeAdapter.createElement('documentmock', NS.HTML, []);

	    this._reset(html, documentMock, fragmentContext);

	    if (this.treeAdapter.getTagName(fragmentContext) === $.TEMPLATE)
	        this._pushTmplInsertionMode(IN_TEMPLATE_MODE);

	    this._initTokenizerForFragmentParsing();
	    this._insertFakeRootElement();
	    this._resetInsertionMode();
	    this._findFormInFragmentContext();
	    this._runParsingLoop();

	    var rootElement = this.treeAdapter.getFirstChild(documentMock),
	        fragment = this.treeAdapter.createDocumentFragment();

	    this._adoptNodes(rootElement, fragment);

	    return fragment;
	};

	//Reset state
	Parser.prototype._reset = function (html, document, fragmentContext) {
	    this.tokenizer = new Tokenizer(html, this.options);

	    this.stopped = false;

	    this.insertionMode = INITIAL_MODE;
	    this.originalInsertionMode = '';

	    this.document = document;
	    this.fragmentContext = fragmentContext;

	    this.headElement = null;
	    this.formElement = null;

	    this.openElements = new OpenElementStack(this.document, this.treeAdapter);
	    this.activeFormattingElements = new FormattingElementList(this.treeAdapter);

	    this.tmplInsertionModeStack = [];
	    this.tmplInsertionModeStackTop = -1;
	    this.currentTmplInsertionMode = null;

	    this.pendingCharacterTokens = [];
	    this.hasNonWhitespacePendingCharacterToken = false;

	    this.framesetOk = true;
	    this.skipNextNewLine = false;
	    this.fosterParentingEnabled = false;
	};

	//Parsing loop
	Parser.prototype._iterateParsingLoop = function () {
	    this._setupTokenizerCDATAMode();

	    var token = this.tokenizer.getNextToken();

	    if (this.skipNextNewLine) {
	        this.skipNextNewLine = false;

	        if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN && token.chars[0] === '\n') {
	            if (token.chars.length === 1)
	                return;

	            token.chars = token.chars.substr(1);
	        }
	    }

	    if (this._shouldProcessTokenInForeignContent(token))
	        this._processTokenInForeignContent(token);

	    else
	        this._processToken(token);
	};

	Parser.prototype._runParsingLoop = function () {
	    while (!this.stopped)
	        this._iterateParsingLoop();
	};

	//Text parsing
	Parser.prototype._setupTokenizerCDATAMode = function () {
	    var current = this._getAdjustedCurrentElement();

	    this.tokenizer.allowCDATA = current && current !== this.document &&
	                                this.treeAdapter.getNamespaceURI(current) !== NS.HTML &&
	                                (!this._isHtmlIntegrationPoint(current)) &&
	                                (!this._isMathMLTextIntegrationPoint(current));
	};

	Parser.prototype._switchToTextParsing = function (currentToken, nextTokenizerState) {
	    this._insertElement(currentToken, NS.HTML);
	    this.tokenizer.state = nextTokenizerState;
	    this.originalInsertionMode = this.insertionMode;
	    this.insertionMode = TEXT_MODE;
	};

	//Fragment parsing
	Parser.prototype._getAdjustedCurrentElement = function () {
	    return this.openElements.stackTop === 0 && this.fragmentContext ?
	           this.fragmentContext :
	           this.openElements.current;
	};

	Parser.prototype._findFormInFragmentContext = function () {
	    var node = this.fragmentContext;

	    do {
	        if (this.treeAdapter.getTagName(node) === $.FORM) {
	            this.formElement = node;
	            break;
	        }

	        node = this.treeAdapter.getParentNode(node);
	    } while (node);
	};

	Parser.prototype._initTokenizerForFragmentParsing = function () {
	    var tn = this.treeAdapter.getTagName(this.fragmentContext);

	    if (tn === $.TITLE || tn === $.TEXTAREA)
	        this.tokenizer.state = Tokenizer.MODE.RCDATA;

	    else if (tn === $.STYLE || tn === $.XMP || tn === $.IFRAME ||
	             tn === $.NOEMBED || tn === $.NOFRAMES || tn === $.NOSCRIPT) {
	        this.tokenizer.state = Tokenizer.MODE.RAWTEXT;
	    }

	    else if (tn === $.SCRIPT)
	        this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;

	    else if (tn === $.PLAINTEXT)
	        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
	};

	//Tree mutation
	Parser.prototype._setDocumentType = function (token) {
	    this.treeAdapter.setDocumentType(this.document, token.name, token.publicId, token.systemId);
	};

	Parser.prototype._attachElementToTree = function (element) {
	    if (this._shouldFosterParentOnInsertion())
	        this._fosterParentElement(element);

	    else {
	        var parent = this.openElements.currentTmplContent || this.openElements.current;

	        this.treeAdapter.appendChild(parent, element);
	    }
	};

	Parser.prototype._appendElement = function (token, namespaceURI) {
	    var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);

	    this._attachElementToTree(element);
	};

	Parser.prototype._insertElement = function (token, namespaceURI) {
	    var element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);

	    this._attachElementToTree(element);
	    this.openElements.push(element);
	};

	Parser.prototype._insertTemplate = function (token) {
	    var tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs),
	        content = this.treeAdapter.createDocumentFragment();

	    this.treeAdapter.appendChild(tmpl, content);
	    this._attachElementToTree(tmpl);
	    this.openElements.push(tmpl);
	};

	Parser.prototype._insertFakeRootElement = function () {
	    var element = this.treeAdapter.createElement($.HTML, NS.HTML, []);

	    this.treeAdapter.appendChild(this.openElements.current, element);
	    this.openElements.push(element);
	};

	Parser.prototype._appendCommentNode = function (token, parent) {
	    var commentNode = this.treeAdapter.createCommentNode(token.data);

	    this.treeAdapter.appendChild(parent, commentNode);
	};

	Parser.prototype._insertCharacters = function (token) {
	    if (this._shouldFosterParentOnInsertion())
	        this._fosterParentText(token.chars);

	    else {
	        var parent = this.openElements.currentTmplContent || this.openElements.current;

	        this.treeAdapter.insertText(parent, token.chars);
	    }
	};

	Parser.prototype._adoptNodes = function (donor, recipient) {
	    while (true) {
	        var child = this.treeAdapter.getFirstChild(donor);

	        if (!child)
	            break;

	        this.treeAdapter.detachNode(child);
	        this.treeAdapter.appendChild(recipient, child);
	    }
	};

	//Token processing
	Parser.prototype._shouldProcessTokenInForeignContent = function (token) {
	    var current = this._getAdjustedCurrentElement();

	    if (!current || current === this.document)
	        return false;

	    var ns = this.treeAdapter.getNamespaceURI(current);

	    if (ns === NS.HTML)
	        return false;

	    if (this.treeAdapter.getTagName(current) === $.ANNOTATION_XML && ns === NS.MATHML &&
	        token.type === Tokenizer.START_TAG_TOKEN && token.tagName === $.SVG) {
	        return false;
	    }

	    var isCharacterToken = token.type === Tokenizer.CHARACTER_TOKEN ||
	                           token.type === Tokenizer.NULL_CHARACTER_TOKEN ||
	                           token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN,
	        isMathMLTextStartTag = token.type === Tokenizer.START_TAG_TOKEN &&
	                               token.tagName !== $.MGLYPH &&
	                               token.tagName !== $.MALIGNMARK;

	    if ((isMathMLTextStartTag || isCharacterToken) && this._isMathMLTextIntegrationPoint(current))
	        return false;

	    if ((token.type === Tokenizer.START_TAG_TOKEN || isCharacterToken) && this._isHtmlIntegrationPoint(current))
	        return false;

	    return token.type !== Tokenizer.EOF_TOKEN;
	};

	Parser.prototype._processToken = function (token) {
	    _[this.insertionMode][token.type](this, token);
	};

	Parser.prototype._processTokenInBodyMode = function (token) {
	    _[IN_BODY_MODE][token.type](this, token);
	};

	Parser.prototype._processTokenInForeignContent = function (token) {
	    if (token.type === Tokenizer.CHARACTER_TOKEN)
	        characterInForeignContent(this, token);

	    else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN)
	        nullCharacterInForeignContent(this, token);

	    else if (token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN)
	        insertCharacters(this, token);

	    else if (token.type === Tokenizer.COMMENT_TOKEN)
	        appendComment(this, token);

	    else if (token.type === Tokenizer.START_TAG_TOKEN)
	        startTagInForeignContent(this, token);

	    else if (token.type === Tokenizer.END_TAG_TOKEN)
	        endTagInForeignContent(this, token);
	};

	Parser.prototype._processFakeStartTagWithAttrs = function (tagName, attrs) {
	    var fakeToken = this.tokenizer.buildStartTagToken(tagName);

	    fakeToken.attrs = attrs;
	    this._processToken(fakeToken);
	};

	Parser.prototype._processFakeStartTag = function (tagName) {
	    var fakeToken = this.tokenizer.buildStartTagToken(tagName);

	    this._processToken(fakeToken);
	    return fakeToken;
	};

	Parser.prototype._processFakeEndTag = function (tagName) {
	    var fakeToken = this.tokenizer.buildEndTagToken(tagName);

	    this._processToken(fakeToken);
	    return fakeToken;
	};

	//Integration points
	Parser.prototype._isMathMLTextIntegrationPoint = function (element) {
	    var tn = this.treeAdapter.getTagName(element),
	        ns = this.treeAdapter.getNamespaceURI(element);

	    return ForeignContent.isMathMLTextIntegrationPoint(tn, ns);
	};

	Parser.prototype._isHtmlIntegrationPoint = function (element) {
	    var tn = this.treeAdapter.getTagName(element),
	        ns = this.treeAdapter.getNamespaceURI(element),
	        attrs = this.treeAdapter.getAttrList(element);

	    return ForeignContent.isHtmlIntegrationPoint(tn, ns, attrs);
	};

	//Active formatting elements reconstruction
	Parser.prototype._reconstructActiveFormattingElements = function () {
	    var listLength = this.activeFormattingElements.length;

	    if (listLength) {
	        var unopenIdx = listLength,
	            entry = null;

	        do {
	            unopenIdx--;
	            entry = this.activeFormattingElements.entries[unopenIdx];

	            if (entry.type === FormattingElementList.MARKER_ENTRY || this.openElements.contains(entry.element)) {
	                unopenIdx++;
	                break;
	            }
	        } while (unopenIdx > 0);

	        for (var i = unopenIdx; i < listLength; i++) {
	            entry = this.activeFormattingElements.entries[i];
	            this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));
	            entry.element = this.openElements.current;
	        }
	    }
	};

	//Close elements
	Parser.prototype._closeTableCell = function () {
	    if (this.openElements.hasInTableScope($.TD))
	        this._processFakeEndTag($.TD);

	    else
	        this._processFakeEndTag($.TH);
	};

	Parser.prototype._closePElement = function () {
	    this.openElements.generateImpliedEndTagsWithExclusion($.P);
	    this.openElements.popUntilTagNamePopped($.P);
	};

	//Insertion modes
	Parser.prototype._resetInsertionMode = function () {
	    for (var i = this.openElements.stackTop, last = false; i >= 0; i--) {
	        var element = this.openElements.items[i];

	        if (i === 0) {
	            last = true;

	            if (this.fragmentContext)
	                element = this.fragmentContext;
	        }

	        var tn = this.treeAdapter.getTagName(element),
	            newInsertionMode = INSERTION_MODE_RESET_MAP[tn];

	        if (newInsertionMode) {
	            this.insertionMode = newInsertionMode;
	            break;
	        }

	        else if (!last && (tn === $.TD || tn === $.TH)) {
	            this.insertionMode = IN_CELL_MODE;
	            break;
	        }

	        else if (!last && tn === $.HEAD) {
	            this.insertionMode = IN_HEAD_MODE;
	            break;
	        }

	        else if (tn === $.SELECT) {
	            this._resetInsertionModeForSelect(i);
	            break;
	        }

	        else if (tn === $.TEMPLATE) {
	            this.insertionMode = this.currentTmplInsertionMode;
	            break;
	        }

	        else if (tn === $.HTML) {
	            this.insertionMode = this.headElement ? AFTER_HEAD_MODE : BEFORE_HEAD_MODE;
	            break;
	        }

	        else if (last) {
	            this.insertionMode = IN_BODY_MODE;
	            break;
	        }
	    }
	};

	Parser.prototype._resetInsertionModeForSelect = function (selectIdx) {
	    if (selectIdx > 0) {
	        for (var i = selectIdx - 1; i > 0; i--) {
	            var ancestor = this.openElements.items[i],
	                tn = this.treeAdapter.getTagName(ancestor);

	            if (tn === $.TEMPLATE)
	                break;

	            else if (tn === $.TABLE) {
	                this.insertionMode = IN_SELECT_IN_TABLE_MODE;
	                return;
	            }
	        }
	    }

	    this.insertionMode = IN_SELECT_MODE;
	};

	Parser.prototype._pushTmplInsertionMode = function (mode) {
	    this.tmplInsertionModeStack.push(mode);
	    this.tmplInsertionModeStackTop++;
	    this.currentTmplInsertionMode = mode;
	};

	Parser.prototype._popTmplInsertionMode = function () {
	    this.tmplInsertionModeStack.pop();
	    this.tmplInsertionModeStackTop--;
	    this.currentTmplInsertionMode = this.tmplInsertionModeStack[this.tmplInsertionModeStackTop];
	};

	//Foster parenting
	Parser.prototype._isElementCausesFosterParenting = function (element) {
	    var tn = this.treeAdapter.getTagName(element);

	    return tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn == $.THEAD || tn === $.TR;
	};

	Parser.prototype._shouldFosterParentOnInsertion = function () {
	    return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.current);
	};

	Parser.prototype._findFosterParentingLocation = function () {
	    var location = {
	        parent: null,
	        beforeElement: null
	    };

	    for (var i = this.openElements.stackTop; i >= 0; i--) {
	        var openElement = this.openElements.items[i],
	            tn = this.treeAdapter.getTagName(openElement),
	            ns = this.treeAdapter.getNamespaceURI(openElement);

	        if (tn === $.TEMPLATE && ns === NS.HTML) {
	            location.parent = this.treeAdapter.getChildNodes(openElement)[0];
	            break;
	        }

	        else if (tn === $.TABLE) {
	            location.parent = this.treeAdapter.getParentNode(openElement);

	            if (location.parent)
	                location.beforeElement = openElement;
	            else
	                location.parent = this.openElements.items[i - 1];

	            break;
	        }
	    }

	    if (!location.parent)
	        location.parent = this.openElements.items[0];

	    return location;
	};

	Parser.prototype._fosterParentElement = function (element) {
	    var location = this._findFosterParentingLocation();

	    if (location.beforeElement)
	        this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);
	    else
	        this.treeAdapter.appendChild(location.parent, element);
	};

	Parser.prototype._fosterParentText = function (chars) {
	    var location = this._findFosterParentingLocation();

	    if (location.beforeElement)
	        this.treeAdapter.insertTextBefore(location.parent, chars, location.beforeElement);
	    else
	        this.treeAdapter.insertText(location.parent, chars);
	};

	//Special elements
	Parser.prototype._isSpecialElement = function (element) {
	    var tn = this.treeAdapter.getTagName(element),
	        ns = this.treeAdapter.getNamespaceURI(element);

	    return HTML.SPECIAL_ELEMENTS[ns][tn];
	};

	//Adoption agency algorithm
	//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)
	//------------------------------------------------------------------

	//Steps 5-8 of the algorithm
	function aaObtainFormattingElementEntry(p, token) {
	    var formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);

	    if (formattingElementEntry) {
	        if (!p.openElements.contains(formattingElementEntry.element)) {
	            p.activeFormattingElements.removeEntry(formattingElementEntry);
	            formattingElementEntry = null;
	        }

	        else if (!p.openElements.hasInScope(token.tagName))
	            formattingElementEntry = null;
	    }

	    else
	        genericEndTagInBody(p, token);

	    return formattingElementEntry;
	}

	//Steps 9 and 10 of the algorithm
	function aaObtainFurthestBlock(p, formattingElementEntry) {
	    var furthestBlock = null;

	    for (var i = p.openElements.stackTop; i >= 0; i--) {
	        var element = p.openElements.items[i];

	        if (element === formattingElementEntry.element)
	            break;

	        if (p._isSpecialElement(element))
	            furthestBlock = element;
	    }

	    if (!furthestBlock) {
	        p.openElements.popUntilElementPopped(formattingElementEntry.element);
	        p.activeFormattingElements.removeEntry(formattingElementEntry);
	    }

	    return furthestBlock;
	}

	//Step 13 of the algorithm
	function aaInnerLoop(p, furthestBlock, formattingElement) {
	    var element = null,
	        lastElement = furthestBlock,
	        nextElement = p.openElements.getCommonAncestor(furthestBlock);

	    for (var i = 0; i < AA_INNER_LOOP_ITER; i++) {
	        element = nextElement;

	        //NOTE: store next element for the next loop iteration (it may be deleted from the stack by step 9.5)
	        nextElement = p.openElements.getCommonAncestor(element);

	        var elementEntry = p.activeFormattingElements.getElementEntry(element);

	        if (!elementEntry) {
	            p.openElements.remove(element);
	            continue;
	        }

	        if (element === formattingElement)
	            break;

	        element = aaRecreateElementFromEntry(p, elementEntry);

	        if (lastElement === furthestBlock)
	            p.activeFormattingElements.bookmark = elementEntry;

	        p.treeAdapter.detachNode(lastElement);
	        p.treeAdapter.appendChild(element, lastElement);
	        lastElement = element;
	    }

	    return lastElement;
	}

	//Step 13.7 of the algorithm
	function aaRecreateElementFromEntry(p, elementEntry) {
	    var ns = p.treeAdapter.getNamespaceURI(elementEntry.element),
	        newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);

	    p.openElements.replace(elementEntry.element, newElement);
	    elementEntry.element = newElement;

	    return newElement;
	}

	//Step 14 of the algorithm
	function aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {
	    if (p._isElementCausesFosterParenting(commonAncestor))
	        p._fosterParentElement(lastElement);

	    else {
	        var tn = p.treeAdapter.getTagName(commonAncestor),
	            ns = p.treeAdapter.getNamespaceURI(commonAncestor);

	        if (tn === $.TEMPLATE && ns === NS.HTML)
	            commonAncestor = p.treeAdapter.getChildNodes(commonAncestor)[0];

	        p.treeAdapter.appendChild(commonAncestor, lastElement);
	    }
	}

	//Steps 15-19 of the algorithm
	function aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {
	    var ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element),
	        token = formattingElementEntry.token,
	        newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);

	    p._adoptNodes(furthestBlock, newElement);
	    p.treeAdapter.appendChild(furthestBlock, newElement);

	    p.activeFormattingElements.insertElementAfterBookmark(newElement, formattingElementEntry.token);
	    p.activeFormattingElements.removeEntry(formattingElementEntry);

	    p.openElements.remove(formattingElementEntry.element);
	    p.openElements.insertAfter(furthestBlock, newElement);
	}

	//Algorithm entry point
	function callAdoptionAgency(p, token) {
	    for (var i = 0; i < AA_OUTER_LOOP_ITER; i++) {
	        var formattingElementEntry = aaObtainFormattingElementEntry(p, token, formattingElementEntry);

	        if (!formattingElementEntry)
	            break;

	        var furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);

	        if (!furthestBlock)
	            break;

	        p.activeFormattingElements.bookmark = formattingElementEntry;

	        var lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element),
	            commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);

	        p.treeAdapter.detachNode(lastElement);
	        aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);
	        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);
	    }
	}


	//Generic token handlers
	//------------------------------------------------------------------
	function ignoreToken(p, token) {
	    //NOTE: do nothing =)
	}

	function appendComment(p, token) {
	    p._appendCommentNode(token, p.openElements.currentTmplContent || p.openElements.current)
	}

	function appendCommentToRootHtmlElement(p, token) {
	    p._appendCommentNode(token, p.openElements.items[0]);
	}

	function appendCommentToDocument(p, token) {
	    p._appendCommentNode(token, p.document);
	}

	function insertCharacters(p, token) {
	    p._insertCharacters(token);
	}

	function stopParsing(p, token) {
	    p.stopped = true;
	}

	//12.2.5.4.1 The "initial" insertion mode
	//------------------------------------------------------------------
	function doctypeInInitialMode(p, token) {
	    p._setDocumentType(token);

	    if (token.forceQuirks || Doctype.isQuirks(token.name, token.publicId, token.systemId))
	        p.treeAdapter.setQuirksMode(p.document);

	    p.insertionMode = BEFORE_HTML_MODE;
	}

	function tokenInInitialMode(p, token) {
	    p.treeAdapter.setQuirksMode(p.document);
	    p.insertionMode = BEFORE_HTML_MODE;
	    p._processToken(token);
	}


	//12.2.5.4.2 The "before html" insertion mode
	//------------------------------------------------------------------
	function startTagBeforeHtml(p, token) {
	    if (token.tagName === $.HTML) {
	        p._insertElement(token, NS.HTML);
	        p.insertionMode = BEFORE_HEAD_MODE;
	    }

	    else
	        tokenBeforeHtml(p, token);
	}

	function endTagBeforeHtml(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR)
	        tokenBeforeHtml(p, token);
	}

	function tokenBeforeHtml(p, token) {
	    p._insertFakeRootElement();
	    p.insertionMode = BEFORE_HEAD_MODE;
	    p._processToken(token);
	}


	//12.2.5.4.3 The "before head" insertion mode
	//------------------------------------------------------------------
	function startTagBeforeHead(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HTML)
	        startTagInBody(p, token);

	    else if (tn === $.HEAD) {
	        p._insertElement(token, NS.HTML);
	        p.headElement = p.openElements.current;
	        p.insertionMode = IN_HEAD_MODE;
	    }

	    else
	        tokenBeforeHead(p, token);
	}

	function endTagBeforeHead(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR)
	        tokenBeforeHead(p, token);
	}

	function tokenBeforeHead(p, token) {
	    p._processFakeStartTag($.HEAD);
	    p._processToken(token);
	}


	//12.2.5.4.4 The "in head" insertion mode
	//------------------------------------------------------------------
	function startTagInHead(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HTML)
	        startTagInBody(p, token);

	    else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND ||
	             tn === $.COMMAND || tn === $.LINK || tn === $.META) {
	        p._appendElement(token, NS.HTML);
	    }

	    else if (tn === $.TITLE)
	        p._switchToTextParsing(token, Tokenizer.MODE.RCDATA);

	    //NOTE: here we assume that we always act as an interactive user agent with enabled scripting, so we parse
	    //<noscript> as a rawtext.
	    else if (tn === $.NOSCRIPT || tn === $.NOFRAMES || tn === $.STYLE)
	        p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);

	    else if (tn === $.SCRIPT)
	        p._switchToTextParsing(token, Tokenizer.MODE.SCRIPT_DATA);

	    else if (tn === $.TEMPLATE) {
	        p._insertTemplate(token, NS.HTML);
	        p.activeFormattingElements.insertMarker();
	        p.framesetOk = false;
	        p.insertionMode = IN_TEMPLATE_MODE;
	        p._pushTmplInsertionMode(IN_TEMPLATE_MODE);
	    }

	    else if (tn !== $.HEAD)
	        tokenInHead(p, token);
	}

	function endTagInHead(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HEAD) {
	        p.openElements.pop();
	        p.insertionMode = AFTER_HEAD_MODE;
	    }

	    else if (tn === $.BODY || tn === $.BR || tn === $.HTML)
	        tokenInHead(p, token);

	    else if (tn === $.TEMPLATE && p.openElements.tmplCount > 0) {
	        p.openElements.generateImpliedEndTags();
	        p.openElements.popUntilTemplatePopped();
	        p.activeFormattingElements.clearToLastMarker();
	        p._popTmplInsertionMode();
	        p._resetInsertionMode();
	    }
	}

	function tokenInHead(p, token) {
	    p._processFakeEndTag($.HEAD);
	    p._processToken(token);
	}


	//12.2.5.4.6 The "after head" insertion mode
	//------------------------------------------------------------------
	function startTagAfterHead(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HTML)
	        startTagInBody(p, token);

	    else if (tn === $.BODY) {
	        p._insertElement(token, NS.HTML);
	        p.framesetOk = false;
	        p.insertionMode = IN_BODY_MODE;
	    }

	    else if (tn === $.FRAMESET) {
	        p._insertElement(token, NS.HTML);
	        p.insertionMode = IN_FRAMESET_MODE;
	    }

	    else if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META ||
	             tn === $.NOFRAMES || tn === $.SCRIPT || tn === $.STYLE || tn === $.TEMPLATE || tn === $.TITLE) {
	        p.openElements.push(p.headElement);
	        startTagInHead(p, token);
	        p.openElements.remove(p.headElement);
	    }

	    else if (tn !== $.HEAD)
	        tokenAfterHead(p, token);
	}

	function endTagAfterHead(p, token) {
	    var tn = token.tagName;

	    if (tn === $.BODY || tn === $.HTML || tn === $.BR)
	        tokenAfterHead(p, token);

	    else if (tn === $.TEMPLATE)
	        endTagInHead(p, token);
	}

	function tokenAfterHead(p, token) {
	    p._processFakeStartTag($.BODY);
	    p.framesetOk = true;
	    p._processToken(token);
	}


	//12.2.5.4.7 The "in body" insertion mode
	//------------------------------------------------------------------
	function whitespaceCharacterInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertCharacters(token);
	}

	function characterInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertCharacters(token);
	    p.framesetOk = false;
	}

	function htmlStartTagInBody(p, token) {
	    if (p.openElements.tmplCount === 0)
	        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);
	}

	function bodyStartTagInBody(p, token) {
	    var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();

	    if (bodyElement && p.openElements.tmplCount === 0) {
	        p.framesetOk = false;
	        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);
	    }
	}

	function framesetStartTagInBody(p, token) {
	    var bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();

	    if (p.framesetOk && bodyElement) {
	        p.treeAdapter.detachNode(bodyElement);
	        p.openElements.popAllUpToHtmlElement();
	        p._insertElement(token, NS.HTML);
	        p.insertionMode = IN_FRAMESET_MODE;
	    }
	}

	function addressStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();

	    p._insertElement(token, NS.HTML);
	}

	function numberedHeaderStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();

	    var tn = p.openElements.currentTagName;

	    if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)
	        p.openElements.pop();

	    p._insertElement(token, NS.HTML);
	}

	function preStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();

	    p._insertElement(token, NS.HTML);
	    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
	    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)
	    p.skipNextNewLine = true;
	    p.framesetOk = false;
	}

	function formStartTagInBody(p, token) {
	    var inTemplate = p.openElements.tmplCount > 0;

	    if (!p.formElement || inTemplate) {
	        if (p.openElements.hasInButtonScope($.P))
	            p._closePElement();

	        p._insertElement(token, NS.HTML);

	        if (!inTemplate)
	            p.formElement = p.openElements.current;
	    }
	}

	function listItemStartTagInBody(p, token) {
	    p.framesetOk = false;

	    for (var i = p.openElements.stackTop; i >= 0; i--) {
	        var element = p.openElements.items[i],
	            tn = p.treeAdapter.getTagName(element);

	        if ((token.tagName === $.LI && tn === $.LI) ||
	            ((token.tagName === $.DD || token.tagName === $.DT) && (tn === $.DD || tn == $.DT))) {
	            p._processFakeEndTag(tn);
	            break;
	        }

	        if (tn !== $.ADDRESS && tn !== $.DIV && tn !== $.P && p._isSpecialElement(element))
	            break;
	    }

	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();

	    p._insertElement(token, NS.HTML);
	}

	function plaintextStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();

	    p._insertElement(token, NS.HTML);
	    p.tokenizer.state = Tokenizer.MODE.PLAINTEXT;
	}

	function buttonStartTagInBody(p, token) {
	    if (p.openElements.hasInScope($.BUTTON)) {
	        p._processFakeEndTag($.BUTTON);
	        buttonStartTagInBody(p, token);
	    }

	    else {
	        p._reconstructActiveFormattingElements();
	        p._insertElement(token, NS.HTML);
	        p.framesetOk = false;
	    }
	}

	function aStartTagInBody(p, token) {
	    var activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName($.A);

	    if (activeElementEntry) {
	        p._processFakeEndTag($.A);
	        p.openElements.remove(activeElementEntry.element);
	        p.activeFormattingElements.removeEntry(activeElementEntry);
	    }

	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	    p.activeFormattingElements.pushElement(p.openElements.current, token);
	}

	function bStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	    p.activeFormattingElements.pushElement(p.openElements.current, token);
	}

	function nobrStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();

	    if (p.openElements.hasInScope($.NOBR)) {
	        p._processFakeEndTag($.NOBR);
	        p._reconstructActiveFormattingElements();
	    }

	    p._insertElement(token, NS.HTML);
	    p.activeFormattingElements.pushElement(p.openElements.current, token);
	}

	function appletStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	    p.activeFormattingElements.insertMarker();
	    p.framesetOk = false;
	}

	function tableStartTagInBody(p, token) {
	    if (!p.treeAdapter.isQuirksMode(p.document) && p.openElements.hasInButtonScope($.P))
	        p._closePElement();

	    p._insertElement(token, NS.HTML);
	    p.framesetOk = false;
	    p.insertionMode = IN_TABLE_MODE;
	}

	function areaStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._appendElement(token, NS.HTML);
	    p.framesetOk = false;
	}

	function inputStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._appendElement(token, NS.HTML);

	    var inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);

	    if (!inputType || inputType.toLowerCase() !== HIDDEN_INPUT_TYPE)
	        p.framesetOk = false;

	}

	function paramStartTagInBody(p, token) {
	    p._appendElement(token, NS.HTML);
	}

	function hrStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();

	    p._appendElement(token, NS.HTML);
	    p.framesetOk = false;
	}

	function imageStartTagInBody(p, token) {
	    token.tagName = $.IMG;
	    areaStartTagInBody(p, token);
	}

	function isindexStartTagInBody(p, token) {
	    if (!p.formElement || p.openElements.tmplCount > 0) {
	        p._processFakeStartTagWithAttrs($.FORM, getSearchableIndexFormAttrs(token));
	        p._processFakeStartTag($.HR);
	        p._processFakeStartTag($.LABEL);
	        p.treeAdapter.insertText(p.openElements.current, getSearchableIndexLabelText(token));
	        p._processFakeStartTagWithAttrs($.INPUT, getSearchableIndexInputAttrs(token));
	        p._processFakeEndTag($.LABEL);
	        p._processFakeStartTag($.HR);
	        p._processFakeEndTag($.FORM);
	    }
	}

	function textareaStartTagInBody(p, token) {
	    p._insertElement(token, NS.HTML);
	    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move
	    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)
	    p.skipNextNewLine = true;
	    p.tokenizer.state = Tokenizer.MODE.RCDATA;
	    p.originalInsertionMode = p.insertionMode;
	    p.framesetOk = false;
	    p.insertionMode = TEXT_MODE;
	}

	function xmpStartTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P))
	        p._closePElement();

	    p._reconstructActiveFormattingElements();
	    p.framesetOk = false;
	    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
	}

	function iframeStartTagInBody(p, token) {
	    p.framesetOk = false;
	    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
	}

	//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse
	//<noembed> as a rawtext.
	function noembedStartTagInBody(p, token) {
	    p._switchToTextParsing(token, Tokenizer.MODE.RAWTEXT);
	}

	function selectStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	    p.framesetOk = false;

	    if (p.insertionMode === IN_TABLE_MODE || p.insertionMode === IN_CAPTION_MODE ||
	        p.insertionMode === IN_TABLE_BODY_MODE || p.insertionMode === IN_ROW_MODE ||
	        p.insertionMode === IN_CELL_MODE) {
	        p.insertionMode = IN_SELECT_IN_TABLE_MODE;
	    }

	    else
	        p.insertionMode = IN_SELECT_MODE;
	}

	function optgroupStartTagInBody(p, token) {
	    if (p.openElements.currentTagName === $.OPTION)
	        p._processFakeEndTag($.OPTION);

	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	}

	function rpStartTagInBody(p, token) {
	    if (p.openElements.hasInScope($.RUBY))
	        p.openElements.generateImpliedEndTags();

	    p._insertElement(token, NS.HTML);
	}

	function menuitemStartTagInBody(p, token) {
	    p._appendElement(token, NS.HTML);
	}

	function mathStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();

	    ForeignContent.adjustTokenMathMLAttrs(token);
	    ForeignContent.adjustTokenXMLAttrs(token);

	    if (token.selfClosing)
	        p._appendElement(token, NS.MATHML);
	    else
	        p._insertElement(token, NS.MATHML);
	}

	function svgStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();

	    ForeignContent.adjustTokenSVGAttrs(token);
	    ForeignContent.adjustTokenXMLAttrs(token);

	    if (token.selfClosing)
	        p._appendElement(token, NS.SVG);
	    else
	        p._insertElement(token, NS.SVG);
	}

	function genericStartTagInBody(p, token) {
	    p._reconstructActiveFormattingElements();
	    p._insertElement(token, NS.HTML);
	}

	//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
	//It's faster than using dictionary.
	function startTagInBody(p, token) {
	    var tn = token.tagName;

	    switch (tn.length) {
	        case 1:
	            if (tn === $.I || tn === $.S || tn === $.B || tn === $.U)
	                bStartTagInBody(p, token);

	            else if (tn === $.P)
	                addressStartTagInBody(p, token);

	            else if (tn === $.A)
	                aStartTagInBody(p, token);

	            else
	                genericStartTagInBody(p, token);

	            break;

	        case 2:
	            if (tn === $.DL || tn === $.OL || tn === $.UL)
	                addressStartTagInBody(p, token);

	            else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)
	                numberedHeaderStartTagInBody(p, token);

	            else if (tn === $.LI || tn === $.DD || tn === $.DT)
	                listItemStartTagInBody(p, token);

	            else if (tn === $.EM || tn === $.TT)
	                bStartTagInBody(p, token);

	            else if (tn === $.BR)
	                areaStartTagInBody(p, token);

	            else if (tn === $.HR)
	                hrStartTagInBody(p, token);

	            else if (tn === $.RP || tn === $.RT)
	                rpStartTagInBody(p, token);

	            else if (tn !== $.TH && tn !== $.TD && tn !== $.TR)
	                genericStartTagInBody(p, token);

	            break;

	        case 3:
	            if (tn === $.DIV || tn === $.DIR || tn === $.NAV)
	                addressStartTagInBody(p, token);

	            else if (tn === $.PRE)
	                preStartTagInBody(p, token);

	            else if (tn === $.BIG)
	                bStartTagInBody(p, token);

	            else if (tn === $.IMG || tn === $.WBR)
	                areaStartTagInBody(p, token);

	            else if (tn === $.XMP)
	                xmpStartTagInBody(p, token);

	            else if (tn === $.SVG)
	                svgStartTagInBody(p, token);

	            else if (tn !== $.COL)
	                genericStartTagInBody(p, token);

	            break;

	        case 4:
	            if (tn === $.HTML)
	                htmlStartTagInBody(p, token);

	            else if (tn === $.BASE || tn === $.LINK || tn === $.META)
	                startTagInHead(p, token);

	            else if (tn === $.BODY)
	                bodyStartTagInBody(p, token);

	            else if (tn === $.MAIN || tn === $.MENU)
	                addressStartTagInBody(p, token);

	            else if (tn === $.FORM)
	                formStartTagInBody(p, token);

	            else if (tn === $.CODE || tn === $.FONT)
	                bStartTagInBody(p, token);

	            else if (tn === $.NOBR)
	                nobrStartTagInBody(p, token);

	            else if (tn === $.AREA)
	                areaStartTagInBody(p, token);

	            else if (tn === $.MATH)
	                mathStartTagInBody(p, token);

	            else if (tn !== $.HEAD)
	                genericStartTagInBody(p, token);

	            break;

	        case 5:
	            if (tn === $.STYLE || tn === $.TITLE)
	                startTagInHead(p, token);

	            else if (tn === $.ASIDE)
	                addressStartTagInBody(p, token);

	            else if (tn === $.SMALL)
	                bStartTagInBody(p, token);

	            else if (tn === $.TABLE)
	                tableStartTagInBody(p, token);

	            else if (tn === $.EMBED)
	                areaStartTagInBody(p, token);

	            else if (tn === $.INPUT)
	                inputStartTagInBody(p, token);

	            else if (tn === $.PARAM || tn === $.TRACK)
	                paramStartTagInBody(p, token);

	            else if (tn === $.IMAGE)
	                imageStartTagInBody(p, token);

	            else if (tn !== $.FRAME && tn !== $.TBODY && tn !== $.TFOOT && tn !== $.THEAD)
	                genericStartTagInBody(p, token);

	            break;

	        case 6:
	            if (tn === $.SCRIPT)
	                startTagInHead(p, token);

	            else if (tn === $.CENTER || tn === $.FIGURE || tn === $.FOOTER || tn === $.HEADER || tn === $.HGROUP)
	                addressStartTagInBody(p, token);

	            else if (tn === $.BUTTON)
	                buttonStartTagInBody(p, token);

	            else if (tn === $.STRIKE || tn === $.STRONG)
	                bStartTagInBody(p, token);

	            else if (tn === $.APPLET || tn === $.OBJECT)
	                appletStartTagInBody(p, token);

	            else if (tn === $.KEYGEN)
	                areaStartTagInBody(p, token);

	            else if (tn === $.SOURCE)
	                paramStartTagInBody(p, token);

	            else if (tn === $.IFRAME)
	                iframeStartTagInBody(p, token);

	            else if (tn === $.SELECT)
	                selectStartTagInBody(p, token);

	            else if (tn === $.OPTION)
	                optgroupStartTagInBody(p, token);

	            else
	                genericStartTagInBody(p, token);

	            break;

	        case 7:
	            if (tn === $.BGSOUND || tn === $.COMMAND)
	                startTagInHead(p, token);

	            else if (tn === $.DETAILS || tn === $.ADDRESS || tn === $.ARTICLE || tn === $.SECTION || tn === $.SUMMARY)
	                addressStartTagInBody(p, token);

	            else if (tn === $.LISTING)
	                preStartTagInBody(p, token);

	            else if (tn === $.MARQUEE)
	                appletStartTagInBody(p, token);

	            else if (tn === $.ISINDEX)
	                isindexStartTagInBody(p, token);

	            else if (tn === $.NOEMBED)
	                noembedStartTagInBody(p, token);

	            else if (tn !== $.CAPTION)
	                genericStartTagInBody(p, token);

	            break;

	        case 8:
	            if (tn === $.BASEFONT || tn === $.MENUITEM)
	                menuitemStartTagInBody(p, token);

	            else if (tn === $.FRAMESET)
	                framesetStartTagInBody(p, token);

	            else if (tn === $.FIELDSET)
	                addressStartTagInBody(p, token);

	            else if (tn === $.TEXTAREA)
	                textareaStartTagInBody(p, token);

	            else if (tn === $.TEMPLATE)
	                startTagInHead(p, token);

	            else if (tn === $.NOSCRIPT)
	                noembedStartTagInBody(p, token);

	            else if (tn === $.OPTGROUP)
	                optgroupStartTagInBody(p, token);

	            else if (tn !== $.COLGROUP)
	                genericStartTagInBody(p, token);

	            break;

	        case 9:
	            if (tn === $.PLAINTEXT)
	                plaintextStartTagInBody(p, token);

	            else
	                genericStartTagInBody(p, token);

	            break;

	        case 10:
	            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION)
	                addressStartTagInBody(p, token);

	            else
	                genericStartTagInBody(p, token);

	            break;

	        default:
	            genericStartTagInBody(p, token);
	    }
	}

	function bodyEndTagInBody(p, token) {
	    if (p.openElements.hasInScope($.BODY))
	        p.insertionMode = AFTER_BODY_MODE;

	    else
	        token.ignored = true;
	}

	function htmlEndTagInBody(p, token) {
	    var fakeToken = p._processFakeEndTag($.BODY);

	    if (!fakeToken.ignored)
	        p._processToken(token);
	}

	function addressEndTagInBody(p, token) {
	    var tn = token.tagName;

	    if (p.openElements.hasInScope(tn)) {
	        p.openElements.generateImpliedEndTags();
	        p.openElements.popUntilTagNamePopped(tn);
	    }
	}

	function formEndTagInBody(p, token) {
	    var inTemplate = p.openElements.tmplCount > 0,
	        formElement = p.formElement;

	    if (!inTemplate)
	        p.formElement = null;

	    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {
	        p.openElements.generateImpliedEndTags();

	        if (inTemplate)
	            p.openElements.popUntilTagNamePopped($.FORM);

	        else
	            p.openElements.remove(formElement);
	    }
	}

	function pEndTagInBody(p, token) {
	    if (p.openElements.hasInButtonScope($.P)) {
	        p.openElements.generateImpliedEndTagsWithExclusion($.P);
	        p.openElements.popUntilTagNamePopped($.P);
	    }

	    else {
	        p._processFakeStartTag($.P);
	        p._processToken(token);
	    }
	}

	function liEndTagInBody(p, token) {
	    if (p.openElements.hasInListItemScope($.LI)) {
	        p.openElements.generateImpliedEndTagsWithExclusion($.LI);
	        p.openElements.popUntilTagNamePopped($.LI);
	    }
	}

	function ddEndTagInBody(p, token) {
	    var tn = token.tagName;

	    if (p.openElements.hasInScope(tn)) {
	        p.openElements.generateImpliedEndTagsWithExclusion(tn);
	        p.openElements.popUntilTagNamePopped(tn);
	    }
	}

	function numberedHeaderEndTagInBody(p, token) {
	    if (p.openElements.hasNumberedHeaderInScope()) {
	        p.openElements.generateImpliedEndTags();
	        p.openElements.popUntilNumberedHeaderPopped();
	    }
	}

	function appletEndTagInBody(p, token) {
	    var tn = token.tagName;

	    if (p.openElements.hasInScope(tn)) {
	        p.openElements.generateImpliedEndTags();
	        p.openElements.popUntilTagNamePopped(tn);
	        p.activeFormattingElements.clearToLastMarker();
	    }
	}

	function brEndTagInBody(p, token) {
	    p._processFakeStartTag($.BR);
	}

	function genericEndTagInBody(p, token) {
	    var tn = token.tagName;

	    for (var i = p.openElements.stackTop; i > 0; i--) {
	        var element = p.openElements.items[i];

	        if (p.treeAdapter.getTagName(element) === tn) {
	            p.openElements.generateImpliedEndTagsWithExclusion(tn);
	            p.openElements.popUntilElementPopped(element);
	            break;
	        }

	        if (p._isSpecialElement(element))
	            break;
	    }
	}

	//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
	//It's faster than using dictionary.
	function endTagInBody(p, token) {
	    var tn = token.tagName;

	    switch (tn.length) {
	        case 1:
	            if (tn === $.A || tn === $.B || tn === $.I || tn === $.S || tn == $.U)
	                callAdoptionAgency(p, token);

	            else if (tn === $.P)
	                pEndTagInBody(p, token);

	            else
	                genericEndTagInBody(p, token);

	            break;

	        case 2:
	            if (tn == $.DL || tn === $.UL || tn === $.OL)
	                addressEndTagInBody(p, token);

	            else if (tn === $.LI)
	                liEndTagInBody(p, token);

	            else if (tn === $.DD || tn === $.DT)
	                ddEndTagInBody(p, token);

	            else if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)
	                numberedHeaderEndTagInBody(p, token);

	            else if (tn === $.BR)
	                brEndTagInBody(p, token);

	            else if (tn === $.EM || tn === $.TT)
	                callAdoptionAgency(p, token);

	            else
	                genericEndTagInBody(p, token);

	            break;

	        case 3:
	            if (tn === $.BIG)
	                callAdoptionAgency(p, token);

	            else if (tn === $.DIR || tn === $.DIV || tn === $.NAV)
	                addressEndTagInBody(p, token);

	            else
	                genericEndTagInBody(p, token);

	            break;

	        case 4:
	            if (tn === $.BODY)
	                bodyEndTagInBody(p, token);

	            else if (tn === $.HTML)
	                htmlEndTagInBody(p, token);

	            else if (tn === $.FORM)
	                formEndTagInBody(p, token);

	            else if (tn === $.CODE || tn === $.FONT || tn === $.NOBR)
	                callAdoptionAgency(p, token);

	            else if (tn === $.MAIN || tn === $.MENU)
	                addressEndTagInBody(p, token);

	            else
	                genericEndTagInBody(p, token);

	            break;

	        case 5:
	            if (tn === $.ASIDE)
	                addressEndTagInBody(p, token);

	            else if (tn === $.SMALL)
	                callAdoptionAgency(p, token);

	            else
	                genericEndTagInBody(p, token);

	            break;

	        case 6:
	            if (tn === $.CENTER || tn === $.FIGURE || tn === $.FOOTER || tn === $.HEADER || tn === $.HGROUP)
	                addressEndTagInBody(p, token);

	            else if (tn === $.APPLET || tn === $.OBJECT)
	                appletEndTagInBody(p, token);

	            else if (tn == $.STRIKE || tn === $.STRONG)
	                callAdoptionAgency(p, token);

	            else
	                genericEndTagInBody(p, token);

	            break;

	        case 7:
	            if (tn === $.ADDRESS || tn === $.ARTICLE || tn === $.DETAILS || tn === $.SECTION || tn === $.SUMMARY)
	                addressEndTagInBody(p, token);

	            else if (tn === $.MARQUEE)
	                appletEndTagInBody(p, token);

	            else
	                genericEndTagInBody(p, token);

	            break;

	        case 8:
	            if (tn === $.FIELDSET)
	                addressEndTagInBody(p, token);

	            else if (tn === $.TEMPLATE)
	                endTagInHead(p, token);

	            else
	                genericEndTagInBody(p, token);

	            break;

	        case 10:
	            if (tn === $.BLOCKQUOTE || tn === $.FIGCAPTION)
	                addressEndTagInBody(p, token);

	            else
	                genericEndTagInBody(p, token);

	            break;

	        default :
	            genericEndTagInBody(p, token);
	    }
	}

	function eofInBody(p, token) {
	    if (p.tmplInsertionModeStackTop > -1)
	        eofInTemplate(p, token);

	    else
	        p.stopped = true;
	}

	//12.2.5.4.8 The "text" insertion mode
	//------------------------------------------------------------------
	function endTagInText(p, token) {
	    if (!p.fragmentContext && p.scriptHandler && token.tagName === $.SCRIPT)
	        p.scriptHandler(p.document, p.openElements.current);

	    p.openElements.pop();
	    p.insertionMode = p.originalInsertionMode;
	}


	function eofInText(p, token) {
	    p.openElements.pop();
	    p.insertionMode = p.originalInsertionMode;
	    p._processToken(token);
	}


	//12.2.5.4.9 The "in table" insertion mode
	//------------------------------------------------------------------
	function characterInTable(p, token) {
	    var curTn = p.openElements.currentTagName;

	    if (curTn === $.TABLE || curTn === $.TBODY || curTn === $.TFOOT || curTn === $.THEAD || curTn === $.TR) {
	        p.pendingCharacterTokens = [];
	        p.hasNonWhitespacePendingCharacterToken = false;
	        p.originalInsertionMode = p.insertionMode;
	        p.insertionMode = IN_TABLE_TEXT_MODE;
	        p._processToken(token);
	    }

	    else
	        tokenInTable(p, token);
	}

	function captionStartTagInTable(p, token) {
	    p.openElements.clearBackToTableContext();
	    p.activeFormattingElements.insertMarker();
	    p._insertElement(token, NS.HTML);
	    p.insertionMode = IN_CAPTION_MODE;
	}

	function colgroupStartTagInTable(p, token) {
	    p.openElements.clearBackToTableContext();
	    p._insertElement(token, NS.HTML);
	    p.insertionMode = IN_COLUMN_GROUP_MODE;
	}

	function colStartTagInTable(p, token) {
	    p._processFakeStartTag($.COLGROUP);
	    p._processToken(token);
	}

	function tbodyStartTagInTable(p, token) {
	    p.openElements.clearBackToTableContext();
	    p._insertElement(token, NS.HTML);
	    p.insertionMode = IN_TABLE_BODY_MODE;
	}

	function tdStartTagInTable(p, token) {
	    p._processFakeStartTag($.TBODY);
	    p._processToken(token);
	}

	function tableStartTagInTable(p, token) {
	    var fakeToken = p._processFakeEndTag($.TABLE);

	    //NOTE: The fake end tag token here can only be ignored in the fragment case.
	    if (!fakeToken.ignored)
	        p._processToken(token);
	}

	function inputStartTagInTable(p, token) {
	    var inputType = Tokenizer.getTokenAttr(token, ATTRS.TYPE);

	    if (inputType && inputType.toLowerCase() === HIDDEN_INPUT_TYPE)
	        p._appendElement(token, NS.HTML);

	    else
	        tokenInTable(p, token);
	}

	function formStartTagInTable(p, token) {
	    if (!p.formElement && p.openElements.tmplCount === 0) {
	        p._insertElement(token, NS.HTML);
	        p.formElement = p.openElements.current;
	        p.openElements.pop();
	    }
	}

	function startTagInTable(p, token) {
	    var tn = token.tagName;

	    switch (tn.length) {
	        case 2:
	            if (tn === $.TD || tn === $.TH || tn === $.TR)
	                tdStartTagInTable(p, token);

	            else
	                tokenInTable(p, token);

	            break;

	        case 3:
	            if (tn === $.COL)
	                colStartTagInTable(p, token);

	            else
	                tokenInTable(p, token);

	            break;

	        case 4:
	            if (tn === $.FORM)
	                formStartTagInTable(p, token);

	            else
	                tokenInTable(p, token);

	            break;

	        case 5:
	            if (tn === $.TABLE)
	                tableStartTagInTable(p, token);

	            else if (tn === $.STYLE)
	                startTagInHead(p, token);

	            else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD)
	                tbodyStartTagInTable(p, token);

	            else if (tn === $.INPUT)
	                inputStartTagInTable(p, token);

	            else
	                tokenInTable(p, token);

	            break;

	        case 6:
	            if (tn === $.SCRIPT)
	                startTagInHead(p, token);

	            else
	                tokenInTable(p, token);

	            break;

	        case 7:
	            if (tn === $.CAPTION)
	                captionStartTagInTable(p, token);

	            else
	                tokenInTable(p, token);

	            break;

	        case 8:
	            if (tn === $.COLGROUP)
	                colgroupStartTagInTable(p, token);

	            else if (tn === $.TEMPLATE)
	                startTagInHead(p, token);

	            else
	                tokenInTable(p, token);

	            break;

	        default:
	            tokenInTable(p, token);
	    }

	}

	function endTagInTable(p, token) {
	    var tn = token.tagName;

	    if (tn === $.TABLE) {
	        if (p.openElements.hasInTableScope($.TABLE)) {
	            p.openElements.popUntilTagNamePopped($.TABLE);
	            p._resetInsertionMode();
	        }

	        else
	            token.ignored = true;
	    }

	    else if (tn === $.TEMPLATE)
	        endTagInHead(p, token);

	    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML &&
	             tn !== $.TBODY && tn !== $.TD && tn !== $.TFOOT && tn !== $.TH && tn !== $.THEAD && tn !== $.TR) {
	        tokenInTable(p, token);
	    }
	}

	function tokenInTable(p, token) {
	    var savedFosterParentingState = p.fosterParentingEnabled;

	    p.fosterParentingEnabled = true;
	    p._processTokenInBodyMode(token);
	    p.fosterParentingEnabled = savedFosterParentingState;
	}


	//12.2.5.4.10 The "in table text" insertion mode
	//------------------------------------------------------------------
	function whitespaceCharacterInTableText(p, token) {
	    p.pendingCharacterTokens.push(token);
	}

	function characterInTableText(p, token) {
	    p.pendingCharacterTokens.push(token);
	    p.hasNonWhitespacePendingCharacterToken = true;
	}

	function tokenInTableText(p, token) {
	    if (p.hasNonWhitespacePendingCharacterToken) {
	        for (var i = 0; i < p.pendingCharacterTokens.length; i++)
	            tokenInTable(p, p.pendingCharacterTokens[i]);
	    }

	    else {
	        for (var i = 0; i < p.pendingCharacterTokens.length; i++)
	            p._insertCharacters(p.pendingCharacterTokens[i]);
	    }

	    p.insertionMode = p.originalInsertionMode;
	    p._processToken(token);
	}


	//12.2.5.4.11 The "in caption" insertion mode
	//------------------------------------------------------------------
	function startTagInCaption(p, token) {
	    var tn = token.tagName;

	    if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY ||
	        tn === $.TD || tn === $.TFOOT || tn === $.TH || tn === $.THEAD || tn === $.TR) {
	        var fakeToken = p._processFakeEndTag($.CAPTION);

	        //NOTE: The fake end tag token here can only be ignored in the fragment case.
	        if (!fakeToken.ignored)
	            p._processToken(token);
	    }

	    else
	        startTagInBody(p, token);
	}

	function endTagInCaption(p, token) {
	    var tn = token.tagName;

	    if (tn === $.CAPTION) {
	        if (p.openElements.hasInTableScope($.CAPTION)) {
	            p.openElements.generateImpliedEndTags();
	            p.openElements.popUntilTagNamePopped($.CAPTION);
	            p.activeFormattingElements.clearToLastMarker();
	            p.insertionMode = IN_TABLE_MODE;
	        }

	        else
	            token.ignored = true;
	    }

	    else if (tn === $.TABLE) {
	        var fakeToken = p._processFakeEndTag($.CAPTION);

	        //NOTE: The fake end tag token here can only be ignored in the fragment case.
	        if (!fakeToken.ignored)
	            p._processToken(token);
	    }

	    else if (tn !== $.BODY && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML && tn !== $.TBODY &&
	             tn !== $.TD && tn !== $.TFOOT && tn !== $.TH && tn !== $.THEAD && tn !== $.TR) {
	        endTagInBody(p, token);
	    }
	}


	//12.2.5.4.12 The "in column group" insertion mode
	//------------------------------------------------------------------
	function startTagInColumnGroup(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HTML)
	        startTagInBody(p, token);

	    else if (tn === $.COL)
	        p._appendElement(token, NS.HTML);

	    else if (tn === $.TEMPLATE)
	        startTagInHead(p, token);

	    else
	        tokenInColumnGroup(p, token);
	}

	function endTagInColumnGroup(p, token) {
	    var tn = token.tagName;

	    if (tn === $.COLGROUP) {
	        if (p.openElements.currentTagName !== $.COLGROUP)
	            token.ignored = true;

	        else {
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_MODE;
	        }
	    }

	    else if (tn === $.TEMPLATE)
	        endTagInHead(p, token);

	    else if (tn !== $.COL)
	        tokenInColumnGroup(p, token);
	}

	function tokenInColumnGroup(p, token) {
	    var fakeToken = p._processFakeEndTag($.COLGROUP);

	    //NOTE: The fake end tag token here can only be ignored in the fragment case.
	    if (!fakeToken.ignored)
	        p._processToken(token);
	}

	//12.2.5.4.13 The "in table body" insertion mode
	//------------------------------------------------------------------
	function startTagInTableBody(p, token) {
	    var tn = token.tagName;

	    if (tn === $.TR) {
	        p.openElements.clearBackToTableBodyContext();
	        p._insertElement(token, NS.HTML);
	        p.insertionMode = IN_ROW_MODE;
	    }

	    else if (tn === $.TH || tn === $.TD) {
	        p._processFakeStartTag($.TR);
	        p._processToken(token);
	    }

	    else if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP ||
	             tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {

	        if (p.openElements.hasTableBodyContextInTableScope()) {
	            p.openElements.clearBackToTableBodyContext();
	            p._processFakeEndTag(p.openElements.currentTagName);
	            p._processToken(token);
	        }
	    }

	    else
	        startTagInTable(p, token);
	}

	function endTagInTableBody(p, token) {
	    var tn = token.tagName;

	    if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
	        if (p.openElements.hasInTableScope(tn)) {
	            p.openElements.clearBackToTableBodyContext();
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_MODE;
	        }
	    }

	    else if (tn === $.TABLE) {
	        if (p.openElements.hasTableBodyContextInTableScope()) {
	            p.openElements.clearBackToTableBodyContext();
	            p._processFakeEndTag(p.openElements.currentTagName);
	            p._processToken(token);
	        }
	    }

	    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP ||
	             tn !== $.HTML && tn !== $.TD && tn !== $.TH && tn !== $.TR) {
	        endTagInTable(p, token);
	    }
	}

	//12.2.5.4.14 The "in row" insertion mode
	//------------------------------------------------------------------
	function startTagInRow(p, token) {
	    var tn = token.tagName;

	    if (tn === $.TH || tn === $.TD) {
	        p.openElements.clearBackToTableRowContext();
	        p._insertElement(token, NS.HTML);
	        p.insertionMode = IN_CELL_MODE;
	        p.activeFormattingElements.insertMarker();
	    }

	    else if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY ||
	             tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {
	        var fakeToken = p._processFakeEndTag($.TR);

	        //NOTE: The fake end tag token here can only be ignored in the fragment case.
	        if (!fakeToken.ignored)
	            p._processToken(token);
	    }

	    else
	        startTagInTable(p, token);
	}

	function endTagInRow(p, token) {
	    var tn = token.tagName;

	    if (tn === $.TR) {
	        if (p.openElements.hasInTableScope($.TR)) {
	            p.openElements.clearBackToTableRowContext();
	            p.openElements.pop();
	            p.insertionMode = IN_TABLE_BODY_MODE;
	        }

	        else
	            token.ignored = true;
	    }

	    else if (tn === $.TABLE) {
	        var fakeToken = p._processFakeEndTag($.TR);

	        //NOTE: The fake end tag token here can only be ignored in the fragment case.
	        if (!fakeToken.ignored)
	            p._processToken(token);
	    }

	    else if (tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD) {
	        if (p.openElements.hasInTableScope(tn)) {
	            p._processFakeEndTag($.TR);
	            p._processToken(token);
	        }
	    }

	    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP ||
	             tn !== $.HTML && tn !== $.TD && tn !== $.TH) {
	        endTagInTable(p, token);
	    }
	}


	//12.2.5.4.15 The "in cell" insertion mode
	//------------------------------------------------------------------
	function startTagInCell(p, token) {
	    var tn = token.tagName;

	    if (tn === $.CAPTION || tn === $.COL || tn === $.COLGROUP || tn === $.TBODY ||
	        tn === $.TD || tn === $.TFOOT || tn === $.TH || tn === $.THEAD || tn === $.TR) {

	        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {
	            p._closeTableCell();
	            p._processToken(token);
	        }
	    }

	    else
	        startTagInBody(p, token);
	}

	function endTagInCell(p, token) {
	    var tn = token.tagName;

	    if (tn === $.TD || tn === $.TH) {
	        if (p.openElements.hasInTableScope(tn)) {
	            p.openElements.generateImpliedEndTags();
	            p.openElements.popUntilTagNamePopped(tn);
	            p.activeFormattingElements.clearToLastMarker();
	            p.insertionMode = IN_ROW_MODE;
	        }
	    }

	    else if (tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT || tn === $.THEAD || tn === $.TR) {
	        if (p.openElements.hasInTableScope(tn)) {
	            p._closeTableCell();
	            p._processToken(token);
	        }
	    }

	    else if (tn !== $.BODY && tn !== $.CAPTION && tn !== $.COL && tn !== $.COLGROUP && tn !== $.HTML)
	        endTagInBody(p, token);
	}

	//12.2.5.4.16 The "in select" insertion mode
	//------------------------------------------------------------------
	function startTagInSelect(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HTML)
	        startTagInBody(p, token);

	    else if (tn === $.OPTION) {
	        if (p.openElements.currentTagName === $.OPTION)
	            p._processFakeEndTag($.OPTION);

	        p._insertElement(token, NS.HTML);
	    }

	    else if (tn === $.OPTGROUP) {
	        if (p.openElements.currentTagName === $.OPTION)
	            p._processFakeEndTag($.OPTION);

	        if (p.openElements.currentTagName === $.OPTGROUP)
	            p._processFakeEndTag($.OPTGROUP);

	        p._insertElement(token, NS.HTML);
	    }

	    else if (tn === $.SELECT)
	        p._processFakeEndTag($.SELECT);

	    else if (tn === $.INPUT || tn === $.KEYGEN || tn === $.TEXTAREA) {
	        if (p.openElements.hasInSelectScope($.SELECT)) {
	            p._processFakeEndTag($.SELECT);
	            p._processToken(token);
	        }
	    }

	    else if (tn === $.SCRIPT || tn === $.TEMPLATE)
	        startTagInHead(p, token);
	}

	function endTagInSelect(p, token) {
	    var tn = token.tagName;

	    if (tn === $.OPTGROUP) {
	        var prevOpenElement = p.openElements.items[p.openElements.stackTop - 1],
	            prevOpenElementTn = prevOpenElement && p.treeAdapter.getTagName(prevOpenElement);

	        if (p.openElements.currentTagName === $.OPTION && prevOpenElementTn === $.OPTGROUP)
	            p._processFakeEndTag($.OPTION);

	        if (p.openElements.currentTagName === $.OPTGROUP)
	            p.openElements.pop();
	    }

	    else if (tn === $.OPTION) {
	        if (p.openElements.currentTagName === $.OPTION)
	            p.openElements.pop();
	    }

	    else if (tn === $.SELECT && p.openElements.hasInSelectScope($.SELECT)) {
	        p.openElements.popUntilTagNamePopped($.SELECT);
	        p._resetInsertionMode();
	    }

	    else if (tn === $.TEMPLATE)
	        endTagInHead(p, token);
	}

	//12.2.5.4.17 The "in select in table" insertion mode
	//------------------------------------------------------------------
	function startTagInSelectInTable(p, token) {
	    var tn = token.tagName;

	    if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT ||
	        tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {
	        p._processFakeEndTag($.SELECT);
	        p._processToken(token);
	    }

	    else
	        startTagInSelect(p, token);
	}

	function endTagInSelectInTable(p, token) {
	    var tn = token.tagName;

	    if (tn === $.CAPTION || tn === $.TABLE || tn === $.TBODY || tn === $.TFOOT ||
	        tn === $.THEAD || tn === $.TR || tn === $.TD || tn === $.TH) {
	        if (p.openElements.hasInTableScope(tn)) {
	            p._processFakeEndTag($.SELECT);
	            p._processToken(token);
	        }
	    }

	    else
	        endTagInSelect(p, token);
	}

	//12.2.5.4.18 The "in template" insertion mode
	//------------------------------------------------------------------
	function startTagInTemplate(p, token) {
	    var tn = token.tagName;

	    if (tn === $.BASE || tn === $.BASEFONT || tn === $.BGSOUND || tn === $.LINK || tn === $.META ||
	        tn === $.NOFRAMES || tn === $.SCRIPT || tn === $.STYLE || tn === $.TEMPLATE || tn === $.TITLE) {
	        startTagInHead(p, token);
	    }

	    else {
	        var newInsertionMode = TEMPLATE_INSERTION_MODE_SWITCH_MAP[tn] || IN_BODY_MODE;

	        p._popTmplInsertionMode();
	        p._pushTmplInsertionMode(newInsertionMode);
	        p.insertionMode = newInsertionMode;
	        p._processToken(token);
	    }
	}

	function endTagInTemplate(p, token) {
	    if (token.tagName === $.TEMPLATE)
	        endTagInHead(p, token);
	}

	function eofInTemplate(p, token) {
	    if (p.openElements.tmplCount > 0) {
	        p.openElements.popUntilTemplatePopped();
	        p.activeFormattingElements.clearToLastMarker();
	        p._popTmplInsertionMode();
	        p._resetInsertionMode();
	        p._processToken(token);
	    }

	    else
	        p.stopped = true;
	}


	//12.2.5.4.19 The "after body" insertion mode
	//------------------------------------------------------------------
	function startTagAfterBody(p, token) {
	    if (token.tagName === $.HTML)
	        startTagInBody(p, token);

	    else
	        tokenAfterBody(p, token);
	}

	function endTagAfterBody(p, token) {
	    if (token.tagName === $.HTML) {
	        if (!p.fragmentContext)
	            p.insertionMode = AFTER_AFTER_BODY_MODE;
	    }

	    else
	        tokenAfterBody(p, token);
	}

	function tokenAfterBody(p, token) {
	    p.insertionMode = IN_BODY_MODE;
	    p._processToken(token);
	}

	//12.2.5.4.20 The "in frameset" insertion mode
	//------------------------------------------------------------------
	function startTagInFrameset(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HTML)
	        startTagInBody(p, token);

	    else if (tn === $.FRAMESET)
	        p._insertElement(token, NS.HTML);

	    else if (tn === $.FRAME)
	        p._appendElement(token, NS.HTML);

	    else if (tn === $.NOFRAMES)
	        startTagInHead(p, token);
	}

	function endTagInFrameset(p, token) {
	    if (token.tagName === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {
	        p.openElements.pop();

	        if (!p.fragmentContext && p.openElements.currentTagName !== $.FRAMESET)
	            p.insertionMode = AFTER_FRAMESET_MODE;
	    }
	}

	//12.2.5.4.21 The "after frameset" insertion mode
	//------------------------------------------------------------------
	function startTagAfterFrameset(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HTML)
	        startTagInBody(p, token);

	    else if (tn === $.NOFRAMES)
	        startTagInHead(p, token);
	}

	function endTagAfterFrameset(p, token) {
	    if (token.tagName === $.HTML)
	        p.insertionMode = AFTER_AFTER_FRAMESET_MODE;
	}

	//12.2.5.4.22 The "after after body" insertion mode
	//------------------------------------------------------------------
	function startTagAfterAfterBody(p, token) {
	    if (token.tagName === $.HTML)
	        startTagInBody(p, token);

	    else
	        tokenAfterAfterBody(p, token);
	}

	function tokenAfterAfterBody(p, token) {
	    p.insertionMode = IN_BODY_MODE;
	    p._processToken(token);
	}

	//12.2.5.4.23 The "after after frameset" insertion mode
	//------------------------------------------------------------------
	function startTagAfterAfterFrameset(p, token) {
	    var tn = token.tagName;

	    if (tn === $.HTML)
	        startTagInBody(p, token);

	    else if (tn === $.NOFRAMES)
	        startTagInHead(p, token);
	}


	//12.2.5.5 The rules for parsing tokens in foreign content
	//------------------------------------------------------------------
	function nullCharacterInForeignContent(p, token) {
	    token.chars = UNICODE.REPLACEMENT_CHARACTER;
	    p._insertCharacters(token);
	}

	function characterInForeignContent(p, token) {
	    p._insertCharacters(token);
	    p.framesetOk = false;
	}

	function startTagInForeignContent(p, token) {
	    if (ForeignContent.causesExit(token) && !p.fragmentContext) {
	        while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&
	               (!p._isMathMLTextIntegrationPoint(p.openElements.current)) &&
	               (!p._isHtmlIntegrationPoint(p.openElements.current))) {
	            p.openElements.pop();
	        }

	        p._processToken(token);
	    }

	    else {
	        var current = p._getAdjustedCurrentElement(),
	            currentNs = p.treeAdapter.getNamespaceURI(current);

	        if (currentNs === NS.MATHML)
	            ForeignContent.adjustTokenMathMLAttrs(token);

	        else if (currentNs === NS.SVG) {
	            ForeignContent.adjustTokenSVGTagName(token);
	            ForeignContent.adjustTokenSVGAttrs(token);
	        }

	        ForeignContent.adjustTokenXMLAttrs(token);

	        if (token.selfClosing)
	            p._appendElement(token, currentNs);
	        else
	            p._insertElement(token, currentNs);
	    }
	}

	function endTagInForeignContent(p, token) {
	    for (var i = p.openElements.stackTop; i > 0; i--) {
	        var element = p.openElements.items[i];

	        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {
	            p._processToken(token);
	            break;
	        }

	        if (p.treeAdapter.getTagName(element).toLowerCase() === token.tagName) {
	            p.openElements.popUntilElementPopped(element);
	            break;
	        }
	    }
	}


/***/ },
/* 444 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Preprocessor = __webpack_require__(445),
	    LocationInfoMixin = __webpack_require__(447),
	    UNICODE = __webpack_require__(446),
	    NAMED_ENTITY_TRIE = __webpack_require__(448);

	//Aliases
	var $ = UNICODE.CODE_POINTS,
	    $$ = UNICODE.CODE_POINT_SEQUENCES;

	//Replacement code points for numeric entities
	var NUMERIC_ENTITY_REPLACEMENTS = {
	    0x00: 0xFFFD, 0x0D: 0x000D, 0x80: 0x20AC, 0x81: 0x0081, 0x82: 0x201A, 0x83: 0x0192, 0x84: 0x201E,
	    0x85: 0x2026, 0x86: 0x2020, 0x87: 0x2021, 0x88: 0x02C6, 0x89: 0x2030, 0x8A: 0x0160, 0x8B: 0x2039,
	    0x8C: 0x0152, 0x8D: 0x008D, 0x8E: 0x017D, 0x8F: 0x008F, 0x90: 0x0090, 0x91: 0x2018, 0x92: 0x2019,
	    0x93: 0x201C, 0x94: 0x201D, 0x95: 0x2022, 0x96: 0x2013, 0x97: 0x2014, 0x98: 0x02DC, 0x99: 0x2122,
	    0x9A: 0x0161, 0x9B: 0x203A, 0x9C: 0x0153, 0x9D: 0x009D, 0x9E: 0x017E, 0x9F: 0x0178
	};

	//States
	var DATA_STATE = 'DATA_STATE',
	    CHARACTER_REFERENCE_IN_DATA_STATE = 'CHARACTER_REFERENCE_IN_DATA_STATE',
	    RCDATA_STATE = 'RCDATA_STATE',
	    CHARACTER_REFERENCE_IN_RCDATA_STATE = 'CHARACTER_REFERENCE_IN_RCDATA_STATE',
	    RAWTEXT_STATE = 'RAWTEXT_STATE',
	    SCRIPT_DATA_STATE = 'SCRIPT_DATA_STATE',
	    PLAINTEXT_STATE = 'PLAINTEXT_STATE',
	    TAG_OPEN_STATE = 'TAG_OPEN_STATE',
	    END_TAG_OPEN_STATE = 'END_TAG_OPEN_STATE',
	    TAG_NAME_STATE = 'TAG_NAME_STATE',
	    RCDATA_LESS_THAN_SIGN_STATE = 'RCDATA_LESS_THAN_SIGN_STATE',
	    RCDATA_END_TAG_OPEN_STATE = 'RCDATA_END_TAG_OPEN_STATE',
	    RCDATA_END_TAG_NAME_STATE = 'RCDATA_END_TAG_NAME_STATE',
	    RAWTEXT_LESS_THAN_SIGN_STATE = 'RAWTEXT_LESS_THAN_SIGN_STATE',
	    RAWTEXT_END_TAG_OPEN_STATE = 'RAWTEXT_END_TAG_OPEN_STATE',
	    RAWTEXT_END_TAG_NAME_STATE = 'RAWTEXT_END_TAG_NAME_STATE',
	    SCRIPT_DATA_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_LESS_THAN_SIGN_STATE',
	    SCRIPT_DATA_END_TAG_OPEN_STATE = 'SCRIPT_DATA_END_TAG_OPEN_STATE',
	    SCRIPT_DATA_END_TAG_NAME_STATE = 'SCRIPT_DATA_END_TAG_NAME_STATE',
	    SCRIPT_DATA_ESCAPE_START_STATE = 'SCRIPT_DATA_ESCAPE_START_STATE',
	    SCRIPT_DATA_ESCAPE_START_DASH_STATE = 'SCRIPT_DATA_ESCAPE_START_DASH_STATE',
	    SCRIPT_DATA_ESCAPED_STATE = 'SCRIPT_DATA_ESCAPED_STATE',
	    SCRIPT_DATA_ESCAPED_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_STATE',
	    SCRIPT_DATA_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_ESCAPED_DASH_DASH_STATE',
	    SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE',
	    SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE',
	    SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE = 'SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPED_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE',
	    SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE = 'SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE',
	    BEFORE_ATTRIBUTE_NAME_STATE = 'BEFORE_ATTRIBUTE_NAME_STATE',
	    ATTRIBUTE_NAME_STATE = 'ATTRIBUTE_NAME_STATE',
	    AFTER_ATTRIBUTE_NAME_STATE = 'AFTER_ATTRIBUTE_NAME_STATE',
	    BEFORE_ATTRIBUTE_VALUE_STATE = 'BEFORE_ATTRIBUTE_VALUE_STATE',
	    ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE',
	    ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE = 'ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE',
	    ATTRIBUTE_VALUE_UNQUOTED_STATE = 'ATTRIBUTE_VALUE_UNQUOTED_STATE',
	    CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE = 'CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE',
	    AFTER_ATTRIBUTE_VALUE_QUOTED_STATE = 'AFTER_ATTRIBUTE_VALUE_QUOTED_STATE',
	    SELF_CLOSING_START_TAG_STATE = 'SELF_CLOSING_START_TAG_STATE',
	    BOGUS_COMMENT_STATE = 'BOGUS_COMMENT_STATE',
	    MARKUP_DECLARATION_OPEN_STATE = 'MARKUP_DECLARATION_OPEN_STATE',
	    COMMENT_START_STATE = 'COMMENT_START_STATE',
	    COMMENT_START_DASH_STATE = 'COMMENT_START_DASH_STATE',
	    COMMENT_STATE = 'COMMENT_STATE',
	    COMMENT_END_DASH_STATE = 'COMMENT_END_DASH_STATE',
	    COMMENT_END_STATE = 'COMMENT_END_STATE',
	    COMMENT_END_BANG_STATE = 'COMMENT_END_BANG_STATE',
	    DOCTYPE_STATE = 'DOCTYPE_STATE',
	    BEFORE_DOCTYPE_NAME_STATE = 'BEFORE_DOCTYPE_NAME_STATE',
	    DOCTYPE_NAME_STATE = 'DOCTYPE_NAME_STATE',
	    AFTER_DOCTYPE_NAME_STATE = 'AFTER_DOCTYPE_NAME_STATE',
	    AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE = 'AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE',
	    BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE',
	    DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE',
	    DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE',
	    AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE = 'AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE',
	    BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE = 'BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE',
	    AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE = 'AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE',
	    BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE',
	    DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE',
	    DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE = 'DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE',
	    AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE = 'AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE',
	    BOGUS_DOCTYPE_STATE = 'BOGUS_DOCTYPE_STATE',
	    CDATA_SECTION_STATE = 'CDATA_SECTION_STATE';

	//Utils

	//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline
	//this functions if they will be situated in another module due to context switch.
	//Always perform inlining check before modifying this functions ('node --trace-inlining').
	function isWhitespace(cp) {
	    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;
	}

	function isAsciiDigit(cp) {
	    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;
	}

	function isAsciiUpper(cp) {
	    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;
	}

	function isAsciiLower(cp) {
	    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;
	}

	function isAsciiAlphaNumeric(cp) {
	    return isAsciiDigit(cp) || isAsciiUpper(cp) || isAsciiLower(cp);
	}

	function isDigit(cp, isHex) {
	    return isAsciiDigit(cp) || (isHex && ((cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F) ||
	                                          (cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F)));
	}

	function isReservedCodePoint(cp) {
	    return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;
	}

	function toAsciiLowerCodePoint(cp) {
	    return cp + 0x0020;
	}

	//NOTE: String.fromCharCode() function can handle only characters from BMP subset.
	//So, we need to workaround this manually.
	//(see: https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/String/fromCharCode#Getting_it_to_work_with_higher_values)
	function toChar(cp) {
	    if (cp <= 0xFFFF)
	        return String.fromCharCode(cp);

	    cp -= 0x10000;
	    return String.fromCharCode(cp >>> 10 & 0x3FF | 0xD800) + String.fromCharCode(0xDC00 | cp & 0x3FF);
	}

	function toAsciiLowerChar(cp) {
	    return String.fromCharCode(toAsciiLowerCodePoint(cp));
	}

	//Tokenizer
	var Tokenizer = module.exports = function (html, options) {
	    this.disableEntitiesDecoding = false;

	    this.preprocessor = new Preprocessor(html);

	    this.tokenQueue = [];

	    this.allowCDATA = false;

	    this.state = DATA_STATE;
	    this.returnState = '';

	    this.consumptionPos = 0;

	    this.tempBuff = [];
	    this.additionalAllowedCp = void 0;
	    this.lastStartTagName = '';

	    this.currentCharacterToken = null;
	    this.currentToken = null;
	    this.currentAttr = null;

	    if (options) {
	        this.disableEntitiesDecoding = !options.decodeHtmlEntities;

	        if (options.locationInfo)
	            LocationInfoMixin.assign(this);
	    }
	};

	//Token types
	Tokenizer.CHARACTER_TOKEN = 'CHARACTER_TOKEN';
	Tokenizer.NULL_CHARACTER_TOKEN = 'NULL_CHARACTER_TOKEN';
	Tokenizer.WHITESPACE_CHARACTER_TOKEN = 'WHITESPACE_CHARACTER_TOKEN';
	Tokenizer.START_TAG_TOKEN = 'START_TAG_TOKEN';
	Tokenizer.END_TAG_TOKEN = 'END_TAG_TOKEN';
	Tokenizer.COMMENT_TOKEN = 'COMMENT_TOKEN';
	Tokenizer.DOCTYPE_TOKEN = 'DOCTYPE_TOKEN';
	Tokenizer.EOF_TOKEN = 'EOF_TOKEN';

	//Tokenizer initial states for different modes
	Tokenizer.MODE = Tokenizer.prototype.MODE = {
	    DATA: DATA_STATE,
	    RCDATA: RCDATA_STATE,
	    RAWTEXT: RAWTEXT_STATE,
	    SCRIPT_DATA: SCRIPT_DATA_STATE,
	    PLAINTEXT: PLAINTEXT_STATE
	};

	//Static
	Tokenizer.getTokenAttr = function (token, attrName) {
	    for (var i = token.attrs.length - 1; i >= 0; i--) {
	        if (token.attrs[i].name === attrName)
	            return token.attrs[i].value;
	    }

	    return null;
	};

	//Get token
	Tokenizer.prototype.getNextToken = function () {
	    while (!this.tokenQueue.length)
	        this[this.state](this._consume());

	    return this.tokenQueue.shift();
	};

	//Consumption
	Tokenizer.prototype._consume = function () {
	    this.consumptionPos++;
	    return this.preprocessor.advanceAndPeekCodePoint();
	};

	Tokenizer.prototype._unconsume = function () {
	    this.consumptionPos--;
	    this.preprocessor.retreat();
	};

	Tokenizer.prototype._unconsumeSeveral = function (count) {
	    while (count--)
	        this._unconsume();
	};

	Tokenizer.prototype._reconsumeInState = function (state) {
	    this.state = state;
	    this._unconsume();
	};

	Tokenizer.prototype._consumeSubsequentIfMatch = function (pattern, startCp, caseSensitive) {
	    var rollbackPos = this.consumptionPos,
	        isMatch = true,
	        patternLength = pattern.length,
	        patternPos = 0,
	        cp = startCp,
	        patternCp = void 0;

	    for (; patternPos < patternLength; patternPos++) {
	        if (patternPos > 0)
	            cp = this._consume();

	        if (cp === $.EOF) {
	            isMatch = false;
	            break;
	        }

	        patternCp = pattern[patternPos];

	        if (cp !== patternCp && (caseSensitive || cp !== toAsciiLowerCodePoint(patternCp))) {
	            isMatch = false;
	            break;
	        }
	    }

	    if (!isMatch)
	        this._unconsumeSeveral(this.consumptionPos - rollbackPos);

	    return isMatch;
	};

	//Lookahead
	Tokenizer.prototype._lookahead = function () {
	    var cp = this.preprocessor.advanceAndPeekCodePoint();
	    this.preprocessor.retreat();

	    return cp;
	};

	//Temp buffer
	Tokenizer.prototype.isTempBufferEqualToScriptString = function () {
	    if (this.tempBuff.length !== $$.SCRIPT_STRING.length)
	        return false;

	    for (var i = 0; i < this.tempBuff.length; i++) {
	        if (this.tempBuff[i] !== $$.SCRIPT_STRING[i])
	            return false;
	    }

	    return true;
	};

	//Token creation
	Tokenizer.prototype.buildStartTagToken = function (tagName) {
	    return {
	        type: Tokenizer.START_TAG_TOKEN,
	        tagName: tagName,
	        selfClosing: false,
	        attrs: []
	    };
	};

	Tokenizer.prototype.buildEndTagToken = function (tagName) {
	    return {
	        type: Tokenizer.END_TAG_TOKEN,
	        tagName: tagName,
	        ignored: false,
	        attrs: []
	    };
	};

	Tokenizer.prototype._createStartTagToken = function (tagNameFirstCh) {
	    this.currentToken = this.buildStartTagToken(tagNameFirstCh);
	};

	Tokenizer.prototype._createEndTagToken = function (tagNameFirstCh) {
	    this.currentToken = this.buildEndTagToken(tagNameFirstCh);
	};

	Tokenizer.prototype._createCommentToken = function () {
	    this.currentToken = {
	        type: Tokenizer.COMMENT_TOKEN,
	        data: ''
	    };
	};

	Tokenizer.prototype._createDoctypeToken = function (doctypeNameFirstCh) {
	    this.currentToken = {
	        type: Tokenizer.DOCTYPE_TOKEN,
	        name: doctypeNameFirstCh || '',
	        forceQuirks: false,
	        publicId: null,
	        systemId: null
	    };
	};

	Tokenizer.prototype._createCharacterToken = function (type, ch) {
	    this.currentCharacterToken = {
	        type: type,
	        chars: ch
	    };
	};

	//Tag attributes
	Tokenizer.prototype._createAttr = function (attrNameFirstCh) {
	    this.currentAttr = {
	        name: attrNameFirstCh,
	        value: ''
	    };
	};

	Tokenizer.prototype._isDuplicateAttr = function () {
	    return Tokenizer.getTokenAttr(this.currentToken, this.currentAttr.name) !== null;
	};

	Tokenizer.prototype._leaveAttrName = function (toState) {
	    this.state = toState;

	    if (!this._isDuplicateAttr())
	        this.currentToken.attrs.push(this.currentAttr);
	};

	//Appropriate end tag token
	//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#appropriate-end-tag-token)
	Tokenizer.prototype._isAppropriateEndTagToken = function () {
	    return this.lastStartTagName === this.currentToken.tagName;
	};

	//Token emission
	Tokenizer.prototype._emitCurrentToken = function () {
	    this._emitCurrentCharacterToken();

	    //NOTE: store emited start tag's tagName to determine is the following end tag token is appropriate.
	    if (this.currentToken.type === Tokenizer.START_TAG_TOKEN)
	        this.lastStartTagName = this.currentToken.tagName;

	    this.tokenQueue.push(this.currentToken);
	    this.currentToken = null;
	};

	Tokenizer.prototype._emitCurrentCharacterToken = function () {
	    if (this.currentCharacterToken) {
	        this.tokenQueue.push(this.currentCharacterToken);
	        this.currentCharacterToken = null;
	    }
	};

	Tokenizer.prototype._emitEOFToken = function () {
	    this._emitCurrentCharacterToken();
	    this.tokenQueue.push({type: Tokenizer.EOF_TOKEN});
	};

	//Characters emission

	//OPTIMIZATION: specification uses only one type of character tokens (one token per character).
	//This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.
	//If we have a sequence of characters that belong to the same group, parser can process it
	//as a single solid character token.
	//So, there are 3 types of character tokens in parse5:
	//1)NULL_CHARACTER_TOKEN - \u0000-character sequences (e.g. '\u0000\u0000\u0000')
	//2)WHITESPACE_CHARACTER_TOKEN - any whitespace/new-line character sequences (e.g. '\n  \r\t   \f')
	//3)CHARACTER_TOKEN - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')
	Tokenizer.prototype._appendCharToCurrentCharacterToken = function (type, ch) {
	    if (this.currentCharacterToken && this.currentCharacterToken.type !== type)
	        this._emitCurrentCharacterToken();

	    if (this.currentCharacterToken)
	        this.currentCharacterToken.chars += ch;

	    else
	        this._createCharacterToken(type, ch);
	};

	Tokenizer.prototype._emitCodePoint = function (cp) {
	    var type = Tokenizer.CHARACTER_TOKEN;

	    if (isWhitespace(cp))
	        type = Tokenizer.WHITESPACE_CHARACTER_TOKEN;

	    else if (cp === $.NULL)
	        type = Tokenizer.NULL_CHARACTER_TOKEN;

	    this._appendCharToCurrentCharacterToken(type, toChar(cp));
	};

	Tokenizer.prototype._emitSeveralCodePoints = function (codePoints) {
	    for (var i = 0; i < codePoints.length; i++)
	        this._emitCodePoint(codePoints[i]);
	};

	//NOTE: used then we emit character explicitly. This is always a non-whitespace and a non-null character.
	//So we can avoid additional checks here.
	Tokenizer.prototype._emitChar = function (ch) {
	    this._appendCharToCurrentCharacterToken(Tokenizer.CHARACTER_TOKEN, ch);
	};

	//Character reference tokenization
	Tokenizer.prototype._consumeNumericEntity = function (isHex) {
	    var digits = '',
	        nextCp = void 0;

	    do {
	        digits += toChar(this._consume());
	        nextCp = this._lookahead();
	    } while (nextCp !== $.EOF && isDigit(nextCp, isHex));

	    if (this._lookahead() === $.SEMICOLON)
	        this._consume();

	    var referencedCp = parseInt(digits, isHex ? 16 : 10),
	        replacement = NUMERIC_ENTITY_REPLACEMENTS[referencedCp];

	    if (replacement)
	        return replacement;

	    if (isReservedCodePoint(referencedCp))
	        return $.REPLACEMENT_CHARACTER;

	    return referencedCp;
	};

	Tokenizer.prototype._consumeNamedEntity = function (startCp, inAttr) {
	    var referencedCodePoints = null,
	        entityCodePointsCount = 0,
	        cp = startCp,
	        leaf = NAMED_ENTITY_TRIE[cp],
	        consumedCount = 1,
	        semicolonTerminated = false;

	    for (; leaf && cp !== $.EOF; cp = this._consume(), consumedCount++, leaf = leaf.l && leaf.l[cp]) {
	        if (leaf.c) {
	            //NOTE: we have at least one named reference match. But we don't stop lookup at this point,
	            //because longer matches still can be found (e.g. '&not' and '&notin;') except the case
	            //then found match is terminated by semicolon.
	            referencedCodePoints = leaf.c;
	            entityCodePointsCount = consumedCount;

	            if (cp === $.SEMICOLON) {
	                semicolonTerminated = true;
	                break;
	            }
	        }
	    }

	    if (referencedCodePoints) {
	        if (!semicolonTerminated) {
	            //NOTE: unconsume excess (e.g. 'it' in '&notit')
	            this._unconsumeSeveral(consumedCount - entityCodePointsCount);

	            //NOTE: If the character reference is being consumed as part of an attribute and the next character
	            //is either a U+003D EQUALS SIGN character (=) or an alphanumeric ASCII character, then, for historical
	            //reasons, all the characters that were matched after the U+0026 AMPERSAND character (&) must be
	            //unconsumed, and nothing is returned.
	            //However, if this next character is in fact a U+003D EQUALS SIGN character (=), then this is a
	            //parse error, because some legacy user agents will misinterpret the markup in those cases.
	            //(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references)
	            if (inAttr) {
	                var nextCp = this._lookahead();

	                if (nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp)) {
	                    this._unconsumeSeveral(entityCodePointsCount);
	                    return null;
	                }
	            }
	        }

	        return referencedCodePoints;
	    }

	    this._unconsumeSeveral(consumedCount);

	    return null;
	};

	Tokenizer.prototype._consumeCharacterReference = function (startCp, inAttr) {
	    if (this.disableEntitiesDecoding || isWhitespace(startCp) || startCp === $.GREATER_THAN_SIGN ||
	        startCp === $.AMPERSAND || startCp === this.additionalAllowedCp || startCp === $.EOF) {
	        //NOTE: not a character reference. No characters are consumed, and nothing is returned.
	        this._unconsume();
	        return null;
	    }

	    else if (startCp === $.NUMBER_SIGN) {
	        //NOTE: we have a numeric entity candidate, now we should determine if it's hex or decimal
	        var isHex = false,
	            nextCp = this._lookahead();

	        if (nextCp === $.LATIN_SMALL_X || nextCp === $.LATIN_CAPITAL_X) {
	            this._consume();
	            isHex = true;
	        }

	        nextCp = this._lookahead();

	        //NOTE: if we have at least one digit this is a numeric entity for sure, so we consume it
	        if (nextCp !== $.EOF && isDigit(nextCp, isHex))
	            return [this._consumeNumericEntity(isHex)];

	        else {
	            //NOTE: otherwise this is a bogus number entity and a parse error. Unconsume the number sign
	            //and the 'x'-character if appropriate.
	            this._unconsumeSeveral(isHex ? 2 : 1);
	            return null;
	        }
	    }

	    else
	        return this._consumeNamedEntity(startCp, inAttr);
	};

	//State machine
	var _ = Tokenizer.prototype;

	//12.2.4.1 Data state
	//------------------------------------------------------------------
	_[DATA_STATE] = function dataState(cp) {
	    if (cp === $.AMPERSAND)
	        this.state = CHARACTER_REFERENCE_IN_DATA_STATE;

	    else if (cp === $.LESS_THAN_SIGN)
	        this.state = TAG_OPEN_STATE;

	    else if (cp === $.NULL)
	        this._emitCodePoint(cp);

	    else if (cp === $.EOF)
	        this._emitEOFToken();

	    else
	        this._emitCodePoint(cp);
	};


	//12.2.4.2 Character reference in data state
	//------------------------------------------------------------------
	_[CHARACTER_REFERENCE_IN_DATA_STATE] = function characterReferenceInDataState(cp) {
	    this.state = DATA_STATE;
	    this.additionalAllowedCp = void 0;

	    var referencedCodePoints = this._consumeCharacterReference(cp, false);

	    if (referencedCodePoints)
	        this._emitSeveralCodePoints(referencedCodePoints);
	    else
	        this._emitChar('&');
	};


	//12.2.4.3 RCDATA state
	//------------------------------------------------------------------
	_[RCDATA_STATE] = function rcdataState(cp) {
	    if (cp === $.AMPERSAND)
	        this.state = CHARACTER_REFERENCE_IN_RCDATA_STATE;

	    else if (cp === $.LESS_THAN_SIGN)
	        this.state = RCDATA_LESS_THAN_SIGN_STATE;

	    else if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);

	    else if (cp === $.EOF)
	        this._emitEOFToken();

	    else
	        this._emitCodePoint(cp);
	};


	//12.2.4.4 Character reference in RCDATA state
	//------------------------------------------------------------------
	_[CHARACTER_REFERENCE_IN_RCDATA_STATE] = function characterReferenceInRcdataState(cp) {
	    this.state = RCDATA_STATE;
	    this.additionalAllowedCp = void 0;

	    var referencedCodePoints = this._consumeCharacterReference(cp, false);

	    if (referencedCodePoints)
	        this._emitSeveralCodePoints(referencedCodePoints);
	    else
	        this._emitChar('&');
	};


	//12.2.4.5 RAWTEXT state
	//------------------------------------------------------------------
	_[RAWTEXT_STATE] = function rawtextState(cp) {
	    if (cp === $.LESS_THAN_SIGN)
	        this.state = RAWTEXT_LESS_THAN_SIGN_STATE;

	    else if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);

	    else if (cp === $.EOF)
	        this._emitEOFToken();

	    else
	        this._emitCodePoint(cp);
	};


	//12.2.4.6 Script data state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_STATE] = function scriptDataState(cp) {
	    if (cp === $.LESS_THAN_SIGN)
	        this.state = SCRIPT_DATA_LESS_THAN_SIGN_STATE;

	    else if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);

	    else if (cp === $.EOF)
	        this._emitEOFToken();

	    else
	        this._emitCodePoint(cp);
	};


	//12.2.4.7 PLAINTEXT state
	//------------------------------------------------------------------
	_[PLAINTEXT_STATE] = function plaintextState(cp) {
	    if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);

	    else if (cp === $.EOF)
	        this._emitEOFToken();

	    else
	        this._emitCodePoint(cp);
	};


	//12.2.4.8 Tag open state
	//------------------------------------------------------------------
	_[TAG_OPEN_STATE] = function tagOpenState(cp) {
	    if (cp === $.EXCLAMATION_MARK)
	        this.state = MARKUP_DECLARATION_OPEN_STATE;

	    else if (cp === $.SOLIDUS)
	        this.state = END_TAG_OPEN_STATE;

	    else if (isAsciiUpper(cp)) {
	        this._createStartTagToken(toAsciiLowerChar(cp));
	        this.state = TAG_NAME_STATE;
	    }

	    else if (isAsciiLower(cp)) {
	        this._createStartTagToken(toChar(cp));
	        this.state = TAG_NAME_STATE;
	    }

	    else if (cp === $.QUESTION_MARK) {
	        //NOTE: call bogus comment state directly with current consumed character to avoid unnecessary reconsumption.
	        this[BOGUS_COMMENT_STATE](cp);
	    }

	    else {
	        this._emitChar('<');
	        this._reconsumeInState(DATA_STATE);
	    }
	};


	//12.2.4.9 End tag open state
	//------------------------------------------------------------------
	_[END_TAG_OPEN_STATE] = function endTagOpenState(cp) {
	    if (isAsciiUpper(cp)) {
	        this._createEndTagToken(toAsciiLowerChar(cp));
	        this.state = TAG_NAME_STATE;
	    }

	    else if (isAsciiLower(cp)) {
	        this._createEndTagToken(toChar(cp));
	        this.state = TAG_NAME_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN)
	        this.state = DATA_STATE;

	    else if (cp === $.EOF) {
	        this._reconsumeInState(DATA_STATE);
	        this._emitChar('<');
	        this._emitChar('/');
	    }

	    else {
	        //NOTE: call bogus comment state directly with current consumed character to avoid unnecessary reconsumption.
	        this[BOGUS_COMMENT_STATE](cp);
	    }
	};


	//12.2.4.10 Tag name state
	//------------------------------------------------------------------
	_[TAG_NAME_STATE] = function tagNameState(cp) {
	    if (isWhitespace(cp))
	        this.state = BEFORE_ATTRIBUTE_NAME_STATE;

	    else if (cp === $.SOLIDUS)
	        this.state = SELF_CLOSING_START_TAG_STATE;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (isAsciiUpper(cp))
	        this.currentToken.tagName += toAsciiLowerChar(cp);

	    else if (cp === $.NULL)
	        this.currentToken.tagName += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else
	        this.currentToken.tagName += toChar(cp);
	};


	//12.2.4.11 RCDATA less-than sign state
	//------------------------------------------------------------------
	_[RCDATA_LESS_THAN_SIGN_STATE] = function rcdataLessThanSignState(cp) {
	    if (cp === $.SOLIDUS) {
	        this.tempBuff = [];
	        this.state = RCDATA_END_TAG_OPEN_STATE;
	    }

	    else {
	        this._emitChar('<');
	        this._reconsumeInState(RCDATA_STATE);
	    }
	};


	//12.2.4.12 RCDATA end tag open state
	//------------------------------------------------------------------
	_[RCDATA_END_TAG_OPEN_STATE] = function rcdataEndTagOpenState(cp) {
	    if (isAsciiUpper(cp)) {
	        this._createEndTagToken(toAsciiLowerChar(cp));
	        this.tempBuff.push(cp);
	        this.state = RCDATA_END_TAG_NAME_STATE;
	    }

	    else if (isAsciiLower(cp)) {
	        this._createEndTagToken(toChar(cp));
	        this.tempBuff.push(cp);
	        this.state = RCDATA_END_TAG_NAME_STATE;
	    }

	    else {
	        this._emitChar('<');
	        this._emitChar('/');
	        this._reconsumeInState(RCDATA_STATE);
	    }
	};


	//12.2.4.13 RCDATA end tag name state
	//------------------------------------------------------------------
	_[RCDATA_END_TAG_NAME_STATE] = function rcdataEndTagNameState(cp) {
	    if (isAsciiUpper(cp)) {
	        this.currentToken.tagName += toAsciiLowerChar(cp);
	        this.tempBuff.push(cp);
	    }

	    else if (isAsciiLower(cp)) {
	        this.currentToken.tagName += toChar(cp);
	        this.tempBuff.push(cp);
	    }

	    else {
	        if (this._isAppropriateEndTagToken()) {
	            if (isWhitespace(cp)) {
	                this.state = BEFORE_ATTRIBUTE_NAME_STATE;
	                return;
	            }

	            if (cp === $.SOLIDUS) {
	                this.state = SELF_CLOSING_START_TAG_STATE;
	                return;
	            }

	            if (cp === $.GREATER_THAN_SIGN) {
	                this.state = DATA_STATE;
	                this._emitCurrentToken();
	                return;
	            }
	        }

	        this._emitChar('<');
	        this._emitChar('/');
	        this._emitSeveralCodePoints(this.tempBuff);
	        this._reconsumeInState(RCDATA_STATE);
	    }
	};


	//12.2.4.14 RAWTEXT less-than sign state
	//------------------------------------------------------------------
	_[RAWTEXT_LESS_THAN_SIGN_STATE] = function rawtextLessThanSignState(cp) {
	    if (cp === $.SOLIDUS) {
	        this.tempBuff = [];
	        this.state = RAWTEXT_END_TAG_OPEN_STATE;
	    }

	    else {
	        this._emitChar('<');
	        this._reconsumeInState(RAWTEXT_STATE);
	    }
	};


	//12.2.4.15 RAWTEXT end tag open state
	//------------------------------------------------------------------
	_[RAWTEXT_END_TAG_OPEN_STATE] = function rawtextEndTagOpenState(cp) {
	    if (isAsciiUpper(cp)) {
	        this._createEndTagToken(toAsciiLowerChar(cp));
	        this.tempBuff.push(cp);
	        this.state = RAWTEXT_END_TAG_NAME_STATE;
	    }

	    else if (isAsciiLower(cp)) {
	        this._createEndTagToken(toChar(cp));
	        this.tempBuff.push(cp);
	        this.state = RAWTEXT_END_TAG_NAME_STATE;
	    }

	    else {
	        this._emitChar('<');
	        this._emitChar('/');
	        this._reconsumeInState(RAWTEXT_STATE);
	    }
	};


	//12.2.4.16 RAWTEXT end tag name state
	//------------------------------------------------------------------
	_[RAWTEXT_END_TAG_NAME_STATE] = function rawtextEndTagNameState(cp) {
	    if (isAsciiUpper(cp)) {
	        this.currentToken.tagName += toAsciiLowerChar(cp);
	        this.tempBuff.push(cp);
	    }

	    else if (isAsciiLower(cp)) {
	        this.currentToken.tagName += toChar(cp);
	        this.tempBuff.push(cp);
	    }

	    else {
	        if (this._isAppropriateEndTagToken()) {
	            if (isWhitespace(cp)) {
	                this.state = BEFORE_ATTRIBUTE_NAME_STATE;
	                return;
	            }

	            if (cp === $.SOLIDUS) {
	                this.state = SELF_CLOSING_START_TAG_STATE;
	                return;
	            }

	            if (cp === $.GREATER_THAN_SIGN) {
	                this._emitCurrentToken();
	                this.state = DATA_STATE;
	                return;
	            }
	        }

	        this._emitChar('<');
	        this._emitChar('/');
	        this._emitSeveralCodePoints(this.tempBuff);
	        this._reconsumeInState(RAWTEXT_STATE);
	    }
	};


	//12.2.4.17 Script data less-than sign state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_LESS_THAN_SIGN_STATE] = function scriptDataLessThanSignState(cp) {
	    if (cp === $.SOLIDUS) {
	        this.tempBuff = [];
	        this.state = SCRIPT_DATA_END_TAG_OPEN_STATE;
	    }

	    else if (cp === $.EXCLAMATION_MARK) {
	        this.state = SCRIPT_DATA_ESCAPE_START_STATE;
	        this._emitChar('<');
	        this._emitChar('!');
	    }

	    else {
	        this._emitChar('<');
	        this._reconsumeInState(SCRIPT_DATA_STATE);
	    }
	};


	//12.2.4.18 Script data end tag open state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_END_TAG_OPEN_STATE] = function scriptDataEndTagOpenState(cp) {
	    if (isAsciiUpper(cp)) {
	        this._createEndTagToken(toAsciiLowerChar(cp));
	        this.tempBuff.push(cp);
	        this.state = SCRIPT_DATA_END_TAG_NAME_STATE;
	    }

	    else if (isAsciiLower(cp)) {
	        this._createEndTagToken(toChar(cp));
	        this.tempBuff.push(cp);
	        this.state = SCRIPT_DATA_END_TAG_NAME_STATE;
	    }

	    else {
	        this._emitChar('<');
	        this._emitChar('/');
	        this._reconsumeInState(SCRIPT_DATA_STATE);
	    }
	};


	//12.2.4.19 Script data end tag name state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_END_TAG_NAME_STATE] = function scriptDataEndTagNameState(cp) {
	    if (isAsciiUpper(cp)) {
	        this.currentToken.tagName += toAsciiLowerChar(cp);
	        this.tempBuff.push(cp);
	    }

	    else if (isAsciiLower(cp)) {
	        this.currentToken.tagName += toChar(cp);
	        this.tempBuff.push(cp);
	    }

	    else {
	        if (this._isAppropriateEndTagToken()) {
	            if (isWhitespace(cp)) {
	                this.state = BEFORE_ATTRIBUTE_NAME_STATE;
	                return;
	            }

	            else if (cp === $.SOLIDUS) {
	                this.state = SELF_CLOSING_START_TAG_STATE;
	                return;
	            }

	            else if (cp === $.GREATER_THAN_SIGN) {
	                this._emitCurrentToken();
	                this.state = DATA_STATE;
	                return;
	            }
	        }

	        this._emitChar('<');
	        this._emitChar('/');
	        this._emitSeveralCodePoints(this.tempBuff);
	        this._reconsumeInState(SCRIPT_DATA_STATE);
	    }
	};


	//12.2.4.20 Script data escape start state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPE_START_STATE] = function scriptDataEscapeStartState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_ESCAPE_START_DASH_STATE;
	        this._emitChar('-');
	    }

	    else
	        this._reconsumeInState(SCRIPT_DATA_STATE);
	};


	//12.2.4.21 Script data escape start dash state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPE_START_DASH_STATE] = function scriptDataEscapeStartDashState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;
	        this._emitChar('-');
	    }

	    else
	        this._reconsumeInState(SCRIPT_DATA_STATE);
	};


	//12.2.4.22 Script data escaped state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_STATE] = function scriptDataEscapedState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_ESCAPED_DASH_STATE;
	        this._emitChar('-');
	    }

	    else if (cp === $.LESS_THAN_SIGN)
	        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;

	    else if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else
	        this._emitCodePoint(cp);
	};


	//12.2.4.23 Script data escaped dash state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_DASH_STATE] = function scriptDataEscapedDashState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_ESCAPED_DASH_DASH_STATE;
	        this._emitChar('-');
	    }

	    else if (cp === $.LESS_THAN_SIGN)
	        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;

	    else if (cp === $.NULL) {
	        this.state = SCRIPT_DATA_ESCAPED_STATE;
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	    }

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else {
	        this.state = SCRIPT_DATA_ESCAPED_STATE;
	        this._emitCodePoint(cp);
	    }
	};


	//12.2.4.24 Script data escaped dash dash state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_DASH_DASH_STATE] = function scriptDataEscapedDashDashState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this._emitChar('-');

	    else if (cp === $.LESS_THAN_SIGN)
	        this.state = SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = SCRIPT_DATA_STATE;
	        this._emitChar('>');
	    }

	    else if (cp === $.NULL) {
	        this.state = SCRIPT_DATA_ESCAPED_STATE;
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	    }

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else {
	        this.state = SCRIPT_DATA_ESCAPED_STATE;
	        this._emitCodePoint(cp);
	    }
	};


	//12.2.4.25 Script data escaped less-than sign state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataEscapedLessThanSignState(cp) {
	    if (cp === $.SOLIDUS) {
	        this.tempBuff = [];
	        this.state = SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE;
	    }

	    else if (isAsciiUpper(cp)) {
	        this.tempBuff = [];
	        this.tempBuff.push(toAsciiLowerCodePoint(cp));
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE;
	        this._emitChar('<');
	        this._emitCodePoint(cp);
	    }

	    else if (isAsciiLower(cp)) {
	        this.tempBuff = [];
	        this.tempBuff.push(cp);
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE;
	        this._emitChar('<');
	        this._emitCodePoint(cp);
	    }

	    else {
	        this._emitChar('<');
	        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
	    }
	};


	//12.2.4.26 Script data escaped end tag open state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_END_TAG_OPEN_STATE] = function scriptDataEscapedEndTagOpenState(cp) {
	    if (isAsciiUpper(cp)) {
	        this._createEndTagToken(toAsciiLowerChar(cp));
	        this.tempBuff.push(cp);
	        this.state = SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE;
	    }

	    else if (isAsciiLower(cp)) {
	        this._createEndTagToken(toChar(cp));
	        this.tempBuff.push(cp);
	        this.state = SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE;
	    }

	    else {
	        this._emitChar('<');
	        this._emitChar('/');
	        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
	    }
	};


	//12.2.4.27 Script data escaped end tag name state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_ESCAPED_END_TAG_NAME_STATE] = function scriptDataEscapedEndTagNameState(cp) {
	    if (isAsciiUpper(cp)) {
	        this.currentToken.tagName += toAsciiLowerChar(cp);
	        this.tempBuff.push(cp);
	    }

	    else if (isAsciiLower(cp)) {
	        this.currentToken.tagName += toChar(cp);
	        this.tempBuff.push(cp);
	    }

	    else {
	        if (this._isAppropriateEndTagToken()) {
	            if (isWhitespace(cp)) {
	                this.state = BEFORE_ATTRIBUTE_NAME_STATE;
	                return;
	            }

	            if (cp === $.SOLIDUS) {
	                this.state = SELF_CLOSING_START_TAG_STATE;
	                return;
	            }

	            if (cp === $.GREATER_THAN_SIGN) {
	                this._emitCurrentToken();
	                this.state = DATA_STATE;
	                return;
	            }
	        }

	        this._emitChar('<');
	        this._emitChar('/');
	        this._emitSeveralCodePoints(this.tempBuff);
	        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
	    }
	};


	//12.2.4.28 Script data double escape start state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPE_START_STATE] = function scriptDataDoubleEscapeStartState(cp) {
	    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {
	        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_DOUBLE_ESCAPED_STATE : SCRIPT_DATA_ESCAPED_STATE;
	        this._emitCodePoint(cp);
	    }

	    else if (isAsciiUpper(cp)) {
	        this.tempBuff.push(toAsciiLowerCodePoint(cp));
	        this._emitCodePoint(cp);
	    }

	    else if (isAsciiLower(cp)) {
	        this.tempBuff.push(cp);
	        this._emitCodePoint(cp);
	    }

	    else
	        this._reconsumeInState(SCRIPT_DATA_ESCAPED_STATE);
	};


	//12.2.4.29 Script data double escaped state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPED_STATE] = function scriptDataDoubleEscapedState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE;
	        this._emitChar('-');
	    }

	    else if (cp === $.LESS_THAN_SIGN) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
	        this._emitChar('<');
	    }

	    else if (cp === $.NULL)
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else
	        this._emitCodePoint(cp);
	};


	//12.2.4.30 Script data double escaped dash state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_STATE] = function scriptDataDoubleEscapedDashState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE;
	        this._emitChar('-');
	    }

	    else if (cp === $.LESS_THAN_SIGN) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
	        this._emitChar('<');
	    }

	    else if (cp === $.NULL) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	    }

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
	        this._emitCodePoint(cp);
	    }
	};


	//12.2.4.31 Script data double escaped dash dash state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH_STATE] = function scriptDataDoubleEscapedDashDashState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this._emitChar('-');

	    else if (cp === $.LESS_THAN_SIGN) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE;
	        this._emitChar('<');
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = SCRIPT_DATA_STATE;
	        this._emitChar('>');
	    }

	    else if (cp === $.NULL) {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
	        this._emitChar(UNICODE.REPLACEMENT_CHARACTER);
	    }

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else {
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPED_STATE;
	        this._emitCodePoint(cp);
	    }
	};


	//12.2.4.32 Script data double escaped less-than sign state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN_STATE] = function scriptDataDoubleEscapedLessThanSignState(cp) {
	    if (cp === $.SOLIDUS) {
	        this.tempBuff = [];
	        this.state = SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE;
	        this._emitChar('/');
	    }

	    else
	        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
	};


	//12.2.4.33 Script data double escape end state
	//------------------------------------------------------------------
	_[SCRIPT_DATA_DOUBLE_ESCAPE_END_STATE] = function scriptDataDoubleEscapeEndState(cp) {
	    if (isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN) {
	        this.state = this.isTempBufferEqualToScriptString() ? SCRIPT_DATA_ESCAPED_STATE : SCRIPT_DATA_DOUBLE_ESCAPED_STATE;

	        this._emitCodePoint(cp);
	    }

	    else if (isAsciiUpper(cp)) {
	        this.tempBuff.push(toAsciiLowerCodePoint(cp));
	        this._emitCodePoint(cp);
	    }

	    else if (isAsciiLower(cp)) {
	        this.tempBuff.push(cp);
	        this._emitCodePoint(cp);
	    }

	    else
	        this._reconsumeInState(SCRIPT_DATA_DOUBLE_ESCAPED_STATE);
	};


	//12.2.4.34 Before attribute name state
	//------------------------------------------------------------------
	_[BEFORE_ATTRIBUTE_NAME_STATE] = function beforeAttributeNameState(cp) {
	    if (isWhitespace(cp))
	        return;

	    if (cp === $.SOLIDUS)
	        this.state = SELF_CLOSING_START_TAG_STATE;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (isAsciiUpper(cp)) {
	        this._createAttr(toAsciiLowerChar(cp));
	        this.state = ATTRIBUTE_NAME_STATE;
	    }

	    else if (cp === $.NULL) {
	        this._createAttr(UNICODE.REPLACEMENT_CHARACTER);
	        this.state = ATTRIBUTE_NAME_STATE;
	    }

	    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN) {
	        this._createAttr(toChar(cp));
	        this.state = ATTRIBUTE_NAME_STATE;
	    }

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else {
	        this._createAttr(toChar(cp));
	        this.state = ATTRIBUTE_NAME_STATE;
	    }
	};


	//12.2.4.35 Attribute name state
	//------------------------------------------------------------------
	_[ATTRIBUTE_NAME_STATE] = function attributeNameState(cp) {
	    if (isWhitespace(cp))
	        this._leaveAttrName(AFTER_ATTRIBUTE_NAME_STATE);

	    else if (cp === $.SOLIDUS)
	        this._leaveAttrName(SELF_CLOSING_START_TAG_STATE);

	    else if (cp === $.EQUALS_SIGN)
	        this._leaveAttrName(BEFORE_ATTRIBUTE_VALUE_STATE);

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this._leaveAttrName(DATA_STATE);
	        this._emitCurrentToken();
	    }

	    else if (isAsciiUpper(cp))
	        this.currentAttr.name += toAsciiLowerChar(cp);

	    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN)
	        this.currentAttr.name += toChar(cp);

	    else if (cp === $.NULL)
	        this.currentAttr.name += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else
	        this.currentAttr.name += toChar(cp);
	};


	//12.2.4.36 After attribute name state
	//------------------------------------------------------------------
	_[AFTER_ATTRIBUTE_NAME_STATE] = function afterAttributeNameState(cp) {
	    if (isWhitespace(cp))
	        return;

	    if (cp === $.SOLIDUS)
	        this.state = SELF_CLOSING_START_TAG_STATE;

	    else if (cp === $.EQUALS_SIGN)
	        this.state = BEFORE_ATTRIBUTE_VALUE_STATE;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (isAsciiUpper(cp)) {
	        this._createAttr(toAsciiLowerChar(cp));
	        this.state = ATTRIBUTE_NAME_STATE;
	    }

	    else if (cp === $.NULL) {
	        this._createAttr(UNICODE.REPLACEMENT_CHARACTER);
	        this.state = ATTRIBUTE_NAME_STATE;
	    }

	    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN) {
	        this._createAttr(toChar(cp));
	        this.state = ATTRIBUTE_NAME_STATE;
	    }

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else {
	        this._createAttr(toChar(cp));
	        this.state = ATTRIBUTE_NAME_STATE;
	    }
	};


	//12.2.4.37 Before attribute value state
	//------------------------------------------------------------------
	_[BEFORE_ATTRIBUTE_VALUE_STATE] = function beforeAttributeValueState(cp) {
	    if (isWhitespace(cp))
	        return;

	    if (cp === $.QUOTATION_MARK)
	        this.state = ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE;

	    else if (cp === $.AMPERSAND)
	        this._reconsumeInState(ATTRIBUTE_VALUE_UNQUOTED_STATE);

	    else if (cp === $.APOSTROPHE)
	        this.state = ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE;

	    else if (cp === $.NULL) {
	        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = ATTRIBUTE_VALUE_UNQUOTED_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (cp === $.LESS_THAN_SIGN || cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT) {
	        this.currentAttr.value += toChar(cp);
	        this.state = ATTRIBUTE_VALUE_UNQUOTED_STATE;
	    }

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else {
	        this.currentAttr.value += toChar(cp);
	        this.state = ATTRIBUTE_VALUE_UNQUOTED_STATE;
	    }
	};


	//12.2.4.38 Attribute value (double-quoted) state
	//------------------------------------------------------------------
	_[ATTRIBUTE_VALUE_DOUBLE_QUOTED_STATE] = function attributeValueDoubleQuotedState(cp) {
	    if (cp === $.QUOTATION_MARK)
	        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;

	    else if (cp === $.AMPERSAND) {
	        this.additionalAllowedCp = $.QUOTATION_MARK;
	        this.returnState = this.state;
	        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;
	    }

	    else if (cp === $.NULL)
	        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else
	        this.currentAttr.value += toChar(cp);
	};


	//12.2.4.39 Attribute value (single-quoted) state
	//------------------------------------------------------------------
	_[ATTRIBUTE_VALUE_SINGLE_QUOTED_STATE] = function attributeValueSingleQuotedState(cp) {
	    if (cp === $.APOSTROPHE)
	        this.state = AFTER_ATTRIBUTE_VALUE_QUOTED_STATE;

	    else if (cp === $.AMPERSAND) {
	        this.additionalAllowedCp = $.APOSTROPHE;
	        this.returnState = this.state;
	        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;
	    }

	    else if (cp === $.NULL)
	        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else
	        this.currentAttr.value += toChar(cp);
	};


	//12.2.4.40 Attribute value (unquoted) state
	//------------------------------------------------------------------
	_[ATTRIBUTE_VALUE_UNQUOTED_STATE] = function attributeValueUnquotedState(cp) {
	    if (isWhitespace(cp))
	        this.state = BEFORE_ATTRIBUTE_NAME_STATE;

	    else if (cp === $.AMPERSAND) {
	        this.additionalAllowedCp = $.GREATER_THAN_SIGN;
	        this.returnState = this.state;
	        this.state = CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (cp === $.NULL)
	        this.currentAttr.value += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.QUOTATION_MARK || cp === $.APOSTROPHE || cp === $.LESS_THAN_SIGN ||
	             cp === $.EQUALS_SIGN || cp === $.GRAVE_ACCENT) {
	        this.currentAttr.value += toChar(cp);
	    }

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else
	        this.currentAttr.value += toChar(cp);
	};


	//12.2.4.41 Character reference in attribute value state
	//------------------------------------------------------------------
	_[CHARACTER_REFERENCE_IN_ATTRIBUTE_VALUE_STATE] = function characterReferenceInAttributeValueState(cp) {
	    var referencedCodePoints = this._consumeCharacterReference(cp, true);

	    if (referencedCodePoints) {
	        for (var i = 0; i < referencedCodePoints.length; i++)
	            this.currentAttr.value += toChar(referencedCodePoints[i]);
	    } else
	        this.currentAttr.value += '&';

	    this.state = this.returnState;
	};


	//12.2.4.42 After attribute value (quoted) state
	//------------------------------------------------------------------
	_[AFTER_ATTRIBUTE_VALUE_QUOTED_STATE] = function afterAttributeValueQuotedState(cp) {
	    if (isWhitespace(cp))
	        this.state = BEFORE_ATTRIBUTE_NAME_STATE;

	    else if (cp === $.SOLIDUS)
	        this.state = SELF_CLOSING_START_TAG_STATE;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else
	        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
	};


	//12.2.4.43 Self-closing start tag state
	//------------------------------------------------------------------
	_[SELF_CLOSING_START_TAG_STATE] = function selfClosingStartTagState(cp) {
	    if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.selfClosing = true;
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (cp === $.EOF)
	        this._reconsumeInState(DATA_STATE);

	    else
	        this._reconsumeInState(BEFORE_ATTRIBUTE_NAME_STATE);
	};


	//12.2.4.44 Bogus comment state
	//------------------------------------------------------------------
	_[BOGUS_COMMENT_STATE] = function bogusCommentState(cp) {
	    this._createCommentToken();

	    while (true) {
	        if (cp === $.GREATER_THAN_SIGN) {
	            this.state = DATA_STATE;
	            break;
	        }

	        else if (cp === $.EOF) {
	            this._reconsumeInState(DATA_STATE);
	            break;
	        }

	        else {
	            this.currentToken.data += cp === $.NULL ? UNICODE.REPLACEMENT_CHARACTER : toChar(cp);
	            cp = this._consume();
	        }
	    }

	    this._emitCurrentToken();
	};


	//12.2.4.45 Markup declaration open state
	//------------------------------------------------------------------
	_[MARKUP_DECLARATION_OPEN_STATE] = function markupDeclarationOpenState(cp) {
	    if (this._consumeSubsequentIfMatch($$.DASH_DASH_STRING, cp, true)) {
	        this._createCommentToken();
	        this.state = COMMENT_START_STATE;
	    }

	    else if (this._consumeSubsequentIfMatch($$.DOCTYPE_STRING, cp, false))
	        this.state = DOCTYPE_STATE;

	    else if (this.allowCDATA && this._consumeSubsequentIfMatch($$.CDATA_START_STRING, cp, true))
	        this.state = CDATA_SECTION_STATE;

	    else {
	        //NOTE: call bogus comment state directly with current consumed character to avoid unnecessary reconsumption.
	        this[BOGUS_COMMENT_STATE](cp);
	    }
	};


	//12.2.4.46 Comment start state
	//------------------------------------------------------------------
	_[COMMENT_START_STATE] = function commentStartState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this.state = COMMENT_START_DASH_STATE;

	    else if (cp === $.NULL) {
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = COMMENT_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else {
	        this.currentToken.data += toChar(cp);
	        this.state = COMMENT_STATE;
	    }
	};


	//12.2.4.47 Comment start dash state
	//------------------------------------------------------------------
	_[COMMENT_START_DASH_STATE] = function commentStartDashState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this.state = COMMENT_END_STATE;

	    else if (cp === $.NULL) {
	        this.currentToken.data += '-';
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = COMMENT_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else {
	        this.currentToken.data += '-';
	        this.currentToken.data += toChar(cp);
	        this.state = COMMENT_STATE;
	    }
	};


	//12.2.4.48 Comment state
	//------------------------------------------------------------------
	_[COMMENT_STATE] = function commentState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this.state = COMMENT_END_DASH_STATE;

	    else if (cp === $.NULL)
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else
	        this.currentToken.data += toChar(cp);
	};


	//12.2.4.49 Comment end dash state
	//------------------------------------------------------------------
	_[COMMENT_END_DASH_STATE] = function commentEndDashState(cp) {
	    if (cp === $.HYPHEN_MINUS)
	        this.state = COMMENT_END_STATE;

	    else if (cp === $.NULL) {
	        this.currentToken.data += '-';
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = COMMENT_STATE;
	    }

	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else {
	        this.currentToken.data += '-';
	        this.currentToken.data += toChar(cp);
	        this.state = COMMENT_STATE;
	    }
	};


	//12.2.4.50 Comment end state
	//------------------------------------------------------------------
	_[COMMENT_END_STATE] = function commentEndState(cp) {
	    if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (cp === $.EXCLAMATION_MARK)
	        this.state = COMMENT_END_BANG_STATE;

	    else if (cp === $.HYPHEN_MINUS)
	        this.currentToken.data += '-';

	    else if (cp === $.NULL) {
	        this.currentToken.data += '--';
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = COMMENT_STATE;
	    }

	    else if (cp === $.EOF) {
	        this._reconsumeInState(DATA_STATE);
	        this._emitCurrentToken();
	    }

	    else {
	        this.currentToken.data += '--';
	        this.currentToken.data += toChar(cp);
	        this.state = COMMENT_STATE;
	    }
	};


	//12.2.4.51 Comment end bang state
	//------------------------------------------------------------------
	_[COMMENT_END_BANG_STATE] = function commentEndBangState(cp) {
	    if (cp === $.HYPHEN_MINUS) {
	        this.currentToken.data += '--!';
	        this.state = COMMENT_END_DASH_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (cp === $.NULL) {
	        this.currentToken.data += '--!';
	        this.currentToken.data += UNICODE.REPLACEMENT_CHARACTER;
	        this.state = COMMENT_STATE;
	    }

	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else {
	        this.currentToken.data += '--!';
	        this.currentToken.data += toChar(cp);
	        this.state = COMMENT_STATE;
	    }
	};


	//12.2.4.52 DOCTYPE state
	//------------------------------------------------------------------
	_[DOCTYPE_STATE] = function doctypeState(cp) {
	    if (isWhitespace(cp))
	        this.state = BEFORE_DOCTYPE_NAME_STATE;

	    else if (cp === $.EOF) {
	        this._createDoctypeToken();
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else
	        this._reconsumeInState(BEFORE_DOCTYPE_NAME_STATE);
	};


	//12.2.4.53 Before DOCTYPE name state
	//------------------------------------------------------------------
	_[BEFORE_DOCTYPE_NAME_STATE] = function beforeDoctypeNameState(cp) {
	    if (isWhitespace(cp))
	        return;

	    if (isAsciiUpper(cp)) {
	        this._createDoctypeToken(toAsciiLowerChar(cp));
	        this.state = DOCTYPE_NAME_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this._createDoctypeToken();
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.EOF) {
	        this._createDoctypeToken();
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else if (cp === $.NULL) {
	        this._createDoctypeToken(UNICODE.REPLACEMENT_CHARACTER);
	        this.state = DOCTYPE_NAME_STATE;
	    }

	    else {
	        this._createDoctypeToken(toChar(cp));
	        this.state = DOCTYPE_NAME_STATE;
	    }
	};


	//12.2.4.54 DOCTYPE name state
	//------------------------------------------------------------------
	_[DOCTYPE_NAME_STATE] = function doctypeNameState(cp) {
	    if (isWhitespace(cp))
	        this.state = AFTER_DOCTYPE_NAME_STATE;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (isAsciiUpper(cp))
	        this.currentToken.name += toAsciiLowerChar(cp);

	    else if (cp === $.NULL)
	        this.currentToken.name += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else
	        this.currentToken.name += toChar(cp);
	};


	//12.2.4.55 After DOCTYPE name state
	//------------------------------------------------------------------
	_[AFTER_DOCTYPE_NAME_STATE] = function afterDoctypeNameState(cp) {
	    if (isWhitespace(cp))
	        return;

	    if (cp === $.GREATER_THAN_SIGN) {
	        this.state = DATA_STATE;
	        this._emitCurrentToken();
	    }

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else if (this._consumeSubsequentIfMatch($$.PUBLIC_STRING, cp, false))
	        this.state = AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE;

	    else if (this._consumeSubsequentIfMatch($$.SYSTEM_STRING, cp, false))
	        this.state = AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE;

	    else {
	        this.currentToken.forceQuirks = true;
	        this.state = BOGUS_DOCTYPE_STATE;
	    }
	};


	//12.2.4.56 After DOCTYPE public keyword state
	//------------------------------------------------------------------
	_[AFTER_DOCTYPE_PUBLIC_KEYWORD_STATE] = function afterDoctypePublicKeywordState(cp) {
	    if (isWhitespace(cp))
	        this.state = BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE;

	    else if (cp === $.QUOTATION_MARK) {
	        this.currentToken.publicId = '';
	        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
	    }

	    else if (cp === $.APOSTROPHE) {
	        this.currentToken.publicId = '';
	        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else {
	        this.currentToken.forceQuirks = true;
	        this.state = BOGUS_DOCTYPE_STATE;
	    }
	};


	//12.2.4.57 Before DOCTYPE public identifier state
	//------------------------------------------------------------------
	_[BEFORE_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function beforeDoctypePublicIdentifierState(cp) {
	    if (isWhitespace(cp))
	        return;

	    if (cp === $.QUOTATION_MARK) {
	        this.currentToken.publicId = '';
	        this.state = DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE;
	    }

	    else if (cp === $.APOSTROPHE) {
	        this.currentToken.publicId = '';
	        this.state = DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else {
	        this.currentToken.forceQuirks = true;
	        this.state = BOGUS_DOCTYPE_STATE;
	    }
	};


	//12.2.4.58 DOCTYPE public identifier (double-quoted) state
	//------------------------------------------------------------------
	_[DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypePublicIdentifierDoubleQuotedState(cp) {
	    if (cp === $.QUOTATION_MARK)
	        this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;

	    else if (cp === $.NULL)
	        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else
	        this.currentToken.publicId += toChar(cp);
	};


	//12.2.4.59 DOCTYPE public identifier (single-quoted) state
	//------------------------------------------------------------------
	_[DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypePublicIdentifierSingleQuotedState(cp) {
	    if (cp === $.APOSTROPHE)
	        this.state = AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE;

	    else if (cp === $.NULL)
	        this.currentToken.publicId += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else
	        this.currentToken.publicId += toChar(cp);
	};


	//12.2.4.60 After DOCTYPE public identifier state
	//------------------------------------------------------------------
	_[AFTER_DOCTYPE_PUBLIC_IDENTIFIER_STATE] = function afterDoctypePublicIdentifierState(cp) {
	    if (isWhitespace(cp))
	        this.state = BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.QUOTATION_MARK) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
	    }

	    else if (cp === $.APOSTROPHE) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
	    }

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else {
	        this.currentToken.forceQuirks = true;
	        this.state = BOGUS_DOCTYPE_STATE;
	    }
	};


	//12.2.4.61 Between DOCTYPE public and system identifiers state
	//------------------------------------------------------------------
	_[BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS_STATE] = function betweenDoctypePublicAndSystemIdentifiersState(cp) {
	    if (isWhitespace(cp))
	        return;

	    if (cp === $.GREATER_THAN_SIGN) {
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.QUOTATION_MARK) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
	    }


	    else if (cp === $.APOSTROPHE) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
	    }

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else {
	        this.currentToken.forceQuirks = true;
	        this.state = BOGUS_DOCTYPE_STATE;
	    }
	};


	//12.2.4.62 After DOCTYPE system keyword state
	//------------------------------------------------------------------
	_[AFTER_DOCTYPE_SYSTEM_KEYWORD_STATE] = function afterDoctypeSystemKeywordState(cp) {
	    if (isWhitespace(cp))
	        this.state = BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE;

	    else if (cp === $.QUOTATION_MARK) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
	    }

	    else if (cp === $.APOSTROPHE) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else {
	        this.currentToken.forceQuirks = true;
	        this.state = BOGUS_DOCTYPE_STATE;
	    }
	};


	//12.2.4.63 Before DOCTYPE system identifier state
	//------------------------------------------------------------------
	_[BEFORE_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function beforeDoctypeSystemIdentifierState(cp) {
	    if (isWhitespace(cp))
	        return;

	    if (cp === $.QUOTATION_MARK) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE;
	    }

	    else if (cp === $.APOSTROPHE) {
	        this.currentToken.systemId = '';
	        this.state = DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE;
	    }

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else {
	        this.currentToken.forceQuirks = true;
	        this.state = BOGUS_DOCTYPE_STATE;
	    }
	};


	//12.2.4.64 DOCTYPE system identifier (double-quoted) state
	//------------------------------------------------------------------
	_[DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED_STATE] = function doctypeSystemIdentifierDoubleQuotedState(cp) {
	    if (cp === $.QUOTATION_MARK)
	        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.NULL)
	        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else
	        this.currentToken.systemId += toChar(cp);
	};


	//12.2.4.65 DOCTYPE system identifier (single-quoted) state
	//------------------------------------------------------------------
	_[DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED_STATE] = function doctypeSystemIdentifierSingleQuotedState(cp) {
	    if (cp === $.APOSTROPHE)
	        this.state = AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE;

	    else if (cp === $.GREATER_THAN_SIGN) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.NULL)
	        this.currentToken.systemId += UNICODE.REPLACEMENT_CHARACTER;

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else
	        this.currentToken.systemId += toChar(cp);
	};


	//12.2.4.66 After DOCTYPE system identifier state
	//------------------------------------------------------------------
	_[AFTER_DOCTYPE_SYSTEM_IDENTIFIER_STATE] = function afterDoctypeSystemIdentifierState(cp) {
	    if (isWhitespace(cp))
	        return;

	    if (cp === $.GREATER_THAN_SIGN) {
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.EOF) {
	        this.currentToken.forceQuirks = true;
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }

	    else
	        this.state = BOGUS_DOCTYPE_STATE;
	};


	//12.2.4.67 Bogus DOCTYPE state
	//------------------------------------------------------------------
	_[BOGUS_DOCTYPE_STATE] = function bogusDoctypeState(cp) {
	    if (cp === $.GREATER_THAN_SIGN) {
	        this._emitCurrentToken();
	        this.state = DATA_STATE;
	    }

	    else if (cp === $.EOF) {
	        this._emitCurrentToken();
	        this._reconsumeInState(DATA_STATE);
	    }
	};


	//12.2.4.68 CDATA section state
	//------------------------------------------------------------------
	_[CDATA_SECTION_STATE] = function cdataSectionState(cp) {
	    while (true) {
	        if (cp === $.EOF) {
	            this._reconsumeInState(DATA_STATE);
	            break;
	        }

	        else if (this._consumeSubsequentIfMatch($$.CDATA_END_STRING, cp, true)) {
	            this.state = DATA_STATE;
	            break;
	        }

	        else {
	            this._emitCodePoint(cp);
	            cp = this._consume();
	        }
	    }
	};


/***/ },
/* 445 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var UNICODE = __webpack_require__(446);

	//Aliases
	var $ = UNICODE.CODE_POINTS;

	//Utils

	//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline
	//this functions if they will be situated in another module due to context switch.
	//Always perform inlining check before modifying this functions ('node --trace-inlining').
	function isReservedCodePoint(cp) {
	    return cp >= 0xD800 && cp <= 0xDFFF || cp > 0x10FFFF;
	}

	function isSurrogatePair(cp1, cp2) {
	    return cp1 >= 0xD800 && cp1 <= 0xDBFF && cp2 >= 0xDC00 && cp2 <= 0xDFFF;
	}

	function getSurrogatePairCodePoint(cp1, cp2) {
	    return (cp1 - 0xD800) * 0x400 + 0x2400 + cp2;
	}

	//Preprocessor
	//NOTE: HTML input preprocessing
	//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)
	var Preprocessor = module.exports = function (html) {
	    this.write(html);

	    //NOTE: one leading U+FEFF BYTE ORDER MARK character must be ignored if any are present in the input stream.
	    this.pos = this.html.charCodeAt(0) === $.BOM ? 0 : -1;

	    this.gapStack = [];
	    this.lastGapPos = -1;
	    this.skipNextNewLine = false;
	};

	Preprocessor.prototype.write = function (html) {
	    if (this.html) {
	        this.html = this.html.substring(0, this.pos + 1) +
	                    html +
	                    this.html.substring(this.pos + 1, this.html.length);

	    }
	    else
	        this.html = html;


	    this.lastCharPos = this.html.length - 1;
	};

	Preprocessor.prototype.advanceAndPeekCodePoint = function () {
	    this.pos++;

	    if (this.pos > this.lastCharPos)
	        return $.EOF;

	    var cp = this.html.charCodeAt(this.pos);

	    //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character
	    //must be ignored.
	    if (this.skipNextNewLine && cp === $.LINE_FEED) {
	        this.skipNextNewLine = false;
	        this._addGap();
	        return this.advanceAndPeekCodePoint();
	    }

	    //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters
	    if (cp === $.CARRIAGE_RETURN) {
	        this.skipNextNewLine = true;
	        return $.LINE_FEED;
	    }

	    this.skipNextNewLine = false;

	    //OPTIMIZATION: first perform check if the code point in the allowed range that covers most common
	    //HTML input (e.g. ASCII codes) to avoid performance-cost operations for high-range code points.
	    return cp >= 0xD800 ? this._processHighRangeCodePoint(cp) : cp;
	};

	Preprocessor.prototype._processHighRangeCodePoint = function (cp) {
	    //NOTE: try to peek a surrogate pair
	    if (this.pos !== this.lastCharPos) {
	        var nextCp = this.html.charCodeAt(this.pos + 1);

	        if (isSurrogatePair(cp, nextCp)) {
	            //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.
	            this.pos++;
	            cp = getSurrogatePairCodePoint(cp, nextCp);

	            //NOTE: add gap that should be avoided during retreat
	            this._addGap();
	        }
	    }

	    if (isReservedCodePoint(cp))
	        cp = $.REPLACEMENT_CHARACTER;

	    return cp;
	};

	Preprocessor.prototype._addGap = function () {
	    this.gapStack.push(this.lastGapPos);
	    this.lastGapPos = this.pos;
	};

	Preprocessor.prototype.retreat = function () {
	    if (this.pos === this.lastGapPos) {
	        this.lastGapPos = this.gapStack.pop();
	        this.pos--;
	    }

	    this.pos--;
	};


/***/ },
/* 446 */
/***/ function(module, exports) {

	'use strict';

	exports.REPLACEMENT_CHARACTER = '\uFFFD';

	exports.CODE_POINTS = {
	    EOF: -1,
	    NULL: 0x00,
	    TABULATION: 0x09,
	    CARRIAGE_RETURN: 0x0D,
	    LINE_FEED: 0x0A,
	    FORM_FEED: 0x0C,
	    SPACE: 0x20,
	    EXCLAMATION_MARK: 0x21,
	    QUOTATION_MARK: 0x22,
	    NUMBER_SIGN: 0x23,
	    AMPERSAND: 0x26,
	    APOSTROPHE: 0x27,
	    HYPHEN_MINUS: 0x2D,
	    SOLIDUS: 0x2F,
	    DIGIT_0: 0x30,
	    DIGIT_9: 0x39,
	    SEMICOLON: 0x3B,
	    LESS_THAN_SIGN: 0x3C,
	    EQUALS_SIGN: 0x3D,
	    GREATER_THAN_SIGN: 0x3E,
	    QUESTION_MARK: 0x3F,
	    LATIN_CAPITAL_A: 0x41,
	    LATIN_CAPITAL_F: 0x46,
	    LATIN_CAPITAL_X: 0x58,
	    LATIN_CAPITAL_Z: 0x5A,
	    GRAVE_ACCENT: 0x60,
	    LATIN_SMALL_A: 0x61,
	    LATIN_SMALL_F: 0x66,
	    LATIN_SMALL_X: 0x78,
	    LATIN_SMALL_Z: 0x7A,
	    BOM: 0xFEFF,
	    REPLACEMENT_CHARACTER: 0xFFFD
	};

	exports.CODE_POINT_SEQUENCES = {
	    DASH_DASH_STRING: [0x2D, 0x2D], //--
	    DOCTYPE_STRING: [0x44, 0x4F, 0x43, 0x54, 0x59, 0x50, 0x45], //DOCTYPE
	    CDATA_START_STRING: [0x5B, 0x43, 0x44, 0x41, 0x54, 0x41, 0x5B], //[CDATA[
	    CDATA_END_STRING: [0x5D, 0x5D, 0x3E], //]]>
	    SCRIPT_STRING: [0x73, 0x63, 0x72, 0x69, 0x70, 0x74], //script
	    PUBLIC_STRING: [0x50, 0x55, 0x42, 0x4C, 0x49, 0x43], //PUBLIC
	    SYSTEM_STRING: [0x53, 0x59, 0x53, 0x54, 0x45, 0x4D] //SYSTEM
	};


/***/ },
/* 447 */
/***/ function(module, exports) {

	'use strict';

	exports.assign = function (tokenizer) {
	    //NOTE: obtain Tokenizer proto this way to avoid module circular references
	    var tokenizerProto = Object.getPrototypeOf(tokenizer);

	    tokenizer.tokenStartLoc = -1;

	    //NOTE: add location info builder method
	    tokenizer._attachLocationInfo = function (token) {
	        token.location = {
	            start: this.tokenStartLoc,
	            end: -1
	        };
	    };

	    //NOTE: patch token creation methods and attach location objects
	    tokenizer._createStartTagToken = function (tagNameFirstCh) {
	        tokenizerProto._createStartTagToken.call(this, tagNameFirstCh);
	        this._attachLocationInfo(this.currentToken);
	    };

	    tokenizer._createEndTagToken = function (tagNameFirstCh) {
	        tokenizerProto._createEndTagToken.call(this, tagNameFirstCh);
	        this._attachLocationInfo(this.currentToken);
	    };

	    tokenizer._createCommentToken = function () {
	        tokenizerProto._createCommentToken.call(this);
	        this._attachLocationInfo(this.currentToken);
	    };

	    tokenizer._createDoctypeToken = function (doctypeNameFirstCh) {
	        tokenizerProto._createDoctypeToken.call(this, doctypeNameFirstCh);
	        this._attachLocationInfo(this.currentToken);
	    };

	    tokenizer._createCharacterToken = function (type, ch) {
	        tokenizerProto._createCharacterToken.call(this, type, ch);
	        this._attachLocationInfo(this.currentCharacterToken);
	    };

	    //NOTE: patch token emission methods to determine end location
	    tokenizer._emitCurrentToken = function () {
	        //NOTE: if we have pending character token make it's end location equal to the
	        //current token's start location.
	        if (this.currentCharacterToken)
	            this.currentCharacterToken.location.end = this.currentToken.location.start;

	        this.currentToken.location.end = this.preprocessor.pos + 1;
	        tokenizerProto._emitCurrentToken.call(this);
	    };

	    tokenizer._emitCurrentCharacterToken = function () {
	        //NOTE: if we have character token and it's location wasn't set in the _emitCurrentToken(),
	        //then set it's location at the current preprocessor position
	        if (this.currentCharacterToken && this.currentCharacterToken.location.end === -1) {
	            //NOTE: we don't need to increment preprocessor position, since character token
	            //emission is always forced by the start of the next character token here.
	            //So, we already have advanced position.
	            this.currentCharacterToken.location.end = this.preprocessor.pos;
	        }

	        tokenizerProto._emitCurrentCharacterToken.call(this);
	    };

	    //NOTE: patch initial states for each mode to obtain token start position
	    Object.keys(tokenizerProto.MODE)

	        .map(function (modeName) {
	            return tokenizerProto.MODE[modeName];
	        })

	        .forEach(function (state) {
	            tokenizer[state] = function (cp) {
	                this.tokenStartLoc = this.preprocessor.pos;
	                tokenizerProto[state].call(this, cp);
	            };
	        });
	};


/***/ },
/* 448 */
/***/ function(module, exports) {

	'use strict';

	//NOTE: this file contains auto generated trie structure that is used for named entity references consumption
	//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tokenization.html#tokenizing-character-references and
	//http://www.whatwg.org/specs/web-apps/current-work/multipage/named-character-references.html#named-character-references)
	module.exports = {
	    0x41: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [193]}}, c: [193]}}}}}}}}}, 0x62: {l: {0x72: {l: {0x65: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [258]}}}}}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [194]}}, c: [194]}}}}}, 0x79: {l: {0x3B: {c: [1040]}}}}}, 0x45: {l: {0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [198]}}, c: [198]}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120068]}}}}}, 0x67: {l: {0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [192]}}, c: [192]}}}}}}}}}, 0x6C: {l: {0x70: {l: {0x68: {l: {0x61: {l: {0x3B: {c: [913]}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [256]}}}}}}}}}, 0x4D: {l: {0x50: {l: {0x3B: {c: [38]}}, c: [38]}}}, 0x6E: {l: {0x64: {l: {0x3B: {c: [10835]}}}}}, 0x6F: {l: {0x67: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [260]}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120120]}}}}}}}, 0x70: {l: {0x70: {l: {0x6C: {l: {0x79: {l: {0x46: {l: {0x75: {l: {0x6E: {l: {0x63: {l: {0x74: {l: {0x69: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [8289]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [197]}}, c: [197]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119964]}}}}}, 0x73: {l: {0x69: {l: {0x67: {l: {0x6E: {l: {0x3B: {c: [8788]}}}}}}}}}}}, 0x74: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [195]}}, c: [195]}}}}}}}}}, 0x75: {l: {0x6D: {l: {0x6C: {l: {0x3B: {c: [196]}}, c: [196]}}}}}}},
	    0x61: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [225]}}, c: [225]}}}}}}}}}, 0x62: {l: {0x72: {l: {0x65: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [259]}}}}}}}}}}}, 0x63: {l: {0x3B: {c: [8766]}, 0x64: {l: {0x3B: {c: [8767]}}}, 0x45: {l: {0x3B: {c: [8766, 819]}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [226]}}, c: [226]}}}}}, 0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [180]}}, c: [180]}}}}}, 0x79: {l: {0x3B: {c: [1072]}}}}}, 0x65: {l: {0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [230]}}, c: [230]}}}}}}}, 0x66: {l: {0x3B: {c: [8289]}, 0x72: {l: {0x3B: {c: [120094]}}}}}, 0x67: {l: {0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [224]}}, c: [224]}}}}}}}}}, 0x6C: {l: {0x65: {l: {0x66: {l: {0x73: {l: {0x79: {l: {0x6D: {l: {0x3B: {c: [8501]}}}}}}}}}, 0x70: {l: {0x68: {l: {0x3B: {c: [8501]}}}}}}}, 0x70: {l: {0x68: {l: {0x61: {l: {0x3B: {c: [945]}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [257]}}}}}, 0x6C: {l: {0x67: {l: {0x3B: {c: [10815]}}}}}}}, 0x70: {l: {0x3B: {c: [38]}}, c: [38]}}}, 0x6E: {l: {0x64: {l: {0x61: {l: {0x6E: {l: {0x64: {l: {0x3B: {c: [10837]}}}}}}}, 0x3B: {c: [8743]}, 0x64: {l: {0x3B: {c: [10844]}}}, 0x73: {l: {0x6C: {l: {0x6F: {l: {0x70: {l: {0x65: {l: {0x3B: {c: [10840]}}}}}}}}}}}, 0x76: {l: {0x3B: {c: [10842]}}}}}, 0x67: {l: {0x3B: {c: [8736]}, 0x65: {l: {0x3B: {c: [10660]}}}, 0x6C: {l: {0x65: {l: {0x3B: {c: [8736]}}}}}, 0x6D: {l: {0x73: {l: {0x64: {l: {0x61: {l: {0x61: {l: {0x3B: {c: [10664]}}}, 0x62: {l: {0x3B: {c: [10665]}}}, 0x63: {l: {0x3B: {c: [10666]}}}, 0x64: {l: {0x3B: {c: [10667]}}}, 0x65: {l: {0x3B: {c: [10668]}}}, 0x66: {l: {0x3B: {c: [10669]}}}, 0x67: {l: {0x3B: {c: [10670]}}}, 0x68: {l: {0x3B: {c: [10671]}}}}}, 0x3B: {c: [8737]}}}}}}}, 0x72: {l: {0x74: {l: {0x3B: {c: [8735]}, 0x76: {l: {0x62: {l: {0x3B: {c: [8894]}, 0x64: {l: {0x3B: {c: [10653]}}}}}}}}}}}, 0x73: {l: {0x70: {l: {0x68: {l: {0x3B: {c: [8738]}}}}}, 0x74: {l: {0x3B: {c: [197]}}}}}, 0x7A: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [9084]}}}}}}}}}}}}}, 0x6F: {l: {0x67: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [261]}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120146]}}}}}}}, 0x70: {l: {0x61: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x3B: {c: [10863]}}}}}}}}}, 0x3B: {c: [8776]}, 0x45: {l: {0x3B: {c: [10864]}}}, 0x65: {l: {0x3B: {c: [8778]}}}, 0x69: {l: {0x64: {l: {0x3B: {c: [8779]}}}}}, 0x6F: {l: {0x73: {l: {0x3B: {c: [39]}}}}}, 0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [8776]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8778]}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [229]}}, c: [229]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119990]}}}}}, 0x74: {l: {0x3B: {c: [42]}}}, 0x79: {l: {0x6D: {l: {0x70: {l: {0x3B: {c: [8776]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8781]}}}}}}}}}}}}}, 0x74: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [227]}}, c: [227]}}}}}}}}}, 0x75: {l: {0x6D: {l: {0x6C: {l: {0x3B: {c: [228]}}, c: [228]}}}}}, 0x77: {l: {0x63: {l: {0x6F: {l: {0x6E: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8755]}}}}}}}}}}}}}, 0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10769]}}}}}}}}}}},
	    0x62: {l: {0x61: {l: {0x63: {l: {0x6B: {l: {0x63: {l: {0x6F: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [8780]}}}}}}}}}, 0x65: {l: {0x70: {l: {0x73: {l: {0x69: {l: {0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [1014]}}}}}}}}}}}}}}}, 0x70: {l: {0x72: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x3B: {c: [8245]}}}}}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8765]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8909]}}}}}}}}}}}}}}}, 0x72: {l: {0x76: {l: {0x65: {l: {0x65: {l: {0x3B: {c: [8893]}}}}}}}, 0x77: {l: {0x65: {l: {0x64: {l: {0x3B: {c: [8965]}, 0x67: {l: {0x65: {l: {0x3B: {c: [8965]}}}}}}}}}}}}}}}, 0x62: {l: {0x72: {l: {0x6B: {l: {0x3B: {c: [9141]}, 0x74: {l: {0x62: {l: {0x72: {l: {0x6B: {l: {0x3B: {c: [9142]}}}}}}}}}}}}}}}, 0x63: {l: {0x6F: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [8780]}}}}}}}, 0x79: {l: {0x3B: {c: [1073]}}}}}, 0x64: {l: {0x71: {l: {0x75: {l: {0x6F: {l: {0x3B: {c: [8222]}}}}}}}}}, 0x65: {l: {0x63: {l: {0x61: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8757]}, 0x65: {l: {0x3B: {c: [8757]}}}}}}}}}}}, 0x6D: {l: {0x70: {l: {0x74: {l: {0x79: {l: {0x76: {l: {0x3B: {c: [10672]}}}}}}}}}}}, 0x70: {l: {0x73: {l: {0x69: {l: {0x3B: {c: [1014]}}}}}}}, 0x72: {l: {0x6E: {l: {0x6F: {l: {0x75: {l: {0x3B: {c: [8492]}}}}}}}}}, 0x74: {l: {0x61: {l: {0x3B: {c: [946]}}}, 0x68: {l: {0x3B: {c: [8502]}}}, 0x77: {l: {0x65: {l: {0x65: {l: {0x6E: {l: {0x3B: {c: [8812]}}}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120095]}}}}}, 0x69: {l: {0x67: {l: {0x63: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [8898]}}}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [9711]}}}}}}}, 0x75: {l: {0x70: {l: {0x3B: {c: [8899]}}}}}}}, 0x6F: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10752]}}}}}}}, 0x70: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10753]}}}}}}}}}, 0x74: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [10754]}}}}}}}}}}}}}, 0x73: {l: {0x71: {l: {0x63: {l: {0x75: {l: {0x70: {l: {0x3B: {c: [10758]}}}}}}}}}, 0x74: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [9733]}}}}}}}}}, 0x74: {l: {0x72: {l: {0x69: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x64: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x3B: {c: [9661]}}}}}}}}}, 0x75: {l: {0x70: {l: {0x3B: {c: [9651]}}}}}}}}}}}}}}}}}}}}}, 0x75: {l: {0x70: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10756]}}}}}}}}}}}, 0x76: {l: {0x65: {l: {0x65: {l: {0x3B: {c: [8897]}}}}}}}, 0x77: {l: {0x65: {l: {0x64: {l: {0x67: {l: {0x65: {l: {0x3B: {c: [8896]}}}}}}}}}}}}}}}, 0x6B: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10509]}}}}}}}}}}}, 0x6C: {l: {0x61: {l: {0x63: {l: {0x6B: {l: {0x6C: {l: {0x6F: {l: {0x7A: {l: {0x65: {l: {0x6E: {l: {0x67: {l: {0x65: {l: {0x3B: {c: [10731]}}}}}}}}}}}}}}}, 0x73: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [9642]}}}}}}}}}}}}}, 0x74: {l: {0x72: {l: {0x69: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x3B: {c: [9652]}, 0x64: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x3B: {c: [9662]}}}}}}}}}, 0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x3B: {c: [9666]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [9656]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x6E: {l: {0x6B: {l: {0x3B: {c: [9251]}}}}}}}, 0x6B: {l: {0x31: {l: {0x32: {l: {0x3B: {c: [9618]}}}, 0x34: {l: {0x3B: {c: [9617]}}}}}, 0x33: {l: {0x34: {l: {0x3B: {c: [9619]}}}}}}}, 0x6F: {l: {0x63: {l: {0x6B: {l: {0x3B: {c: [9608]}}}}}}}}}, 0x6E: {l: {0x65: {l: {0x3B: {c: [61, 8421]}, 0x71: {l: {0x75: {l: {0x69: {l: {0x76: {l: {0x3B: {c: [8801, 8421]}}}}}}}}}}}, 0x6F: {l: {0x74: {l: {0x3B: {c: [8976]}}}}}}}, 0x4E: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10989]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120147]}}}}}, 0x74: {l: {0x3B: {c: [8869]}, 0x74: {l: {0x6F: {l: {0x6D: {l: {0x3B: {c: [8869]}}}}}}}}}, 0x77: {l: {0x74: {l: {0x69: {l: {0x65: {l: {0x3B: {c: [8904]}}}}}}}}}, 0x78: {l: {0x62: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [10697]}}}}}}}, 0x64: {l: {0x6C: {l: {0x3B: {c: [9488]}}}, 0x4C: {l: {0x3B: {c: [9557]}}}, 0x72: {l: {0x3B: {c: [9484]}}}, 0x52: {l: {0x3B: {c: [9554]}}}}}, 0x44: {l: {0x6C: {l: {0x3B: {c: [9558]}}}, 0x4C: {l: {0x3B: {c: [9559]}}}, 0x72: {l: {0x3B: {c: [9555]}}}, 0x52: {l: {0x3B: {c: [9556]}}}}}, 0x68: {l: {0x3B: {c: [9472]}, 0x64: {l: {0x3B: {c: [9516]}}}, 0x44: {l: {0x3B: {c: [9573]}}}, 0x75: {l: {0x3B: {c: [9524]}}}, 0x55: {l: {0x3B: {c: [9576]}}}}}, 0x48: {l: {0x3B: {c: [9552]}, 0x64: {l: {0x3B: {c: [9572]}}}, 0x44: {l: {0x3B: {c: [9574]}}}, 0x75: {l: {0x3B: {c: [9575]}}}, 0x55: {l: {0x3B: {c: [9577]}}}}}, 0x6D: {l: {0x69: {l: {0x6E: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8863]}}}}}}}}}}}, 0x70: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8862]}}}}}}}}}, 0x74: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8864]}}}}}}}}}}}, 0x75: {l: {0x6C: {l: {0x3B: {c: [9496]}}}, 0x4C: {l: {0x3B: {c: [9563]}}}, 0x72: {l: {0x3B: {c: [9492]}}}, 0x52: {l: {0x3B: {c: [9560]}}}}}, 0x55: {l: {0x6C: {l: {0x3B: {c: [9564]}}}, 0x4C: {l: {0x3B: {c: [9565]}}}, 0x72: {l: {0x3B: {c: [9561]}}}, 0x52: {l: {0x3B: {c: [9562]}}}}}, 0x76: {l: {0x3B: {c: [9474]}, 0x68: {l: {0x3B: {c: [9532]}}}, 0x48: {l: {0x3B: {c: [9578]}}}, 0x6C: {l: {0x3B: {c: [9508]}}}, 0x4C: {l: {0x3B: {c: [9569]}}}, 0x72: {l: {0x3B: {c: [9500]}}}, 0x52: {l: {0x3B: {c: [9566]}}}}}, 0x56: {l: {0x3B: {c: [9553]}, 0x68: {l: {0x3B: {c: [9579]}}}, 0x48: {l: {0x3B: {c: [9580]}}}, 0x6C: {l: {0x3B: {c: [9570]}}}, 0x4C: {l: {0x3B: {c: [9571]}}}, 0x72: {l: {0x3B: {c: [9567]}}}, 0x52: {l: {0x3B: {c: [9568]}}}}}}}}}, 0x70: {l: {0x72: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x3B: {c: [8245]}}}}}}}}}}}, 0x72: {l: {0x65: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [728]}}}}}}}, 0x76: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [166]}}, c: [166]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119991]}}}}}, 0x65: {l: {0x6D: {l: {0x69: {l: {0x3B: {c: [8271]}}}}}}}, 0x69: {l: {0x6D: {l: {0x3B: {c: [8765]}, 0x65: {l: {0x3B: {c: [8909]}}}}}}}, 0x6F: {l: {0x6C: {l: {0x62: {l: {0x3B: {c: [10693]}}}, 0x3B: {c: [92]}, 0x68: {l: {0x73: {l: {0x75: {l: {0x62: {l: {0x3B: {c: [10184]}}}}}}}}}}}}}}}, 0x75: {l: {0x6C: {l: {0x6C: {l: {0x3B: {c: [8226]}, 0x65: {l: {0x74: {l: {0x3B: {c: [8226]}}}}}}}}}, 0x6D: {l: {0x70: {l: {0x3B: {c: [8782]}, 0x45: {l: {0x3B: {c: [10926]}}}, 0x65: {l: {0x3B: {c: [8783]}, 0x71: {l: {0x3B: {c: [8783]}}}}}}}}}}}}},
	    0x42: {l: {0x61: {l: {0x63: {l: {0x6B: {l: {0x73: {l: {0x6C: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8726]}}}}}}}}}}}}}}}, 0x72: {l: {0x76: {l: {0x3B: {c: [10983]}}}, 0x77: {l: {0x65: {l: {0x64: {l: {0x3B: {c: [8966]}}}}}}}}}}}, 0x63: {l: {0x79: {l: {0x3B: {c: [1041]}}}}}, 0x65: {l: {0x63: {l: {0x61: {l: {0x75: {l: {0x73: {l: {0x65: {l: {0x3B: {c: [8757]}}}}}}}}}}}, 0x72: {l: {0x6E: {l: {0x6F: {l: {0x75: {l: {0x6C: {l: {0x6C: {l: {0x69: {l: {0x73: {l: {0x3B: {c: [8492]}}}}}}}}}}}}}}}}}, 0x74: {l: {0x61: {l: {0x3B: {c: [914]}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120069]}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120121]}}}}}}}, 0x72: {l: {0x65: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [728]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8492]}}}}}}}, 0x75: {l: {0x6D: {l: {0x70: {l: {0x65: {l: {0x71: {l: {0x3B: {c: [8782]}}}}}}}}}}}}},
	    0x43: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [262]}}}}}}}}}, 0x70: {l: {0x3B: {c: [8914]}, 0x69: {l: {0x74: {l: {0x61: {l: {0x6C: {l: {0x44: {l: {0x69: {l: {0x66: {l: {0x66: {l: {0x65: {l: {0x72: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x69: {l: {0x61: {l: {0x6C: {l: {0x44: {l: {0x3B: {c: [8517]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x79: {l: {0x6C: {l: {0x65: {l: {0x79: {l: {0x73: {l: {0x3B: {c: [8493]}}}}}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [268]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [199]}}, c: [199]}}}}}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [264]}}}}}}}, 0x6F: {l: {0x6E: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8752]}}}}}}}}}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [266]}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x6C: {l: {0x61: {l: {0x3B: {c: [184]}}}}}}}}}}}, 0x6E: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x44: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [183]}}}}}}}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [8493]}}}}}, 0x48: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1063]}}}}}}}, 0x68: {l: {0x69: {l: {0x3B: {c: [935]}}}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x6C: {l: {0x65: {l: {0x44: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8857]}}}}}}}, 0x4D: {l: {0x69: {l: {0x6E: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8854]}}}}}}}}}}}, 0x50: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8853]}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8855]}}}}}}}}}}}}}}}}}}}}}, 0x6C: {l: {0x6F: {l: {0x63: {l: {0x6B: {l: {0x77: {l: {0x69: {l: {0x73: {l: {0x65: {l: {0x43: {l: {0x6F: {l: {0x6E: {l: {0x74: {l: {0x6F: {l: {0x75: {l: {0x72: {l: {0x49: {l: {0x6E: {l: {0x74: {l: {0x65: {l: {0x67: {l: {0x72: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8754]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x65: {l: {0x43: {l: {0x75: {l: {0x72: {l: {0x6C: {l: {0x79: {l: {0x44: {l: {0x6F: {l: {0x75: {l: {0x62: {l: {0x6C: {l: {0x65: {l: {0x51: {l: {0x75: {l: {0x6F: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [8221]}}}}}}}}}}}}}}}}}}}}}}}, 0x51: {l: {0x75: {l: {0x6F: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [8217]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x6F: {l: {0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [8759]}, 0x65: {l: {0x3B: {c: [10868]}}}}}}}}}, 0x6E: {l: {0x67: {l: {0x72: {l: {0x75: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8801]}}}}}}}}}}}}}, 0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8751]}}}}}}}, 0x74: {l: {0x6F: {l: {0x75: {l: {0x72: {l: {0x49: {l: {0x6E: {l: {0x74: {l: {0x65: {l: {0x67: {l: {0x72: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8750]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [8450]}}}, 0x72: {l: {0x6F: {l: {0x64: {l: {0x75: {l: {0x63: {l: {0x74: {l: {0x3B: {c: [8720]}}}}}}}}}}}}}}}, 0x75: {l: {0x6E: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x43: {l: {0x6C: {l: {0x6F: {l: {0x63: {l: {0x6B: {l: {0x77: {l: {0x69: {l: {0x73: {l: {0x65: {l: {0x43: {l: {0x6F: {l: {0x6E: {l: {0x74: {l: {0x6F: {l: {0x75: {l: {0x72: {l: {0x49: {l: {0x6E: {l: {0x74: {l: {0x65: {l: {0x67: {l: {0x72: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8755]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x4F: {l: {0x50: {l: {0x59: {l: {0x3B: {c: [169]}}, c: [169]}}}}}, 0x72: {l: {0x6F: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [10799]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119966]}}}}}}}, 0x75: {l: {0x70: {l: {0x43: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [8781]}}}}}}}, 0x3B: {c: [8915]}}}}}}},
	    0x63: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [263]}}}}}}}}}, 0x70: {l: {0x61: {l: {0x6E: {l: {0x64: {l: {0x3B: {c: [10820]}}}}}}}, 0x62: {l: {0x72: {l: {0x63: {l: {0x75: {l: {0x70: {l: {0x3B: {c: [10825]}}}}}}}}}}}, 0x63: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10827]}}}}}, 0x75: {l: {0x70: {l: {0x3B: {c: [10823]}}}}}}}, 0x3B: {c: [8745]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10816]}}}}}}}, 0x73: {l: {0x3B: {c: [8745, 65024]}}}}}, 0x72: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8257]}}}}}, 0x6F: {l: {0x6E: {l: {0x3B: {c: [711]}}}}}}}}}, 0x63: {l: {0x61: {l: {0x70: {l: {0x73: {l: {0x3B: {c: [10829]}}}}}, 0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [269]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [231]}}, c: [231]}}}}}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [265]}}}}}}}, 0x75: {l: {0x70: {l: {0x73: {l: {0x3B: {c: [10828]}, 0x73: {l: {0x6D: {l: {0x3B: {c: [10832]}}}}}}}}}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [267]}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [184]}}, c: [184]}}}}}, 0x6D: {l: {0x70: {l: {0x74: {l: {0x79: {l: {0x76: {l: {0x3B: {c: [10674]}}}}}}}}}}}, 0x6E: {l: {0x74: {l: {0x3B: {c: [162]}, 0x65: {l: {0x72: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [183]}}}}}}}}}}}}, c: [162]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120096]}}}}}, 0x68: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1095]}}}}}, 0x65: {l: {0x63: {l: {0x6B: {l: {0x3B: {c: [10003]}, 0x6D: {l: {0x61: {l: {0x72: {l: {0x6B: {l: {0x3B: {c: [10003]}}}}}}}}}}}}}}}, 0x69: {l: {0x3B: {c: [967]}}}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [710]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8791]}}}}}, 0x6C: {l: {0x65: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x3B: {c: [8634]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [8635]}}}}}}}}}}}}}}}}}}}}}, 0x64: {l: {0x61: {l: {0x73: {l: {0x74: {l: {0x3B: {c: [8859]}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [8858]}}}}}}}}}, 0x64: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8861]}}}}}}}}}, 0x52: {l: {0x3B: {c: [174]}}}, 0x53: {l: {0x3B: {c: [9416]}}}}}}}}}}}, 0x3B: {c: [9675]}, 0x45: {l: {0x3B: {c: [10691]}}}, 0x65: {l: {0x3B: {c: [8791]}}}, 0x66: {l: {0x6E: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10768]}}}}}}}}}}}, 0x6D: {l: {0x69: {l: {0x64: {l: {0x3B: {c: [10991]}}}}}}}, 0x73: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x3B: {c: [10690]}}}}}}}}}}}}}, 0x6C: {l: {0x75: {l: {0x62: {l: {0x73: {l: {0x3B: {c: [9827]}, 0x75: {l: {0x69: {l: {0x74: {l: {0x3B: {c: [9827]}}}}}}}}}}}}}}}, 0x6F: {l: {0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [58]}, 0x65: {l: {0x3B: {c: [8788]}, 0x71: {l: {0x3B: {c: [8788]}}}}}}}}}}}, 0x6D: {l: {0x6D: {l: {0x61: {l: {0x3B: {c: [44]}, 0x74: {l: {0x3B: {c: [64]}}}}}}}, 0x70: {l: {0x3B: {c: [8705]}, 0x66: {l: {0x6E: {l: {0x3B: {c: [8728]}}}}}, 0x6C: {l: {0x65: {l: {0x6D: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8705]}}}}}}}}}, 0x78: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8450]}}}}}}}}}}}}}}}, 0x6E: {l: {0x67: {l: {0x3B: {c: [8773]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10861]}}}}}}}}}, 0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8750]}}}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120148]}}}, 0x72: {l: {0x6F: {l: {0x64: {l: {0x3B: {c: [8720]}}}}}}}, 0x79: {l: {0x3B: {c: [169]}, 0x73: {l: {0x72: {l: {0x3B: {c: [8471]}}}}}}, c: [169]}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8629]}}}}}}}, 0x6F: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [10007]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119992]}}}}}, 0x75: {l: {0x62: {l: {0x3B: {c: [10959]}, 0x65: {l: {0x3B: {c: [10961]}}}}}, 0x70: {l: {0x3B: {c: [10960]}, 0x65: {l: {0x3B: {c: [10962]}}}}}}}}}, 0x74: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8943]}}}}}}}}}, 0x75: {l: {0x64: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6C: {l: {0x3B: {c: [10552]}}}, 0x72: {l: {0x3B: {c: [10549]}}}}}}}}}}}, 0x65: {l: {0x70: {l: {0x72: {l: {0x3B: {c: [8926]}}}}}, 0x73: {l: {0x63: {l: {0x3B: {c: [8927]}}}}}}}, 0x6C: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8630]}, 0x70: {l: {0x3B: {c: [10557]}}}}}}}}}}}, 0x70: {l: {0x62: {l: {0x72: {l: {0x63: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10824]}}}}}}}}}}}, 0x63: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10822]}}}}}, 0x75: {l: {0x70: {l: {0x3B: {c: [10826]}}}}}}}, 0x3B: {c: [8746]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8845]}}}}}}}, 0x6F: {l: {0x72: {l: {0x3B: {c: [10821]}}}}}, 0x73: {l: {0x3B: {c: [8746, 65024]}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8631]}, 0x6D: {l: {0x3B: {c: [10556]}}}}}}}}}, 0x6C: {l: {0x79: {l: {0x65: {l: {0x71: {l: {0x70: {l: {0x72: {l: {0x65: {l: {0x63: {l: {0x3B: {c: [8926]}}}}}}}}}, 0x73: {l: {0x75: {l: {0x63: {l: {0x63: {l: {0x3B: {c: [8927]}}}}}}}}}}}}}, 0x76: {l: {0x65: {l: {0x65: {l: {0x3B: {c: [8910]}}}}}}}, 0x77: {l: {0x65: {l: {0x64: {l: {0x67: {l: {0x65: {l: {0x3B: {c: [8911]}}}}}}}}}}}}}}}, 0x72: {l: {0x65: {l: {0x6E: {l: {0x3B: {c: [164]}}, c: [164]}}}}}, 0x76: {l: {0x65: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x3B: {c: [8630]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [8631]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x76: {l: {0x65: {l: {0x65: {l: {0x3B: {c: [8910]}}}}}}}, 0x77: {l: {0x65: {l: {0x64: {l: {0x3B: {c: [8911]}}}}}}}}}, 0x77: {l: {0x63: {l: {0x6F: {l: {0x6E: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8754]}}}}}}}}}}}}}, 0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8753]}}}}}}}}}, 0x79: {l: {0x6C: {l: {0x63: {l: {0x74: {l: {0x79: {l: {0x3B: {c: [9005]}}}}}}}}}}}}},
	    0x64: {l: {0x61: {l: {0x67: {l: {0x67: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8224]}}}}}}}}}, 0x6C: {l: {0x65: {l: {0x74: {l: {0x68: {l: {0x3B: {c: [8504]}}}}}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8595]}}}}}, 0x73: {l: {0x68: {l: {0x3B: {c: [8208]}, 0x76: {l: {0x3B: {c: [8867]}}}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8659]}}}}}}}, 0x62: {l: {0x6B: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10511]}}}}}}}}}}}, 0x6C: {l: {0x61: {l: {0x63: {l: {0x3B: {c: [733]}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [271]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1076]}}}}}, 0x64: {l: {0x61: {l: {0x67: {l: {0x67: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8225]}}}}}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8650]}}}}}}}, 0x3B: {c: [8518]}, 0x6F: {l: {0x74: {l: {0x73: {l: {0x65: {l: {0x71: {l: {0x3B: {c: [10871]}}}}}}}}}}}}}, 0x65: {l: {0x67: {l: {0x3B: {c: [176]}}, c: [176]}, 0x6C: {l: {0x74: {l: {0x61: {l: {0x3B: {c: [948]}}}}}}}, 0x6D: {l: {0x70: {l: {0x74: {l: {0x79: {l: {0x76: {l: {0x3B: {c: [10673]}}}}}}}}}}}}}, 0x66: {l: {0x69: {l: {0x73: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [10623]}}}}}}}}}, 0x72: {l: {0x3B: {c: [120097]}}}}}, 0x48: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10597]}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x6C: {l: {0x3B: {c: [8643]}}}, 0x72: {l: {0x3B: {c: [8642]}}}}}}}}}, 0x69: {l: {0x61: {l: {0x6D: {l: {0x3B: {c: [8900]}, 0x6F: {l: {0x6E: {l: {0x64: {l: {0x3B: {c: [8900]}, 0x73: {l: {0x75: {l: {0x69: {l: {0x74: {l: {0x3B: {c: [9830]}}}}}}}}}}}}}}}, 0x73: {l: {0x3B: {c: [9830]}}}}}}}, 0x65: {l: {0x3B: {c: [168]}}}, 0x67: {l: {0x61: {l: {0x6D: {l: {0x6D: {l: {0x61: {l: {0x3B: {c: [989]}}}}}}}}}}}, 0x73: {l: {0x69: {l: {0x6E: {l: {0x3B: {c: [8946]}}}}}}}, 0x76: {l: {0x3B: {c: [247]}, 0x69: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [247]}, 0x6F: {l: {0x6E: {l: {0x74: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8903]}}}}}}}}}}}}}}}}, c: [247]}}}}}, 0x6F: {l: {0x6E: {l: {0x78: {l: {0x3B: {c: [8903]}}}}}}}}}}}, 0x6A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1106]}}}}}}}, 0x6C: {l: {0x63: {l: {0x6F: {l: {0x72: {l: {0x6E: {l: {0x3B: {c: [8990]}}}}}}}, 0x72: {l: {0x6F: {l: {0x70: {l: {0x3B: {c: [8973]}}}}}}}}}}}, 0x6F: {l: {0x6C: {l: {0x6C: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [36]}}}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120149]}}}}}, 0x74: {l: {0x3B: {c: [729]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8784]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8785]}}}}}}}}}}}, 0x6D: {l: {0x69: {l: {0x6E: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8760]}}}}}}}}}}}, 0x70: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8724]}}}}}}}}}, 0x73: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [8865]}}}}}}}}}}}}}}}, 0x75: {l: {0x62: {l: {0x6C: {l: {0x65: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x77: {l: {0x65: {l: {0x64: {l: {0x67: {l: {0x65: {l: {0x3B: {c: [8966]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x77: {l: {0x6E: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8595]}}}}}}}}}}}, 0x64: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x73: {l: {0x3B: {c: [8650]}}}}}}}}}}}}}}}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x70: {l: {0x6F: {l: {0x6F: {l: {0x6E: {l: {0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x3B: {c: [8643]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [8642]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x62: {l: {0x6B: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10512]}}}}}}}}}}}}}, 0x63: {l: {0x6F: {l: {0x72: {l: {0x6E: {l: {0x3B: {c: [8991]}}}}}}}, 0x72: {l: {0x6F: {l: {0x70: {l: {0x3B: {c: [8972]}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119993]}}}, 0x79: {l: {0x3B: {c: [1109]}}}}}, 0x6F: {l: {0x6C: {l: {0x3B: {c: [10742]}}}}}, 0x74: {l: {0x72: {l: {0x6F: {l: {0x6B: {l: {0x3B: {c: [273]}}}}}}}}}}}, 0x74: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8945]}}}}}}}, 0x72: {l: {0x69: {l: {0x3B: {c: [9663]}, 0x66: {l: {0x3B: {c: [9662]}}}}}}}}}, 0x75: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8693]}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10607]}}}}}}}}}, 0x77: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x3B: {c: [10662]}}}}}}}}}}}}}, 0x7A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1119]}}}}}, 0x69: {l: {0x67: {l: {0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10239]}}}}}}}}}}}}}}}}},
	    0x44: {l: {0x61: {l: {0x67: {l: {0x67: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8225]}}}}}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8609]}}}}}, 0x73: {l: {0x68: {l: {0x76: {l: {0x3B: {c: [10980]}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [270]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1044]}}}}}, 0x44: {l: {0x3B: {c: [8517]}, 0x6F: {l: {0x74: {l: {0x72: {l: {0x61: {l: {0x68: {l: {0x64: {l: {0x3B: {c: [10513]}}}}}}}}}}}}}}}, 0x65: {l: {0x6C: {l: {0x3B: {c: [8711]}, 0x74: {l: {0x61: {l: {0x3B: {c: [916]}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120071]}}}}}, 0x69: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x69: {l: {0x74: {l: {0x69: {l: {0x63: {l: {0x61: {l: {0x6C: {l: {0x41: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [180]}}}}}}}}}}}, 0x44: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [729]}}}, 0x75: {l: {0x62: {l: {0x6C: {l: {0x65: {l: {0x41: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [733]}}}}}}}}}}}}}}}}}}}}}}}, 0x47: {l: {0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [96]}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [732]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x6D: {l: {0x6F: {l: {0x6E: {l: {0x64: {l: {0x3B: {c: [8900]}}}}}}}}}}}, 0x66: {l: {0x66: {l: {0x65: {l: {0x72: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x69: {l: {0x61: {l: {0x6C: {l: {0x44: {l: {0x3B: {c: [8518]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x4A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1026]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120123]}}}}}, 0x74: {l: {0x3B: {c: [168]}, 0x44: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8412]}}}}}}}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8784]}}}}}}}}}}}}}, 0x75: {l: {0x62: {l: {0x6C: {l: {0x65: {l: {0x43: {l: {0x6F: {l: {0x6E: {l: {0x74: {l: {0x6F: {l: {0x75: {l: {0x72: {l: {0x49: {l: {0x6E: {l: {0x74: {l: {0x65: {l: {0x67: {l: {0x72: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8751]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x44: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [168]}}}, 0x77: {l: {0x6E: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8659]}}}}}}}}}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8656]}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8660]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x65: {l: {0x65: {l: {0x3B: {c: [10980]}}}}}}}}}}}}}, 0x6F: {l: {0x6E: {l: {0x67: {l: {0x4C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10232]}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10234]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10233]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8658]}}}}}}}}}}}, 0x54: {l: {0x65: {l: {0x65: {l: {0x3B: {c: [8872]}}}}}}}}}}}}}}}}}, 0x55: {l: {0x70: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8657]}}}}}}}}}}}, 0x44: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8661]}}}}}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x72: {l: {0x74: {l: {0x69: {l: {0x63: {l: {0x61: {l: {0x6C: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8741]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x77: {l: {0x6E: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10515]}}}}}}}, 0x3B: {c: [8595]}, 0x55: {l: {0x70: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8693]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8659]}}}}}}}}}}}, 0x42: {l: {0x72: {l: {0x65: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [785]}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10576]}}}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x65: {l: {0x65: {l: {0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10590]}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10582]}}}}}}}, 0x3B: {c: [8637]}}}}}}}}}}}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x54: {l: {0x65: {l: {0x65: {l: {0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10591]}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10583]}}}}}}}, 0x3B: {c: [8641]}}}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x65: {l: {0x65: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8615]}}}}}}}}}}}, 0x3B: {c: [8868]}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119967]}}}}}, 0x74: {l: {0x72: {l: {0x6F: {l: {0x6B: {l: {0x3B: {c: [272]}}}}}}}}}}}, 0x53: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1029]}}}}}}}, 0x5A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1039]}}}}}}}}},
	    0x45: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [201]}}, c: [201]}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [282]}}}}}}}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [202]}}, c: [202]}}}}}, 0x79: {l: {0x3B: {c: [1069]}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [278]}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120072]}}}}}, 0x67: {l: {0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [200]}}, c: [200]}}}}}}}}}, 0x6C: {l: {0x65: {l: {0x6D: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8712]}}}}}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [274]}}}}}}}, 0x70: {l: {0x74: {l: {0x79: {l: {0x53: {l: {0x6D: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x53: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [9723]}}}}}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x72: {l: {0x79: {l: {0x53: {l: {0x6D: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x53: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [9643]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x4E: {l: {0x47: {l: {0x3B: {c: [330]}}}}}, 0x6F: {l: {0x67: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [280]}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120124]}}}}}}}, 0x70: {l: {0x73: {l: {0x69: {l: {0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [917]}}}}}}}}}}}}}, 0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [10869]}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8770]}}}}}}}}}}}}}}}, 0x69: {l: {0x6C: {l: {0x69: {l: {0x62: {l: {0x72: {l: {0x69: {l: {0x75: {l: {0x6D: {l: {0x3B: {c: [8652]}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8496]}}}}}, 0x69: {l: {0x6D: {l: {0x3B: {c: [10867]}}}}}}}, 0x74: {l: {0x61: {l: {0x3B: {c: [919]}}}}}, 0x54: {l: {0x48: {l: {0x3B: {c: [208]}}, c: [208]}}}, 0x75: {l: {0x6D: {l: {0x6C: {l: {0x3B: {c: [203]}}, c: [203]}}}}}, 0x78: {l: {0x69: {l: {0x73: {l: {0x74: {l: {0x73: {l: {0x3B: {c: [8707]}}}}}}}}}, 0x70: {l: {0x6F: {l: {0x6E: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x69: {l: {0x61: {l: {0x6C: {l: {0x45: {l: {0x3B: {c: [8519]}}}}}}}}}}}}}}}}}}}}}}}}},
	    0x65: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [233]}}, c: [233]}}}}}}}, 0x73: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [10862]}}}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [283]}}}}}}}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [234]}}, c: [234]}, 0x3B: {c: [8790]}}}}}, 0x6F: {l: {0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [8789]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1101]}}}}}, 0x44: {l: {0x44: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10871]}}}}}}}, 0x6F: {l: {0x74: {l: {0x3B: {c: [8785]}}}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [279]}}}}}}}, 0x65: {l: {0x3B: {c: [8519]}}}, 0x66: {l: {0x44: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8786]}}}}}}}, 0x72: {l: {0x3B: {c: [120098]}}}}}, 0x67: {l: {0x3B: {c: [10906]}, 0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [232]}}, c: [232]}}}}}}}, 0x73: {l: {0x3B: {c: [10902]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10904]}}}}}}}}}}}, 0x6C: {l: {0x3B: {c: [10905]}, 0x69: {l: {0x6E: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x73: {l: {0x3B: {c: [9191]}}}}}}}}}}}}}, 0x6C: {l: {0x3B: {c: [8467]}}}, 0x73: {l: {0x3B: {c: [10901]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10903]}}}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [275]}}}}}}}, 0x70: {l: {0x74: {l: {0x79: {l: {0x3B: {c: [8709]}, 0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8709]}}}}}}}, 0x76: {l: {0x3B: {c: [8709]}}}}}}}}}, 0x73: {l: {0x70: {l: {0x31: {l: {0x33: {l: {0x3B: {c: [8196]}}}, 0x34: {l: {0x3B: {c: [8197]}}}}}, 0x3B: {c: [8195]}}}}}}}, 0x6E: {l: {0x67: {l: {0x3B: {c: [331]}}}, 0x73: {l: {0x70: {l: {0x3B: {c: [8194]}}}}}}}, 0x6F: {l: {0x67: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [281]}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120150]}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8917]}, 0x73: {l: {0x6C: {l: {0x3B: {c: [10723]}}}}}}}}}, 0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10865]}}}}}}}, 0x73: {l: {0x69: {l: {0x3B: {c: [949]}, 0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [949]}}}}}}}, 0x76: {l: {0x3B: {c: [1013]}}}}}}}}}, 0x71: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [8790]}}}}}}}, 0x6F: {l: {0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [8789]}}}}}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8770]}}}}}, 0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x67: {l: {0x74: {l: {0x72: {l: {0x3B: {c: [10902]}}}}}}}, 0x6C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [10901]}}}}}}}}}}}}}}}}}}}, 0x75: {l: {0x61: {l: {0x6C: {l: {0x73: {l: {0x3B: {c: [61]}}}}}}}, 0x65: {l: {0x73: {l: {0x74: {l: {0x3B: {c: [8799]}}}}}}}, 0x69: {l: {0x76: {l: {0x3B: {c: [8801]}, 0x44: {l: {0x44: {l: {0x3B: {c: [10872]}}}}}}}}}}}, 0x76: {l: {0x70: {l: {0x61: {l: {0x72: {l: {0x73: {l: {0x6C: {l: {0x3B: {c: [10725]}}}}}}}}}}}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10609]}}}}}}}, 0x44: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8787]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8495]}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8784]}}}}}}}, 0x69: {l: {0x6D: {l: {0x3B: {c: [8770]}}}}}}}, 0x74: {l: {0x61: {l: {0x3B: {c: [951]}}}, 0x68: {l: {0x3B: {c: [240]}}, c: [240]}}}, 0x75: {l: {0x6D: {l: {0x6C: {l: {0x3B: {c: [235]}}, c: [235]}}}, 0x72: {l: {0x6F: {l: {0x3B: {c: [8364]}}}}}}}, 0x78: {l: {0x63: {l: {0x6C: {l: {0x3B: {c: [33]}}}}}, 0x69: {l: {0x73: {l: {0x74: {l: {0x3B: {c: [8707]}}}}}}}, 0x70: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x61: {l: {0x74: {l: {0x69: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [8496]}}}}}}}}}}}}}}}}}, 0x6F: {l: {0x6E: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x69: {l: {0x61: {l: {0x6C: {l: {0x65: {l: {0x3B: {c: [8519]}}}}}}}}}}}}}}}}}}}}}}}}},
	    0x66: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x69: {l: {0x6E: {l: {0x67: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x73: {l: {0x65: {l: {0x71: {l: {0x3B: {c: [8786]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x63: {l: {0x79: {l: {0x3B: {c: [1092]}}}}}, 0x65: {l: {0x6D: {l: {0x61: {l: {0x6C: {l: {0x65: {l: {0x3B: {c: [9792]}}}}}}}}}}}, 0x66: {l: {0x69: {l: {0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [64259]}}}}}}}}}, 0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [64256]}}}}}, 0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [64260]}}}}}}}}}, 0x72: {l: {0x3B: {c: [120099]}}}}}, 0x69: {l: {0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [64257]}}}}}}}}}, 0x6A: {l: {0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [102, 106]}}}}}}}}}, 0x6C: {l: {0x61: {l: {0x74: {l: {0x3B: {c: [9837]}}}}}, 0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [64258]}}}}}}}, 0x74: {l: {0x6E: {l: {0x73: {l: {0x3B: {c: [9649]}}}}}}}}}, 0x6E: {l: {0x6F: {l: {0x66: {l: {0x3B: {c: [402]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120151]}}}}}, 0x72: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x3B: {c: [8704]}}}}}}}, 0x6B: {l: {0x3B: {c: [8916]}, 0x76: {l: {0x3B: {c: [10969]}}}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x74: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10765]}}}}}}}}}}}}}}}, 0x72: {l: {0x61: {l: {0x63: {l: {0x31: {l: {0x32: {l: {0x3B: {c: [189]}}, c: [189]}, 0x33: {l: {0x3B: {c: [8531]}}}, 0x34: {l: {0x3B: {c: [188]}}, c: [188]}, 0x35: {l: {0x3B: {c: [8533]}}}, 0x36: {l: {0x3B: {c: [8537]}}}, 0x38: {l: {0x3B: {c: [8539]}}}}}, 0x32: {l: {0x33: {l: {0x3B: {c: [8532]}}}, 0x35: {l: {0x3B: {c: [8534]}}}}}, 0x33: {l: {0x34: {l: {0x3B: {c: [190]}}, c: [190]}, 0x35: {l: {0x3B: {c: [8535]}}}, 0x38: {l: {0x3B: {c: [8540]}}}}}, 0x34: {l: {0x35: {l: {0x3B: {c: [8536]}}}}}, 0x35: {l: {0x36: {l: {0x3B: {c: [8538]}}}, 0x38: {l: {0x3B: {c: [8541]}}}}}, 0x37: {l: {0x38: {l: {0x3B: {c: [8542]}}}}}}}, 0x73: {l: {0x6C: {l: {0x3B: {c: [8260]}}}}}}}, 0x6F: {l: {0x77: {l: {0x6E: {l: {0x3B: {c: [8994]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119995]}}}}}}}}},
	    0x46: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1060]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120073]}}}}}, 0x69: {l: {0x6C: {l: {0x6C: {l: {0x65: {l: {0x64: {l: {0x53: {l: {0x6D: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x53: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [9724]}}}}}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x72: {l: {0x79: {l: {0x53: {l: {0x6D: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x53: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [9642]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120125]}}}}}, 0x72: {l: {0x41: {l: {0x6C: {l: {0x6C: {l: {0x3B: {c: [8704]}}}}}}}}}, 0x75: {l: {0x72: {l: {0x69: {l: {0x65: {l: {0x72: {l: {0x74: {l: {0x72: {l: {0x66: {l: {0x3B: {c: [8497]}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8497]}}}}}}}}},
	    0x67: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [501]}}}}}}}}}, 0x6D: {l: {0x6D: {l: {0x61: {l: {0x3B: {c: [947]}, 0x64: {l: {0x3B: {c: [989]}}}}}}}}}, 0x70: {l: {0x3B: {c: [10886]}}}}}, 0x62: {l: {0x72: {l: {0x65: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [287]}}}}}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [285]}}}}}}}, 0x79: {l: {0x3B: {c: [1075]}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [289]}}}}}}}, 0x65: {l: {0x3B: {c: [8805]}, 0x6C: {l: {0x3B: {c: [8923]}}}, 0x71: {l: {0x3B: {c: [8805]}, 0x71: {l: {0x3B: {c: [8807]}}}, 0x73: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10878]}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x63: {l: {0x3B: {c: [10921]}}}}}, 0x3B: {c: [10878]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10880]}, 0x6F: {l: {0x3B: {c: [10882]}, 0x6C: {l: {0x3B: {c: [10884]}}}}}}}}}}}, 0x6C: {l: {0x3B: {c: [8923, 65024]}, 0x65: {l: {0x73: {l: {0x3B: {c: [10900]}}}}}}}}}}}, 0x45: {l: {0x3B: {c: [8807]}, 0x6C: {l: {0x3B: {c: [10892]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120100]}}}}}, 0x67: {l: {0x3B: {c: [8811]}, 0x67: {l: {0x3B: {c: [8921]}}}}}, 0x69: {l: {0x6D: {l: {0x65: {l: {0x6C: {l: {0x3B: {c: [8503]}}}}}}}}}, 0x6A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1107]}}}}}}}, 0x6C: {l: {0x61: {l: {0x3B: {c: [10917]}}}, 0x3B: {c: [8823]}, 0x45: {l: {0x3B: {c: [10898]}}}, 0x6A: {l: {0x3B: {c: [10916]}}}}}, 0x6E: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10890]}, 0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [10890]}}}}}}}}}}}}}, 0x65: {l: {0x3B: {c: [10888]}, 0x71: {l: {0x3B: {c: [10888]}, 0x71: {l: {0x3B: {c: [8809]}}}}}}}, 0x45: {l: {0x3B: {c: [8809]}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8935]}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120152]}}}}}}}, 0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [96]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8458]}}}}}, 0x69: {l: {0x6D: {l: {0x3B: {c: [8819]}, 0x65: {l: {0x3B: {c: [10894]}}}, 0x6C: {l: {0x3B: {c: [10896]}}}}}}}}}, 0x74: {l: {0x63: {l: {0x63: {l: {0x3B: {c: [10919]}}}, 0x69: {l: {0x72: {l: {0x3B: {c: [10874]}}}}}}}, 0x3B: {c: [62]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8919]}}}}}}}, 0x6C: {l: {0x50: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10645]}}}}}}}}}, 0x71: {l: {0x75: {l: {0x65: {l: {0x73: {l: {0x74: {l: {0x3B: {c: [10876]}}}}}}}}}}}, 0x72: {l: {0x61: {l: {0x70: {l: {0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [10886]}}}}}}}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [10616]}}}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8919]}}}}}}}, 0x65: {l: {0x71: {l: {0x6C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [8923]}}}}}}}}}, 0x71: {l: {0x6C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [10892]}}}}}}}}}}}}}}}, 0x6C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [8823]}}}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8819]}}}}}}}}}}, c: [62]}, 0x76: {l: {0x65: {l: {0x72: {l: {0x74: {l: {0x6E: {l: {0x65: {l: {0x71: {l: {0x71: {l: {0x3B: {c: [8809, 65024]}}}}}}}}}}}}}}}, 0x6E: {l: {0x45: {l: {0x3B: {c: [8809, 65024]}}}}}}}}},
	    0x47: {l: {0x61: {l: {0x6D: {l: {0x6D: {l: {0x61: {l: {0x3B: {c: [915]}, 0x64: {l: {0x3B: {c: [988]}}}}}}}}}}}, 0x62: {l: {0x72: {l: {0x65: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [286]}}}}}}}}}}}, 0x63: {l: {0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [290]}}}}}}}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [284]}}}}}}}, 0x79: {l: {0x3B: {c: [1043]}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [288]}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120074]}}}}}, 0x67: {l: {0x3B: {c: [8921]}}}, 0x4A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1027]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120126]}}}}}}}, 0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8805]}, 0x4C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [8923]}}}}}}}}}}}}}}}}}}}, 0x46: {l: {0x75: {l: {0x6C: {l: {0x6C: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8807]}}}}}}}}}}}}}}}}}}}, 0x47: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [10914]}}}}}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [8823]}}}}}}}}}, 0x53: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [10878]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8819]}}}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119970]}}}}}}}, 0x54: {l: {0x3B: {c: [62]}}, c: [62]}, 0x74: {l: {0x3B: {c: [8811]}}}}},
	    0x48: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x6B: {l: {0x3B: {c: [711]}}}}}}}, 0x74: {l: {0x3B: {c: [94]}}}}}, 0x41: {l: {0x52: {l: {0x44: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1066]}}}}}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [292]}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [8460]}}}}}, 0x69: {l: {0x6C: {l: {0x62: {l: {0x65: {l: {0x72: {l: {0x74: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8459]}}}}}}}}}}}}}}}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [8461]}}}}}, 0x72: {l: {0x69: {l: {0x7A: {l: {0x6F: {l: {0x6E: {l: {0x74: {l: {0x61: {l: {0x6C: {l: {0x4C: {l: {0x69: {l: {0x6E: {l: {0x65: {l: {0x3B: {c: [9472]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8459]}}}}}, 0x74: {l: {0x72: {l: {0x6F: {l: {0x6B: {l: {0x3B: {c: [294]}}}}}}}}}}}, 0x75: {l: {0x6D: {l: {0x70: {l: {0x44: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x48: {l: {0x75: {l: {0x6D: {l: {0x70: {l: {0x3B: {c: [8782]}}}}}}}}}}}}}}}}}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8783]}}}}}}}}}}}}}}}}}}},
	    0x68: {l: {0x61: {l: {0x69: {l: {0x72: {l: {0x73: {l: {0x70: {l: {0x3B: {c: [8202]}}}}}}}}}, 0x6C: {l: {0x66: {l: {0x3B: {c: [189]}}}}}, 0x6D: {l: {0x69: {l: {0x6C: {l: {0x74: {l: {0x3B: {c: [8459]}}}}}}}}}, 0x72: {l: {0x64: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1098]}}}}}}}, 0x72: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x3B: {c: [10568]}}}}}}}, 0x3B: {c: [8596]}, 0x77: {l: {0x3B: {c: [8621]}}}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8660]}}}}}}}, 0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8463]}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [293]}}}}}}}}}, 0x65: {l: {0x61: {l: {0x72: {l: {0x74: {l: {0x73: {l: {0x3B: {c: [9829]}, 0x75: {l: {0x69: {l: {0x74: {l: {0x3B: {c: [9829]}}}}}}}}}}}}}}}, 0x6C: {l: {0x6C: {l: {0x69: {l: {0x70: {l: {0x3B: {c: [8230]}}}}}}}}}, 0x72: {l: {0x63: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [8889]}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120101]}}}}}, 0x6B: {l: {0x73: {l: {0x65: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10533]}}}}}}}}}}}, 0x77: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10534]}}}}}}}}}}}}}}}, 0x6F: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8703]}}}}}}}, 0x6D: {l: {0x74: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [8763]}}}}}}}}}, 0x6F: {l: {0x6B: {l: {0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8617]}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8618]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120153]}}}}}, 0x72: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8213]}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119997]}}}}}, 0x6C: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8463]}}}}}}}}}, 0x74: {l: {0x72: {l: {0x6F: {l: {0x6B: {l: {0x3B: {c: [295]}}}}}}}}}}}, 0x79: {l: {0x62: {l: {0x75: {l: {0x6C: {l: {0x6C: {l: {0x3B: {c: [8259]}}}}}}}}}, 0x70: {l: {0x68: {l: {0x65: {l: {0x6E: {l: {0x3B: {c: [8208]}}}}}}}}}}}}},
	    0x49: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [205]}}, c: [205]}}}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [206]}}, c: [206]}}}}}, 0x79: {l: {0x3B: {c: [1048]}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [304]}}}}}}}, 0x45: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1045]}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [8465]}}}}}, 0x67: {l: {0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [204]}}, c: [204]}}}}}}}}}, 0x4A: {l: {0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [306]}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [298]}}}}}, 0x67: {l: {0x69: {l: {0x6E: {l: {0x61: {l: {0x72: {l: {0x79: {l: {0x49: {l: {0x3B: {c: [8520]}}}}}}}}}}}}}}}}}, 0x3B: {c: [8465]}, 0x70: {l: {0x6C: {l: {0x69: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8658]}}}}}}}}}}}}}, 0x6E: {l: {0x74: {l: {0x3B: {c: [8748]}, 0x65: {l: {0x67: {l: {0x72: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8747]}}}}}}}}}, 0x72: {l: {0x73: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x69: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [8898]}}}}}}}}}}}}}}}}}}}}}, 0x76: {l: {0x69: {l: {0x73: {l: {0x69: {l: {0x62: {l: {0x6C: {l: {0x65: {l: {0x43: {l: {0x6F: {l: {0x6D: {l: {0x6D: {l: {0x61: {l: {0x3B: {c: [8291]}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8290]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x4F: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1025]}}}}}}}, 0x6F: {l: {0x67: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [302]}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120128]}}}}}, 0x74: {l: {0x61: {l: {0x3B: {c: [921]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8464]}}}}}}}, 0x74: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [296]}}}}}}}}}}}, 0x75: {l: {0x6B: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1030]}}}}}}}, 0x6D: {l: {0x6C: {l: {0x3B: {c: [207]}}, c: [207]}}}}}}},
	    0x69: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [237]}}, c: [237]}}}}}}}}}, 0x63: {l: {0x3B: {c: [8291]}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [238]}}, c: [238]}}}}}, 0x79: {l: {0x3B: {c: [1080]}}}}}, 0x65: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1077]}}}}}, 0x78: {l: {0x63: {l: {0x6C: {l: {0x3B: {c: [161]}}, c: [161]}}}}}}}, 0x66: {l: {0x66: {l: {0x3B: {c: [8660]}}}, 0x72: {l: {0x3B: {c: [120102]}}}}}, 0x67: {l: {0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [236]}}, c: [236]}}}}}}}}}, 0x69: {l: {0x3B: {c: [8520]}, 0x69: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10764]}}}}}}}, 0x6E: {l: {0x74: {l: {0x3B: {c: [8749]}}}}}}}, 0x6E: {l: {0x66: {l: {0x69: {l: {0x6E: {l: {0x3B: {c: [10716]}}}}}}}}}, 0x6F: {l: {0x74: {l: {0x61: {l: {0x3B: {c: [8489]}}}}}}}}}, 0x6A: {l: {0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [307]}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [299]}}}}}, 0x67: {l: {0x65: {l: {0x3B: {c: [8465]}}}, 0x6C: {l: {0x69: {l: {0x6E: {l: {0x65: {l: {0x3B: {c: [8464]}}}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x74: {l: {0x3B: {c: [8465]}}}}}}}}}}}, 0x74: {l: {0x68: {l: {0x3B: {c: [305]}}}}}}}, 0x6F: {l: {0x66: {l: {0x3B: {c: [8887]}}}}}, 0x70: {l: {0x65: {l: {0x64: {l: {0x3B: {c: [437]}}}}}}}}}, 0x6E: {l: {0x63: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [8453]}}}}}}}}}, 0x3B: {c: [8712]}, 0x66: {l: {0x69: {l: {0x6E: {l: {0x3B: {c: [8734]}, 0x74: {l: {0x69: {l: {0x65: {l: {0x3B: {c: [10717]}}}}}}}}}}}}}, 0x6F: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [305]}}}}}}}}}, 0x74: {l: {0x63: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8890]}}}}}}}, 0x3B: {c: [8747]}, 0x65: {l: {0x67: {l: {0x65: {l: {0x72: {l: {0x73: {l: {0x3B: {c: [8484]}}}}}}}}}, 0x72: {l: {0x63: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8890]}}}}}}}}}}}, 0x6C: {l: {0x61: {l: {0x72: {l: {0x68: {l: {0x6B: {l: {0x3B: {c: [10775]}}}}}}}}}}}, 0x70: {l: {0x72: {l: {0x6F: {l: {0x64: {l: {0x3B: {c: [10812]}}}}}}}}}}}}}, 0x6F: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1105]}}}}}, 0x67: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [303]}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120154]}}}}}, 0x74: {l: {0x61: {l: {0x3B: {c: [953]}}}}}}}, 0x70: {l: {0x72: {l: {0x6F: {l: {0x64: {l: {0x3B: {c: [10812]}}}}}}}}}, 0x71: {l: {0x75: {l: {0x65: {l: {0x73: {l: {0x74: {l: {0x3B: {c: [191]}}, c: [191]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119998]}}}}}, 0x69: {l: {0x6E: {l: {0x3B: {c: [8712]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8949]}}}}}}}, 0x45: {l: {0x3B: {c: [8953]}}}, 0x73: {l: {0x3B: {c: [8948]}, 0x76: {l: {0x3B: {c: [8947]}}}}}, 0x76: {l: {0x3B: {c: [8712]}}}}}}}}}, 0x74: {l: {0x3B: {c: [8290]}, 0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [297]}}}}}}}}}}}, 0x75: {l: {0x6B: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1110]}}}}}}}, 0x6D: {l: {0x6C: {l: {0x3B: {c: [239]}}, c: [239]}}}}}}},
	    0x4A: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [308]}}}}}}}, 0x79: {l: {0x3B: {c: [1049]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120077]}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120129]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119973]}}}}}, 0x65: {l: {0x72: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1032]}}}}}}}}}}}, 0x75: {l: {0x6B: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1028]}}}}}}}}}}},
	    0x6A: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [309]}}}}}}}, 0x79: {l: {0x3B: {c: [1081]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120103]}}}}}, 0x6D: {l: {0x61: {l: {0x74: {l: {0x68: {l: {0x3B: {c: [567]}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120155]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119999]}}}}}, 0x65: {l: {0x72: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1112]}}}}}}}}}}}, 0x75: {l: {0x6B: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1108]}}}}}}}}}}},
	    0x4B: {l: {0x61: {l: {0x70: {l: {0x70: {l: {0x61: {l: {0x3B: {c: [922]}}}}}}}}}, 0x63: {l: {0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [310]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1050]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120078]}}}}}, 0x48: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1061]}}}}}}}, 0x4A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1036]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120130]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119974]}}}}}}}}},
	    0x6B: {l: {0x61: {l: {0x70: {l: {0x70: {l: {0x61: {l: {0x3B: {c: [954]}, 0x76: {l: {0x3B: {c: [1008]}}}}}}}}}}}, 0x63: {l: {0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [311]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1082]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120104]}}}}}, 0x67: {l: {0x72: {l: {0x65: {l: {0x65: {l: {0x6E: {l: {0x3B: {c: [312]}}}}}}}}}}}, 0x68: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1093]}}}}}}}, 0x6A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1116]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120156]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120000]}}}}}}}}},
	    0x6C: {l: {0x41: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8666]}}}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8656]}}}}}, 0x74: {l: {0x61: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [10523]}}}}}}}}}}}, 0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [314]}}}}}}}}}, 0x65: {l: {0x6D: {l: {0x70: {l: {0x74: {l: {0x79: {l: {0x76: {l: {0x3B: {c: [10676]}}}}}}}}}}}}}, 0x67: {l: {0x72: {l: {0x61: {l: {0x6E: {l: {0x3B: {c: [8466]}}}}}}}}}, 0x6D: {l: {0x62: {l: {0x64: {l: {0x61: {l: {0x3B: {c: [955]}}}}}}}}}, 0x6E: {l: {0x67: {l: {0x3B: {c: [10216]}, 0x64: {l: {0x3B: {c: [10641]}}}, 0x6C: {l: {0x65: {l: {0x3B: {c: [10216]}}}}}}}}}, 0x70: {l: {0x3B: {c: [10885]}}}, 0x71: {l: {0x75: {l: {0x6F: {l: {0x3B: {c: [171]}}, c: [171]}}}}}, 0x72: {l: {0x72: {l: {0x62: {l: {0x3B: {c: [8676]}, 0x66: {l: {0x73: {l: {0x3B: {c: [10527]}}}}}}}, 0x3B: {c: [8592]}, 0x66: {l: {0x73: {l: {0x3B: {c: [10525]}}}}}, 0x68: {l: {0x6B: {l: {0x3B: {c: [8617]}}}}}, 0x6C: {l: {0x70: {l: {0x3B: {c: [8619]}}}}}, 0x70: {l: {0x6C: {l: {0x3B: {c: [10553]}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [10611]}}}}}}}, 0x74: {l: {0x6C: {l: {0x3B: {c: [8610]}}}}}}}}}, 0x74: {l: {0x61: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [10521]}}}}}}}, 0x3B: {c: [10923]}, 0x65: {l: {0x3B: {c: [10925]}, 0x73: {l: {0x3B: {c: [10925, 65024]}}}}}}}}}, 0x62: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10508]}}}}}}}, 0x62: {l: {0x72: {l: {0x6B: {l: {0x3B: {c: [10098]}}}}}}}, 0x72: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [123]}}}, 0x6B: {l: {0x3B: {c: [91]}}}}}}}, 0x6B: {l: {0x65: {l: {0x3B: {c: [10635]}}}, 0x73: {l: {0x6C: {l: {0x64: {l: {0x3B: {c: [10639]}}}, 0x75: {l: {0x3B: {c: [10637]}}}}}}}}}}}}}, 0x42: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10510]}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [318]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [316]}}}}}}}, 0x69: {l: {0x6C: {l: {0x3B: {c: [8968]}}}}}}}, 0x75: {l: {0x62: {l: {0x3B: {c: [123]}}}}}, 0x79: {l: {0x3B: {c: [1083]}}}}}, 0x64: {l: {0x63: {l: {0x61: {l: {0x3B: {c: [10550]}}}}}, 0x71: {l: {0x75: {l: {0x6F: {l: {0x3B: {c: [8220]}, 0x72: {l: {0x3B: {c: [8222]}}}}}}}}}, 0x72: {l: {0x64: {l: {0x68: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10599]}}}}}}}}}, 0x75: {l: {0x73: {l: {0x68: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10571]}}}}}}}}}}}}}, 0x73: {l: {0x68: {l: {0x3B: {c: [8626]}}}}}}}, 0x65: {l: {0x3B: {c: [8804]}, 0x66: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8592]}, 0x74: {l: {0x61: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [8610]}}}}}}}}}}}}}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x70: {l: {0x6F: {l: {0x6F: {l: {0x6E: {l: {0x64: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x3B: {c: [8637]}}}}}}}}}, 0x75: {l: {0x70: {l: {0x3B: {c: [8636]}}}}}}}}}}}}}}}}}}}, 0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x73: {l: {0x3B: {c: [8647]}}}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8596]}, 0x73: {l: {0x3B: {c: [8646]}}}}}}}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x70: {l: {0x6F: {l: {0x6F: {l: {0x6E: {l: {0x73: {l: {0x3B: {c: [8651]}}}}}}}}}}}}}}}}}, 0x73: {l: {0x71: {l: {0x75: {l: {0x69: {l: {0x67: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8621]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x74: {l: {0x68: {l: {0x72: {l: {0x65: {l: {0x65: {l: {0x74: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8907]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x67: {l: {0x3B: {c: [8922]}}}, 0x71: {l: {0x3B: {c: [8804]}, 0x71: {l: {0x3B: {c: [8806]}}}, 0x73: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10877]}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x63: {l: {0x3B: {c: [10920]}}}}}, 0x3B: {c: [10877]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10879]}, 0x6F: {l: {0x3B: {c: [10881]}, 0x72: {l: {0x3B: {c: [10883]}}}}}}}}}}}, 0x67: {l: {0x3B: {c: [8922, 65024]}, 0x65: {l: {0x73: {l: {0x3B: {c: [10899]}}}}}}}, 0x73: {l: {0x61: {l: {0x70: {l: {0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [10885]}}}}}}}}}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8918]}}}}}}}, 0x65: {l: {0x71: {l: {0x67: {l: {0x74: {l: {0x72: {l: {0x3B: {c: [8922]}}}}}}}, 0x71: {l: {0x67: {l: {0x74: {l: {0x72: {l: {0x3B: {c: [10891]}}}}}}}}}}}}}, 0x67: {l: {0x74: {l: {0x72: {l: {0x3B: {c: [8822]}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8818]}}}}}}}}}}}}}, 0x45: {l: {0x3B: {c: [8806]}, 0x67: {l: {0x3B: {c: [10891]}}}}}, 0x66: {l: {0x69: {l: {0x73: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [10620]}}}}}}}}}, 0x6C: {l: {0x6F: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [8970]}}}}}}}}}, 0x72: {l: {0x3B: {c: [120105]}}}}}, 0x67: {l: {0x3B: {c: [8822]}, 0x45: {l: {0x3B: {c: [10897]}}}}}, 0x48: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10594]}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x64: {l: {0x3B: {c: [8637]}}}, 0x75: {l: {0x3B: {c: [8636]}, 0x6C: {l: {0x3B: {c: [10602]}}}}}}}}}, 0x62: {l: {0x6C: {l: {0x6B: {l: {0x3B: {c: [9604]}}}}}}}}}, 0x6A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1113]}}}}}}}, 0x6C: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8647]}}}}}}}, 0x3B: {c: [8810]}, 0x63: {l: {0x6F: {l: {0x72: {l: {0x6E: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8990]}}}}}}}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x64: {l: {0x3B: {c: [10603]}}}}}}}}}, 0x74: {l: {0x72: {l: {0x69: {l: {0x3B: {c: [9722]}}}}}}}}}, 0x6D: {l: {0x69: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [320]}}}}}}}}}, 0x6F: {l: {0x75: {l: {0x73: {l: {0x74: {l: {0x61: {l: {0x63: {l: {0x68: {l: {0x65: {l: {0x3B: {c: [9136]}}}}}}}}}, 0x3B: {c: [9136]}}}}}}}}}}}, 0x6E: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10889]}, 0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [10889]}}}}}}}}}}}}}, 0x65: {l: {0x3B: {c: [10887]}, 0x71: {l: {0x3B: {c: [10887]}, 0x71: {l: {0x3B: {c: [8808]}}}}}}}, 0x45: {l: {0x3B: {c: [8808]}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8934]}}}}}}}}}, 0x6F: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [10220]}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8701]}}}}}}}, 0x62: {l: {0x72: {l: {0x6B: {l: {0x3B: {c: [10214]}}}}}}}, 0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10229]}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10231]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x70: {l: {0x73: {l: {0x74: {l: {0x6F: {l: {0x3B: {c: [10236]}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10230]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x3B: {c: [8619]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [8620]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10629]}}}}}, 0x66: {l: {0x3B: {c: [120157]}}}, 0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10797]}}}}}}}}}, 0x74: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [10804]}}}}}}}}}}}, 0x77: {l: {0x61: {l: {0x73: {l: {0x74: {l: {0x3B: {c: [8727]}}}}}}}, 0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [95]}}}}}}}}}, 0x7A: {l: {0x3B: {c: [9674]}, 0x65: {l: {0x6E: {l: {0x67: {l: {0x65: {l: {0x3B: {c: [9674]}}}}}}}}}, 0x66: {l: {0x3B: {c: [10731]}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [40]}, 0x6C: {l: {0x74: {l: {0x3B: {c: [10643]}}}}}}}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8646]}}}}}}}, 0x63: {l: {0x6F: {l: {0x72: {l: {0x6E: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8991]}}}}}}}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8651]}, 0x64: {l: {0x3B: {c: [10605]}}}}}}}}}, 0x6D: {l: {0x3B: {c: [8206]}}}, 0x74: {l: {0x72: {l: {0x69: {l: {0x3B: {c: [8895]}}}}}}}}}, 0x73: {l: {0x61: {l: {0x71: {l: {0x75: {l: {0x6F: {l: {0x3B: {c: [8249]}}}}}}}}}, 0x63: {l: {0x72: {l: {0x3B: {c: [120001]}}}}}, 0x68: {l: {0x3B: {c: [8624]}}}, 0x69: {l: {0x6D: {l: {0x3B: {c: [8818]}, 0x65: {l: {0x3B: {c: [10893]}}}, 0x67: {l: {0x3B: {c: [10895]}}}}}}}, 0x71: {l: {0x62: {l: {0x3B: {c: [91]}}}, 0x75: {l: {0x6F: {l: {0x3B: {c: [8216]}, 0x72: {l: {0x3B: {c: [8218]}}}}}}}}}, 0x74: {l: {0x72: {l: {0x6F: {l: {0x6B: {l: {0x3B: {c: [322]}}}}}}}}}}}, 0x74: {l: {0x63: {l: {0x63: {l: {0x3B: {c: [10918]}}}, 0x69: {l: {0x72: {l: {0x3B: {c: [10873]}}}}}}}, 0x3B: {c: [60]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8918]}}}}}}}, 0x68: {l: {0x72: {l: {0x65: {l: {0x65: {l: {0x3B: {c: [8907]}}}}}}}}}, 0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8905]}}}}}}}}}, 0x6C: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10614]}}}}}}}}}, 0x71: {l: {0x75: {l: {0x65: {l: {0x73: {l: {0x74: {l: {0x3B: {c: [10875]}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x3B: {c: [9667]}, 0x65: {l: {0x3B: {c: [8884]}}}, 0x66: {l: {0x3B: {c: [9666]}}}}}, 0x50: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10646]}}}}}}}}}}, c: [60]}, 0x75: {l: {0x72: {l: {0x64: {l: {0x73: {l: {0x68: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10570]}}}}}}}}}}}, 0x75: {l: {0x68: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10598]}}}}}}}}}}}}}, 0x76: {l: {0x65: {l: {0x72: {l: {0x74: {l: {0x6E: {l: {0x65: {l: {0x71: {l: {0x71: {l: {0x3B: {c: [8808, 65024]}}}}}}}}}}}}}}}, 0x6E: {l: {0x45: {l: {0x3B: {c: [8808, 65024]}}}}}}}}},
	    0x4C: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [313]}}}}}}}}}, 0x6D: {l: {0x62: {l: {0x64: {l: {0x61: {l: {0x3B: {c: [923]}}}}}}}}}, 0x6E: {l: {0x67: {l: {0x3B: {c: [10218]}}}}}, 0x70: {l: {0x6C: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x74: {l: {0x72: {l: {0x66: {l: {0x3B: {c: [8466]}}}}}}}}}}}}}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8606]}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [317]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [315]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1051]}}}}}, 0x65: {l: {0x66: {l: {0x74: {l: {0x41: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x42: {l: {0x72: {l: {0x61: {l: {0x63: {l: {0x6B: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [10216]}}}}}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8676]}}}}}}}, 0x3B: {c: [8592]}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8646]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8656]}}}}}}}}}}}, 0x43: {l: {0x65: {l: {0x69: {l: {0x6C: {l: {0x69: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [8968]}}}}}}}}}}}}}}}, 0x44: {l: {0x6F: {l: {0x75: {l: {0x62: {l: {0x6C: {l: {0x65: {l: {0x42: {l: {0x72: {l: {0x61: {l: {0x63: {l: {0x6B: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [10214]}}}}}}}}}}}}}}}}}}}}}}}, 0x77: {l: {0x6E: {l: {0x54: {l: {0x65: {l: {0x65: {l: {0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10593]}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10585]}}}}}}}, 0x3B: {c: [8643]}}}}}}}}}}}}}}}}}}}}}, 0x46: {l: {0x6C: {l: {0x6F: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [8970]}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8596]}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10574]}}}}}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8660]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x65: {l: {0x65: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8612]}}}}}}}}}}}, 0x3B: {c: [8867]}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10586]}}}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10703]}}}}}}}, 0x3B: {c: [8882]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8884]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x55: {l: {0x70: {l: {0x44: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10577]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x65: {l: {0x65: {l: {0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10592]}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10584]}}}}}}}, 0x3B: {c: [8639]}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10578]}}}}}}}, 0x3B: {c: [8636]}}}}}}}}}}}}}}}}}, 0x73: {l: {0x73: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x47: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8922]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x46: {l: {0x75: {l: {0x6C: {l: {0x6C: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8806]}}}}}}}}}}}}}}}}}}}, 0x47: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8822]}}}}}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [10913]}}}}}}}}}, 0x53: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [10877]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8818]}}}}}}}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120079]}}}}}, 0x4A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1033]}}}}}}}, 0x6C: {l: {0x3B: {c: [8920]}, 0x65: {l: {0x66: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8666]}}}}}}}}}}}}}}}}}}}, 0x6D: {l: {0x69: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [319]}}}}}}}}}}}, 0x6F: {l: {0x6E: {l: {0x67: {l: {0x4C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10229]}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10231]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10232]}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10234]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10230]}}}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [10233]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120131]}}}}}, 0x77: {l: {0x65: {l: {0x72: {l: {0x4C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8601]}}}}}}}}}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8600]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8466]}}}}}, 0x68: {l: {0x3B: {c: [8624]}}}, 0x74: {l: {0x72: {l: {0x6F: {l: {0x6B: {l: {0x3B: {c: [321]}}}}}}}}}}}, 0x54: {l: {0x3B: {c: [60]}}, c: [60]}, 0x74: {l: {0x3B: {c: [8810]}}}}},
	    0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [175]}}, c: [175]}}}, 0x6C: {l: {0x65: {l: {0x3B: {c: [9794]}}}, 0x74: {l: {0x3B: {c: [10016]}, 0x65: {l: {0x73: {l: {0x65: {l: {0x3B: {c: [10016]}}}}}}}}}}}, 0x70: {l: {0x3B: {c: [8614]}, 0x73: {l: {0x74: {l: {0x6F: {l: {0x3B: {c: [8614]}, 0x64: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x3B: {c: [8615]}}}}}}}}}, 0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x3B: {c: [8612]}}}}}}}}}, 0x75: {l: {0x70: {l: {0x3B: {c: [8613]}}}}}}}}}}}}}, 0x72: {l: {0x6B: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [9646]}}}}}}}}}}}, 0x63: {l: {0x6F: {l: {0x6D: {l: {0x6D: {l: {0x61: {l: {0x3B: {c: [10793]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1084]}}}}}, 0x64: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8212]}}}}}}}}}, 0x44: {l: {0x44: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8762]}}}}}}}}}, 0x65: {l: {0x61: {l: {0x73: {l: {0x75: {l: {0x72: {l: {0x65: {l: {0x64: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x3B: {c: [8737]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120106]}}}}}, 0x68: {l: {0x6F: {l: {0x3B: {c: [8487]}}}}}, 0x69: {l: {0x63: {l: {0x72: {l: {0x6F: {l: {0x3B: {c: [181]}}, c: [181]}}}}}, 0x64: {l: {0x61: {l: {0x73: {l: {0x74: {l: {0x3B: {c: [42]}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x3B: {c: [10992]}}}}}}}, 0x3B: {c: [8739]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [183]}}, c: [183]}}}}}}}, 0x6E: {l: {0x75: {l: {0x73: {l: {0x62: {l: {0x3B: {c: [8863]}}}, 0x3B: {c: [8722]}, 0x64: {l: {0x3B: {c: [8760]}, 0x75: {l: {0x3B: {c: [10794]}}}}}}}}}}}}}, 0x6C: {l: {0x63: {l: {0x70: {l: {0x3B: {c: [10971]}}}}}, 0x64: {l: {0x72: {l: {0x3B: {c: [8230]}}}}}}}, 0x6E: {l: {0x70: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8723]}}}}}}}}}}}, 0x6F: {l: {0x64: {l: {0x65: {l: {0x6C: {l: {0x73: {l: {0x3B: {c: [8871]}}}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120158]}}}}}}}, 0x70: {l: {0x3B: {c: [8723]}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120002]}}}}}, 0x74: {l: {0x70: {l: {0x6F: {l: {0x73: {l: {0x3B: {c: [8766]}}}}}}}}}}}, 0x75: {l: {0x3B: {c: [956]}, 0x6C: {l: {0x74: {l: {0x69: {l: {0x6D: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [8888]}}}}}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [8888]}}}}}}}}}}},
	    0x4D: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10501]}}}}}, 0x63: {l: {0x79: {l: {0x3B: {c: [1052]}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x75: {l: {0x6D: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8287]}}}}}}}}}}}}}}}}}}}, 0x6C: {l: {0x6C: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x72: {l: {0x66: {l: {0x3B: {c: [8499]}}}}}}}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120080]}}}}}, 0x69: {l: {0x6E: {l: {0x75: {l: {0x73: {l: {0x50: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8723]}}}}}}}}}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120132]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8499]}}}}}}}, 0x75: {l: {0x3B: {c: [924]}}}}},
	    0x6E: {l: {0x61: {l: {0x62: {l: {0x6C: {l: {0x61: {l: {0x3B: {c: [8711]}}}}}}}, 0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [324]}}}}}}}}}, 0x6E: {l: {0x67: {l: {0x3B: {c: [8736, 8402]}}}}}, 0x70: {l: {0x3B: {c: [8777]}, 0x45: {l: {0x3B: {c: [10864, 824]}}}, 0x69: {l: {0x64: {l: {0x3B: {c: [8779, 824]}}}}}, 0x6F: {l: {0x73: {l: {0x3B: {c: [329]}}}}}, 0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [8777]}}}}}}}}}}}, 0x74: {l: {0x75: {l: {0x72: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [9838]}, 0x73: {l: {0x3B: {c: [8469]}}}}}}}, 0x3B: {c: [9838]}}}}}}}}}, 0x62: {l: {0x73: {l: {0x70: {l: {0x3B: {c: [160]}}, c: [160]}}}, 0x75: {l: {0x6D: {l: {0x70: {l: {0x3B: {c: [8782, 824]}, 0x65: {l: {0x3B: {c: [8783, 824]}}}}}}}}}}}, 0x63: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10819]}}}, 0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [328]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [326]}}}}}}}}}, 0x6F: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [8775]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10861, 824]}}}}}}}}}}}}}, 0x75: {l: {0x70: {l: {0x3B: {c: [10818]}}}}}, 0x79: {l: {0x3B: {c: [1085]}}}}}, 0x64: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8211]}}}}}}}}}, 0x65: {l: {0x61: {l: {0x72: {l: {0x68: {l: {0x6B: {l: {0x3B: {c: [10532]}}}}}, 0x72: {l: {0x3B: {c: [8599]}, 0x6F: {l: {0x77: {l: {0x3B: {c: [8599]}}}}}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8663]}}}}}}}, 0x3B: {c: [8800]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8784, 824]}}}}}}}, 0x71: {l: {0x75: {l: {0x69: {l: {0x76: {l: {0x3B: {c: [8802]}}}}}}}}}, 0x73: {l: {0x65: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10536]}}}}}}}, 0x69: {l: {0x6D: {l: {0x3B: {c: [8770, 824]}}}}}}}, 0x78: {l: {0x69: {l: {0x73: {l: {0x74: {l: {0x3B: {c: [8708]}, 0x73: {l: {0x3B: {c: [8708]}}}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120107]}}}}}, 0x67: {l: {0x45: {l: {0x3B: {c: [8807, 824]}}}, 0x65: {l: {0x3B: {c: [8817]}, 0x71: {l: {0x3B: {c: [8817]}, 0x71: {l: {0x3B: {c: [8807, 824]}}}, 0x73: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10878, 824]}}}}}}}}}}}}}, 0x73: {l: {0x3B: {c: [10878, 824]}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8821]}}}}}}}, 0x74: {l: {0x3B: {c: [8815]}, 0x72: {l: {0x3B: {c: [8815]}}}}}}}, 0x47: {l: {0x67: {l: {0x3B: {c: [8921, 824]}}}, 0x74: {l: {0x3B: {c: [8811, 8402]}, 0x76: {l: {0x3B: {c: [8811, 824]}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8622]}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8654]}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10994]}}}}}}}}}, 0x69: {l: {0x3B: {c: [8715]}, 0x73: {l: {0x3B: {c: [8956]}, 0x64: {l: {0x3B: {c: [8954]}}}}}, 0x76: {l: {0x3B: {c: [8715]}}}}}, 0x6A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1114]}}}}}}}, 0x6C: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8602]}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8653]}}}}}}}, 0x64: {l: {0x72: {l: {0x3B: {c: [8229]}}}}}, 0x45: {l: {0x3B: {c: [8806, 824]}}}, 0x65: {l: {0x3B: {c: [8816]}, 0x66: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8602]}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8622]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x71: {l: {0x3B: {c: [8816]}, 0x71: {l: {0x3B: {c: [8806, 824]}}}, 0x73: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10877, 824]}}}}}}}}}}}}}, 0x73: {l: {0x3B: {c: [10877, 824]}, 0x73: {l: {0x3B: {c: [8814]}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8820]}}}}}}}, 0x74: {l: {0x3B: {c: [8814]}, 0x72: {l: {0x69: {l: {0x3B: {c: [8938]}, 0x65: {l: {0x3B: {c: [8940]}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8653]}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8654]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x6C: {l: {0x3B: {c: [8920, 824]}}}, 0x74: {l: {0x3B: {c: [8810, 8402]}, 0x76: {l: {0x3B: {c: [8810, 824]}}}}}}}, 0x6D: {l: {0x69: {l: {0x64: {l: {0x3B: {c: [8740]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120159]}}}}}, 0x74: {l: {0x3B: {c: [172]}, 0x69: {l: {0x6E: {l: {0x3B: {c: [8713]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8949, 824]}}}}}}}, 0x45: {l: {0x3B: {c: [8953, 824]}}}, 0x76: {l: {0x61: {l: {0x3B: {c: [8713]}}}, 0x62: {l: {0x3B: {c: [8951]}}}, 0x63: {l: {0x3B: {c: [8950]}}}}}}}}}, 0x6E: {l: {0x69: {l: {0x3B: {c: [8716]}, 0x76: {l: {0x61: {l: {0x3B: {c: [8716]}}}, 0x62: {l: {0x3B: {c: [8958]}}}, 0x63: {l: {0x3B: {c: [8957]}}}}}}}}}}, c: [172]}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x65: {l: {0x6C: {l: {0x3B: {c: [8742]}}}}}}}}}}}, 0x3B: {c: [8742]}, 0x73: {l: {0x6C: {l: {0x3B: {c: [11005, 8421]}}}}}, 0x74: {l: {0x3B: {c: [8706, 824]}}}}}}}, 0x6F: {l: {0x6C: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10772]}}}}}}}}}}}, 0x72: {l: {0x3B: {c: [8832]}, 0x63: {l: {0x75: {l: {0x65: {l: {0x3B: {c: [8928]}}}}}}}, 0x65: {l: {0x63: {l: {0x3B: {c: [8832]}, 0x65: {l: {0x71: {l: {0x3B: {c: [10927, 824]}}}}}}}, 0x3B: {c: [10927, 824]}}}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [10547, 824]}}}, 0x3B: {c: [8603]}, 0x77: {l: {0x3B: {c: [8605, 824]}}}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8655]}}}}}}}, 0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8603]}}}}}}}}}}}}}}}}}}}, 0x74: {l: {0x72: {l: {0x69: {l: {0x3B: {c: [8939]}, 0x65: {l: {0x3B: {c: [8941]}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8655]}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x3B: {c: [8833]}, 0x63: {l: {0x75: {l: {0x65: {l: {0x3B: {c: [8929]}}}}}}}, 0x65: {l: {0x3B: {c: [10928, 824]}}}, 0x72: {l: {0x3B: {c: [120003]}}}}}, 0x68: {l: {0x6F: {l: {0x72: {l: {0x74: {l: {0x6D: {l: {0x69: {l: {0x64: {l: {0x3B: {c: [8740]}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x65: {l: {0x6C: {l: {0x3B: {c: [8742]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x69: {l: {0x6D: {l: {0x3B: {c: [8769]}, 0x65: {l: {0x3B: {c: [8772]}, 0x71: {l: {0x3B: {c: [8772]}}}}}}}}}, 0x6D: {l: {0x69: {l: {0x64: {l: {0x3B: {c: [8740]}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8742]}}}}}}}, 0x71: {l: {0x73: {l: {0x75: {l: {0x62: {l: {0x65: {l: {0x3B: {c: [8930]}}}}}, 0x70: {l: {0x65: {l: {0x3B: {c: [8931]}}}}}}}}}}}, 0x75: {l: {0x62: {l: {0x3B: {c: [8836]}, 0x45: {l: {0x3B: {c: [10949, 824]}}}, 0x65: {l: {0x3B: {c: [8840]}}}, 0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8834, 8402]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8840]}, 0x71: {l: {0x3B: {c: [10949, 824]}}}}}}}}}}}}}}}, 0x63: {l: {0x63: {l: {0x3B: {c: [8833]}, 0x65: {l: {0x71: {l: {0x3B: {c: [10928, 824]}}}}}}}}}, 0x70: {l: {0x3B: {c: [8837]}, 0x45: {l: {0x3B: {c: [10950, 824]}}}, 0x65: {l: {0x3B: {c: [8841]}}}, 0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8835, 8402]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8841]}, 0x71: {l: {0x3B: {c: [10950, 824]}}}}}}}}}}}}}}}}}}}, 0x74: {l: {0x67: {l: {0x6C: {l: {0x3B: {c: [8825]}}}}}, 0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [241]}}, c: [241]}}}}}}}, 0x6C: {l: {0x67: {l: {0x3B: {c: [8824]}}}}}, 0x72: {l: {0x69: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x3B: {c: [8938]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8940]}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [8939]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8941]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x75: {l: {0x3B: {c: [957]}, 0x6D: {l: {0x3B: {c: [35]}, 0x65: {l: {0x72: {l: {0x6F: {l: {0x3B: {c: [8470]}}}}}}}, 0x73: {l: {0x70: {l: {0x3B: {c: [8199]}}}}}}}}}, 0x76: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [8781, 8402]}}}}}, 0x64: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8876]}}}}}}}}}, 0x44: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8877]}}}}}}}}}, 0x67: {l: {0x65: {l: {0x3B: {c: [8805, 8402]}}}, 0x74: {l: {0x3B: {c: [62, 8402]}}}}}, 0x48: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10500]}}}}}}}}}, 0x69: {l: {0x6E: {l: {0x66: {l: {0x69: {l: {0x6E: {l: {0x3B: {c: [10718]}}}}}}}}}}}, 0x6C: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10498]}}}}}}}, 0x65: {l: {0x3B: {c: [8804, 8402]}}}, 0x74: {l: {0x3B: {c: [60, 8402]}, 0x72: {l: {0x69: {l: {0x65: {l: {0x3B: {c: [8884, 8402]}}}}}}}}}}}, 0x72: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10499]}}}}}}}, 0x74: {l: {0x72: {l: {0x69: {l: {0x65: {l: {0x3B: {c: [8885, 8402]}}}}}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8764, 8402]}}}}}}}}}, 0x56: {l: {0x64: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8878]}}}}}}}}}, 0x44: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8879]}}}}}}}}}}}, 0x77: {l: {0x61: {l: {0x72: {l: {0x68: {l: {0x6B: {l: {0x3B: {c: [10531]}}}}}, 0x72: {l: {0x3B: {c: [8598]}, 0x6F: {l: {0x77: {l: {0x3B: {c: [8598]}}}}}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8662]}}}}}}}, 0x6E: {l: {0x65: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10535]}}}}}}}}}}}}},
	    0x4E: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [323]}}}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [327]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [325]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1053]}}}}}, 0x65: {l: {0x67: {l: {0x61: {l: {0x74: {l: {0x69: {l: {0x76: {l: {0x65: {l: {0x4D: {l: {0x65: {l: {0x64: {l: {0x69: {l: {0x75: {l: {0x6D: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8203]}}}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x68: {l: {0x69: {l: {0x63: {l: {0x6B: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8203]}}}}}}}}}}}}}}}, 0x6E: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8203]}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x72: {l: {0x79: {l: {0x54: {l: {0x68: {l: {0x69: {l: {0x6E: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8203]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x74: {l: {0x65: {l: {0x64: {l: {0x47: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x47: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8811]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x4C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [8810]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x77: {l: {0x4C: {l: {0x69: {l: {0x6E: {l: {0x65: {l: {0x3B: {c: [10]}}}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120081]}}}}}, 0x4A: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1034]}}}}}}}, 0x6F: {l: {0x42: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x6B: {l: {0x3B: {c: [8288]}}}}}}}}}}}, 0x6E: {l: {0x42: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x6B: {l: {0x69: {l: {0x6E: {l: {0x67: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [160]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [8469]}}}}}, 0x74: {l: {0x3B: {c: [10988]}, 0x43: {l: {0x6F: {l: {0x6E: {l: {0x67: {l: {0x72: {l: {0x75: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8802]}}}}}}}}}}}}}}}}}, 0x75: {l: {0x70: {l: {0x43: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [8813]}}}}}}}}}}}}}, 0x44: {l: {0x6F: {l: {0x75: {l: {0x62: {l: {0x6C: {l: {0x65: {l: {0x56: {l: {0x65: {l: {0x72: {l: {0x74: {l: {0x69: {l: {0x63: {l: {0x61: {l: {0x6C: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8742]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x45: {l: {0x6C: {l: {0x65: {l: {0x6D: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8713]}}}}}}}}}}}}}, 0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8800]}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8770, 824]}}}}}}}}}}}}}}}}}}}, 0x78: {l: {0x69: {l: {0x73: {l: {0x74: {l: {0x73: {l: {0x3B: {c: [8708]}}}}}}}}}}}}}, 0x47: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8815]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8817]}}}}}}}}}}}, 0x46: {l: {0x75: {l: {0x6C: {l: {0x6C: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8807, 824]}}}}}}}}}}}}}}}}}}}, 0x47: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8811, 824]}}}}}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [8825]}}}}}}}}}, 0x53: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [10878, 824]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8821]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x48: {l: {0x75: {l: {0x6D: {l: {0x70: {l: {0x44: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x48: {l: {0x75: {l: {0x6D: {l: {0x70: {l: {0x3B: {c: [8782, 824]}}}}}}}}}}}}}}}}}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8783, 824]}}}}}}}}}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x54: {l: {0x72: {l: {0x69: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10703, 824]}}}}}}}, 0x3B: {c: [8938]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8940]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x73: {l: {0x3B: {c: [8814]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8816]}}}}}}}}}}}, 0x47: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [8824]}}}}}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [8810, 824]}}}}}}}}}, 0x53: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [10877, 824]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8820]}}}}}}}}}}}}}}}}}}}, 0x4E: {l: {0x65: {l: {0x73: {l: {0x74: {l: {0x65: {l: {0x64: {l: {0x47: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x47: {l: {0x72: {l: {0x65: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x3B: {c: [10914, 824]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x4C: {l: {0x65: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [10913, 824]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x50: {l: {0x72: {l: {0x65: {l: {0x63: {l: {0x65: {l: {0x64: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8832]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [10927, 824]}}}}}}}}}}}, 0x53: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8928]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x52: {l: {0x65: {l: {0x76: {l: {0x65: {l: {0x72: {l: {0x73: {l: {0x65: {l: {0x45: {l: {0x6C: {l: {0x65: {l: {0x6D: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8716]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x54: {l: {0x72: {l: {0x69: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10704, 824]}}}}}}}, 0x3B: {c: [8939]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8941]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x53: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x53: {l: {0x75: {l: {0x62: {l: {0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8847, 824]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8930]}}}}}}}}}}}}}}}}}}}, 0x70: {l: {0x65: {l: {0x72: {l: {0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8848, 824]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8931]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x75: {l: {0x62: {l: {0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8834, 8402]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8840]}}}}}}}}}}}}}}}}}}}, 0x63: {l: {0x63: {l: {0x65: {l: {0x65: {l: {0x64: {l: {0x73: {l: {0x3B: {c: [8833]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [10928, 824]}}}}}}}}}}}, 0x53: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8929]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8831, 824]}}}}}}}}}}}}}}}}}}}}}}}, 0x70: {l: {0x65: {l: {0x72: {l: {0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8835, 8402]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8841]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8769]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8772]}}}}}}}}}}}, 0x46: {l: {0x75: {l: {0x6C: {l: {0x6C: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8775]}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8777]}}}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x72: {l: {0x74: {l: {0x69: {l: {0x63: {l: {0x61: {l: {0x6C: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8740]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119977]}}}}}}}, 0x74: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [209]}}, c: [209]}}}}}}}}}, 0x75: {l: {0x3B: {c: [925]}}}}},
	    0x4F: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [211]}}, c: [211]}}}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [212]}}, c: [212]}}}}}, 0x79: {l: {0x3B: {c: [1054]}}}}}, 0x64: {l: {0x62: {l: {0x6C: {l: {0x61: {l: {0x63: {l: {0x3B: {c: [336]}}}}}}}}}}}, 0x45: {l: {0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [338]}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120082]}}}}}, 0x67: {l: {0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [210]}}, c: [210]}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [332]}}}}}}}, 0x65: {l: {0x67: {l: {0x61: {l: {0x3B: {c: [937]}}}}}}}, 0x69: {l: {0x63: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [927]}}}}}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120134]}}}}}}}, 0x70: {l: {0x65: {l: {0x6E: {l: {0x43: {l: {0x75: {l: {0x72: {l: {0x6C: {l: {0x79: {l: {0x44: {l: {0x6F: {l: {0x75: {l: {0x62: {l: {0x6C: {l: {0x65: {l: {0x51: {l: {0x75: {l: {0x6F: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [8220]}}}}}}}}}}}}}}}}}}}}}}}, 0x51: {l: {0x75: {l: {0x6F: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [8216]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x3B: {c: [10836]}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119978]}}}}}, 0x6C: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [216]}}, c: [216]}}}}}}}}}, 0x74: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [213]}}, c: [213]}}}}}, 0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [10807]}}}}}}}}}}}, 0x75: {l: {0x6D: {l: {0x6C: {l: {0x3B: {c: [214]}}, c: [214]}}}}}, 0x76: {l: {0x65: {l: {0x72: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8254]}}}}}, 0x72: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [9182]}}}, 0x6B: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [9140]}}}}}}}}}}}}}}}, 0x50: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x68: {l: {0x65: {l: {0x73: {l: {0x69: {l: {0x73: {l: {0x3B: {c: [9180]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},
	    0x6F: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [243]}}, c: [243]}}}}}}}, 0x73: {l: {0x74: {l: {0x3B: {c: [8859]}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [244]}}, c: [244]}, 0x3B: {c: [8858]}}}}}, 0x79: {l: {0x3B: {c: [1086]}}}}}, 0x64: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8861]}}}}}}}, 0x62: {l: {0x6C: {l: {0x61: {l: {0x63: {l: {0x3B: {c: [337]}}}}}}}}}, 0x69: {l: {0x76: {l: {0x3B: {c: [10808]}}}}}, 0x6F: {l: {0x74: {l: {0x3B: {c: [8857]}}}}}, 0x73: {l: {0x6F: {l: {0x6C: {l: {0x64: {l: {0x3B: {c: [10684]}}}}}}}}}}}, 0x65: {l: {0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [339]}}}}}}}}}, 0x66: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x3B: {c: [10687]}}}}}}}, 0x72: {l: {0x3B: {c: [120108]}}}}}, 0x67: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [731]}}}}}, 0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [242]}}, c: [242]}}}}}}}, 0x74: {l: {0x3B: {c: [10689]}}}}}, 0x68: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10677]}}}}}}}, 0x6D: {l: {0x3B: {c: [937]}}}}}, 0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8750]}}}}}}}, 0x6C: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8634]}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x3B: {c: [10686]}}}}}, 0x72: {l: {0x6F: {l: {0x73: {l: {0x73: {l: {0x3B: {c: [10683]}}}}}}}}}}}, 0x69: {l: {0x6E: {l: {0x65: {l: {0x3B: {c: [8254]}}}}}}}, 0x74: {l: {0x3B: {c: [10688]}}}}}, 0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [333]}}}}}}}, 0x65: {l: {0x67: {l: {0x61: {l: {0x3B: {c: [969]}}}}}}}, 0x69: {l: {0x63: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [959]}}}}}}}}}, 0x64: {l: {0x3B: {c: [10678]}}}, 0x6E: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8854]}}}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120160]}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10679]}}}}}, 0x65: {l: {0x72: {l: {0x70: {l: {0x3B: {c: [10681]}}}}}}}, 0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8853]}}}}}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8635]}}}}}}}, 0x3B: {c: [8744]}, 0x64: {l: {0x3B: {c: [10845]}, 0x65: {l: {0x72: {l: {0x3B: {c: [8500]}, 0x6F: {l: {0x66: {l: {0x3B: {c: [8500]}}}}}}}}}, 0x66: {l: {0x3B: {c: [170]}}, c: [170]}, 0x6D: {l: {0x3B: {c: [186]}}, c: [186]}}}, 0x69: {l: {0x67: {l: {0x6F: {l: {0x66: {l: {0x3B: {c: [8886]}}}}}}}}}, 0x6F: {l: {0x72: {l: {0x3B: {c: [10838]}}}}}, 0x73: {l: {0x6C: {l: {0x6F: {l: {0x70: {l: {0x65: {l: {0x3B: {c: [10839]}}}}}}}}}}}, 0x76: {l: {0x3B: {c: [10843]}}}}}, 0x53: {l: {0x3B: {c: [9416]}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8500]}}}}}, 0x6C: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [248]}}, c: [248]}}}}}}}, 0x6F: {l: {0x6C: {l: {0x3B: {c: [8856]}}}}}}}, 0x74: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [245]}}, c: [245]}}}}}, 0x6D: {l: {0x65: {l: {0x73: {l: {0x61: {l: {0x73: {l: {0x3B: {c: [10806]}}}}}, 0x3B: {c: [8855]}}}}}}}}}}}, 0x75: {l: {0x6D: {l: {0x6C: {l: {0x3B: {c: [246]}}, c: [246]}}}}}, 0x76: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [9021]}}}}}}}}}}},
	    0x70: {l: {0x61: {l: {0x72: {l: {0x61: {l: {0x3B: {c: [182]}, 0x6C: {l: {0x6C: {l: {0x65: {l: {0x6C: {l: {0x3B: {c: [8741]}}}}}}}}}}, c: [182]}, 0x3B: {c: [8741]}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [10995]}}}}}, 0x6C: {l: {0x3B: {c: [11005]}}}}}, 0x74: {l: {0x3B: {c: [8706]}}}}}}}, 0x63: {l: {0x79: {l: {0x3B: {c: [1087]}}}}}, 0x65: {l: {0x72: {l: {0x63: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [37]}}}}}}}, 0x69: {l: {0x6F: {l: {0x64: {l: {0x3B: {c: [46]}}}}}}}, 0x6D: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [8240]}}}}}}}, 0x70: {l: {0x3B: {c: [8869]}}}, 0x74: {l: {0x65: {l: {0x6E: {l: {0x6B: {l: {0x3B: {c: [8241]}}}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120109]}}}}}, 0x68: {l: {0x69: {l: {0x3B: {c: [966]}, 0x76: {l: {0x3B: {c: [981]}}}}}, 0x6D: {l: {0x6D: {l: {0x61: {l: {0x74: {l: {0x3B: {c: [8499]}}}}}}}}}, 0x6F: {l: {0x6E: {l: {0x65: {l: {0x3B: {c: [9742]}}}}}}}}}, 0x69: {l: {0x3B: {c: [960]}, 0x74: {l: {0x63: {l: {0x68: {l: {0x66: {l: {0x6F: {l: {0x72: {l: {0x6B: {l: {0x3B: {c: [8916]}}}}}}}}}}}}}}}, 0x76: {l: {0x3B: {c: [982]}}}}}, 0x6C: {l: {0x61: {l: {0x6E: {l: {0x63: {l: {0x6B: {l: {0x3B: {c: [8463]}, 0x68: {l: {0x3B: {c: [8462]}}}}}}}, 0x6B: {l: {0x76: {l: {0x3B: {c: [8463]}}}}}}}}}, 0x75: {l: {0x73: {l: {0x61: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x3B: {c: [10787]}}}}}}}}}, 0x62: {l: {0x3B: {c: [8862]}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x3B: {c: [10786]}}}}}}}, 0x3B: {c: [43]}, 0x64: {l: {0x6F: {l: {0x3B: {c: [8724]}}}, 0x75: {l: {0x3B: {c: [10789]}}}}}, 0x65: {l: {0x3B: {c: [10866]}}}, 0x6D: {l: {0x6E: {l: {0x3B: {c: [177]}}, c: [177]}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [10790]}}}}}}}, 0x74: {l: {0x77: {l: {0x6F: {l: {0x3B: {c: [10791]}}}}}}}}}}}}}, 0x6D: {l: {0x3B: {c: [177]}}}, 0x6F: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10773]}}}}}}}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120161]}}}}}, 0x75: {l: {0x6E: {l: {0x64: {l: {0x3B: {c: [163]}}, c: [163]}}}}}}}, 0x72: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10935]}}}}}, 0x3B: {c: [8826]}, 0x63: {l: {0x75: {l: {0x65: {l: {0x3B: {c: [8828]}}}}}}}, 0x65: {l: {0x63: {l: {0x61: {l: {0x70: {l: {0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [10935]}}}}}}}}}}}}}, 0x3B: {c: [8826]}, 0x63: {l: {0x75: {l: {0x72: {l: {0x6C: {l: {0x79: {l: {0x65: {l: {0x71: {l: {0x3B: {c: [8828]}}}}}}}}}}}}}}}, 0x65: {l: {0x71: {l: {0x3B: {c: [10927]}}}}}, 0x6E: {l: {0x61: {l: {0x70: {l: {0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [10937]}}}}}}}}}}}}}, 0x65: {l: {0x71: {l: {0x71: {l: {0x3B: {c: [10933]}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8936]}}}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8830]}}}}}}}}}, 0x3B: {c: [10927]}}}, 0x45: {l: {0x3B: {c: [10931]}}}, 0x69: {l: {0x6D: {l: {0x65: {l: {0x3B: {c: [8242]}, 0x73: {l: {0x3B: {c: [8473]}}}}}}}}}, 0x6E: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10937]}}}}}, 0x45: {l: {0x3B: {c: [10933]}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8936]}}}}}}}}}, 0x6F: {l: {0x64: {l: {0x3B: {c: [8719]}}}, 0x66: {l: {0x61: {l: {0x6C: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [9006]}}}}}}}}}, 0x6C: {l: {0x69: {l: {0x6E: {l: {0x65: {l: {0x3B: {c: [8978]}}}}}}}}}, 0x73: {l: {0x75: {l: {0x72: {l: {0x66: {l: {0x3B: {c: [8979]}}}}}}}}}}}, 0x70: {l: {0x3B: {c: [8733]}, 0x74: {l: {0x6F: {l: {0x3B: {c: [8733]}}}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8830]}}}}}}}, 0x75: {l: {0x72: {l: {0x65: {l: {0x6C: {l: {0x3B: {c: [8880]}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120005]}}}}}, 0x69: {l: {0x3B: {c: [968]}}}}}, 0x75: {l: {0x6E: {l: {0x63: {l: {0x73: {l: {0x70: {l: {0x3B: {c: [8200]}}}}}}}}}}}}},
	    0x50: {l: {0x61: {l: {0x72: {l: {0x74: {l: {0x69: {l: {0x61: {l: {0x6C: {l: {0x44: {l: {0x3B: {c: [8706]}}}}}}}}}}}}}}}, 0x63: {l: {0x79: {l: {0x3B: {c: [1055]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120083]}}}}}, 0x68: {l: {0x69: {l: {0x3B: {c: [934]}}}}}, 0x69: {l: {0x3B: {c: [928]}}}, 0x6C: {l: {0x75: {l: {0x73: {l: {0x4D: {l: {0x69: {l: {0x6E: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [177]}}}}}}}}}}}}}}}}}, 0x6F: {l: {0x69: {l: {0x6E: {l: {0x63: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x70: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x65: {l: {0x3B: {c: [8460]}}}}}}}}}}}}}}}}}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [8473]}}}}}}}, 0x72: {l: {0x3B: {c: [10939]}, 0x65: {l: {0x63: {l: {0x65: {l: {0x64: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8826]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [10927]}}}}}}}}}}}, 0x53: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8828]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8830]}}}}}}}}}}}}}}}}}}}}}}}, 0x69: {l: {0x6D: {l: {0x65: {l: {0x3B: {c: [8243]}}}}}}}, 0x6F: {l: {0x64: {l: {0x75: {l: {0x63: {l: {0x74: {l: {0x3B: {c: [8719]}}}}}}}}}, 0x70: {l: {0x6F: {l: {0x72: {l: {0x74: {l: {0x69: {l: {0x6F: {l: {0x6E: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8733]}}}}}, 0x3B: {c: [8759]}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119979]}}}}}, 0x69: {l: {0x3B: {c: [936]}}}}}}},
	    0x51: {l: {0x66: {l: {0x72: {l: {0x3B: {c: [120084]}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [8474]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119980]}}}}}}}, 0x55: {l: {0x4F: {l: {0x54: {l: {0x3B: {c: [34]}}, c: [34]}}}}}}},
	    0x71: {l: {0x66: {l: {0x72: {l: {0x3B: {c: [120110]}}}}}, 0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10764]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120162]}}}}}}}, 0x70: {l: {0x72: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x3B: {c: [8279]}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120006]}}}}}}}, 0x75: {l: {0x61: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x6E: {l: {0x69: {l: {0x6F: {l: {0x6E: {l: {0x73: {l: {0x3B: {c: [8461]}}}}}}}}}}}}}}}, 0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10774]}}}}}}}}}}}, 0x65: {l: {0x73: {l: {0x74: {l: {0x3B: {c: [63]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8799]}}}}}}}}}}}, 0x6F: {l: {0x74: {l: {0x3B: {c: [34]}}, c: [34]}}}}}}},
	    0x72: {l: {0x41: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8667]}}}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8658]}}}}}, 0x74: {l: {0x61: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [10524]}}}}}}}}}}}, 0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8765, 817]}}}, 0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [341]}}}}}}}}}, 0x64: {l: {0x69: {l: {0x63: {l: {0x3B: {c: [8730]}}}}}}}, 0x65: {l: {0x6D: {l: {0x70: {l: {0x74: {l: {0x79: {l: {0x76: {l: {0x3B: {c: [10675]}}}}}}}}}}}}}, 0x6E: {l: {0x67: {l: {0x3B: {c: [10217]}, 0x64: {l: {0x3B: {c: [10642]}}}, 0x65: {l: {0x3B: {c: [10661]}}}, 0x6C: {l: {0x65: {l: {0x3B: {c: [10217]}}}}}}}}}, 0x71: {l: {0x75: {l: {0x6F: {l: {0x3B: {c: [187]}}, c: [187]}}}}}, 0x72: {l: {0x72: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10613]}}}}}, 0x62: {l: {0x3B: {c: [8677]}, 0x66: {l: {0x73: {l: {0x3B: {c: [10528]}}}}}}}, 0x63: {l: {0x3B: {c: [10547]}}}, 0x3B: {c: [8594]}, 0x66: {l: {0x73: {l: {0x3B: {c: [10526]}}}}}, 0x68: {l: {0x6B: {l: {0x3B: {c: [8618]}}}}}, 0x6C: {l: {0x70: {l: {0x3B: {c: [8620]}}}}}, 0x70: {l: {0x6C: {l: {0x3B: {c: [10565]}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [10612]}}}}}}}, 0x74: {l: {0x6C: {l: {0x3B: {c: [8611]}}}}}, 0x77: {l: {0x3B: {c: [8605]}}}}}}}, 0x74: {l: {0x61: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [10522]}}}}}}}, 0x69: {l: {0x6F: {l: {0x3B: {c: [8758]}, 0x6E: {l: {0x61: {l: {0x6C: {l: {0x73: {l: {0x3B: {c: [8474]}}}}}}}}}}}}}}}}}, 0x62: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10509]}}}}}}}, 0x62: {l: {0x72: {l: {0x6B: {l: {0x3B: {c: [10099]}}}}}}}, 0x72: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [125]}}}, 0x6B: {l: {0x3B: {c: [93]}}}}}}}, 0x6B: {l: {0x65: {l: {0x3B: {c: [10636]}}}, 0x73: {l: {0x6C: {l: {0x64: {l: {0x3B: {c: [10638]}}}, 0x75: {l: {0x3B: {c: [10640]}}}}}}}}}}}}}, 0x42: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10511]}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [345]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [343]}}}}}}}, 0x69: {l: {0x6C: {l: {0x3B: {c: [8969]}}}}}}}, 0x75: {l: {0x62: {l: {0x3B: {c: [125]}}}}}, 0x79: {l: {0x3B: {c: [1088]}}}}}, 0x64: {l: {0x63: {l: {0x61: {l: {0x3B: {c: [10551]}}}}}, 0x6C: {l: {0x64: {l: {0x68: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10601]}}}}}}}}}}}, 0x71: {l: {0x75: {l: {0x6F: {l: {0x3B: {c: [8221]}, 0x72: {l: {0x3B: {c: [8221]}}}}}}}}}, 0x73: {l: {0x68: {l: {0x3B: {c: [8627]}}}}}}}, 0x65: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8476]}, 0x69: {l: {0x6E: {l: {0x65: {l: {0x3B: {c: [8475]}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x74: {l: {0x3B: {c: [8476]}}}}}}}}}, 0x73: {l: {0x3B: {c: [8477]}}}}}}}, 0x63: {l: {0x74: {l: {0x3B: {c: [9645]}}}}}, 0x67: {l: {0x3B: {c: [174]}}, c: [174]}}}, 0x66: {l: {0x69: {l: {0x73: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [10621]}}}}}}}}}, 0x6C: {l: {0x6F: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [8971]}}}}}}}}}, 0x72: {l: {0x3B: {c: [120111]}}}}}, 0x48: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10596]}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x64: {l: {0x3B: {c: [8641]}}}, 0x75: {l: {0x3B: {c: [8640]}, 0x6C: {l: {0x3B: {c: [10604]}}}}}}}}}, 0x6F: {l: {0x3B: {c: [961]}, 0x76: {l: {0x3B: {c: [1009]}}}}}}}, 0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8594]}, 0x74: {l: {0x61: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [8611]}}}}}}}}}}}}}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x70: {l: {0x6F: {l: {0x6F: {l: {0x6E: {l: {0x64: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x3B: {c: [8641]}}}}}}}}}, 0x75: {l: {0x70: {l: {0x3B: {c: [8640]}}}}}}}}}}}}}}}}}}}, 0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x73: {l: {0x3B: {c: [8644]}}}}}}}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x70: {l: {0x6F: {l: {0x6F: {l: {0x6E: {l: {0x73: {l: {0x3B: {c: [8652]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x73: {l: {0x3B: {c: [8649]}}}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x71: {l: {0x75: {l: {0x69: {l: {0x67: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8605]}}}}}}}}}}}}}}}}}}}}}, 0x74: {l: {0x68: {l: {0x72: {l: {0x65: {l: {0x65: {l: {0x74: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8908]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x6E: {l: {0x67: {l: {0x3B: {c: [730]}}}}}, 0x73: {l: {0x69: {l: {0x6E: {l: {0x67: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x73: {l: {0x65: {l: {0x71: {l: {0x3B: {c: [8787]}}}}}}}}}}}}}}}}}}}}}}}, 0x6C: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8644]}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8652]}}}}}}}, 0x6D: {l: {0x3B: {c: [8207]}}}}}, 0x6D: {l: {0x6F: {l: {0x75: {l: {0x73: {l: {0x74: {l: {0x61: {l: {0x63: {l: {0x68: {l: {0x65: {l: {0x3B: {c: [9137]}}}}}}}}}, 0x3B: {c: [9137]}}}}}}}}}}}, 0x6E: {l: {0x6D: {l: {0x69: {l: {0x64: {l: {0x3B: {c: [10990]}}}}}}}}}, 0x6F: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [10221]}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8702]}}}}}}}, 0x62: {l: {0x72: {l: {0x6B: {l: {0x3B: {c: [10215]}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10630]}}}}}, 0x66: {l: {0x3B: {c: [120163]}}}, 0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10798]}}}}}}}}}, 0x74: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [10805]}}}}}}}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [41]}, 0x67: {l: {0x74: {l: {0x3B: {c: [10644]}}}}}}}}}, 0x70: {l: {0x6F: {l: {0x6C: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10770]}}}}}}}}}}}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8649]}}}}}}}}}, 0x73: {l: {0x61: {l: {0x71: {l: {0x75: {l: {0x6F: {l: {0x3B: {c: [8250]}}}}}}}}}, 0x63: {l: {0x72: {l: {0x3B: {c: [120007]}}}}}, 0x68: {l: {0x3B: {c: [8625]}}}, 0x71: {l: {0x62: {l: {0x3B: {c: [93]}}}, 0x75: {l: {0x6F: {l: {0x3B: {c: [8217]}, 0x72: {l: {0x3B: {c: [8217]}}}}}}}}}}}, 0x74: {l: {0x68: {l: {0x72: {l: {0x65: {l: {0x65: {l: {0x3B: {c: [8908]}}}}}}}}}, 0x69: {l: {0x6D: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [8906]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x3B: {c: [9657]}, 0x65: {l: {0x3B: {c: [8885]}}}, 0x66: {l: {0x3B: {c: [9656]}}}, 0x6C: {l: {0x74: {l: {0x72: {l: {0x69: {l: {0x3B: {c: [10702]}}}}}}}}}}}}}}}, 0x75: {l: {0x6C: {l: {0x75: {l: {0x68: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10600]}}}}}}}}}}}}}, 0x78: {l: {0x3B: {c: [8478]}}}}},
	    0x52: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [340]}}}}}}}}}, 0x6E: {l: {0x67: {l: {0x3B: {c: [10219]}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8608]}, 0x74: {l: {0x6C: {l: {0x3B: {c: [10518]}}}}}}}}}}}, 0x42: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10512]}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [344]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [342]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1056]}}}}}, 0x65: {l: {0x3B: {c: [8476]}, 0x76: {l: {0x65: {l: {0x72: {l: {0x73: {l: {0x65: {l: {0x45: {l: {0x6C: {l: {0x65: {l: {0x6D: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [8715]}}}}}}}}}}}}}, 0x71: {l: {0x75: {l: {0x69: {l: {0x6C: {l: {0x69: {l: {0x62: {l: {0x72: {l: {0x69: {l: {0x75: {l: {0x6D: {l: {0x3B: {c: [8651]}}}}}}}}}}}}}}}}}}}}}}}, 0x55: {l: {0x70: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x69: {l: {0x6C: {l: {0x69: {l: {0x62: {l: {0x72: {l: {0x69: {l: {0x75: {l: {0x6D: {l: {0x3B: {c: [10607]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x45: {l: {0x47: {l: {0x3B: {c: [174]}}, c: [174]}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [8476]}}}}}, 0x68: {l: {0x6F: {l: {0x3B: {c: [929]}}}}}, 0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x42: {l: {0x72: {l: {0x61: {l: {0x63: {l: {0x6B: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [10217]}}}}}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8677]}}}}}}}, 0x3B: {c: [8594]}, 0x4C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8644]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8658]}}}}}}}}}}}, 0x43: {l: {0x65: {l: {0x69: {l: {0x6C: {l: {0x69: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [8969]}}}}}}}}}}}}}}}, 0x44: {l: {0x6F: {l: {0x75: {l: {0x62: {l: {0x6C: {l: {0x65: {l: {0x42: {l: {0x72: {l: {0x61: {l: {0x63: {l: {0x6B: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [10215]}}}}}}}}}}}}}}}}}}}}}}}, 0x77: {l: {0x6E: {l: {0x54: {l: {0x65: {l: {0x65: {l: {0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10589]}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10581]}}}}}}}, 0x3B: {c: [8642]}}}}}}}}}}}}}}}}}}}}}, 0x46: {l: {0x6C: {l: {0x6F: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [8971]}}}}}}}}}}}, 0x54: {l: {0x65: {l: {0x65: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8614]}}}}}}}}}}}, 0x3B: {c: [8866]}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10587]}}}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10704]}}}}}}}, 0x3B: {c: [8883]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8885]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x55: {l: {0x70: {l: {0x44: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10575]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x65: {l: {0x65: {l: {0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10588]}}}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10580]}}}}}}}, 0x3B: {c: [8638]}}}}}}}}}}}}}}}}}, 0x56: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10579]}}}}}}}, 0x3B: {c: [8640]}}}}}}}}}}}}}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [8477]}}}}}, 0x75: {l: {0x6E: {l: {0x64: {l: {0x49: {l: {0x6D: {l: {0x70: {l: {0x6C: {l: {0x69: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [10608]}}}}}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8667]}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [8475]}}}}}, 0x68: {l: {0x3B: {c: [8625]}}}}}, 0x75: {l: {0x6C: {l: {0x65: {l: {0x44: {l: {0x65: {l: {0x6C: {l: {0x61: {l: {0x79: {l: {0x65: {l: {0x64: {l: {0x3B: {c: [10740]}}}}}}}}}}}}}}}}}}}}}}},
	    0x53: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [346]}}}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [352]}}}}}}}}}, 0x3B: {c: [10940]}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [350]}}}}}}}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [348]}}}}}}}, 0x79: {l: {0x3B: {c: [1057]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120086]}}}}}, 0x48: {l: {0x43: {l: {0x48: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1065]}}}}}}}}}, 0x63: {l: {0x79: {l: {0x3B: {c: [1064]}}}}}}}, 0x68: {l: {0x6F: {l: {0x72: {l: {0x74: {l: {0x44: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8595]}}}}}}}}}}}}}}}}}}}, 0x4C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8592]}}}}}}}}}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8594]}}}}}}}}}}}}}}}}}}}}}, 0x55: {l: {0x70: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8593]}}}}}}}}}}}}}}}}}}}}}}}, 0x69: {l: {0x67: {l: {0x6D: {l: {0x61: {l: {0x3B: {c: [931]}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x43: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x6C: {l: {0x65: {l: {0x3B: {c: [8728]}}}}}}}}}}}}}}}}}}}}}, 0x4F: {l: {0x46: {l: {0x54: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1068]}}}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120138]}}}}}}}, 0x71: {l: {0x72: {l: {0x74: {l: {0x3B: {c: [8730]}}}}}, 0x75: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [9633]}, 0x49: {l: {0x6E: {l: {0x74: {l: {0x65: {l: {0x72: {l: {0x73: {l: {0x65: {l: {0x63: {l: {0x74: {l: {0x69: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [8851]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x53: {l: {0x75: {l: {0x62: {l: {0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8847]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8849]}}}}}}}}}}}}}}}}}}}, 0x70: {l: {0x65: {l: {0x72: {l: {0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8848]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8850]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x55: {l: {0x6E: {l: {0x69: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [8852]}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119982]}}}}}}}, 0x74: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8902]}}}}}}}, 0x75: {l: {0x62: {l: {0x3B: {c: [8912]}, 0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8912]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8838]}}}}}}}}}}}}}}}}}}}, 0x63: {l: {0x63: {l: {0x65: {l: {0x65: {l: {0x64: {l: {0x73: {l: {0x3B: {c: [8827]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [10928]}}}}}}}}}}}, 0x53: {l: {0x6C: {l: {0x61: {l: {0x6E: {l: {0x74: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8829]}}}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8831]}}}}}}}}}}}}}}}}}}}}}, 0x68: {l: {0x54: {l: {0x68: {l: {0x61: {l: {0x74: {l: {0x3B: {c: [8715]}}}}}}}}}}}}}, 0x6D: {l: {0x3B: {c: [8721]}}}, 0x70: {l: {0x3B: {c: [8913]}, 0x65: {l: {0x72: {l: {0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8835]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8839]}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8913]}}}}}}}}}}}}},
	    0x73: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [347]}}}}}}}}}}}, 0x62: {l: {0x71: {l: {0x75: {l: {0x6F: {l: {0x3B: {c: [8218]}}}}}}}}}, 0x63: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10936]}}}, 0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [353]}}}}}}}}}, 0x3B: {c: [8827]}, 0x63: {l: {0x75: {l: {0x65: {l: {0x3B: {c: [8829]}}}}}}}, 0x65: {l: {0x3B: {c: [10928]}, 0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [351]}}}}}}}}}, 0x45: {l: {0x3B: {c: [10932]}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [349]}}}}}}}, 0x6E: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10938]}}}}}, 0x45: {l: {0x3B: {c: [10934]}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8937]}}}}}}}}}, 0x70: {l: {0x6F: {l: {0x6C: {l: {0x69: {l: {0x6E: {l: {0x74: {l: {0x3B: {c: [10771]}}}}}}}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8831]}}}}}}}, 0x79: {l: {0x3B: {c: [1089]}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x62: {l: {0x3B: {c: [8865]}}}, 0x3B: {c: [8901]}, 0x65: {l: {0x3B: {c: [10854]}}}}}}}}}, 0x65: {l: {0x61: {l: {0x72: {l: {0x68: {l: {0x6B: {l: {0x3B: {c: [10533]}}}}}, 0x72: {l: {0x3B: {c: [8600]}, 0x6F: {l: {0x77: {l: {0x3B: {c: [8600]}}}}}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8664]}}}}}}}, 0x63: {l: {0x74: {l: {0x3B: {c: [167]}}, c: [167]}}}, 0x6D: {l: {0x69: {l: {0x3B: {c: [59]}}}}}, 0x73: {l: {0x77: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10537]}}}}}}}}}, 0x74: {l: {0x6D: {l: {0x69: {l: {0x6E: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8726]}}}}}}}}}, 0x6E: {l: {0x3B: {c: [8726]}}}}}}}, 0x78: {l: {0x74: {l: {0x3B: {c: [10038]}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120112]}, 0x6F: {l: {0x77: {l: {0x6E: {l: {0x3B: {c: [8994]}}}}}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x70: {l: {0x3B: {c: [9839]}}}}}}}, 0x63: {l: {0x68: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1097]}}}}}}}, 0x79: {l: {0x3B: {c: [1096]}}}}}, 0x6F: {l: {0x72: {l: {0x74: {l: {0x6D: {l: {0x69: {l: {0x64: {l: {0x3B: {c: [8739]}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x65: {l: {0x6C: {l: {0x3B: {c: [8741]}}}}}}}}}}}}}}}}}}}}}}}, 0x79: {l: {0x3B: {c: [173]}}, c: [173]}}}, 0x69: {l: {0x67: {l: {0x6D: {l: {0x61: {l: {0x3B: {c: [963]}, 0x66: {l: {0x3B: {c: [962]}}}, 0x76: {l: {0x3B: {c: [962]}}}}}}}}}, 0x6D: {l: {0x3B: {c: [8764]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10858]}}}}}}}, 0x65: {l: {0x3B: {c: [8771]}, 0x71: {l: {0x3B: {c: [8771]}}}}}, 0x67: {l: {0x3B: {c: [10910]}, 0x45: {l: {0x3B: {c: [10912]}}}}}, 0x6C: {l: {0x3B: {c: [10909]}, 0x45: {l: {0x3B: {c: [10911]}}}}}, 0x6E: {l: {0x65: {l: {0x3B: {c: [8774]}}}}}, 0x70: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10788]}}}}}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10610]}}}}}}}}}}}}}, 0x6C: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8592]}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x6C: {l: {0x6C: {l: {0x73: {l: {0x65: {l: {0x74: {l: {0x6D: {l: {0x69: {l: {0x6E: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8726]}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x68: {l: {0x70: {l: {0x3B: {c: [10803]}}}}}}}}}, 0x65: {l: {0x70: {l: {0x61: {l: {0x72: {l: {0x73: {l: {0x6C: {l: {0x3B: {c: [10724]}}}}}}}}}}}}}, 0x69: {l: {0x64: {l: {0x3B: {c: [8739]}}}, 0x6C: {l: {0x65: {l: {0x3B: {c: [8995]}}}}}}}, 0x74: {l: {0x3B: {c: [10922]}, 0x65: {l: {0x3B: {c: [10924]}, 0x73: {l: {0x3B: {c: [10924, 65024]}}}}}}}}}, 0x6F: {l: {0x66: {l: {0x74: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1100]}}}}}}}}}, 0x6C: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [9023]}}}}}, 0x3B: {c: [10692]}}}, 0x3B: {c: [47]}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120164]}}}}}}}, 0x70: {l: {0x61: {l: {0x64: {l: {0x65: {l: {0x73: {l: {0x3B: {c: [9824]}, 0x75: {l: {0x69: {l: {0x74: {l: {0x3B: {c: [9824]}}}}}}}}}}}}}, 0x72: {l: {0x3B: {c: [8741]}}}}}}}, 0x71: {l: {0x63: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [8851]}, 0x73: {l: {0x3B: {c: [8851, 65024]}}}}}}}, 0x75: {l: {0x70: {l: {0x3B: {c: [8852]}, 0x73: {l: {0x3B: {c: [8852, 65024]}}}}}}}}}, 0x73: {l: {0x75: {l: {0x62: {l: {0x3B: {c: [8847]}, 0x65: {l: {0x3B: {c: [8849]}}}, 0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8847]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8849]}}}}}}}}}}}}}, 0x70: {l: {0x3B: {c: [8848]}, 0x65: {l: {0x3B: {c: [8850]}}}, 0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8848]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8850]}}}}}}}}}}}}}}}}}, 0x75: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [9633]}}}, 0x66: {l: {0x3B: {c: [9642]}}}}}}}, 0x3B: {c: [9633]}, 0x66: {l: {0x3B: {c: [9642]}}}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8594]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120008]}}}}}, 0x65: {l: {0x74: {l: {0x6D: {l: {0x6E: {l: {0x3B: {c: [8726]}}}}}}}}}, 0x6D: {l: {0x69: {l: {0x6C: {l: {0x65: {l: {0x3B: {c: [8995]}}}}}}}}}, 0x74: {l: {0x61: {l: {0x72: {l: {0x66: {l: {0x3B: {c: [8902]}}}}}}}}}}}, 0x74: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [9734]}, 0x66: {l: {0x3B: {c: [9733]}}}}}}}, 0x72: {l: {0x61: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x65: {l: {0x70: {l: {0x73: {l: {0x69: {l: {0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [1013]}}}}}}}}}}}}}}}, 0x70: {l: {0x68: {l: {0x69: {l: {0x3B: {c: [981]}}}}}}}}}}}}}}}}}, 0x6E: {l: {0x73: {l: {0x3B: {c: [175]}}}}}}}}}, 0x75: {l: {0x62: {l: {0x3B: {c: [8834]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10941]}}}}}}}, 0x45: {l: {0x3B: {c: [10949]}}}, 0x65: {l: {0x3B: {c: [8838]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10947]}}}}}}}}}, 0x6D: {l: {0x75: {l: {0x6C: {l: {0x74: {l: {0x3B: {c: [10945]}}}}}}}}}, 0x6E: {l: {0x45: {l: {0x3B: {c: [10955]}}}, 0x65: {l: {0x3B: {c: [8842]}}}}}, 0x70: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10943]}}}}}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10617]}}}}}}}}}, 0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8834]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8838]}, 0x71: {l: {0x3B: {c: [10949]}}}}}}}, 0x6E: {l: {0x65: {l: {0x71: {l: {0x3B: {c: [8842]}, 0x71: {l: {0x3B: {c: [10955]}}}}}}}}}}}}}, 0x69: {l: {0x6D: {l: {0x3B: {c: [10951]}}}}}, 0x75: {l: {0x62: {l: {0x3B: {c: [10965]}}}, 0x70: {l: {0x3B: {c: [10963]}}}}}}}}}, 0x63: {l: {0x63: {l: {0x61: {l: {0x70: {l: {0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [10936]}}}}}}}}}}}}}, 0x3B: {c: [8827]}, 0x63: {l: {0x75: {l: {0x72: {l: {0x6C: {l: {0x79: {l: {0x65: {l: {0x71: {l: {0x3B: {c: [8829]}}}}}}}}}}}}}}}, 0x65: {l: {0x71: {l: {0x3B: {c: [10928]}}}}}, 0x6E: {l: {0x61: {l: {0x70: {l: {0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [10938]}}}}}}}}}}}}}, 0x65: {l: {0x71: {l: {0x71: {l: {0x3B: {c: [10934]}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8937]}}}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8831]}}}}}}}}}}}, 0x6D: {l: {0x3B: {c: [8721]}}}, 0x6E: {l: {0x67: {l: {0x3B: {c: [9834]}}}}}, 0x70: {l: {0x31: {l: {0x3B: {c: [185]}}, c: [185]}, 0x32: {l: {0x3B: {c: [178]}}, c: [178]}, 0x33: {l: {0x3B: {c: [179]}}, c: [179]}, 0x3B: {c: [8835]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10942]}}}}}, 0x73: {l: {0x75: {l: {0x62: {l: {0x3B: {c: [10968]}}}}}}}}}, 0x45: {l: {0x3B: {c: [10950]}}}, 0x65: {l: {0x3B: {c: [8839]}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10948]}}}}}}}}}, 0x68: {l: {0x73: {l: {0x6F: {l: {0x6C: {l: {0x3B: {c: [10185]}}}}}, 0x75: {l: {0x62: {l: {0x3B: {c: [10967]}}}}}}}}}, 0x6C: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10619]}}}}}}}}}, 0x6D: {l: {0x75: {l: {0x6C: {l: {0x74: {l: {0x3B: {c: [10946]}}}}}}}}}, 0x6E: {l: {0x45: {l: {0x3B: {c: [10956]}}}, 0x65: {l: {0x3B: {c: [8843]}}}}}, 0x70: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10944]}}}}}}}}}, 0x73: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8835]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8839]}, 0x71: {l: {0x3B: {c: [10950]}}}}}}}, 0x6E: {l: {0x65: {l: {0x71: {l: {0x3B: {c: [8843]}, 0x71: {l: {0x3B: {c: [10956]}}}}}}}}}}}}}, 0x69: {l: {0x6D: {l: {0x3B: {c: [10952]}}}}}, 0x75: {l: {0x62: {l: {0x3B: {c: [10964]}}}, 0x70: {l: {0x3B: {c: [10966]}}}}}}}}}}}, 0x77: {l: {0x61: {l: {0x72: {l: {0x68: {l: {0x6B: {l: {0x3B: {c: [10534]}}}}}, 0x72: {l: {0x3B: {c: [8601]}, 0x6F: {l: {0x77: {l: {0x3B: {c: [8601]}}}}}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8665]}}}}}}}, 0x6E: {l: {0x77: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10538]}}}}}}}}}}}, 0x7A: {l: {0x6C: {l: {0x69: {l: {0x67: {l: {0x3B: {c: [223]}}, c: [223]}}}}}}}}},
	    0x54: {l: {0x61: {l: {0x62: {l: {0x3B: {c: [9]}}}, 0x75: {l: {0x3B: {c: [932]}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [356]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [354]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1058]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120087]}}}}}, 0x68: {l: {0x65: {l: {0x72: {l: {0x65: {l: {0x66: {l: {0x6F: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [8756]}}}}}}}}}}}}}, 0x74: {l: {0x61: {l: {0x3B: {c: [920]}}}}}}}, 0x69: {l: {0x63: {l: {0x6B: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8287, 8202]}}}}}}}}}}}}}}}, 0x6E: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8201]}}}}}}}}}}}}}}}}}, 0x48: {l: {0x4F: {l: {0x52: {l: {0x4E: {l: {0x3B: {c: [222]}}, c: [222]}}}}}}}, 0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8764]}, 0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8771]}}}}}}}}}}}, 0x46: {l: {0x75: {l: {0x6C: {l: {0x6C: {l: {0x45: {l: {0x71: {l: {0x75: {l: {0x61: {l: {0x6C: {l: {0x3B: {c: [8773]}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8776]}}}}}}}}}}}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120139]}}}}}}}, 0x52: {l: {0x41: {l: {0x44: {l: {0x45: {l: {0x3B: {c: [8482]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x70: {l: {0x6C: {l: {0x65: {l: {0x44: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8411]}}}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119983]}}}}}, 0x74: {l: {0x72: {l: {0x6F: {l: {0x6B: {l: {0x3B: {c: [358]}}}}}}}}}}}, 0x53: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1062]}}}}}, 0x48: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1035]}}}}}}}}}}},
	    0x74: {l: {0x61: {l: {0x72: {l: {0x67: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [8982]}}}}}}}}}, 0x75: {l: {0x3B: {c: [964]}}}}}, 0x62: {l: {0x72: {l: {0x6B: {l: {0x3B: {c: [9140]}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [357]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x69: {l: {0x6C: {l: {0x3B: {c: [355]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1090]}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8411]}}}}}}}, 0x65: {l: {0x6C: {l: {0x72: {l: {0x65: {l: {0x63: {l: {0x3B: {c: [8981]}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120113]}}}}}, 0x68: {l: {0x65: {l: {0x72: {l: {0x65: {l: {0x34: {l: {0x3B: {c: [8756]}}}, 0x66: {l: {0x6F: {l: {0x72: {l: {0x65: {l: {0x3B: {c: [8756]}}}}}}}}}}}}}, 0x74: {l: {0x61: {l: {0x3B: {c: [952]}, 0x73: {l: {0x79: {l: {0x6D: {l: {0x3B: {c: [977]}}}}}}}, 0x76: {l: {0x3B: {c: [977]}}}}}}}}}, 0x69: {l: {0x63: {l: {0x6B: {l: {0x61: {l: {0x70: {l: {0x70: {l: {0x72: {l: {0x6F: {l: {0x78: {l: {0x3B: {c: [8776]}}}}}}}}}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8764]}}}}}}}}}}}, 0x6E: {l: {0x73: {l: {0x70: {l: {0x3B: {c: [8201]}}}}}}}}}, 0x6B: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [8776]}}}}}, 0x73: {l: {0x69: {l: {0x6D: {l: {0x3B: {c: [8764]}}}}}}}}}, 0x6F: {l: {0x72: {l: {0x6E: {l: {0x3B: {c: [254]}}, c: [254]}}}}}}}, 0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [732]}}}}}}}, 0x6D: {l: {0x65: {l: {0x73: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10801]}}}}}, 0x3B: {c: [8864]}}}, 0x3B: {c: [215]}, 0x64: {l: {0x3B: {c: [10800]}}}}, c: [215]}}}}}, 0x6E: {l: {0x74: {l: {0x3B: {c: [8749]}}}}}}}, 0x6F: {l: {0x65: {l: {0x61: {l: {0x3B: {c: [10536]}}}}}, 0x70: {l: {0x62: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [9014]}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x3B: {c: [10993]}}}}}}}, 0x3B: {c: [8868]}, 0x66: {l: {0x3B: {c: [120165]}, 0x6F: {l: {0x72: {l: {0x6B: {l: {0x3B: {c: [10970]}}}}}}}}}}}, 0x73: {l: {0x61: {l: {0x3B: {c: [10537]}}}}}}}, 0x70: {l: {0x72: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x3B: {c: [8244]}}}}}}}}}}}, 0x72: {l: {0x61: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8482]}}}}}}}, 0x69: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x3B: {c: [9653]}, 0x64: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x3B: {c: [9663]}}}}}}}}}, 0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x3B: {c: [9667]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8884]}}}}}}}}}}}}}, 0x71: {l: {0x3B: {c: [8796]}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [9657]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8885]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [9708]}}}}}}}, 0x65: {l: {0x3B: {c: [8796]}}}, 0x6D: {l: {0x69: {l: {0x6E: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10810]}}}}}}}}}}}, 0x70: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10809]}}}}}}}}}, 0x73: {l: {0x62: {l: {0x3B: {c: [10701]}}}}}, 0x74: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x3B: {c: [10811]}}}}}}}}}}}, 0x70: {l: {0x65: {l: {0x7A: {l: {0x69: {l: {0x75: {l: {0x6D: {l: {0x3B: {c: [9186]}}}}}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120009]}}}, 0x79: {l: {0x3B: {c: [1094]}}}}}, 0x68: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1115]}}}}}}}, 0x74: {l: {0x72: {l: {0x6F: {l: {0x6B: {l: {0x3B: {c: [359]}}}}}}}}}}}, 0x77: {l: {0x69: {l: {0x78: {l: {0x74: {l: {0x3B: {c: [8812]}}}}}}}, 0x6F: {l: {0x68: {l: {0x65: {l: {0x61: {l: {0x64: {l: {0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8606]}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8608]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},
	    0x55: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [218]}}, c: [218]}}}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8607]}, 0x6F: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x3B: {c: [10569]}}}}}}}}}}}}}}}, 0x62: {l: {0x72: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1038]}}}}}, 0x65: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [364]}}}}}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [219]}}, c: [219]}}}}}, 0x79: {l: {0x3B: {c: [1059]}}}}}, 0x64: {l: {0x62: {l: {0x6C: {l: {0x61: {l: {0x63: {l: {0x3B: {c: [368]}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120088]}}}}}, 0x67: {l: {0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [217]}}, c: [217]}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [362]}}}}}}}}}, 0x6E: {l: {0x64: {l: {0x65: {l: {0x72: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [95]}}}}}, 0x72: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [9183]}}}, 0x6B: {l: {0x65: {l: {0x74: {l: {0x3B: {c: [9141]}}}}}}}}}}}}}}}, 0x50: {l: {0x61: {l: {0x72: {l: {0x65: {l: {0x6E: {l: {0x74: {l: {0x68: {l: {0x65: {l: {0x73: {l: {0x69: {l: {0x73: {l: {0x3B: {c: [9181]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x69: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [8899]}, 0x50: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8846]}}}}}}}}}}}}}}}}}, 0x6F: {l: {0x67: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [370]}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120140]}}}}}}}, 0x70: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10514]}}}}}}}, 0x3B: {c: [8593]}, 0x44: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8645]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8657]}}}}}}}}}}}, 0x44: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8597]}}}}}}}}}}}}}}}}}}}, 0x64: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8661]}}}}}}}}}}}}}}}}}}}, 0x45: {l: {0x71: {l: {0x75: {l: {0x69: {l: {0x6C: {l: {0x69: {l: {0x62: {l: {0x72: {l: {0x69: {l: {0x75: {l: {0x6D: {l: {0x3B: {c: [10606]}}}}}}}}}}}}}}}}}}}}}}}, 0x70: {l: {0x65: {l: {0x72: {l: {0x4C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8598]}}}}}}}}}}}}}}}}}}}, 0x52: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8599]}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x73: {l: {0x69: {l: {0x3B: {c: [978]}, 0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [933]}}}}}}}}}}}, 0x54: {l: {0x65: {l: {0x65: {l: {0x41: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8613]}}}}}}}}}}}, 0x3B: {c: [8869]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [366]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119984]}}}}}}}, 0x74: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [360]}}}}}}}}}}}, 0x75: {l: {0x6D: {l: {0x6C: {l: {0x3B: {c: [220]}}, c: [220]}}}}}}},
	    0x75: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [250]}}, c: [250]}}}}}}}, 0x72: {l: {0x72: {l: {0x3B: {c: [8593]}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8657]}}}}}}}, 0x62: {l: {0x72: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1118]}}}}}, 0x65: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [365]}}}}}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [251]}}, c: [251]}}}}}, 0x79: {l: {0x3B: {c: [1091]}}}}}, 0x64: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8645]}}}}}}}, 0x62: {l: {0x6C: {l: {0x61: {l: {0x63: {l: {0x3B: {c: [369]}}}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10606]}}}}}}}}}, 0x66: {l: {0x69: {l: {0x73: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [10622]}}}}}}}}}, 0x72: {l: {0x3B: {c: [120114]}}}}}, 0x67: {l: {0x72: {l: {0x61: {l: {0x76: {l: {0x65: {l: {0x3B: {c: [249]}}, c: [249]}}}}}}}}}, 0x48: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10595]}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x6C: {l: {0x3B: {c: [8639]}}}, 0x72: {l: {0x3B: {c: [8638]}}}}}}}, 0x62: {l: {0x6C: {l: {0x6B: {l: {0x3B: {c: [9600]}}}}}}}}}, 0x6C: {l: {0x63: {l: {0x6F: {l: {0x72: {l: {0x6E: {l: {0x3B: {c: [8988]}, 0x65: {l: {0x72: {l: {0x3B: {c: [8988]}}}}}}}}}}}, 0x72: {l: {0x6F: {l: {0x70: {l: {0x3B: {c: [8975]}}}}}}}}}, 0x74: {l: {0x72: {l: {0x69: {l: {0x3B: {c: [9720]}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [363]}}}}}}}, 0x6C: {l: {0x3B: {c: [168]}}, c: [168]}}}, 0x6F: {l: {0x67: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [371]}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120166]}}}}}}}, 0x70: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8593]}}}}}}}}}}}, 0x64: {l: {0x6F: {l: {0x77: {l: {0x6E: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x3B: {c: [8597]}}}}}}}}}}}}}}}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x70: {l: {0x6F: {l: {0x6F: {l: {0x6E: {l: {0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x3B: {c: [8639]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [8638]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [8846]}}}}}}}, 0x73: {l: {0x69: {l: {0x3B: {c: [965]}, 0x68: {l: {0x3B: {c: [978]}}}, 0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [965]}}}}}}}}}}}, 0x75: {l: {0x70: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x6F: {l: {0x77: {l: {0x73: {l: {0x3B: {c: [8648]}}}}}}}}}}}}}}}}}}}, 0x72: {l: {0x63: {l: {0x6F: {l: {0x72: {l: {0x6E: {l: {0x3B: {c: [8989]}, 0x65: {l: {0x72: {l: {0x3B: {c: [8989]}}}}}}}}}}}, 0x72: {l: {0x6F: {l: {0x70: {l: {0x3B: {c: [8974]}}}}}}}}}, 0x69: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [367]}}}}}}}, 0x74: {l: {0x72: {l: {0x69: {l: {0x3B: {c: [9721]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120010]}}}}}}}, 0x74: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [8944]}}}}}}}, 0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [361]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x3B: {c: [9653]}, 0x66: {l: {0x3B: {c: [9652]}}}}}}}}}, 0x75: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8648]}}}}}}}, 0x6D: {l: {0x6C: {l: {0x3B: {c: [252]}}, c: [252]}}}}}, 0x77: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x3B: {c: [10663]}}}}}}}}}}}}}}},
	    0x76: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x72: {l: {0x74: {l: {0x3B: {c: [10652]}}}}}}}}}, 0x72: {l: {0x65: {l: {0x70: {l: {0x73: {l: {0x69: {l: {0x6C: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [1013]}}}}}}}}}}}}}}}, 0x6B: {l: {0x61: {l: {0x70: {l: {0x70: {l: {0x61: {l: {0x3B: {c: [1008]}}}}}}}}}}}, 0x6E: {l: {0x6F: {l: {0x74: {l: {0x68: {l: {0x69: {l: {0x6E: {l: {0x67: {l: {0x3B: {c: [8709]}}}}}}}}}}}}}}}, 0x70: {l: {0x68: {l: {0x69: {l: {0x3B: {c: [981]}}}}}, 0x69: {l: {0x3B: {c: [982]}}}, 0x72: {l: {0x6F: {l: {0x70: {l: {0x74: {l: {0x6F: {l: {0x3B: {c: [8733]}}}}}}}}}}}}}, 0x72: {l: {0x3B: {c: [8597]}, 0x68: {l: {0x6F: {l: {0x3B: {c: [1009]}}}}}}}, 0x73: {l: {0x69: {l: {0x67: {l: {0x6D: {l: {0x61: {l: {0x3B: {c: [962]}}}}}}}}}, 0x75: {l: {0x62: {l: {0x73: {l: {0x65: {l: {0x74: {l: {0x6E: {l: {0x65: {l: {0x71: {l: {0x3B: {c: [8842, 65024]}, 0x71: {l: {0x3B: {c: [10955, 65024]}}}}}}}}}}}}}}}}}, 0x70: {l: {0x73: {l: {0x65: {l: {0x74: {l: {0x6E: {l: {0x65: {l: {0x71: {l: {0x3B: {c: [8843, 65024]}, 0x71: {l: {0x3B: {c: [10956, 65024]}}}}}}}}}}}}}}}}}}}}}, 0x74: {l: {0x68: {l: {0x65: {l: {0x74: {l: {0x61: {l: {0x3B: {c: [977]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x61: {l: {0x6E: {l: {0x67: {l: {0x6C: {l: {0x65: {l: {0x6C: {l: {0x65: {l: {0x66: {l: {0x74: {l: {0x3B: {c: [8882]}}}}}}}}}, 0x72: {l: {0x69: {l: {0x67: {l: {0x68: {l: {0x74: {l: {0x3B: {c: [8883]}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8661]}}}}}}}, 0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10984]}, 0x76: {l: {0x3B: {c: [10985]}}}}}}}}}, 0x63: {l: {0x79: {l: {0x3B: {c: [1074]}}}}}, 0x64: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8866]}}}}}}}}}, 0x44: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8872]}}}}}}}}}, 0x65: {l: {0x65: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8891]}}}}}}}, 0x3B: {c: [8744]}, 0x65: {l: {0x71: {l: {0x3B: {c: [8794]}}}}}}}, 0x6C: {l: {0x6C: {l: {0x69: {l: {0x70: {l: {0x3B: {c: [8942]}}}}}}}}}, 0x72: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [124]}}}}}}}, 0x74: {l: {0x3B: {c: [124]}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120115]}}}}}, 0x6C: {l: {0x74: {l: {0x72: {l: {0x69: {l: {0x3B: {c: [8882]}}}}}}}}}, 0x6E: {l: {0x73: {l: {0x75: {l: {0x62: {l: {0x3B: {c: [8834, 8402]}}}, 0x70: {l: {0x3B: {c: [8835, 8402]}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120167]}}}}}}}, 0x70: {l: {0x72: {l: {0x6F: {l: {0x70: {l: {0x3B: {c: [8733]}}}}}}}}}, 0x72: {l: {0x74: {l: {0x72: {l: {0x69: {l: {0x3B: {c: [8883]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120011]}}}}}, 0x75: {l: {0x62: {l: {0x6E: {l: {0x45: {l: {0x3B: {c: [10955, 65024]}}}, 0x65: {l: {0x3B: {c: [8842, 65024]}}}}}}}, 0x70: {l: {0x6E: {l: {0x45: {l: {0x3B: {c: [10956, 65024]}}}, 0x65: {l: {0x3B: {c: [8843, 65024]}}}}}}}}}}}, 0x7A: {l: {0x69: {l: {0x67: {l: {0x7A: {l: {0x61: {l: {0x67: {l: {0x3B: {c: [10650]}}}}}}}}}}}}}}},
	    0x56: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10987]}}}}}}}, 0x63: {l: {0x79: {l: {0x3B: {c: [1042]}}}}}, 0x64: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8873]}, 0x6C: {l: {0x3B: {c: [10982]}}}}}}}}}}}, 0x44: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8875]}}}}}}}}}, 0x65: {l: {0x65: {l: {0x3B: {c: [8897]}}}, 0x72: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8214]}}}}}}}, 0x74: {l: {0x3B: {c: [8214]}, 0x69: {l: {0x63: {l: {0x61: {l: {0x6C: {l: {0x42: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [8739]}}}}}}}, 0x4C: {l: {0x69: {l: {0x6E: {l: {0x65: {l: {0x3B: {c: [124]}}}}}}}}}, 0x53: {l: {0x65: {l: {0x70: {l: {0x61: {l: {0x72: {l: {0x61: {l: {0x74: {l: {0x6F: {l: {0x72: {l: {0x3B: {c: [10072]}}}}}}}}}}}}}}}}}}}, 0x54: {l: {0x69: {l: {0x6C: {l: {0x64: {l: {0x65: {l: {0x3B: {c: [8768]}}}}}}}}}}}}}}}}}}}}}, 0x79: {l: {0x54: {l: {0x68: {l: {0x69: {l: {0x6E: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8202]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120089]}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120141]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119985]}}}}}}}, 0x76: {l: {0x64: {l: {0x61: {l: {0x73: {l: {0x68: {l: {0x3B: {c: [8874]}}}}}}}}}}}}},
	    0x57: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [372]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x67: {l: {0x65: {l: {0x3B: {c: [8896]}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120090]}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120142]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119986]}}}}}}}}},
	    0x77: {l: {0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [373]}}}}}}}}}, 0x65: {l: {0x64: {l: {0x62: {l: {0x61: {l: {0x72: {l: {0x3B: {c: [10847]}}}}}}}, 0x67: {l: {0x65: {l: {0x3B: {c: [8743]}, 0x71: {l: {0x3B: {c: [8793]}}}}}}}}}, 0x69: {l: {0x65: {l: {0x72: {l: {0x70: {l: {0x3B: {c: [8472]}}}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120116]}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120168]}}}}}}}, 0x70: {l: {0x3B: {c: [8472]}}}, 0x72: {l: {0x3B: {c: [8768]}, 0x65: {l: {0x61: {l: {0x74: {l: {0x68: {l: {0x3B: {c: [8768]}}}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120012]}}}}}}}}},
	    0x78: {l: {0x63: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [8898]}}}}}, 0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [9711]}}}}}}}, 0x75: {l: {0x70: {l: {0x3B: {c: [8899]}}}}}}}, 0x64: {l: {0x74: {l: {0x72: {l: {0x69: {l: {0x3B: {c: [9661]}}}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120117]}}}}}, 0x68: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10231]}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10234]}}}}}}}}}, 0x69: {l: {0x3B: {c: [958]}}}, 0x6C: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10229]}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10232]}}}}}}}}}, 0x6D: {l: {0x61: {l: {0x70: {l: {0x3B: {c: [10236]}}}}}}}, 0x6E: {l: {0x69: {l: {0x73: {l: {0x3B: {c: [8955]}}}}}}}, 0x6F: {l: {0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [10752]}}}}}}}, 0x70: {l: {0x66: {l: {0x3B: {c: [120169]}}}, 0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10753]}}}}}}}}}, 0x74: {l: {0x69: {l: {0x6D: {l: {0x65: {l: {0x3B: {c: [10754]}}}}}}}}}}}, 0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10230]}}}}}}}, 0x41: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [10233]}}}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120013]}}}}}, 0x71: {l: {0x63: {l: {0x75: {l: {0x70: {l: {0x3B: {c: [10758]}}}}}}}}}}}, 0x75: {l: {0x70: {l: {0x6C: {l: {0x75: {l: {0x73: {l: {0x3B: {c: [10756]}}}}}}}}}, 0x74: {l: {0x72: {l: {0x69: {l: {0x3B: {c: [9651]}}}}}}}}}, 0x76: {l: {0x65: {l: {0x65: {l: {0x3B: {c: [8897]}}}}}}}, 0x77: {l: {0x65: {l: {0x64: {l: {0x67: {l: {0x65: {l: {0x3B: {c: [8896]}}}}}}}}}}}}},
	    0x58: {l: {0x66: {l: {0x72: {l: {0x3B: {c: [120091]}}}}}, 0x69: {l: {0x3B: {c: [926]}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120143]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119987]}}}}}}}}},
	    0x59: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [221]}}, c: [221]}}}}}}}}}, 0x41: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1071]}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [374]}}}}}}}, 0x79: {l: {0x3B: {c: [1067]}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120092]}}}}}, 0x49: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1031]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120144]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119988]}}}}}}}, 0x55: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1070]}}}}}}}, 0x75: {l: {0x6D: {l: {0x6C: {l: {0x3B: {c: [376]}}}}}}}}},
	    0x79: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [253]}}, c: [253]}}}}}, 0x79: {l: {0x3B: {c: [1103]}}}}}}}, 0x63: {l: {0x69: {l: {0x72: {l: {0x63: {l: {0x3B: {c: [375]}}}}}}}, 0x79: {l: {0x3B: {c: [1099]}}}}}, 0x65: {l: {0x6E: {l: {0x3B: {c: [165]}}, c: [165]}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120118]}}}}}, 0x69: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1111]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120170]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120014]}}}}}}}, 0x75: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1102]}}}}}, 0x6D: {l: {0x6C: {l: {0x3B: {c: [255]}}, c: [255]}}}}}}},
	    0x5A: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [377]}}}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [381]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1047]}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [379]}}}}}}}, 0x65: {l: {0x72: {l: {0x6F: {l: {0x57: {l: {0x69: {l: {0x64: {l: {0x74: {l: {0x68: {l: {0x53: {l: {0x70: {l: {0x61: {l: {0x63: {l: {0x65: {l: {0x3B: {c: [8203]}}}}}}}}}}}}}}}}}}}}}}}}}, 0x74: {l: {0x61: {l: {0x3B: {c: [918]}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [8488]}}}}}, 0x48: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1046]}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [8484]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [119989]}}}}}}}}},
	    0x7A: {l: {0x61: {l: {0x63: {l: {0x75: {l: {0x74: {l: {0x65: {l: {0x3B: {c: [378]}}}}}}}}}}}, 0x63: {l: {0x61: {l: {0x72: {l: {0x6F: {l: {0x6E: {l: {0x3B: {c: [382]}}}}}}}}}, 0x79: {l: {0x3B: {c: [1079]}}}}}, 0x64: {l: {0x6F: {l: {0x74: {l: {0x3B: {c: [380]}}}}}}}, 0x65: {l: {0x65: {l: {0x74: {l: {0x72: {l: {0x66: {l: {0x3B: {c: [8488]}}}}}}}}}, 0x74: {l: {0x61: {l: {0x3B: {c: [950]}}}}}}}, 0x66: {l: {0x72: {l: {0x3B: {c: [120119]}}}}}, 0x68: {l: {0x63: {l: {0x79: {l: {0x3B: {c: [1078]}}}}}}}, 0x69: {l: {0x67: {l: {0x72: {l: {0x61: {l: {0x72: {l: {0x72: {l: {0x3B: {c: [8669]}}}}}}}}}}}}}, 0x6F: {l: {0x70: {l: {0x66: {l: {0x3B: {c: [120171]}}}}}}}, 0x73: {l: {0x63: {l: {0x72: {l: {0x3B: {c: [120015]}}}}}}}, 0x77: {l: {0x6A: {l: {0x3B: {c: [8205]}}}, 0x6E: {l: {0x6A: {l: {0x3B: {c: [8204]}}}}}}}}}
	};

/***/ },
/* 449 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var HTML = __webpack_require__(450);

	//Aliases
	var $ = HTML.TAG_NAMES,
	    NS = HTML.NAMESPACES;

	//Element utils

	//OPTIMIZATION: Integer comparisons are low-cost, so we can use very fast tag name length filters here.
	//It's faster than using dictionary.
	function isImpliedEndTagRequired(tn) {
	    switch (tn.length) {
	        case 1:
	            return tn === $.P;

	        case 2:
	            return tn === $.RP || tn === $.RT || tn === $.DD || tn === $.DT || tn === $.LI;

	        case 6:
	            return tn === $.OPTION;

	        case 8:
	            return tn === $.OPTGROUP;
	    }

	    return false;
	}

	function isScopingElement(tn, ns) {
	    switch (tn.length) {
	        case 2:
	            if (tn === $.TD || tn === $.TH)
	                return ns === NS.HTML;

	            else if (tn === $.MI || tn === $.MO || tn == $.MN || tn === $.MS)
	                return ns === NS.MATHML;

	            break;

	        case 4:
	            if (tn === $.HTML)
	                return ns === NS.HTML;

	            else if (tn === $.DESC)
	                return ns === NS.SVG;

	            break;

	        case 5:
	            if (tn === $.TABLE)
	                return ns === NS.HTML;

	            else if (tn === $.MTEXT)
	                return ns === NS.MATHML;

	            else if (tn === $.TITLE)
	                return ns === NS.SVG;

	            break;

	        case 6:
	            return (tn === $.APPLET || tn === $.OBJECT) && ns === NS.HTML;

	        case 7:
	            return (tn === $.CAPTION || tn === $.MARQUEE) && ns === NS.HTML;

	        case 8:
	            return tn === $.TEMPLATE && ns === NS.HTML;

	        case 13:
	            return tn === $.FOREIGN_OBJECT && ns === NS.SVG;

	        case 14:
	            return tn === $.ANNOTATION_XML && ns === NS.MATHML;
	    }

	    return false;
	}

	//Stack of open elements
	var OpenElementStack = module.exports = function (document, treeAdapter) {
	    this.stackTop = -1;
	    this.items = [];
	    this.current = document;
	    this.currentTagName = null;
	    this.currentTmplContent = null;
	    this.tmplCount = 0;
	    this.treeAdapter = treeAdapter;
	};

	//Index of element
	OpenElementStack.prototype._indexOf = function (element) {
	    var idx = -1;

	    for (var i = this.stackTop; i >= 0; i--) {
	        if (this.items[i] === element) {
	            idx = i;
	            break;
	        }
	    }
	    return idx;
	};

	//Update current element
	OpenElementStack.prototype._isInTemplate = function () {
	    if (this.currentTagName !== $.TEMPLATE)
	        return false;

	    return this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;
	};

	OpenElementStack.prototype._updateCurrentElement = function () {
	    this.current = this.items[this.stackTop];
	    this.currentTagName = this.current && this.treeAdapter.getTagName(this.current);

	    this.currentTmplContent = this._isInTemplate() ? this.treeAdapter.getChildNodes(this.current)[0] : null;
	};

	//Mutations
	OpenElementStack.prototype.push = function (element) {
	    this.items[++this.stackTop] = element;
	    this._updateCurrentElement();

	    if (this._isInTemplate())
	        this.tmplCount++;

	};

	OpenElementStack.prototype.pop = function () {
	    this.stackTop--;

	    if (this.tmplCount > 0 && this._isInTemplate())
	        this.tmplCount--;

	    this._updateCurrentElement();
	};

	OpenElementStack.prototype.replace = function (oldElement, newElement) {
	    var idx = this._indexOf(oldElement);
	    this.items[idx] = newElement;

	    if (idx === this.stackTop)
	        this._updateCurrentElement();
	};

	OpenElementStack.prototype.insertAfter = function (referenceElement, newElement) {
	    var insertionIdx = this._indexOf(referenceElement) + 1;

	    this.items.splice(insertionIdx, 0, newElement);

	    if (insertionIdx == ++this.stackTop)
	        this._updateCurrentElement();
	};

	OpenElementStack.prototype.popUntilTagNamePopped = function (tagName) {
	    while (this.stackTop > -1) {
	        var tn = this.currentTagName;

	        this.pop();

	        if (tn === tagName)
	            break;
	    }
	};

	OpenElementStack.prototype.popUntilTemplatePopped = function () {
	    while (this.stackTop > -1) {
	        var tn = this.currentTagName,
	            ns = this.treeAdapter.getNamespaceURI(this.current);

	        this.pop();

	        if (tn === $.TEMPLATE && ns === NS.HTML)
	            break;
	    }
	};

	OpenElementStack.prototype.popUntilElementPopped = function (element) {
	    while (this.stackTop > -1) {
	        var poppedElement = this.current;

	        this.pop();

	        if (poppedElement === element)
	            break;
	    }
	};

	OpenElementStack.prototype.popUntilNumberedHeaderPopped = function () {
	    while (this.stackTop > -1) {
	        var tn = this.currentTagName;

	        this.pop();

	        if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)
	            break;
	    }
	};

	OpenElementStack.prototype.popAllUpToHtmlElement = function () {
	    //NOTE: here we assume that root <html> element is always first in the open element stack, so
	    //we perform this fast stack clean up.
	    this.stackTop = 0;
	    this._updateCurrentElement();
	};

	OpenElementStack.prototype.clearBackToTableContext = function () {
	    while (this.currentTagName !== $.TABLE && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML)
	        this.pop();
	};

	OpenElementStack.prototype.clearBackToTableBodyContext = function () {
	    while (this.currentTagName !== $.TBODY && this.currentTagName !== $.TFOOT &&
	           this.currentTagName !== $.THEAD && this.currentTagName !== $.TEMPLATE &&
	           this.currentTagName !== $.HTML) {
	        this.pop();
	    }
	};

	OpenElementStack.prototype.clearBackToTableRowContext = function () {
	    while (this.currentTagName !== $.TR && this.currentTagName !== $.TEMPLATE && this.currentTagName !== $.HTML)
	        this.pop();
	};

	OpenElementStack.prototype.remove = function (element) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        if (this.items[i] === element) {
	            this.items.splice(i, 1);
	            this.stackTop--;
	            this._updateCurrentElement();
	            break;
	        }
	    }
	};

	//Search
	OpenElementStack.prototype.tryPeekProperlyNestedBodyElement = function () {
	    //Properly nested <body> element (should be second element in stack).
	    var element = this.items[1];
	    return element && this.treeAdapter.getTagName(element) === $.BODY ? element : null;
	};

	OpenElementStack.prototype.contains = function (element) {
	    return this._indexOf(element) > -1;
	};

	OpenElementStack.prototype.getCommonAncestor = function (element) {
	    var elementIdx = this._indexOf(element);

	    return --elementIdx >= 0 ? this.items[elementIdx] : null;
	};

	OpenElementStack.prototype.isRootHtmlElementCurrent = function () {
	    return this.stackTop === 0 && this.currentTagName === $.HTML;
	};

	//Element in scope
	OpenElementStack.prototype.hasInScope = function (tagName) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]);

	        if (tn === tagName)
	            return true;

	        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

	        if (isScopingElement(tn, ns))
	            return false;
	    }

	    return true;
	};

	OpenElementStack.prototype.hasNumberedHeaderInScope = function () {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]);

	        if (tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6)
	            return true;

	        if (isScopingElement(tn, this.treeAdapter.getNamespaceURI(this.items[i])))
	            return false;
	    }

	    return true;
	};

	OpenElementStack.prototype.hasInListItemScope = function (tagName) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]);

	        if (tn === tagName)
	            return true;

	        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

	        if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || isScopingElement(tn, ns))
	            return false;
	    }

	    return true;
	};

	OpenElementStack.prototype.hasInButtonScope = function (tagName) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]);

	        if (tn === tagName)
	            return true;

	        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

	        if ((tn === $.BUTTON && ns === NS.HTML) || isScopingElement(tn, ns))
	            return false;
	    }

	    return true;
	};

	OpenElementStack.prototype.hasInTableScope = function (tagName) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]);

	        if (tn === tagName)
	            return true;

	        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

	        if ((tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) && ns === NS.HTML)
	            return false;
	    }

	    return true;
	};

	OpenElementStack.prototype.hasTableBodyContextInTableScope = function () {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]);

	        if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT)
	            return true;

	        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

	        if ((tn === $.TABLE || tn === $.HTML) && ns === NS.HTML)
	            return false;
	    }

	    return true;
	};

	OpenElementStack.prototype.hasInSelectScope = function (tagName) {
	    for (var i = this.stackTop; i >= 0; i--) {
	        var tn = this.treeAdapter.getTagName(this.items[i]);

	        if (tn === tagName)
	            return true;

	        var ns = this.treeAdapter.getNamespaceURI(this.items[i]);

	        if (tn !== $.OPTION && tn !== $.OPTGROUP && ns === NS.HTML)
	            return false;
	    }

	    return true;
	};

	//Implied end tags
	OpenElementStack.prototype.generateImpliedEndTags = function () {
	    while (isImpliedEndTagRequired(this.currentTagName))
	        this.pop();
	};

	OpenElementStack.prototype.generateImpliedEndTagsWithExclusion = function (exclusionTagName) {
	    while (isImpliedEndTagRequired(this.currentTagName) && this.currentTagName !== exclusionTagName)
	        this.pop();
	};


/***/ },
/* 450 */
/***/ function(module, exports) {

	'use strict';

	var NS = exports.NAMESPACES = {
	    HTML: 'http://www.w3.org/1999/xhtml',
	    MATHML: 'http://www.w3.org/1998/Math/MathML',
	    SVG: 'http://www.w3.org/2000/svg',
	    XLINK: 'http://www.w3.org/1999/xlink',
	    XML: 'http://www.w3.org/XML/1998/namespace',
	    XMLNS: 'http://www.w3.org/2000/xmlns/'
	};

	exports.ATTRS = {
	    TYPE: 'type',
	    ACTION: 'action',
	    ENCODING: 'encoding',
	    PROMPT: 'prompt',
	    NAME: 'name',
	    COLOR: 'color',
	    FACE: 'face',
	    SIZE: 'size'
	};

	var $ = exports.TAG_NAMES = {
	    A: 'a',
	    ADDRESS: 'address',
	    ANNOTATION_XML: 'annotation-xml',
	    APPLET: 'applet',
	    AREA: 'area',
	    ARTICLE: 'article',
	    ASIDE: 'aside',

	    B: 'b',
	    BASE: 'base',
	    BASEFONT: 'basefont',
	    BGSOUND: 'bgsound',
	    BIG: 'big',
	    BLOCKQUOTE: 'blockquote',
	    BODY: 'body',
	    BR: 'br',
	    BUTTON: 'button',

	    CAPTION: 'caption',
	    CENTER: 'center',
	    CODE: 'code',
	    COL: 'col',
	    COLGROUP: 'colgroup',
	    COMMAND: 'command',

	    DD: 'dd',
	    DESC: 'desc',
	    DETAILS: 'details',
	    DIALOG: 'dialog',
	    DIR: 'dir',
	    DIV: 'div',
	    DL: 'dl',
	    DT: 'dt',

	    EM: 'em',
	    EMBED: 'embed',

	    FIELDSET: 'fieldset',
	    FIGCAPTION: 'figcaption',
	    FIGURE: 'figure',
	    FONT: 'font',
	    FOOTER: 'footer',
	    FOREIGN_OBJECT: 'foreignObject',
	    FORM: 'form',
	    FRAME: 'frame',
	    FRAMESET: 'frameset',

	    H1: 'h1',
	    H2: 'h2',
	    H3: 'h3',
	    H4: 'h4',
	    H5: 'h5',
	    H6: 'h6',
	    HEAD: 'head',
	    HEADER: 'header',
	    HGROUP: 'hgroup',
	    HR: 'hr',
	    HTML: 'html',

	    I: 'i',
	    IMG: 'img',
	    IMAGE: 'image',
	    INPUT: 'input',
	    IFRAME: 'iframe',
	    ISINDEX: 'isindex',

	    KEYGEN: 'keygen',

	    LABEL: 'label',
	    LI: 'li',
	    LINK: 'link',
	    LISTING: 'listing',

	    MAIN: 'main',
	    MALIGNMARK: 'malignmark',
	    MARQUEE: 'marquee',
	    MATH: 'math',
	    MENU: 'menu',
	    MENUITEM: 'menuitem',
	    META: 'meta',
	    MGLYPH: 'mglyph',
	    MI: 'mi',
	    MO: 'mo',
	    MN: 'mn',
	    MS: 'ms',
	    MTEXT: 'mtext',

	    NAV: 'nav',
	    NOBR: 'nobr',
	    NOFRAMES: 'noframes',
	    NOEMBED: 'noembed',
	    NOSCRIPT: 'noscript',

	    OBJECT: 'object',
	    OL: 'ol',
	    OPTGROUP: 'optgroup',
	    OPTION: 'option',

	    P: 'p',
	    PARAM: 'param',
	    PLAINTEXT: 'plaintext',
	    PRE: 'pre',

	    RP: 'rp',
	    RT: 'rt',
	    RUBY: 'ruby',

	    S: 's',
	    SCRIPT: 'script',
	    SECTION: 'section',
	    SELECT: 'select',
	    SOURCE: 'source',
	    SMALL: 'small',
	    SPAN: 'span',
	    STRIKE: 'strike',
	    STRONG: 'strong',
	    STYLE: 'style',
	    SUB: 'sub',
	    SUMMARY: 'summary',
	    SUP: 'sup',

	    TABLE: 'table',
	    TBODY: 'tbody',
	    TEMPLATE: 'template',
	    TEXTAREA: 'textarea',
	    TFOOT: 'tfoot',
	    TD: 'td',
	    TH: 'th',
	    THEAD: 'thead',
	    TITLE: 'title',
	    TR: 'tr',
	    TRACK: 'track',
	    TT: 'tt',

	    U: 'u',
	    UL: 'ul',

	    SVG: 'svg',

	    VAR: 'var',

	    WBR: 'wbr',

	    XMP: 'xmp'
	};

	var SPECIAL_ELEMENTS = exports.SPECIAL_ELEMENTS = {};

	SPECIAL_ELEMENTS[NS.HTML] = {};
	SPECIAL_ELEMENTS[NS.HTML][$.ADDRESS] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.APPLET] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.AREA] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.ARTICLE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.ASIDE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BASE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BASEFONT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BGSOUND] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BLOCKQUOTE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BODY] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BR] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.BUTTON] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.CAPTION] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.CENTER] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.COL] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.COLGROUP] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DD] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DETAILS] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DIR] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DIV] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DL] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.DT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.EMBED] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FIELDSET] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FIGCAPTION] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FIGURE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FOOTER] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FORM] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FRAME] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.FRAMESET] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H1] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H2] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H3] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H4] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H5] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.H6] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.HEAD] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.HEADER] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.HGROUP] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.HR] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.HTML] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.IFRAME] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.IMG] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.INPUT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.ISINDEX] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.LI] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.LINK] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.LISTING] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.MAIN] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.MARQUEE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.MENU] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.MENUITEM] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.META] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.NAV] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.NOEMBED] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.NOFRAMES] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.NOSCRIPT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.OBJECT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.OL] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.P] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.PARAM] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.PLAINTEXT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.PRE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.SCRIPT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.SECTION] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.SELECT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.SOURCE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.STYLE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.SUMMARY] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TABLE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TBODY] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TD] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TEMPLATE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TEXTAREA] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TFOOT] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TH] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.THEAD] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TITLE] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TR] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.TRACK] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.UL] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.WBR] = true;
	SPECIAL_ELEMENTS[NS.HTML][$.XMP] = true;

	SPECIAL_ELEMENTS[NS.MATHML] = {};
	SPECIAL_ELEMENTS[NS.MATHML][$.MI] = true;
	SPECIAL_ELEMENTS[NS.MATHML][$.MO] = true;
	SPECIAL_ELEMENTS[NS.MATHML][$.MN] = true;
	SPECIAL_ELEMENTS[NS.MATHML][$.MS] = true;
	SPECIAL_ELEMENTS[NS.MATHML][$.MTEXT] = true;
	SPECIAL_ELEMENTS[NS.MATHML][$.ANNOTATION_XML] = true;

	SPECIAL_ELEMENTS[NS.SVG] = {};
	SPECIAL_ELEMENTS[NS.SVG][$.TITLE] = true;
	SPECIAL_ELEMENTS[NS.SVG][$.FOREIGN_OBJECT] = true;
	SPECIAL_ELEMENTS[NS.SVG][$.DESC] = true;


/***/ },
/* 451 */
/***/ function(module, exports) {

	'use strict';

	//Const
	var NOAH_ARK_CAPACITY = 3;

	//List of formatting elements
	var FormattingElementList = module.exports = function (treeAdapter) {
	    this.length = 0;
	    this.entries = [];
	    this.treeAdapter = treeAdapter;
	    this.bookmark = null;
	};

	//Entry types
	FormattingElementList.MARKER_ENTRY = 'MARKER_ENTRY';
	FormattingElementList.ELEMENT_ENTRY = 'ELEMENT_ENTRY';

	//Noah Ark's condition
	//OPTIMIZATION: at first we try to find possible candidates for exclusion using
	//lightweight heuristics without thorough attributes check.
	FormattingElementList.prototype._getNoahArkConditionCandidates = function (newElement) {
	    var candidates = [];

	    if (this.length >= NOAH_ARK_CAPACITY) {
	        var neAttrsLength = this.treeAdapter.getAttrList(newElement).length,
	            neTagName = this.treeAdapter.getTagName(newElement),
	            neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);

	        for (var i = this.length - 1; i >= 0; i--) {
	            var entry = this.entries[i];

	            if (entry.type === FormattingElementList.MARKER_ENTRY)
	                break;

	            var element = entry.element,
	                elementAttrs = this.treeAdapter.getAttrList(element);

	            if (this.treeAdapter.getTagName(element) === neTagName &&
	                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI &&
	                elementAttrs.length === neAttrsLength) {
	                candidates.push({idx: i, attrs: elementAttrs});
	            }
	        }
	    }

	    return candidates.length < NOAH_ARK_CAPACITY ? [] : candidates;
	};

	FormattingElementList.prototype._ensureNoahArkCondition = function (newElement) {
	    var candidates = this._getNoahArkConditionCandidates(newElement),
	        cLength = candidates.length;

	    if (cLength) {
	        var neAttrs = this.treeAdapter.getAttrList(newElement),
	            neAttrsLength = neAttrs.length,
	            neAttrsMap = {};

	        //NOTE: build attrs map for the new element so we can perform fast lookups
	        for (var i = 0; i < neAttrsLength; i++) {
	            var neAttr = neAttrs[i];

	            neAttrsMap[neAttr.name] = neAttr.value;
	        }

	        for (var i = 0; i < neAttrsLength; i++) {
	            for (var j = 0; j < cLength; j++) {
	                var cAttr = candidates[j].attrs[i];

	                if (neAttrsMap[cAttr.name] !== cAttr.value) {
	                    candidates.splice(j, 1);
	                    cLength--;
	                }

	                if (candidates.length < NOAH_ARK_CAPACITY)
	                    return;
	            }
	        }

	        //NOTE: remove bottommost candidates until Noah's Ark condition will not be met
	        for (var i = cLength - 1; i >= NOAH_ARK_CAPACITY - 1; i--) {
	            this.entries.splice(candidates[i].idx, 1);
	            this.length--;
	        }
	    }
	};

	//Mutations
	FormattingElementList.prototype.insertMarker = function () {
	    this.entries.push({type: FormattingElementList.MARKER_ENTRY});
	    this.length++;
	};

	FormattingElementList.prototype.pushElement = function (element, token) {
	    this._ensureNoahArkCondition(element);

	    this.entries.push({
	        type: FormattingElementList.ELEMENT_ENTRY,
	        element: element,
	        token: token
	    });

	    this.length++;
	};

	FormattingElementList.prototype.insertElementAfterBookmark = function (element, token) {
	    var bookmarkIdx = this.length - 1;

	    for (; bookmarkIdx >= 0; bookmarkIdx--) {
	        if (this.entries[bookmarkIdx] === this.bookmark)
	            break;
	    }

	    this.entries.splice(bookmarkIdx + 1, 0, {
	        type: FormattingElementList.ELEMENT_ENTRY,
	        element: element,
	        token: token
	    });

	    this.length++;
	};

	FormattingElementList.prototype.removeEntry = function (entry) {
	    for (var i = this.length - 1; i >= 0; i--) {
	        if (this.entries[i] === entry) {
	            this.entries.splice(i, 1);
	            this.length--;
	            break;
	        }
	    }
	};

	FormattingElementList.prototype.clearToLastMarker = function () {
	    while (this.length) {
	        var entry = this.entries.pop();

	        this.length--;

	        if (entry.type === FormattingElementList.MARKER_ENTRY)
	            break;
	    }
	};

	//Search
	FormattingElementList.prototype.getElementEntryInScopeWithTagName = function (tagName) {
	    for (var i = this.length - 1; i >= 0; i--) {
	        var entry = this.entries[i];

	        if (entry.type === FormattingElementList.MARKER_ENTRY)
	            return null;

	        if (this.treeAdapter.getTagName(entry.element) === tagName)
	            return entry;
	    }

	    return null;
	};

	FormattingElementList.prototype.getElementEntry = function (element) {
	    for (var i = this.length - 1; i >= 0; i--) {
	        var entry = this.entries[i];

	        if (entry.type === FormattingElementList.ELEMENT_ENTRY && entry.element == element)
	            return entry;
	    }

	    return null;
	};


/***/ },
/* 452 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var OpenElementStack = __webpack_require__(449),
	    Tokenizer = __webpack_require__(444),
	    HTML = __webpack_require__(450);


	//Aliases
	var $ = HTML.TAG_NAMES;


	function setEndLocation(element, closingToken, treeAdapter) {
	    var loc = element.__location;

	    if (!loc)
	        return;

	    if (!loc.startTag) {
	        loc.startTag = {
	            start: loc.start,
	            end: loc.end
	        };
	    }

	    if (closingToken.location) {
	        var tn = treeAdapter.getTagName(element),
	            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing tag and
	            // for cases like <td> <p> </td> - 'p' closes without a closing tag
	            isClosingEndTag = closingToken.type === Tokenizer.END_TAG_TOKEN &&
	                              tn === closingToken.tagName;

	        if (isClosingEndTag) {
	            loc.endTag = {
	                start: closingToken.location.start,
	                end: closingToken.location.end
	            };
	        }

	        loc.end = closingToken.location.end;
	    }
	}

	//NOTE: patch open elements stack, so we can assign end location for the elements
	function patchOpenElementsStack(stack, parser) {
	    var treeAdapter = parser.treeAdapter;

	    stack.pop = function () {
	        setEndLocation(this.current, parser.currentToken, treeAdapter);
	        OpenElementStack.prototype.pop.call(this);
	    };

	    stack.popAllUpToHtmlElement = function () {
	        for (var i = this.stackTop; i > 0; i--)
	            setEndLocation(this.items[i], parser.currentToken, treeAdapter);

	        OpenElementStack.prototype.popAllUpToHtmlElement.call(this);
	    };

	    stack.remove = function (element) {
	        setEndLocation(element, parser.currentToken, treeAdapter);
	        OpenElementStack.prototype.remove.call(this, element);
	    };
	}

	exports.assign = function (parser) {
	    //NOTE: obtain Parser proto this way to avoid module circular references
	    var parserProto = Object.getPrototypeOf(parser),
	        treeAdapter = parser.treeAdapter;


	    //NOTE: patch _reset method
	    parser._reset = function (html, document, fragmentContext) {
	        parserProto._reset.call(this, html, document, fragmentContext);

	        this.attachableElementLocation = null;
	        this.lastFosterParentingLocation = null;
	        this.currentToken = null;

	        patchOpenElementsStack(this.openElements, parser);
	    };

	    parser._processTokenInForeignContent = function (token) {
	        this.currentToken = token;
	        parserProto._processTokenInForeignContent.call(this, token);
	    };

	    parser._processToken = function (token) {
	        this.currentToken = token;
	        parserProto._processToken.call(this, token);

	        //NOTE: <body> and <html> are never popped from the stack, so we need to updated
	        //their end location explicitly.
	        if (token.type === Tokenizer.END_TAG_TOKEN &&
	            (token.tagName === $.HTML ||
	            (token.tagName === $.BODY && this.openElements.hasInScope($.BODY)))) {
	            for (var i = this.openElements.stackTop; i >= 0; i--) {
	                var element = this.openElements.items[i];

	                if (this.treeAdapter.getTagName(element) === token.tagName) {
	                    setEndLocation(element, token, treeAdapter);
	                    break;
	                }
	            }
	        }
	    };

	    //Doctype
	    parser._setDocumentType = function (token) {
	        parserProto._setDocumentType.call(this, token);

	        var documentChildren = this.treeAdapter.getChildNodes(this.document),
	            cnLength = documentChildren.length;

	        for (var i = 0; i < cnLength; i++) {
	            var node = documentChildren[i];

	            if (this.treeAdapter.isDocumentTypeNode(node)) {
	                node.__location = token.location;
	                break;
	            }
	        }
	    };

	    //Elements
	    parser._attachElementToTree = function (element) {
	        //NOTE: _attachElementToTree is called from _appendElement, _insertElement and _insertTemplate methods.
	        //So we will use token location stored in this methods for the element.
	        element.__location = this.attachableElementLocation || null;
	        this.attachableElementLocation = null;
	        parserProto._attachElementToTree.call(this, element);
	    };

	    parser._appendElement = function (token, namespaceURI) {
	        this.attachableElementLocation = token.location;
	        parserProto._appendElement.call(this, token, namespaceURI);
	    };

	    parser._insertElement = function (token, namespaceURI) {
	        this.attachableElementLocation = token.location;
	        parserProto._insertElement.call(this, token, namespaceURI);
	    };

	    parser._insertTemplate = function (token) {
	        this.attachableElementLocation = token.location;
	        parserProto._insertTemplate.call(this, token);

	        var tmplContent = this.treeAdapter.getChildNodes(this.openElements.current)[0];

	        tmplContent.__location = null;
	    };

	    parser._insertFakeRootElement = function () {
	        parserProto._insertFakeRootElement.call(this);
	        this.openElements.current.__location = null;
	    };

	    //Comments
	    parser._appendCommentNode = function (token, parent) {
	        parserProto._appendCommentNode.call(this, token, parent);

	        var children = this.treeAdapter.getChildNodes(parent),
	            commentNode = children[children.length - 1];

	        commentNode.__location = token.location;
	    };

	    //Text
	    parser._findFosterParentingLocation = function () {
	        //NOTE: store last foster parenting location, so we will be able to find inserted text
	        //in case of foster parenting
	        this.lastFosterParentingLocation = parserProto._findFosterParentingLocation.call(this);
	        return this.lastFosterParentingLocation;
	    };

	    parser._insertCharacters = function (token) {
	        parserProto._insertCharacters.call(this, token);

	        var hasFosterParent = this._shouldFosterParentOnInsertion(),
	            parentingLocation = this.lastFosterParentingLocation,
	            parent = (hasFosterParent && parentingLocation.parent) ||
	                     this.openElements.currentTmplContent ||
	                     this.openElements.current,
	            siblings = this.treeAdapter.getChildNodes(parent),
	            textNodeIdx = hasFosterParent && parentingLocation.beforeElement ?
	                          siblings.indexOf(parentingLocation.beforeElement) - 1 :
	                          siblings.length - 1,
	            textNode = siblings[textNodeIdx];

	        //NOTE: if we have location assigned by another token, then just update end position
	        if (textNode.__location)
	            textNode.__location.end = token.location.end;

	        else
	            textNode.__location = token.location;
	    };
	};



/***/ },
/* 453 */
/***/ function(module, exports) {

	'use strict';

	//Node construction
	exports.createDocument = function () {
	    return {
	        nodeName: '#document',
	        quirksMode: false,
	        childNodes: []
	    };
	};

	exports.createDocumentFragment = function () {
	    return {
	        nodeName: '#document-fragment',
	        quirksMode: false,
	        childNodes: []
	    };
	};

	exports.createElement = function (tagName, namespaceURI, attrs) {
	    return {
	        nodeName: tagName,
	        tagName: tagName,
	        attrs: attrs,
	        namespaceURI: namespaceURI,
	        childNodes: [],
	        parentNode: null
	    };
	};

	exports.createCommentNode = function (data) {
	    return {
	        nodeName: '#comment',
	        data: data,
	        parentNode: null
	    };
	};

	var createTextNode = function (value) {
	    return {
	        nodeName: '#text',
	        value: value,
	        parentNode: null
	    }
	};


	//Tree mutation
	exports.setDocumentType = function (document, name, publicId, systemId) {
	    var doctypeNode = null;

	    for (var i = 0; i < document.childNodes.length; i++) {
	        if (document.childNodes[i].nodeName === '#documentType') {
	            doctypeNode = document.childNodes[i];
	            break;
	        }
	    }

	    if (doctypeNode) {
	        doctypeNode.name = name;
	        doctypeNode.publicId = publicId;
	        doctypeNode.systemId = systemId;
	    }

	    else {
	        appendChild(document, {
	            nodeName: '#documentType',
	            name: name,
	            publicId: publicId,
	            systemId: systemId
	        });
	    }
	};

	exports.setQuirksMode = function (document) {
	    document.quirksMode = true;
	};

	exports.isQuirksMode = function (document) {
	    return document.quirksMode;
	};

	var appendChild = exports.appendChild = function (parentNode, newNode) {
	    parentNode.childNodes.push(newNode);
	    newNode.parentNode = parentNode;
	};

	var insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {
	    var insertionIdx = parentNode.childNodes.indexOf(referenceNode);

	    parentNode.childNodes.splice(insertionIdx, 0, newNode);
	    newNode.parentNode = parentNode;
	};

	exports.detachNode = function (node) {
	    if (node.parentNode) {
	        var idx = node.parentNode.childNodes.indexOf(node);

	        node.parentNode.childNodes.splice(idx, 1);
	        node.parentNode = null;
	    }
	};

	exports.insertText = function (parentNode, text) {
	    if (parentNode.childNodes.length) {
	        var prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];

	        if (prevNode.nodeName === '#text') {
	            prevNode.value += text;
	            return;
	        }
	    }

	    appendChild(parentNode, createTextNode(text));
	};

	exports.insertTextBefore = function (parentNode, text, referenceNode) {
	    var prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];

	    if (prevNode && prevNode.nodeName === '#text')
	        prevNode.value += text;
	    else
	        insertBefore(parentNode, createTextNode(text), referenceNode);
	};

	exports.adoptAttributes = function (recipientNode, attrs) {
	    var recipientAttrsMap = [];

	    for (var i = 0; i < recipientNode.attrs.length; i++)
	        recipientAttrsMap.push(recipientNode.attrs[i].name);

	    for (var j = 0; j < attrs.length; j++) {
	        if (recipientAttrsMap.indexOf(attrs[j].name) === -1)
	            recipientNode.attrs.push(attrs[j]);
	    }
	};


	//Tree traversing
	exports.getFirstChild = function (node) {
	    return node.childNodes[0];
	};

	exports.getChildNodes = function (node) {
	    return node.childNodes;
	};

	exports.getParentNode = function (node) {
	    return node.parentNode;
	};

	exports.getAttrList = function (node) {
	    return node.attrs;
	};

	//Node data
	exports.getTagName = function (element) {
	    return element.tagName;
	};

	exports.getNamespaceURI = function (element) {
	    return element.namespaceURI;
	};

	exports.getTextNodeContent = function (textNode) {
	    return textNode.value;
	};

	exports.getCommentNodeContent = function (commentNode) {
	    return commentNode.data;
	};

	exports.getDocumentTypeNodeName = function (doctypeNode) {
	    return doctypeNode.name;
	};

	exports.getDocumentTypeNodePublicId = function (doctypeNode) {
	    return doctypeNode.publicId;
	};

	exports.getDocumentTypeNodeSystemId = function (doctypeNode) {
	    return doctypeNode.systemId;
	};

	//Node types
	exports.isTextNode = function (node) {
	    return node.nodeName === '#text';
	};

	exports.isCommentNode = function (node) {
	    return node.nodeName === '#comment';
	};

	exports.isDocumentTypeNode = function (node) {
	    return node.nodeName === '#documentType';
	};

	exports.isElementNode = function (node) {
	    return !!node.tagName;
	};


/***/ },
/* 454 */
/***/ function(module, exports) {

	'use strict';

	//Const
	var VALID_DOCTYPE_NAME = 'html',
	    QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd',
	    QUIRKS_MODE_PUBLIC_ID_PREFIXES = [
	        "+//silmaril//dtd html pro v0r11 19970101//en",
	        "-//advasoft ltd//dtd html 3.0 aswedit + extensions//en",
	        "-//as//dtd html 3.0 aswedit + extensions//en",
	        "-//ietf//dtd html 2.0 level 1//en",
	        "-//ietf//dtd html 2.0 level 2//en",
	        "-//ietf//dtd html 2.0 strict level 1//en",
	        "-//ietf//dtd html 2.0 strict level 2//en",
	        "-//ietf//dtd html 2.0 strict//en",
	        "-//ietf//dtd html 2.0//en",
	        "-//ietf//dtd html 2.1e//en",
	        "-//ietf//dtd html 3.0//en",
	        "-//ietf//dtd html 3.0//en//",
	        "-//ietf//dtd html 3.2 final//en",
	        "-//ietf//dtd html 3.2//en",
	        "-//ietf//dtd html 3//en",
	        "-//ietf//dtd html level 0//en",
	        "-//ietf//dtd html level 0//en//2.0",
	        "-//ietf//dtd html level 1//en",
	        "-//ietf//dtd html level 1//en//2.0",
	        "-//ietf//dtd html level 2//en",
	        "-//ietf//dtd html level 2//en//2.0",
	        "-//ietf//dtd html level 3//en",
	        "-//ietf//dtd html level 3//en//3.0",
	        "-//ietf//dtd html strict level 0//en",
	        "-//ietf//dtd html strict level 0//en//2.0",
	        "-//ietf//dtd html strict level 1//en",
	        "-//ietf//dtd html strict level 1//en//2.0",
	        "-//ietf//dtd html strict level 2//en",
	        "-//ietf//dtd html strict level 2//en//2.0",
	        "-//ietf//dtd html strict level 3//en",
	        "-//ietf//dtd html strict level 3//en//3.0",
	        "-//ietf//dtd html strict//en",
	        "-//ietf//dtd html strict//en//2.0",
	        "-//ietf//dtd html strict//en//3.0",
	        "-//ietf//dtd html//en",
	        "-//ietf//dtd html//en//2.0",
	        "-//ietf//dtd html//en//3.0",
	        "-//metrius//dtd metrius presentational//en",
	        "-//microsoft//dtd internet explorer 2.0 html strict//en",
	        "-//microsoft//dtd internet explorer 2.0 html//en",
	        "-//microsoft//dtd internet explorer 2.0 tables//en",
	        "-//microsoft//dtd internet explorer 3.0 html strict//en",
	        "-//microsoft//dtd internet explorer 3.0 html//en",
	        "-//microsoft//dtd internet explorer 3.0 tables//en",
	        "-//netscape comm. corp.//dtd html//en",
	        "-//netscape comm. corp.//dtd strict html//en",
	        "-//o'reilly and associates//dtd html 2.0//en",
	        "-//o'reilly and associates//dtd html extended 1.0//en",
	        "-//spyglass//dtd html 2.0 extended//en",
	        "-//sq//dtd html 2.0 hotmetal + extensions//en",
	        "-//sun microsystems corp.//dtd hotjava html//en",
	        "-//sun microsystems corp.//dtd hotjava strict html//en",
	        "-//w3c//dtd html 3 1995-03-24//en",
	        "-//w3c//dtd html 3.2 draft//en",
	        "-//w3c//dtd html 3.2 final//en",
	        "-//w3c//dtd html 3.2//en",
	        "-//w3c//dtd html 3.2s draft//en",
	        "-//w3c//dtd html 4.0 frameset//en",
	        "-//w3c//dtd html 4.0 transitional//en",
	        "-//w3c//dtd html experimental 19960712//en",
	        "-//w3c//dtd html experimental 970421//en",
	        "-//w3c//dtd w3 html//en",
	        "-//w3o//dtd w3 html 3.0//en",
	        "-//w3o//dtd w3 html 3.0//en//",
	        "-//webtechs//dtd mozilla html 2.0//en",
	        "-//webtechs//dtd mozilla html//en"
	    ],
	    QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [
	        '-//w3c//dtd html 4.01 frameset//',
	        '-//w3c//dtd html 4.01 transitional//'
	    ],
	    QUIRKS_MODE_PUBLIC_IDS = [
	        '-//w3o//dtd w3 html strict 3.0//en//',
	        '-/w3c/dtd html 4.0 transitional/en',
	        'html'
	    ];


	//Utils
	function enquoteDoctypeId(id) {
	    var quote = id.indexOf('"') !== -1 ? '\'' : '"';

	    return quote + id + quote;
	}


	//API
	exports.isQuirks = function (name, publicId, systemId) {
	    if (name !== VALID_DOCTYPE_NAME)
	        return true;

	    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID)
	        return true;

	    if (publicId !== null) {
	        publicId = publicId.toLowerCase();

	        if (QUIRKS_MODE_PUBLIC_IDS.indexOf(publicId) > -1)
	            return true;

	        var prefixes = QUIRKS_MODE_PUBLIC_ID_PREFIXES;

	        if (systemId === null)
	            prefixes = prefixes.concat(QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES);

	        for (var i = 0; i < prefixes.length; i++) {
	            if (publicId.indexOf(prefixes[i]) === 0)
	                return true;
	        }
	    }

	    return false;
	};

	exports.serializeContent = function (name, publicId, systemId) {
	    var str = '!DOCTYPE ' + name;

	    if (publicId !== null)
	        str += ' PUBLIC ' + enquoteDoctypeId(publicId);

	    else if (systemId !== null)
	        str += ' SYSTEM';

	    if (systemId !== null)
	        str += ' ' + enquoteDoctypeId(systemId);

	    return str;
	};


/***/ },
/* 455 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Tokenizer = __webpack_require__(444),
	    HTML = __webpack_require__(450);

	//Aliases
	var $ = HTML.TAG_NAMES,
	    NS = HTML.NAMESPACES,
	    ATTRS = HTML.ATTRS;


	//MIME types
	var MIME_TYPES = {
	    TEXT_HTML: 'text/html',
	    APPLICATION_XML: 'application/xhtml+xml'
	};

	//Attributes
	var DEFINITION_URL_ATTR = 'definitionurl',
	    ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL',
	    SVG_ATTRS_ADJUSTMENT_MAP = {
	        'attributename': 'attributeName',
	        'attributetype': 'attributeType',
	        'basefrequency': 'baseFrequency',
	        'baseprofile': 'baseProfile',
	        'calcmode': 'calcMode',
	        'clippathunits': 'clipPathUnits',
	        'contentscripttype': 'contentScriptType',
	        'contentstyletype': 'contentStyleType',
	        'diffuseconstant': 'diffuseConstant',
	        'edgemode': 'edgeMode',
	        'externalresourcesrequired': 'externalResourcesRequired',
	        'filterres': 'filterRes',
	        'filterunits': 'filterUnits',
	        'glyphref': 'glyphRef',
	        'gradienttransform': 'gradientTransform',
	        'gradientunits': 'gradientUnits',
	        'kernelmatrix': 'kernelMatrix',
	        'kernelunitlength': 'kernelUnitLength',
	        'keypoints': 'keyPoints',
	        'keysplines': 'keySplines',
	        'keytimes': 'keyTimes',
	        'lengthadjust': 'lengthAdjust',
	        'limitingconeangle': 'limitingConeAngle',
	        'markerheight': 'markerHeight',
	        'markerunits': 'markerUnits',
	        'markerwidth': 'markerWidth',
	        'maskcontentunits': 'maskContentUnits',
	        'maskunits': 'maskUnits',
	        'numoctaves': 'numOctaves',
	        'pathlength': 'pathLength',
	        'patterncontentunits': 'patternContentUnits',
	        'patterntransform': 'patternTransform',
	        'patternunits': 'patternUnits',
	        'pointsatx': 'pointsAtX',
	        'pointsaty': 'pointsAtY',
	        'pointsatz': 'pointsAtZ',
	        'preservealpha': 'preserveAlpha',
	        'preserveaspectratio': 'preserveAspectRatio',
	        'primitiveunits': 'primitiveUnits',
	        'refx': 'refX',
	        'refy': 'refY',
	        'repeatcount': 'repeatCount',
	        'repeatdur': 'repeatDur',
	        'requiredextensions': 'requiredExtensions',
	        'requiredfeatures': 'requiredFeatures',
	        'specularconstant': 'specularConstant',
	        'specularexponent': 'specularExponent',
	        'spreadmethod': 'spreadMethod',
	        'startoffset': 'startOffset',
	        'stddeviation': 'stdDeviation',
	        'stitchtiles': 'stitchTiles',
	        'surfacescale': 'surfaceScale',
	        'systemlanguage': 'systemLanguage',
	        'tablevalues': 'tableValues',
	        'targetx': 'targetX',
	        'targety': 'targetY',
	        'textlength': 'textLength',
	        'viewbox': 'viewBox',
	        'viewtarget': 'viewTarget',
	        'xchannelselector': 'xChannelSelector',
	        'ychannelselector': 'yChannelSelector',
	        'zoomandpan': 'zoomAndPan'
	    },
	    XML_ATTRS_ADJUSTMENT_MAP = {
	        'xlink:actuate': {prefix: 'xlink', name: 'actuate', namespace: NS.XLINK},
	        'xlink:arcrole': {prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK},
	        'xlink:href': {prefix: 'xlink', name: 'href', namespace: NS.XLINK},
	        'xlink:role': {prefix: 'xlink', name: 'role', namespace: NS.XLINK},
	        'xlink:show': {prefix: 'xlink', name: 'show', namespace: NS.XLINK},
	        'xlink:title': {prefix: 'xlink', name: 'title', namespace: NS.XLINK},
	        'xlink:type': {prefix: 'xlink', name: 'type', namespace: NS.XLINK},
	        'xml:base': {prefix: 'xml', name: 'base', namespace: NS.XML},
	        'xml:lang': {prefix: 'xml', name: 'lang', namespace: NS.XML},
	        'xml:space': {prefix: 'xml', name: 'space', namespace: NS.XML},
	        'xmlns': {prefix: '', name: 'xmlns', namespace: NS.XMLNS},
	        'xmlns:xlink': {prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS}

	    };

	//SVG tag names adjustment map
	var SVG_TAG_NAMES_ADJUSTMENT_MAP = {
	    'altglyph': 'altGlyph',
	    'altglyphdef': 'altGlyphDef',
	    'altglyphitem': 'altGlyphItem',
	    'animatecolor': 'animateColor',
	    'animatemotion': 'animateMotion',
	    'animatetransform': 'animateTransform',
	    'clippath': 'clipPath',
	    'feblend': 'feBlend',
	    'fecolormatrix': 'feColorMatrix',
	    'fecomponenttransfer': 'feComponentTransfer',
	    'fecomposite': 'feComposite',
	    'feconvolvematrix': 'feConvolveMatrix',
	    'fediffuselighting': 'feDiffuseLighting',
	    'fedisplacementmap': 'feDisplacementMap',
	    'fedistantlight': 'feDistantLight',
	    'feflood': 'feFlood',
	    'fefunca': 'feFuncA',
	    'fefuncb': 'feFuncB',
	    'fefuncg': 'feFuncG',
	    'fefuncr': 'feFuncR',
	    'fegaussianblur': 'feGaussianBlur',
	    'feimage': 'feImage',
	    'femerge': 'feMerge',
	    'femergenode': 'feMergeNode',
	    'femorphology': 'feMorphology',
	    'feoffset': 'feOffset',
	    'fepointlight': 'fePointLight',
	    'fespecularlighting': 'feSpecularLighting',
	    'fespotlight': 'feSpotLight',
	    'fetile': 'feTile',
	    'feturbulence': 'feTurbulence',
	    'foreignobject': 'foreignObject',
	    'glyphref': 'glyphRef',
	    'lineargradient': 'linearGradient',
	    'radialgradient': 'radialGradient',
	    'textpath': 'textPath'
	};

	//Tags that causes exit from foreign content
	var EXITS_FOREIGN_CONTENT = {};

	EXITS_FOREIGN_CONTENT[$.B] = true;
	EXITS_FOREIGN_CONTENT[$.BIG] = true;
	EXITS_FOREIGN_CONTENT[$.BLOCKQUOTE] = true;
	EXITS_FOREIGN_CONTENT[$.BODY] = true;
	EXITS_FOREIGN_CONTENT[$.BR] = true;
	EXITS_FOREIGN_CONTENT[$.CENTER] = true;
	EXITS_FOREIGN_CONTENT[$.CODE] = true;
	EXITS_FOREIGN_CONTENT[$.DD] = true;
	EXITS_FOREIGN_CONTENT[$.DIV] = true;
	EXITS_FOREIGN_CONTENT[$.DL] = true;
	EXITS_FOREIGN_CONTENT[$.DT] = true;
	EXITS_FOREIGN_CONTENT[$.EM] = true;
	EXITS_FOREIGN_CONTENT[$.EMBED] = true;
	EXITS_FOREIGN_CONTENT[$.H1] = true;
	EXITS_FOREIGN_CONTENT[$.H2] = true;
	EXITS_FOREIGN_CONTENT[$.H3] = true;
	EXITS_FOREIGN_CONTENT[$.H4] = true;
	EXITS_FOREIGN_CONTENT[$.H5] = true;
	EXITS_FOREIGN_CONTENT[$.H6] = true;
	EXITS_FOREIGN_CONTENT[$.HEAD] = true;
	EXITS_FOREIGN_CONTENT[$.HR] = true;
	EXITS_FOREIGN_CONTENT[$.I] = true;
	EXITS_FOREIGN_CONTENT[$.IMG] = true;
	EXITS_FOREIGN_CONTENT[$.LI] = true;
	EXITS_FOREIGN_CONTENT[$.LISTING] = true;
	EXITS_FOREIGN_CONTENT[$.MENU] = true;
	EXITS_FOREIGN_CONTENT[$.META] = true;
	EXITS_FOREIGN_CONTENT[$.NOBR] = true;
	EXITS_FOREIGN_CONTENT[$.OL] = true;
	EXITS_FOREIGN_CONTENT[$.P] = true;
	EXITS_FOREIGN_CONTENT[$.PRE] = true;
	EXITS_FOREIGN_CONTENT[$.RUBY] = true;
	EXITS_FOREIGN_CONTENT[$.S] = true;
	EXITS_FOREIGN_CONTENT[$.SMALL] = true;
	EXITS_FOREIGN_CONTENT[$.SPAN] = true;
	EXITS_FOREIGN_CONTENT[$.STRONG] = true;
	EXITS_FOREIGN_CONTENT[$.STRIKE] = true;
	EXITS_FOREIGN_CONTENT[$.SUB] = true;
	EXITS_FOREIGN_CONTENT[$.SUP] = true;
	EXITS_FOREIGN_CONTENT[$.TABLE] = true;
	EXITS_FOREIGN_CONTENT[$.TT] = true;
	EXITS_FOREIGN_CONTENT[$.U] = true;
	EXITS_FOREIGN_CONTENT[$.UL] = true;
	EXITS_FOREIGN_CONTENT[$.VAR] = true;

	//Check exit from foreign content
	exports.causesExit = function (startTagToken) {
	    var tn = startTagToken.tagName;

	    if (tn === $.FONT && (Tokenizer.getTokenAttr(startTagToken, ATTRS.COLOR) !== null ||
	        Tokenizer.getTokenAttr(startTagToken, ATTRS.SIZE) !== null ||
	        Tokenizer.getTokenAttr(startTagToken, ATTRS.FACE) !== null)) {
	        return true;
	    }

	    return EXITS_FOREIGN_CONTENT[tn];
	};

	//Token adjustments
	exports.adjustTokenMathMLAttrs = function (token) {
	    for (var i = 0; i < token.attrs.length; i++) {
	        if (token.attrs[i].name === DEFINITION_URL_ATTR) {
	            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;
	            break;
	        }
	    }
	};

	exports.adjustTokenSVGAttrs = function (token) {
	    for (var i = 0; i < token.attrs.length; i++) {
	        var adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];

	        if (adjustedAttrName)
	            token.attrs[i].name = adjustedAttrName;
	    }
	};

	exports.adjustTokenXMLAttrs = function (token) {
	    for (var i = 0; i < token.attrs.length; i++) {
	        var adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP[token.attrs[i].name];

	        if (adjustedAttrEntry) {
	            token.attrs[i].prefix = adjustedAttrEntry.prefix;
	            token.attrs[i].name = adjustedAttrEntry.name;
	            token.attrs[i].namespace = adjustedAttrEntry.namespace;
	        }
	    }
	};

	exports.adjustTokenSVGTagName = function (token) {
	    var adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP[token.tagName];

	    if (adjustedTagName)
	        token.tagName = adjustedTagName;
	};

	//Integration points
	exports.isMathMLTextIntegrationPoint = function (tn, ns) {
	    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);
	};

	exports.isHtmlIntegrationPoint = function (tn, ns, attrs) {
	    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {
	        for (var i = 0; i < attrs.length; i++) {
	            if (attrs[i].name === ATTRS.ENCODING) {
	                var value = attrs[i].value.toLowerCase();

	                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;
	            }
	        }
	    }

	    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);
	};


/***/ },
/* 456 */
/***/ function(module, exports) {

	'use strict';

	exports.mergeOptions = function (defaults, options) {
	    options = options || {};

	    return [defaults, options].reduce(function (merged, optObj) {
	        Object.keys(optObj).forEach(function (key) {
	            merged[key] = optObj[key];
	        });

	        return merged;
	    }, {});
	};


/***/ },
/* 457 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Tokenizer = __webpack_require__(444),
	    TokenizerProxy = __webpack_require__(458),
	    Utils = __webpack_require__(456);

	//Default options
	var DEFAULT_OPTIONS = {
	    decodeHtmlEntities: true,
	    locationInfo: false
	};

	//Skipping handler
	function skip() {
	    //NOTE: do nothing =)
	}

	//SimpleApiParser
	var SimpleApiParser = module.exports = function (handlers, options) {
	    this.options = Utils.mergeOptions(DEFAULT_OPTIONS, options);
	    this.handlers = {
	        doctype: this._wrapHandler(handlers.doctype),
	        startTag: this._wrapHandler(handlers.startTag),
	        endTag: this._wrapHandler(handlers.endTag),
	        text: this._wrapHandler(handlers.text),
	        comment: this._wrapHandler(handlers.comment)
	    };
	};

	SimpleApiParser.prototype._wrapHandler = function (handler) {
	    var parser = this;

	    handler = handler || skip;

	    if (this.options.locationInfo) {
	        return function () {
	            var args = Array.prototype.slice.call(arguments);
	            args.push(parser.currentTokenLocation);
	            handler.apply(handler, args);
	        };
	    }

	    return handler;
	};

	//API
	SimpleApiParser.prototype.parse = function (html) {
	    var token = null;

	    this._reset(html);

	    do {
	        token = this.tokenizerProxy.getNextToken();

	        if (token.type === Tokenizer.CHARACTER_TOKEN ||
	            token.type === Tokenizer.WHITESPACE_CHARACTER_TOKEN ||
	            token.type === Tokenizer.NULL_CHARACTER_TOKEN) {

	            if (this.options.locationInfo) {
	                if (this.pendingText === null)
	                    this.currentTokenLocation = token.location;

	                else
	                    this.currentTokenLocation.end = token.location.end;
	            }

	            this.pendingText = (this.pendingText || '') + token.chars;
	        }

	        else {
	            this._emitPendingText();
	            this._handleToken(token);
	        }
	    } while (token.type !== Tokenizer.EOF_TOKEN);
	};

	//Internals
	SimpleApiParser.prototype._handleToken = function (token) {
	    if (this.options.locationInfo)
	        this.currentTokenLocation = token.location;

	    if (token.type === Tokenizer.START_TAG_TOKEN)
	        this.handlers.startTag(token.tagName, token.attrs, token.selfClosing);

	    else if (token.type === Tokenizer.END_TAG_TOKEN)
	        this.handlers.endTag(token.tagName);

	    else if (token.type === Tokenizer.COMMENT_TOKEN)
	        this.handlers.comment(token.data);

	    else if (token.type === Tokenizer.DOCTYPE_TOKEN)
	        this.handlers.doctype(token.name, token.publicId, token.systemId);

	};

	SimpleApiParser.prototype._reset = function (html) {
	    this.tokenizerProxy = new TokenizerProxy(html, this.options);
	    this.pendingText = null;
	    this.currentTokenLocation = null;
	};

	SimpleApiParser.prototype._emitPendingText = function () {
	    if (this.pendingText !== null) {
	        this.handlers.text(this.pendingText);
	        this.pendingText = null;
	    }
	};


/***/ },
/* 458 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Tokenizer = __webpack_require__(444),
	    ForeignContent = __webpack_require__(455),
	    UNICODE = __webpack_require__(446),
	    HTML = __webpack_require__(450);

	//Aliases
	var $ = HTML.TAG_NAMES,
	    NS = HTML.NAMESPACES;


	//Tokenizer proxy
	//NOTE: this proxy simulates adjustment of the Tokenizer which performed by standard parser during tree construction.
	var TokenizerProxy = module.exports = function (html, options) {
	    this.tokenizer = new Tokenizer(html, options);

	    this.namespaceStack = [];
	    this.namespaceStackTop = -1;
	    this.currentNamespace = null;
	    this.inForeignContent = false;
	};

	//API
	TokenizerProxy.prototype.getNextToken = function () {
	    var token = this.tokenizer.getNextToken();

	    if (token.type === Tokenizer.START_TAG_TOKEN)
	        this._handleStartTagToken(token);

	    else if (token.type === Tokenizer.END_TAG_TOKEN)
	        this._handleEndTagToken(token);

	    else if (token.type === Tokenizer.NULL_CHARACTER_TOKEN && this.inForeignContent) {
	        token.type = Tokenizer.CHARACTER_TOKEN;
	        token.chars = UNICODE.REPLACEMENT_CHARACTER;
	    }

	    return token;
	};

	//Namespace stack mutations
	TokenizerProxy.prototype._enterNamespace = function (namespace) {
	    this.namespaceStackTop++;
	    this.namespaceStack.push(namespace);

	    this.inForeignContent = namespace !== NS.HTML;
	    this.currentNamespace = namespace;
	    this.tokenizer.allowCDATA = this.inForeignContent;
	};

	TokenizerProxy.prototype._leaveCurrentNamespace = function () {
	    this.namespaceStackTop--;
	    this.namespaceStack.pop();

	    this.currentNamespace = this.namespaceStack[this.namespaceStackTop];
	    this.inForeignContent = this.currentNamespace !== NS.HTML;
	    this.tokenizer.allowCDATA = this.inForeignContent;
	};

	//Token handlers
	TokenizerProxy.prototype._ensureTokenizerMode = function (tn) {
	    if (tn === $.TEXTAREA || tn === $.TITLE)
	        this.tokenizer.state = Tokenizer.MODE.RCDATA;

	    else if (tn === $.PLAINTEXT)
	        this.tokenizer.state = Tokenizer.MODE.PLAINTEXT;

	    else if (tn === $.SCRIPT)
	        this.tokenizer.state = Tokenizer.MODE.SCRIPT_DATA;

	    else if (tn === $.STYLE || tn === $.IFRAME || tn === $.XMP ||
	             tn === $.NOEMBED || tn === $.NOFRAMES || tn === $.NOSCRIPT) {
	        this.tokenizer.state = Tokenizer.MODE.RAWTEXT;
	    }
	};

	TokenizerProxy.prototype._handleStartTagToken = function (token) {
	    var tn = token.tagName;

	    if (tn === $.SVG)
	        this._enterNamespace(NS.SVG);

	    else if (tn === $.MATH)
	        this._enterNamespace(NS.MATHML);

	    else {
	        if (this.inForeignContent) {
	            if (ForeignContent.causesExit(token))
	                this._leaveCurrentNamespace();

	            else if (ForeignContent.isMathMLTextIntegrationPoint(tn, this.currentNamespace) ||
	                     ForeignContent.isHtmlIntegrationPoint(tn, this.currentNamespace, token.attrs)) {
	                this._enterNamespace(NS.HTML);
	            }
	        }

	        else
	            this._ensureTokenizerMode(tn);
	    }
	};

	TokenizerProxy.prototype._handleEndTagToken = function (token) {
	    var tn = token.tagName;

	    if (!this.inForeignContent) {
	        var previousNs = this.namespaceStack[this.namespaceStackTop - 1];

	        //NOTE: check for exit from integration point
	        if (ForeignContent.isMathMLTextIntegrationPoint(tn, previousNs) ||
	            ForeignContent.isHtmlIntegrationPoint(tn, previousNs, token.attrs)) {
	            this._leaveCurrentNamespace();
	        }

	        else if (tn === $.SCRIPT)
	            this.tokenizer.state = Tokenizer.MODE.DATA;
	    }

	    else if ((tn === $.SVG && this.currentNamespace === NS.SVG) ||
	             (tn === $.MATH && this.currentNamespace === NS.MATHML))
	        this._leaveCurrentNamespace();
	};


/***/ },
/* 459 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var DefaultTreeAdapter = __webpack_require__(453),
	    Doctype = __webpack_require__(454),
	    Utils = __webpack_require__(456),
	    HTML = __webpack_require__(450);

	//Aliases
	var $ = HTML.TAG_NAMES,
	    NS = HTML.NAMESPACES;

	//Default serializer options
	var DEFAULT_OPTIONS = {
	    encodeHtmlEntities: true
	};

	//Escaping regexes
	var AMP_REGEX = /&/g,
	    NBSP_REGEX = /\u00a0/g,
	    DOUBLE_QUOTE_REGEX = /"/g,
	    LT_REGEX = /</g,
	    GT_REGEX = />/g;

	//Escape string
	function escapeString(str, attrMode) {
	    str = str
	        .replace(AMP_REGEX, '&amp;')
	        .replace(NBSP_REGEX, '&nbsp;');

	    if (attrMode)
	        str = str.replace(DOUBLE_QUOTE_REGEX, '&quot;');

	    else {
	        str = str
	            .replace(LT_REGEX, '&lt;')
	            .replace(GT_REGEX, '&gt;');
	    }

	    return str;
	}


	//Enquote doctype ID



	//Serializer
	var Serializer = module.exports = function (treeAdapter, options) {
	    this.treeAdapter = treeAdapter || DefaultTreeAdapter;
	    this.options = Utils.mergeOptions(DEFAULT_OPTIONS, options);
	};


	//API
	Serializer.prototype.serialize = function (node) {
	    this.html = '';
	    this._serializeChildNodes(node);

	    return this.html;
	};


	//Internals
	Serializer.prototype._serializeChildNodes = function (parentNode) {
	    var childNodes = this.treeAdapter.getChildNodes(parentNode);

	    if (childNodes) {
	        for (var i = 0, cnLength = childNodes.length; i < cnLength; i++) {
	            var currentNode = childNodes[i];

	            if (this.treeAdapter.isElementNode(currentNode))
	                this._serializeElement(currentNode);

	            else if (this.treeAdapter.isTextNode(currentNode))
	                this._serializeTextNode(currentNode);

	            else if (this.treeAdapter.isCommentNode(currentNode))
	                this._serializeCommentNode(currentNode);

	            else if (this.treeAdapter.isDocumentTypeNode(currentNode))
	                this._serializeDocumentTypeNode(currentNode);
	        }
	    }
	};

	Serializer.prototype._serializeElement = function (node) {
	    var tn = this.treeAdapter.getTagName(node),
	        ns = this.treeAdapter.getNamespaceURI(node),
	        qualifiedTn = (ns === NS.HTML || ns === NS.SVG || ns === NS.MATHML) ? tn : (ns + ':' + tn);

	    this.html += '<' + qualifiedTn;
	    this._serializeAttributes(node);
	    this.html += '>';

	    if (tn !== $.AREA && tn !== $.BASE && tn !== $.BASEFONT && tn !== $.BGSOUND && tn !== $.BR && tn !== $.BR &&
	        tn !== $.COL && tn !== $.EMBED && tn !== $.FRAME && tn !== $.HR && tn !== $.IMG && tn !== $.INPUT &&
	        tn !== $.KEYGEN && tn !== $.LINK && tn !== $.MENUITEM && tn !== $.META && tn !== $.PARAM && tn !== $.SOURCE &&
	        tn !== $.TRACK && tn !== $.WBR) {

	        if (tn === $.PRE || tn === $.TEXTAREA || tn === $.LISTING) {
	            var firstChild = this.treeAdapter.getFirstChild(node);

	            if (firstChild && this.treeAdapter.isTextNode(firstChild)) {
	                var content = this.treeAdapter.getTextNodeContent(firstChild);

	                if (content[0] === '\n')
	                    this.html += '\n';
	            }
	        }

	        var childNodesHolder = tn === $.TEMPLATE && ns === NS.HTML ?
	                               this.treeAdapter.getChildNodes(node)[0] :
	                               node;

	        this._serializeChildNodes(childNodesHolder);
	        this.html += '</' + qualifiedTn + '>';
	    }
	};

	Serializer.prototype._serializeAttributes = function (node) {
	    var attrs = this.treeAdapter.getAttrList(node);

	    for (var i = 0, attrsLength = attrs.length; i < attrsLength; i++) {
	        var attr = attrs[i],
	            value = this.options.encodeHtmlEntities ? escapeString(attr.value, true) : attr.value;

	        this.html += ' ';

	        if (!attr.namespace)
	            this.html += attr.name;

	        else if (attr.namespace === NS.XML)
	            this.html += 'xml:' + attr.name;

	        else if (attr.namespace === NS.XMLNS) {
	            if (attr.name !== 'xmlns')
	                this.html += 'xmlns:';

	            this.html += attr.name;
	        }

	        else if (attr.namespace === NS.XLINK)
	            this.html += 'xlink:' + attr.name;

	        else
	            this.html += attr.namespace + ':' + attr.name;

	        this.html += '="' + value + '"';
	    }
	};

	Serializer.prototype._serializeTextNode = function (node) {
	    var content = this.treeAdapter.getTextNodeContent(node),
	        parent = this.treeAdapter.getParentNode(node),
	        parentTn = void 0;

	    if (parent && this.treeAdapter.isElementNode(parent))
	        parentTn = this.treeAdapter.getTagName(parent);

	    if (parentTn === $.STYLE || parentTn === $.SCRIPT || parentTn === $.XMP || parentTn === $.IFRAME ||
	        parentTn === $.NOEMBED || parentTn === $.NOFRAMES || parentTn === $.PLAINTEXT || parentTn === $.NOSCRIPT) {
	        this.html += content;
	    }

	    else
	        this.html += this.options.encodeHtmlEntities ? escapeString(content, false) : content;
	};

	Serializer.prototype._serializeCommentNode = function (node) {
	    this.html += '<!--' + this.treeAdapter.getCommentNodeContent(node) + '-->';
	};

	Serializer.prototype._serializeDocumentTypeNode = function (node) {
	    var name = this.treeAdapter.getDocumentTypeNodeName(node),
	        publicId = this.treeAdapter.getDocumentTypeNodePublicId(node),
	        systemId = this.treeAdapter.getDocumentTypeNodeSystemId(node);

	    this.html += '<' + Doctype.serializeContent(name, publicId, systemId) + '>';
	};


/***/ },
/* 460 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Parser = __webpack_require__(443),
	    ParsingUnit = __webpack_require__(461);

	//API
	exports.parseDocument = function (html, treeAdapter) {
	    //NOTE: this should be reentrant, so we create new parser here
	    var parser = new Parser(treeAdapter),
	        parsingUnit = new ParsingUnit(parser);

	    //NOTE: override parser loop method
	    parser._runParsingLoop = function () {
	        parsingUnit.parsingLoopLock = true;

	        while (!parsingUnit.suspended && !this.stopped)
	            this._iterateParsingLoop();

	        parsingUnit.parsingLoopLock = false;

	        if (this.stopped)
	            parsingUnit.callback(this.document);
	    };

	    //NOTE: wait while parserController will be adopted by calling code, then
	    //start parsing
	    process.nextTick(function () {
	        parser.parse(html);
	    });

	    return parsingUnit;
	};

	exports.parseInnerHtml = function (innerHtml, contextElement, treeAdapter) {
	    //NOTE: this should be reentrant, so we create new parser here
	    var parser = new Parser(treeAdapter);

	    return parser.parseFragment(innerHtml, contextElement);
	};

/***/ },
/* 461 */
/***/ function(module, exports) {

	'use strict';

	var ParsingUnit = module.exports = function (parser) {
	    this.parser = parser;
	    this.suspended = false;
	    this.parsingLoopLock = false;
	    this.callback = null;
	};

	ParsingUnit.prototype._stateGuard = function (suspend) {
	    if (this.suspended && suspend)
	        throw new Error('parse5: Parser was already suspended. Please, check your control flow logic.');

	    else if (!this.suspended && !suspend)
	        throw new Error('parse5: Parser was already resumed. Please, check your control flow logic.');

	    return suspend;
	};

	ParsingUnit.prototype.suspend = function () {
	    this.suspended = this._stateGuard(true);

	    return this;
	};

	ParsingUnit.prototype.resume = function () {
	    this.suspended = this._stateGuard(false);

	    //NOTE: don't enter parsing loop if it is locked. Without this lock _runParsingLoop() may be called
	    //while parsing loop is still running. E.g. when suspend() and resume() called synchronously.
	    if (!this.parsingLoopLock)
	        this.parser._runParsingLoop();

	    return this;
	};

	ParsingUnit.prototype.documentWrite = function (html) {
	    this.parser.tokenizer.preprocessor.write(html);

	    return this;
	};

	ParsingUnit.prototype.handleScripts = function (scriptHandler) {
	    this.parser.scriptHandler = scriptHandler;

	    return this;
	};

	ParsingUnit.prototype.done = function (callback) {
	    this.callback = callback;

	    return this;
	};


/***/ },
/* 462 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	var Doctype = __webpack_require__(454);

	//Conversion tables for DOM Level1 structure emulation
	var nodeTypes = {
	    element: 1,
	    text: 3,
	    cdata: 4,
	    comment: 8
	};

	var nodePropertyShorthands = {
	    tagName: 'name',
	    childNodes: 'children',
	    parentNode: 'parent',
	    previousSibling: 'prev',
	    nextSibling: 'next',
	    nodeValue: 'data'
	};

	//Node
	var Node = function (props) {
	    for (var key in props) {
	        if (props.hasOwnProperty(key))
	            this[key] = props[key];
	    }
	};

	Node.prototype = {
	    get firstChild() {
	        var children = this.children;
	        return children && children[0] || null;
	    },

	    get lastChild() {
	        var children = this.children;
	        return children && children[children.length - 1] || null;
	    },

	    get nodeType() {
	        return nodeTypes[this.type] || nodeTypes.element;
	    }
	};

	Object.keys(nodePropertyShorthands).forEach(function (key) {
	    var shorthand = nodePropertyShorthands[key];

	    Object.defineProperty(Node.prototype, key, {
	        get: function () {
	            return this[shorthand] || null;
	        },
	        set: function (val) {
	            this[shorthand] = val;
	            return val;
	        }
	    });
	});


	//Node construction
	exports.createDocument =
	exports.createDocumentFragment = function () {
	    return new Node({
	        type: 'root',
	        name: 'root',
	        parent: null,
	        prev: null,
	        next: null,
	        children: []
	    });
	};

	exports.createElement = function (tagName, namespaceURI, attrs) {
	    var attribs = {},
	        attribsNamespace = {},
	        attribsPrefix = {};

	    for (var i = 0; i < attrs.length; i++) {
	        var attrName = attrs[i].name;

	        attribs[attrName] = attrs[i].value;
	        attribsNamespace[attrName] = attrs[i].namespace;
	        attribsPrefix[attrName] = attrs[i].prefix;
	    }

	    return new Node({
	        type: tagName === 'script' || tagName === 'style' ? tagName : 'tag',
	        name: tagName,
	        namespace: namespaceURI,
	        attribs: attribs,
	        'x-attribsNamespace': attribsNamespace,
	        'x-attribsPrefix': attribsPrefix,
	        children: [],
	        parent: null,
	        prev: null,
	        next: null
	    });
	};

	exports.createCommentNode = function (data) {
	    return new Node({
	        type: 'comment',
	        data: data,
	        parent: null,
	        prev: null,
	        next: null
	    });
	};

	var createTextNode = function (value) {
	    return new Node({
	        type: 'text',
	        data: value,
	        parent: null,
	        prev: null,
	        next: null
	    });
	};


	//Tree mutation
	exports.setDocumentType = function (document, name, publicId, systemId) {
	    var data = Doctype.serializeContent(name, publicId, systemId),
	        doctypeNode = null;

	    for (var i = 0; i < document.children.length; i++) {
	        if (document.children[i].type === 'directive' && document.children[i].name === '!doctype') {
	            doctypeNode = document.children[i];
	            break;
	        }
	    }

	    if (doctypeNode) {
	        doctypeNode.data = data;
	        doctypeNode['x-name'] = name;
	        doctypeNode['x-publicId'] = publicId;
	        doctypeNode['x-systemId'] = systemId;
	    }

	    else {
	        appendChild(document, new Node({
	            type: 'directive',
	            name: '!doctype',
	            data: data,
	            'x-name': name,
	            'x-publicId': publicId,
	            'x-systemId': systemId
	        }));
	    }

	};

	exports.setQuirksMode = function (document) {
	    document.quirksMode = true;
	};

	exports.isQuirksMode = function (document) {
	    return document.quirksMode;
	};

	var appendChild = exports.appendChild = function (parentNode, newNode) {
	    var prev = parentNode.children[parentNode.children.length - 1];

	    if (prev) {
	        prev.next = newNode;
	        newNode.prev = prev;
	    }

	    parentNode.children.push(newNode);
	    newNode.parent = parentNode;
	};

	var insertBefore = exports.insertBefore = function (parentNode, newNode, referenceNode) {
	    var insertionIdx = parentNode.children.indexOf(referenceNode),
	        prev = referenceNode.prev;

	    if (prev) {
	        prev.next = newNode;
	        newNode.prev = prev;
	    }

	    referenceNode.prev = newNode;
	    newNode.next = referenceNode;

	    parentNode.children.splice(insertionIdx, 0, newNode);
	    newNode.parent = parentNode;
	};

	exports.detachNode = function (node) {
	    if (node.parent) {
	        var idx = node.parent.children.indexOf(node),
	            prev = node.prev,
	            next = node.next;

	        node.prev = null;
	        node.next = null;

	        if (prev)
	            prev.next = next;

	        if (next)
	            next.prev = prev;

	        node.parent.children.splice(idx, 1);
	        node.parent = null;
	    }
	};

	exports.insertText = function (parentNode, text) {
	    var lastChild = parentNode.children[parentNode.children.length - 1];

	    if (lastChild && lastChild.type === 'text')
	        lastChild.data += text;
	    else
	        appendChild(parentNode, createTextNode(text));
	};

	exports.insertTextBefore = function (parentNode, text, referenceNode) {
	    var prevNode = parentNode.children[parentNode.children.indexOf(referenceNode) - 1];

	    if (prevNode && prevNode.type === 'text')
	        prevNode.data += text;
	    else
	        insertBefore(parentNode, createTextNode(text), referenceNode);
	};

	exports.adoptAttributes = function (recipientNode, attrs) {
	    for (var i = 0; i < attrs.length; i++) {
	        var attrName = attrs[i].name;

	        if (typeof recipientNode.attribs[attrName] === 'undefined') {
	            recipientNode.attribs[attrName] = attrs[i].value;
	            recipientNode['x-attribsNamespace'][attrName] = attrs[i].namespace;
	            recipientNode['x-attribsPrefix'][attrName] = attrs[i].prefix;
	        }
	    }
	};


	//Tree traversing
	exports.getFirstChild = function (node) {
	    return node.children[0];
	};

	exports.getChildNodes = function (node) {
	    return node.children;
	};

	exports.getParentNode = function (node) {
	    return node.parent;
	};

	exports.getAttrList = function (node) {
	    var attrList = [];

	    for (var name in node.attribs) {
	        if (node.attribs.hasOwnProperty(name)) {
	            attrList.push({
	                name: name,
	                value: node.attribs[name],
	                namespace: node['x-attribsNamespace'][name],
	                prefix: node['x-attribsPrefix'][name]
	            });
	        }
	    }

	    return attrList;
	};


	//Node data
	exports.getTagName = function (element) {
	    return element.name;
	};

	exports.getNamespaceURI = function (element) {
	    return element.namespace;
	};

	exports.getTextNodeContent = function (textNode) {
	    return textNode.data;
	};

	exports.getCommentNodeContent = function (commentNode) {
	    return commentNode.data;
	};

	exports.getDocumentTypeNodeName = function (doctypeNode) {
	    return doctypeNode['x-name'];
	};

	exports.getDocumentTypeNodePublicId = function (doctypeNode) {
	    return doctypeNode['x-publicId'];
	};

	exports.getDocumentTypeNodeSystemId = function (doctypeNode) {
	    return doctypeNode['x-systemId'];
	};


	//Node types
	exports.isTextNode = function (node) {
	    return node.type === 'text';
	};

	exports.isCommentNode = function (node) {
	    return node.type === 'comment';
	};

	exports.isDocumentTypeNode = function (node) {
	    return node.type === 'directive' && node.name === '!doctype';
	};

	exports.isElementNode = function (node) {
	    return !!node.attribs;
	};


/***/ },
/* 463 */
/***/ function(module, exports, __webpack_require__) {

	var Parser = __webpack_require__(464),
	    DomHandler = __webpack_require__(473);

	function defineProp(name, value){
		delete module.exports[name];
		module.exports[name] = value;
		return value;
	}

	module.exports = {
		Parser: Parser,
		Tokenizer: __webpack_require__(465),
		ElementType: __webpack_require__(474),
		DomHandler: DomHandler,
		get FeedHandler(){
			return defineProp("FeedHandler", __webpack_require__(477));
		},
		get Stream(){
			return defineProp("Stream", __webpack_require__(478));
		},
		get WritableStream(){
			return defineProp("WritableStream", __webpack_require__(479));
		},
		get ProxyHandler(){
			return defineProp("ProxyHandler", __webpack_require__(492));
		},
		get DomUtils(){
			return defineProp("DomUtils", __webpack_require__(493));
		},
		get CollectingHandler(){
			return defineProp("CollectingHandler", __webpack_require__(510));
		},
		// For legacy support
		DefaultHandler: DomHandler,
		get RssHandler(){
			return defineProp("RssHandler", this.FeedHandler);
		},
		//helper methods
		parseDOM: function(data, options){
			var handler = new DomHandler(options);
			new Parser(handler, options).end(data);
			return handler.dom;
		},
		parseFeed: function(feed, options){
			var handler = new module.exports.FeedHandler(options);
			new Parser(handler, options).end(feed);
			return handler.dom;
		},
		createDomStream: function(cb, options, elementCb){
			var handler = new DomHandler(cb, options, elementCb);
			return new Parser(handler, options);
		},
		// List of all events that the parser emits
		EVENTS: { /* Format: eventname: number of arguments */
			attribute: 2,
			cdatastart: 0,
			cdataend: 0,
			text: 1,
			processinginstruction: 2,
			comment: 1,
			commentend: 0,
			closetag: 1,
			opentag: 2,
			opentagname: 1,
			error: 1,
			end: 0
		}
	};


/***/ },
/* 464 */
/***/ function(module, exports, __webpack_require__) {

	var Tokenizer = __webpack_require__(465);

	/*
		Options:

		xmlMode: Disables the special behavior for script/style tags (false by default)
		lowerCaseAttributeNames: call .toLowerCase for each attribute name (true if xmlMode is `false`)
		lowerCaseTags: call .toLowerCase for each tag name (true if xmlMode is `false`)
	*/

	/*
		Callbacks:

		oncdataend,
		oncdatastart,
		onclosetag,
		oncomment,
		oncommentend,
		onerror,
		onopentag,
		onprocessinginstruction,
		onreset,
		ontext
	*/

	var formTags = {
		input: true,
		option: true,
		optgroup: true,
		select: true,
		button: true,
		datalist: true,
		textarea: true
	};

	var openImpliesClose = {
		tr      : { tr:true, th:true, td:true },
		th      : { th:true },
		td      : { thead:true, th:true, td:true },
		body    : { head:true, link:true, script:true },
		li      : { li:true },
		p       : { p:true },
		h1      : { p:true },
		h2      : { p:true },
		h3      : { p:true },
		h4      : { p:true },
		h5      : { p:true },
		h6      : { p:true },
		select  : formTags,
		input   : formTags,
		output  : formTags,
		button  : formTags,
		datalist: formTags,
		textarea: formTags,
		option  : { option:true },
		optgroup: { optgroup:true }
	};

	var voidElements = {
		__proto__: null,
		area: true,
		base: true,
		basefont: true,
		br: true,
		col: true,
		command: true,
		embed: true,
		frame: true,
		hr: true,
		img: true,
		input: true,
		isindex: true,
		keygen: true,
		link: true,
		meta: true,
		param: true,
		source: true,
		track: true,
		wbr: true,

		//common self closing svg elements
		path: true,
		circle: true,
		ellipse: true,
		line: true,
		rect: true,
		use: true,
		stop: true,
		polyline: true,
		polygon: true
	};

	var re_nameEnd = /\s|\//;

	function Parser(cbs, options){
		this._options = options || {};
		this._cbs = cbs || {};

		this._tagname = "";
		this._attribname = "";
		this._attribvalue = "";
		this._attribs = null;
		this._stack = [];

		this.startIndex = 0;
		this.endIndex = null;

		this._lowerCaseTagNames = "lowerCaseTags" in this._options ?
										!!this._options.lowerCaseTags :
										!this._options.xmlMode;
		this._lowerCaseAttributeNames = "lowerCaseAttributeNames" in this._options ?
										!!this._options.lowerCaseAttributeNames :
										!this._options.xmlMode;

		this._tokenizer = new Tokenizer(this._options, this);

		if(this._cbs.onparserinit) this._cbs.onparserinit(this);
	}

	__webpack_require__(471).inherits(Parser, __webpack_require__(472).EventEmitter);

	Parser.prototype._updatePosition = function(initialOffset){
		if(this.endIndex === null){
			if(this._tokenizer._sectionStart <= initialOffset){
				this.startIndex = 0;
			} else {
				this.startIndex = this._tokenizer._sectionStart - initialOffset;
			}
		}
		else this.startIndex = this.endIndex + 1;
		this.endIndex = this._tokenizer.getAbsoluteIndex();
	};

	//Tokenizer event handlers
	Parser.prototype.ontext = function(data){
		this._updatePosition(1);
		this.endIndex--;

		if(this._cbs.ontext) this._cbs.ontext(data);
	};

	Parser.prototype.onopentagname = function(name){
		if(this._lowerCaseTagNames){
			name = name.toLowerCase();
		}

		this._tagname = name;

		if(!this._options.xmlMode && name in openImpliesClose) {
			for(
				var el;
				(el = this._stack[this._stack.length - 1]) in openImpliesClose[name];
				this.onclosetag(el)
			);
		}

		if(this._options.xmlMode || !(name in voidElements)){
			this._stack.push(name);
		}

		if(this._cbs.onopentagname) this._cbs.onopentagname(name);
		if(this._cbs.onopentag) this._attribs = {};
	};

	Parser.prototype.onopentagend = function(){
		this._updatePosition(1);

		if(this._attribs){
			if(this._cbs.onopentag) this._cbs.onopentag(this._tagname, this._attribs);
			this._attribs = null;
		}

		if(!this._options.xmlMode && this._cbs.onclosetag && this._tagname in voidElements){
			this._cbs.onclosetag(this._tagname);
		}

		this._tagname = "";
	};

	Parser.prototype.onclosetag = function(name){
		this._updatePosition(1);

		if(this._lowerCaseTagNames){
			name = name.toLowerCase();
		}

		if(this._stack.length && (!(name in voidElements) || this._options.xmlMode)){
			var pos = this._stack.lastIndexOf(name);
			if(pos !== -1){
				if(this._cbs.onclosetag){
					pos = this._stack.length - pos;
					while(pos--) this._cbs.onclosetag(this._stack.pop());
				}
				else this._stack.length = pos;
			} else if(name === "p" && !this._options.xmlMode){
				this.onopentagname(name);
				this._closeCurrentTag();
			}
		} else if(!this._options.xmlMode && (name === "br" || name === "p")){
			this.onopentagname(name);
			this._closeCurrentTag();
		}
	};

	Parser.prototype.onselfclosingtag = function(){
		if(this._options.xmlMode || this._options.recognizeSelfClosing){
			this._closeCurrentTag();
		} else {
			this.onopentagend();
		}
	};

	Parser.prototype._closeCurrentTag = function(){
		var name = this._tagname;

		this.onopentagend();

		//self-closing tags will be on the top of the stack
		//(cheaper check than in onclosetag)
		if(this._stack[this._stack.length - 1] === name){
			if(this._cbs.onclosetag){
				this._cbs.onclosetag(name);
			}
			this._stack.pop();
		}
	};

	Parser.prototype.onattribname = function(name){
		if(this._lowerCaseAttributeNames){
			name = name.toLowerCase();
		}
		this._attribname = name;
	};

	Parser.prototype.onattribdata = function(value){
		this._attribvalue += value;
	};

	Parser.prototype.onattribend = function(){
		if(this._cbs.onattribute) this._cbs.onattribute(this._attribname, this._attribvalue);
		if(
			this._attribs &&
			!Object.prototype.hasOwnProperty.call(this._attribs, this._attribname)
		){
			this._attribs[this._attribname] = this._attribvalue;
		}
		this._attribname = "";
		this._attribvalue = "";
	};

	Parser.prototype._getInstructionName = function(value){
		var idx = value.search(re_nameEnd),
		    name = idx < 0 ? value : value.substr(0, idx);

		if(this._lowerCaseTagNames){
			name = name.toLowerCase();
		}

		return name;
	};

	Parser.prototype.ondeclaration = function(value){
		if(this._cbs.onprocessinginstruction){
			var name = this._getInstructionName(value);
			this._cbs.onprocessinginstruction("!" + name, "!" + value);
		}
	};

	Parser.prototype.onprocessinginstruction = function(value){
		if(this._cbs.onprocessinginstruction){
			var name = this._getInstructionName(value);
			this._cbs.onprocessinginstruction("?" + name, "?" + value);
		}
	};

	Parser.prototype.oncomment = function(value){
		this._updatePosition(4);

		if(this._cbs.oncomment) this._cbs.oncomment(value);
		if(this._cbs.oncommentend) this._cbs.oncommentend();
	};

	Parser.prototype.oncdata = function(value){
		this._updatePosition(1);

		if(this._options.xmlMode || this._options.recognizeCDATA){
			if(this._cbs.oncdatastart) this._cbs.oncdatastart();
			if(this._cbs.ontext) this._cbs.ontext(value);
			if(this._cbs.oncdataend) this._cbs.oncdataend();
		} else {
			this.oncomment("[CDATA[" + value + "]]");
		}
	};

	Parser.prototype.onerror = function(err){
		if(this._cbs.onerror) this._cbs.onerror(err);
	};

	Parser.prototype.onend = function(){
		if(this._cbs.onclosetag){
			for(
				var i = this._stack.length;
				i > 0;
				this._cbs.onclosetag(this._stack[--i])
			);
		}
		if(this._cbs.onend) this._cbs.onend();
	};


	//Resets the parser to a blank state, ready to parse a new HTML document
	Parser.prototype.reset = function(){
		if(this._cbs.onreset) this._cbs.onreset();
		this._tokenizer.reset();

		this._tagname = "";
		this._attribname = "";
		this._attribs = null;
		this._stack = [];

		if(this._cbs.onparserinit) this._cbs.onparserinit(this);
	};

	//Parses a complete HTML document and pushes it to the handler
	Parser.prototype.parseComplete = function(data){
		this.reset();
		this.end(data);
	};

	Parser.prototype.write = function(chunk){
		this._tokenizer.write(chunk);
	};

	Parser.prototype.end = function(chunk){
		this._tokenizer.end(chunk);
	};

	Parser.prototype.pause = function(){
		this._tokenizer.pause();
	};

	Parser.prototype.resume = function(){
		this._tokenizer.resume();
	};

	//alias for backwards compat
	Parser.prototype.parseChunk = Parser.prototype.write;
	Parser.prototype.done = Parser.prototype.end;

	module.exports = Parser;


/***/ },
/* 465 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = Tokenizer;

	var decodeCodePoint = __webpack_require__(466),
	    entityMap = __webpack_require__(468),
	    legacyMap = __webpack_require__(469),
	    xmlMap    = __webpack_require__(470),

	    i = 0,

	    TEXT                      = i++,
	    BEFORE_TAG_NAME           = i++, //after <
	    IN_TAG_NAME               = i++,
	    IN_SELF_CLOSING_TAG       = i++,
	    BEFORE_CLOSING_TAG_NAME   = i++,
	    IN_CLOSING_TAG_NAME       = i++,
	    AFTER_CLOSING_TAG_NAME    = i++,

	    //attributes
	    BEFORE_ATTRIBUTE_NAME     = i++,
	    IN_ATTRIBUTE_NAME         = i++,
	    AFTER_ATTRIBUTE_NAME      = i++,
	    BEFORE_ATTRIBUTE_VALUE    = i++,
	    IN_ATTRIBUTE_VALUE_DQ     = i++, // "
	    IN_ATTRIBUTE_VALUE_SQ     = i++, // '
	    IN_ATTRIBUTE_VALUE_NQ     = i++,

	    //declarations
	    BEFORE_DECLARATION        = i++, // !
	    IN_DECLARATION            = i++,

	    //processing instructions
	    IN_PROCESSING_INSTRUCTION = i++, // ?

	    //comments
	    BEFORE_COMMENT            = i++,
	    IN_COMMENT                = i++,
	    AFTER_COMMENT_1           = i++,
	    AFTER_COMMENT_2           = i++,

	    //cdata
	    BEFORE_CDATA_1            = i++, // [
	    BEFORE_CDATA_2            = i++, // C
	    BEFORE_CDATA_3            = i++, // D
	    BEFORE_CDATA_4            = i++, // A
	    BEFORE_CDATA_5            = i++, // T
	    BEFORE_CDATA_6            = i++, // A
	    IN_CDATA                  = i++, // [
	    AFTER_CDATA_1             = i++, // ]
	    AFTER_CDATA_2             = i++, // ]

	    //special tags
	    BEFORE_SPECIAL            = i++, //S
	    BEFORE_SPECIAL_END        = i++,   //S

	    BEFORE_SCRIPT_1           = i++, //C
	    BEFORE_SCRIPT_2           = i++, //R
	    BEFORE_SCRIPT_3           = i++, //I
	    BEFORE_SCRIPT_4           = i++, //P
	    BEFORE_SCRIPT_5           = i++, //T
	    AFTER_SCRIPT_1            = i++, //C
	    AFTER_SCRIPT_2            = i++, //R
	    AFTER_SCRIPT_3            = i++, //I
	    AFTER_SCRIPT_4            = i++, //P
	    AFTER_SCRIPT_5            = i++, //T

	    BEFORE_STYLE_1            = i++, //T
	    BEFORE_STYLE_2            = i++, //Y
	    BEFORE_STYLE_3            = i++, //L
	    BEFORE_STYLE_4            = i++, //E
	    AFTER_STYLE_1             = i++, //T
	    AFTER_STYLE_2             = i++, //Y
	    AFTER_STYLE_3             = i++, //L
	    AFTER_STYLE_4             = i++, //E

	    BEFORE_ENTITY             = i++, //&
	    BEFORE_NUMERIC_ENTITY     = i++, //#
	    IN_NAMED_ENTITY           = i++,
	    IN_NUMERIC_ENTITY         = i++,
	    IN_HEX_ENTITY             = i++, //X

	    j = 0,

	    SPECIAL_NONE              = j++,
	    SPECIAL_SCRIPT            = j++,
	    SPECIAL_STYLE             = j++;

	function whitespace(c){
		return c === " " || c === "\n" || c === "\t" || c === "\f" || c === "\r";
	}

	function characterState(char, SUCCESS){
		return function(c){
			if(c === char) this._state = SUCCESS;
		};
	}

	function ifElseState(upper, SUCCESS, FAILURE){
		var lower = upper.toLowerCase();

		if(upper === lower){
			return function(c){
				if(c === lower){
					this._state = SUCCESS;
				} else {
					this._state = FAILURE;
					this._index--;
				}
			};
		} else {
			return function(c){
				if(c === lower || c === upper){
					this._state = SUCCESS;
				} else {
					this._state = FAILURE;
					this._index--;
				}
			};
		}
	}

	function consumeSpecialNameChar(upper, NEXT_STATE){
		var lower = upper.toLowerCase();

		return function(c){
			if(c === lower || c === upper){
				this._state = NEXT_STATE;
			} else {
				this._state = IN_TAG_NAME;
				this._index--; //consume the token again
			}
		};
	}

	function Tokenizer(options, cbs){
		this._state = TEXT;
		this._buffer = "";
		this._sectionStart = 0;
		this._index = 0;
		this._bufferOffset = 0; //chars removed from _buffer
		this._baseState = TEXT;
		this._special = SPECIAL_NONE;
		this._cbs = cbs;
		this._running = true;
		this._ended = false;
		this._xmlMode = !!(options && options.xmlMode);
		this._decodeEntities = !!(options && options.decodeEntities);
	}

	Tokenizer.prototype._stateText = function(c){
		if(c === "<"){
			if(this._index > this._sectionStart){
				this._cbs.ontext(this._getSection());
			}
			this._state = BEFORE_TAG_NAME;
			this._sectionStart = this._index;
		} else if(this._decodeEntities && this._special === SPECIAL_NONE && c === "&"){
			if(this._index > this._sectionStart){
				this._cbs.ontext(this._getSection());
			}
			this._baseState = TEXT;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateBeforeTagName = function(c){
		if(c === "/"){
			this._state = BEFORE_CLOSING_TAG_NAME;
		} else if(c === ">" || this._special !== SPECIAL_NONE || whitespace(c)) {
			this._state = TEXT;
		} else if(c === "!"){
			this._state = BEFORE_DECLARATION;
			this._sectionStart = this._index + 1;
		} else if(c === "?"){
			this._state = IN_PROCESSING_INSTRUCTION;
			this._sectionStart = this._index + 1;
		} else if(c === "<"){
			this._cbs.ontext(this._getSection());
			this._sectionStart = this._index;
		} else {
			this._state = (!this._xmlMode && (c === "s" || c === "S")) ?
							BEFORE_SPECIAL : IN_TAG_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInTagName = function(c){
		if(c === "/" || c === ">" || whitespace(c)){
			this._emitToken("onopentagname");
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateBeforeCloseingTagName = function(c){
		if(whitespace(c));
		else if(c === ">"){
			this._state = TEXT;
		} else if(this._special !== SPECIAL_NONE){
			if(c === "s" || c === "S"){
				this._state = BEFORE_SPECIAL_END;
			} else {
				this._state = TEXT;
				this._index--;
			}
		} else {
			this._state = IN_CLOSING_TAG_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInCloseingTagName = function(c){
		if(c === ">" || whitespace(c)){
			this._emitToken("onclosetag");
			this._state = AFTER_CLOSING_TAG_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateAfterCloseingTagName = function(c){
		//skip everything until ">"
		if(c === ">"){
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		}
	};

	Tokenizer.prototype._stateBeforeAttributeName = function(c){
		if(c === ">"){
			this._cbs.onopentagend();
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(c === "/"){
			this._state = IN_SELF_CLOSING_TAG;
		} else if(!whitespace(c)){
			this._state = IN_ATTRIBUTE_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInSelfClosingTag = function(c){
		if(c === ">"){
			this._cbs.onselfclosingtag();
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(!whitespace(c)){
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateInAttributeName = function(c){
		if(c === "=" || c === "/" || c === ">" || whitespace(c)){
			this._cbs.onattribname(this._getSection());
			this._sectionStart = -1;
			this._state = AFTER_ATTRIBUTE_NAME;
			this._index--;
		}
	};

	Tokenizer.prototype._stateAfterAttributeName = function(c){
		if(c === "="){
			this._state = BEFORE_ATTRIBUTE_VALUE;
		} else if(c === "/" || c === ">"){
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		} else if(!whitespace(c)){
			this._cbs.onattribend();
			this._state = IN_ATTRIBUTE_NAME;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateBeforeAttributeValue = function(c){
		if(c === "\""){
			this._state = IN_ATTRIBUTE_VALUE_DQ;
			this._sectionStart = this._index + 1;
		} else if(c === "'"){
			this._state = IN_ATTRIBUTE_VALUE_SQ;
			this._sectionStart = this._index + 1;
		} else if(!whitespace(c)){
			this._state = IN_ATTRIBUTE_VALUE_NQ;
			this._sectionStart = this._index;
			this._index--; //reconsume token
		}
	};

	Tokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c){
		if(c === "\""){
			this._emitToken("onattribdata");
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
		} else if(this._decodeEntities && c === "&"){
			this._emitToken("onattribdata");
			this._baseState = this._state;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInAttributeValueSingleQuotes = function(c){
		if(c === "'"){
			this._emitToken("onattribdata");
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
		} else if(this._decodeEntities && c === "&"){
			this._emitToken("onattribdata");
			this._baseState = this._state;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateInAttributeValueNoQuotes = function(c){
		if(whitespace(c) || c === ">"){
			this._emitToken("onattribdata");
			this._cbs.onattribend();
			this._state = BEFORE_ATTRIBUTE_NAME;
			this._index--;
		} else if(this._decodeEntities && c === "&"){
			this._emitToken("onattribdata");
			this._baseState = this._state;
			this._state = BEFORE_ENTITY;
			this._sectionStart = this._index;
		}
	};

	Tokenizer.prototype._stateBeforeDeclaration = function(c){
		this._state = c === "[" ? BEFORE_CDATA_1 :
						c === "-" ? BEFORE_COMMENT :
							IN_DECLARATION;
	};

	Tokenizer.prototype._stateInDeclaration = function(c){
		if(c === ">"){
			this._cbs.ondeclaration(this._getSection());
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		}
	};

	Tokenizer.prototype._stateInProcessingInstruction = function(c){
		if(c === ">"){
			this._cbs.onprocessinginstruction(this._getSection());
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		}
	};

	Tokenizer.prototype._stateBeforeComment = function(c){
		if(c === "-"){
			this._state = IN_COMMENT;
			this._sectionStart = this._index + 1;
		} else {
			this._state = IN_DECLARATION;
		}
	};

	Tokenizer.prototype._stateInComment = function(c){
		if(c === "-") this._state = AFTER_COMMENT_1;
	};

	Tokenizer.prototype._stateAfterComment1 = function(c){
		if(c === "-"){
			this._state = AFTER_COMMENT_2;
		} else {
			this._state = IN_COMMENT;
		}
	};

	Tokenizer.prototype._stateAfterComment2 = function(c){
		if(c === ">"){
			//remove 2 trailing chars
			this._cbs.oncomment(this._buffer.substring(this._sectionStart, this._index - 2));
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(c !== "-"){
			this._state = IN_COMMENT;
		}
		// else: stay in AFTER_COMMENT_2 (`--->`)
	};

	Tokenizer.prototype._stateBeforeCdata1 = ifElseState("C", BEFORE_CDATA_2, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata2 = ifElseState("D", BEFORE_CDATA_3, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata3 = ifElseState("A", BEFORE_CDATA_4, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata4 = ifElseState("T", BEFORE_CDATA_5, IN_DECLARATION);
	Tokenizer.prototype._stateBeforeCdata5 = ifElseState("A", BEFORE_CDATA_6, IN_DECLARATION);

	Tokenizer.prototype._stateBeforeCdata6 = function(c){
		if(c === "["){
			this._state = IN_CDATA;
			this._sectionStart = this._index + 1;
		} else {
			this._state = IN_DECLARATION;
			this._index--;
		}
	};

	Tokenizer.prototype._stateInCdata = function(c){
		if(c === "]") this._state = AFTER_CDATA_1;
	};

	Tokenizer.prototype._stateAfterCdata1 = characterState("]", AFTER_CDATA_2);

	Tokenizer.prototype._stateAfterCdata2 = function(c){
		if(c === ">"){
			//remove 2 trailing chars
			this._cbs.oncdata(this._buffer.substring(this._sectionStart, this._index - 2));
			this._state = TEXT;
			this._sectionStart = this._index + 1;
		} else if(c !== "]") {
			this._state = IN_CDATA;
		}
		//else: stay in AFTER_CDATA_2 (`]]]>`)
	};

	Tokenizer.prototype._stateBeforeSpecial = function(c){
		if(c === "c" || c === "C"){
			this._state = BEFORE_SCRIPT_1;
		} else if(c === "t" || c === "T"){
			this._state = BEFORE_STYLE_1;
		} else {
			this._state = IN_TAG_NAME;
			this._index--; //consume the token again
		}
	};

	Tokenizer.prototype._stateBeforeSpecialEnd = function(c){
		if(this._special === SPECIAL_SCRIPT && (c === "c" || c === "C")){
			this._state = AFTER_SCRIPT_1;
		} else if(this._special === SPECIAL_STYLE && (c === "t" || c === "T")){
			this._state = AFTER_STYLE_1;
		}
		else this._state = TEXT;
	};

	Tokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar("R", BEFORE_SCRIPT_2);
	Tokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar("I", BEFORE_SCRIPT_3);
	Tokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar("P", BEFORE_SCRIPT_4);
	Tokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar("T", BEFORE_SCRIPT_5);

	Tokenizer.prototype._stateBeforeScript5 = function(c){
		if(c === "/" || c === ">" || whitespace(c)){
			this._special = SPECIAL_SCRIPT;
		}
		this._state = IN_TAG_NAME;
		this._index--; //consume the token again
	};

	Tokenizer.prototype._stateAfterScript1 = ifElseState("R", AFTER_SCRIPT_2, TEXT);
	Tokenizer.prototype._stateAfterScript2 = ifElseState("I", AFTER_SCRIPT_3, TEXT);
	Tokenizer.prototype._stateAfterScript3 = ifElseState("P", AFTER_SCRIPT_4, TEXT);
	Tokenizer.prototype._stateAfterScript4 = ifElseState("T", AFTER_SCRIPT_5, TEXT);

	Tokenizer.prototype._stateAfterScript5 = function(c){
		if(c === ">" || whitespace(c)){
			this._special = SPECIAL_NONE;
			this._state = IN_CLOSING_TAG_NAME;
			this._sectionStart = this._index - 6;
			this._index--; //reconsume the token
		}
		else this._state = TEXT;
	};

	Tokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar("Y", BEFORE_STYLE_2);
	Tokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar("L", BEFORE_STYLE_3);
	Tokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar("E", BEFORE_STYLE_4);

	Tokenizer.prototype._stateBeforeStyle4 = function(c){
		if(c === "/" || c === ">" || whitespace(c)){
			this._special = SPECIAL_STYLE;
		}
		this._state = IN_TAG_NAME;
		this._index--; //consume the token again
	};

	Tokenizer.prototype._stateAfterStyle1 = ifElseState("Y", AFTER_STYLE_2, TEXT);
	Tokenizer.prototype._stateAfterStyle2 = ifElseState("L", AFTER_STYLE_3, TEXT);
	Tokenizer.prototype._stateAfterStyle3 = ifElseState("E", AFTER_STYLE_4, TEXT);

	Tokenizer.prototype._stateAfterStyle4 = function(c){
		if(c === ">" || whitespace(c)){
			this._special = SPECIAL_NONE;
			this._state = IN_CLOSING_TAG_NAME;
			this._sectionStart = this._index - 5;
			this._index--; //reconsume the token
		}
		else this._state = TEXT;
	};

	Tokenizer.prototype._stateBeforeEntity = ifElseState("#", BEFORE_NUMERIC_ENTITY, IN_NAMED_ENTITY);
	Tokenizer.prototype._stateBeforeNumericEntity = ifElseState("X", IN_HEX_ENTITY, IN_NUMERIC_ENTITY);

	//for entities terminated with a semicolon
	Tokenizer.prototype._parseNamedEntityStrict = function(){
		//offset = 1
		if(this._sectionStart + 1 < this._index){
			var entity = this._buffer.substring(this._sectionStart + 1, this._index),
			    map = this._xmlMode ? xmlMap : entityMap;

			if(map.hasOwnProperty(entity)){
				this._emitPartial(map[entity]);
				this._sectionStart = this._index + 1;
			}
		}
	};


	//parses legacy entities (without trailing semicolon)
	Tokenizer.prototype._parseLegacyEntity = function(){
		var start = this._sectionStart + 1,
		    limit = this._index - start;

		if(limit > 6) limit = 6; //the max length of legacy entities is 6

		while(limit >= 2){ //the min length of legacy entities is 2
			var entity = this._buffer.substr(start, limit);

			if(legacyMap.hasOwnProperty(entity)){
				this._emitPartial(legacyMap[entity]);
				this._sectionStart += limit + 1;
				return;
			} else {
				limit--;
			}
		}
	};

	Tokenizer.prototype._stateInNamedEntity = function(c){
		if(c === ";"){
			this._parseNamedEntityStrict();
			if(this._sectionStart + 1 < this._index && !this._xmlMode){
				this._parseLegacyEntity();
			}
			this._state = this._baseState;
		} else if((c < "a" || c > "z") && (c < "A" || c > "Z") && (c < "0" || c > "9")){
			if(this._xmlMode);
			else if(this._sectionStart + 1 === this._index);
			else if(this._baseState !== TEXT){
				if(c !== "="){
					this._parseNamedEntityStrict();
				}
			} else {
				this._parseLegacyEntity();
			}

			this._state = this._baseState;
			this._index--;
		}
	};

	Tokenizer.prototype._decodeNumericEntity = function(offset, base){
		var sectionStart = this._sectionStart + offset;

		if(sectionStart !== this._index){
			//parse entity
			var entity = this._buffer.substring(sectionStart, this._index);
			var parsed = parseInt(entity, base);

			this._emitPartial(decodeCodePoint(parsed));
			this._sectionStart = this._index;
		} else {
			this._sectionStart--;
		}

		this._state = this._baseState;
	};

	Tokenizer.prototype._stateInNumericEntity = function(c){
		if(c === ";"){
			this._decodeNumericEntity(2, 10);
			this._sectionStart++;
		} else if(c < "0" || c > "9"){
			if(!this._xmlMode){
				this._decodeNumericEntity(2, 10);
			} else {
				this._state = this._baseState;
			}
			this._index--;
		}
	};

	Tokenizer.prototype._stateInHexEntity = function(c){
		if(c === ";"){
			this._decodeNumericEntity(3, 16);
			this._sectionStart++;
		} else if((c < "a" || c > "f") && (c < "A" || c > "F") && (c < "0" || c > "9")){
			if(!this._xmlMode){
				this._decodeNumericEntity(3, 16);
			} else {
				this._state = this._baseState;
			}
			this._index--;
		}
	};

	Tokenizer.prototype._cleanup = function (){
		if(this._sectionStart < 0){
			this._buffer = "";
			this._index = 0;
			this._bufferOffset += this._index;
		} else if(this._running){
			if(this._state === TEXT){
				if(this._sectionStart !== this._index){
					this._cbs.ontext(this._buffer.substr(this._sectionStart));
				}
				this._buffer = "";
				this._index = 0;
				this._bufferOffset += this._index;
			} else if(this._sectionStart === this._index){
				//the section just started
				this._buffer = "";
				this._index = 0;
				this._bufferOffset += this._index;
			} else {
				//remove everything unnecessary
				this._buffer = this._buffer.substr(this._sectionStart);
				this._index -= this._sectionStart;
				this._bufferOffset += this._sectionStart;
			}

			this._sectionStart = 0;
		}
	};

	//TODO make events conditional
	Tokenizer.prototype.write = function(chunk){
		if(this._ended) this._cbs.onerror(Error(".write() after done!"));

		this._buffer += chunk;
		this._parse();
	};

	Tokenizer.prototype._parse = function(){
		while(this._index < this._buffer.length && this._running){
			var c = this._buffer.charAt(this._index);
			if(this._state === TEXT) {
				this._stateText(c);
			} else if(this._state === BEFORE_TAG_NAME){
				this._stateBeforeTagName(c);
			} else if(this._state === IN_TAG_NAME) {
				this._stateInTagName(c);
			} else if(this._state === BEFORE_CLOSING_TAG_NAME){
				this._stateBeforeCloseingTagName(c);
			} else if(this._state === IN_CLOSING_TAG_NAME){
				this._stateInCloseingTagName(c);
			} else if(this._state === AFTER_CLOSING_TAG_NAME){
				this._stateAfterCloseingTagName(c);
			} else if(this._state === IN_SELF_CLOSING_TAG){
				this._stateInSelfClosingTag(c);
			}

			/*
			*	attributes
			*/
			else if(this._state === BEFORE_ATTRIBUTE_NAME){
				this._stateBeforeAttributeName(c);
			} else if(this._state === IN_ATTRIBUTE_NAME){
				this._stateInAttributeName(c);
			} else if(this._state === AFTER_ATTRIBUTE_NAME){
				this._stateAfterAttributeName(c);
			} else if(this._state === BEFORE_ATTRIBUTE_VALUE){
				this._stateBeforeAttributeValue(c);
			} else if(this._state === IN_ATTRIBUTE_VALUE_DQ){
				this._stateInAttributeValueDoubleQuotes(c);
			} else if(this._state === IN_ATTRIBUTE_VALUE_SQ){
				this._stateInAttributeValueSingleQuotes(c);
			} else if(this._state === IN_ATTRIBUTE_VALUE_NQ){
				this._stateInAttributeValueNoQuotes(c);
			}

			/*
			*	declarations
			*/
			else if(this._state === BEFORE_DECLARATION){
				this._stateBeforeDeclaration(c);
			} else if(this._state === IN_DECLARATION){
				this._stateInDeclaration(c);
			}

			/*
			*	processing instructions
			*/
			else if(this._state === IN_PROCESSING_INSTRUCTION){
				this._stateInProcessingInstruction(c);
			}

			/*
			*	comments
			*/
			else if(this._state === BEFORE_COMMENT){
				this._stateBeforeComment(c);
			} else if(this._state === IN_COMMENT){
				this._stateInComment(c);
			} else if(this._state === AFTER_COMMENT_1){
				this._stateAfterComment1(c);
			} else if(this._state === AFTER_COMMENT_2){
				this._stateAfterComment2(c);
			}

			/*
			*	cdata
			*/
			else if(this._state === BEFORE_CDATA_1){
				this._stateBeforeCdata1(c);
			} else if(this._state === BEFORE_CDATA_2){
				this._stateBeforeCdata2(c);
			} else if(this._state === BEFORE_CDATA_3){
				this._stateBeforeCdata3(c);
			} else if(this._state === BEFORE_CDATA_4){
				this._stateBeforeCdata4(c);
			} else if(this._state === BEFORE_CDATA_5){
				this._stateBeforeCdata5(c);
			} else if(this._state === BEFORE_CDATA_6){
				this._stateBeforeCdata6(c);
			} else if(this._state === IN_CDATA){
				this._stateInCdata(c);
			} else if(this._state === AFTER_CDATA_1){
				this._stateAfterCdata1(c);
			} else if(this._state === AFTER_CDATA_2){
				this._stateAfterCdata2(c);
			}

			/*
			* special tags
			*/
			else if(this._state === BEFORE_SPECIAL){
				this._stateBeforeSpecial(c);
			} else if(this._state === BEFORE_SPECIAL_END){
				this._stateBeforeSpecialEnd(c);
			}

			/*
			* script
			*/
			else if(this._state === BEFORE_SCRIPT_1){
				this._stateBeforeScript1(c);
			} else if(this._state === BEFORE_SCRIPT_2){
				this._stateBeforeScript2(c);
			} else if(this._state === BEFORE_SCRIPT_3){
				this._stateBeforeScript3(c);
			} else if(this._state === BEFORE_SCRIPT_4){
				this._stateBeforeScript4(c);
			} else if(this._state === BEFORE_SCRIPT_5){
				this._stateBeforeScript5(c);
			}

			else if(this._state === AFTER_SCRIPT_1){
				this._stateAfterScript1(c);
			} else if(this._state === AFTER_SCRIPT_2){
				this._stateAfterScript2(c);
			} else if(this._state === AFTER_SCRIPT_3){
				this._stateAfterScript3(c);
			} else if(this._state === AFTER_SCRIPT_4){
				this._stateAfterScript4(c);
			} else if(this._state === AFTER_SCRIPT_5){
				this._stateAfterScript5(c);
			}

			/*
			* style
			*/
			else if(this._state === BEFORE_STYLE_1){
				this._stateBeforeStyle1(c);
			} else if(this._state === BEFORE_STYLE_2){
				this._stateBeforeStyle2(c);
			} else if(this._state === BEFORE_STYLE_3){
				this._stateBeforeStyle3(c);
			} else if(this._state === BEFORE_STYLE_4){
				this._stateBeforeStyle4(c);
			}

			else if(this._state === AFTER_STYLE_1){
				this._stateAfterStyle1(c);
			} else if(this._state === AFTER_STYLE_2){
				this._stateAfterStyle2(c);
			} else if(this._state === AFTER_STYLE_3){
				this._stateAfterStyle3(c);
			} else if(this._state === AFTER_STYLE_4){
				this._stateAfterStyle4(c);
			}

			/*
			* entities
			*/
			else if(this._state === BEFORE_ENTITY){
				this._stateBeforeEntity(c);
			} else if(this._state === BEFORE_NUMERIC_ENTITY){
				this._stateBeforeNumericEntity(c);
			} else if(this._state === IN_NAMED_ENTITY){
				this._stateInNamedEntity(c);
			} else if(this._state === IN_NUMERIC_ENTITY){
				this._stateInNumericEntity(c);
			} else if(this._state === IN_HEX_ENTITY){
				this._stateInHexEntity(c);
			}

			else {
				this._cbs.onerror(Error("unknown _state"), this._state);
			}

			this._index++;
		}

		this._cleanup();
	};

	Tokenizer.prototype.pause = function(){
		this._running = false;
	};
	Tokenizer.prototype.resume = function(){
		this._running = true;

		if(this._index < this._buffer.length){
			this._parse();
		}
		if(this._ended){
			this._finish();
		}
	};

	Tokenizer.prototype.end = function(chunk){
		if(this._ended) this._cbs.onerror(Error(".end() after done!"));
		if(chunk) this.write(chunk);

		this._ended = true;

		if(this._running) this._finish();
	};

	Tokenizer.prototype._finish = function(){
		//if there is remaining data, emit it in a reasonable way
		if(this._sectionStart < this._index){
			this._handleTrailingData();
		}

		this._cbs.onend();
	};

	Tokenizer.prototype._handleTrailingData = function(){
		var data = this._buffer.substr(this._sectionStart);

		if(this._state === IN_CDATA || this._state === AFTER_CDATA_1 || this._state === AFTER_CDATA_2){
			this._cbs.oncdata(data);
		} else if(this._state === IN_COMMENT || this._state === AFTER_COMMENT_1 || this._state === AFTER_COMMENT_2){
			this._cbs.oncomment(data);
		} else if(this._state === IN_NAMED_ENTITY && !this._xmlMode){
			this._parseLegacyEntity();
			if(this._sectionStart < this._index){
				this._state = this._baseState;
				this._handleTrailingData();
			}
		} else if(this._state === IN_NUMERIC_ENTITY && !this._xmlMode){
			this._decodeNumericEntity(2, 10);
			if(this._sectionStart < this._index){
				this._state = this._baseState;
				this._handleTrailingData();
			}
		} else if(this._state === IN_HEX_ENTITY && !this._xmlMode){
			this._decodeNumericEntity(3, 16);
			if(this._sectionStart < this._index){
				this._state = this._baseState;
				this._handleTrailingData();
			}
		} else if(
			this._state !== IN_TAG_NAME &&
			this._state !== BEFORE_ATTRIBUTE_NAME &&
			this._state !== BEFORE_ATTRIBUTE_VALUE &&
			this._state !== AFTER_ATTRIBUTE_NAME &&
			this._state !== IN_ATTRIBUTE_NAME &&
			this._state !== IN_ATTRIBUTE_VALUE_SQ &&
			this._state !== IN_ATTRIBUTE_VALUE_DQ &&
			this._state !== IN_ATTRIBUTE_VALUE_NQ &&
			this._state !== IN_CLOSING_TAG_NAME
		){
			this._cbs.ontext(data);
		}
		//else, ignore remaining data
		//TODO add a way to remove current tag
	};

	Tokenizer.prototype.reset = function(){
		Tokenizer.call(this, {xmlMode: this._xmlMode, decodeEntities: this._decodeEntities}, this._cbs);
	};

	Tokenizer.prototype.getAbsoluteIndex = function(){
		return this._bufferOffset + this._index;
	};

	Tokenizer.prototype._getSection = function(){
		return this._buffer.substring(this._sectionStart, this._index);
	};

	Tokenizer.prototype._emitToken = function(name){
		this._cbs[name](this._getSection());
		this._sectionStart = -1;
	};

	Tokenizer.prototype._emitPartial = function(value){
		if(this._baseState !== TEXT){
			this._cbs.onattribdata(value); //TODO implement the new event
		} else {
			this._cbs.ontext(value);
		}
	};


/***/ },
/* 466 */
/***/ function(module, exports, __webpack_require__) {

	var decodeMap = __webpack_require__(467);

	module.exports = decodeCodePoint;

	// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
	function decodeCodePoint(codePoint){

		if((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){
			return "\uFFFD";
		}

		if(codePoint in decodeMap){
			codePoint = decodeMap[codePoint];
		}

		var output = "";

		if(codePoint > 0xFFFF){
			codePoint -= 0x10000;
			output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
			codePoint = 0xDC00 | codePoint & 0x3FF;
		}

		output += String.fromCharCode(codePoint);
		return output;
	}


/***/ },
/* 467 */
/***/ function(module, exports) {

	module.exports = {
		"0": 65533,
		"128": 8364,
		"130": 8218,
		"131": 402,
		"132": 8222,
		"133": 8230,
		"134": 8224,
		"135": 8225,
		"136": 710,
		"137": 8240,
		"138": 352,
		"139": 8249,
		"140": 338,
		"142": 381,
		"145": 8216,
		"146": 8217,
		"147": 8220,
		"148": 8221,
		"149": 8226,
		"150": 8211,
		"151": 8212,
		"152": 732,
		"153": 8482,
		"154": 353,
		"155": 8250,
		"156": 339,
		"158": 382,
		"159": 376
	}

/***/ },
/* 468 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Abreve": "Ă",
		"abreve": "ă",
		"ac": "∾",
		"acd": "∿",
		"acE": "∾̳",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"Acy": "А",
		"acy": "а",
		"AElig": "Æ",
		"aelig": "æ",
		"af": "⁡",
		"Afr": "𝔄",
		"afr": "𝔞",
		"Agrave": "À",
		"agrave": "à",
		"alefsym": "ℵ",
		"aleph": "ℵ",
		"Alpha": "Α",
		"alpha": "α",
		"Amacr": "Ā",
		"amacr": "ā",
		"amalg": "⨿",
		"amp": "&",
		"AMP": "&",
		"andand": "⩕",
		"And": "⩓",
		"and": "∧",
		"andd": "⩜",
		"andslope": "⩘",
		"andv": "⩚",
		"ang": "∠",
		"ange": "⦤",
		"angle": "∠",
		"angmsdaa": "⦨",
		"angmsdab": "⦩",
		"angmsdac": "⦪",
		"angmsdad": "⦫",
		"angmsdae": "⦬",
		"angmsdaf": "⦭",
		"angmsdag": "⦮",
		"angmsdah": "⦯",
		"angmsd": "∡",
		"angrt": "∟",
		"angrtvb": "⊾",
		"angrtvbd": "⦝",
		"angsph": "∢",
		"angst": "Å",
		"angzarr": "⍼",
		"Aogon": "Ą",
		"aogon": "ą",
		"Aopf": "𝔸",
		"aopf": "𝕒",
		"apacir": "⩯",
		"ap": "≈",
		"apE": "⩰",
		"ape": "≊",
		"apid": "≋",
		"apos": "'",
		"ApplyFunction": "⁡",
		"approx": "≈",
		"approxeq": "≊",
		"Aring": "Å",
		"aring": "å",
		"Ascr": "𝒜",
		"ascr": "𝒶",
		"Assign": "≔",
		"ast": "*",
		"asymp": "≈",
		"asympeq": "≍",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"awconint": "∳",
		"awint": "⨑",
		"backcong": "≌",
		"backepsilon": "϶",
		"backprime": "‵",
		"backsim": "∽",
		"backsimeq": "⋍",
		"Backslash": "∖",
		"Barv": "⫧",
		"barvee": "⊽",
		"barwed": "⌅",
		"Barwed": "⌆",
		"barwedge": "⌅",
		"bbrk": "⎵",
		"bbrktbrk": "⎶",
		"bcong": "≌",
		"Bcy": "Б",
		"bcy": "б",
		"bdquo": "„",
		"becaus": "∵",
		"because": "∵",
		"Because": "∵",
		"bemptyv": "⦰",
		"bepsi": "϶",
		"bernou": "ℬ",
		"Bernoullis": "ℬ",
		"Beta": "Β",
		"beta": "β",
		"beth": "ℶ",
		"between": "≬",
		"Bfr": "𝔅",
		"bfr": "𝔟",
		"bigcap": "⋂",
		"bigcirc": "◯",
		"bigcup": "⋃",
		"bigodot": "⨀",
		"bigoplus": "⨁",
		"bigotimes": "⨂",
		"bigsqcup": "⨆",
		"bigstar": "★",
		"bigtriangledown": "▽",
		"bigtriangleup": "△",
		"biguplus": "⨄",
		"bigvee": "⋁",
		"bigwedge": "⋀",
		"bkarow": "⤍",
		"blacklozenge": "⧫",
		"blacksquare": "▪",
		"blacktriangle": "▴",
		"blacktriangledown": "▾",
		"blacktriangleleft": "◂",
		"blacktriangleright": "▸",
		"blank": "␣",
		"blk12": "▒",
		"blk14": "░",
		"blk34": "▓",
		"block": "█",
		"bne": "=⃥",
		"bnequiv": "≡⃥",
		"bNot": "⫭",
		"bnot": "⌐",
		"Bopf": "𝔹",
		"bopf": "𝕓",
		"bot": "⊥",
		"bottom": "⊥",
		"bowtie": "⋈",
		"boxbox": "⧉",
		"boxdl": "┐",
		"boxdL": "╕",
		"boxDl": "╖",
		"boxDL": "╗",
		"boxdr": "┌",
		"boxdR": "╒",
		"boxDr": "╓",
		"boxDR": "╔",
		"boxh": "─",
		"boxH": "═",
		"boxhd": "┬",
		"boxHd": "╤",
		"boxhD": "╥",
		"boxHD": "╦",
		"boxhu": "┴",
		"boxHu": "╧",
		"boxhU": "╨",
		"boxHU": "╩",
		"boxminus": "⊟",
		"boxplus": "⊞",
		"boxtimes": "⊠",
		"boxul": "┘",
		"boxuL": "╛",
		"boxUl": "╜",
		"boxUL": "╝",
		"boxur": "└",
		"boxuR": "╘",
		"boxUr": "╙",
		"boxUR": "╚",
		"boxv": "│",
		"boxV": "║",
		"boxvh": "┼",
		"boxvH": "╪",
		"boxVh": "╫",
		"boxVH": "╬",
		"boxvl": "┤",
		"boxvL": "╡",
		"boxVl": "╢",
		"boxVL": "╣",
		"boxvr": "├",
		"boxvR": "╞",
		"boxVr": "╟",
		"boxVR": "╠",
		"bprime": "‵",
		"breve": "˘",
		"Breve": "˘",
		"brvbar": "¦",
		"bscr": "𝒷",
		"Bscr": "ℬ",
		"bsemi": "⁏",
		"bsim": "∽",
		"bsime": "⋍",
		"bsolb": "⧅",
		"bsol": "\\",
		"bsolhsub": "⟈",
		"bull": "•",
		"bullet": "•",
		"bump": "≎",
		"bumpE": "⪮",
		"bumpe": "≏",
		"Bumpeq": "≎",
		"bumpeq": "≏",
		"Cacute": "Ć",
		"cacute": "ć",
		"capand": "⩄",
		"capbrcup": "⩉",
		"capcap": "⩋",
		"cap": "∩",
		"Cap": "⋒",
		"capcup": "⩇",
		"capdot": "⩀",
		"CapitalDifferentialD": "ⅅ",
		"caps": "∩︀",
		"caret": "⁁",
		"caron": "ˇ",
		"Cayleys": "ℭ",
		"ccaps": "⩍",
		"Ccaron": "Č",
		"ccaron": "č",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"Ccirc": "Ĉ",
		"ccirc": "ĉ",
		"Cconint": "∰",
		"ccups": "⩌",
		"ccupssm": "⩐",
		"Cdot": "Ċ",
		"cdot": "ċ",
		"cedil": "¸",
		"Cedilla": "¸",
		"cemptyv": "⦲",
		"cent": "¢",
		"centerdot": "·",
		"CenterDot": "·",
		"cfr": "𝔠",
		"Cfr": "ℭ",
		"CHcy": "Ч",
		"chcy": "ч",
		"check": "✓",
		"checkmark": "✓",
		"Chi": "Χ",
		"chi": "χ",
		"circ": "ˆ",
		"circeq": "≗",
		"circlearrowleft": "↺",
		"circlearrowright": "↻",
		"circledast": "⊛",
		"circledcirc": "⊚",
		"circleddash": "⊝",
		"CircleDot": "⊙",
		"circledR": "®",
		"circledS": "Ⓢ",
		"CircleMinus": "⊖",
		"CirclePlus": "⊕",
		"CircleTimes": "⊗",
		"cir": "○",
		"cirE": "⧃",
		"cire": "≗",
		"cirfnint": "⨐",
		"cirmid": "⫯",
		"cirscir": "⧂",
		"ClockwiseContourIntegral": "∲",
		"CloseCurlyDoubleQuote": "”",
		"CloseCurlyQuote": "’",
		"clubs": "♣",
		"clubsuit": "♣",
		"colon": ":",
		"Colon": "∷",
		"Colone": "⩴",
		"colone": "≔",
		"coloneq": "≔",
		"comma": ",",
		"commat": "@",
		"comp": "∁",
		"compfn": "∘",
		"complement": "∁",
		"complexes": "ℂ",
		"cong": "≅",
		"congdot": "⩭",
		"Congruent": "≡",
		"conint": "∮",
		"Conint": "∯",
		"ContourIntegral": "∮",
		"copf": "𝕔",
		"Copf": "ℂ",
		"coprod": "∐",
		"Coproduct": "∐",
		"copy": "©",
		"COPY": "©",
		"copysr": "℗",
		"CounterClockwiseContourIntegral": "∳",
		"crarr": "↵",
		"cross": "✗",
		"Cross": "⨯",
		"Cscr": "𝒞",
		"cscr": "𝒸",
		"csub": "⫏",
		"csube": "⫑",
		"csup": "⫐",
		"csupe": "⫒",
		"ctdot": "⋯",
		"cudarrl": "⤸",
		"cudarrr": "⤵",
		"cuepr": "⋞",
		"cuesc": "⋟",
		"cularr": "↶",
		"cularrp": "⤽",
		"cupbrcap": "⩈",
		"cupcap": "⩆",
		"CupCap": "≍",
		"cup": "∪",
		"Cup": "⋓",
		"cupcup": "⩊",
		"cupdot": "⊍",
		"cupor": "⩅",
		"cups": "∪︀",
		"curarr": "↷",
		"curarrm": "⤼",
		"curlyeqprec": "⋞",
		"curlyeqsucc": "⋟",
		"curlyvee": "⋎",
		"curlywedge": "⋏",
		"curren": "¤",
		"curvearrowleft": "↶",
		"curvearrowright": "↷",
		"cuvee": "⋎",
		"cuwed": "⋏",
		"cwconint": "∲",
		"cwint": "∱",
		"cylcty": "⌭",
		"dagger": "†",
		"Dagger": "‡",
		"daleth": "ℸ",
		"darr": "↓",
		"Darr": "↡",
		"dArr": "⇓",
		"dash": "‐",
		"Dashv": "⫤",
		"dashv": "⊣",
		"dbkarow": "⤏",
		"dblac": "˝",
		"Dcaron": "Ď",
		"dcaron": "ď",
		"Dcy": "Д",
		"dcy": "д",
		"ddagger": "‡",
		"ddarr": "⇊",
		"DD": "ⅅ",
		"dd": "ⅆ",
		"DDotrahd": "⤑",
		"ddotseq": "⩷",
		"deg": "°",
		"Del": "∇",
		"Delta": "Δ",
		"delta": "δ",
		"demptyv": "⦱",
		"dfisht": "⥿",
		"Dfr": "𝔇",
		"dfr": "𝔡",
		"dHar": "⥥",
		"dharl": "⇃",
		"dharr": "⇂",
		"DiacriticalAcute": "´",
		"DiacriticalDot": "˙",
		"DiacriticalDoubleAcute": "˝",
		"DiacriticalGrave": "`",
		"DiacriticalTilde": "˜",
		"diam": "⋄",
		"diamond": "⋄",
		"Diamond": "⋄",
		"diamondsuit": "♦",
		"diams": "♦",
		"die": "¨",
		"DifferentialD": "ⅆ",
		"digamma": "ϝ",
		"disin": "⋲",
		"div": "÷",
		"divide": "÷",
		"divideontimes": "⋇",
		"divonx": "⋇",
		"DJcy": "Ђ",
		"djcy": "ђ",
		"dlcorn": "⌞",
		"dlcrop": "⌍",
		"dollar": "$",
		"Dopf": "𝔻",
		"dopf": "𝕕",
		"Dot": "¨",
		"dot": "˙",
		"DotDot": "⃜",
		"doteq": "≐",
		"doteqdot": "≑",
		"DotEqual": "≐",
		"dotminus": "∸",
		"dotplus": "∔",
		"dotsquare": "⊡",
		"doublebarwedge": "⌆",
		"DoubleContourIntegral": "∯",
		"DoubleDot": "¨",
		"DoubleDownArrow": "⇓",
		"DoubleLeftArrow": "⇐",
		"DoubleLeftRightArrow": "⇔",
		"DoubleLeftTee": "⫤",
		"DoubleLongLeftArrow": "⟸",
		"DoubleLongLeftRightArrow": "⟺",
		"DoubleLongRightArrow": "⟹",
		"DoubleRightArrow": "⇒",
		"DoubleRightTee": "⊨",
		"DoubleUpArrow": "⇑",
		"DoubleUpDownArrow": "⇕",
		"DoubleVerticalBar": "∥",
		"DownArrowBar": "⤓",
		"downarrow": "↓",
		"DownArrow": "↓",
		"Downarrow": "⇓",
		"DownArrowUpArrow": "⇵",
		"DownBreve": "̑",
		"downdownarrows": "⇊",
		"downharpoonleft": "⇃",
		"downharpoonright": "⇂",
		"DownLeftRightVector": "⥐",
		"DownLeftTeeVector": "⥞",
		"DownLeftVectorBar": "⥖",
		"DownLeftVector": "↽",
		"DownRightTeeVector": "⥟",
		"DownRightVectorBar": "⥗",
		"DownRightVector": "⇁",
		"DownTeeArrow": "↧",
		"DownTee": "⊤",
		"drbkarow": "⤐",
		"drcorn": "⌟",
		"drcrop": "⌌",
		"Dscr": "𝒟",
		"dscr": "𝒹",
		"DScy": "Ѕ",
		"dscy": "ѕ",
		"dsol": "⧶",
		"Dstrok": "Đ",
		"dstrok": "đ",
		"dtdot": "⋱",
		"dtri": "▿",
		"dtrif": "▾",
		"duarr": "⇵",
		"duhar": "⥯",
		"dwangle": "⦦",
		"DZcy": "Џ",
		"dzcy": "џ",
		"dzigrarr": "⟿",
		"Eacute": "É",
		"eacute": "é",
		"easter": "⩮",
		"Ecaron": "Ě",
		"ecaron": "ě",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"ecir": "≖",
		"ecolon": "≕",
		"Ecy": "Э",
		"ecy": "э",
		"eDDot": "⩷",
		"Edot": "Ė",
		"edot": "ė",
		"eDot": "≑",
		"ee": "ⅇ",
		"efDot": "≒",
		"Efr": "𝔈",
		"efr": "𝔢",
		"eg": "⪚",
		"Egrave": "È",
		"egrave": "è",
		"egs": "⪖",
		"egsdot": "⪘",
		"el": "⪙",
		"Element": "∈",
		"elinters": "⏧",
		"ell": "ℓ",
		"els": "⪕",
		"elsdot": "⪗",
		"Emacr": "Ē",
		"emacr": "ē",
		"empty": "∅",
		"emptyset": "∅",
		"EmptySmallSquare": "◻",
		"emptyv": "∅",
		"EmptyVerySmallSquare": "▫",
		"emsp13": " ",
		"emsp14": " ",
		"emsp": " ",
		"ENG": "Ŋ",
		"eng": "ŋ",
		"ensp": " ",
		"Eogon": "Ę",
		"eogon": "ę",
		"Eopf": "𝔼",
		"eopf": "𝕖",
		"epar": "⋕",
		"eparsl": "⧣",
		"eplus": "⩱",
		"epsi": "ε",
		"Epsilon": "Ε",
		"epsilon": "ε",
		"epsiv": "ϵ",
		"eqcirc": "≖",
		"eqcolon": "≕",
		"eqsim": "≂",
		"eqslantgtr": "⪖",
		"eqslantless": "⪕",
		"Equal": "⩵",
		"equals": "=",
		"EqualTilde": "≂",
		"equest": "≟",
		"Equilibrium": "⇌",
		"equiv": "≡",
		"equivDD": "⩸",
		"eqvparsl": "⧥",
		"erarr": "⥱",
		"erDot": "≓",
		"escr": "ℯ",
		"Escr": "ℰ",
		"esdot": "≐",
		"Esim": "⩳",
		"esim": "≂",
		"Eta": "Η",
		"eta": "η",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"euro": "€",
		"excl": "!",
		"exist": "∃",
		"Exists": "∃",
		"expectation": "ℰ",
		"exponentiale": "ⅇ",
		"ExponentialE": "ⅇ",
		"fallingdotseq": "≒",
		"Fcy": "Ф",
		"fcy": "ф",
		"female": "♀",
		"ffilig": "ﬃ",
		"fflig": "ﬀ",
		"ffllig": "ﬄ",
		"Ffr": "𝔉",
		"ffr": "𝔣",
		"filig": "ﬁ",
		"FilledSmallSquare": "◼",
		"FilledVerySmallSquare": "▪",
		"fjlig": "fj",
		"flat": "♭",
		"fllig": "ﬂ",
		"fltns": "▱",
		"fnof": "ƒ",
		"Fopf": "𝔽",
		"fopf": "𝕗",
		"forall": "∀",
		"ForAll": "∀",
		"fork": "⋔",
		"forkv": "⫙",
		"Fouriertrf": "ℱ",
		"fpartint": "⨍",
		"frac12": "½",
		"frac13": "⅓",
		"frac14": "¼",
		"frac15": "⅕",
		"frac16": "⅙",
		"frac18": "⅛",
		"frac23": "⅔",
		"frac25": "⅖",
		"frac34": "¾",
		"frac35": "⅗",
		"frac38": "⅜",
		"frac45": "⅘",
		"frac56": "⅚",
		"frac58": "⅝",
		"frac78": "⅞",
		"frasl": "⁄",
		"frown": "⌢",
		"fscr": "𝒻",
		"Fscr": "ℱ",
		"gacute": "ǵ",
		"Gamma": "Γ",
		"gamma": "γ",
		"Gammad": "Ϝ",
		"gammad": "ϝ",
		"gap": "⪆",
		"Gbreve": "Ğ",
		"gbreve": "ğ",
		"Gcedil": "Ģ",
		"Gcirc": "Ĝ",
		"gcirc": "ĝ",
		"Gcy": "Г",
		"gcy": "г",
		"Gdot": "Ġ",
		"gdot": "ġ",
		"ge": "≥",
		"gE": "≧",
		"gEl": "⪌",
		"gel": "⋛",
		"geq": "≥",
		"geqq": "≧",
		"geqslant": "⩾",
		"gescc": "⪩",
		"ges": "⩾",
		"gesdot": "⪀",
		"gesdoto": "⪂",
		"gesdotol": "⪄",
		"gesl": "⋛︀",
		"gesles": "⪔",
		"Gfr": "𝔊",
		"gfr": "𝔤",
		"gg": "≫",
		"Gg": "⋙",
		"ggg": "⋙",
		"gimel": "ℷ",
		"GJcy": "Ѓ",
		"gjcy": "ѓ",
		"gla": "⪥",
		"gl": "≷",
		"glE": "⪒",
		"glj": "⪤",
		"gnap": "⪊",
		"gnapprox": "⪊",
		"gne": "⪈",
		"gnE": "≩",
		"gneq": "⪈",
		"gneqq": "≩",
		"gnsim": "⋧",
		"Gopf": "𝔾",
		"gopf": "𝕘",
		"grave": "`",
		"GreaterEqual": "≥",
		"GreaterEqualLess": "⋛",
		"GreaterFullEqual": "≧",
		"GreaterGreater": "⪢",
		"GreaterLess": "≷",
		"GreaterSlantEqual": "⩾",
		"GreaterTilde": "≳",
		"Gscr": "𝒢",
		"gscr": "ℊ",
		"gsim": "≳",
		"gsime": "⪎",
		"gsiml": "⪐",
		"gtcc": "⪧",
		"gtcir": "⩺",
		"gt": ">",
		"GT": ">",
		"Gt": "≫",
		"gtdot": "⋗",
		"gtlPar": "⦕",
		"gtquest": "⩼",
		"gtrapprox": "⪆",
		"gtrarr": "⥸",
		"gtrdot": "⋗",
		"gtreqless": "⋛",
		"gtreqqless": "⪌",
		"gtrless": "≷",
		"gtrsim": "≳",
		"gvertneqq": "≩︀",
		"gvnE": "≩︀",
		"Hacek": "ˇ",
		"hairsp": " ",
		"half": "½",
		"hamilt": "ℋ",
		"HARDcy": "Ъ",
		"hardcy": "ъ",
		"harrcir": "⥈",
		"harr": "↔",
		"hArr": "⇔",
		"harrw": "↭",
		"Hat": "^",
		"hbar": "ℏ",
		"Hcirc": "Ĥ",
		"hcirc": "ĥ",
		"hearts": "♥",
		"heartsuit": "♥",
		"hellip": "…",
		"hercon": "⊹",
		"hfr": "𝔥",
		"Hfr": "ℌ",
		"HilbertSpace": "ℋ",
		"hksearow": "⤥",
		"hkswarow": "⤦",
		"hoarr": "⇿",
		"homtht": "∻",
		"hookleftarrow": "↩",
		"hookrightarrow": "↪",
		"hopf": "𝕙",
		"Hopf": "ℍ",
		"horbar": "―",
		"HorizontalLine": "─",
		"hscr": "𝒽",
		"Hscr": "ℋ",
		"hslash": "ℏ",
		"Hstrok": "Ħ",
		"hstrok": "ħ",
		"HumpDownHump": "≎",
		"HumpEqual": "≏",
		"hybull": "⁃",
		"hyphen": "‐",
		"Iacute": "Í",
		"iacute": "í",
		"ic": "⁣",
		"Icirc": "Î",
		"icirc": "î",
		"Icy": "И",
		"icy": "и",
		"Idot": "İ",
		"IEcy": "Е",
		"iecy": "е",
		"iexcl": "¡",
		"iff": "⇔",
		"ifr": "𝔦",
		"Ifr": "ℑ",
		"Igrave": "Ì",
		"igrave": "ì",
		"ii": "ⅈ",
		"iiiint": "⨌",
		"iiint": "∭",
		"iinfin": "⧜",
		"iiota": "℩",
		"IJlig": "Ĳ",
		"ijlig": "ĳ",
		"Imacr": "Ī",
		"imacr": "ī",
		"image": "ℑ",
		"ImaginaryI": "ⅈ",
		"imagline": "ℐ",
		"imagpart": "ℑ",
		"imath": "ı",
		"Im": "ℑ",
		"imof": "⊷",
		"imped": "Ƶ",
		"Implies": "⇒",
		"incare": "℅",
		"in": "∈",
		"infin": "∞",
		"infintie": "⧝",
		"inodot": "ı",
		"intcal": "⊺",
		"int": "∫",
		"Int": "∬",
		"integers": "ℤ",
		"Integral": "∫",
		"intercal": "⊺",
		"Intersection": "⋂",
		"intlarhk": "⨗",
		"intprod": "⨼",
		"InvisibleComma": "⁣",
		"InvisibleTimes": "⁢",
		"IOcy": "Ё",
		"iocy": "ё",
		"Iogon": "Į",
		"iogon": "į",
		"Iopf": "𝕀",
		"iopf": "𝕚",
		"Iota": "Ι",
		"iota": "ι",
		"iprod": "⨼",
		"iquest": "¿",
		"iscr": "𝒾",
		"Iscr": "ℐ",
		"isin": "∈",
		"isindot": "⋵",
		"isinE": "⋹",
		"isins": "⋴",
		"isinsv": "⋳",
		"isinv": "∈",
		"it": "⁢",
		"Itilde": "Ĩ",
		"itilde": "ĩ",
		"Iukcy": "І",
		"iukcy": "і",
		"Iuml": "Ï",
		"iuml": "ï",
		"Jcirc": "Ĵ",
		"jcirc": "ĵ",
		"Jcy": "Й",
		"jcy": "й",
		"Jfr": "𝔍",
		"jfr": "𝔧",
		"jmath": "ȷ",
		"Jopf": "𝕁",
		"jopf": "𝕛",
		"Jscr": "𝒥",
		"jscr": "𝒿",
		"Jsercy": "Ј",
		"jsercy": "ј",
		"Jukcy": "Є",
		"jukcy": "є",
		"Kappa": "Κ",
		"kappa": "κ",
		"kappav": "ϰ",
		"Kcedil": "Ķ",
		"kcedil": "ķ",
		"Kcy": "К",
		"kcy": "к",
		"Kfr": "𝔎",
		"kfr": "𝔨",
		"kgreen": "ĸ",
		"KHcy": "Х",
		"khcy": "х",
		"KJcy": "Ќ",
		"kjcy": "ќ",
		"Kopf": "𝕂",
		"kopf": "𝕜",
		"Kscr": "𝒦",
		"kscr": "𝓀",
		"lAarr": "⇚",
		"Lacute": "Ĺ",
		"lacute": "ĺ",
		"laemptyv": "⦴",
		"lagran": "ℒ",
		"Lambda": "Λ",
		"lambda": "λ",
		"lang": "⟨",
		"Lang": "⟪",
		"langd": "⦑",
		"langle": "⟨",
		"lap": "⪅",
		"Laplacetrf": "ℒ",
		"laquo": "«",
		"larrb": "⇤",
		"larrbfs": "⤟",
		"larr": "←",
		"Larr": "↞",
		"lArr": "⇐",
		"larrfs": "⤝",
		"larrhk": "↩",
		"larrlp": "↫",
		"larrpl": "⤹",
		"larrsim": "⥳",
		"larrtl": "↢",
		"latail": "⤙",
		"lAtail": "⤛",
		"lat": "⪫",
		"late": "⪭",
		"lates": "⪭︀",
		"lbarr": "⤌",
		"lBarr": "⤎",
		"lbbrk": "❲",
		"lbrace": "{",
		"lbrack": "[",
		"lbrke": "⦋",
		"lbrksld": "⦏",
		"lbrkslu": "⦍",
		"Lcaron": "Ľ",
		"lcaron": "ľ",
		"Lcedil": "Ļ",
		"lcedil": "ļ",
		"lceil": "⌈",
		"lcub": "{",
		"Lcy": "Л",
		"lcy": "л",
		"ldca": "⤶",
		"ldquo": "“",
		"ldquor": "„",
		"ldrdhar": "⥧",
		"ldrushar": "⥋",
		"ldsh": "↲",
		"le": "≤",
		"lE": "≦",
		"LeftAngleBracket": "⟨",
		"LeftArrowBar": "⇤",
		"leftarrow": "←",
		"LeftArrow": "←",
		"Leftarrow": "⇐",
		"LeftArrowRightArrow": "⇆",
		"leftarrowtail": "↢",
		"LeftCeiling": "⌈",
		"LeftDoubleBracket": "⟦",
		"LeftDownTeeVector": "⥡",
		"LeftDownVectorBar": "⥙",
		"LeftDownVector": "⇃",
		"LeftFloor": "⌊",
		"leftharpoondown": "↽",
		"leftharpoonup": "↼",
		"leftleftarrows": "⇇",
		"leftrightarrow": "↔",
		"LeftRightArrow": "↔",
		"Leftrightarrow": "⇔",
		"leftrightarrows": "⇆",
		"leftrightharpoons": "⇋",
		"leftrightsquigarrow": "↭",
		"LeftRightVector": "⥎",
		"LeftTeeArrow": "↤",
		"LeftTee": "⊣",
		"LeftTeeVector": "⥚",
		"leftthreetimes": "⋋",
		"LeftTriangleBar": "⧏",
		"LeftTriangle": "⊲",
		"LeftTriangleEqual": "⊴",
		"LeftUpDownVector": "⥑",
		"LeftUpTeeVector": "⥠",
		"LeftUpVectorBar": "⥘",
		"LeftUpVector": "↿",
		"LeftVectorBar": "⥒",
		"LeftVector": "↼",
		"lEg": "⪋",
		"leg": "⋚",
		"leq": "≤",
		"leqq": "≦",
		"leqslant": "⩽",
		"lescc": "⪨",
		"les": "⩽",
		"lesdot": "⩿",
		"lesdoto": "⪁",
		"lesdotor": "⪃",
		"lesg": "⋚︀",
		"lesges": "⪓",
		"lessapprox": "⪅",
		"lessdot": "⋖",
		"lesseqgtr": "⋚",
		"lesseqqgtr": "⪋",
		"LessEqualGreater": "⋚",
		"LessFullEqual": "≦",
		"LessGreater": "≶",
		"lessgtr": "≶",
		"LessLess": "⪡",
		"lesssim": "≲",
		"LessSlantEqual": "⩽",
		"LessTilde": "≲",
		"lfisht": "⥼",
		"lfloor": "⌊",
		"Lfr": "𝔏",
		"lfr": "𝔩",
		"lg": "≶",
		"lgE": "⪑",
		"lHar": "⥢",
		"lhard": "↽",
		"lharu": "↼",
		"lharul": "⥪",
		"lhblk": "▄",
		"LJcy": "Љ",
		"ljcy": "љ",
		"llarr": "⇇",
		"ll": "≪",
		"Ll": "⋘",
		"llcorner": "⌞",
		"Lleftarrow": "⇚",
		"llhard": "⥫",
		"lltri": "◺",
		"Lmidot": "Ŀ",
		"lmidot": "ŀ",
		"lmoustache": "⎰",
		"lmoust": "⎰",
		"lnap": "⪉",
		"lnapprox": "⪉",
		"lne": "⪇",
		"lnE": "≨",
		"lneq": "⪇",
		"lneqq": "≨",
		"lnsim": "⋦",
		"loang": "⟬",
		"loarr": "⇽",
		"lobrk": "⟦",
		"longleftarrow": "⟵",
		"LongLeftArrow": "⟵",
		"Longleftarrow": "⟸",
		"longleftrightarrow": "⟷",
		"LongLeftRightArrow": "⟷",
		"Longleftrightarrow": "⟺",
		"longmapsto": "⟼",
		"longrightarrow": "⟶",
		"LongRightArrow": "⟶",
		"Longrightarrow": "⟹",
		"looparrowleft": "↫",
		"looparrowright": "↬",
		"lopar": "⦅",
		"Lopf": "𝕃",
		"lopf": "𝕝",
		"loplus": "⨭",
		"lotimes": "⨴",
		"lowast": "∗",
		"lowbar": "_",
		"LowerLeftArrow": "↙",
		"LowerRightArrow": "↘",
		"loz": "◊",
		"lozenge": "◊",
		"lozf": "⧫",
		"lpar": "(",
		"lparlt": "⦓",
		"lrarr": "⇆",
		"lrcorner": "⌟",
		"lrhar": "⇋",
		"lrhard": "⥭",
		"lrm": "‎",
		"lrtri": "⊿",
		"lsaquo": "‹",
		"lscr": "𝓁",
		"Lscr": "ℒ",
		"lsh": "↰",
		"Lsh": "↰",
		"lsim": "≲",
		"lsime": "⪍",
		"lsimg": "⪏",
		"lsqb": "[",
		"lsquo": "‘",
		"lsquor": "‚",
		"Lstrok": "Ł",
		"lstrok": "ł",
		"ltcc": "⪦",
		"ltcir": "⩹",
		"lt": "<",
		"LT": "<",
		"Lt": "≪",
		"ltdot": "⋖",
		"lthree": "⋋",
		"ltimes": "⋉",
		"ltlarr": "⥶",
		"ltquest": "⩻",
		"ltri": "◃",
		"ltrie": "⊴",
		"ltrif": "◂",
		"ltrPar": "⦖",
		"lurdshar": "⥊",
		"luruhar": "⥦",
		"lvertneqq": "≨︀",
		"lvnE": "≨︀",
		"macr": "¯",
		"male": "♂",
		"malt": "✠",
		"maltese": "✠",
		"Map": "⤅",
		"map": "↦",
		"mapsto": "↦",
		"mapstodown": "↧",
		"mapstoleft": "↤",
		"mapstoup": "↥",
		"marker": "▮",
		"mcomma": "⨩",
		"Mcy": "М",
		"mcy": "м",
		"mdash": "—",
		"mDDot": "∺",
		"measuredangle": "∡",
		"MediumSpace": " ",
		"Mellintrf": "ℳ",
		"Mfr": "𝔐",
		"mfr": "𝔪",
		"mho": "℧",
		"micro": "µ",
		"midast": "*",
		"midcir": "⫰",
		"mid": "∣",
		"middot": "·",
		"minusb": "⊟",
		"minus": "−",
		"minusd": "∸",
		"minusdu": "⨪",
		"MinusPlus": "∓",
		"mlcp": "⫛",
		"mldr": "…",
		"mnplus": "∓",
		"models": "⊧",
		"Mopf": "𝕄",
		"mopf": "𝕞",
		"mp": "∓",
		"mscr": "𝓂",
		"Mscr": "ℳ",
		"mstpos": "∾",
		"Mu": "Μ",
		"mu": "μ",
		"multimap": "⊸",
		"mumap": "⊸",
		"nabla": "∇",
		"Nacute": "Ń",
		"nacute": "ń",
		"nang": "∠⃒",
		"nap": "≉",
		"napE": "⩰̸",
		"napid": "≋̸",
		"napos": "ŉ",
		"napprox": "≉",
		"natural": "♮",
		"naturals": "ℕ",
		"natur": "♮",
		"nbsp": " ",
		"nbump": "≎̸",
		"nbumpe": "≏̸",
		"ncap": "⩃",
		"Ncaron": "Ň",
		"ncaron": "ň",
		"Ncedil": "Ņ",
		"ncedil": "ņ",
		"ncong": "≇",
		"ncongdot": "⩭̸",
		"ncup": "⩂",
		"Ncy": "Н",
		"ncy": "н",
		"ndash": "–",
		"nearhk": "⤤",
		"nearr": "↗",
		"neArr": "⇗",
		"nearrow": "↗",
		"ne": "≠",
		"nedot": "≐̸",
		"NegativeMediumSpace": "​",
		"NegativeThickSpace": "​",
		"NegativeThinSpace": "​",
		"NegativeVeryThinSpace": "​",
		"nequiv": "≢",
		"nesear": "⤨",
		"nesim": "≂̸",
		"NestedGreaterGreater": "≫",
		"NestedLessLess": "≪",
		"NewLine": "\n",
		"nexist": "∄",
		"nexists": "∄",
		"Nfr": "𝔑",
		"nfr": "𝔫",
		"ngE": "≧̸",
		"nge": "≱",
		"ngeq": "≱",
		"ngeqq": "≧̸",
		"ngeqslant": "⩾̸",
		"nges": "⩾̸",
		"nGg": "⋙̸",
		"ngsim": "≵",
		"nGt": "≫⃒",
		"ngt": "≯",
		"ngtr": "≯",
		"nGtv": "≫̸",
		"nharr": "↮",
		"nhArr": "⇎",
		"nhpar": "⫲",
		"ni": "∋",
		"nis": "⋼",
		"nisd": "⋺",
		"niv": "∋",
		"NJcy": "Њ",
		"njcy": "њ",
		"nlarr": "↚",
		"nlArr": "⇍",
		"nldr": "‥",
		"nlE": "≦̸",
		"nle": "≰",
		"nleftarrow": "↚",
		"nLeftarrow": "⇍",
		"nleftrightarrow": "↮",
		"nLeftrightarrow": "⇎",
		"nleq": "≰",
		"nleqq": "≦̸",
		"nleqslant": "⩽̸",
		"nles": "⩽̸",
		"nless": "≮",
		"nLl": "⋘̸",
		"nlsim": "≴",
		"nLt": "≪⃒",
		"nlt": "≮",
		"nltri": "⋪",
		"nltrie": "⋬",
		"nLtv": "≪̸",
		"nmid": "∤",
		"NoBreak": "⁠",
		"NonBreakingSpace": " ",
		"nopf": "𝕟",
		"Nopf": "ℕ",
		"Not": "⫬",
		"not": "¬",
		"NotCongruent": "≢",
		"NotCupCap": "≭",
		"NotDoubleVerticalBar": "∦",
		"NotElement": "∉",
		"NotEqual": "≠",
		"NotEqualTilde": "≂̸",
		"NotExists": "∄",
		"NotGreater": "≯",
		"NotGreaterEqual": "≱",
		"NotGreaterFullEqual": "≧̸",
		"NotGreaterGreater": "≫̸",
		"NotGreaterLess": "≹",
		"NotGreaterSlantEqual": "⩾̸",
		"NotGreaterTilde": "≵",
		"NotHumpDownHump": "≎̸",
		"NotHumpEqual": "≏̸",
		"notin": "∉",
		"notindot": "⋵̸",
		"notinE": "⋹̸",
		"notinva": "∉",
		"notinvb": "⋷",
		"notinvc": "⋶",
		"NotLeftTriangleBar": "⧏̸",
		"NotLeftTriangle": "⋪",
		"NotLeftTriangleEqual": "⋬",
		"NotLess": "≮",
		"NotLessEqual": "≰",
		"NotLessGreater": "≸",
		"NotLessLess": "≪̸",
		"NotLessSlantEqual": "⩽̸",
		"NotLessTilde": "≴",
		"NotNestedGreaterGreater": "⪢̸",
		"NotNestedLessLess": "⪡̸",
		"notni": "∌",
		"notniva": "∌",
		"notnivb": "⋾",
		"notnivc": "⋽",
		"NotPrecedes": "⊀",
		"NotPrecedesEqual": "⪯̸",
		"NotPrecedesSlantEqual": "⋠",
		"NotReverseElement": "∌",
		"NotRightTriangleBar": "⧐̸",
		"NotRightTriangle": "⋫",
		"NotRightTriangleEqual": "⋭",
		"NotSquareSubset": "⊏̸",
		"NotSquareSubsetEqual": "⋢",
		"NotSquareSuperset": "⊐̸",
		"NotSquareSupersetEqual": "⋣",
		"NotSubset": "⊂⃒",
		"NotSubsetEqual": "⊈",
		"NotSucceeds": "⊁",
		"NotSucceedsEqual": "⪰̸",
		"NotSucceedsSlantEqual": "⋡",
		"NotSucceedsTilde": "≿̸",
		"NotSuperset": "⊃⃒",
		"NotSupersetEqual": "⊉",
		"NotTilde": "≁",
		"NotTildeEqual": "≄",
		"NotTildeFullEqual": "≇",
		"NotTildeTilde": "≉",
		"NotVerticalBar": "∤",
		"nparallel": "∦",
		"npar": "∦",
		"nparsl": "⫽⃥",
		"npart": "∂̸",
		"npolint": "⨔",
		"npr": "⊀",
		"nprcue": "⋠",
		"nprec": "⊀",
		"npreceq": "⪯̸",
		"npre": "⪯̸",
		"nrarrc": "⤳̸",
		"nrarr": "↛",
		"nrArr": "⇏",
		"nrarrw": "↝̸",
		"nrightarrow": "↛",
		"nRightarrow": "⇏",
		"nrtri": "⋫",
		"nrtrie": "⋭",
		"nsc": "⊁",
		"nsccue": "⋡",
		"nsce": "⪰̸",
		"Nscr": "𝒩",
		"nscr": "𝓃",
		"nshortmid": "∤",
		"nshortparallel": "∦",
		"nsim": "≁",
		"nsime": "≄",
		"nsimeq": "≄",
		"nsmid": "∤",
		"nspar": "∦",
		"nsqsube": "⋢",
		"nsqsupe": "⋣",
		"nsub": "⊄",
		"nsubE": "⫅̸",
		"nsube": "⊈",
		"nsubset": "⊂⃒",
		"nsubseteq": "⊈",
		"nsubseteqq": "⫅̸",
		"nsucc": "⊁",
		"nsucceq": "⪰̸",
		"nsup": "⊅",
		"nsupE": "⫆̸",
		"nsupe": "⊉",
		"nsupset": "⊃⃒",
		"nsupseteq": "⊉",
		"nsupseteqq": "⫆̸",
		"ntgl": "≹",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"ntlg": "≸",
		"ntriangleleft": "⋪",
		"ntrianglelefteq": "⋬",
		"ntriangleright": "⋫",
		"ntrianglerighteq": "⋭",
		"Nu": "Ν",
		"nu": "ν",
		"num": "#",
		"numero": "№",
		"numsp": " ",
		"nvap": "≍⃒",
		"nvdash": "⊬",
		"nvDash": "⊭",
		"nVdash": "⊮",
		"nVDash": "⊯",
		"nvge": "≥⃒",
		"nvgt": ">⃒",
		"nvHarr": "⤄",
		"nvinfin": "⧞",
		"nvlArr": "⤂",
		"nvle": "≤⃒",
		"nvlt": "<⃒",
		"nvltrie": "⊴⃒",
		"nvrArr": "⤃",
		"nvrtrie": "⊵⃒",
		"nvsim": "∼⃒",
		"nwarhk": "⤣",
		"nwarr": "↖",
		"nwArr": "⇖",
		"nwarrow": "↖",
		"nwnear": "⤧",
		"Oacute": "Ó",
		"oacute": "ó",
		"oast": "⊛",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"ocir": "⊚",
		"Ocy": "О",
		"ocy": "о",
		"odash": "⊝",
		"Odblac": "Ő",
		"odblac": "ő",
		"odiv": "⨸",
		"odot": "⊙",
		"odsold": "⦼",
		"OElig": "Œ",
		"oelig": "œ",
		"ofcir": "⦿",
		"Ofr": "𝔒",
		"ofr": "𝔬",
		"ogon": "˛",
		"Ograve": "Ò",
		"ograve": "ò",
		"ogt": "⧁",
		"ohbar": "⦵",
		"ohm": "Ω",
		"oint": "∮",
		"olarr": "↺",
		"olcir": "⦾",
		"olcross": "⦻",
		"oline": "‾",
		"olt": "⧀",
		"Omacr": "Ō",
		"omacr": "ō",
		"Omega": "Ω",
		"omega": "ω",
		"Omicron": "Ο",
		"omicron": "ο",
		"omid": "⦶",
		"ominus": "⊖",
		"Oopf": "𝕆",
		"oopf": "𝕠",
		"opar": "⦷",
		"OpenCurlyDoubleQuote": "“",
		"OpenCurlyQuote": "‘",
		"operp": "⦹",
		"oplus": "⊕",
		"orarr": "↻",
		"Or": "⩔",
		"or": "∨",
		"ord": "⩝",
		"order": "ℴ",
		"orderof": "ℴ",
		"ordf": "ª",
		"ordm": "º",
		"origof": "⊶",
		"oror": "⩖",
		"orslope": "⩗",
		"orv": "⩛",
		"oS": "Ⓢ",
		"Oscr": "𝒪",
		"oscr": "ℴ",
		"Oslash": "Ø",
		"oslash": "ø",
		"osol": "⊘",
		"Otilde": "Õ",
		"otilde": "õ",
		"otimesas": "⨶",
		"Otimes": "⨷",
		"otimes": "⊗",
		"Ouml": "Ö",
		"ouml": "ö",
		"ovbar": "⌽",
		"OverBar": "‾",
		"OverBrace": "⏞",
		"OverBracket": "⎴",
		"OverParenthesis": "⏜",
		"para": "¶",
		"parallel": "∥",
		"par": "∥",
		"parsim": "⫳",
		"parsl": "⫽",
		"part": "∂",
		"PartialD": "∂",
		"Pcy": "П",
		"pcy": "п",
		"percnt": "%",
		"period": ".",
		"permil": "‰",
		"perp": "⊥",
		"pertenk": "‱",
		"Pfr": "𝔓",
		"pfr": "𝔭",
		"Phi": "Φ",
		"phi": "φ",
		"phiv": "ϕ",
		"phmmat": "ℳ",
		"phone": "☎",
		"Pi": "Π",
		"pi": "π",
		"pitchfork": "⋔",
		"piv": "ϖ",
		"planck": "ℏ",
		"planckh": "ℎ",
		"plankv": "ℏ",
		"plusacir": "⨣",
		"plusb": "⊞",
		"pluscir": "⨢",
		"plus": "+",
		"plusdo": "∔",
		"plusdu": "⨥",
		"pluse": "⩲",
		"PlusMinus": "±",
		"plusmn": "±",
		"plussim": "⨦",
		"plustwo": "⨧",
		"pm": "±",
		"Poincareplane": "ℌ",
		"pointint": "⨕",
		"popf": "𝕡",
		"Popf": "ℙ",
		"pound": "£",
		"prap": "⪷",
		"Pr": "⪻",
		"pr": "≺",
		"prcue": "≼",
		"precapprox": "⪷",
		"prec": "≺",
		"preccurlyeq": "≼",
		"Precedes": "≺",
		"PrecedesEqual": "⪯",
		"PrecedesSlantEqual": "≼",
		"PrecedesTilde": "≾",
		"preceq": "⪯",
		"precnapprox": "⪹",
		"precneqq": "⪵",
		"precnsim": "⋨",
		"pre": "⪯",
		"prE": "⪳",
		"precsim": "≾",
		"prime": "′",
		"Prime": "″",
		"primes": "ℙ",
		"prnap": "⪹",
		"prnE": "⪵",
		"prnsim": "⋨",
		"prod": "∏",
		"Product": "∏",
		"profalar": "⌮",
		"profline": "⌒",
		"profsurf": "⌓",
		"prop": "∝",
		"Proportional": "∝",
		"Proportion": "∷",
		"propto": "∝",
		"prsim": "≾",
		"prurel": "⊰",
		"Pscr": "𝒫",
		"pscr": "𝓅",
		"Psi": "Ψ",
		"psi": "ψ",
		"puncsp": " ",
		"Qfr": "𝔔",
		"qfr": "𝔮",
		"qint": "⨌",
		"qopf": "𝕢",
		"Qopf": "ℚ",
		"qprime": "⁗",
		"Qscr": "𝒬",
		"qscr": "𝓆",
		"quaternions": "ℍ",
		"quatint": "⨖",
		"quest": "?",
		"questeq": "≟",
		"quot": "\"",
		"QUOT": "\"",
		"rAarr": "⇛",
		"race": "∽̱",
		"Racute": "Ŕ",
		"racute": "ŕ",
		"radic": "√",
		"raemptyv": "⦳",
		"rang": "⟩",
		"Rang": "⟫",
		"rangd": "⦒",
		"range": "⦥",
		"rangle": "⟩",
		"raquo": "»",
		"rarrap": "⥵",
		"rarrb": "⇥",
		"rarrbfs": "⤠",
		"rarrc": "⤳",
		"rarr": "→",
		"Rarr": "↠",
		"rArr": "⇒",
		"rarrfs": "⤞",
		"rarrhk": "↪",
		"rarrlp": "↬",
		"rarrpl": "⥅",
		"rarrsim": "⥴",
		"Rarrtl": "⤖",
		"rarrtl": "↣",
		"rarrw": "↝",
		"ratail": "⤚",
		"rAtail": "⤜",
		"ratio": "∶",
		"rationals": "ℚ",
		"rbarr": "⤍",
		"rBarr": "⤏",
		"RBarr": "⤐",
		"rbbrk": "❳",
		"rbrace": "}",
		"rbrack": "]",
		"rbrke": "⦌",
		"rbrksld": "⦎",
		"rbrkslu": "⦐",
		"Rcaron": "Ř",
		"rcaron": "ř",
		"Rcedil": "Ŗ",
		"rcedil": "ŗ",
		"rceil": "⌉",
		"rcub": "}",
		"Rcy": "Р",
		"rcy": "р",
		"rdca": "⤷",
		"rdldhar": "⥩",
		"rdquo": "”",
		"rdquor": "”",
		"rdsh": "↳",
		"real": "ℜ",
		"realine": "ℛ",
		"realpart": "ℜ",
		"reals": "ℝ",
		"Re": "ℜ",
		"rect": "▭",
		"reg": "®",
		"REG": "®",
		"ReverseElement": "∋",
		"ReverseEquilibrium": "⇋",
		"ReverseUpEquilibrium": "⥯",
		"rfisht": "⥽",
		"rfloor": "⌋",
		"rfr": "𝔯",
		"Rfr": "ℜ",
		"rHar": "⥤",
		"rhard": "⇁",
		"rharu": "⇀",
		"rharul": "⥬",
		"Rho": "Ρ",
		"rho": "ρ",
		"rhov": "ϱ",
		"RightAngleBracket": "⟩",
		"RightArrowBar": "⇥",
		"rightarrow": "→",
		"RightArrow": "→",
		"Rightarrow": "⇒",
		"RightArrowLeftArrow": "⇄",
		"rightarrowtail": "↣",
		"RightCeiling": "⌉",
		"RightDoubleBracket": "⟧",
		"RightDownTeeVector": "⥝",
		"RightDownVectorBar": "⥕",
		"RightDownVector": "⇂",
		"RightFloor": "⌋",
		"rightharpoondown": "⇁",
		"rightharpoonup": "⇀",
		"rightleftarrows": "⇄",
		"rightleftharpoons": "⇌",
		"rightrightarrows": "⇉",
		"rightsquigarrow": "↝",
		"RightTeeArrow": "↦",
		"RightTee": "⊢",
		"RightTeeVector": "⥛",
		"rightthreetimes": "⋌",
		"RightTriangleBar": "⧐",
		"RightTriangle": "⊳",
		"RightTriangleEqual": "⊵",
		"RightUpDownVector": "⥏",
		"RightUpTeeVector": "⥜",
		"RightUpVectorBar": "⥔",
		"RightUpVector": "↾",
		"RightVectorBar": "⥓",
		"RightVector": "⇀",
		"ring": "˚",
		"risingdotseq": "≓",
		"rlarr": "⇄",
		"rlhar": "⇌",
		"rlm": "‏",
		"rmoustache": "⎱",
		"rmoust": "⎱",
		"rnmid": "⫮",
		"roang": "⟭",
		"roarr": "⇾",
		"robrk": "⟧",
		"ropar": "⦆",
		"ropf": "𝕣",
		"Ropf": "ℝ",
		"roplus": "⨮",
		"rotimes": "⨵",
		"RoundImplies": "⥰",
		"rpar": ")",
		"rpargt": "⦔",
		"rppolint": "⨒",
		"rrarr": "⇉",
		"Rrightarrow": "⇛",
		"rsaquo": "›",
		"rscr": "𝓇",
		"Rscr": "ℛ",
		"rsh": "↱",
		"Rsh": "↱",
		"rsqb": "]",
		"rsquo": "’",
		"rsquor": "’",
		"rthree": "⋌",
		"rtimes": "⋊",
		"rtri": "▹",
		"rtrie": "⊵",
		"rtrif": "▸",
		"rtriltri": "⧎",
		"RuleDelayed": "⧴",
		"ruluhar": "⥨",
		"rx": "℞",
		"Sacute": "Ś",
		"sacute": "ś",
		"sbquo": "‚",
		"scap": "⪸",
		"Scaron": "Š",
		"scaron": "š",
		"Sc": "⪼",
		"sc": "≻",
		"sccue": "≽",
		"sce": "⪰",
		"scE": "⪴",
		"Scedil": "Ş",
		"scedil": "ş",
		"Scirc": "Ŝ",
		"scirc": "ŝ",
		"scnap": "⪺",
		"scnE": "⪶",
		"scnsim": "⋩",
		"scpolint": "⨓",
		"scsim": "≿",
		"Scy": "С",
		"scy": "с",
		"sdotb": "⊡",
		"sdot": "⋅",
		"sdote": "⩦",
		"searhk": "⤥",
		"searr": "↘",
		"seArr": "⇘",
		"searrow": "↘",
		"sect": "§",
		"semi": ";",
		"seswar": "⤩",
		"setminus": "∖",
		"setmn": "∖",
		"sext": "✶",
		"Sfr": "𝔖",
		"sfr": "𝔰",
		"sfrown": "⌢",
		"sharp": "♯",
		"SHCHcy": "Щ",
		"shchcy": "щ",
		"SHcy": "Ш",
		"shcy": "ш",
		"ShortDownArrow": "↓",
		"ShortLeftArrow": "←",
		"shortmid": "∣",
		"shortparallel": "∥",
		"ShortRightArrow": "→",
		"ShortUpArrow": "↑",
		"shy": "­",
		"Sigma": "Σ",
		"sigma": "σ",
		"sigmaf": "ς",
		"sigmav": "ς",
		"sim": "∼",
		"simdot": "⩪",
		"sime": "≃",
		"simeq": "≃",
		"simg": "⪞",
		"simgE": "⪠",
		"siml": "⪝",
		"simlE": "⪟",
		"simne": "≆",
		"simplus": "⨤",
		"simrarr": "⥲",
		"slarr": "←",
		"SmallCircle": "∘",
		"smallsetminus": "∖",
		"smashp": "⨳",
		"smeparsl": "⧤",
		"smid": "∣",
		"smile": "⌣",
		"smt": "⪪",
		"smte": "⪬",
		"smtes": "⪬︀",
		"SOFTcy": "Ь",
		"softcy": "ь",
		"solbar": "⌿",
		"solb": "⧄",
		"sol": "/",
		"Sopf": "𝕊",
		"sopf": "𝕤",
		"spades": "♠",
		"spadesuit": "♠",
		"spar": "∥",
		"sqcap": "⊓",
		"sqcaps": "⊓︀",
		"sqcup": "⊔",
		"sqcups": "⊔︀",
		"Sqrt": "√",
		"sqsub": "⊏",
		"sqsube": "⊑",
		"sqsubset": "⊏",
		"sqsubseteq": "⊑",
		"sqsup": "⊐",
		"sqsupe": "⊒",
		"sqsupset": "⊐",
		"sqsupseteq": "⊒",
		"square": "□",
		"Square": "□",
		"SquareIntersection": "⊓",
		"SquareSubset": "⊏",
		"SquareSubsetEqual": "⊑",
		"SquareSuperset": "⊐",
		"SquareSupersetEqual": "⊒",
		"SquareUnion": "⊔",
		"squarf": "▪",
		"squ": "□",
		"squf": "▪",
		"srarr": "→",
		"Sscr": "𝒮",
		"sscr": "𝓈",
		"ssetmn": "∖",
		"ssmile": "⌣",
		"sstarf": "⋆",
		"Star": "⋆",
		"star": "☆",
		"starf": "★",
		"straightepsilon": "ϵ",
		"straightphi": "ϕ",
		"strns": "¯",
		"sub": "⊂",
		"Sub": "⋐",
		"subdot": "⪽",
		"subE": "⫅",
		"sube": "⊆",
		"subedot": "⫃",
		"submult": "⫁",
		"subnE": "⫋",
		"subne": "⊊",
		"subplus": "⪿",
		"subrarr": "⥹",
		"subset": "⊂",
		"Subset": "⋐",
		"subseteq": "⊆",
		"subseteqq": "⫅",
		"SubsetEqual": "⊆",
		"subsetneq": "⊊",
		"subsetneqq": "⫋",
		"subsim": "⫇",
		"subsub": "⫕",
		"subsup": "⫓",
		"succapprox": "⪸",
		"succ": "≻",
		"succcurlyeq": "≽",
		"Succeeds": "≻",
		"SucceedsEqual": "⪰",
		"SucceedsSlantEqual": "≽",
		"SucceedsTilde": "≿",
		"succeq": "⪰",
		"succnapprox": "⪺",
		"succneqq": "⪶",
		"succnsim": "⋩",
		"succsim": "≿",
		"SuchThat": "∋",
		"sum": "∑",
		"Sum": "∑",
		"sung": "♪",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"sup": "⊃",
		"Sup": "⋑",
		"supdot": "⪾",
		"supdsub": "⫘",
		"supE": "⫆",
		"supe": "⊇",
		"supedot": "⫄",
		"Superset": "⊃",
		"SupersetEqual": "⊇",
		"suphsol": "⟉",
		"suphsub": "⫗",
		"suplarr": "⥻",
		"supmult": "⫂",
		"supnE": "⫌",
		"supne": "⊋",
		"supplus": "⫀",
		"supset": "⊃",
		"Supset": "⋑",
		"supseteq": "⊇",
		"supseteqq": "⫆",
		"supsetneq": "⊋",
		"supsetneqq": "⫌",
		"supsim": "⫈",
		"supsub": "⫔",
		"supsup": "⫖",
		"swarhk": "⤦",
		"swarr": "↙",
		"swArr": "⇙",
		"swarrow": "↙",
		"swnwar": "⤪",
		"szlig": "ß",
		"Tab": "\t",
		"target": "⌖",
		"Tau": "Τ",
		"tau": "τ",
		"tbrk": "⎴",
		"Tcaron": "Ť",
		"tcaron": "ť",
		"Tcedil": "Ţ",
		"tcedil": "ţ",
		"Tcy": "Т",
		"tcy": "т",
		"tdot": "⃛",
		"telrec": "⌕",
		"Tfr": "𝔗",
		"tfr": "𝔱",
		"there4": "∴",
		"therefore": "∴",
		"Therefore": "∴",
		"Theta": "Θ",
		"theta": "θ",
		"thetasym": "ϑ",
		"thetav": "ϑ",
		"thickapprox": "≈",
		"thicksim": "∼",
		"ThickSpace": "  ",
		"ThinSpace": " ",
		"thinsp": " ",
		"thkap": "≈",
		"thksim": "∼",
		"THORN": "Þ",
		"thorn": "þ",
		"tilde": "˜",
		"Tilde": "∼",
		"TildeEqual": "≃",
		"TildeFullEqual": "≅",
		"TildeTilde": "≈",
		"timesbar": "⨱",
		"timesb": "⊠",
		"times": "×",
		"timesd": "⨰",
		"tint": "∭",
		"toea": "⤨",
		"topbot": "⌶",
		"topcir": "⫱",
		"top": "⊤",
		"Topf": "𝕋",
		"topf": "𝕥",
		"topfork": "⫚",
		"tosa": "⤩",
		"tprime": "‴",
		"trade": "™",
		"TRADE": "™",
		"triangle": "▵",
		"triangledown": "▿",
		"triangleleft": "◃",
		"trianglelefteq": "⊴",
		"triangleq": "≜",
		"triangleright": "▹",
		"trianglerighteq": "⊵",
		"tridot": "◬",
		"trie": "≜",
		"triminus": "⨺",
		"TripleDot": "⃛",
		"triplus": "⨹",
		"trisb": "⧍",
		"tritime": "⨻",
		"trpezium": "⏢",
		"Tscr": "𝒯",
		"tscr": "𝓉",
		"TScy": "Ц",
		"tscy": "ц",
		"TSHcy": "Ћ",
		"tshcy": "ћ",
		"Tstrok": "Ŧ",
		"tstrok": "ŧ",
		"twixt": "≬",
		"twoheadleftarrow": "↞",
		"twoheadrightarrow": "↠",
		"Uacute": "Ú",
		"uacute": "ú",
		"uarr": "↑",
		"Uarr": "↟",
		"uArr": "⇑",
		"Uarrocir": "⥉",
		"Ubrcy": "Ў",
		"ubrcy": "ў",
		"Ubreve": "Ŭ",
		"ubreve": "ŭ",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ucy": "У",
		"ucy": "у",
		"udarr": "⇅",
		"Udblac": "Ű",
		"udblac": "ű",
		"udhar": "⥮",
		"ufisht": "⥾",
		"Ufr": "𝔘",
		"ufr": "𝔲",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uHar": "⥣",
		"uharl": "↿",
		"uharr": "↾",
		"uhblk": "▀",
		"ulcorn": "⌜",
		"ulcorner": "⌜",
		"ulcrop": "⌏",
		"ultri": "◸",
		"Umacr": "Ū",
		"umacr": "ū",
		"uml": "¨",
		"UnderBar": "_",
		"UnderBrace": "⏟",
		"UnderBracket": "⎵",
		"UnderParenthesis": "⏝",
		"Union": "⋃",
		"UnionPlus": "⊎",
		"Uogon": "Ų",
		"uogon": "ų",
		"Uopf": "𝕌",
		"uopf": "𝕦",
		"UpArrowBar": "⤒",
		"uparrow": "↑",
		"UpArrow": "↑",
		"Uparrow": "⇑",
		"UpArrowDownArrow": "⇅",
		"updownarrow": "↕",
		"UpDownArrow": "↕",
		"Updownarrow": "⇕",
		"UpEquilibrium": "⥮",
		"upharpoonleft": "↿",
		"upharpoonright": "↾",
		"uplus": "⊎",
		"UpperLeftArrow": "↖",
		"UpperRightArrow": "↗",
		"upsi": "υ",
		"Upsi": "ϒ",
		"upsih": "ϒ",
		"Upsilon": "Υ",
		"upsilon": "υ",
		"UpTeeArrow": "↥",
		"UpTee": "⊥",
		"upuparrows": "⇈",
		"urcorn": "⌝",
		"urcorner": "⌝",
		"urcrop": "⌎",
		"Uring": "Ů",
		"uring": "ů",
		"urtri": "◹",
		"Uscr": "𝒰",
		"uscr": "𝓊",
		"utdot": "⋰",
		"Utilde": "Ũ",
		"utilde": "ũ",
		"utri": "▵",
		"utrif": "▴",
		"uuarr": "⇈",
		"Uuml": "Ü",
		"uuml": "ü",
		"uwangle": "⦧",
		"vangrt": "⦜",
		"varepsilon": "ϵ",
		"varkappa": "ϰ",
		"varnothing": "∅",
		"varphi": "ϕ",
		"varpi": "ϖ",
		"varpropto": "∝",
		"varr": "↕",
		"vArr": "⇕",
		"varrho": "ϱ",
		"varsigma": "ς",
		"varsubsetneq": "⊊︀",
		"varsubsetneqq": "⫋︀",
		"varsupsetneq": "⊋︀",
		"varsupsetneqq": "⫌︀",
		"vartheta": "ϑ",
		"vartriangleleft": "⊲",
		"vartriangleright": "⊳",
		"vBar": "⫨",
		"Vbar": "⫫",
		"vBarv": "⫩",
		"Vcy": "В",
		"vcy": "в",
		"vdash": "⊢",
		"vDash": "⊨",
		"Vdash": "⊩",
		"VDash": "⊫",
		"Vdashl": "⫦",
		"veebar": "⊻",
		"vee": "∨",
		"Vee": "⋁",
		"veeeq": "≚",
		"vellip": "⋮",
		"verbar": "|",
		"Verbar": "‖",
		"vert": "|",
		"Vert": "‖",
		"VerticalBar": "∣",
		"VerticalLine": "|",
		"VerticalSeparator": "❘",
		"VerticalTilde": "≀",
		"VeryThinSpace": " ",
		"Vfr": "𝔙",
		"vfr": "𝔳",
		"vltri": "⊲",
		"vnsub": "⊂⃒",
		"vnsup": "⊃⃒",
		"Vopf": "𝕍",
		"vopf": "𝕧",
		"vprop": "∝",
		"vrtri": "⊳",
		"Vscr": "𝒱",
		"vscr": "𝓋",
		"vsubnE": "⫋︀",
		"vsubne": "⊊︀",
		"vsupnE": "⫌︀",
		"vsupne": "⊋︀",
		"Vvdash": "⊪",
		"vzigzag": "⦚",
		"Wcirc": "Ŵ",
		"wcirc": "ŵ",
		"wedbar": "⩟",
		"wedge": "∧",
		"Wedge": "⋀",
		"wedgeq": "≙",
		"weierp": "℘",
		"Wfr": "𝔚",
		"wfr": "𝔴",
		"Wopf": "𝕎",
		"wopf": "𝕨",
		"wp": "℘",
		"wr": "≀",
		"wreath": "≀",
		"Wscr": "𝒲",
		"wscr": "𝓌",
		"xcap": "⋂",
		"xcirc": "◯",
		"xcup": "⋃",
		"xdtri": "▽",
		"Xfr": "𝔛",
		"xfr": "𝔵",
		"xharr": "⟷",
		"xhArr": "⟺",
		"Xi": "Ξ",
		"xi": "ξ",
		"xlarr": "⟵",
		"xlArr": "⟸",
		"xmap": "⟼",
		"xnis": "⋻",
		"xodot": "⨀",
		"Xopf": "𝕏",
		"xopf": "𝕩",
		"xoplus": "⨁",
		"xotime": "⨂",
		"xrarr": "⟶",
		"xrArr": "⟹",
		"Xscr": "𝒳",
		"xscr": "𝓍",
		"xsqcup": "⨆",
		"xuplus": "⨄",
		"xutri": "△",
		"xvee": "⋁",
		"xwedge": "⋀",
		"Yacute": "Ý",
		"yacute": "ý",
		"YAcy": "Я",
		"yacy": "я",
		"Ycirc": "Ŷ",
		"ycirc": "ŷ",
		"Ycy": "Ы",
		"ycy": "ы",
		"yen": "¥",
		"Yfr": "𝔜",
		"yfr": "𝔶",
		"YIcy": "Ї",
		"yicy": "ї",
		"Yopf": "𝕐",
		"yopf": "𝕪",
		"Yscr": "𝒴",
		"yscr": "𝓎",
		"YUcy": "Ю",
		"yucy": "ю",
		"yuml": "ÿ",
		"Yuml": "Ÿ",
		"Zacute": "Ź",
		"zacute": "ź",
		"Zcaron": "Ž",
		"zcaron": "ž",
		"Zcy": "З",
		"zcy": "з",
		"Zdot": "Ż",
		"zdot": "ż",
		"zeetrf": "ℨ",
		"ZeroWidthSpace": "​",
		"Zeta": "Ζ",
		"zeta": "ζ",
		"zfr": "𝔷",
		"Zfr": "ℨ",
		"ZHcy": "Ж",
		"zhcy": "ж",
		"zigrarr": "⇝",
		"zopf": "𝕫",
		"Zopf": "ℤ",
		"Zscr": "𝒵",
		"zscr": "𝓏",
		"zwj": "‍",
		"zwnj": "‌"
	}

/***/ },
/* 469 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"AElig": "Æ",
		"aelig": "æ",
		"Agrave": "À",
		"agrave": "à",
		"amp": "&",
		"AMP": "&",
		"Aring": "Å",
		"aring": "å",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"brvbar": "¦",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"cedil": "¸",
		"cent": "¢",
		"copy": "©",
		"COPY": "©",
		"curren": "¤",
		"deg": "°",
		"divide": "÷",
		"Eacute": "É",
		"eacute": "é",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"Egrave": "È",
		"egrave": "è",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"frac12": "½",
		"frac14": "¼",
		"frac34": "¾",
		"gt": ">",
		"GT": ">",
		"Iacute": "Í",
		"iacute": "í",
		"Icirc": "Î",
		"icirc": "î",
		"iexcl": "¡",
		"Igrave": "Ì",
		"igrave": "ì",
		"iquest": "¿",
		"Iuml": "Ï",
		"iuml": "ï",
		"laquo": "«",
		"lt": "<",
		"LT": "<",
		"macr": "¯",
		"micro": "µ",
		"middot": "·",
		"nbsp": " ",
		"not": "¬",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"Oacute": "Ó",
		"oacute": "ó",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"Ograve": "Ò",
		"ograve": "ò",
		"ordf": "ª",
		"ordm": "º",
		"Oslash": "Ø",
		"oslash": "ø",
		"Otilde": "Õ",
		"otilde": "õ",
		"Ouml": "Ö",
		"ouml": "ö",
		"para": "¶",
		"plusmn": "±",
		"pound": "£",
		"quot": "\"",
		"QUOT": "\"",
		"raquo": "»",
		"reg": "®",
		"REG": "®",
		"sect": "§",
		"shy": "­",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"szlig": "ß",
		"THORN": "Þ",
		"thorn": "þ",
		"times": "×",
		"Uacute": "Ú",
		"uacute": "ú",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uml": "¨",
		"Uuml": "Ü",
		"uuml": "ü",
		"Yacute": "Ý",
		"yacute": "ý",
		"yen": "¥",
		"yuml": "ÿ"
	}

/***/ },
/* 470 */
/***/ function(module, exports) {

	module.exports = {
		"amp": "&",
		"apos": "'",
		"gt": ">",
		"lt": "<",
		"quot": "\""
	}

/***/ },
/* 471 */
/***/ function(module, exports) {

	module.exports = require("util");

/***/ },
/* 472 */
/***/ function(module, exports) {

	module.exports = require("events");

/***/ },
/* 473 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(474);

	var re_whitespace = /\s+/g;
	var NodePrototype = __webpack_require__(475);
	var ElementPrototype = __webpack_require__(476);

	function DomHandler(callback, options, elementCB){
		if(typeof callback === "object"){
			elementCB = options;
			options = callback;
			callback = null;
		} else if(typeof options === "function"){
			elementCB = options;
			options = defaultOpts;
		}
		this._callback = callback;
		this._options = options || defaultOpts;
		this._elementCB = elementCB;
		this.dom = [];
		this._done = false;
		this._tagStack = [];
		this._parser = this._parser || null;
	}

	//default options
	var defaultOpts = {
		normalizeWhitespace: false, //Replace all whitespace with single spaces
		withStartIndices: false, //Add startIndex properties to nodes
	};

	DomHandler.prototype.onparserinit = function(parser){
		this._parser = parser;
	};

	//Resets the handler back to starting state
	DomHandler.prototype.onreset = function(){
		DomHandler.call(this, this._callback, this._options, this._elementCB);
	};

	//Signals the handler that parsing is done
	DomHandler.prototype.onend = function(){
		if(this._done) return;
		this._done = true;
		this._parser = null;
		this._handleCallback(null);
	};

	DomHandler.prototype._handleCallback =
	DomHandler.prototype.onerror = function(error){
		if(typeof this._callback === "function"){
			this._callback(error, this.dom);
		} else {
			if(error) throw error;
		}
	};

	DomHandler.prototype.onclosetag = function(){
		//if(this._tagStack.pop().name !== name) this._handleCallback(Error("Tagname didn't match!"));
		var elem = this._tagStack.pop();
		if(this._elementCB) this._elementCB(elem);
	};

	DomHandler.prototype._addDomElement = function(element){
		var parent = this._tagStack[this._tagStack.length - 1];
		var siblings = parent ? parent.children : this.dom;
		var previousSibling = siblings[siblings.length - 1];

		element.next = null;

		if(this._options.withStartIndices){
			element.startIndex = this._parser.startIndex;
		}

		if (this._options.withDomLvl1) {
			element.__proto__ = element.type === "tag" ? ElementPrototype : NodePrototype;
		}

		if(previousSibling){
			element.prev = previousSibling;
			previousSibling.next = element;
		} else {
			element.prev = null;
		}

		siblings.push(element);
		element.parent = parent || null;
	};

	DomHandler.prototype.onopentag = function(name, attribs){
		var element = {
			type: name === "script" ? ElementType.Script : name === "style" ? ElementType.Style : ElementType.Tag,
			name: name,
			attribs: attribs,
			children: []
		};

		this._addDomElement(element);

		this._tagStack.push(element);
	};

	DomHandler.prototype.ontext = function(data){
		//the ignoreWhitespace is officially dropped, but for now,
		//it's an alias for normalizeWhitespace
		var normalize = this._options.normalizeWhitespace || this._options.ignoreWhitespace;

		var lastTag;

		if(!this._tagStack.length && this.dom.length && (lastTag = this.dom[this.dom.length-1]).type === ElementType.Text){
			if(normalize){
				lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
			} else {
				lastTag.data += data;
			}
		} else {
			if(
				this._tagStack.length &&
				(lastTag = this._tagStack[this._tagStack.length - 1]) &&
				(lastTag = lastTag.children[lastTag.children.length - 1]) &&
				lastTag.type === ElementType.Text
			){
				if(normalize){
					lastTag.data = (lastTag.data + data).replace(re_whitespace, " ");
				} else {
					lastTag.data += data;
				}
			} else {
				if(normalize){
					data = data.replace(re_whitespace, " ");
				}

				this._addDomElement({
					data: data,
					type: ElementType.Text
				});
			}
		}
	};

	DomHandler.prototype.oncomment = function(data){
		var lastTag = this._tagStack[this._tagStack.length - 1];

		if(lastTag && lastTag.type === ElementType.Comment){
			lastTag.data += data;
			return;
		}

		var element = {
			data: data,
			type: ElementType.Comment
		};

		this._addDomElement(element);
		this._tagStack.push(element);
	};

	DomHandler.prototype.oncdatastart = function(){
		var element = {
			children: [{
				data: "",
				type: ElementType.Text
			}],
			type: ElementType.CDATA
		};

		this._addDomElement(element);
		this._tagStack.push(element);
	};

	DomHandler.prototype.oncommentend = DomHandler.prototype.oncdataend = function(){
		this._tagStack.pop();
	};

	DomHandler.prototype.onprocessinginstruction = function(name, data){
		this._addDomElement({
			name: name,
			data: data,
			type: ElementType.Directive
		});
	};

	module.exports = DomHandler;


/***/ },
/* 474 */
/***/ function(module, exports) {

	//Types of elements found in the DOM
	module.exports = {
		Text: "text", //Text
		Directive: "directive", //<? ... ?>
		Comment: "comment", //<!-- ... -->
		Script: "script", //<script> tags
		Style: "style", //<style> tags
		Tag: "tag", //Any tag
		CDATA: "cdata", //<![CDATA[ ... ]]>
		Doctype: "doctype",

		isTag: function(elem){
			return elem.type === "tag" || elem.type === "script" || elem.type === "style";
		}
	};


/***/ },
/* 475 */
/***/ function(module, exports) {

	// This object will be used as the prototype for Nodes when creating a
	// DOM-Level-1-compliant structure.
	var NodePrototype = module.exports = {
		get firstChild() {
			var children = this.children;
			return children && children[0] || null;
		},
		get lastChild() {
			var children = this.children;
			return children && children[children.length - 1] || null;
		},
		get nodeType() {
			return nodeTypes[this.type] || nodeTypes.element;
		}
	};

	var domLvl1 = {
		tagName: "name",
		childNodes: "children",
		parentNode: "parent",
		previousSibling: "prev",
		nextSibling: "next",
		nodeValue: "data"
	};

	var nodeTypes = {
		element: 1,
		text: 3,
		cdata: 4,
		comment: 8
	};

	Object.keys(domLvl1).forEach(function(key) {
		var shorthand = domLvl1[key];
		Object.defineProperty(NodePrototype, key, {
			get: function() {
				return this[shorthand] || null;
			},
			set: function(val) {
				this[shorthand] = val;
				return val;
			}
		});
	});


/***/ },
/* 476 */
/***/ function(module, exports, __webpack_require__) {

	// DOM-Level-1-compliant structure
	var NodePrototype = __webpack_require__(475);
	var ElementPrototype = module.exports = Object.create(NodePrototype);

	var domLvl1 = {
		tagName: "name"
	};

	Object.keys(domLvl1).forEach(function(key) {
		var shorthand = domLvl1[key];
		Object.defineProperty(ElementPrototype, key, {
			get: function() {
				return this[shorthand] || null;
			},
			set: function(val) {
				this[shorthand] = val;
				return val;
			}
		});
	});


/***/ },
/* 477 */
/***/ function(module, exports, __webpack_require__) {

	var index = __webpack_require__(463),
	    DomHandler = index.DomHandler,
		DomUtils = index.DomUtils;

	//TODO: make this a streamable handler
	function FeedHandler(callback, options){
		this.init(callback, options);
	}

	__webpack_require__(471).inherits(FeedHandler, DomHandler);

	FeedHandler.prototype.init = DomHandler;

	function getElements(what, where){
		return DomUtils.getElementsByTagName(what, where, true);
	}
	function getOneElement(what, where){
		return DomUtils.getElementsByTagName(what, where, true, 1)[0];
	}
	function fetch(what, where, recurse){
		return DomUtils.getText(
			DomUtils.getElementsByTagName(what, where, recurse, 1)
		).trim();
	}

	function addConditionally(obj, prop, what, where, recurse){
		var tmp = fetch(what, where, recurse);
		if(tmp) obj[prop] = tmp;
	}

	var isValidFeed = function(value){
		return value === "rss" || value === "feed" || value === "rdf:RDF";
	};

	FeedHandler.prototype.onend = function(){
		var feed = {},
			feedRoot = getOneElement(isValidFeed, this.dom),
			tmp, childs;

		if(feedRoot){
			if(feedRoot.name === "feed"){
				childs = feedRoot.children;

				feed.type = "atom";
				addConditionally(feed, "id", "id", childs);
				addConditionally(feed, "title", "title", childs);
				if((tmp = getOneElement("link", childs)) && (tmp = tmp.attribs) && (tmp = tmp.href)) feed.link = tmp;
				addConditionally(feed, "description", "subtitle", childs);
				if((tmp = fetch("updated", childs))) feed.updated = new Date(tmp);
				addConditionally(feed, "author", "email", childs, true);

				feed.items = getElements("entry", childs).map(function(item){
					var entry = {}, tmp;

					item = item.children;

					addConditionally(entry, "id", "id", item);
					addConditionally(entry, "title", "title", item);
					if((tmp = getOneElement("link", item)) && (tmp = tmp.attribs) && (tmp = tmp.href)) entry.link = tmp;
					if((tmp = fetch("summary", item) || fetch("content", item))) entry.description = tmp;
					if((tmp = fetch("updated", item))) entry.pubDate = new Date(tmp);
					return entry;
				});
			} else {
				childs = getOneElement("channel", feedRoot.children).children;

				feed.type = feedRoot.name.substr(0, 3);
				feed.id = "";
				addConditionally(feed, "title", "title", childs);
				addConditionally(feed, "link", "link", childs);
				addConditionally(feed, "description", "description", childs);
				if((tmp = fetch("lastBuildDate", childs))) feed.updated = new Date(tmp);
				addConditionally(feed, "author", "managingEditor", childs, true);

				feed.items = getElements("item", feedRoot.children).map(function(item){
					var entry = {}, tmp;

					item = item.children;

					addConditionally(entry, "id", "guid", item);
					addConditionally(entry, "title", "title", item);
					addConditionally(entry, "link", "link", item);
					addConditionally(entry, "description", "description", item);
					if((tmp = fetch("pubDate", item))) entry.pubDate = new Date(tmp);
					return entry;
				});
			}
		}
		this.dom = feed;
		DomHandler.prototype._handleCallback.call(
			this, feedRoot ? null : Error("couldn't find root of feed")
		);
	};

	module.exports = FeedHandler;


/***/ },
/* 478 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = Stream;

	var Parser = __webpack_require__(479);

	function Stream(options){
		Parser.call(this, new Cbs(this), options);
	}

	__webpack_require__(471).inherits(Stream, Parser);

	Stream.prototype.readable = true;

	function Cbs(scope){
		this.scope = scope;
	}

	var EVENTS = __webpack_require__(463).EVENTS;

	Object.keys(EVENTS).forEach(function(name){
		if(EVENTS[name] === 0){
			Cbs.prototype["on" + name] = function(){
				this.scope.emit(name);
			};
		} else if(EVENTS[name] === 1){
			Cbs.prototype["on" + name] = function(a){
				this.scope.emit(name, a);
			};
		} else if(EVENTS[name] === 2){
			Cbs.prototype["on" + name] = function(a, b){
				this.scope.emit(name, a, b);
			};
		} else {
			throw Error("wrong number of arguments!");
		}
	});

/***/ },
/* 479 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = Stream;

	var Parser = __webpack_require__(464),
	    WritableStream = __webpack_require__(480).Writable || __webpack_require__(481).Writable;

	function Stream(cbs, options){
		var parser = this._parser = new Parser(cbs, options);

		WritableStream.call(this, {decodeStrings: false});

		this.once("finish", function(){
			parser.end();
		});
	}

	__webpack_require__(471).inherits(Stream, WritableStream);

	WritableStream.prototype._write = function(chunk, encoding, cb){
		this._parser.write(chunk);
		cb();
	};

/***/ },
/* 480 */
/***/ function(module, exports) {

	module.exports = require("stream");

/***/ },
/* 481 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(482);
	exports.Stream = __webpack_require__(480);
	exports.Readable = exports;
	exports.Writable = __webpack_require__(488);
	exports.Duplex = __webpack_require__(487);
	exports.Transform = __webpack_require__(490);
	exports.PassThrough = __webpack_require__(491);


/***/ },
/* 482 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	module.exports = Readable;

	/*<replacement>*/
	var isArray = __webpack_require__(483);
	/*</replacement>*/


	/*<replacement>*/
	var Buffer = __webpack_require__(484).Buffer;
	/*</replacement>*/

	Readable.ReadableState = ReadableState;

	var EE = __webpack_require__(472).EventEmitter;

	/*<replacement>*/
	if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
	  return emitter.listeners(type).length;
	};
	/*</replacement>*/

	var Stream = __webpack_require__(480);

	/*<replacement>*/
	var util = __webpack_require__(485);
	util.inherits = __webpack_require__(486);
	/*</replacement>*/

	var StringDecoder;


	/*<replacement>*/
	var debug = __webpack_require__(471);
	if (debug && debug.debuglog) {
	  debug = debug.debuglog('stream');
	} else {
	  debug = function () {};
	}
	/*</replacement>*/


	util.inherits(Readable, Stream);

	function ReadableState(options, stream) {
	  var Duplex = __webpack_require__(487);

	  options = options || {};

	  // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"
	  var hwm = options.highWaterMark;
	  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;

	  this.buffer = [];
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = null;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false;

	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;

	  // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.
	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;


	  // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away
	  this.objectMode = !!options.objectMode;

	  if (stream instanceof Duplex)
	    this.objectMode = this.objectMode || !!options.readableObjectMode;

	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';

	  // when piping, we only care about 'readable' events that happen
	  // after read()ing all the bytes and not getting any pushback.
	  this.ranOut = false;

	  // the number of writers that are awaiting a drain event in .pipe()s
	  this.awaitDrain = 0;

	  // if true, a maybeReadMore has been scheduled
	  this.readingMore = false;

	  this.decoder = null;
	  this.encoding = null;
	  if (options.encoding) {
	    if (!StringDecoder)
	      StringDecoder = __webpack_require__(489).StringDecoder;
	    this.decoder = new StringDecoder(options.encoding);
	    this.encoding = options.encoding;
	  }
	}

	function Readable(options) {
	  var Duplex = __webpack_require__(487);

	  if (!(this instanceof Readable))
	    return new Readable(options);

	  this._readableState = new ReadableState(options, this);

	  // legacy
	  this.readable = true;

	  Stream.call(this);
	}

	// Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.
	Readable.prototype.push = function(chunk, encoding) {
	  var state = this._readableState;

	  if (util.isString(chunk) && !state.objectMode) {
	    encoding = encoding || state.defaultEncoding;
	    if (encoding !== state.encoding) {
	      chunk = new Buffer(chunk, encoding);
	      encoding = '';
	    }
	  }

	  return readableAddChunk(this, state, chunk, encoding, false);
	};

	// Unshift should *always* be something directly out of read()
	Readable.prototype.unshift = function(chunk) {
	  var state = this._readableState;
	  return readableAddChunk(this, state, chunk, '', true);
	};

	function readableAddChunk(stream, state, chunk, encoding, addToFront) {
	  var er = chunkInvalid(state, chunk);
	  if (er) {
	    stream.emit('error', er);
	  } else if (util.isNullOrUndefined(chunk)) {
	    state.reading = false;
	    if (!state.ended)
	      onEofChunk(stream, state);
	  } else if (state.objectMode || chunk && chunk.length > 0) {
	    if (state.ended && !addToFront) {
	      var e = new Error('stream.push() after EOF');
	      stream.emit('error', e);
	    } else if (state.endEmitted && addToFront) {
	      var e = new Error('stream.unshift() after end event');
	      stream.emit('error', e);
	    } else {
	      if (state.decoder && !addToFront && !encoding)
	        chunk = state.decoder.write(chunk);

	      if (!addToFront)
	        state.reading = false;

	      // if we want the data now, just emit it.
	      if (state.flowing && state.length === 0 && !state.sync) {
	        stream.emit('data', chunk);
	        stream.read(0);
	      } else {
	        // update the buffer info.
	        state.length += state.objectMode ? 1 : chunk.length;
	        if (addToFront)
	          state.buffer.unshift(chunk);
	        else
	          state.buffer.push(chunk);

	        if (state.needReadable)
	          emitReadable(stream);
	      }

	      maybeReadMore(stream, state);
	    }
	  } else if (!addToFront) {
	    state.reading = false;
	  }

	  return needMoreData(state);
	}



	// if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.
	function needMoreData(state) {
	  return !state.ended &&
	         (state.needReadable ||
	          state.length < state.highWaterMark ||
	          state.length === 0);
	}

	// backwards compatibility.
	Readable.prototype.setEncoding = function(enc) {
	  if (!StringDecoder)
	    StringDecoder = __webpack_require__(489).StringDecoder;
	  this._readableState.decoder = new StringDecoder(enc);
	  this._readableState.encoding = enc;
	  return this;
	};

	// Don't raise the hwm > 128MB
	var MAX_HWM = 0x800000;
	function roundUpToNextPowerOf2(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2
	    n--;
	    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
	    n++;
	  }
	  return n;
	}

	function howMuchToRead(n, state) {
	  if (state.length === 0 && state.ended)
	    return 0;

	  if (state.objectMode)
	    return n === 0 ? 0 : 1;

	  if (isNaN(n) || util.isNull(n)) {
	    // only flow one buffer at a time
	    if (state.flowing && state.buffer.length)
	      return state.buffer[0].length;
	    else
	      return state.length;
	  }

	  if (n <= 0)
	    return 0;

	  // If we're asking for more than the target buffer level,
	  // then raise the water mark.  Bump up to the next highest
	  // power of 2, to prevent increasing it excessively in tiny
	  // amounts.
	  if (n > state.highWaterMark)
	    state.highWaterMark = roundUpToNextPowerOf2(n);

	  // don't have that much.  return null, unless we've ended.
	  if (n > state.length) {
	    if (!state.ended) {
	      state.needReadable = true;
	      return 0;
	    } else
	      return state.length;
	  }

	  return n;
	}

	// you can override either this method, or the async _read(n) below.
	Readable.prototype.read = function(n) {
	  debug('read', n);
	  var state = this._readableState;
	  var nOrig = n;

	  if (!util.isNumber(n) || n > 0)
	    state.emittedReadable = false;

	  // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.
	  if (n === 0 &&
	      state.needReadable &&
	      (state.length >= state.highWaterMark || state.ended)) {
	    debug('read: emitReadable', state.length, state.ended);
	    if (state.length === 0 && state.ended)
	      endReadable(this);
	    else
	      emitReadable(this);
	    return null;
	  }

	  n = howMuchToRead(n, state);

	  // if we've ended, and we're now clear, then finish it up.
	  if (n === 0 && state.ended) {
	    if (state.length === 0)
	      endReadable(this);
	    return null;
	  }

	  // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.

	  // if we need a readable event, then we need to do some reading.
	  var doRead = state.needReadable;
	  debug('need readable', doRead);

	  // if we currently have less than the highWaterMark, then also read some
	  if (state.length === 0 || state.length - n < state.highWaterMark) {
	    doRead = true;
	    debug('length less than watermark', doRead);
	  }

	  // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.
	  if (state.ended || state.reading) {
	    doRead = false;
	    debug('reading or ended', doRead);
	  }

	  if (doRead) {
	    debug('do read');
	    state.reading = true;
	    state.sync = true;
	    // if the length is currently zero, then we *need* a readable event.
	    if (state.length === 0)
	      state.needReadable = true;
	    // call internal read method
	    this._read(state.highWaterMark);
	    state.sync = false;
	  }

	  // If _read pushed data synchronously, then `reading` will be false,
	  // and we need to re-evaluate how much data we can return to the user.
	  if (doRead && !state.reading)
	    n = howMuchToRead(nOrig, state);

	  var ret;
	  if (n > 0)
	    ret = fromList(n, state);
	  else
	    ret = null;

	  if (util.isNull(ret)) {
	    state.needReadable = true;
	    n = 0;
	  }

	  state.length -= n;

	  // If we have nothing in the buffer, then we want to know
	  // as soon as we *do* get something into the buffer.
	  if (state.length === 0 && !state.ended)
	    state.needReadable = true;

	  // If we tried to read() past the EOF, then emit end on the next tick.
	  if (nOrig !== n && state.ended && state.length === 0)
	    endReadable(this);

	  if (!util.isNull(ret))
	    this.emit('data', ret);

	  return ret;
	};

	function chunkInvalid(state, chunk) {
	  var er = null;
	  if (!util.isBuffer(chunk) &&
	      !util.isString(chunk) &&
	      !util.isNullOrUndefined(chunk) &&
	      !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  return er;
	}


	function onEofChunk(stream, state) {
	  if (state.decoder && !state.ended) {
	    var chunk = state.decoder.end();
	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }
	  state.ended = true;

	  // emit 'readable' now to make sure it gets picked up.
	  emitReadable(stream);
	}

	// Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.
	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;
	  if (!state.emittedReadable) {
	    debug('emitReadable', state.flowing);
	    state.emittedReadable = true;
	    if (state.sync)
	      process.nextTick(function() {
	        emitReadable_(stream);
	      });
	    else
	      emitReadable_(stream);
	  }
	}

	function emitReadable_(stream) {
	  debug('emit readable');
	  stream.emit('readable');
	  flow(stream);
	}


	// at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.
	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    process.nextTick(function() {
	      maybeReadMore_(stream, state);
	    });
	  }
	}

	function maybeReadMore_(stream, state) {
	  var len = state.length;
	  while (!state.reading && !state.flowing && !state.ended &&
	         state.length < state.highWaterMark) {
	    debug('maybeReadMore read 0');
	    stream.read(0);
	    if (len === state.length)
	      // didn't get any data, stop spinning.
	      break;
	    else
	      len = state.length;
	  }
	  state.readingMore = false;
	}

	// abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.
	Readable.prototype._read = function(n) {
	  this.emit('error', new Error('not implemented'));
	};

	Readable.prototype.pipe = function(dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;

	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;
	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;
	    default:
	      state.pipes.push(dest);
	      break;
	  }
	  state.pipesCount += 1;
	  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

	  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
	              dest !== process.stdout &&
	              dest !== process.stderr;

	  var endFn = doEnd ? onend : cleanup;
	  if (state.endEmitted)
	    process.nextTick(endFn);
	  else
	    src.once('end', endFn);

	  dest.on('unpipe', onunpipe);
	  function onunpipe(readable) {
	    debug('onunpipe');
	    if (readable === src) {
	      cleanup();
	    }
	  }

	  function onend() {
	    debug('onend');
	    dest.end();
	  }

	  // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.
	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);

	  function cleanup() {
	    debug('cleanup');
	    // cleanup event handlers once the pipe is broken
	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', cleanup);
	    src.removeListener('data', ondata);

	    // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.
	    if (state.awaitDrain &&
	        (!dest._writableState || dest._writableState.needDrain))
	      ondrain();
	  }

	  src.on('data', ondata);
	  function ondata(chunk) {
	    debug('ondata');
	    var ret = dest.write(chunk);
	    if (false === ret) {
	      debug('false write response, pause',
	            src._readableState.awaitDrain);
	      src._readableState.awaitDrain++;
	      src.pause();
	    }
	  }

	  // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.
	  function onerror(er) {
	    debug('onerror', er);
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (EE.listenerCount(dest, 'error') === 0)
	      dest.emit('error', er);
	  }
	  // This is a brutally ugly hack to make sure that our error handler
	  // is attached before any userland ones.  NEVER DO THIS.
	  if (!dest._events || !dest._events.error)
	    dest.on('error', onerror);
	  else if (isArray(dest._events.error))
	    dest._events.error.unshift(onerror);
	  else
	    dest._events.error = [onerror, dest._events.error];



	  // Both close and finish should trigger unpipe, but only once.
	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }
	  dest.once('close', onclose);
	  function onfinish() {
	    debug('onfinish');
	    dest.removeListener('close', onclose);
	    unpipe();
	  }
	  dest.once('finish', onfinish);

	  function unpipe() {
	    debug('unpipe');
	    src.unpipe(dest);
	  }

	  // tell the dest that it's being piped to
	  dest.emit('pipe', src);

	  // start the flow if it hasn't been started already.
	  if (!state.flowing) {
	    debug('pipe resume');
	    src.resume();
	  }

	  return dest;
	};

	function pipeOnDrain(src) {
	  return function() {
	    var state = src._readableState;
	    debug('pipeOnDrain', state.awaitDrain);
	    if (state.awaitDrain)
	      state.awaitDrain--;
	    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {
	      state.flowing = true;
	      flow(src);
	    }
	  };
	}


	Readable.prototype.unpipe = function(dest) {
	  var state = this._readableState;

	  // if we're not piping anywhere, then do nothing.
	  if (state.pipesCount === 0)
	    return this;

	  // just one destination.  most common case.
	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes)
	      return this;

	    if (!dest)
	      dest = state.pipes;

	    // got a match.
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	    if (dest)
	      dest.emit('unpipe', this);
	    return this;
	  }

	  // slow case. multiple pipe destinations.

	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;

	    for (var i = 0; i < len; i++)
	      dests[i].emit('unpipe', this);
	    return this;
	  }

	  // try to find the right one.
	  var i = indexOf(state.pipes, dest);
	  if (i === -1)
	    return this;

	  state.pipes.splice(i, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1)
	    state.pipes = state.pipes[0];

	  dest.emit('unpipe', this);

	  return this;
	};

	// set up data events if they are asked for
	// Ensure readable listeners eventually get something
	Readable.prototype.on = function(ev, fn) {
	  var res = Stream.prototype.on.call(this, ev, fn);

	  // If listening to data, and it has not explicitly been paused,
	  // then call resume to start the flow of data on the next tick.
	  if (ev === 'data' && false !== this._readableState.flowing) {
	    this.resume();
	  }

	  if (ev === 'readable' && this.readable) {
	    var state = this._readableState;
	    if (!state.readableListening) {
	      state.readableListening = true;
	      state.emittedReadable = false;
	      state.needReadable = true;
	      if (!state.reading) {
	        var self = this;
	        process.nextTick(function() {
	          debug('readable nexttick read 0');
	          self.read(0);
	        });
	      } else if (state.length) {
	        emitReadable(this, state);
	      }
	    }
	  }

	  return res;
	};
	Readable.prototype.addListener = Readable.prototype.on;

	// pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.
	Readable.prototype.resume = function() {
	  var state = this._readableState;
	  if (!state.flowing) {
	    debug('resume');
	    state.flowing = true;
	    if (!state.reading) {
	      debug('resume read 0');
	      this.read(0);
	    }
	    resume(this, state);
	  }
	  return this;
	};

	function resume(stream, state) {
	  if (!state.resumeScheduled) {
	    state.resumeScheduled = true;
	    process.nextTick(function() {
	      resume_(stream, state);
	    });
	  }
	}

	function resume_(stream, state) {
	  state.resumeScheduled = false;
	  stream.emit('resume');
	  flow(stream);
	  if (state.flowing && !state.reading)
	    stream.read(0);
	}

	Readable.prototype.pause = function() {
	  debug('call pause flowing=%j', this._readableState.flowing);
	  if (false !== this._readableState.flowing) {
	    debug('pause');
	    this._readableState.flowing = false;
	    this.emit('pause');
	  }
	  return this;
	};

	function flow(stream) {
	  var state = stream._readableState;
	  debug('flow', state.flowing);
	  if (state.flowing) {
	    do {
	      var chunk = stream.read();
	    } while (null !== chunk && state.flowing);
	  }
	}

	// wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.
	Readable.prototype.wrap = function(stream) {
	  var state = this._readableState;
	  var paused = false;

	  var self = this;
	  stream.on('end', function() {
	    debug('wrapped end');
	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length)
	        self.push(chunk);
	    }

	    self.push(null);
	  });

	  stream.on('data', function(chunk) {
	    debug('wrapped data');
	    if (state.decoder)
	      chunk = state.decoder.write(chunk);
	    if (!chunk || !state.objectMode && !chunk.length)
	      return;

	    var ret = self.push(chunk);
	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  });

	  // proxy all the other methods.
	  // important when wrapping filters and duplexes.
	  for (var i in stream) {
	    if (util.isFunction(stream[i]) && util.isUndefined(this[i])) {
	      this[i] = function(method) { return function() {
	        return stream[method].apply(stream, arguments);
	      }}(i);
	    }
	  }

	  // proxy certain important events.
	  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
	  forEach(events, function(ev) {
	    stream.on(ev, self.emit.bind(self, ev));
	  });

	  // when we try to consume some more bytes, simply unpause the
	  // underlying stream.
	  self._read = function(n) {
	    debug('wrapped _read', n);
	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };

	  return self;
	};



	// exposed for testing purposes only.
	Readable._fromList = fromList;

	// Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	function fromList(n, state) {
	  var list = state.buffer;
	  var length = state.length;
	  var stringMode = !!state.decoder;
	  var objectMode = !!state.objectMode;
	  var ret;

	  // nothing in the list, definitely empty.
	  if (list.length === 0)
	    return null;

	  if (length === 0)
	    ret = null;
	  else if (objectMode)
	    ret = list.shift();
	  else if (!n || n >= length) {
	    // read it all, truncate the array.
	    if (stringMode)
	      ret = list.join('');
	    else
	      ret = Buffer.concat(list, length);
	    list.length = 0;
	  } else {
	    // read just some of it.
	    if (n < list[0].length) {
	      // just take a part of the first list item.
	      // slice is the same for buffers and strings.
	      var buf = list[0];
	      ret = buf.slice(0, n);
	      list[0] = buf.slice(n);
	    } else if (n === list[0].length) {
	      // first list is a perfect match
	      ret = list.shift();
	    } else {
	      // complex case.
	      // we have enough to cover it, but it spans past the first buffer.
	      if (stringMode)
	        ret = '';
	      else
	        ret = new Buffer(n);

	      var c = 0;
	      for (var i = 0, l = list.length; i < l && c < n; i++) {
	        var buf = list[0];
	        var cpy = Math.min(n - c, buf.length);

	        if (stringMode)
	          ret += buf.slice(0, cpy);
	        else
	          buf.copy(ret, c, 0, cpy);

	        if (cpy < buf.length)
	          list[0] = buf.slice(cpy);
	        else
	          list.shift();

	        c += cpy;
	      }
	    }
	  }

	  return ret;
	}

	function endReadable(stream) {
	  var state = stream._readableState;

	  // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.
	  if (state.length > 0)
	    throw new Error('endReadable called on non-empty stream');

	  if (!state.endEmitted) {
	    state.ended = true;
	    process.nextTick(function() {
	      // Check that we didn't get one last unshift.
	      if (!state.endEmitted && state.length === 0) {
	        state.endEmitted = true;
	        stream.readable = false;
	        stream.emit('end');
	      }
	    });
	  }
	}

	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}

	function indexOf (xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }
	  return -1;
	}


/***/ },
/* 483 */
/***/ function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ },
/* 484 */
/***/ function(module, exports) {

	module.exports = require("buffer");

/***/ },
/* 485 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	function isBuffer(arg) {
	  return Buffer.isBuffer(arg);
	}
	exports.isBuffer = isBuffer;

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}

/***/ },
/* 486 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(471).inherits


/***/ },
/* 487 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// a duplex stream is just a stream that is both readable and writable.
	// Since JS doesn't have multiple prototypal inheritance, this class
	// prototypally inherits from Readable, and then parasitically from
	// Writable.

	module.exports = Duplex;

	/*<replacement>*/
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}
	/*</replacement>*/


	/*<replacement>*/
	var util = __webpack_require__(485);
	util.inherits = __webpack_require__(486);
	/*</replacement>*/

	var Readable = __webpack_require__(482);
	var Writable = __webpack_require__(488);

	util.inherits(Duplex, Readable);

	forEach(objectKeys(Writable.prototype), function(method) {
	  if (!Duplex.prototype[method])
	    Duplex.prototype[method] = Writable.prototype[method];
	});

	function Duplex(options) {
	  if (!(this instanceof Duplex))
	    return new Duplex(options);

	  Readable.call(this, options);
	  Writable.call(this, options);

	  if (options && options.readable === false)
	    this.readable = false;

	  if (options && options.writable === false)
	    this.writable = false;

	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false)
	    this.allowHalfOpen = false;

	  this.once('end', onend);
	}

	// the no-half-open enforcer
	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended)
	    return;

	  // no more data can be written.
	  // But allow more writes to happen in this tick.
	  process.nextTick(this.end.bind(this));
	}

	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}


/***/ },
/* 488 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// A bit simpler than readable streams.
	// Implement an async ._write(chunk, cb), and it'll handle all
	// the drain event emission and buffering.

	module.exports = Writable;

	/*<replacement>*/
	var Buffer = __webpack_require__(484).Buffer;
	/*</replacement>*/

	Writable.WritableState = WritableState;


	/*<replacement>*/
	var util = __webpack_require__(485);
	util.inherits = __webpack_require__(486);
	/*</replacement>*/

	var Stream = __webpack_require__(480);

	util.inherits(Writable, Stream);

	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	}

	function WritableState(options, stream) {
	  var Duplex = __webpack_require__(487);

	  options = options || {};

	  // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()
	  var hwm = options.highWaterMark;
	  var defaultHwm = options.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

	  // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.
	  this.objectMode = !!options.objectMode;

	  if (stream instanceof Duplex)
	    this.objectMode = this.objectMode || !!options.writableObjectMode;

	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;

	  this.needDrain = false;
	  // at the start of calling end()
	  this.ending = false;
	  // when end() has been called, and returned
	  this.ended = false;
	  // when 'finish' is emitted
	  this.finished = false;

	  // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.
	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode;

	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';

	  // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.
	  this.length = 0;

	  // a flag to see when we're in the middle of a write.
	  this.writing = false;

	  // when true all writes will be buffered until .uncork() call
	  this.corked = 0;

	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;

	  // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.
	  this.bufferProcessing = false;

	  // the callback that's passed to _write(chunk,cb)
	  this.onwrite = function(er) {
	    onwrite(stream, er);
	  };

	  // the callback that the user supplies to write(chunk,encoding,cb)
	  this.writecb = null;

	  // the amount that is being written when _write is called.
	  this.writelen = 0;

	  this.buffer = [];

	  // number of pending user-supplied write callbacks
	  // this must be 0 before 'finish' can be emitted
	  this.pendingcb = 0;

	  // emit prefinish if the only thing we're waiting for is _write cbs
	  // This is relevant for synchronous Transform streams
	  this.prefinished = false;

	  // True if the error was already emitted and should not be thrown again
	  this.errorEmitted = false;
	}

	function Writable(options) {
	  var Duplex = __webpack_require__(487);

	  // Writable ctor is applied to Duplexes, though they're not
	  // instanceof Writable, they're instanceof Readable.
	  if (!(this instanceof Writable) && !(this instanceof Duplex))
	    return new Writable(options);

	  this._writableState = new WritableState(options, this);

	  // legacy.
	  this.writable = true;

	  Stream.call(this);
	}

	// Otherwise people can pipe Writable streams, which is just wrong.
	Writable.prototype.pipe = function() {
	  this.emit('error', new Error('Cannot pipe. Not readable.'));
	};


	function writeAfterEnd(stream, state, cb) {
	  var er = new Error('write after end');
	  // TODO: defer error events consistently everywhere, not just the cb
	  stream.emit('error', er);
	  process.nextTick(function() {
	    cb(er);
	  });
	}

	// If we get something that is not a buffer, string, null, or undefined,
	// and we're not in objectMode, then that's an error.
	// Otherwise stream chunks are all considered to be of length=1, and the
	// watermarks determine how many objects to keep in the buffer, rather than
	// how many bytes or characters.
	function validChunk(stream, state, chunk, cb) {
	  var valid = true;
	  if (!util.isBuffer(chunk) &&
	      !util.isString(chunk) &&
	      !util.isNullOrUndefined(chunk) &&
	      !state.objectMode) {
	    var er = new TypeError('Invalid non-string/buffer chunk');
	    stream.emit('error', er);
	    process.nextTick(function() {
	      cb(er);
	    });
	    valid = false;
	  }
	  return valid;
	}

	Writable.prototype.write = function(chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;

	  if (util.isFunction(encoding)) {
	    cb = encoding;
	    encoding = null;
	  }

	  if (util.isBuffer(chunk))
	    encoding = 'buffer';
	  else if (!encoding)
	    encoding = state.defaultEncoding;

	  if (!util.isFunction(cb))
	    cb = function() {};

	  if (state.ended)
	    writeAfterEnd(this, state, cb);
	  else if (validChunk(this, state, chunk, cb)) {
	    state.pendingcb++;
	    ret = writeOrBuffer(this, state, chunk, encoding, cb);
	  }

	  return ret;
	};

	Writable.prototype.cork = function() {
	  var state = this._writableState;

	  state.corked++;
	};

	Writable.prototype.uncork = function() {
	  var state = this._writableState;

	  if (state.corked) {
	    state.corked--;

	    if (!state.writing &&
	        !state.corked &&
	        !state.finished &&
	        !state.bufferProcessing &&
	        state.buffer.length)
	      clearBuffer(this, state);
	  }
	};

	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode &&
	      state.decodeStrings !== false &&
	      util.isString(chunk)) {
	    chunk = new Buffer(chunk, encoding);
	  }
	  return chunk;
	}

	// if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.
	function writeOrBuffer(stream, state, chunk, encoding, cb) {
	  chunk = decodeChunk(state, chunk, encoding);
	  if (util.isBuffer(chunk))
	    encoding = 'buffer';
	  var len = state.objectMode ? 1 : chunk.length;

	  state.length += len;

	  var ret = state.length < state.highWaterMark;
	  // we must ensure that previous needDrain will not be reset to false.
	  if (!ret)
	    state.needDrain = true;

	  if (state.writing || state.corked)
	    state.buffer.push(new WriteReq(chunk, encoding, cb));
	  else
	    doWrite(stream, state, false, len, chunk, encoding, cb);

	  return ret;
	}

	function doWrite(stream, state, writev, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  if (writev)
	    stream._writev(chunk, state.onwrite);
	  else
	    stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}

	function onwriteError(stream, state, sync, er, cb) {
	  if (sync)
	    process.nextTick(function() {
	      state.pendingcb--;
	      cb(er);
	    });
	  else {
	    state.pendingcb--;
	    cb(er);
	  }

	  stream._writableState.errorEmitted = true;
	  stream.emit('error', er);
	}

	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}

	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;

	  onwriteStateUpdate(state);

	  if (er)
	    onwriteError(stream, state, sync, er, cb);
	  else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(stream, state);

	    if (!finished &&
	        !state.corked &&
	        !state.bufferProcessing &&
	        state.buffer.length) {
	      clearBuffer(stream, state);
	    }

	    if (sync) {
	      process.nextTick(function() {
	        afterWrite(stream, state, finished, cb);
	      });
	    } else {
	      afterWrite(stream, state, finished, cb);
	    }
	  }
	}

	function afterWrite(stream, state, finished, cb) {
	  if (!finished)
	    onwriteDrain(stream, state);
	  state.pendingcb--;
	  cb();
	  finishMaybe(stream, state);
	}

	// Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.
	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	}


	// if there's something in the buffer waiting, then process it
	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;

	  if (stream._writev && state.buffer.length > 1) {
	    // Fast case, write everything using _writev()
	    var cbs = [];
	    for (var c = 0; c < state.buffer.length; c++)
	      cbs.push(state.buffer[c].callback);

	    // count the one we are adding, as well.
	    // TODO(isaacs) clean this up
	    state.pendingcb++;
	    doWrite(stream, state, true, state.length, state.buffer, '', function(err) {
	      for (var i = 0; i < cbs.length; i++) {
	        state.pendingcb--;
	        cbs[i](err);
	      }
	    });

	    // Clear buffer
	    state.buffer = [];
	  } else {
	    // Slow case, write chunks one-by-one
	    for (var c = 0; c < state.buffer.length; c++) {
	      var entry = state.buffer[c];
	      var chunk = entry.chunk;
	      var encoding = entry.encoding;
	      var cb = entry.callback;
	      var len = state.objectMode ? 1 : chunk.length;

	      doWrite(stream, state, false, len, chunk, encoding, cb);

	      // if we didn't call the onwrite immediately, then
	      // it means that we need to wait until it does.
	      // also, that means that the chunk and cb are currently
	      // being processed, so move the buffer counter past them.
	      if (state.writing) {
	        c++;
	        break;
	      }
	    }

	    if (c < state.buffer.length)
	      state.buffer = state.buffer.slice(c);
	    else
	      state.buffer.length = 0;
	  }

	  state.bufferProcessing = false;
	}

	Writable.prototype._write = function(chunk, encoding, cb) {
	  cb(new Error('not implemented'));

	};

	Writable.prototype._writev = null;

	Writable.prototype.end = function(chunk, encoding, cb) {
	  var state = this._writableState;

	  if (util.isFunction(chunk)) {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (util.isFunction(encoding)) {
	    cb = encoding;
	    encoding = null;
	  }

	  if (!util.isNullOrUndefined(chunk))
	    this.write(chunk, encoding);

	  // .end() fully uncorks
	  if (state.corked) {
	    state.corked = 1;
	    this.uncork();
	  }

	  // ignore unnecessary end() calls.
	  if (!state.ending && !state.finished)
	    endWritable(this, state, cb);
	};


	function needFinish(stream, state) {
	  return (state.ending &&
	          state.length === 0 &&
	          !state.finished &&
	          !state.writing);
	}

	function prefinish(stream, state) {
	  if (!state.prefinished) {
	    state.prefinished = true;
	    stream.emit('prefinish');
	  }
	}

	function finishMaybe(stream, state) {
	  var need = needFinish(stream, state);
	  if (need) {
	    if (state.pendingcb === 0) {
	      prefinish(stream, state);
	      state.finished = true;
	      stream.emit('finish');
	    } else
	      prefinish(stream, state);
	  }
	  return need;
	}

	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);
	  if (cb) {
	    if (state.finished)
	      process.nextTick(cb);
	    else
	      stream.once('finish', cb);
	  }
	  state.ended = true;
	}


/***/ },
/* 489 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var Buffer = __webpack_require__(484).Buffer;

	var isBufferEncoding = Buffer.isEncoding
	  || function(encoding) {
	       switch (encoding && encoding.toLowerCase()) {
	         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
	         default: return false;
	       }
	     }


	function assertEncoding(encoding) {
	  if (encoding && !isBufferEncoding(encoding)) {
	    throw new Error('Unknown encoding: ' + encoding);
	  }
	}

	// StringDecoder provides an interface for efficiently splitting a series of
	// buffers into a series of JS strings without breaking apart multi-byte
	// characters. CESU-8 is handled as part of the UTF-8 encoding.
	//
	// @TODO Handling all encodings inside a single object makes it very difficult
	// to reason about this code, so it should be split up in the future.
	// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
	// points as used by CESU-8.
	var StringDecoder = exports.StringDecoder = function(encoding) {
	  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
	  assertEncoding(encoding);
	  switch (this.encoding) {
	    case 'utf8':
	      // CESU-8 represents each of Surrogate Pair by 3-bytes
	      this.surrogateSize = 3;
	      break;
	    case 'ucs2':
	    case 'utf16le':
	      // UTF-16 represents each of Surrogate Pair by 2-bytes
	      this.surrogateSize = 2;
	      this.detectIncompleteChar = utf16DetectIncompleteChar;
	      break;
	    case 'base64':
	      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
	      this.surrogateSize = 3;
	      this.detectIncompleteChar = base64DetectIncompleteChar;
	      break;
	    default:
	      this.write = passThroughWrite;
	      return;
	  }

	  // Enough space to store all bytes of a single character. UTF-8 needs 4
	  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
	  this.charBuffer = new Buffer(6);
	  // Number of bytes received for the current incomplete multi-byte character.
	  this.charReceived = 0;
	  // Number of bytes expected for the current incomplete multi-byte character.
	  this.charLength = 0;
	};


	// write decodes the given buffer and returns it as JS string that is
	// guaranteed to not contain any partial multi-byte characters. Any partial
	// character found at the end of the buffer is buffered up, and will be
	// returned when calling write again with the remaining bytes.
	//
	// Note: Converting a Buffer containing an orphan surrogate to a String
	// currently works, but converting a String to a Buffer (via `new Buffer`, or
	// Buffer#write) will replace incomplete surrogates with the unicode
	// replacement character. See https://codereview.chromium.org/121173009/ .
	StringDecoder.prototype.write = function(buffer) {
	  var charStr = '';
	  // if our last write ended with an incomplete multibyte character
	  while (this.charLength) {
	    // determine how many remaining bytes this buffer has to offer for this char
	    var available = (buffer.length >= this.charLength - this.charReceived) ?
	        this.charLength - this.charReceived :
	        buffer.length;

	    // add the new bytes to the char buffer
	    buffer.copy(this.charBuffer, this.charReceived, 0, available);
	    this.charReceived += available;

	    if (this.charReceived < this.charLength) {
	      // still not enough chars in this buffer? wait for more ...
	      return '';
	    }

	    // remove bytes belonging to the current character from the buffer
	    buffer = buffer.slice(available, buffer.length);

	    // get the character that was split
	    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

	    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	    var charCode = charStr.charCodeAt(charStr.length - 1);
	    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	      this.charLength += this.surrogateSize;
	      charStr = '';
	      continue;
	    }
	    this.charReceived = this.charLength = 0;

	    // if there are no more bytes in this buffer, just emit our char
	    if (buffer.length === 0) {
	      return charStr;
	    }
	    break;
	  }

	  // determine and set charLength / charReceived
	  this.detectIncompleteChar(buffer);

	  var end = buffer.length;
	  if (this.charLength) {
	    // buffer the incomplete character bytes we got
	    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
	    end -= this.charReceived;
	  }

	  charStr += buffer.toString(this.encoding, 0, end);

	  var end = charStr.length - 1;
	  var charCode = charStr.charCodeAt(end);
	  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	    var size = this.surrogateSize;
	    this.charLength += size;
	    this.charReceived += size;
	    this.charBuffer.copy(this.charBuffer, size, 0, size);
	    buffer.copy(this.charBuffer, 0, 0, size);
	    return charStr.substring(0, end);
	  }

	  // or just emit the charStr
	  return charStr;
	};

	// detectIncompleteChar determines if there is an incomplete UTF-8 character at
	// the end of the given buffer. If so, it sets this.charLength to the byte
	// length that character, and sets this.charReceived to the number of bytes
	// that are available for this character.
	StringDecoder.prototype.detectIncompleteChar = function(buffer) {
	  // determine how many bytes we have to check at the end of this buffer
	  var i = (buffer.length >= 3) ? 3 : buffer.length;

	  // Figure out if one of the last i bytes of our buffer announces an
	  // incomplete char.
	  for (; i > 0; i--) {
	    var c = buffer[buffer.length - i];

	    // See http://en.wikipedia.org/wiki/UTF-8#Description

	    // 110XXXXX
	    if (i == 1 && c >> 5 == 0x06) {
	      this.charLength = 2;
	      break;
	    }

	    // 1110XXXX
	    if (i <= 2 && c >> 4 == 0x0E) {
	      this.charLength = 3;
	      break;
	    }

	    // 11110XXX
	    if (i <= 3 && c >> 3 == 0x1E) {
	      this.charLength = 4;
	      break;
	    }
	  }
	  this.charReceived = i;
	};

	StringDecoder.prototype.end = function(buffer) {
	  var res = '';
	  if (buffer && buffer.length)
	    res = this.write(buffer);

	  if (this.charReceived) {
	    var cr = this.charReceived;
	    var buf = this.charBuffer;
	    var enc = this.encoding;
	    res += buf.slice(0, cr).toString(enc);
	  }

	  return res;
	};

	function passThroughWrite(buffer) {
	  return buffer.toString(this.encoding);
	}

	function utf16DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 2;
	  this.charLength = this.charReceived ? 2 : 0;
	}

	function base64DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 3;
	  this.charLength = this.charReceived ? 3 : 0;
	}


/***/ },
/* 490 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.


	// a transform stream is a readable/writable stream where you do
	// something with the data.  Sometimes it's called a "filter",
	// but that's not a great name for it, since that implies a thing where
	// some bits pass through, and others are simply ignored.  (That would
	// be a valid example of a transform, of course.)
	//
	// While the output is causally related to the input, it's not a
	// necessarily symmetric or synchronous transformation.  For example,
	// a zlib stream might take multiple plain-text writes(), and then
	// emit a single compressed chunk some time in the future.
	//
	// Here's how this works:
	//
	// The Transform stream has all the aspects of the readable and writable
	// stream classes.  When you write(chunk), that calls _write(chunk,cb)
	// internally, and returns false if there's a lot of pending writes
	// buffered up.  When you call read(), that calls _read(n) until
	// there's enough pending readable data buffered up.
	//
	// In a transform stream, the written data is placed in a buffer.  When
	// _read(n) is called, it transforms the queued up data, calling the
	// buffered _write cb's as it consumes chunks.  If consuming a single
	// written chunk would result in multiple output chunks, then the first
	// outputted bit calls the readcb, and subsequent chunks just go into
	// the read buffer, and will cause it to emit 'readable' if necessary.
	//
	// This way, back-pressure is actually determined by the reading side,
	// since _read has to be called to start processing a new chunk.  However,
	// a pathological inflate type of transform can cause excessive buffering
	// here.  For example, imagine a stream where every byte of input is
	// interpreted as an integer from 0-255, and then results in that many
	// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
	// 1kb of data being output.  In this case, you could write a very small
	// amount of input, and end up with a very large amount of output.  In
	// such a pathological inflating mechanism, there'd be no way to tell
	// the system to stop doing the transform.  A single 4MB write could
	// cause the system to run out of memory.
	//
	// However, even in such a pathological case, only a single written chunk
	// would be consumed, and then the rest would wait (un-transformed) until
	// the results of the previous transformed chunk were consumed.

	module.exports = Transform;

	var Duplex = __webpack_require__(487);

	/*<replacement>*/
	var util = __webpack_require__(485);
	util.inherits = __webpack_require__(486);
	/*</replacement>*/

	util.inherits(Transform, Duplex);


	function TransformState(options, stream) {
	  this.afterTransform = function(er, data) {
	    return afterTransform(stream, er, data);
	  };

	  this.needTransform = false;
	  this.transforming = false;
	  this.writecb = null;
	  this.writechunk = null;
	}

	function afterTransform(stream, er, data) {
	  var ts = stream._transformState;
	  ts.transforming = false;

	  var cb = ts.writecb;

	  if (!cb)
	    return stream.emit('error', new Error('no writecb in Transform class'));

	  ts.writechunk = null;
	  ts.writecb = null;

	  if (!util.isNullOrUndefined(data))
	    stream.push(data);

	  if (cb)
	    cb(er);

	  var rs = stream._readableState;
	  rs.reading = false;
	  if (rs.needReadable || rs.length < rs.highWaterMark) {
	    stream._read(rs.highWaterMark);
	  }
	}


	function Transform(options) {
	  if (!(this instanceof Transform))
	    return new Transform(options);

	  Duplex.call(this, options);

	  this._transformState = new TransformState(options, this);

	  // when the writable side finishes, then flush out anything remaining.
	  var stream = this;

	  // start out asking for a readable event once data is transformed.
	  this._readableState.needReadable = true;

	  // we have implemented the _read method, and done the other things
	  // that Readable wants before the first _read call, so unset the
	  // sync guard flag.
	  this._readableState.sync = false;

	  this.once('prefinish', function() {
	    if (util.isFunction(this._flush))
	      this._flush(function(er) {
	        done(stream, er);
	      });
	    else
	      done(stream);
	  });
	}

	Transform.prototype.push = function(chunk, encoding) {
	  this._transformState.needTransform = false;
	  return Duplex.prototype.push.call(this, chunk, encoding);
	};

	// This is the part where you do stuff!
	// override this function in implementation classes.
	// 'chunk' is an input chunk.
	//
	// Call `push(newChunk)` to pass along transformed output
	// to the readable side.  You may call 'push' zero or more times.
	//
	// Call `cb(err)` when you are done with this chunk.  If you pass
	// an error, then that'll put the hurt on the whole operation.  If you
	// never call cb(), then you'll never get another chunk.
	Transform.prototype._transform = function(chunk, encoding, cb) {
	  throw new Error('not implemented');
	};

	Transform.prototype._write = function(chunk, encoding, cb) {
	  var ts = this._transformState;
	  ts.writecb = cb;
	  ts.writechunk = chunk;
	  ts.writeencoding = encoding;
	  if (!ts.transforming) {
	    var rs = this._readableState;
	    if (ts.needTransform ||
	        rs.needReadable ||
	        rs.length < rs.highWaterMark)
	      this._read(rs.highWaterMark);
	  }
	};

	// Doesn't matter what the args are here.
	// _transform does all the work.
	// That we got here means that the readable side wants more data.
	Transform.prototype._read = function(n) {
	  var ts = this._transformState;

	  if (!util.isNull(ts.writechunk) && ts.writecb && !ts.transforming) {
	    ts.transforming = true;
	    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
	  } else {
	    // mark that we need a transform, so that any data that comes in
	    // will get processed, now that we've asked for it.
	    ts.needTransform = true;
	  }
	};


	function done(stream, er) {
	  if (er)
	    return stream.emit('error', er);

	  // if there's nothing in the write buffer, then that means
	  // that nothing more will ever be provided
	  var ws = stream._writableState;
	  var ts = stream._transformState;

	  if (ws.length)
	    throw new Error('calling transform done when ws.length != 0');

	  if (ts.transforming)
	    throw new Error('calling transform done when still transforming');

	  return stream.push(null);
	}


/***/ },
/* 491 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// a passthrough stream.
	// basically just the most minimal sort of Transform stream.
	// Every written chunk gets output as-is.

	module.exports = PassThrough;

	var Transform = __webpack_require__(490);

	/*<replacement>*/
	var util = __webpack_require__(485);
	util.inherits = __webpack_require__(486);
	/*</replacement>*/

	util.inherits(PassThrough, Transform);

	function PassThrough(options) {
	  if (!(this instanceof PassThrough))
	    return new PassThrough(options);

	  Transform.call(this, options);
	}

	PassThrough.prototype._transform = function(chunk, encoding, cb) {
	  cb(null, chunk);
	};


/***/ },
/* 492 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = ProxyHandler;

	function ProxyHandler(cbs){
		this._cbs = cbs || {};
	}

	var EVENTS = __webpack_require__(463).EVENTS;
	Object.keys(EVENTS).forEach(function(name){
		if(EVENTS[name] === 0){
			name = "on" + name;
			ProxyHandler.prototype[name] = function(){
				if(this._cbs[name]) this._cbs[name]();
			};
		} else if(EVENTS[name] === 1){
			name = "on" + name;
			ProxyHandler.prototype[name] = function(a){
				if(this._cbs[name]) this._cbs[name](a);
			};
		} else if(EVENTS[name] === 2){
			name = "on" + name;
			ProxyHandler.prototype[name] = function(a, b){
				if(this._cbs[name]) this._cbs[name](a, b);
			};
		} else {
			throw Error("wrong number of arguments");
		}
	});

/***/ },
/* 493 */
/***/ function(module, exports, __webpack_require__) {

	var DomUtils = module.exports;

	[
		__webpack_require__(494),
		__webpack_require__(505),
		__webpack_require__(506),
		__webpack_require__(507),
		__webpack_require__(508),
		__webpack_require__(509)
	].forEach(function(ext){
		Object.keys(ext).forEach(function(key){
			DomUtils[key] = ext[key].bind(DomUtils);
		});
	});


/***/ },
/* 494 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(474),
	    getOuterHTML = __webpack_require__(495),
	    isTag = ElementType.isTag;

	module.exports = {
		getInnerHTML: getInnerHTML,
		getOuterHTML: getOuterHTML,
		getText: getText
	};

	function getInnerHTML(elem, opts){
		return elem.children ? elem.children.map(function(elem){
			return getOuterHTML(elem, opts);
		}).join("") : "";
	}

	function getText(elem){
		if(Array.isArray(elem)) return elem.map(getText).join("");
		if(isTag(elem) || elem.type === ElementType.CDATA) return getText(elem.children);
		if(elem.type === ElementType.Text) return elem.data;
		return "";
	}


/***/ },
/* 495 */
/***/ function(module, exports, __webpack_require__) {

	/*
	  Module dependencies
	*/
	var ElementType = __webpack_require__(496);
	var entities = __webpack_require__(497);

	/*
	  Boolean Attributes
	*/
	var booleanAttributes = {
	  __proto__: null,
	  allowfullscreen: true,
	  async: true,
	  autofocus: true,
	  autoplay: true,
	  checked: true,
	  controls: true,
	  default: true,
	  defer: true,
	  disabled: true,
	  hidden: true,
	  ismap: true,
	  loop: true,
	  multiple: true,
	  muted: true,
	  open: true,
	  readonly: true,
	  required: true,
	  reversed: true,
	  scoped: true,
	  seamless: true,
	  selected: true,
	  typemustmatch: true
	};

	var unencodedElements = {
	  __proto__: null,
	  style: true,
	  script: true,
	  xmp: true,
	  iframe: true,
	  noembed: true,
	  noframes: true,
	  plaintext: true,
	  noscript: true
	};

	/*
	  Format attributes
	*/
	function formatAttrs(attributes, opts) {
	  if (!attributes) return;

	  var output = '',
	      value;

	  // Loop through the attributes
	  for (var key in attributes) {
	    value = attributes[key];
	    if (output) {
	      output += ' ';
	    }

	    if (!value && booleanAttributes[key]) {
	      output += key;
	    } else {
	      output += key + '="' + (opts.decodeEntities ? entities.encodeXML(value) : value) + '"';
	    }
	  }

	  return output;
	}

	/*
	  Self-enclosing tags (stolen from node-htmlparser)
	*/
	var singleTag = {
	  __proto__: null,
	  area: true,
	  base: true,
	  basefont: true,
	  br: true,
	  col: true,
	  command: true,
	  embed: true,
	  frame: true,
	  hr: true,
	  img: true,
	  input: true,
	  isindex: true,
	  keygen: true,
	  link: true,
	  meta: true,
	  param: true,
	  source: true,
	  track: true,
	  wbr: true,
	};


	var render = module.exports = function(dom, opts) {
	  if (!Array.isArray(dom) && !dom.cheerio) dom = [dom];
	  opts = opts || {};

	  var output = '';

	  for(var i = 0; i < dom.length; i++){
	    var elem = dom[i];

	    if (elem.type === 'root')
	      output += render(elem.children, opts);
	    else if (ElementType.isTag(elem))
	      output += renderTag(elem, opts);
	    else if (elem.type === ElementType.Directive)
	      output += renderDirective(elem);
	    else if (elem.type === ElementType.Comment)
	      output += renderComment(elem);
	    else if (elem.type === ElementType.CDATA)
	      output += renderCdata(elem);
	    else
	      output += renderText(elem, opts);
	  }

	  return output;
	};

	function renderTag(elem, opts) {
	  // Handle SVG
	  if (elem.name === "svg") opts = {decodeEntities: opts.decodeEntities, xmlMode: true};

	  var tag = '<' + elem.name,
	      attribs = formatAttrs(elem.attribs, opts);

	  if (attribs) {
	    tag += ' ' + attribs;
	  }

	  if (
	    opts.xmlMode
	    && (!elem.children || elem.children.length === 0)
	  ) {
	    tag += '/>';
	  } else {
	    tag += '>';
	    if (elem.children) {
	      tag += render(elem.children, opts);
	    }

	    if (!singleTag[elem.name] || opts.xmlMode) {
	      tag += '</' + elem.name + '>';
	    }
	  }

	  return tag;
	}

	function renderDirective(elem) {
	  return '<' + elem.data + '>';
	}

	function renderText(elem, opts) {
	  var data = elem.data || '';

	  // if entities weren't decoded, no need to encode them back
	  if (opts.decodeEntities && !(elem.parent && elem.parent.name in unencodedElements)) {
	    data = entities.encodeXML(data);
	  }

	  return data;
	}

	function renderCdata(elem) {
	  return '<![CDATA[' + elem.children[0].data + ']]>';
	}

	function renderComment(elem) {
	  return '<!--' + elem.data + '-->';
	}


/***/ },
/* 496 */
/***/ function(module, exports) {

	//Types of elements found in the DOM
	module.exports = {
		Text: "text", //Text
		Directive: "directive", //<? ... ?>
		Comment: "comment", //<!-- ... -->
		Script: "script", //<script> tags
		Style: "style", //<style> tags
		Tag: "tag", //Any tag
		CDATA: "cdata", //<![CDATA[ ... ]]>

		isTag: function(elem){
			return elem.type === "tag" || elem.type === "script" || elem.type === "style";
		}
	};

/***/ },
/* 497 */
/***/ function(module, exports, __webpack_require__) {

	var encode = __webpack_require__(498),
	    decode = __webpack_require__(501);

	exports.decode = function(data, level){
		return (!level || level <= 0 ? decode.XML : decode.HTML)(data);
	};

	exports.decodeStrict = function(data, level){
		return (!level || level <= 0 ? decode.XML : decode.HTMLStrict)(data);
	};

	exports.encode = function(data, level){
		return (!level || level <= 0 ? encode.XML : encode.HTML)(data);
	};

	exports.encodeXML = encode.XML;

	exports.encodeHTML4 =
	exports.encodeHTML5 =
	exports.encodeHTML  = encode.HTML;

	exports.decodeXML =
	exports.decodeXMLStrict = decode.XML;

	exports.decodeHTML4 =
	exports.decodeHTML5 =
	exports.decodeHTML = decode.HTML;

	exports.decodeHTML4Strict =
	exports.decodeHTML5Strict =
	exports.decodeHTMLStrict = decode.HTMLStrict;

	exports.escape = encode.escape;


/***/ },
/* 498 */
/***/ function(module, exports, __webpack_require__) {

	var inverseXML = getInverseObj(__webpack_require__(499)),
	    xmlReplacer = getInverseReplacer(inverseXML);

	exports.XML = getInverse(inverseXML, xmlReplacer);

	var inverseHTML = getInverseObj(__webpack_require__(500)),
	    htmlReplacer = getInverseReplacer(inverseHTML);

	exports.HTML = getInverse(inverseHTML, htmlReplacer);

	function getInverseObj(obj){
		return Object.keys(obj).sort().reduce(function(inverse, name){
			inverse[obj[name]] = "&" + name + ";";
			return inverse;
		}, {});
	}

	function getInverseReplacer(inverse){
		var single = [],
		    multiple = [];

		Object.keys(inverse).forEach(function(k){
			if(k.length === 1){
				single.push("\\" + k);
			} else {
				multiple.push(k);
			}
		});

		//TODO add ranges
		multiple.unshift("[" + single.join("") + "]");

		return new RegExp(multiple.join("|"), "g");
	}

	var re_nonASCII = /[^\0-\x7F]/g,
	    re_astralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

	function singleCharReplacer(c){
		return "&#x" + c.charCodeAt(0).toString(16).toUpperCase() + ";";
	}

	function astralReplacer(c){
		// http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae
		var high = c.charCodeAt(0);
		var low  = c.charCodeAt(1);
		var codePoint = (high - 0xD800) * 0x400 + low - 0xDC00 + 0x10000;
		return "&#x" + codePoint.toString(16).toUpperCase() + ";";
	}

	function getInverse(inverse, re){
		function func(name){
			return inverse[name];
		}

		return function(data){
			return data
					.replace(re, func)
					.replace(re_astralSymbols, astralReplacer)
					.replace(re_nonASCII, singleCharReplacer);
		};
	}

	var re_xmlChars = getInverseReplacer(inverseXML);

	function escapeXML(data){
		return data
				.replace(re_xmlChars, singleCharReplacer)
				.replace(re_astralSymbols, astralReplacer)
				.replace(re_nonASCII, singleCharReplacer);
	}

	exports.escape = escapeXML;


/***/ },
/* 499 */
/***/ function(module, exports) {

	module.exports = {
		"amp": "&",
		"apos": "'",
		"gt": ">",
		"lt": "<",
		"quot": "\""
	}

/***/ },
/* 500 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Abreve": "Ă",
		"abreve": "ă",
		"ac": "∾",
		"acd": "∿",
		"acE": "∾̳",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"Acy": "А",
		"acy": "а",
		"AElig": "Æ",
		"aelig": "æ",
		"af": "⁡",
		"Afr": "𝔄",
		"afr": "𝔞",
		"Agrave": "À",
		"agrave": "à",
		"alefsym": "ℵ",
		"aleph": "ℵ",
		"Alpha": "Α",
		"alpha": "α",
		"Amacr": "Ā",
		"amacr": "ā",
		"amalg": "⨿",
		"amp": "&",
		"AMP": "&",
		"andand": "⩕",
		"And": "⩓",
		"and": "∧",
		"andd": "⩜",
		"andslope": "⩘",
		"andv": "⩚",
		"ang": "∠",
		"ange": "⦤",
		"angle": "∠",
		"angmsdaa": "⦨",
		"angmsdab": "⦩",
		"angmsdac": "⦪",
		"angmsdad": "⦫",
		"angmsdae": "⦬",
		"angmsdaf": "⦭",
		"angmsdag": "⦮",
		"angmsdah": "⦯",
		"angmsd": "∡",
		"angrt": "∟",
		"angrtvb": "⊾",
		"angrtvbd": "⦝",
		"angsph": "∢",
		"angst": "Å",
		"angzarr": "⍼",
		"Aogon": "Ą",
		"aogon": "ą",
		"Aopf": "𝔸",
		"aopf": "𝕒",
		"apacir": "⩯",
		"ap": "≈",
		"apE": "⩰",
		"ape": "≊",
		"apid": "≋",
		"apos": "'",
		"ApplyFunction": "⁡",
		"approx": "≈",
		"approxeq": "≊",
		"Aring": "Å",
		"aring": "å",
		"Ascr": "𝒜",
		"ascr": "𝒶",
		"Assign": "≔",
		"ast": "*",
		"asymp": "≈",
		"asympeq": "≍",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"awconint": "∳",
		"awint": "⨑",
		"backcong": "≌",
		"backepsilon": "϶",
		"backprime": "‵",
		"backsim": "∽",
		"backsimeq": "⋍",
		"Backslash": "∖",
		"Barv": "⫧",
		"barvee": "⊽",
		"barwed": "⌅",
		"Barwed": "⌆",
		"barwedge": "⌅",
		"bbrk": "⎵",
		"bbrktbrk": "⎶",
		"bcong": "≌",
		"Bcy": "Б",
		"bcy": "б",
		"bdquo": "„",
		"becaus": "∵",
		"because": "∵",
		"Because": "∵",
		"bemptyv": "⦰",
		"bepsi": "϶",
		"bernou": "ℬ",
		"Bernoullis": "ℬ",
		"Beta": "Β",
		"beta": "β",
		"beth": "ℶ",
		"between": "≬",
		"Bfr": "𝔅",
		"bfr": "𝔟",
		"bigcap": "⋂",
		"bigcirc": "◯",
		"bigcup": "⋃",
		"bigodot": "⨀",
		"bigoplus": "⨁",
		"bigotimes": "⨂",
		"bigsqcup": "⨆",
		"bigstar": "★",
		"bigtriangledown": "▽",
		"bigtriangleup": "△",
		"biguplus": "⨄",
		"bigvee": "⋁",
		"bigwedge": "⋀",
		"bkarow": "⤍",
		"blacklozenge": "⧫",
		"blacksquare": "▪",
		"blacktriangle": "▴",
		"blacktriangledown": "▾",
		"blacktriangleleft": "◂",
		"blacktriangleright": "▸",
		"blank": "␣",
		"blk12": "▒",
		"blk14": "░",
		"blk34": "▓",
		"block": "█",
		"bne": "=⃥",
		"bnequiv": "≡⃥",
		"bNot": "⫭",
		"bnot": "⌐",
		"Bopf": "𝔹",
		"bopf": "𝕓",
		"bot": "⊥",
		"bottom": "⊥",
		"bowtie": "⋈",
		"boxbox": "⧉",
		"boxdl": "┐",
		"boxdL": "╕",
		"boxDl": "╖",
		"boxDL": "╗",
		"boxdr": "┌",
		"boxdR": "╒",
		"boxDr": "╓",
		"boxDR": "╔",
		"boxh": "─",
		"boxH": "═",
		"boxhd": "┬",
		"boxHd": "╤",
		"boxhD": "╥",
		"boxHD": "╦",
		"boxhu": "┴",
		"boxHu": "╧",
		"boxhU": "╨",
		"boxHU": "╩",
		"boxminus": "⊟",
		"boxplus": "⊞",
		"boxtimes": "⊠",
		"boxul": "┘",
		"boxuL": "╛",
		"boxUl": "╜",
		"boxUL": "╝",
		"boxur": "└",
		"boxuR": "╘",
		"boxUr": "╙",
		"boxUR": "╚",
		"boxv": "│",
		"boxV": "║",
		"boxvh": "┼",
		"boxvH": "╪",
		"boxVh": "╫",
		"boxVH": "╬",
		"boxvl": "┤",
		"boxvL": "╡",
		"boxVl": "╢",
		"boxVL": "╣",
		"boxvr": "├",
		"boxvR": "╞",
		"boxVr": "╟",
		"boxVR": "╠",
		"bprime": "‵",
		"breve": "˘",
		"Breve": "˘",
		"brvbar": "¦",
		"bscr": "𝒷",
		"Bscr": "ℬ",
		"bsemi": "⁏",
		"bsim": "∽",
		"bsime": "⋍",
		"bsolb": "⧅",
		"bsol": "\\",
		"bsolhsub": "⟈",
		"bull": "•",
		"bullet": "•",
		"bump": "≎",
		"bumpE": "⪮",
		"bumpe": "≏",
		"Bumpeq": "≎",
		"bumpeq": "≏",
		"Cacute": "Ć",
		"cacute": "ć",
		"capand": "⩄",
		"capbrcup": "⩉",
		"capcap": "⩋",
		"cap": "∩",
		"Cap": "⋒",
		"capcup": "⩇",
		"capdot": "⩀",
		"CapitalDifferentialD": "ⅅ",
		"caps": "∩︀",
		"caret": "⁁",
		"caron": "ˇ",
		"Cayleys": "ℭ",
		"ccaps": "⩍",
		"Ccaron": "Č",
		"ccaron": "č",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"Ccirc": "Ĉ",
		"ccirc": "ĉ",
		"Cconint": "∰",
		"ccups": "⩌",
		"ccupssm": "⩐",
		"Cdot": "Ċ",
		"cdot": "ċ",
		"cedil": "¸",
		"Cedilla": "¸",
		"cemptyv": "⦲",
		"cent": "¢",
		"centerdot": "·",
		"CenterDot": "·",
		"cfr": "𝔠",
		"Cfr": "ℭ",
		"CHcy": "Ч",
		"chcy": "ч",
		"check": "✓",
		"checkmark": "✓",
		"Chi": "Χ",
		"chi": "χ",
		"circ": "ˆ",
		"circeq": "≗",
		"circlearrowleft": "↺",
		"circlearrowright": "↻",
		"circledast": "⊛",
		"circledcirc": "⊚",
		"circleddash": "⊝",
		"CircleDot": "⊙",
		"circledR": "®",
		"circledS": "Ⓢ",
		"CircleMinus": "⊖",
		"CirclePlus": "⊕",
		"CircleTimes": "⊗",
		"cir": "○",
		"cirE": "⧃",
		"cire": "≗",
		"cirfnint": "⨐",
		"cirmid": "⫯",
		"cirscir": "⧂",
		"ClockwiseContourIntegral": "∲",
		"CloseCurlyDoubleQuote": "”",
		"CloseCurlyQuote": "’",
		"clubs": "♣",
		"clubsuit": "♣",
		"colon": ":",
		"Colon": "∷",
		"Colone": "⩴",
		"colone": "≔",
		"coloneq": "≔",
		"comma": ",",
		"commat": "@",
		"comp": "∁",
		"compfn": "∘",
		"complement": "∁",
		"complexes": "ℂ",
		"cong": "≅",
		"congdot": "⩭",
		"Congruent": "≡",
		"conint": "∮",
		"Conint": "∯",
		"ContourIntegral": "∮",
		"copf": "𝕔",
		"Copf": "ℂ",
		"coprod": "∐",
		"Coproduct": "∐",
		"copy": "©",
		"COPY": "©",
		"copysr": "℗",
		"CounterClockwiseContourIntegral": "∳",
		"crarr": "↵",
		"cross": "✗",
		"Cross": "⨯",
		"Cscr": "𝒞",
		"cscr": "𝒸",
		"csub": "⫏",
		"csube": "⫑",
		"csup": "⫐",
		"csupe": "⫒",
		"ctdot": "⋯",
		"cudarrl": "⤸",
		"cudarrr": "⤵",
		"cuepr": "⋞",
		"cuesc": "⋟",
		"cularr": "↶",
		"cularrp": "⤽",
		"cupbrcap": "⩈",
		"cupcap": "⩆",
		"CupCap": "≍",
		"cup": "∪",
		"Cup": "⋓",
		"cupcup": "⩊",
		"cupdot": "⊍",
		"cupor": "⩅",
		"cups": "∪︀",
		"curarr": "↷",
		"curarrm": "⤼",
		"curlyeqprec": "⋞",
		"curlyeqsucc": "⋟",
		"curlyvee": "⋎",
		"curlywedge": "⋏",
		"curren": "¤",
		"curvearrowleft": "↶",
		"curvearrowright": "↷",
		"cuvee": "⋎",
		"cuwed": "⋏",
		"cwconint": "∲",
		"cwint": "∱",
		"cylcty": "⌭",
		"dagger": "†",
		"Dagger": "‡",
		"daleth": "ℸ",
		"darr": "↓",
		"Darr": "↡",
		"dArr": "⇓",
		"dash": "‐",
		"Dashv": "⫤",
		"dashv": "⊣",
		"dbkarow": "⤏",
		"dblac": "˝",
		"Dcaron": "Ď",
		"dcaron": "ď",
		"Dcy": "Д",
		"dcy": "д",
		"ddagger": "‡",
		"ddarr": "⇊",
		"DD": "ⅅ",
		"dd": "ⅆ",
		"DDotrahd": "⤑",
		"ddotseq": "⩷",
		"deg": "°",
		"Del": "∇",
		"Delta": "Δ",
		"delta": "δ",
		"demptyv": "⦱",
		"dfisht": "⥿",
		"Dfr": "𝔇",
		"dfr": "𝔡",
		"dHar": "⥥",
		"dharl": "⇃",
		"dharr": "⇂",
		"DiacriticalAcute": "´",
		"DiacriticalDot": "˙",
		"DiacriticalDoubleAcute": "˝",
		"DiacriticalGrave": "`",
		"DiacriticalTilde": "˜",
		"diam": "⋄",
		"diamond": "⋄",
		"Diamond": "⋄",
		"diamondsuit": "♦",
		"diams": "♦",
		"die": "¨",
		"DifferentialD": "ⅆ",
		"digamma": "ϝ",
		"disin": "⋲",
		"div": "÷",
		"divide": "÷",
		"divideontimes": "⋇",
		"divonx": "⋇",
		"DJcy": "Ђ",
		"djcy": "ђ",
		"dlcorn": "⌞",
		"dlcrop": "⌍",
		"dollar": "$",
		"Dopf": "𝔻",
		"dopf": "𝕕",
		"Dot": "¨",
		"dot": "˙",
		"DotDot": "⃜",
		"doteq": "≐",
		"doteqdot": "≑",
		"DotEqual": "≐",
		"dotminus": "∸",
		"dotplus": "∔",
		"dotsquare": "⊡",
		"doublebarwedge": "⌆",
		"DoubleContourIntegral": "∯",
		"DoubleDot": "¨",
		"DoubleDownArrow": "⇓",
		"DoubleLeftArrow": "⇐",
		"DoubleLeftRightArrow": "⇔",
		"DoubleLeftTee": "⫤",
		"DoubleLongLeftArrow": "⟸",
		"DoubleLongLeftRightArrow": "⟺",
		"DoubleLongRightArrow": "⟹",
		"DoubleRightArrow": "⇒",
		"DoubleRightTee": "⊨",
		"DoubleUpArrow": "⇑",
		"DoubleUpDownArrow": "⇕",
		"DoubleVerticalBar": "∥",
		"DownArrowBar": "⤓",
		"downarrow": "↓",
		"DownArrow": "↓",
		"Downarrow": "⇓",
		"DownArrowUpArrow": "⇵",
		"DownBreve": "̑",
		"downdownarrows": "⇊",
		"downharpoonleft": "⇃",
		"downharpoonright": "⇂",
		"DownLeftRightVector": "⥐",
		"DownLeftTeeVector": "⥞",
		"DownLeftVectorBar": "⥖",
		"DownLeftVector": "↽",
		"DownRightTeeVector": "⥟",
		"DownRightVectorBar": "⥗",
		"DownRightVector": "⇁",
		"DownTeeArrow": "↧",
		"DownTee": "⊤",
		"drbkarow": "⤐",
		"drcorn": "⌟",
		"drcrop": "⌌",
		"Dscr": "𝒟",
		"dscr": "𝒹",
		"DScy": "Ѕ",
		"dscy": "ѕ",
		"dsol": "⧶",
		"Dstrok": "Đ",
		"dstrok": "đ",
		"dtdot": "⋱",
		"dtri": "▿",
		"dtrif": "▾",
		"duarr": "⇵",
		"duhar": "⥯",
		"dwangle": "⦦",
		"DZcy": "Џ",
		"dzcy": "џ",
		"dzigrarr": "⟿",
		"Eacute": "É",
		"eacute": "é",
		"easter": "⩮",
		"Ecaron": "Ě",
		"ecaron": "ě",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"ecir": "≖",
		"ecolon": "≕",
		"Ecy": "Э",
		"ecy": "э",
		"eDDot": "⩷",
		"Edot": "Ė",
		"edot": "ė",
		"eDot": "≑",
		"ee": "ⅇ",
		"efDot": "≒",
		"Efr": "𝔈",
		"efr": "𝔢",
		"eg": "⪚",
		"Egrave": "È",
		"egrave": "è",
		"egs": "⪖",
		"egsdot": "⪘",
		"el": "⪙",
		"Element": "∈",
		"elinters": "⏧",
		"ell": "ℓ",
		"els": "⪕",
		"elsdot": "⪗",
		"Emacr": "Ē",
		"emacr": "ē",
		"empty": "∅",
		"emptyset": "∅",
		"EmptySmallSquare": "◻",
		"emptyv": "∅",
		"EmptyVerySmallSquare": "▫",
		"emsp13": " ",
		"emsp14": " ",
		"emsp": " ",
		"ENG": "Ŋ",
		"eng": "ŋ",
		"ensp": " ",
		"Eogon": "Ę",
		"eogon": "ę",
		"Eopf": "𝔼",
		"eopf": "𝕖",
		"epar": "⋕",
		"eparsl": "⧣",
		"eplus": "⩱",
		"epsi": "ε",
		"Epsilon": "Ε",
		"epsilon": "ε",
		"epsiv": "ϵ",
		"eqcirc": "≖",
		"eqcolon": "≕",
		"eqsim": "≂",
		"eqslantgtr": "⪖",
		"eqslantless": "⪕",
		"Equal": "⩵",
		"equals": "=",
		"EqualTilde": "≂",
		"equest": "≟",
		"Equilibrium": "⇌",
		"equiv": "≡",
		"equivDD": "⩸",
		"eqvparsl": "⧥",
		"erarr": "⥱",
		"erDot": "≓",
		"escr": "ℯ",
		"Escr": "ℰ",
		"esdot": "≐",
		"Esim": "⩳",
		"esim": "≂",
		"Eta": "Η",
		"eta": "η",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"euro": "€",
		"excl": "!",
		"exist": "∃",
		"Exists": "∃",
		"expectation": "ℰ",
		"exponentiale": "ⅇ",
		"ExponentialE": "ⅇ",
		"fallingdotseq": "≒",
		"Fcy": "Ф",
		"fcy": "ф",
		"female": "♀",
		"ffilig": "ﬃ",
		"fflig": "ﬀ",
		"ffllig": "ﬄ",
		"Ffr": "𝔉",
		"ffr": "𝔣",
		"filig": "ﬁ",
		"FilledSmallSquare": "◼",
		"FilledVerySmallSquare": "▪",
		"fjlig": "fj",
		"flat": "♭",
		"fllig": "ﬂ",
		"fltns": "▱",
		"fnof": "ƒ",
		"Fopf": "𝔽",
		"fopf": "𝕗",
		"forall": "∀",
		"ForAll": "∀",
		"fork": "⋔",
		"forkv": "⫙",
		"Fouriertrf": "ℱ",
		"fpartint": "⨍",
		"frac12": "½",
		"frac13": "⅓",
		"frac14": "¼",
		"frac15": "⅕",
		"frac16": "⅙",
		"frac18": "⅛",
		"frac23": "⅔",
		"frac25": "⅖",
		"frac34": "¾",
		"frac35": "⅗",
		"frac38": "⅜",
		"frac45": "⅘",
		"frac56": "⅚",
		"frac58": "⅝",
		"frac78": "⅞",
		"frasl": "⁄",
		"frown": "⌢",
		"fscr": "𝒻",
		"Fscr": "ℱ",
		"gacute": "ǵ",
		"Gamma": "Γ",
		"gamma": "γ",
		"Gammad": "Ϝ",
		"gammad": "ϝ",
		"gap": "⪆",
		"Gbreve": "Ğ",
		"gbreve": "ğ",
		"Gcedil": "Ģ",
		"Gcirc": "Ĝ",
		"gcirc": "ĝ",
		"Gcy": "Г",
		"gcy": "г",
		"Gdot": "Ġ",
		"gdot": "ġ",
		"ge": "≥",
		"gE": "≧",
		"gEl": "⪌",
		"gel": "⋛",
		"geq": "≥",
		"geqq": "≧",
		"geqslant": "⩾",
		"gescc": "⪩",
		"ges": "⩾",
		"gesdot": "⪀",
		"gesdoto": "⪂",
		"gesdotol": "⪄",
		"gesl": "⋛︀",
		"gesles": "⪔",
		"Gfr": "𝔊",
		"gfr": "𝔤",
		"gg": "≫",
		"Gg": "⋙",
		"ggg": "⋙",
		"gimel": "ℷ",
		"GJcy": "Ѓ",
		"gjcy": "ѓ",
		"gla": "⪥",
		"gl": "≷",
		"glE": "⪒",
		"glj": "⪤",
		"gnap": "⪊",
		"gnapprox": "⪊",
		"gne": "⪈",
		"gnE": "≩",
		"gneq": "⪈",
		"gneqq": "≩",
		"gnsim": "⋧",
		"Gopf": "𝔾",
		"gopf": "𝕘",
		"grave": "`",
		"GreaterEqual": "≥",
		"GreaterEqualLess": "⋛",
		"GreaterFullEqual": "≧",
		"GreaterGreater": "⪢",
		"GreaterLess": "≷",
		"GreaterSlantEqual": "⩾",
		"GreaterTilde": "≳",
		"Gscr": "𝒢",
		"gscr": "ℊ",
		"gsim": "≳",
		"gsime": "⪎",
		"gsiml": "⪐",
		"gtcc": "⪧",
		"gtcir": "⩺",
		"gt": ">",
		"GT": ">",
		"Gt": "≫",
		"gtdot": "⋗",
		"gtlPar": "⦕",
		"gtquest": "⩼",
		"gtrapprox": "⪆",
		"gtrarr": "⥸",
		"gtrdot": "⋗",
		"gtreqless": "⋛",
		"gtreqqless": "⪌",
		"gtrless": "≷",
		"gtrsim": "≳",
		"gvertneqq": "≩︀",
		"gvnE": "≩︀",
		"Hacek": "ˇ",
		"hairsp": " ",
		"half": "½",
		"hamilt": "ℋ",
		"HARDcy": "Ъ",
		"hardcy": "ъ",
		"harrcir": "⥈",
		"harr": "↔",
		"hArr": "⇔",
		"harrw": "↭",
		"Hat": "^",
		"hbar": "ℏ",
		"Hcirc": "Ĥ",
		"hcirc": "ĥ",
		"hearts": "♥",
		"heartsuit": "♥",
		"hellip": "…",
		"hercon": "⊹",
		"hfr": "𝔥",
		"Hfr": "ℌ",
		"HilbertSpace": "ℋ",
		"hksearow": "⤥",
		"hkswarow": "⤦",
		"hoarr": "⇿",
		"homtht": "∻",
		"hookleftarrow": "↩",
		"hookrightarrow": "↪",
		"hopf": "𝕙",
		"Hopf": "ℍ",
		"horbar": "―",
		"HorizontalLine": "─",
		"hscr": "𝒽",
		"Hscr": "ℋ",
		"hslash": "ℏ",
		"Hstrok": "Ħ",
		"hstrok": "ħ",
		"HumpDownHump": "≎",
		"HumpEqual": "≏",
		"hybull": "⁃",
		"hyphen": "‐",
		"Iacute": "Í",
		"iacute": "í",
		"ic": "⁣",
		"Icirc": "Î",
		"icirc": "î",
		"Icy": "И",
		"icy": "и",
		"Idot": "İ",
		"IEcy": "Е",
		"iecy": "е",
		"iexcl": "¡",
		"iff": "⇔",
		"ifr": "𝔦",
		"Ifr": "ℑ",
		"Igrave": "Ì",
		"igrave": "ì",
		"ii": "ⅈ",
		"iiiint": "⨌",
		"iiint": "∭",
		"iinfin": "⧜",
		"iiota": "℩",
		"IJlig": "Ĳ",
		"ijlig": "ĳ",
		"Imacr": "Ī",
		"imacr": "ī",
		"image": "ℑ",
		"ImaginaryI": "ⅈ",
		"imagline": "ℐ",
		"imagpart": "ℑ",
		"imath": "ı",
		"Im": "ℑ",
		"imof": "⊷",
		"imped": "Ƶ",
		"Implies": "⇒",
		"incare": "℅",
		"in": "∈",
		"infin": "∞",
		"infintie": "⧝",
		"inodot": "ı",
		"intcal": "⊺",
		"int": "∫",
		"Int": "∬",
		"integers": "ℤ",
		"Integral": "∫",
		"intercal": "⊺",
		"Intersection": "⋂",
		"intlarhk": "⨗",
		"intprod": "⨼",
		"InvisibleComma": "⁣",
		"InvisibleTimes": "⁢",
		"IOcy": "Ё",
		"iocy": "ё",
		"Iogon": "Į",
		"iogon": "į",
		"Iopf": "𝕀",
		"iopf": "𝕚",
		"Iota": "Ι",
		"iota": "ι",
		"iprod": "⨼",
		"iquest": "¿",
		"iscr": "𝒾",
		"Iscr": "ℐ",
		"isin": "∈",
		"isindot": "⋵",
		"isinE": "⋹",
		"isins": "⋴",
		"isinsv": "⋳",
		"isinv": "∈",
		"it": "⁢",
		"Itilde": "Ĩ",
		"itilde": "ĩ",
		"Iukcy": "І",
		"iukcy": "і",
		"Iuml": "Ï",
		"iuml": "ï",
		"Jcirc": "Ĵ",
		"jcirc": "ĵ",
		"Jcy": "Й",
		"jcy": "й",
		"Jfr": "𝔍",
		"jfr": "𝔧",
		"jmath": "ȷ",
		"Jopf": "𝕁",
		"jopf": "𝕛",
		"Jscr": "𝒥",
		"jscr": "𝒿",
		"Jsercy": "Ј",
		"jsercy": "ј",
		"Jukcy": "Є",
		"jukcy": "є",
		"Kappa": "Κ",
		"kappa": "κ",
		"kappav": "ϰ",
		"Kcedil": "Ķ",
		"kcedil": "ķ",
		"Kcy": "К",
		"kcy": "к",
		"Kfr": "𝔎",
		"kfr": "𝔨",
		"kgreen": "ĸ",
		"KHcy": "Х",
		"khcy": "х",
		"KJcy": "Ќ",
		"kjcy": "ќ",
		"Kopf": "𝕂",
		"kopf": "𝕜",
		"Kscr": "𝒦",
		"kscr": "𝓀",
		"lAarr": "⇚",
		"Lacute": "Ĺ",
		"lacute": "ĺ",
		"laemptyv": "⦴",
		"lagran": "ℒ",
		"Lambda": "Λ",
		"lambda": "λ",
		"lang": "⟨",
		"Lang": "⟪",
		"langd": "⦑",
		"langle": "⟨",
		"lap": "⪅",
		"Laplacetrf": "ℒ",
		"laquo": "«",
		"larrb": "⇤",
		"larrbfs": "⤟",
		"larr": "←",
		"Larr": "↞",
		"lArr": "⇐",
		"larrfs": "⤝",
		"larrhk": "↩",
		"larrlp": "↫",
		"larrpl": "⤹",
		"larrsim": "⥳",
		"larrtl": "↢",
		"latail": "⤙",
		"lAtail": "⤛",
		"lat": "⪫",
		"late": "⪭",
		"lates": "⪭︀",
		"lbarr": "⤌",
		"lBarr": "⤎",
		"lbbrk": "❲",
		"lbrace": "{",
		"lbrack": "[",
		"lbrke": "⦋",
		"lbrksld": "⦏",
		"lbrkslu": "⦍",
		"Lcaron": "Ľ",
		"lcaron": "ľ",
		"Lcedil": "Ļ",
		"lcedil": "ļ",
		"lceil": "⌈",
		"lcub": "{",
		"Lcy": "Л",
		"lcy": "л",
		"ldca": "⤶",
		"ldquo": "“",
		"ldquor": "„",
		"ldrdhar": "⥧",
		"ldrushar": "⥋",
		"ldsh": "↲",
		"le": "≤",
		"lE": "≦",
		"LeftAngleBracket": "⟨",
		"LeftArrowBar": "⇤",
		"leftarrow": "←",
		"LeftArrow": "←",
		"Leftarrow": "⇐",
		"LeftArrowRightArrow": "⇆",
		"leftarrowtail": "↢",
		"LeftCeiling": "⌈",
		"LeftDoubleBracket": "⟦",
		"LeftDownTeeVector": "⥡",
		"LeftDownVectorBar": "⥙",
		"LeftDownVector": "⇃",
		"LeftFloor": "⌊",
		"leftharpoondown": "↽",
		"leftharpoonup": "↼",
		"leftleftarrows": "⇇",
		"leftrightarrow": "↔",
		"LeftRightArrow": "↔",
		"Leftrightarrow": "⇔",
		"leftrightarrows": "⇆",
		"leftrightharpoons": "⇋",
		"leftrightsquigarrow": "↭",
		"LeftRightVector": "⥎",
		"LeftTeeArrow": "↤",
		"LeftTee": "⊣",
		"LeftTeeVector": "⥚",
		"leftthreetimes": "⋋",
		"LeftTriangleBar": "⧏",
		"LeftTriangle": "⊲",
		"LeftTriangleEqual": "⊴",
		"LeftUpDownVector": "⥑",
		"LeftUpTeeVector": "⥠",
		"LeftUpVectorBar": "⥘",
		"LeftUpVector": "↿",
		"LeftVectorBar": "⥒",
		"LeftVector": "↼",
		"lEg": "⪋",
		"leg": "⋚",
		"leq": "≤",
		"leqq": "≦",
		"leqslant": "⩽",
		"lescc": "⪨",
		"les": "⩽",
		"lesdot": "⩿",
		"lesdoto": "⪁",
		"lesdotor": "⪃",
		"lesg": "⋚︀",
		"lesges": "⪓",
		"lessapprox": "⪅",
		"lessdot": "⋖",
		"lesseqgtr": "⋚",
		"lesseqqgtr": "⪋",
		"LessEqualGreater": "⋚",
		"LessFullEqual": "≦",
		"LessGreater": "≶",
		"lessgtr": "≶",
		"LessLess": "⪡",
		"lesssim": "≲",
		"LessSlantEqual": "⩽",
		"LessTilde": "≲",
		"lfisht": "⥼",
		"lfloor": "⌊",
		"Lfr": "𝔏",
		"lfr": "𝔩",
		"lg": "≶",
		"lgE": "⪑",
		"lHar": "⥢",
		"lhard": "↽",
		"lharu": "↼",
		"lharul": "⥪",
		"lhblk": "▄",
		"LJcy": "Љ",
		"ljcy": "љ",
		"llarr": "⇇",
		"ll": "≪",
		"Ll": "⋘",
		"llcorner": "⌞",
		"Lleftarrow": "⇚",
		"llhard": "⥫",
		"lltri": "◺",
		"Lmidot": "Ŀ",
		"lmidot": "ŀ",
		"lmoustache": "⎰",
		"lmoust": "⎰",
		"lnap": "⪉",
		"lnapprox": "⪉",
		"lne": "⪇",
		"lnE": "≨",
		"lneq": "⪇",
		"lneqq": "≨",
		"lnsim": "⋦",
		"loang": "⟬",
		"loarr": "⇽",
		"lobrk": "⟦",
		"longleftarrow": "⟵",
		"LongLeftArrow": "⟵",
		"Longleftarrow": "⟸",
		"longleftrightarrow": "⟷",
		"LongLeftRightArrow": "⟷",
		"Longleftrightarrow": "⟺",
		"longmapsto": "⟼",
		"longrightarrow": "⟶",
		"LongRightArrow": "⟶",
		"Longrightarrow": "⟹",
		"looparrowleft": "↫",
		"looparrowright": "↬",
		"lopar": "⦅",
		"Lopf": "𝕃",
		"lopf": "𝕝",
		"loplus": "⨭",
		"lotimes": "⨴",
		"lowast": "∗",
		"lowbar": "_",
		"LowerLeftArrow": "↙",
		"LowerRightArrow": "↘",
		"loz": "◊",
		"lozenge": "◊",
		"lozf": "⧫",
		"lpar": "(",
		"lparlt": "⦓",
		"lrarr": "⇆",
		"lrcorner": "⌟",
		"lrhar": "⇋",
		"lrhard": "⥭",
		"lrm": "‎",
		"lrtri": "⊿",
		"lsaquo": "‹",
		"lscr": "𝓁",
		"Lscr": "ℒ",
		"lsh": "↰",
		"Lsh": "↰",
		"lsim": "≲",
		"lsime": "⪍",
		"lsimg": "⪏",
		"lsqb": "[",
		"lsquo": "‘",
		"lsquor": "‚",
		"Lstrok": "Ł",
		"lstrok": "ł",
		"ltcc": "⪦",
		"ltcir": "⩹",
		"lt": "<",
		"LT": "<",
		"Lt": "≪",
		"ltdot": "⋖",
		"lthree": "⋋",
		"ltimes": "⋉",
		"ltlarr": "⥶",
		"ltquest": "⩻",
		"ltri": "◃",
		"ltrie": "⊴",
		"ltrif": "◂",
		"ltrPar": "⦖",
		"lurdshar": "⥊",
		"luruhar": "⥦",
		"lvertneqq": "≨︀",
		"lvnE": "≨︀",
		"macr": "¯",
		"male": "♂",
		"malt": "✠",
		"maltese": "✠",
		"Map": "⤅",
		"map": "↦",
		"mapsto": "↦",
		"mapstodown": "↧",
		"mapstoleft": "↤",
		"mapstoup": "↥",
		"marker": "▮",
		"mcomma": "⨩",
		"Mcy": "М",
		"mcy": "м",
		"mdash": "—",
		"mDDot": "∺",
		"measuredangle": "∡",
		"MediumSpace": " ",
		"Mellintrf": "ℳ",
		"Mfr": "𝔐",
		"mfr": "𝔪",
		"mho": "℧",
		"micro": "µ",
		"midast": "*",
		"midcir": "⫰",
		"mid": "∣",
		"middot": "·",
		"minusb": "⊟",
		"minus": "−",
		"minusd": "∸",
		"minusdu": "⨪",
		"MinusPlus": "∓",
		"mlcp": "⫛",
		"mldr": "…",
		"mnplus": "∓",
		"models": "⊧",
		"Mopf": "𝕄",
		"mopf": "𝕞",
		"mp": "∓",
		"mscr": "𝓂",
		"Mscr": "ℳ",
		"mstpos": "∾",
		"Mu": "Μ",
		"mu": "μ",
		"multimap": "⊸",
		"mumap": "⊸",
		"nabla": "∇",
		"Nacute": "Ń",
		"nacute": "ń",
		"nang": "∠⃒",
		"nap": "≉",
		"napE": "⩰̸",
		"napid": "≋̸",
		"napos": "ŉ",
		"napprox": "≉",
		"natural": "♮",
		"naturals": "ℕ",
		"natur": "♮",
		"nbsp": " ",
		"nbump": "≎̸",
		"nbumpe": "≏̸",
		"ncap": "⩃",
		"Ncaron": "Ň",
		"ncaron": "ň",
		"Ncedil": "Ņ",
		"ncedil": "ņ",
		"ncong": "≇",
		"ncongdot": "⩭̸",
		"ncup": "⩂",
		"Ncy": "Н",
		"ncy": "н",
		"ndash": "–",
		"nearhk": "⤤",
		"nearr": "↗",
		"neArr": "⇗",
		"nearrow": "↗",
		"ne": "≠",
		"nedot": "≐̸",
		"NegativeMediumSpace": "​",
		"NegativeThickSpace": "​",
		"NegativeThinSpace": "​",
		"NegativeVeryThinSpace": "​",
		"nequiv": "≢",
		"nesear": "⤨",
		"nesim": "≂̸",
		"NestedGreaterGreater": "≫",
		"NestedLessLess": "≪",
		"NewLine": "\n",
		"nexist": "∄",
		"nexists": "∄",
		"Nfr": "𝔑",
		"nfr": "𝔫",
		"ngE": "≧̸",
		"nge": "≱",
		"ngeq": "≱",
		"ngeqq": "≧̸",
		"ngeqslant": "⩾̸",
		"nges": "⩾̸",
		"nGg": "⋙̸",
		"ngsim": "≵",
		"nGt": "≫⃒",
		"ngt": "≯",
		"ngtr": "≯",
		"nGtv": "≫̸",
		"nharr": "↮",
		"nhArr": "⇎",
		"nhpar": "⫲",
		"ni": "∋",
		"nis": "⋼",
		"nisd": "⋺",
		"niv": "∋",
		"NJcy": "Њ",
		"njcy": "њ",
		"nlarr": "↚",
		"nlArr": "⇍",
		"nldr": "‥",
		"nlE": "≦̸",
		"nle": "≰",
		"nleftarrow": "↚",
		"nLeftarrow": "⇍",
		"nleftrightarrow": "↮",
		"nLeftrightarrow": "⇎",
		"nleq": "≰",
		"nleqq": "≦̸",
		"nleqslant": "⩽̸",
		"nles": "⩽̸",
		"nless": "≮",
		"nLl": "⋘̸",
		"nlsim": "≴",
		"nLt": "≪⃒",
		"nlt": "≮",
		"nltri": "⋪",
		"nltrie": "⋬",
		"nLtv": "≪̸",
		"nmid": "∤",
		"NoBreak": "⁠",
		"NonBreakingSpace": " ",
		"nopf": "𝕟",
		"Nopf": "ℕ",
		"Not": "⫬",
		"not": "¬",
		"NotCongruent": "≢",
		"NotCupCap": "≭",
		"NotDoubleVerticalBar": "∦",
		"NotElement": "∉",
		"NotEqual": "≠",
		"NotEqualTilde": "≂̸",
		"NotExists": "∄",
		"NotGreater": "≯",
		"NotGreaterEqual": "≱",
		"NotGreaterFullEqual": "≧̸",
		"NotGreaterGreater": "≫̸",
		"NotGreaterLess": "≹",
		"NotGreaterSlantEqual": "⩾̸",
		"NotGreaterTilde": "≵",
		"NotHumpDownHump": "≎̸",
		"NotHumpEqual": "≏̸",
		"notin": "∉",
		"notindot": "⋵̸",
		"notinE": "⋹̸",
		"notinva": "∉",
		"notinvb": "⋷",
		"notinvc": "⋶",
		"NotLeftTriangleBar": "⧏̸",
		"NotLeftTriangle": "⋪",
		"NotLeftTriangleEqual": "⋬",
		"NotLess": "≮",
		"NotLessEqual": "≰",
		"NotLessGreater": "≸",
		"NotLessLess": "≪̸",
		"NotLessSlantEqual": "⩽̸",
		"NotLessTilde": "≴",
		"NotNestedGreaterGreater": "⪢̸",
		"NotNestedLessLess": "⪡̸",
		"notni": "∌",
		"notniva": "∌",
		"notnivb": "⋾",
		"notnivc": "⋽",
		"NotPrecedes": "⊀",
		"NotPrecedesEqual": "⪯̸",
		"NotPrecedesSlantEqual": "⋠",
		"NotReverseElement": "∌",
		"NotRightTriangleBar": "⧐̸",
		"NotRightTriangle": "⋫",
		"NotRightTriangleEqual": "⋭",
		"NotSquareSubset": "⊏̸",
		"NotSquareSubsetEqual": "⋢",
		"NotSquareSuperset": "⊐̸",
		"NotSquareSupersetEqual": "⋣",
		"NotSubset": "⊂⃒",
		"NotSubsetEqual": "⊈",
		"NotSucceeds": "⊁",
		"NotSucceedsEqual": "⪰̸",
		"NotSucceedsSlantEqual": "⋡",
		"NotSucceedsTilde": "≿̸",
		"NotSuperset": "⊃⃒",
		"NotSupersetEqual": "⊉",
		"NotTilde": "≁",
		"NotTildeEqual": "≄",
		"NotTildeFullEqual": "≇",
		"NotTildeTilde": "≉",
		"NotVerticalBar": "∤",
		"nparallel": "∦",
		"npar": "∦",
		"nparsl": "⫽⃥",
		"npart": "∂̸",
		"npolint": "⨔",
		"npr": "⊀",
		"nprcue": "⋠",
		"nprec": "⊀",
		"npreceq": "⪯̸",
		"npre": "⪯̸",
		"nrarrc": "⤳̸",
		"nrarr": "↛",
		"nrArr": "⇏",
		"nrarrw": "↝̸",
		"nrightarrow": "↛",
		"nRightarrow": "⇏",
		"nrtri": "⋫",
		"nrtrie": "⋭",
		"nsc": "⊁",
		"nsccue": "⋡",
		"nsce": "⪰̸",
		"Nscr": "𝒩",
		"nscr": "𝓃",
		"nshortmid": "∤",
		"nshortparallel": "∦",
		"nsim": "≁",
		"nsime": "≄",
		"nsimeq": "≄",
		"nsmid": "∤",
		"nspar": "∦",
		"nsqsube": "⋢",
		"nsqsupe": "⋣",
		"nsub": "⊄",
		"nsubE": "⫅̸",
		"nsube": "⊈",
		"nsubset": "⊂⃒",
		"nsubseteq": "⊈",
		"nsubseteqq": "⫅̸",
		"nsucc": "⊁",
		"nsucceq": "⪰̸",
		"nsup": "⊅",
		"nsupE": "⫆̸",
		"nsupe": "⊉",
		"nsupset": "⊃⃒",
		"nsupseteq": "⊉",
		"nsupseteqq": "⫆̸",
		"ntgl": "≹",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"ntlg": "≸",
		"ntriangleleft": "⋪",
		"ntrianglelefteq": "⋬",
		"ntriangleright": "⋫",
		"ntrianglerighteq": "⋭",
		"Nu": "Ν",
		"nu": "ν",
		"num": "#",
		"numero": "№",
		"numsp": " ",
		"nvap": "≍⃒",
		"nvdash": "⊬",
		"nvDash": "⊭",
		"nVdash": "⊮",
		"nVDash": "⊯",
		"nvge": "≥⃒",
		"nvgt": ">⃒",
		"nvHarr": "⤄",
		"nvinfin": "⧞",
		"nvlArr": "⤂",
		"nvle": "≤⃒",
		"nvlt": "<⃒",
		"nvltrie": "⊴⃒",
		"nvrArr": "⤃",
		"nvrtrie": "⊵⃒",
		"nvsim": "∼⃒",
		"nwarhk": "⤣",
		"nwarr": "↖",
		"nwArr": "⇖",
		"nwarrow": "↖",
		"nwnear": "⤧",
		"Oacute": "Ó",
		"oacute": "ó",
		"oast": "⊛",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"ocir": "⊚",
		"Ocy": "О",
		"ocy": "о",
		"odash": "⊝",
		"Odblac": "Ő",
		"odblac": "ő",
		"odiv": "⨸",
		"odot": "⊙",
		"odsold": "⦼",
		"OElig": "Œ",
		"oelig": "œ",
		"ofcir": "⦿",
		"Ofr": "𝔒",
		"ofr": "𝔬",
		"ogon": "˛",
		"Ograve": "Ò",
		"ograve": "ò",
		"ogt": "⧁",
		"ohbar": "⦵",
		"ohm": "Ω",
		"oint": "∮",
		"olarr": "↺",
		"olcir": "⦾",
		"olcross": "⦻",
		"oline": "‾",
		"olt": "⧀",
		"Omacr": "Ō",
		"omacr": "ō",
		"Omega": "Ω",
		"omega": "ω",
		"Omicron": "Ο",
		"omicron": "ο",
		"omid": "⦶",
		"ominus": "⊖",
		"Oopf": "𝕆",
		"oopf": "𝕠",
		"opar": "⦷",
		"OpenCurlyDoubleQuote": "“",
		"OpenCurlyQuote": "‘",
		"operp": "⦹",
		"oplus": "⊕",
		"orarr": "↻",
		"Or": "⩔",
		"or": "∨",
		"ord": "⩝",
		"order": "ℴ",
		"orderof": "ℴ",
		"ordf": "ª",
		"ordm": "º",
		"origof": "⊶",
		"oror": "⩖",
		"orslope": "⩗",
		"orv": "⩛",
		"oS": "Ⓢ",
		"Oscr": "𝒪",
		"oscr": "ℴ",
		"Oslash": "Ø",
		"oslash": "ø",
		"osol": "⊘",
		"Otilde": "Õ",
		"otilde": "õ",
		"otimesas": "⨶",
		"Otimes": "⨷",
		"otimes": "⊗",
		"Ouml": "Ö",
		"ouml": "ö",
		"ovbar": "⌽",
		"OverBar": "‾",
		"OverBrace": "⏞",
		"OverBracket": "⎴",
		"OverParenthesis": "⏜",
		"para": "¶",
		"parallel": "∥",
		"par": "∥",
		"parsim": "⫳",
		"parsl": "⫽",
		"part": "∂",
		"PartialD": "∂",
		"Pcy": "П",
		"pcy": "п",
		"percnt": "%",
		"period": ".",
		"permil": "‰",
		"perp": "⊥",
		"pertenk": "‱",
		"Pfr": "𝔓",
		"pfr": "𝔭",
		"Phi": "Φ",
		"phi": "φ",
		"phiv": "ϕ",
		"phmmat": "ℳ",
		"phone": "☎",
		"Pi": "Π",
		"pi": "π",
		"pitchfork": "⋔",
		"piv": "ϖ",
		"planck": "ℏ",
		"planckh": "ℎ",
		"plankv": "ℏ",
		"plusacir": "⨣",
		"plusb": "⊞",
		"pluscir": "⨢",
		"plus": "+",
		"plusdo": "∔",
		"plusdu": "⨥",
		"pluse": "⩲",
		"PlusMinus": "±",
		"plusmn": "±",
		"plussim": "⨦",
		"plustwo": "⨧",
		"pm": "±",
		"Poincareplane": "ℌ",
		"pointint": "⨕",
		"popf": "𝕡",
		"Popf": "ℙ",
		"pound": "£",
		"prap": "⪷",
		"Pr": "⪻",
		"pr": "≺",
		"prcue": "≼",
		"precapprox": "⪷",
		"prec": "≺",
		"preccurlyeq": "≼",
		"Precedes": "≺",
		"PrecedesEqual": "⪯",
		"PrecedesSlantEqual": "≼",
		"PrecedesTilde": "≾",
		"preceq": "⪯",
		"precnapprox": "⪹",
		"precneqq": "⪵",
		"precnsim": "⋨",
		"pre": "⪯",
		"prE": "⪳",
		"precsim": "≾",
		"prime": "′",
		"Prime": "″",
		"primes": "ℙ",
		"prnap": "⪹",
		"prnE": "⪵",
		"prnsim": "⋨",
		"prod": "∏",
		"Product": "∏",
		"profalar": "⌮",
		"profline": "⌒",
		"profsurf": "⌓",
		"prop": "∝",
		"Proportional": "∝",
		"Proportion": "∷",
		"propto": "∝",
		"prsim": "≾",
		"prurel": "⊰",
		"Pscr": "𝒫",
		"pscr": "𝓅",
		"Psi": "Ψ",
		"psi": "ψ",
		"puncsp": " ",
		"Qfr": "𝔔",
		"qfr": "𝔮",
		"qint": "⨌",
		"qopf": "𝕢",
		"Qopf": "ℚ",
		"qprime": "⁗",
		"Qscr": "𝒬",
		"qscr": "𝓆",
		"quaternions": "ℍ",
		"quatint": "⨖",
		"quest": "?",
		"questeq": "≟",
		"quot": "\"",
		"QUOT": "\"",
		"rAarr": "⇛",
		"race": "∽̱",
		"Racute": "Ŕ",
		"racute": "ŕ",
		"radic": "√",
		"raemptyv": "⦳",
		"rang": "⟩",
		"Rang": "⟫",
		"rangd": "⦒",
		"range": "⦥",
		"rangle": "⟩",
		"raquo": "»",
		"rarrap": "⥵",
		"rarrb": "⇥",
		"rarrbfs": "⤠",
		"rarrc": "⤳",
		"rarr": "→",
		"Rarr": "↠",
		"rArr": "⇒",
		"rarrfs": "⤞",
		"rarrhk": "↪",
		"rarrlp": "↬",
		"rarrpl": "⥅",
		"rarrsim": "⥴",
		"Rarrtl": "⤖",
		"rarrtl": "↣",
		"rarrw": "↝",
		"ratail": "⤚",
		"rAtail": "⤜",
		"ratio": "∶",
		"rationals": "ℚ",
		"rbarr": "⤍",
		"rBarr": "⤏",
		"RBarr": "⤐",
		"rbbrk": "❳",
		"rbrace": "}",
		"rbrack": "]",
		"rbrke": "⦌",
		"rbrksld": "⦎",
		"rbrkslu": "⦐",
		"Rcaron": "Ř",
		"rcaron": "ř",
		"Rcedil": "Ŗ",
		"rcedil": "ŗ",
		"rceil": "⌉",
		"rcub": "}",
		"Rcy": "Р",
		"rcy": "р",
		"rdca": "⤷",
		"rdldhar": "⥩",
		"rdquo": "”",
		"rdquor": "”",
		"rdsh": "↳",
		"real": "ℜ",
		"realine": "ℛ",
		"realpart": "ℜ",
		"reals": "ℝ",
		"Re": "ℜ",
		"rect": "▭",
		"reg": "®",
		"REG": "®",
		"ReverseElement": "∋",
		"ReverseEquilibrium": "⇋",
		"ReverseUpEquilibrium": "⥯",
		"rfisht": "⥽",
		"rfloor": "⌋",
		"rfr": "𝔯",
		"Rfr": "ℜ",
		"rHar": "⥤",
		"rhard": "⇁",
		"rharu": "⇀",
		"rharul": "⥬",
		"Rho": "Ρ",
		"rho": "ρ",
		"rhov": "ϱ",
		"RightAngleBracket": "⟩",
		"RightArrowBar": "⇥",
		"rightarrow": "→",
		"RightArrow": "→",
		"Rightarrow": "⇒",
		"RightArrowLeftArrow": "⇄",
		"rightarrowtail": "↣",
		"RightCeiling": "⌉",
		"RightDoubleBracket": "⟧",
		"RightDownTeeVector": "⥝",
		"RightDownVectorBar": "⥕",
		"RightDownVector": "⇂",
		"RightFloor": "⌋",
		"rightharpoondown": "⇁",
		"rightharpoonup": "⇀",
		"rightleftarrows": "⇄",
		"rightleftharpoons": "⇌",
		"rightrightarrows": "⇉",
		"rightsquigarrow": "↝",
		"RightTeeArrow": "↦",
		"RightTee": "⊢",
		"RightTeeVector": "⥛",
		"rightthreetimes": "⋌",
		"RightTriangleBar": "⧐",
		"RightTriangle": "⊳",
		"RightTriangleEqual": "⊵",
		"RightUpDownVector": "⥏",
		"RightUpTeeVector": "⥜",
		"RightUpVectorBar": "⥔",
		"RightUpVector": "↾",
		"RightVectorBar": "⥓",
		"RightVector": "⇀",
		"ring": "˚",
		"risingdotseq": "≓",
		"rlarr": "⇄",
		"rlhar": "⇌",
		"rlm": "‏",
		"rmoustache": "⎱",
		"rmoust": "⎱",
		"rnmid": "⫮",
		"roang": "⟭",
		"roarr": "⇾",
		"robrk": "⟧",
		"ropar": "⦆",
		"ropf": "𝕣",
		"Ropf": "ℝ",
		"roplus": "⨮",
		"rotimes": "⨵",
		"RoundImplies": "⥰",
		"rpar": ")",
		"rpargt": "⦔",
		"rppolint": "⨒",
		"rrarr": "⇉",
		"Rrightarrow": "⇛",
		"rsaquo": "›",
		"rscr": "𝓇",
		"Rscr": "ℛ",
		"rsh": "↱",
		"Rsh": "↱",
		"rsqb": "]",
		"rsquo": "’",
		"rsquor": "’",
		"rthree": "⋌",
		"rtimes": "⋊",
		"rtri": "▹",
		"rtrie": "⊵",
		"rtrif": "▸",
		"rtriltri": "⧎",
		"RuleDelayed": "⧴",
		"ruluhar": "⥨",
		"rx": "℞",
		"Sacute": "Ś",
		"sacute": "ś",
		"sbquo": "‚",
		"scap": "⪸",
		"Scaron": "Š",
		"scaron": "š",
		"Sc": "⪼",
		"sc": "≻",
		"sccue": "≽",
		"sce": "⪰",
		"scE": "⪴",
		"Scedil": "Ş",
		"scedil": "ş",
		"Scirc": "Ŝ",
		"scirc": "ŝ",
		"scnap": "⪺",
		"scnE": "⪶",
		"scnsim": "⋩",
		"scpolint": "⨓",
		"scsim": "≿",
		"Scy": "С",
		"scy": "с",
		"sdotb": "⊡",
		"sdot": "⋅",
		"sdote": "⩦",
		"searhk": "⤥",
		"searr": "↘",
		"seArr": "⇘",
		"searrow": "↘",
		"sect": "§",
		"semi": ";",
		"seswar": "⤩",
		"setminus": "∖",
		"setmn": "∖",
		"sext": "✶",
		"Sfr": "𝔖",
		"sfr": "𝔰",
		"sfrown": "⌢",
		"sharp": "♯",
		"SHCHcy": "Щ",
		"shchcy": "щ",
		"SHcy": "Ш",
		"shcy": "ш",
		"ShortDownArrow": "↓",
		"ShortLeftArrow": "←",
		"shortmid": "∣",
		"shortparallel": "∥",
		"ShortRightArrow": "→",
		"ShortUpArrow": "↑",
		"shy": "­",
		"Sigma": "Σ",
		"sigma": "σ",
		"sigmaf": "ς",
		"sigmav": "ς",
		"sim": "∼",
		"simdot": "⩪",
		"sime": "≃",
		"simeq": "≃",
		"simg": "⪞",
		"simgE": "⪠",
		"siml": "⪝",
		"simlE": "⪟",
		"simne": "≆",
		"simplus": "⨤",
		"simrarr": "⥲",
		"slarr": "←",
		"SmallCircle": "∘",
		"smallsetminus": "∖",
		"smashp": "⨳",
		"smeparsl": "⧤",
		"smid": "∣",
		"smile": "⌣",
		"smt": "⪪",
		"smte": "⪬",
		"smtes": "⪬︀",
		"SOFTcy": "Ь",
		"softcy": "ь",
		"solbar": "⌿",
		"solb": "⧄",
		"sol": "/",
		"Sopf": "𝕊",
		"sopf": "𝕤",
		"spades": "♠",
		"spadesuit": "♠",
		"spar": "∥",
		"sqcap": "⊓",
		"sqcaps": "⊓︀",
		"sqcup": "⊔",
		"sqcups": "⊔︀",
		"Sqrt": "√",
		"sqsub": "⊏",
		"sqsube": "⊑",
		"sqsubset": "⊏",
		"sqsubseteq": "⊑",
		"sqsup": "⊐",
		"sqsupe": "⊒",
		"sqsupset": "⊐",
		"sqsupseteq": "⊒",
		"square": "□",
		"Square": "□",
		"SquareIntersection": "⊓",
		"SquareSubset": "⊏",
		"SquareSubsetEqual": "⊑",
		"SquareSuperset": "⊐",
		"SquareSupersetEqual": "⊒",
		"SquareUnion": "⊔",
		"squarf": "▪",
		"squ": "□",
		"squf": "▪",
		"srarr": "→",
		"Sscr": "𝒮",
		"sscr": "𝓈",
		"ssetmn": "∖",
		"ssmile": "⌣",
		"sstarf": "⋆",
		"Star": "⋆",
		"star": "☆",
		"starf": "★",
		"straightepsilon": "ϵ",
		"straightphi": "ϕ",
		"strns": "¯",
		"sub": "⊂",
		"Sub": "⋐",
		"subdot": "⪽",
		"subE": "⫅",
		"sube": "⊆",
		"subedot": "⫃",
		"submult": "⫁",
		"subnE": "⫋",
		"subne": "⊊",
		"subplus": "⪿",
		"subrarr": "⥹",
		"subset": "⊂",
		"Subset": "⋐",
		"subseteq": "⊆",
		"subseteqq": "⫅",
		"SubsetEqual": "⊆",
		"subsetneq": "⊊",
		"subsetneqq": "⫋",
		"subsim": "⫇",
		"subsub": "⫕",
		"subsup": "⫓",
		"succapprox": "⪸",
		"succ": "≻",
		"succcurlyeq": "≽",
		"Succeeds": "≻",
		"SucceedsEqual": "⪰",
		"SucceedsSlantEqual": "≽",
		"SucceedsTilde": "≿",
		"succeq": "⪰",
		"succnapprox": "⪺",
		"succneqq": "⪶",
		"succnsim": "⋩",
		"succsim": "≿",
		"SuchThat": "∋",
		"sum": "∑",
		"Sum": "∑",
		"sung": "♪",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"sup": "⊃",
		"Sup": "⋑",
		"supdot": "⪾",
		"supdsub": "⫘",
		"supE": "⫆",
		"supe": "⊇",
		"supedot": "⫄",
		"Superset": "⊃",
		"SupersetEqual": "⊇",
		"suphsol": "⟉",
		"suphsub": "⫗",
		"suplarr": "⥻",
		"supmult": "⫂",
		"supnE": "⫌",
		"supne": "⊋",
		"supplus": "⫀",
		"supset": "⊃",
		"Supset": "⋑",
		"supseteq": "⊇",
		"supseteqq": "⫆",
		"supsetneq": "⊋",
		"supsetneqq": "⫌",
		"supsim": "⫈",
		"supsub": "⫔",
		"supsup": "⫖",
		"swarhk": "⤦",
		"swarr": "↙",
		"swArr": "⇙",
		"swarrow": "↙",
		"swnwar": "⤪",
		"szlig": "ß",
		"Tab": "\t",
		"target": "⌖",
		"Tau": "Τ",
		"tau": "τ",
		"tbrk": "⎴",
		"Tcaron": "Ť",
		"tcaron": "ť",
		"Tcedil": "Ţ",
		"tcedil": "ţ",
		"Tcy": "Т",
		"tcy": "т",
		"tdot": "⃛",
		"telrec": "⌕",
		"Tfr": "𝔗",
		"tfr": "𝔱",
		"there4": "∴",
		"therefore": "∴",
		"Therefore": "∴",
		"Theta": "Θ",
		"theta": "θ",
		"thetasym": "ϑ",
		"thetav": "ϑ",
		"thickapprox": "≈",
		"thicksim": "∼",
		"ThickSpace": "  ",
		"ThinSpace": " ",
		"thinsp": " ",
		"thkap": "≈",
		"thksim": "∼",
		"THORN": "Þ",
		"thorn": "þ",
		"tilde": "˜",
		"Tilde": "∼",
		"TildeEqual": "≃",
		"TildeFullEqual": "≅",
		"TildeTilde": "≈",
		"timesbar": "⨱",
		"timesb": "⊠",
		"times": "×",
		"timesd": "⨰",
		"tint": "∭",
		"toea": "⤨",
		"topbot": "⌶",
		"topcir": "⫱",
		"top": "⊤",
		"Topf": "𝕋",
		"topf": "𝕥",
		"topfork": "⫚",
		"tosa": "⤩",
		"tprime": "‴",
		"trade": "™",
		"TRADE": "™",
		"triangle": "▵",
		"triangledown": "▿",
		"triangleleft": "◃",
		"trianglelefteq": "⊴",
		"triangleq": "≜",
		"triangleright": "▹",
		"trianglerighteq": "⊵",
		"tridot": "◬",
		"trie": "≜",
		"triminus": "⨺",
		"TripleDot": "⃛",
		"triplus": "⨹",
		"trisb": "⧍",
		"tritime": "⨻",
		"trpezium": "⏢",
		"Tscr": "𝒯",
		"tscr": "𝓉",
		"TScy": "Ц",
		"tscy": "ц",
		"TSHcy": "Ћ",
		"tshcy": "ћ",
		"Tstrok": "Ŧ",
		"tstrok": "ŧ",
		"twixt": "≬",
		"twoheadleftarrow": "↞",
		"twoheadrightarrow": "↠",
		"Uacute": "Ú",
		"uacute": "ú",
		"uarr": "↑",
		"Uarr": "↟",
		"uArr": "⇑",
		"Uarrocir": "⥉",
		"Ubrcy": "Ў",
		"ubrcy": "ў",
		"Ubreve": "Ŭ",
		"ubreve": "ŭ",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ucy": "У",
		"ucy": "у",
		"udarr": "⇅",
		"Udblac": "Ű",
		"udblac": "ű",
		"udhar": "⥮",
		"ufisht": "⥾",
		"Ufr": "𝔘",
		"ufr": "𝔲",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uHar": "⥣",
		"uharl": "↿",
		"uharr": "↾",
		"uhblk": "▀",
		"ulcorn": "⌜",
		"ulcorner": "⌜",
		"ulcrop": "⌏",
		"ultri": "◸",
		"Umacr": "Ū",
		"umacr": "ū",
		"uml": "¨",
		"UnderBar": "_",
		"UnderBrace": "⏟",
		"UnderBracket": "⎵",
		"UnderParenthesis": "⏝",
		"Union": "⋃",
		"UnionPlus": "⊎",
		"Uogon": "Ų",
		"uogon": "ų",
		"Uopf": "𝕌",
		"uopf": "𝕦",
		"UpArrowBar": "⤒",
		"uparrow": "↑",
		"UpArrow": "↑",
		"Uparrow": "⇑",
		"UpArrowDownArrow": "⇅",
		"updownarrow": "↕",
		"UpDownArrow": "↕",
		"Updownarrow": "⇕",
		"UpEquilibrium": "⥮",
		"upharpoonleft": "↿",
		"upharpoonright": "↾",
		"uplus": "⊎",
		"UpperLeftArrow": "↖",
		"UpperRightArrow": "↗",
		"upsi": "υ",
		"Upsi": "ϒ",
		"upsih": "ϒ",
		"Upsilon": "Υ",
		"upsilon": "υ",
		"UpTeeArrow": "↥",
		"UpTee": "⊥",
		"upuparrows": "⇈",
		"urcorn": "⌝",
		"urcorner": "⌝",
		"urcrop": "⌎",
		"Uring": "Ů",
		"uring": "ů",
		"urtri": "◹",
		"Uscr": "𝒰",
		"uscr": "𝓊",
		"utdot": "⋰",
		"Utilde": "Ũ",
		"utilde": "ũ",
		"utri": "▵",
		"utrif": "▴",
		"uuarr": "⇈",
		"Uuml": "Ü",
		"uuml": "ü",
		"uwangle": "⦧",
		"vangrt": "⦜",
		"varepsilon": "ϵ",
		"varkappa": "ϰ",
		"varnothing": "∅",
		"varphi": "ϕ",
		"varpi": "ϖ",
		"varpropto": "∝",
		"varr": "↕",
		"vArr": "⇕",
		"varrho": "ϱ",
		"varsigma": "ς",
		"varsubsetneq": "⊊︀",
		"varsubsetneqq": "⫋︀",
		"varsupsetneq": "⊋︀",
		"varsupsetneqq": "⫌︀",
		"vartheta": "ϑ",
		"vartriangleleft": "⊲",
		"vartriangleright": "⊳",
		"vBar": "⫨",
		"Vbar": "⫫",
		"vBarv": "⫩",
		"Vcy": "В",
		"vcy": "в",
		"vdash": "⊢",
		"vDash": "⊨",
		"Vdash": "⊩",
		"VDash": "⊫",
		"Vdashl": "⫦",
		"veebar": "⊻",
		"vee": "∨",
		"Vee": "⋁",
		"veeeq": "≚",
		"vellip": "⋮",
		"verbar": "|",
		"Verbar": "‖",
		"vert": "|",
		"Vert": "‖",
		"VerticalBar": "∣",
		"VerticalLine": "|",
		"VerticalSeparator": "❘",
		"VerticalTilde": "≀",
		"VeryThinSpace": " ",
		"Vfr": "𝔙",
		"vfr": "𝔳",
		"vltri": "⊲",
		"vnsub": "⊂⃒",
		"vnsup": "⊃⃒",
		"Vopf": "𝕍",
		"vopf": "𝕧",
		"vprop": "∝",
		"vrtri": "⊳",
		"Vscr": "𝒱",
		"vscr": "𝓋",
		"vsubnE": "⫋︀",
		"vsubne": "⊊︀",
		"vsupnE": "⫌︀",
		"vsupne": "⊋︀",
		"Vvdash": "⊪",
		"vzigzag": "⦚",
		"Wcirc": "Ŵ",
		"wcirc": "ŵ",
		"wedbar": "⩟",
		"wedge": "∧",
		"Wedge": "⋀",
		"wedgeq": "≙",
		"weierp": "℘",
		"Wfr": "𝔚",
		"wfr": "𝔴",
		"Wopf": "𝕎",
		"wopf": "𝕨",
		"wp": "℘",
		"wr": "≀",
		"wreath": "≀",
		"Wscr": "𝒲",
		"wscr": "𝓌",
		"xcap": "⋂",
		"xcirc": "◯",
		"xcup": "⋃",
		"xdtri": "▽",
		"Xfr": "𝔛",
		"xfr": "𝔵",
		"xharr": "⟷",
		"xhArr": "⟺",
		"Xi": "Ξ",
		"xi": "ξ",
		"xlarr": "⟵",
		"xlArr": "⟸",
		"xmap": "⟼",
		"xnis": "⋻",
		"xodot": "⨀",
		"Xopf": "𝕏",
		"xopf": "𝕩",
		"xoplus": "⨁",
		"xotime": "⨂",
		"xrarr": "⟶",
		"xrArr": "⟹",
		"Xscr": "𝒳",
		"xscr": "𝓍",
		"xsqcup": "⨆",
		"xuplus": "⨄",
		"xutri": "△",
		"xvee": "⋁",
		"xwedge": "⋀",
		"Yacute": "Ý",
		"yacute": "ý",
		"YAcy": "Я",
		"yacy": "я",
		"Ycirc": "Ŷ",
		"ycirc": "ŷ",
		"Ycy": "Ы",
		"ycy": "ы",
		"yen": "¥",
		"Yfr": "𝔜",
		"yfr": "𝔶",
		"YIcy": "Ї",
		"yicy": "ї",
		"Yopf": "𝕐",
		"yopf": "𝕪",
		"Yscr": "𝒴",
		"yscr": "𝓎",
		"YUcy": "Ю",
		"yucy": "ю",
		"yuml": "ÿ",
		"Yuml": "Ÿ",
		"Zacute": "Ź",
		"zacute": "ź",
		"Zcaron": "Ž",
		"zcaron": "ž",
		"Zcy": "З",
		"zcy": "з",
		"Zdot": "Ż",
		"zdot": "ż",
		"zeetrf": "ℨ",
		"ZeroWidthSpace": "​",
		"Zeta": "Ζ",
		"zeta": "ζ",
		"zfr": "𝔷",
		"Zfr": "ℨ",
		"ZHcy": "Ж",
		"zhcy": "ж",
		"zigrarr": "⇝",
		"zopf": "𝕫",
		"Zopf": "ℤ",
		"Zscr": "𝒵",
		"zscr": "𝓏",
		"zwj": "‍",
		"zwnj": "‌"
	}

/***/ },
/* 501 */
/***/ function(module, exports, __webpack_require__) {

	var entityMap = __webpack_require__(500),
	    legacyMap = __webpack_require__(502),
	    xmlMap    = __webpack_require__(499),
	    decodeCodePoint = __webpack_require__(503);

	var decodeXMLStrict  = getStrictDecoder(xmlMap),
	    decodeHTMLStrict = getStrictDecoder(entityMap);

	function getStrictDecoder(map){
		var keys = Object.keys(map).join("|"),
		    replace = getReplacer(map);

		keys += "|#[xX][\\da-fA-F]+|#\\d+";

		var re = new RegExp("&(?:" + keys + ");", "g");

		return function(str){
			return String(str).replace(re, replace);
		};
	}

	var decodeHTML = (function(){
		var legacy = Object.keys(legacyMap)
			.sort(sorter);

		var keys = Object.keys(entityMap)
			.sort(sorter);

		for(var i = 0, j = 0; i < keys.length; i++){
			if(legacy[j] === keys[i]){
				keys[i] += ";?";
				j++;
			} else {
				keys[i] += ";";
			}
		}

		var re = new RegExp("&(?:" + keys.join("|") + "|#[xX][\\da-fA-F]+;?|#\\d+;?)", "g"),
		    replace = getReplacer(entityMap);

		function replacer(str){
			if(str.substr(-1) !== ";") str += ";";
			return replace(str);
		}

		//TODO consider creating a merged map
		return function(str){
			return String(str).replace(re, replacer);
		};
	}());

	function sorter(a, b){
		return a < b ? 1 : -1;
	}

	function getReplacer(map){
		return function replace(str){
			if(str.charAt(1) === "#"){
				if(str.charAt(2) === "X" || str.charAt(2) === "x"){
					return decodeCodePoint(parseInt(str.substr(3), 16));
				}
				return decodeCodePoint(parseInt(str.substr(2), 10));
			}
			return map[str.slice(1, -1)];
		};
	}

	module.exports = {
		XML: decodeXMLStrict,
		HTML: decodeHTML,
		HTMLStrict: decodeHTMLStrict
	};

/***/ },
/* 502 */
/***/ function(module, exports) {

	module.exports = {
		"Aacute": "Á",
		"aacute": "á",
		"Acirc": "Â",
		"acirc": "â",
		"acute": "´",
		"AElig": "Æ",
		"aelig": "æ",
		"Agrave": "À",
		"agrave": "à",
		"amp": "&",
		"AMP": "&",
		"Aring": "Å",
		"aring": "å",
		"Atilde": "Ã",
		"atilde": "ã",
		"Auml": "Ä",
		"auml": "ä",
		"brvbar": "¦",
		"Ccedil": "Ç",
		"ccedil": "ç",
		"cedil": "¸",
		"cent": "¢",
		"copy": "©",
		"COPY": "©",
		"curren": "¤",
		"deg": "°",
		"divide": "÷",
		"Eacute": "É",
		"eacute": "é",
		"Ecirc": "Ê",
		"ecirc": "ê",
		"Egrave": "È",
		"egrave": "è",
		"ETH": "Ð",
		"eth": "ð",
		"Euml": "Ë",
		"euml": "ë",
		"frac12": "½",
		"frac14": "¼",
		"frac34": "¾",
		"gt": ">",
		"GT": ">",
		"Iacute": "Í",
		"iacute": "í",
		"Icirc": "Î",
		"icirc": "î",
		"iexcl": "¡",
		"Igrave": "Ì",
		"igrave": "ì",
		"iquest": "¿",
		"Iuml": "Ï",
		"iuml": "ï",
		"laquo": "«",
		"lt": "<",
		"LT": "<",
		"macr": "¯",
		"micro": "µ",
		"middot": "·",
		"nbsp": " ",
		"not": "¬",
		"Ntilde": "Ñ",
		"ntilde": "ñ",
		"Oacute": "Ó",
		"oacute": "ó",
		"Ocirc": "Ô",
		"ocirc": "ô",
		"Ograve": "Ò",
		"ograve": "ò",
		"ordf": "ª",
		"ordm": "º",
		"Oslash": "Ø",
		"oslash": "ø",
		"Otilde": "Õ",
		"otilde": "õ",
		"Ouml": "Ö",
		"ouml": "ö",
		"para": "¶",
		"plusmn": "±",
		"pound": "£",
		"quot": "\"",
		"QUOT": "\"",
		"raquo": "»",
		"reg": "®",
		"REG": "®",
		"sect": "§",
		"shy": "­",
		"sup1": "¹",
		"sup2": "²",
		"sup3": "³",
		"szlig": "ß",
		"THORN": "Þ",
		"thorn": "þ",
		"times": "×",
		"Uacute": "Ú",
		"uacute": "ú",
		"Ucirc": "Û",
		"ucirc": "û",
		"Ugrave": "Ù",
		"ugrave": "ù",
		"uml": "¨",
		"Uuml": "Ü",
		"uuml": "ü",
		"Yacute": "Ý",
		"yacute": "ý",
		"yen": "¥",
		"yuml": "ÿ"
	}

/***/ },
/* 503 */
/***/ function(module, exports, __webpack_require__) {

	var decodeMap = __webpack_require__(504);

	module.exports = decodeCodePoint;

	// modified version of https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119
	function decodeCodePoint(codePoint){

		if((codePoint >= 0xD800 && codePoint <= 0xDFFF) || codePoint > 0x10FFFF){
			return "\uFFFD";
		}

		if(codePoint in decodeMap){
			codePoint = decodeMap[codePoint];
		}

		var output = "";

		if(codePoint > 0xFFFF){
			codePoint -= 0x10000;
			output += String.fromCharCode(codePoint >>> 10 & 0x3FF | 0xD800);
			codePoint = 0xDC00 | codePoint & 0x3FF;
		}

		output += String.fromCharCode(codePoint);
		return output;
	}


/***/ },
/* 504 */
/***/ function(module, exports) {

	module.exports = {
		"0": 65533,
		"128": 8364,
		"130": 8218,
		"131": 402,
		"132": 8222,
		"133": 8230,
		"134": 8224,
		"135": 8225,
		"136": 710,
		"137": 8240,
		"138": 352,
		"139": 8249,
		"140": 338,
		"142": 381,
		"145": 8216,
		"146": 8217,
		"147": 8220,
		"148": 8221,
		"149": 8226,
		"150": 8211,
		"151": 8212,
		"152": 732,
		"153": 8482,
		"154": 353,
		"155": 8250,
		"156": 339,
		"158": 382,
		"159": 376
	}

/***/ },
/* 505 */
/***/ function(module, exports) {

	var getChildren = exports.getChildren = function(elem){
		return elem.children;
	};

	var getParent = exports.getParent = function(elem){
		return elem.parent;
	};

	exports.getSiblings = function(elem){
		var parent = getParent(elem);
		return parent ? getChildren(parent) : [elem];
	};

	exports.getAttributeValue = function(elem, name){
		return elem.attribs && elem.attribs[name];
	};

	exports.hasAttrib = function(elem, name){
		return !!elem.attribs && hasOwnProperty.call(elem.attribs, name);
	};

	exports.getName = function(elem){
		return elem.name;
	};


/***/ },
/* 506 */
/***/ function(module, exports) {

	exports.removeElement = function(elem){
		if(elem.prev) elem.prev.next = elem.next;
		if(elem.next) elem.next.prev = elem.prev;

		if(elem.parent){
			var childs = elem.parent.children;
			childs.splice(childs.lastIndexOf(elem), 1);
		}
	};

	exports.replaceElement = function(elem, replacement){
		var prev = replacement.prev = elem.prev;
		if(prev){
			prev.next = replacement;
		}

		var next = replacement.next = elem.next;
		if(next){
			next.prev = replacement;
		}

		var parent = replacement.parent = elem.parent;
		if(parent){
			var childs = parent.children;
			childs[childs.lastIndexOf(elem)] = replacement;
		}
	};

	exports.appendChild = function(elem, child){
		child.parent = elem;

		if(elem.children.push(child) !== 1){
			var sibling = elem.children[elem.children.length - 2];
			sibling.next = child;
			child.prev = sibling;
			child.next = null;
		}
	};

	exports.append = function(elem, next){
		var parent = elem.parent,
			currNext = elem.next;

		next.next = currNext;
		next.prev = elem;
		elem.next = next;
		next.parent = parent;

		if(currNext){
			currNext.prev = next;
			if(parent){
				var childs = parent.children;
				childs.splice(childs.lastIndexOf(currNext), 0, next);
			}
		} else if(parent){
			parent.children.push(next);
		}
	};

	exports.prepend = function(elem, prev){
		var parent = elem.parent;
		if(parent){
			var childs = parent.children;
			childs.splice(childs.lastIndexOf(elem), 0, prev);
		}

		if(elem.prev){
			elem.prev.next = prev;
		}
		
		prev.parent = parent;
		prev.prev = elem.prev;
		prev.next = elem;
		elem.prev = prev;
	};




/***/ },
/* 507 */
/***/ function(module, exports, __webpack_require__) {

	var isTag = __webpack_require__(474).isTag;

	module.exports = {
		filter: filter,
		find: find,
		findOneChild: findOneChild,
		findOne: findOne,
		existsOne: existsOne,
		findAll: findAll
	};

	function filter(test, element, recurse, limit){
		if(!Array.isArray(element)) element = [element];

		if(typeof limit !== "number" || !isFinite(limit)){
			limit = Infinity;
		}
		return find(test, element, recurse !== false, limit);
	}

	function find(test, elems, recurse, limit){
		var result = [], childs;

		for(var i = 0, j = elems.length; i < j; i++){
			if(test(elems[i])){
				result.push(elems[i]);
				if(--limit <= 0) break;
			}

			childs = elems[i].children;
			if(recurse && childs && childs.length > 0){
				childs = find(test, childs, recurse, limit);
				result = result.concat(childs);
				limit -= childs.length;
				if(limit <= 0) break;
			}
		}

		return result;
	}

	function findOneChild(test, elems){
		for(var i = 0, l = elems.length; i < l; i++){
			if(test(elems[i])) return elems[i];
		}

		return null;
	}

	function findOne(test, elems){
		var elem = null;

		for(var i = 0, l = elems.length; i < l && !elem; i++){
			if(!isTag(elems[i])){
				continue;
			} else if(test(elems[i])){
				elem = elems[i];
			} else if(elems[i].children.length > 0){
				elem = findOne(test, elems[i].children);
			}
		}

		return elem;
	}

	function existsOne(test, elems){
		for(var i = 0, l = elems.length; i < l; i++){
			if(
				isTag(elems[i]) && (
					test(elems[i]) || (
						elems[i].children.length > 0 &&
						existsOne(test, elems[i].children)
					)
				)
			){
				return true;
			}
		}

		return false;
	}

	function findAll(test, elems){
		var result = [];
		for(var i = 0, j = elems.length; i < j; i++){
			if(!isTag(elems[i])) continue;
			if(test(elems[i])) result.push(elems[i]);

			if(elems[i].children.length > 0){
				result = result.concat(findAll(test, elems[i].children));
			}
		}
		return result;
	}


/***/ },
/* 508 */
/***/ function(module, exports, __webpack_require__) {

	var ElementType = __webpack_require__(474);
	var isTag = exports.isTag = ElementType.isTag;

	exports.testElement = function(options, element){
		for(var key in options){
			if(!options.hasOwnProperty(key));
			else if(key === "tag_name"){
				if(!isTag(element) || !options.tag_name(element.name)){
					return false;
				}
			} else if(key === "tag_type"){
				if(!options.tag_type(element.type)) return false;
			} else if(key === "tag_contains"){
				if(isTag(element) || !options.tag_contains(element.data)){
					return false;
				}
			} else if(!element.attribs || !options[key](element.attribs[key])){
				return false;
			}
		}
		return true;
	};

	var Checks = {
		tag_name: function(name){
			if(typeof name === "function"){
				return function(elem){ return isTag(elem) && name(elem.name); };
			} else if(name === "*"){
				return isTag;
			} else {
				return function(elem){ return isTag(elem) && elem.name === name; };
			}
		},
		tag_type: function(type){
			if(typeof type === "function"){
				return function(elem){ return type(elem.type); };
			} else {
				return function(elem){ return elem.type === type; };
			}
		},
		tag_contains: function(data){
			if(typeof data === "function"){
				return function(elem){ return !isTag(elem) && data(elem.data); };
			} else {
				return function(elem){ return !isTag(elem) && elem.data === data; };
			}
		}
	};

	function getAttribCheck(attrib, value){
		if(typeof value === "function"){
			return function(elem){ return elem.attribs && value(elem.attribs[attrib]); };
		} else {
			return function(elem){ return elem.attribs && elem.attribs[attrib] === value; };
		}
	}

	function combineFuncs(a, b){
		return function(elem){
			return a(elem) || b(elem);
		};
	}

	exports.getElements = function(options, element, recurse, limit){
		var funcs = Object.keys(options).map(function(key){
			var value = options[key];
			return key in Checks ? Checks[key](value) : getAttribCheck(key, value);
		});

		return funcs.length === 0 ? [] : this.filter(
			funcs.reduce(combineFuncs),
			element, recurse, limit
		);
	};

	exports.getElementById = function(id, element, recurse){
		if(!Array.isArray(element)) element = [element];
		return this.findOne(getAttribCheck("id", id), element, recurse !== false);
	};

	exports.getElementsByTagName = function(name, element, recurse, limit){
		return this.filter(Checks.tag_name(name), element, recurse, limit);
	};

	exports.getElementsByTagType = function(type, element, recurse, limit){
		return this.filter(Checks.tag_type(type), element, recurse, limit);
	};


/***/ },
/* 509 */
/***/ function(module, exports) {

	// removeSubsets
	// Given an array of nodes, remove any member that is contained by another.
	exports.removeSubsets = function(nodes) {
		var idx = nodes.length, node, ancestor, replace;

		// Check if each node (or one of its ancestors) is already contained in the
		// array.
		while (--idx > -1) {
			node = ancestor = nodes[idx];

			// Temporarily remove the node under consideration
			nodes[idx] = null;
			replace = true;

			while (ancestor) {
				if (nodes.indexOf(ancestor) > -1) {
					replace = false;
					nodes.splice(idx, 1);
					break;
				}
				ancestor = ancestor.parent;
			}

			// If the node has been found to be unique, re-insert it.
			if (replace) {
				nodes[idx] = node;
			}
		}

		return nodes;
	};

	// Source: http://dom.spec.whatwg.org/#dom-node-comparedocumentposition
	var POSITION = {
		DISCONNECTED: 1,
		PRECEDING: 2,
		FOLLOWING: 4,
		CONTAINS: 8,
		CONTAINED_BY: 16
	};

	// Compare the position of one node against another node in any other document.
	// The return value is a bitmask with the following values:
	//
	// document order:
	// > There is an ordering, document order, defined on all the nodes in the
	// > document corresponding to the order in which the first character of the
	// > XML representation of each node occurs in the XML representation of the
	// > document after expansion of general entities. Thus, the document element
	// > node will be the first node. Element nodes occur before their children.
	// > Thus, document order orders element nodes in order of the occurrence of
	// > their start-tag in the XML (after expansion of entities). The attribute
	// > nodes of an element occur after the element and before its children. The
	// > relative order of attribute nodes is implementation-dependent./
	// Source:
	// http://www.w3.org/TR/DOM-Level-3-Core/glossary.html#dt-document-order
	//
	// @argument {Node} nodaA The first node to use in the comparison
	// @argument {Node} nodeB The second node to use in the comparison
	//
	// @return {Number} A bitmask describing the input nodes' relative position.
	//         See http://dom.spec.whatwg.org/#dom-node-comparedocumentposition for
	//         a description of these values.
	var comparePos = exports.compareDocumentPosition = function(nodeA, nodeB) {
		var aParents = [];
		var bParents = [];
		var current, sharedParent, siblings, aSibling, bSibling, idx;

		if (nodeA === nodeB) {
			return 0;
		}

		current = nodeA;
		while (current) {
			aParents.unshift(current);
			current = current.parent;
		}
		current = nodeB;
		while (current) {
			bParents.unshift(current);
			current = current.parent;
		}

		idx = 0;
		while (aParents[idx] === bParents[idx]) {
			idx++;
		}

		if (idx === 0) {
			return POSITION.DISCONNECTED;
		}

		sharedParent = aParents[idx - 1];
		siblings = sharedParent.children;
		aSibling = aParents[idx];
		bSibling = bParents[idx];

		if (siblings.indexOf(aSibling) > siblings.indexOf(bSibling)) {
			if (sharedParent === nodeB) {
				return POSITION.FOLLOWING | POSITION.CONTAINED_BY;
			}
			return POSITION.FOLLOWING;
		} else {
			if (sharedParent === nodeA) {
				return POSITION.PRECEDING | POSITION.CONTAINS;
			}
			return POSITION.PRECEDING;
		}
	};

	// Sort an array of nodes based on their relative position in the document and
	// remove any duplicate nodes. If the array contains nodes that do not belong
	// to the same document, sort order is unspecified.
	//
	// @argument {Array} nodes Array of DOM nodes
	//
	// @returns {Array} collection of unique nodes, sorted in document order
	exports.uniqueSort = function(nodes) {
		var idx = nodes.length, node, position;

		nodes = nodes.slice();

		while (--idx > -1) {
			node = nodes[idx];
			position = nodes.indexOf(node);
			if (position > -1 && position < idx) {
				nodes.splice(idx, 1);
			}
		}
		nodes.sort(function(a, b) {
			var relative = comparePos(a, b);
			if (relative & POSITION.PRECEDING) {
				return -1;
			} else if (relative & POSITION.FOLLOWING) {
				return 1;
			}
			return 0;
		});

		return nodes;
	};


/***/ },
/* 510 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = CollectingHandler;

	function CollectingHandler(cbs){
		this._cbs = cbs || {};
		this.events = [];
	}

	var EVENTS = __webpack_require__(463).EVENTS;
	Object.keys(EVENTS).forEach(function(name){
		if(EVENTS[name] === 0){
			name = "on" + name;
			CollectingHandler.prototype[name] = function(){
				this.events.push([name]);
				if(this._cbs[name]) this._cbs[name]();
			};
		} else if(EVENTS[name] === 1){
			name = "on" + name;
			CollectingHandler.prototype[name] = function(a){
				this.events.push([name, a]);
				if(this._cbs[name]) this._cbs[name](a);
			};
		} else if(EVENTS[name] === 2){
			name = "on" + name;
			CollectingHandler.prototype[name] = function(a, b){
				this.events.push([name, a, b]);
				if(this._cbs[name]) this._cbs[name](a, b);
			};
		} else {
			throw Error("wrong number of arguments");
		}
	});

	CollectingHandler.prototype.onreset = function(){
		this.events = [];
		if(this._cbs.onreset) this._cbs.onreset();
	};

	CollectingHandler.prototype.restart = function(){
		if(this._cbs.onreset) this._cbs.onreset();

		for(var i = 0, len = this.events.length; i < len; i++){
			if(this._cbs[this.events[i][0]]){

				var num = this.events[i].length;

				if(num === 1){
					this._cbs[this.events[i][0]]();
				} else if(num === 2){
					this._cbs[this.events[i][0]](this.events[i][1]);
				} else {
					this._cbs[this.events[i][0]](this.events[i][1], this.events[i][2]);
				}
			}
		}
	};


/***/ },
/* 511 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var parse5 = __webpack_require__(442);
	var serializer = new parse5.TreeSerializer(__webpack_require__(512));

	exports.domToHtml = function(dom) {
	  if (dom._toArray) {
	    // node list
	    dom = dom._toArray();
	  }
	  if (typeof dom.length !== "undefined") {
	    var ret = "";
	    for (var i = 0, len = dom.length; i < len; i++) {
	      ret += dom[i]._tagName === "#document" ?
	        serializer.serialize(dom[i]) :
	        serializer.serialize({ childNodes: [dom[i]] });
	    }
	    return ret;
	  } else {
	    return dom._tagName === "#document" ?
	      serializer.serialize(dom) :
	      serializer.serialize({ childNodes: [dom] });
	  }
	};


/***/ },
/* 512 */
/***/ function(module, exports) {

	//Tree traversing
	exports.getFirstChild = function (node) {
	  return node.childNodes[0];
	};

	exports.getChildNodes = function (node) {
	  return node.childNodes;
	};

	exports.getParentNode = function (node) {
	  return node.parentNode;
	};

	exports.getAttrList = function (node) {
	  return node.attributes;
	};

	//Node data
	exports.getTagName = function (element) {
	  return element.tagName.toLowerCase();
	};

	exports.getNamespaceURI = function (element) {
	  return element.namespaceURI || 'http://www.w3.org/1999/xhtml';
	};

	exports.getTextNodeContent = function (textNode) {
	  return textNode.nodeValue;
	};

	exports.getCommentNodeContent = function (commentNode) {
	  return commentNode.nodeValue;
	};

	exports.getDocumentTypeNodeName = function (doctypeNode) {
	  return doctypeNode.name;
	};

	exports.getDocumentTypeNodePublicId = function (doctypeNode) {
	  return doctypeNode.publicId || null;
	};

	exports.getDocumentTypeNodeSystemId = function (doctypeNode) {
	  return doctypeNode.systemId || null;
	};

	//Node types
	exports.isTextNode = function (node) {
	  return node.nodeName === '#text';
	};

	exports.isCommentNode = function (node) {
	  return node.nodeName === '#comment';
	};

	exports.isDocumentTypeNode = function (node) {
	  return node.nodeType === 10;
	};

	exports.isElementNode = function (node) {
	  return !!node.tagName;
	};

/***/ },
/* 513 */
/***/ function(module, exports, __webpack_require__) {

	var core = Object.create(__webpack_require__(440).dom.level3.core);
	var defineGetter = __webpack_require__(14).defineGetter;

	var DOCUMENT_POSITION_DISCONNECTED = core.Node.DOCUMENT_POSITION_DISCONNECTED;
	var DOCUMENT_POSITION_PRECEDING = core.Node.DOCUMENT_POSITION_PRECEDING;
	var DOCUMENT_POSITION_FOLLOWING = core.Node.DOCUMENT_POSITION_FOLLOWING;
	var DOCUMENT_POSITION_CONTAINS = core.Node.DOCUMENT_POSITION_CONTAINS;
	var DOCUMENT_POSITION_CONTAINED_BY = core.Node.DOCUMENT_POSITION_CONTAINED_BY;
	var DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = core.Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC;

	/**
	 * Return true if node is of a type obsoleted by the WHATWG living standard
	 * @param  {Node}  node
	 * @return {Boolean}
	 */
	function isObsoleteNodeType(node) {
	  return node.nodeType === core.Node.ENTITY_NODE ||
	    node.nodeType === core.Node.ENTITY_REFERENCE_NODE ||
	    node.nodeType === core.Node.NOTATION_NODE ||
	    node.nodeType === core.Node.CDATA_SECTION_NODE;
	}

	/**
	 * Return the parent node of node, whatever its nodeType is
	 * @param  {Node} node
	 * @return {Node or null}
	 */
	function getNodeParent(node) {

	  if(!node) {
	    return node;
	  }

	  switch (node.nodeType) {

	    case core.Node.DOCUMENT_NODE:
	    case core.Node.DOCUMENT_FRAGMENT_NODE:
	      return null;

	    case core.Node.COMMENT_NODE:
	    case core.Node.DOCUMENT_TYPE_NODE:
	    case core.Node.ELEMENT_NODE:
	    case core.Node.PROCESSING_INSTRUCTION_NODE:
	    case core.Node.TEXT_NODE:
	      return node.parentNode;

	    case core.Node.ATTRIBUTE_NODE:

	      return node._parentNode;

	    default:
	      throw new Error('Unknown node type:' + node.nodeType);
	  }
	}

	/**
	 * Walk up the node tree and return the nodes root node
	 * @param  {Node} node
	 * @return {Node}
	 */
	function findNodeRoot(node) {
	  if (!getNodeParent(node)) {
	    return node;
	  }

	  return findNodeRoot(getNodeParent(node));
	}

	/**
	 * Walk up the node tree returning true if otherNode is an ancestor of node
	 * @param  {Node}  node
	 * @param  {Node}  otherNode
	 * @return {Boolean}
	 */
	function isAncestor(node, otherNode) {
	  var parentNode = node.nodeType === node.ATTRIBUTE_NODE ? node._parentNode : node.parentNode;

	  if (!parentNode) {
	    return false;
	  }

	  if(parentNode === otherNode) {
	    return true;
	  }

	  return isAncestor(parentNode, otherNode);
	}

	/**
	 * Traverse the node tree starting at current. Return DOCUMENT_POSITION_FOLLOWING if otherNode follows node. Return
	 * DOCUMENT_POSITION_PRECEDING if otherNode precedes node
	 * @param  {Node} current
	 * @param  {Node} node
	 * @param  {Node} otherNode
	 * @return {Number}
	 */
	function followingOrPreceding(current, node, otherNode) {
	  if (current === node) {
	    return core.Node.DOCUMENT_POSITION_FOLLOWING;
	  }

	  if (current === otherNode) {
	    return core.Node.DOCUMENT_POSITION_PRECEDING;
	  }

	  var i = 0, len = current.childNodes.length, child, result;

	  for(; i < len; i += 1) {

	    child = current.childNodes.item(i);

	    if((result = followingOrPreceding(child, node, otherNode)) !== 0) {
	      return result;
	    }
	  }

	  return 0;
	}

	/**
	 * Returns a bitmask Number composed of DOCUMENT_POSITION constants based upon the rules defined in
	 * http://dom.spec.whatwg.org/#dom-node-comparedocumentposition
	 * @param  {Node} other
	 * @return {Number}
	 */
	core.Node.prototype.compareDocumentPosition = function compareDocumentPosition (other) {
	  // Let reference be the context object.
	  var reference = this;

	  if(!(other instanceof core.Node)) {
	    throw Error("Comparing position against non-Node values is not allowed");
	  }

	  if (isObsoleteNodeType(reference) || isObsoleteNodeType(other)) {
	    throw new Error('Obsolete Node Type');
	  }

	  // If other and reference are the same object, return zero.
	  if(reference.isSameNode(other)) {
	    return 0;
	  }

	  // If other and reference are not in the same tree, return the result of adding DOCUMENT_POSITION_DISCONNECTED,
	  // DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC, and either DOCUMENT_POSITION_PRECEDING or DOCUMENT_POSITION_FOLLOWING,
	  // with the constraint that this is to be consistent, together.
	  if(findNodeRoot(reference) !== findNodeRoot(other)) {
	    return DOCUMENT_POSITION_DISCONNECTED + DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC + DOCUMENT_POSITION_FOLLOWING;
	  }

	  // If other is an ancestor of reference, return the result of adding DOCUMENT_POSITION_CONTAINS to
	  // DOCUMENT_POSITION_PRECEDING.
	  if(isAncestor(reference, other)) {
	    return DOCUMENT_POSITION_CONTAINS + DOCUMENT_POSITION_PRECEDING;
	  }

	  // If other is a descendant of reference, return the result of adding DOCUMENT_POSITION_CONTAINED_BY to
	  // DOCUMENT_POSITION_FOLLOWING.
	  if(isAncestor(other, reference)) {
	    return DOCUMENT_POSITION_CONTAINED_BY + DOCUMENT_POSITION_FOLLOWING;
	  }

	  // If other is preceding reference return DOCUMENT_POSITION_PRECEDING, otherwise return DOCUMENT_POSITION_FOLLOWING
	  return followingOrPreceding(findNodeRoot(reference), reference, other);
	};

	/**
	 * The contains(other) method returns true if other is an inclusive descendant of the context object,
	 * and false otherwise (including when other is null).
	 * @param  {[Node]} other [the node to test]
	 * @return {[boolean]}      [whether other is an inclusive descendant of this]
	 */
	core.Node.prototype.contains = function (other) {
	  return other instanceof core.Node &&
	  (this.isSameNode(other) || !!(this.compareDocumentPosition(other) & DOCUMENT_POSITION_CONTAINED_BY));
	};

	// http://dom.spec.whatwg.org/#dom-node-parentelement
	defineGetter(core.Node.prototype, "parentElement", function () {
	  return this._parentNode !== null && this._parentNode.nodeType === core.Node.ELEMENT_NODE ? this._parentNode : null;
	});



/***/ },
/* 514 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__filename) {var http          = __webpack_require__(21),
	    URL           = __webpack_require__(13),
	    HtmlToDom     = __webpack_require__(441).HtmlToDom,
	    domToHtml     = __webpack_require__(511).domToHtml,
	    jsdom         = __webpack_require__(9),
	    Location      = __webpack_require__(515),
	    History       = __webpack_require__(517),
	    NOT_IMPLEMENTED = __webpack_require__(516).NOT_IMPLEMENTED,
	    CSSStyleDeclaration = __webpack_require__(42).CSSStyleDeclaration,
	    toFileUrl = __webpack_require__(14).toFileUrl,
	    defineGetter  = __webpack_require__(14).defineGetter,
	    defineSetter  = __webpack_require__(14).defineSetter,
	    createFrom    = __webpack_require__(14).createFrom,
	    Contextify    = __webpack_require__(518);

	function matchesDontThrow(el, selector) {
	  try {
	    return el.matchesSelector(selector);
	  } catch (e) {
	    return false;
	  }
	}

	/**
	 * Creates a window having a document. The document can be passed as option,
	 * if omitted, a new document will be created.
	 */
	exports.windowAugmentation = function(dom, options) {
	  options = options || {};
	  var window = exports.createWindow(dom, options);

	  if (!options.document) {
	    var browser = browserAugmentation(dom, options);

	    options.document = (browser.HTMLDocument)             ?
	                        new browser.HTMLDocument(options) :
	                        new browser.Document(options);



	    options.document.write('<html><head></head><body></body></html>');
	  }

	  var doc = window.document = options.document;

	  if (doc.addEventListener) {
	    if (doc.readyState == 'complete') {
	      var ev = doc.createEvent('HTMLEvents');
	      ev.initEvent('load', false, false);
	      process.nextTick(function () {
	        window.dispatchEvent(ev);
	      });
	    }
	    else {
	      doc.addEventListener('load', function(ev) {
	        window.dispatchEvent(ev);
	      });
	    }
	  }

	  return window;
	};

	/**
	 * Creates a document-less window.
	 */
	exports.createWindow = function(dom, options) {
	  var timers = [];
	  var cssSelectorSplitRE = /((?:[^,"']|"[^"]*"|'[^']*')+)/;

	  function startTimer(startFn, stopFn, callback, ms) {
	    var res = startFn(callback, ms);
	    timers.push( [ res, stopFn ] );
	    return res;
	  }

	  function stopTimer(id) {
	    if (typeof id === 'undefined') {
	      return;
	    }
	    for (var i in timers) {
	      if (timers[i][0] === id) {
	        timers[i][1].call(this, id);
	        timers.splice(i, 1);
	        break;
	      }
	    }
	  }

	  function stopAllTimers() {
	    timers.forEach(function (t) {
	      t[1].call(this, t[0]);
	    });
	    timers = [];
	  }

	  function DOMWindow(options) {
	    var url = (options || {}).url || toFileUrl(__filename);
	    this.location = new Location(url, this);
	    this.history = new History(this);

	    this.console._window = this;

	    if (options && options.document) {
	      options.document.location = this.location;
	    }

	    this.addEventListener = function() {
	      dom.Node.prototype.addEventListener.apply(window, arguments);
	    };
	    this.removeEventListener = function() {
	      dom.Node.prototype.removeEventListener.apply(window, arguments);
	    };
	    this.dispatchEvent = function() {
	      dom.Node.prototype.dispatchEvent.apply(window, arguments);
	    };
	    this.raise = function(){
	      dom.Node.prototype.raise.apply(window.document, arguments);
	    };

	    this.setTimeout = function (fn, ms) { return startTimer(setTimeout, clearTimeout, fn, ms); };
	    this.setInterval = function (fn, ms) { return startTimer(setInterval, clearInterval, fn, ms); };
	    this.clearInterval = stopTimer;
	    this.clearTimeout = stopTimer;
	    this.__stopAllTimers = stopAllTimers;
	  }

	  DOMWindow.prototype = createFrom(dom || null, {
	    constructor: DOMWindow,
	    // This implements window.frames.length, since window.frames returns a
	    // self reference to the window object.  This value is incremented in the
	    // HTMLFrameElement init function (see: level2/html.js).
	    _length : 0,
	    get length () {
	      return this._length;
	    },
	    close : function() {
	      // Recursively close child frame windows, then ourselves.
	      var currentWindow = this;
	      (function windowCleaner (window) {
	        var i;
	        // We could call window.frames.length etc, but window.frames just points
	        // back to window.
	        if (window.length > 0) {
	          for (i = 0; i < window.length; i++) {
	            windowCleaner(window[i]);
	          }
	        }
	        // We're already in our own window.close().
	        if (window !== currentWindow) {
	          window.close();
	        }
	      })(this);

	      if (this.document) {
	        if (this.document.body) {
	          this.document.body.innerHTML = "";
	        }

	        if (this.document.close) {
	          // We need to empty out the event listener array because
	          // document.close() causes 'load' event to re-fire.
	          this.document._listeners = [];
	          this.document.close();
	        }
	        delete this.document;
	      }

	      stopAllTimers();
	      // Clean up the window's execution context.
	      // dispose() is added by Contextify.
	      setTimeout(this.dispose.bind(this), 0);
	    },
	    getComputedStyle: function(node) {
	      var s = node.style,
	          cs = new CSSStyleDeclaration(),
	          forEach = Array.prototype.forEach;

	      function setPropertiesFromRule(rule) {
	        if (!rule.selectorText) {
	          return;
	        }

	        var selectors = rule.selectorText.split(cssSelectorSplitRE);
	        var matched = false;
	        selectors.forEach(function (selectorText) {
	          if (selectorText !== '' && selectorText !== ',' && !matched && matchesDontThrow(node, selectorText)) {
	            matched = true;
	            forEach.call(rule.style, function (property) {
	              cs.setProperty(property, rule.style.getPropertyValue(property), rule.style.getPropertyPriority(property));
	            });
	          }
	        });
	      }

	      forEach.call(node.ownerDocument.styleSheets, function (sheet) {
	        forEach.call(sheet.cssRules, function (rule) {
	          if (rule.media) {
	            if (Array.prototype.indexOf.call(rule.media, 'screen') !== -1) {
	              forEach.call(rule.cssRules, setPropertiesFromRule);
	            }
	          } else {
	            setPropertiesFromRule(rule);
	          }
	        });
	      });

	      forEach.call(s, function (property) {
	        cs.setProperty(property, s.getPropertyValue(property), s.getPropertyPriority(property));
	      });

	      return cs;
	    },
	    console: {
	      log:   function(message) { this._window.raise('log',   message) },
	      info:  function(message) { this._window.raise('info',  message) },
	      warn:  function(message) { this._window.raise('warn',  message) },
	      error: function(message) { this._window.raise('error', message) }
	    },
	    navigator: {
	      get userAgent() { return 'Node.js (' + process.platform + '; U; rv:' + process.version + ')'; },
	      get appName() { return 'Node.js jsDom'; },
	      get platform() { return process.platform; },
	      get appVersion() { return process.version; },
	      noUI: true,
	      get cookieEnabled() { return true; }
	    },
	    XMLHttpRequest: function() {
	      var XMLHttpRequest = __webpack_require__(523).XMLHttpRequest;
	      var xhr = new XMLHttpRequest();
	      var lastUrl = '';
	      xhr._open = xhr.open;
	      xhr.open = function(method, url, async, user, password) {
	        url = URL.resolve(options.url, url);
	        lastUrl = url;
	        return xhr._open(method, url, async, user, password);
	      };
	      xhr._send = xhr.send;
	      xhr.send = function(data) {
	        if (window.document.cookie) {
	          var cookieDomain = window.document._cookieDomain;
	          var url = URL.parse(lastUrl);
	          var host = url.host.split(':')[0];
	          if (host.indexOf(cookieDomain, host.length - cookieDomain.length) !== -1) {
	            xhr.setDisableHeaderCheck(true);
	            xhr.setRequestHeader('cookie', window.document.cookie);
	            xhr.setDisableHeaderCheck(false);
	          }
	        }
	        return xhr._send(data);
	      };
	      return xhr;
	    },

	    name: 'nodejs',
	    innerWidth: 1024,
	    innerHeight: 768,
	    outerWidth: 1024,
	    outerHeight: 768,
	    pageXOffset: 0,
	    pageYOffset: 0,
	    screenX: 0,
	    screenY: 0,
	    screenLeft: 0,
	    screenTop: 0,
	    scrollX: 0,
	    scrollY: 0,
	    scrollTop: 0,
	    scrollLeft: 0,
	    alert: NOT_IMPLEMENTED(null, 'window.alert'),
	    blur: NOT_IMPLEMENTED(null, 'window.blur'),
	    confirm: NOT_IMPLEMENTED(null, 'window.confirm'),
	    createPopup: NOT_IMPLEMENTED(null, 'window.createPopup'),
	    focus: NOT_IMPLEMENTED(null, 'window.focus'),
	    moveBy: NOT_IMPLEMENTED(null, 'window.moveBy'),
	    moveTo: NOT_IMPLEMENTED(null, 'window.moveTo'),
	    open: NOT_IMPLEMENTED(null, 'window.open'),
	    print: NOT_IMPLEMENTED(null, 'window.print'),
	    prompt: NOT_IMPLEMENTED(null, 'window.prompt'),
	    resizeBy: NOT_IMPLEMENTED(null, 'window.resizeBy'),
	    resizeTo: NOT_IMPLEMENTED(null, 'window.resizeTo'),
	    scroll: NOT_IMPLEMENTED(null, 'window.scroll'),
	    scrollBy: NOT_IMPLEMENTED(null, 'window.scrollBy'),
	    scrollTo: NOT_IMPLEMENTED(null, 'window.scrollTo'),
	    screen : {
	      width : 0,
	      height : 0
	    },
	    Image : NOT_IMPLEMENTED(null, 'window.Image'),

	    // Note: these will not be necessary for newer Node.js versions, which have
	    // typed arrays in V8 and thus on every global object. (That is, in newer
	    // versions we'll get `ArrayBuffer` just as automatically as we get
	    // `Array`.) But to support older versions, we explicitly set them here.
	    Int8Array: global.Int8Array,
	    Int16Array: global.Int16Array,
	    Int32Array: global.Int32Array,
	    Float32Array: global.Float32Array,
	    Float64Array: global.Float64Array,
	    Uint8Array: global.Uint8Array,
	    Uint8ClampedArray: global.Uint8ClampedArray,
	    Uint16Array: global.Uint16Array,
	    Uint32Array: global.Uint32Array,
	    ArrayBuffer: global.ArrayBuffer
	  });

	  var window = new DOMWindow(options);

	  Contextify(window);

	  // We need to set up self references using Contextify's getGlobal() so that
	  // the global object identity is correct (window === this).
	  // See Contextify README for more info.
	  var windowGlobal = window.getGlobal();

	  // Set up the window as if it's a top level window.
	  // If it's not, then references will be corrected by frame/iframe code.
	  // Note: window.frames is maintained in the HTMLFrameElement init function.
	  window.window = window.frames
	                = window.self
	                = window.parent
	                = window.top = windowGlobal;

	  return window;
	};

	/**
	 * Augments the given DOM by adding browser-specific properties and methods (BOM).
	 * Returns the augmented DOM.
	 */
	var browserAugmentation = exports.browserAugmentation = function(dom, options) {

	  if(!options) {
	    options = {};
	  }

	  // set up html parser - use a provided one or try and load from library
	  var parser = options.parser;

	  if (dom._augmented && dom._parser === parser && dom._parsingMode === options.parsingMode) {
	    return dom;
	  }

	  dom._parser = parser;
	  dom._parsingMode = options.parsingMode;
	  var htmltodom = new HtmlToDom(parser, options.parsingMode);

	  function setInnerHTML(node, html) {
	    //Clear the children first:
	    var child;
	    while ((child = node._childNodes[0])) {
	      node.removeChild(child);
	    }

	    var isDoc = node.nodeName === '#document';
	    if (isDoc) {
	      parseDocType(node, html);

	      if (node._doctype) {
	        node._childNodes[0] = node._doctype;
	      }
	    }
	    if (html !== "" && html != null) {
	      if (isDoc) {
	        htmltodom.appendHtmlToDocument(html, node);
	      } else {
	        htmltodom.appendHtmlToElement(html, node);
	      }
	    }
	  }

	  if (!dom.HTMLDocument) {
	    dom.HTMLDocument = dom.Document;
	  }

	  dom.HTMLDocument.prototype.write = function(text) {
	    if (this._writeAfterElement) {
	      // If called from an script element directly (during the first tick),
	      // the new elements are inserted right after that element.
	      var tempDiv       = this.createElement('div');
	      setInnerHTML(tempDiv, text);

	      var child    = tempDiv.firstChild;
	      var previous = this._writeAfterElement;
	      var parent   = this._writeAfterElement.parentNode;

	      while (child) {
	        var node = child;
	        child    = child.nextSibling;
	        parent.insertBefore(node, previous.nextSibling);
	        previous = node;
	      }
	    } else if (this.readyState === "loading") {
	      // During page loading, document.write appends to the current element
	      // Find the last child that has been added to the document.
	      var node = this;
	      while (node.lastChild && node.lastChild.nodeType === this.ELEMENT_NODE) {
	        node = node.lastChild;
	      }
	      setInnerHTML(node, text || "<html><head></head><body></body></html>");
	    } else if (text) {
	      setInnerHTML(this, text);
	    }
	  };

	  dom.Element.prototype.getElementsByClassName = function(className) {

	    function filterByClassName(child) {
	      if (!child) {
	        return false;
	      }

	      if (child.nodeType &&
	          child.nodeType === dom.Node.ENTITY_REFERENCE_NODE)
	      {
	        child = child._entity;
	      }

	      var classString = child.className;
	      if (classString) {
	        var s = classString.split(" ");
	        for (var i=0; i<s.length; i++) {
	          if (s[i] === className) {
	            return true;
	          }
	        }
	      }
	      return false;
	    }

	    return new dom.NodeList(this.ownerDocument || this, dom.mapper(this, filterByClassName));
	  };

	  defineGetter(dom.Element.prototype, 'sourceIndex', function() {
	    /*
	    * According to QuirksMode:
	    * Get the sourceIndex of element x. This is also the index number for
	    * the element in the document.getElementsByTagName('*') array.
	    * http://www.quirksmode.org/dom/w3c_core.html#t77
	    */
	    var items = this.ownerDocument.getElementsByTagName('*'),
	        len = items.length;

	    for (var i = 0; i < len; i++) {
	      if (items[i] === this) {
	        return i;
	      }
	    }
	  });

	  defineGetter(dom.Element.prototype, 'outerHTML', function() {
	    return domToHtml(this, true);
	  });

	  defineGetter(dom.Element.prototype, 'innerHTML', function() {
	    if (/^(?:script|style)$/.test(this._tagName)) {
	      var type = this.getAttribute('type');
	      if (!type || /^text\//i.test(type) || /\/javascript$/i.test(type)) {
	        return domToHtml(this._childNodes, true, true);
	      }
	    }

	    return domToHtml(this._childNodes, true);
	  });

	  defineSetter(dom.Element.prototype, 'doctype', function() {
	    throw new dom.DOMException(dom.NO_MODIFICATION_ALLOWED_ERR);
	  });
	  defineGetter(dom.Element.prototype, 'doctype', function() {
	    var r = null;
	    if (this.nodeName == '#document') {
	        if (this._doctype) {
	         r = this._doctype;
	        }
	    }
	    return r;
	  });

	  defineSetter(dom.Element.prototype, 'innerHTML', function(html) {
	    setInnerHTML(this, html);
	    return html;
	  });

	  var DOC_HTML5      = /<!doctype html>/i,
	      DOC_TYPE       = /<!DOCTYPE (\w(.|\n)*)">/i,
	      DOC_TYPE_START = '<!DOCTYPE ',
	      DOC_TYPE_END   = '">';

	  function parseDocType(doc, html) {
	    var publicID = '',
	        systemID = '',
	        fullDT = '',
	        name = 'html',
	        set = true,
	        doctype = html.match(DOC_HTML5);

	    //Default, No doctype === null
	    doc._doctype = null;

	    if (doctype && doctype[0]) { //Handle the HTML shorty doctype
	      fullDT = doctype[0];
	    } else { //Parse the doctype
	      // find the start
	      var start     = html.indexOf(DOC_TYPE_START),
	          end       = html.indexOf(DOC_TYPE_END),
	          docString;

	      if (start < 0 || end < 0) {
	        return;
	      }

	      docString = html.substr(start, (end-start)+DOC_TYPE_END.length);
	      doctype = docString.replace(/[\n\r]/g,'').match(DOC_TYPE);

	      if (!doctype) {
	        return;
	      }

	      fullDT = doctype[0];
	      doctype = doctype[1].split(' "');
	      var _id1 = doctype.length ? doctype.pop().replace(/"/g, '') : '',
	          _id2 = doctype.length ? doctype.pop().replace(/"/g, '') : '';

	      if (_id1.indexOf('-//') !== -1) {
	        publicID = _id1;
	      }
	      if (_id2.indexOf('-//') !== -1) {
	        publicID = _id2;
	      }
	      if (_id1.indexOf('://') !== -1) {
	        systemID = _id1;
	      }
	      if (_id2.indexOf('://') !== -1) {
	        systemID = _id2;
	      }
	      if (doctype.length) {
	        doctype = doctype[0].split(' ');
	        name = doctype[0];
	      }
	    }
	    doc._doctype = new dom.DOMImplementation().createDocumentType(name, publicID, systemID);
	    doc._doctype._ownerDocument = doc;
	    doc._doctype._parentNode = doc;
	    doc._doctype._fullDT = fullDT;
	    doc._doctype.toString = function() {
	      return this._fullDT;
	    };
	  }

	  dom.Document.prototype.getElementsByClassName = function(className) {

	    function filterByClassName(child) {
	      if (!child) {
	        return false;
	      }

	      if (child.nodeType &&
	          child.nodeType === dom.Node.ENTITY_REFERENCE_NODE)
	      {
	        child = child._entity;
	      }

	      var classString = child.className;
	      if (classString) {
	        var s = classString.split(" ");
	        for (var i=0; i<s.length; i++) {
	          if (s[i] === className) {
	            return true;
	          }
	        }
	      }
	      return false;
	    }

	    return new dom.NodeList(this.ownerDocument || this, dom.mapper(this, filterByClassName));
	  };

	  defineGetter(dom.Element.prototype, 'nodeName', function(val) {
	    return this._nodeName.toUpperCase();
	  });

	  defineGetter(dom.Element.prototype, 'tagName', function(val) {
	    var t = this._tagName.toUpperCase();
	    //Document should not return a tagName
	    if (this.nodeName === '#document') {
	      t = null;
	    }
	    return t;
	  });

	  dom.Element.prototype.scrollTop = 0;
	  dom.Element.prototype.scrollLeft = 0;

	  defineGetter(dom.Document.prototype, 'parentWindow', function() {
	    if (!this._parentWindow) {
	      this.parentWindow = exports.windowAugmentation(dom, {document: this, url: this.URL});
	    }
	    return this._parentWindow;
	  });

	  defineSetter(dom.Document.prototype, 'parentWindow', function(window) {
	    // Contextify does not support getters and setters, so we have to set them
	    // on the original object instead.
	    window._frame = function (name, frame) {
	      if (typeof frame === 'undefined') {
	        delete window[name];
	      } else {
	        defineGetter(window, name, function () { return frame.contentWindow; });
	      }
	    };
	    this._parentWindow = window.getGlobal();
	  });

	  defineGetter(dom.Document.prototype, 'defaultView', function() {
	    return this.parentWindow;
	  });

	  dom._augmented = true;
	  return dom;
	};

	/* WEBPACK VAR INJECTION */}.call(exports, "/index.js"))

/***/ },
/* 515 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var URL = __webpack_require__(13);
	var NOT_IMPLEMENTED = __webpack_require__(516).NOT_IMPLEMENTED;

	module.exports = Location;

	function Location(urlString, window) {
	  this._url = URL.parse(urlString);
	  this._window = window;
	}

	Location.prototype = {
	  constructor: Location,
	  reload: function () {
	    NOT_IMPLEMENTED(this._window, "location.reload")();
	  },
	  get protocol() { return this._url.protocol || ":"; },
	  get host() { return this._url.host || ""; },
	  get auth() { return this._url.auth; },
	  get hostname() { return this._url.hostname || ""; },
	  get origin() { return ((this._url.protocol !== undefined && this._url.protocol !== null) ? this._url.protocol + "//" : this._url.protocol) + this._url.host || ""; },
	  get port() { return this._url.port || ""; },
	  get pathname() { return this._url.pathname || ""; },
	  get href() { return this._url.href; },
	  get hash() { return this._url.hash || ""; },
	  get search() { return this._url.search || ""; },

	  set href(val) {
	    var oldUrl = this._url.href;
	    var oldProtocol = this._url.protocol;
	    var oldHost = this._url.host;
	    var oldPathname = this._url.pathname;
	    var oldHash = this._url.hash || "";

	    this._url = URL.parse(URL.resolve(oldUrl, val));
	    var newUrl = this._url.href;
	    var newProtocol = this._url.protocol;
	    var newHost = this._url.host;
	    var newPathname = this._url.pathname;
	    var newHash = this._url.hash || "";

	    if (oldProtocol === newProtocol && oldHost === newHost && oldPathname === newPathname && oldHash !== newHash) {
	      this._signalHashChange(oldUrl, newUrl);
	    } else {
	      NOT_IMPLEMENTED(this._window, "location.href (no reload)")();
	    }
	  },

	  set hash(val) {
	    var oldUrl = this._url.href;
	    var oldHash = this._url.hash || "";

	    if (val.lastIndexOf("#", 0) !== 0) {
	      val = "#" + val;
	    }

	    this._url = URL.parse(URL.resolve(oldUrl, val));
	    var newUrl = this._url.href;
	    var newHash = this._url.hash || "";

	    if (oldHash !== newHash) {
	      this._signalHashChange(oldUrl, newUrl);
	    }
	  },

	  set search(val) {
	    var oldUrl = this._url.href;
	    var oldHash = this._url.hash || "";
	    if (val.length) {
	      if (val.lastIndexOf("?", 0) !== 0) {
	        val = "?" + val;
	      }
	      this._url = URL.parse(URL.resolve(oldUrl, val + oldHash));
	    } else {
	      this._url = URL.parse(oldUrl.replace(/\?([^#]+)/, ""));
	    }
	  },

	  replace: function (val) {
	    this.href = val;
	  },

	  toString: function () {
	    return this._url.href;
	  },

	  _signalHashChange: function (oldUrl, newUrl) {
	    if (this._window.document) {
	      var ev = this._window.document.createEvent("HTMLEvents");
	      ev.initEvent("hashchange", false, false);
	      ev.oldUrl = oldUrl;
	      ev.newUrl = newUrl;
	      process.nextTick(function () {
	        this._window.dispatchEvent(ev);
	      }.bind(this));
	    }
	  }
	};


/***/ },
/* 516 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var jsdom = __webpack_require__(9);

	exports.NOT_IMPLEMENTED = function (target, nameForErrorMessage) {
	  return function () {
	    if (!jsdom.debugMode) {
	      var raise = target ? target.raise : this.raise;
	      raise.call(this, "error", "NOT IMPLEMENTED" + (nameForErrorMessage ? ": " + nameForErrorMessage : ""));
	    }
	  };
	};


/***/ },
/* 517 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	var URL = __webpack_require__(13);

	function StateEntry(data, title, url) {
	  this.data = data;
	  this.title = title;
	  this.url = url;
	}

	module.exports = History;

	function History(window) {
	  this._states = [];
	  this._index = -1;
	  this._window = window;
	  this._location = window.location;
	}

	History.prototype = {
	  constructor: History,

	  get length() {
	    return this._states.length;
	  },

	  get state() {
	    var state = this._states[this._index];
	    return state ? state.data : null;
	  },

	  back: function () {
	    this.go(-1);
	  },

	  forward: function () {
	    this.go(1);
	  },

	  go: function (delta) {
	    if (typeof delta === "undefined" || delta === 0) {
	      this._location.reload();
	      return;
	    }

	    var newIndex = this._index + delta;

	    if (newIndex < 0 || newIndex >= this.length) {
	      return;
	    }

	    this._index = newIndex;
	    this._applyState(this._states[this._index]);
	  },

	  pushState: function (data, title, url) {
	    var state = new StateEntry(data, title, url);
	    if (this._index + 1 !== this._states.length) {
	      this._states = this._states.slice(0, this._index + 1);
	    }
	    this._states.push(state);
	    this._applyState(state);
	    this._index++;
	  },

	  replaceState: function (data, title, url) {
	    var state = new StateEntry(data, title, url);
	    this._states[this._index] = state;
	    this._applyState(state);
	  },

	  _applyState: function(state) {
	    this._location._url = URL.parse(URL.resolve(this._location._url.href, state.url));

	    this._signalPopstate(state);
	  },

	  _signalPopstate: function(state) {
	    if (this._window.document) {
	      var ev = this._window.document.createEvent("HTMLEvents");
	      ev.initEvent("popstate", false, false);
	      ev.state = state.data;
	      process.nextTick(function () {
	        this._window.dispatchEvent(ev);
	      }.bind(this));
	    }
	  },

	  toString: function () {
	    return "[object History]";
	  }
	};


/***/ },
/* 518 */
/***/ function(module, exports, __webpack_require__) {

	var binding = __webpack_require__(519)('contextify');
	var ContextifyContext = binding.ContextifyContext;
	var ContextifyScript = binding.ContextifyScript;

	function Contextify (sandbox) {
	    if (typeof sandbox != 'object') {
	        sandbox = {};
	    }
	    var ctx = new ContextifyContext(sandbox);

	    sandbox.run = function () {
	        return ctx.run.apply(ctx, arguments);
	    };

	    sandbox.getGlobal = function () {
	        return ctx.getGlobal();
	    }

	    sandbox.dispose = function () {
	        sandbox.run = function () {
	            throw new Error("Called run() after dispose().");
	        };
	        sandbox.getGlobal = function () {
	            throw new Error("Called getGlobal() after dispose().");
	        };
	        sandbox.dispose = function () {
	            throw new Error("Called dispose() after dispose().");
	        };
	        ctx = null;
	    }
	    return sandbox;
	}

	Contextify.createContext = function (sandbox) {
	    if (typeof sandbox != 'object') {
	        sandbox = {};
	    }
	    return new ContextifyContext(sandbox);
	};

	Contextify.createScript = function (code, filename) {
	    if (typeof code != 'string') {
	        throw new TypeError('Code argument is required');
	    }
	    return new ContextifyScript(code, filename);
	};

	module.exports = Contextify;


/***/ },
/* 519 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(__filename) {
	/**
	 * Module dependencies.
	 */

	var fs = __webpack_require__(11)
	  , path = __webpack_require__(12)
	  , join = path.join
	  , dirname = path.dirname
	  , exists = fs.existsSync || path.existsSync
	  , defaults = {
	        arrow: process.env.NODE_BINDINGS_ARROW || ' → '
	      , compiled: process.env.NODE_BINDINGS_COMPILED_DIR || 'compiled'
	      , platform: process.platform
	      , arch: process.arch
	      , version: process.versions.node
	      , bindings: 'bindings.node'
	      , try: [
	          // node-gyp's linked version in the "build" dir
	          [ 'module_root', 'build', 'bindings' ]
	          // node-waf and gyp_addon (a.k.a node-gyp)
	        , [ 'module_root', 'build', 'Debug', 'bindings' ]
	        , [ 'module_root', 'build', 'Release', 'bindings' ]
	          // Debug files, for development (legacy behavior, remove for node v0.9)
	        , [ 'module_root', 'out', 'Debug', 'bindings' ]
	        , [ 'module_root', 'Debug', 'bindings' ]
	          // Release files, but manually compiled (legacy behavior, remove for node v0.9)
	        , [ 'module_root', 'out', 'Release', 'bindings' ]
	        , [ 'module_root', 'Release', 'bindings' ]
	          // Legacy from node-waf, node <= 0.4.x
	        , [ 'module_root', 'build', 'default', 'bindings' ]
	          // Production "Release" buildtype binary (meh...)
	        , [ 'module_root', 'compiled', 'version', 'platform', 'arch', 'bindings' ]
	        ]
	    }

	/**
	 * The main `bindings()` function loads the compiled bindings for a given module.
	 * It uses V8's Error API to determine the parent filename that this function is
	 * being invoked from, which is then used to find the root directory.
	 */

	function bindings (opts) {

	  // Argument surgery
	  if (typeof opts == 'string') {
	    opts = { bindings: opts }
	  } else if (!opts) {
	    opts = {}
	  }
	  opts.__proto__ = defaults

	  // Get the module root
	  if (!opts.module_root) {
	    opts.module_root = exports.getRoot(exports.getFileName())
	  }

	  // Ensure the given bindings name ends with .node
	  if (path.extname(opts.bindings) != '.node') {
	    opts.bindings += '.node'
	  }

	  var tries = []
	    , i = 0
	    , l = opts.try.length
	    , n
	    , b
	    , err

	  for (; i<l; i++) {
	    n = join.apply(null, opts.try[i].map(function (p) {
	      return opts[p] || p
	    }))
	    tries.push(n)
	    try {
	      b = opts.path ? /*require.resolve*/(__webpack_require__(520).resolve(n)) : __webpack_require__(520)(n)
	      if (!opts.path) {
	        b.path = n
	      }
	      return b
	    } catch (e) {
	      if (!/not find/i.test(e.message)) {
	        throw e
	      }
	    }
	  }

	  err = new Error('Could not locate the bindings file. Tried:\n'
	    + tries.map(function (a) { return opts.arrow + a }).join('\n'))
	  err.tries = tries
	  throw err
	}
	module.exports = exports = bindings


	/**
	 * Gets the filename of the JavaScript file that invokes this function.
	 * Used to help find the root directory of a module.
	 * Optionally accepts an filename argument to skip when searching for the invoking filename
	 */

	exports.getFileName = function getFileName (calling_file) {
	  var origPST = Error.prepareStackTrace
	    , origSTL = Error.stackTraceLimit
	    , dummy = {}
	    , fileName

	  Error.stackTraceLimit = 10

	  Error.prepareStackTrace = function (e, st) {
	    for (var i=0, l=st.length; i<l; i++) {
	      fileName = st[i].getFileName()
	      if (fileName !== __filename) {
	        if (calling_file) {
	            if (fileName !== calling_file) {
	              return
	            }
	        } else {
	          return
	        }
	      }
	    }
	  }

	  // run the 'prepareStackTrace' function above
	  Error.captureStackTrace(dummy)
	  dummy.stack

	  // cleanup
	  Error.prepareStackTrace = origPST
	  Error.stackTraceLimit = origSTL

	  return fileName
	}

	/**
	 * Gets the root directory of a module, given an arbitrary filename
	 * somewhere in the module tree. The "root directory" is the directory
	 * containing the `package.json` file.
	 *
	 *   In:  /home/nate/node-native-module/lib/index.js
	 *   Out: /home/nate/node-native-module
	 */

	exports.getRoot = function getRoot (file) {
	  var dir = dirname(file)
	    , prev
	  while (true) {
	    if (dir === '.') {
	      // Avoids an infinite loop in rare cases, like the REPL
	      dir = process.cwd()
	    }
	    if (exists(join(dir, 'package.json')) || exists(join(dir, 'node_modules'))) {
	      // Found the 'package.json' file or 'node_modules' dir; we're done
	      return dir
	    }
	    if (prev === dir) {
	      // Got to the top
	      throw new Error('Could not find module root given file: "' + file
	                    + '". Do you have a `package.json` file? ')
	    }
	    // Try the parent dir next
	    prev = dir
	    dir = join(dir, '..')
	  }
	}

	/* WEBPACK VAR INJECTION */}.call(exports, "/index.js"))

/***/ },
/* 520 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./bindings": 519,
		"./bindings.js": 519,
		"./package": 522,
		"./package.json": 522
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 520;


/***/ },
/* 521 */,
/* 522 */
/***/ function(module, exports) {

	module.exports = {
		"name": "bindings",
		"description": "Helper module for loading your native module's .node file",
		"keywords": [
			"native",
			"addon",
			"bindings",
			"gyp",
			"waf",
			"c",
			"c++"
		],
		"version": "1.2.1",
		"author": {
			"name": "Nathan Rajlich",
			"email": "nathan@tootallnate.net",
			"url": "http://tootallnate.net"
		},
		"repository": {
			"type": "git",
			"url": "git://github.com/TooTallNate/node-bindings.git"
		},
		"main": "./bindings.js",
		"bugs": {
			"url": "https://github.com/TooTallNate/node-bindings/issues"
		},
		"homepage": "https://github.com/TooTallNate/node-bindings",
		"license": "MIT",
		"gitHead": "e404152ee27f8478ccbc7122ee051246e8e5ec02",
		"_id": "bindings@1.2.1",
		"scripts": {},
		"_shasum": "14ad6113812d2d37d72e67b4cacb4bb726505f11",
		"_from": "bindings@*",
		"_npmVersion": "1.4.14",
		"_npmUser": {
			"name": "tootallnate",
			"email": "nathan@tootallnate.net"
		},
		"maintainers": [
			{
				"name": "TooTallNate",
				"email": "nathan@tootallnate.net"
			},
			{
				"name": "tootallnate",
				"email": "nathan@tootallnate.net"
			}
		],
		"dist": {
			"shasum": "14ad6113812d2d37d72e67b4cacb4bb726505f11",
			"tarball": "http://registry.npmjs.org/bindings/-/bindings-1.2.1.tgz"
		},
		"directories": {},
		"_resolved": "https://registry.npmjs.org/bindings/-/bindings-1.2.1.tgz",
		"readme": "ERROR: No README data found!"
	}

/***/ },
/* 523 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.
	 *
	 * This can be used with JS designed for browsers to improve reuse of code and
	 * allow the use of existing libraries.
	 *
	 * Usage: include("XMLHttpRequest.js") and use XMLHttpRequest per W3C specs.
	 *
	 * @author Dan DeFelippi <dan@driverdan.com>
	 * @contributor David Ellis <d.f.ellis@ieee.org>
	 * @license MIT
	 */

	var Url = __webpack_require__(13);
	var spawn = __webpack_require__(524).spawn;
	var fs = __webpack_require__(11);

	exports.XMLHttpRequest = function() {
	  "use strict";

	  /**
	   * Private variables
	   */
	  var self = this;
	  var http = __webpack_require__(21);
	  var https = __webpack_require__(22);

	  // Holds http.js objects
	  var request;
	  var response;

	  // Request settings
	  var settings = {};

	  // Disable header blacklist.
	  // Not part of XHR specs.
	  var disableHeaderCheck = false;

	  // Set some default headers
	  var defaultHeaders = {
	    "User-Agent": "node-XMLHttpRequest",
	    "Accept": "*/*",
	  };

	  var headers = defaultHeaders;

	  // These headers are not user setable.
	  // The following are allowed but banned in the spec:
	  // * user-agent
	  var forbiddenRequestHeaders = [
	    "accept-charset",
	    "accept-encoding",
	    "access-control-request-headers",
	    "access-control-request-method",
	    "connection",
	    "content-length",
	    "content-transfer-encoding",
	    "cookie",
	    "cookie2",
	    "date",
	    "expect",
	    "host",
	    "keep-alive",
	    "origin",
	    "referer",
	    "te",
	    "trailer",
	    "transfer-encoding",
	    "upgrade",
	    "via"
	  ];

	  // These request methods are not allowed
	  var forbiddenRequestMethods = [
	    "TRACE",
	    "TRACK",
	    "CONNECT"
	  ];

	  // Send flag
	  var sendFlag = false;
	  // Error flag, used when errors occur or abort is called
	  var errorFlag = false;

	  // Event listeners
	  var listeners = {};

	  /**
	   * Constants
	   */

	  this.UNSENT = 0;
	  this.OPENED = 1;
	  this.HEADERS_RECEIVED = 2;
	  this.LOADING = 3;
	  this.DONE = 4;

	  /**
	   * Public vars
	   */

	  // Current state
	  this.readyState = this.UNSENT;

	  // default ready state change handler in case one is not set or is set late
	  this.onreadystatechange = null;

	  // Result & response
	  this.responseText = "";
	  this.responseXML = "";
	  this.status = null;
	  this.statusText = null;

	  /**
	   * Private methods
	   */

	  /**
	   * Check if the specified header is allowed.
	   *
	   * @param string header Header to validate
	   * @return boolean False if not allowed, otherwise true
	   */
	  var isAllowedHttpHeader = function(header) {
	    return disableHeaderCheck || (header && forbiddenRequestHeaders.indexOf(header.toLowerCase()) === -1);
	  };

	  /**
	   * Check if the specified method is allowed.
	   *
	   * @param string method Request method to validate
	   * @return boolean False if not allowed, otherwise true
	   */
	  var isAllowedHttpMethod = function(method) {
	    return (method && forbiddenRequestMethods.indexOf(method) === -1);
	  };

	  /**
	   * Public methods
	   */

	  /**
	   * Open the connection. Currently supports local server requests.
	   *
	   * @param string method Connection method (eg GET, POST)
	   * @param string url URL for the connection.
	   * @param boolean async Asynchronous connection. Default is true.
	   * @param string user Username for basic authentication (optional)
	   * @param string password Password for basic authentication (optional)
	   */
	  this.open = function(method, url, async, user, password) {
	    this.abort();
	    errorFlag = false;

	    // Check for valid request method
	    if (!isAllowedHttpMethod(method)) {
	      throw "SecurityError: Request method not allowed";
	    }

	    settings = {
	      "method": method,
	      "url": url.toString(),
	      "async": (typeof async !== "boolean" ? true : async),
	      "user": user || null,
	      "password": password || null
	    };

	    setState(this.OPENED);
	  };

	  /**
	   * Disables or enables isAllowedHttpHeader() check the request. Enabled by default.
	   * This does not conform to the W3C spec.
	   *
	   * @param boolean state Enable or disable header checking.
	   */
	  this.setDisableHeaderCheck = function(state) {
	    disableHeaderCheck = state;
	  };

	  /**
	   * Sets a header for the request.
	   *
	   * @param string header Header name
	   * @param string value Header value
	   */
	  this.setRequestHeader = function(header, value) {
	    if (this.readyState !== this.OPENED) {
	      throw "INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN";
	    }
	    if (!isAllowedHttpHeader(header)) {
	      console.warn("Refused to set unsafe header \"" + header + "\"");
	      return;
	    }
	    if (sendFlag) {
	      throw "INVALID_STATE_ERR: send flag is true";
	    }
	    headers[header] = value;
	  };

	  /**
	   * Gets a header from the server response.
	   *
	   * @param string header Name of header to get.
	   * @return string Text of the header or null if it doesn't exist.
	   */
	  this.getResponseHeader = function(header) {
	    if (typeof header === "string"
	      && this.readyState > this.OPENED
	      && response
	      && response.headers
	      && response.headers[header.toLowerCase()]
	      && !errorFlag
	    ) {
	      return response.headers[header.toLowerCase()];
	    }

	    return null;
	  };

	  /**
	   * Gets all the response headers.
	   *
	   * @return string A string with all response headers separated by CR+LF
	   */
	  this.getAllResponseHeaders = function() {
	    if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {
	      return "";
	    }
	    var result = "";

	    for (var i in response.headers) {
	      // Cookie headers are excluded
	      if (i !== "set-cookie" && i !== "set-cookie2") {
	        result += i + ": " + response.headers[i] + "\r\n";
	      }
	    }
	    return result.substr(0, result.length - 2);
	  };

	  /**
	   * Gets a request header
	   *
	   * @param string name Name of header to get
	   * @return string Returns the request header or empty string if not set
	   */
	  this.getRequestHeader = function(name) {
	    // @TODO Make this case insensitive
	    if (typeof name === "string" && headers[name]) {
	      return headers[name];
	    }

	    return "";
	  };

	  /**
	   * Sends the request to the server.
	   *
	   * @param string data Optional data to send as request body.
	   */
	  this.send = function(data) {
	    if (this.readyState !== this.OPENED) {
	      throw "INVALID_STATE_ERR: connection must be opened before send() is called";
	    }

	    if (sendFlag) {
	      throw "INVALID_STATE_ERR: send has already been called";
	    }

	    var ssl = false, local = false;
	    var url = Url.parse(settings.url);
	    var host;
	    // Determine the server
	    switch (url.protocol) {
	      case "https:":
	        ssl = true;
	        // SSL & non-SSL both need host, no break here.
	      case "http:":
	        host = url.hostname;
	        break;

	      case "file:":
	        local = true;
	        break;

	      case undefined:
	      case "":
	        host = "localhost";
	        break;

	      default:
	        throw "Protocol not supported.";
	    }

	    // Load files off the local filesystem (file://)
	    if (local) {
	      if (settings.method !== "GET") {
	        throw "XMLHttpRequest: Only GET method is supported";
	      }

	      if (settings.async) {
	        fs.readFile(url.pathname, "utf8", function(error, data) {
	          if (error) {
	            self.handleError(error);
	          } else {
	            self.status = 200;
	            self.responseText = data;
	            setState(self.DONE);
	          }
	        });
	      } else {
	        try {
	          this.responseText = fs.readFileSync(url.pathname, "utf8");
	          this.status = 200;
	          setState(self.DONE);
	        } catch(e) {
	          this.handleError(e);
	        }
	      }

	      return;
	    }

	    // Default to port 80. If accessing localhost on another port be sure
	    // to use http://localhost:port/path
	    var port = url.port || (ssl ? 443 : 80);
	    // Add query string if one is used
	    var uri = url.pathname + (url.search ? url.search : "");

	    // Set the Host header or the server may reject the request
	    headers.Host = host;
	    if (!((ssl && port === 443) || port === 80)) {
	      headers.Host += ":" + url.port;
	    }

	    // Set Basic Auth if necessary
	    if (settings.user) {
	      if (typeof settings.password === "undefined") {
	        settings.password = "";
	      }
	      var authBuf = new Buffer(settings.user + ":" + settings.password);
	      headers.Authorization = "Basic " + authBuf.toString("base64");
	    }

	    // Set content length header
	    if (settings.method === "GET" || settings.method === "HEAD") {
	      data = null;
	    } else if (data) {
	      headers["Content-Length"] = Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data);

	      if (!headers["Content-Type"]) {
	        headers["Content-Type"] = "text/plain;charset=UTF-8";
	      }
	    } else if (settings.method === "POST") {
	      // For a post with no data set Content-Length: 0.
	      // This is required by buggy servers that don't meet the specs.
	      headers["Content-Length"] = 0;
	    }

	    var options = {
	      host: host,
	      port: port,
	      path: uri,
	      method: settings.method,
	      headers: headers,
	      agent: false
	    };

	    // Reset error flag
	    errorFlag = false;

	    // Handle async requests
	    if (settings.async) {
	      // Use the proper protocol
	      var doRequest = ssl ? https.request : http.request;

	      // Request is being sent, set send flag
	      sendFlag = true;

	      // As per spec, this is called here for historical reasons.
	      self.dispatchEvent("readystatechange");

	      // Handler for the response
	      var responseHandler = function responseHandler(resp) {
	        // Set response var to the response we got back
	        // This is so it remains accessable outside this scope
	        response = resp;
	        // Check for redirect
	        // @TODO Prevent looped redirects
	        if (response.statusCode === 301 || response.statusCode === 302 || response.statusCode === 303 || response.statusCode === 307) {
	          // Change URL to the redirect location
	          settings.url = response.headers.location;
	          var url = Url.parse(settings.url);
	          // Set host var in case it's used later
	          host = url.hostname;
	          // Options for the new request
	          var newOptions = {
	            hostname: url.hostname,
	            port: url.port,
	            path: url.path,
	            method: response.statusCode === 303 ? "GET" : settings.method,
	            headers: headers
	          };

	          // Issue the new request
	          request = doRequest(newOptions, responseHandler).on("error", errorHandler);
	          request.end();
	          // @TODO Check if an XHR event needs to be fired here
	          return;
	        }

	        response.setEncoding("utf8");

	        setState(self.HEADERS_RECEIVED);
	        self.status = response.statusCode;

	        response.on("data", function(chunk) {
	          // Make sure there's some data
	          if (chunk) {
	            self.responseText += chunk;
	          }
	          // Don't emit state changes if the connection has been aborted.
	          if (sendFlag) {
	            setState(self.LOADING);
	          }
	        });

	        response.on("end", function() {
	          if (sendFlag) {
	            // Discard the end event if the connection has been aborted
	            setState(self.DONE);
	            sendFlag = false;
	          }
	        });

	        response.on("error", function(error) {
	          self.handleError(error);
	        });
	      };

	      // Error handler for the request
	      var errorHandler = function errorHandler(error) {
	        self.handleError(error);
	      };

	      // Create the request
	      request = doRequest(options, responseHandler).on("error", errorHandler);

	      // Node 0.4 and later won't accept empty data. Make sure it's needed.
	      if (data) {
	        request.write(data);
	      }

	      request.end();

	      self.dispatchEvent("loadstart");
	    } else { // Synchronous
	      // Create a temporary file for communication with the other Node process
	      var contentFile = ".node-xmlhttprequest-content-" + process.pid;
	      var syncFile = ".node-xmlhttprequest-sync-" + process.pid;
	      fs.writeFileSync(syncFile, "", "utf8");
	      // The async request the other Node process executes
	      var execString = "var http = require('http'), https = require('https'), fs = require('fs');"
	        + "var doRequest = http" + (ssl ? "s" : "") + ".request;"
	        + "var options = " + JSON.stringify(options) + ";"
	        + "var responseText = '';"
	        + "var req = doRequest(options, function(response) {"
	        + "response.setEncoding('utf8');"
	        + "response.on('data', function(chunk) {"
	        + "  responseText += chunk;"
	        + "});"
	        + "response.on('end', function() {"
	        + "fs.writeFileSync('" + contentFile + "', JSON.stringify({err: null, data: {statusCode: response.statusCode, headers: response.headers, text: responseText}}), 'utf8');"
	        + "fs.unlinkSync('" + syncFile + "');"
	        + "});"
	        + "response.on('error', function(error) {"
	        + "fs.writeFileSync('" + contentFile + "', JSON.stringify({err: error}), 'utf8');"
	        + "fs.unlinkSync('" + syncFile + "');"
	        + "});"
	        + "}).on('error', function(error) {"
	        + "fs.writeFileSync('" + contentFile + "', JSON.stringify({err: error}), 'utf8');"
	        + "fs.unlinkSync('" + syncFile + "');"
	        + "});"
	        + (data ? "req.write('" + JSON.stringify(data).slice(1,-1).replace(/'/g, "\\'") + "');":"")
	        + "req.end();";
	      // Start the other Node Process, executing this string
	      var syncProc = spawn(process.argv[0], ["-e", execString]);
	      while(fs.existsSync(syncFile)) {
	        // Wait while the sync file is empty
	      }
	      var resp = JSON.parse(fs.readFileSync(contentFile, 'utf8'));
	      // Kill the child process once the file has data
	      syncProc.stdin.end();
	      // Remove the temporary file
	      fs.unlinkSync(contentFile);

	      if (resp.err) {
	        self.handleError(resp.err);
	      } else {
	        response = resp.data;
	        self.status = resp.data.statusCode;
	        self.responseText = resp.data.text;
	        setState(self.DONE);
	      }
	    }
	  };

	  /**
	   * Called when an error is encountered to deal with it.
	   */
	  this.handleError = function(error) {
	    this.status = 503;
	    this.statusText = error;
	    this.responseText = error.stack;
	    errorFlag = true;
	    setState(this.DONE);
	  };

	  /**
	   * Aborts a request.
	   */
	  this.abort = function() {
	    if (request) {
	      request.abort();
	      request = null;
	    }

	    headers = defaultHeaders;
	    this.responseText = "";
	    this.responseXML = "";

	    errorFlag = true;

	    if (this.readyState !== this.UNSENT
	        && (this.readyState !== this.OPENED || sendFlag)
	        && this.readyState !== this.DONE) {
	      sendFlag = false;
	      setState(this.DONE);
	    }
	    this.readyState = this.UNSENT;
	  };

	  /**
	   * Adds an event listener. Preferred method of binding to events.
	   */
	  this.addEventListener = function(event, callback) {
	    if (!(event in listeners)) {
	      listeners[event] = [];
	    }
	    // Currently allows duplicate callbacks. Should it?
	    listeners[event].push(callback);
	  };

	  /**
	   * Remove an event callback that has already been bound.
	   * Only works on the matching funciton, cannot be a copy.
	   */
	  this.removeEventListener = function(event, callback) {
	    if (event in listeners) {
	      // Filter will return a new array with the callback removed
	      listeners[event] = listeners[event].filter(function(ev) {
	        return ev !== callback;
	      });
	    }
	  };

	  /**
	   * Dispatch any events, including both "on" methods and events attached using addEventListener.
	   */
	  this.dispatchEvent = function(event) {
	    if (typeof self["on" + event] === "function") {
	      self["on" + event]();
	    }
	    if (event in listeners) {
	      for (var i = 0, len = listeners[event].length; i < len; i++) {
	        listeners[event][i].call(self);
	      }
	    }
	  };

	  /**
	   * Changes readyState and calls onreadystatechange.
	   *
	   * @param int state New state
	   */
	  var setState = function(state) {
	    if (state == self.LOADING || self.readyState !== state) {
	      self.readyState = state;

	      if (settings.async || self.readyState < self.OPENED || self.readyState === self.DONE) {
	        self.dispatchEvent("readystatechange");
	      }

	      if (self.readyState === self.DONE && !errorFlag) {
	        self.dispatchEvent("load");
	        // @TODO figure out InspectorInstrumentation::didLoadXHR(cookie)
	        self.dispatchEvent("loadend");
	      }
	    }
	  };
	};


/***/ },
/* 524 */
/***/ function(module, exports) {

	module.exports = require("child_process");

/***/ },
/* 525 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright 2010-2012 Mikeal Rogers
	//
	//    Licensed under the Apache License, Version 2.0 (the "License");
	//    you may not use this file except in compliance with the License.
	//    You may obtain a copy of the License at
	//
	//        http://www.apache.org/licenses/LICENSE-2.0
	//
	//    Unless required by applicable law or agreed to in writing, software
	//    distributed under the License is distributed on an "AS IS" BASIS,
	//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	//    See the License for the specific language governing permissions and
	//    limitations under the License.

	'use strict'

	var extend                = __webpack_require__(526)
	  , cookies               = __webpack_require__(527)
	  , helpers               = __webpack_require__(537)

	var isFunction            = helpers.isFunction
	  , paramsHaveRequestBody = helpers.paramsHaveRequestBody


	// organize params for patch, post, put, head, del
	function initParams(uri, options, callback) {
	  if (typeof options === 'function') {
	    callback = options
	  }

	  var params = {}
	  if (typeof options === 'object') {
	    extend(params, options, {uri: uri})
	  } else if (typeof uri === 'string') {
	    extend(params, {uri: uri})
	  } else {
	    extend(params, uri)
	  }

	  params.callback = callback
	  return params
	}

	function request (uri, options, callback) {
	  if (typeof uri === 'undefined') {
	    throw new Error('undefined is not a valid uri or options object.')
	  }

	  var params = initParams(uri, options, callback)

	  if (params.method === 'HEAD' && paramsHaveRequestBody(params)) {
	    throw new Error('HTTP HEAD requests MUST NOT include a request body.')
	  }

	  return new request.Request(params)
	}

	function verbFunc (verb) {
	  var method = verb === 'del' ? 'DELETE' : verb.toUpperCase()
	  return function (uri, options, callback) {
	    var params = initParams(uri, options, callback)
	    params.method = method
	    return request(params, params.callback)
	  }
	}

	// define like this to please codeintel/intellisense IDEs
	request.get = verbFunc('get')
	request.head = verbFunc('head')
	request.post = verbFunc('post')
	request.put = verbFunc('put')
	request.patch = verbFunc('patch')
	request.del = verbFunc('del')

	request.jar = function (store) {
	  return cookies.jar(store)
	}

	request.cookie = function (str) {
	  return cookies.parse(str)
	}

	function wrapRequestMethod (method, options, requester, verb) {

	  return function (uri, opts, callback) {
	    var params = initParams(uri, opts, callback)

	    var target = {}
	    extend(true, target, options, params)

	    target.pool = params.pool || options.pool

	    if (verb) {
	      target.method = (verb === 'del' ? 'DELETE' : verb.toUpperCase())
	    }

	    if (isFunction(requester)) {
	      method = requester
	    }

	    return method(target, target.callback)
	  }
	}

	request.defaults = function (options, requester) {
	  var self = this

	  if (typeof options === 'function') {
	    requester = options
	    options = {}
	  }

	  var defaults      = wrapRequestMethod(self, options, requester)

	  var verbs = ['get', 'head', 'post', 'put', 'patch', 'del']
	  verbs.forEach(function(verb) {
	    defaults[verb]  = wrapRequestMethod(self[verb], options, requester, verb)
	  })

	  defaults.cookie   = wrapRequestMethod(self.cookie, options, requester)
	  defaults.jar      = self.jar
	  defaults.defaults = self.defaults
	  return defaults
	}

	request.forever = function (agentOptions, optionsArg) {
	  var options = {}
	  if (optionsArg) {
	    extend(options, optionsArg)
	  }
	  if (agentOptions) {
	    options.agentOptions = agentOptions
	  }

	  options.forever = true
	  return request.defaults(options)
	}

	// Exports

	module.exports = request
	request.Request = __webpack_require__(540)
	request.initParams = initParams

	// Backwards compatibility for request.debug
	Object.defineProperty(request, 'debug', {
	  enumerable : true,
	  get : function() {
	    return request.Request.debug
	  },
	  set : function(debug) {
	    request.Request.debug = debug
	  }
	})


/***/ },
/* 526 */
/***/ function(module, exports) {

	'use strict';

	var hasOwn = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;

	var isArray = function isArray(arr) {
		if (typeof Array.isArray === 'function') {
			return Array.isArray(arr);
		}

		return toStr.call(arr) === '[object Array]';
	};

	var isPlainObject = function isPlainObject(obj) {
		if (!obj || toStr.call(obj) !== '[object Object]') {
			return false;
		}

		var hasOwnConstructor = hasOwn.call(obj, 'constructor');
		var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
		// Not own constructor property must be Object
		if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
			return false;
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		var key;
		for (key in obj) {/**/}

		return typeof key === 'undefined' || hasOwn.call(obj, key);
	};

	module.exports = function extend() {
		var options, name, src, copy, copyIsArray, clone,
			target = arguments[0],
			i = 1,
			length = arguments.length,
			deep = false;

		// Handle a deep copy situation
		if (typeof target === 'boolean') {
			deep = target;
			target = arguments[1] || {};
			// skip the boolean and the target
			i = 2;
		} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {
			target = {};
		}

		for (; i < length; ++i) {
			options = arguments[i];
			// Only deal with non-null/undefined values
			if (options != null) {
				// Extend the base object
				for (name in options) {
					src = target[name];
					copy = options[name];

					// Prevent never-ending loop
					if (target !== copy) {
						// Recurse if we're merging plain objects or arrays
						if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
							if (copyIsArray) {
								copyIsArray = false;
								clone = src && isArray(src) ? src : [];
							} else {
								clone = src && isPlainObject(src) ? src : {};
							}

							// Never move original objects, clone them
							target[name] = extend(deep, clone, copy);

						// Don't bring in undefined values
						} else if (typeof copy !== 'undefined') {
							target[name] = copy;
						}
					}
				}
			}
		}

		// Return the modified object
		return target;
	};



/***/ },
/* 527 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var tough = __webpack_require__(528)

	var Cookie = tough.Cookie
	  , CookieJar = tough.CookieJar


	exports.parse = function(str) {
	  if (str && str.uri) {
	    str = str.uri
	  }
	  if (typeof str !== 'string') {
	    throw new Error('The cookie function only accepts STRING as param')
	  }
	  return Cookie.parse(str)
	}

	// Adapt the sometimes-Async api of tough.CookieJar to our requirements
	function RequestJar(store) {
	  var self = this
	  self._jar = new CookieJar(store)
	}
	RequestJar.prototype.setCookie = function(cookieOrStr, uri, options) {
	  var self = this
	  return self._jar.setCookieSync(cookieOrStr, uri, options || {})
	}
	RequestJar.prototype.getCookieString = function(uri) {
	  var self = this
	  return self._jar.getCookieStringSync(uri)
	}
	RequestJar.prototype.getCookies = function(uri) {
	  var self = this
	  return self._jar.getCookiesSync(uri)
	}

	exports.jar = function(store) {
	  return new RequestJar(store)
	}


/***/ },
/* 528 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Copyright (c) 2015, Salesforce.com, Inc.
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions are met:
	 *
	 * 1. Redistributions of source code must retain the above copyright notice,
	 * this list of conditions and the following disclaimer.
	 *
	 * 2. Redistributions in binary form must reproduce the above copyright notice,
	 * this list of conditions and the following disclaimer in the documentation
	 * and/or other materials provided with the distribution.
	 *
	 * 3. Neither the name of Salesforce.com nor the names of its contributors may
	 * be used to endorse or promote products derived from this software without
	 * specific prior written permission.
	 *
	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
	 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
	 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
	 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	 * POSSIBILITY OF SUCH DAMAGE.
	 */
	'use strict';
	var net = __webpack_require__(529);
	var urlParse = __webpack_require__(13).parse;
	var pubsuffix = __webpack_require__(530);
	var Store = __webpack_require__(532).Store;
	var MemoryCookieStore = __webpack_require__(533).MemoryCookieStore;
	var pathMatch = __webpack_require__(535).pathMatch;
	var VERSION = __webpack_require__(536).version;

	var punycode;
	try {
	  punycode = __webpack_require__(531);
	} catch(e) {
	  console.warn("cookie: can't load punycode; won't use punycode for domain normalization");
	}

	var DATE_DELIM = /[\x09\x20-\x2F\x3B-\x40\x5B-\x60\x7B-\x7E]/;

	// From RFC6265 S4.1.1
	// note that it excludes \x3B ";"
	var COOKIE_OCTET  = /[\x21\x23-\x2B\x2D-\x3A\x3C-\x5B\x5D-\x7E]/;
	var COOKIE_OCTETS = new RegExp('^'+COOKIE_OCTET.source+'$');

	// Double quotes are part of the value (see: S4.1.1).
	// '\r', '\n' and '\0' should be treated as a terminator in the "relaxed" mode
	// (see: https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L60)
	// '=' and ';' are attribute/values separators
	// (see: https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/parsed_cookie.cc#L64)
	var COOKIE_PAIR = /^([^=;]+)\s*=\s*(("?)[^\n\r\0]*\3)/;

	// RFC6265 S4.1.1 defines path value as 'any CHAR except CTLs or ";"'
	// Note ';' is \x3B
	var PATH_VALUE = /[\x20-\x3A\x3C-\x7E]+/;

	// Used for checking whether or not there is a trailing semi-colon
	var TRAILING_SEMICOLON = /;+$/;

	var DAY_OF_MONTH = /^(\d{1,2})[^\d]*$/;
	var TIME = /^(\d{1,2})[^\d]*:(\d{1,2})[^\d]*:(\d{1,2})[^\d]*$/;
	var MONTH = /^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)/i;

	var MONTH_TO_NUM = {
	  jan:0, feb:1, mar:2, apr:3, may:4, jun:5,
	  jul:6, aug:7, sep:8, oct:9, nov:10, dec:11
	};
	var NUM_TO_MONTH = [
	  'Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'
	];
	var NUM_TO_DAY = [
	  'Sun','Mon','Tue','Wed','Thu','Fri','Sat'
	];

	var YEAR = /^(\d{2}|\d{4})$/; // 2 to 4 digits

	var MAX_TIME = 2147483647000; // 31-bit max
	var MIN_TIME = 0; // 31-bit min


	// RFC6265 S5.1.1 date parser:
	function parseDate(str) {
	  if (!str) {
	    return;
	  }

	  /* RFC6265 S5.1.1:
	   * 2. Process each date-token sequentially in the order the date-tokens
	   * appear in the cookie-date
	   */
	  var tokens = str.split(DATE_DELIM);
	  if (!tokens) {
	    return;
	  }

	  var hour = null;
	  var minutes = null;
	  var seconds = null;
	  var day = null;
	  var month = null;
	  var year = null;

	  for (var i=0; i<tokens.length; i++) {
	    var token = tokens[i].trim();
	    if (!token.length) {
	      continue;
	    }

	    var result;

	    /* 2.1. If the found-time flag is not set and the token matches the time
	     * production, set the found-time flag and set the hour- value,
	     * minute-value, and second-value to the numbers denoted by the digits in
	     * the date-token, respectively.  Skip the remaining sub-steps and continue
	     * to the next date-token.
	     */
	    if (seconds === null) {
	      result = TIME.exec(token);
	      if (result) {
	        hour = parseInt(result[1], 10);
	        minutes = parseInt(result[2], 10);
	        seconds = parseInt(result[3], 10);
	        /* RFC6265 S5.1.1.5:
	         * [fail if]
	         * *  the hour-value is greater than 23,
	         * *  the minute-value is greater than 59, or
	         * *  the second-value is greater than 59.
	         */
	        if(hour > 23 || minutes > 59 || seconds > 59) {
	          return;
	        }

	        continue;
	      }
	    }

	    /* 2.2. If the found-day-of-month flag is not set and the date-token matches
	     * the day-of-month production, set the found-day-of- month flag and set
	     * the day-of-month-value to the number denoted by the date-token.  Skip
	     * the remaining sub-steps and continue to the next date-token.
	     */
	    if (day === null) {
	      result = DAY_OF_MONTH.exec(token);
	      if (result) {
	        day = parseInt(result, 10);
	        /* RFC6265 S5.1.1.5:
	         * [fail if] the day-of-month-value is less than 1 or greater than 31
	         */
	        if(day < 1 || day > 31) {
	          return;
	        }
	        continue;
	      }
	    }

	    /* 2.3. If the found-month flag is not set and the date-token matches the
	     * month production, set the found-month flag and set the month-value to
	     * the month denoted by the date-token.  Skip the remaining sub-steps and
	     * continue to the next date-token.
	     */
	    if (month === null) {
	      result = MONTH.exec(token);
	      if (result) {
	        month = MONTH_TO_NUM[result[1].toLowerCase()];
	        continue;
	      }
	    }

	    /* 2.4. If the found-year flag is not set and the date-token matches the year
	     * production, set the found-year flag and set the year-value to the number
	     * denoted by the date-token.  Skip the remaining sub-steps and continue to
	     * the next date-token.
	     */
	    if (year === null) {
	      result = YEAR.exec(token);
	      if (result) {
	        year = parseInt(result[0], 10);
	        /* From S5.1.1:
	         * 3.  If the year-value is greater than or equal to 70 and less
	         * than or equal to 99, increment the year-value by 1900.
	         * 4.  If the year-value is greater than or equal to 0 and less
	         * than or equal to 69, increment the year-value by 2000.
	         */
	        if (70 <= year && year <= 99) {
	          year += 1900;
	        } else if (0 <= year && year <= 69) {
	          year += 2000;
	        }

	        if (year < 1601) {
	          return; // 5. ... the year-value is less than 1601
	        }
	      }
	    }
	  }

	  if (seconds === null || day === null || month === null || year === null) {
	    return; // 5. ... at least one of the found-day-of-month, found-month, found-
	            // year, or found-time flags is not set,
	  }

	  return new Date(Date.UTC(year, month, day, hour, minutes, seconds));
	}

	function formatDate(date) {
	  var d = date.getUTCDate(); d = d >= 10 ? d : '0'+d;
	  var h = date.getUTCHours(); h = h >= 10 ? h : '0'+h;
	  var m = date.getUTCMinutes(); m = m >= 10 ? m : '0'+m;
	  var s = date.getUTCSeconds(); s = s >= 10 ? s : '0'+s;
	  return NUM_TO_DAY[date.getUTCDay()] + ', ' +
	    d+' '+ NUM_TO_MONTH[date.getUTCMonth()] +' '+ date.getUTCFullYear() +' '+
	    h+':'+m+':'+s+' GMT';
	}

	// S5.1.2 Canonicalized Host Names
	function canonicalDomain(str) {
	  if (str == null) {
	    return null;
	  }
	  str = str.trim().replace(/^\./,''); // S4.1.2.3 & S5.2.3: ignore leading .

	  // convert to IDN if any non-ASCII characters
	  if (punycode && /[^\u0001-\u007f]/.test(str)) {
	    str = punycode.toASCII(str);
	  }

	  return str.toLowerCase();
	}

	// S5.1.3 Domain Matching
	function domainMatch(str, domStr, canonicalize) {
	  if (str == null || domStr == null) {
	    return null;
	  }
	  if (canonicalize !== false) {
	    str = canonicalDomain(str);
	    domStr = canonicalDomain(domStr);
	  }

	  /*
	   * "The domain string and the string are identical. (Note that both the
	   * domain string and the string will have been canonicalized to lower case at
	   * this point)"
	   */
	  if (str == domStr) {
	    return true;
	  }

	  /* "All of the following [three] conditions hold:" (order adjusted from the RFC) */

	  /* "* The string is a host name (i.e., not an IP address)." */
	  if (net.isIP(str)) {
	    return false;
	  }

	  /* "* The domain string is a suffix of the string" */
	  var idx = str.indexOf(domStr);
	  if (idx <= 0) {
	    return false; // it's a non-match (-1) or prefix (0)
	  }

	  // e.g "a.b.c".indexOf("b.c") === 2
	  // 5 === 3+2
	  if (str.length !== domStr.length + idx) { // it's not a suffix
	    return false;
	  }

	  /* "* The last character of the string that is not included in the domain
	  * string is a %x2E (".") character." */
	  if (str.substr(idx-1,1) !== '.') {
	    return false;
	  }

	  return true;
	}


	// RFC6265 S5.1.4 Paths and Path-Match

	/*
	 * "The user agent MUST use an algorithm equivalent to the following algorithm
	 * to compute the default-path of a cookie:"
	 *
	 * Assumption: the path (and not query part or absolute uri) is passed in.
	 */
	function defaultPath(path) {
	  // "2. If the uri-path is empty or if the first character of the uri-path is not
	  // a %x2F ("/") character, output %x2F ("/") and skip the remaining steps.
	  if (!path || path.substr(0,1) !== "/") {
	    return "/";
	  }

	  // "3. If the uri-path contains no more than one %x2F ("/") character, output
	  // %x2F ("/") and skip the remaining step."
	  if (path === "/") {
	    return path;
	  }

	  var rightSlash = path.lastIndexOf("/");
	  if (rightSlash === 0) {
	    return "/";
	  }

	  // "4. Output the characters of the uri-path from the first character up to,
	  // but not including, the right-most %x2F ("/")."
	  return path.slice(0, rightSlash);
	}


	function parse(str) {
	  str = str.trim();

	  // S4.1.1 Trailing semi-colons are not part of the specification.
	  var semiColonCheck = TRAILING_SEMICOLON.exec(str);
	  if (semiColonCheck) {
	    str = str.slice(0, semiColonCheck.index);
	  }

	  // We use a regex to parse the "name-value-pair" part of S5.2
	  var firstSemi = str.indexOf(';'); // S5.2 step 1
	  var result = COOKIE_PAIR.exec(firstSemi === -1 ? str : str.substr(0,firstSemi));

	  // Rx satisfies the "the name string is empty" and "lacks a %x3D ("=")"
	  // constraints as well as trimming any whitespace.
	  if (!result) {
	    return;
	  }

	  var c = new Cookie();
	  c.key = result[1].trim();
	  c.value = result[2].trim();

	  if (firstSemi === -1) {
	    return c;
	  }

	  // S5.2.3 "unparsed-attributes consist of the remainder of the set-cookie-string
	  // (including the %x3B (";") in question)." plus later on in the same section
	  // "discard the first ";" and trim".
	  var unparsed = str.slice(firstSemi).replace(/^\s*;\s*/,'').trim();

	  // "If the unparsed-attributes string is empty, skip the rest of these
	  // steps."
	  if (unparsed.length === 0) {
	    return c;
	  }

	  /*
	   * S5.2 says that when looping over the items "[p]rocess the attribute-name
	   * and attribute-value according to the requirements in the following
	   * subsections" for every item.  Plus, for many of the individual attributes
	   * in S5.3 it says to use the "attribute-value of the last attribute in the
	   * cookie-attribute-list".  Therefore, in this implementation, we overwrite
	   * the previous value.
	   */
	  var cookie_avs = unparsed.split(/\s*;\s*/);
	  while (cookie_avs.length) {
	    var av = cookie_avs.shift();
	    var av_sep = av.indexOf('=');
	    var av_key, av_value;

	    if (av_sep === -1) {
	      av_key = av;
	      av_value = null;
	    } else {
	      av_key = av.substr(0,av_sep);
	      av_value = av.substr(av_sep+1);
	    }

	    av_key = av_key.trim().toLowerCase();

	    if (av_value) {
	      av_value = av_value.trim();
	    }

	    switch(av_key) {
	    case 'expires': // S5.2.1
	      if (av_value) {
	        var exp = parseDate(av_value);
	        // "If the attribute-value failed to parse as a cookie date, ignore the
	        // cookie-av."
	        if (exp) {
	          // over and underflow not realistically a concern: V8's getTime() seems to
	          // store something larger than a 32-bit time_t (even with 32-bit node)
	          c.expires = exp;
	        }
	      }
	      break;

	    case 'max-age': // S5.2.2
	      if (av_value) {
	        // "If the first character of the attribute-value is not a DIGIT or a "-"
	        // character ...[or]... If the remainder of attribute-value contains a
	        // non-DIGIT character, ignore the cookie-av."
	        if (/^-?[0-9]+$/.test(av_value)) {
	          var delta = parseInt(av_value, 10);
	          // "If delta-seconds is less than or equal to zero (0), let expiry-time
	          // be the earliest representable date and time."
	          c.setMaxAge(delta);
	        }
	      }
	      break;

	    case 'domain': // S5.2.3
	      // "If the attribute-value is empty, the behavior is undefined.  However,
	      // the user agent SHOULD ignore the cookie-av entirely."
	      if (av_value) {
	        // S5.2.3 "Let cookie-domain be the attribute-value without the leading %x2E
	        // (".") character."
	        var domain = av_value.trim().replace(/^\./, '');
	        if (domain) {
	          // "Convert the cookie-domain to lower case."
	          c.domain = domain.toLowerCase();
	        }
	      }
	      break;

	    case 'path': // S5.2.4
	      /*
	       * "If the attribute-value is empty or if the first character of the
	       * attribute-value is not %x2F ("/"):
	       *   Let cookie-path be the default-path.
	       * Otherwise:
	       *   Let cookie-path be the attribute-value."
	       *
	       * We'll represent the default-path as null since it depends on the
	       * context of the parsing.
	       */
	      c.path = av_value && av_value[0] === "/" ? av_value : null;
	      break;

	    case 'secure': // S5.2.5
	      /*
	       * "If the attribute-name case-insensitively matches the string "Secure",
	       * the user agent MUST append an attribute to the cookie-attribute-list
	       * with an attribute-name of Secure and an empty attribute-value."
	       */
	      c.secure = true;
	      break;

	    case 'httponly': // S5.2.6 -- effectively the same as 'secure'
	      c.httpOnly = true;
	      break;

	    default:
	      c.extensions = c.extensions || [];
	      c.extensions.push(av);
	      break;
	    }
	  }

	  return c;
	}

	// avoid the V8 deoptimization monster!
	function jsonParse(str) {
	  var obj;
	  try {
	    obj = JSON.parse(str);
	  } catch (e) {
	    return e;
	  }
	  return obj;
	}

	function fromJSON(str) {
	  if (!str) {
	    return null;
	  }

	  var obj;
	  if (typeof str === 'string') {
	    obj = jsonParse(str);
	    if (obj instanceof Error) {
	      return null;
	    }
	  } else {
	    // assume it's an Object
	    obj = str;
	  }

	  var c = new Cookie();
	  for (var i=0; i<Cookie.serializableProperties.length; i++) {
	    var prop = Cookie.serializableProperties[i];
	    if (obj[prop] === undefined ||
	        obj[prop] === Cookie.prototype[prop])
	    {
	      continue; // leave as prototype default
	    }

	    if (prop === 'expires' ||
	        prop === 'creation' ||
	        prop === 'lastAccessed')
	    {
	      if (obj[prop] === null) {
	        c[prop] = null;
	      } else {
	        c[prop] = obj[prop] == "Infinity" ?
	          "Infinity" : new Date(obj[prop]);
	      }
	    } else {
	      c[prop] = obj[prop];
	    }
	  }

	  return c;
	}

	/* Section 5.4 part 2:
	 * "*  Cookies with longer paths are listed before cookies with
	 *     shorter paths.
	 *
	 *  *  Among cookies that have equal-length path fields, cookies with
	 *     earlier creation-times are listed before cookies with later
	 *     creation-times."
	 */

	function cookieCompare(a,b) {
	  var cmp = 0;

	  // descending for length: b CMP a
	  var aPathLen = a.path ? a.path.length : 0;
	  var bPathLen = b.path ? b.path.length : 0;
	  cmp = bPathLen - aPathLen;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  // ascending for time: a CMP b
	  var aTime = a.creation ? a.creation.getTime() : MAX_TIME;
	  var bTime = b.creation ? b.creation.getTime() : MAX_TIME;
	  cmp = aTime - bTime;
	  if (cmp !== 0) {
	    return cmp;
	  }

	  // break ties for the same millisecond (precision of JavaScript's clock)
	  cmp = a.creationIndex - b.creationIndex;

	  return cmp;
	}

	// Gives the permutation of all possible pathMatch()es of a given path. The
	// array is in longest-to-shortest order.  Handy for indexing.
	function permutePath(path) {
	  if (path === '/') {
	    return ['/'];
	  }
	  if (path.lastIndexOf('/') === path.length-1) {
	    path = path.substr(0,path.length-1);
	  }
	  var permutations = [path];
	  while (path.length > 1) {
	    var lindex = path.lastIndexOf('/');
	    if (lindex === 0) {
	      break;
	    }
	    path = path.substr(0,lindex);
	    permutations.push(path);
	  }
	  permutations.push('/');
	  return permutations;
	}

	function getCookieContext(url) {
	  if (url instanceof Object) {
	    return url;
	  }
	  // NOTE: decodeURI will throw on malformed URIs (see GH-32).
	  // Therefore, we will just skip decoding for such URIs.
	  try {
	    url = decodeURI(url);
	  }
	  catch(err) {
	    // Silently swallow error
	  }

	  return urlParse(url);
	}

	function Cookie(opts) {
	  opts = opts || {};

	  Object.keys(opts).forEach(function(prop) {
	    if (Cookie.prototype.hasOwnProperty(prop) &&
	        Cookie.prototype[prop] !== opts[prop] &&
	        prop.substr(0,1) !== '_')
	    {
	      this[prop] = opts[prop];
	    }
	  }, this);

	  this.creation = this.creation || new Date();

	  // used to break creation ties in cookieCompare():
	  Object.defineProperty(this, 'creationIndex', {
	    configurable: false,
	    enumerable: false, // important for assert.deepEqual checks
	    writable: true,
	    value: ++Cookie.cookiesCreated
	  });
	}

	Cookie.cookiesCreated = 0; // incremented each time a cookie is created

	Cookie.parse = parse;
	Cookie.fromJSON = fromJSON;

	Cookie.prototype.key = "";
	Cookie.prototype.value = "";

	// the order in which the RFC has them:
	Cookie.prototype.expires = "Infinity"; // coerces to literal Infinity
	Cookie.prototype.maxAge = null; // takes precedence over expires for TTL
	Cookie.prototype.domain = null;
	Cookie.prototype.path = null;
	Cookie.prototype.secure = false;
	Cookie.prototype.httpOnly = false;
	Cookie.prototype.extensions = null;

	// set by the CookieJar:
	Cookie.prototype.hostOnly = null; // boolean when set
	Cookie.prototype.pathIsDefault = null; // boolean when set
	Cookie.prototype.creation = null; // Date when set; defaulted by Cookie.parse
	Cookie.prototype.lastAccessed = null; // Date when set
	Object.defineProperty(Cookie.prototype, 'creationIndex', {
	  configurable: true,
	  enumerable: false,
	  writable: true,
	  value: 0
	});

	Cookie.serializableProperties = Object.keys(Cookie.prototype)
	  .filter(function(prop) {
	    return !(
	      Cookie.prototype[prop] instanceof Function ||
	      prop === 'creationIndex' ||
	      prop.substr(0,1) === '_'
	    );
	  });

	Cookie.prototype.inspect = function inspect() {
	  var now = Date.now();
	  return 'Cookie="'+this.toString() +
	    '; hostOnly='+(this.hostOnly != null ? this.hostOnly : '?') +
	    '; aAge='+(this.lastAccessed ? (now-this.lastAccessed.getTime())+'ms' : '?') +
	    '; cAge='+(this.creation ? (now-this.creation.getTime())+'ms' : '?') +
	    '"';
	};

	Cookie.prototype.toJSON = function() {
	  var obj = {};

	  var props = Cookie.serializableProperties;
	  for (var i=0; i<props.length; i++) {
	    var prop = props[i];
	    if (this[prop] === Cookie.prototype[prop]) {
	      continue; // leave as prototype default
	    }

	    if (prop === 'expires' ||
	        prop === 'creation' ||
	        prop === 'lastAccessed')
	    {
	      if (this[prop] === null) {
	        obj[prop] = null;
	      } else {
	        obj[prop] = this[prop] == "Infinity" ? // intentionally not ===
	          "Infinity" : this[prop].toISOString();
	      }
	    } else if (prop === 'maxAge') {
	      if (this[prop] !== null) {
	        // again, intentionally not ===
	        obj[prop] = (this[prop] == Infinity || this[prop] == -Infinity) ?
	          this[prop].toString() : this[prop];
	      }
	    } else {
	      if (this[prop] !== Cookie.prototype[prop]) {
	        obj[prop] = this[prop];
	      }
	    }
	  }

	  return obj;
	};

	Cookie.prototype.clone = function() {
	  return fromJSON(this.toJSON());
	};

	Cookie.prototype.validate = function validate() {
	  if (!COOKIE_OCTETS.test(this.value)) {
	    return false;
	  }
	  if (this.expires != Infinity && !(this.expires instanceof Date) && !parseDate(this.expires)) {
	    return false;
	  }
	  if (this.maxAge != null && this.maxAge <= 0) {
	    return false; // "Max-Age=" non-zero-digit *DIGIT
	  }
	  if (this.path != null && !PATH_VALUE.test(this.path)) {
	    return false;
	  }

	  var cdomain = this.cdomain();
	  if (cdomain) {
	    if (cdomain.match(/\.$/)) {
	      return false; // S4.1.2.3 suggests that this is bad. domainMatch() tests confirm this
	    }
	    var suffix = pubsuffix.getPublicSuffix(cdomain);
	    if (suffix == null) { // it's a public suffix
	      return false;
	    }
	  }
	  return true;
	};

	Cookie.prototype.setExpires = function setExpires(exp) {
	  if (exp instanceof Date) {
	    this.expires = exp;
	  } else {
	    this.expires = parseDate(exp) || "Infinity";
	  }
	};

	Cookie.prototype.setMaxAge = function setMaxAge(age) {
	  if (age === Infinity || age === -Infinity) {
	    this.maxAge = age.toString(); // so JSON.stringify() works
	  } else {
	    this.maxAge = age;
	  }
	};

	// gives Cookie header format
	Cookie.prototype.cookieString = function cookieString() {
	  var val = this.value;
	  if (val == null) {
	    val = '';
	  }
	  return this.key+'='+val;
	};

	// gives Set-Cookie header format
	Cookie.prototype.toString = function toString() {
	  var str = this.cookieString();

	  if (this.expires != Infinity) {
	    if (this.expires instanceof Date) {
	      str += '; Expires='+formatDate(this.expires);
	    } else {
	      str += '; Expires='+this.expires;
	    }
	  }

	  if (this.maxAge != null && this.maxAge != Infinity) {
	    str += '; Max-Age='+this.maxAge;
	  }

	  if (this.domain && !this.hostOnly) {
	    str += '; Domain='+this.domain;
	  }
	  if (this.path) {
	    str += '; Path='+this.path;
	  }

	  if (this.secure) {
	    str += '; Secure';
	  }
	  if (this.httpOnly) {
	    str += '; HttpOnly';
	  }
	  if (this.extensions) {
	    this.extensions.forEach(function(ext) {
	      str += '; '+ext;
	    });
	  }

	  return str;
	};

	// TTL() partially replaces the "expiry-time" parts of S5.3 step 3 (setCookie()
	// elsewhere)
	// S5.3 says to give the "latest representable date" for which we use Infinity
	// For "expired" we use 0
	Cookie.prototype.TTL = function TTL(now) {
	  /* RFC6265 S4.1.2.2 If a cookie has both the Max-Age and the Expires
	   * attribute, the Max-Age attribute has precedence and controls the
	   * expiration date of the cookie.
	   * (Concurs with S5.3 step 3)
	   */
	  if (this.maxAge != null) {
	    return this.maxAge<=0 ? 0 : this.maxAge*1000;
	  }

	  var expires = this.expires;
	  if (expires != Infinity) {
	    if (!(expires instanceof Date)) {
	      expires = parseDate(expires) || Infinity;
	    }

	    if (expires == Infinity) {
	      return Infinity;
	    }

	    return expires.getTime() - (now || Date.now());
	  }

	  return Infinity;
	};

	// expiryTime() replaces the "expiry-time" parts of S5.3 step 3 (setCookie()
	// elsewhere)
	Cookie.prototype.expiryTime = function expiryTime(now) {
	  if (this.maxAge != null) {
	    var relativeTo = now || this.creation || new Date();
	    var age = (this.maxAge <= 0) ? -Infinity : this.maxAge*1000;
	    return relativeTo.getTime() + age;
	  }

	  if (this.expires == Infinity) {
	    return Infinity;
	  }
	  return this.expires.getTime();
	};

	// expiryDate() replaces the "expiry-time" parts of S5.3 step 3 (setCookie()
	// elsewhere), except it returns a Date
	Cookie.prototype.expiryDate = function expiryDate(now) {
	  var millisec = this.expiryTime(now);
	  if (millisec == Infinity) {
	    return new Date(MAX_TIME);
	  } else if (millisec == -Infinity) {
	    return new Date(MIN_TIME);
	  } else {
	    return new Date(millisec);
	  }
	};

	// This replaces the "persistent-flag" parts of S5.3 step 3
	Cookie.prototype.isPersistent = function isPersistent() {
	  return (this.maxAge != null || this.expires != Infinity);
	};

	// Mostly S5.1.2 and S5.2.3:
	Cookie.prototype.cdomain =
	Cookie.prototype.canonicalizedDomain = function canonicalizedDomain() {
	  if (this.domain == null) {
	    return null;
	  }
	  return canonicalDomain(this.domain);
	};

	function CookieJar(store, rejectPublicSuffixes) {
	  if (rejectPublicSuffixes != null) {
	    this.rejectPublicSuffixes = rejectPublicSuffixes;
	  }

	  if (!store) {
	    store = new MemoryCookieStore();
	  }
	  this.store = store;
	}
	CookieJar.prototype.store = null;
	CookieJar.prototype.rejectPublicSuffixes = true;
	var CAN_BE_SYNC = [];

	CAN_BE_SYNC.push('setCookie');
	CookieJar.prototype.setCookie = function(cookie, url, options, cb) {
	  var err;
	  var context = getCookieContext(url);
	  if (options instanceof Function) {
	    cb = options;
	    options = {};
	  }

	  var host = canonicalDomain(context.hostname);

	  // S5.3 step 1
	  if (!(cookie instanceof Cookie)) {
	    cookie = Cookie.parse(cookie);
	  }
	  if (!cookie) {
	    err = new Error("Cookie failed to parse");
	    return cb(options.ignoreError ? null : err);
	  }

	  // S5.3 step 2
	  var now = options.now || new Date(); // will assign later to save effort in the face of errors

	  // S5.3 step 3: NOOP; persistent-flag and expiry-time is handled by getCookie()

	  // S5.3 step 4: NOOP; domain is null by default

	  // S5.3 step 5: public suffixes
	  if (this.rejectPublicSuffixes && cookie.domain) {
	    var suffix = pubsuffix.getPublicSuffix(cookie.cdomain());
	    if (suffix == null) { // e.g. "com"
	      err = new Error("Cookie has domain set to a public suffix");
	      return cb(options.ignoreError ? null : err);
	    }
	  }

	  // S5.3 step 6:
	  if (cookie.domain) {
	    if (!domainMatch(host, cookie.cdomain(), false)) {
	      err = new Error("Cookie not in this host's domain. Cookie:"+cookie.cdomain()+" Request:"+host);
	      return cb(options.ignoreError ? null : err);
	    }

	    if (cookie.hostOnly == null) { // don't reset if already set
	      cookie.hostOnly = false;
	    }

	  } else {
	    cookie.hostOnly = true;
	    cookie.domain = host;
	  }

	  //S5.2.4 If the attribute-value is empty or if the first character of the
	  //attribute-value is not %x2F ("/"):
	  //Let cookie-path be the default-path.
	  if (!cookie.path || cookie.path[0] !== '/') {
	    cookie.path = defaultPath(context.pathname);
	    cookie.pathIsDefault = true;
	  }

	  // S5.3 step 8: NOOP; secure attribute
	  // S5.3 step 9: NOOP; httpOnly attribute

	  // S5.3 step 10
	  if (options.http === false && cookie.httpOnly) {
	    err = new Error("Cookie is HttpOnly and this isn't an HTTP API");
	    return cb(options.ignoreError ? null : err);
	  }

	  var store = this.store;

	  if (!store.updateCookie) {
	    store.updateCookie = function(oldCookie, newCookie, cb) {
	      this.putCookie(newCookie, cb);
	    };
	  }

	  function withCookie(err, oldCookie) {
	    if (err) {
	      return cb(err);
	    }

	    var next = function(err) {
	      if (err) {
	        return cb(err);
	      } else {
	        cb(null, cookie);
	      }
	    };

	    if (oldCookie) {
	      // S5.3 step 11 - "If the cookie store contains a cookie with the same name,
	      // domain, and path as the newly created cookie:"
	      if (options.http === false && oldCookie.httpOnly) { // step 11.2
	        err = new Error("old Cookie is HttpOnly and this isn't an HTTP API");
	        return cb(options.ignoreError ? null : err);
	      }
	      cookie.creation = oldCookie.creation; // step 11.3
	      cookie.creationIndex = oldCookie.creationIndex; // preserve tie-breaker
	      cookie.lastAccessed = now;
	      // Step 11.4 (delete cookie) is implied by just setting the new one:
	      store.updateCookie(oldCookie, cookie, next); // step 12

	    } else {
	      cookie.creation = cookie.lastAccessed = now;
	      store.putCookie(cookie, next); // step 12
	    }
	  }

	  store.findCookie(cookie.domain, cookie.path, cookie.key, withCookie);
	};

	// RFC6365 S5.4
	CAN_BE_SYNC.push('getCookies');
	CookieJar.prototype.getCookies = function(url, options, cb) {
	  var context = getCookieContext(url);
	  if (options instanceof Function) {
	    cb = options;
	    options = {};
	  }

	  var host = canonicalDomain(context.hostname);
	  var path = context.pathname || '/';

	  var secure = options.secure;
	  if (secure == null && context.protocol &&
	      (context.protocol == 'https:' || context.protocol == 'wss:'))
	  {
	    secure = true;
	  }

	  var http = options.http;
	  if (http == null) {
	    http = true;
	  }

	  var now = options.now || Date.now();
	  var expireCheck = options.expire !== false;
	  var allPaths = !!options.allPaths;
	  var store = this.store;

	  function matchingCookie(c) {
	    // "Either:
	    //   The cookie's host-only-flag is true and the canonicalized
	    //   request-host is identical to the cookie's domain.
	    // Or:
	    //   The cookie's host-only-flag is false and the canonicalized
	    //   request-host domain-matches the cookie's domain."
	    if (c.hostOnly) {
	      if (c.domain != host) {
	        return false;
	      }
	    } else {
	      if (!domainMatch(host, c.domain, false)) {
	        return false;
	      }
	    }

	    // "The request-uri's path path-matches the cookie's path."
	    if (!allPaths && !pathMatch(path, c.path)) {
	      return false;
	    }

	    // "If the cookie's secure-only-flag is true, then the request-uri's
	    // scheme must denote a "secure" protocol"
	    if (c.secure && !secure) {
	      return false;
	    }

	    // "If the cookie's http-only-flag is true, then exclude the cookie if the
	    // cookie-string is being generated for a "non-HTTP" API"
	    if (c.httpOnly && !http) {
	      return false;
	    }

	    // deferred from S5.3
	    // non-RFC: allow retention of expired cookies by choice
	    if (expireCheck && c.expiryTime() <= now) {
	      store.removeCookie(c.domain, c.path, c.key, function(){}); // result ignored
	      return false;
	    }

	    return true;
	  }

	  store.findCookies(host, allPaths ? null : path, function(err,cookies) {
	    if (err) {
	      return cb(err);
	    }

	    cookies = cookies.filter(matchingCookie);

	    // sorting of S5.4 part 2
	    if (options.sort !== false) {
	      cookies = cookies.sort(cookieCompare);
	    }

	    // S5.4 part 3
	    var now = new Date();
	    cookies.forEach(function(c) {
	      c.lastAccessed = now;
	    });
	    // TODO persist lastAccessed

	    cb(null,cookies);
	  });
	};

	CAN_BE_SYNC.push('getCookieString');
	CookieJar.prototype.getCookieString = function(/*..., cb*/) {
	  var args = Array.prototype.slice.call(arguments,0);
	  var cb = args.pop();
	  var next = function(err,cookies) {
	    if (err) {
	      cb(err);
	    } else {
	      cb(null, cookies
	        .sort(cookieCompare)
	        .map(function(c){
	          return c.cookieString();
	        })
	        .join('; '));
	    }
	  };
	  args.push(next);
	  this.getCookies.apply(this,args);
	};

	CAN_BE_SYNC.push('getSetCookieStrings');
	CookieJar.prototype.getSetCookieStrings = function(/*..., cb*/) {
	  var args = Array.prototype.slice.call(arguments,0);
	  var cb = args.pop();
	  var next = function(err,cookies) {
	    if (err) {
	      cb(err);
	    } else {
	      cb(null, cookies.map(function(c){
	        return c.toString();
	      }));
	    }
	  };
	  args.push(next);
	  this.getCookies.apply(this,args);
	};

	CAN_BE_SYNC.push('serialize');
	CookieJar.prototype.serialize = function(cb) {
	  var type = this.store.constructor.name;
	  if (type === 'Object') {
	    type = null;
	  }

	  // update README.md "Serialization Format" if you change this, please!
	  var serialized = {
	    // The version of tough-cookie that serialized this jar. Generally a good
	    // practice since future versions can make data import decisions based on
	    // known past behavior. When/if this matters, use `semver`.
	    version: 'tough-cookie@'+VERSION,

	    // add the store type, to make humans happy:
	    storeType: type,

	    // CookieJar configuration:
	    rejectPublicSuffixes: !!this.rejectPublicSuffixes,

	    // this gets filled from getAllCookies:
	    cookies: []
	  };

	  if (!(this.store.getAllCookies &&
	        typeof this.store.getAllCookies === 'function'))
	  {
	    return cb(new Error('store does not support getAllCookies and cannot be serialized'));
	  }

	  this.store.getAllCookies(function(err,cookies) {
	    if (err) {
	      return cb(err);
	    }

	    serialized.cookies = cookies.map(function(cookie) {
	      // convert to serialized 'raw' cookies
	      cookie = (cookie instanceof Cookie) ? cookie.toJSON() : cookie;

	      // Remove the index so new ones get assigned during deserialization
	      delete cookie.creationIndex;

	      return cookie;
	    });

	    return cb(null, serialized);
	  });
	};

	// well-known name that JSON.stringify calls
	CookieJar.prototype.toJSON = function() {
	  return this.serializeSync();
	};

	// use the class method CookieJar.deserialize instead of calling this directly
	CAN_BE_SYNC.push('_importCookies');
	CookieJar.prototype._importCookies = function(serialized, cb) {
	  var jar = this;
	  var cookies = serialized.cookies;
	  if (!cookies || !Array.isArray(cookies)) {
	    return cb(new Error('serialized jar has no cookies array'));
	  }

	  function putNext(err) {
	    if (err) {
	      return cb(err);
	    }

	    if (!cookies.length) {
	      return cb(err, jar);
	    }

	    var cookie;
	    try {
	      cookie = fromJSON(cookies.shift());
	    } catch (e) {
	      return cb(e);
	    }

	    if (cookie === null) {
	      return putNext(null); // skip this cookie
	    }

	    jar.store.putCookie(cookie, putNext);
	  }

	  putNext();
	};

	CookieJar.deserialize = function(strOrObj, store, cb) {
	  if (arguments.length !== 3) {
	    // store is optional
	    cb = store;
	    store = null;
	  }

	  var serialized;
	  if (typeof strOrObj === 'string') {
	    serialized = jsonParse(strOrObj);
	    if (serialized instanceof Error) {
	      return cb(serialized);
	    }
	  } else {
	    serialized = strOrObj;
	  }

	  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);
	  jar._importCookies(serialized, function(err) {
	    if (err) {
	      return cb(err);
	    }
	    cb(null, jar);
	  });
	};

	CookieJar.fromJSON = CookieJar.deserializeSync;
	CookieJar.deserializeSync = function(strOrObj, store) {
	  var serialized = typeof strOrObj === 'string' ?
	    JSON.parse(strOrObj) : strOrObj;
	  var jar = new CookieJar(store, serialized.rejectPublicSuffixes);

	  // catch this mistake early:
	  if (!jar.store.synchronous) {
	    throw new Error('CookieJar store is not synchronous; use async API instead.');
	  }

	  jar._importCookiesSync(serialized);
	  return jar;
	};

	CAN_BE_SYNC.push('clone');
	CookieJar.prototype.clone = function(newStore, cb) {
	  if (arguments.length === 1) {
	    cb = newStore;
	    newStore = null;
	  }

	  this.serialize(function(err,serialized) {
	    if (err) {
	      return cb(err);
	    }
	    CookieJar.deserialize(newStore, serialized, cb);
	  });
	};

	// Use a closure to provide a true imperative API for synchronous stores.
	function syncWrap(method) {
	  return function() {
	    if (!this.store.synchronous) {
	      throw new Error('CookieJar store is not synchronous; use async API instead.');
	    }

	    var args = Array.prototype.slice.call(arguments);
	    var syncErr, syncResult;
	    args.push(function syncCb(err, result) {
	      syncErr = err;
	      syncResult = result;
	    });
	    this[method].apply(this, args);

	    if (syncErr) {
	      throw syncErr;
	    }
	    return syncResult;
	  };
	}

	// wrap all declared CAN_BE_SYNC methods in the sync wrapper
	CAN_BE_SYNC.forEach(function(method) {
	  CookieJar.prototype[method+'Sync'] = syncWrap(method);
	});

	module.exports = {
	  CookieJar: CookieJar,
	  Cookie: Cookie,
	  Store: Store,
	  MemoryCookieStore: MemoryCookieStore,
	  parseDate: parseDate,
	  formatDate: formatDate,
	  parse: parse,
	  fromJSON: fromJSON,
	  domainMatch: domainMatch,
	  defaultPath: defaultPath,
	  pathMatch: pathMatch,
	  getPublicSuffix: pubsuffix.getPublicSuffix,
	  cookieCompare: cookieCompare,
	  permuteDomain: __webpack_require__(534).permuteDomain,
	  permutePath: permutePath,
	  canonicalDomain: canonicalDomain
	};


/***/ },
/* 529 */
/***/ function(module, exports) {

	module.exports = require("net");

/***/ },
/* 530 */
/***/ function(module, exports, __webpack_require__) {

	/****************************************************
	 * AUTOMATICALLY GENERATED by generate-pubsuffix.js *
	 *                  DO NOT EDIT!                    *
	 ****************************************************/

	"use strict";

	var punycode = __webpack_require__(531);

	module.exports.getPublicSuffix = function getPublicSuffix(domain) {
	  /*!
	   * Copyright (c) 2015, Salesforce.com, Inc.
	   * All rights reserved.
	   *
	   * Redistribution and use in source and binary forms, with or without
	   * modification, are permitted provided that the following conditions are met:
	   *
	   * 1. Redistributions of source code must retain the above copyright notice,
	   * this list of conditions and the following disclaimer.
	   *
	   * 2. Redistributions in binary form must reproduce the above copyright notice,
	   * this list of conditions and the following disclaimer in the documentation
	   * and/or other materials provided with the distribution.
	   *
	   * 3. Neither the name of Salesforce.com nor the names of its contributors may
	   * be used to endorse or promote products derived from this software without
	   * specific prior written permission.
	   *
	   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	   * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
	   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
	   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
	   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
	   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	   * POSSIBILITY OF SUCH DAMAGE.
	   */
	  if (!domain) {
	    return null;
	  }
	  if (domain.match(/^\./)) {
	    return null;
	  }
	  var asciiDomain = punycode.toASCII(domain);
	  var converted = false;
	  if (asciiDomain !== domain) {
	    domain = asciiDomain;
	    converted = true;
	  }
	  if (index[domain]) {
	    return null;
	  }

	  domain = domain.toLowerCase();
	  var parts = domain.split('.').reverse();

	  var suffix = '';
	  var suffixLen = 0;
	  for (var i=0; i<parts.length; i++) {
	    var part = parts[i];
	    var starstr = '*'+suffix;
	    var partstr = part+suffix;

	    if (index[starstr]) { // star rule matches
	      suffixLen = i+1;
	      if (index[partstr] === false) { // exception rule matches (NB: false, not undefined)
	        suffixLen--;
	      }
	    } else if (index[partstr]) { // exact match, not exception
	      suffixLen = i+1;
	    }

	    suffix = '.'+partstr;
	  }

	  if (index['*'+suffix]) { // *.domain exists (e.g. *.kyoto.jp for domain='kyoto.jp');
	    return null;
	  }

	  suffixLen = suffixLen || 1;
	  if (parts.length > suffixLen) {
	    var publicSuffix = parts.slice(0,suffixLen+1).reverse().join('.');
	    return converted ? punycode.toUnicode(publicSuffix) : publicSuffix;
	  }

	  return null;
	};

	// The following generated structure is used under the MPL version 1.1
	// See public-suffix.txt for more information

	var index = module.exports.index = Object.freeze(
	{"ac":true,"com.ac":true,"edu.ac":true,"gov.ac":true,"net.ac":true,"mil.ac":true,"org.ac":true,"ad":true,"nom.ad":true,"ae":true,"co.ae":true,"net.ae":true,"org.ae":true,"sch.ae":true,"ac.ae":true,"gov.ae":true,"mil.ae":true,"aero":true,"accident-investigation.aero":true,"accident-prevention.aero":true,"aerobatic.aero":true,"aeroclub.aero":true,"aerodrome.aero":true,"agents.aero":true,"aircraft.aero":true,"airline.aero":true,"airport.aero":true,"air-surveillance.aero":true,"airtraffic.aero":true,"air-traffic-control.aero":true,"ambulance.aero":true,"amusement.aero":true,"association.aero":true,"author.aero":true,"ballooning.aero":true,"broker.aero":true,"caa.aero":true,"cargo.aero":true,"catering.aero":true,"certification.aero":true,"championship.aero":true,"charter.aero":true,"civilaviation.aero":true,"club.aero":true,"conference.aero":true,"consultant.aero":true,"consulting.aero":true,"control.aero":true,"council.aero":true,"crew.aero":true,"design.aero":true,"dgca.aero":true,"educator.aero":true,"emergency.aero":true,"engine.aero":true,"engineer.aero":true,"entertainment.aero":true,"equipment.aero":true,"exchange.aero":true,"express.aero":true,"federation.aero":true,"flight.aero":true,"freight.aero":true,"fuel.aero":true,"gliding.aero":true,"government.aero":true,"groundhandling.aero":true,"group.aero":true,"hanggliding.aero":true,"homebuilt.aero":true,"insurance.aero":true,"journal.aero":true,"journalist.aero":true,"leasing.aero":true,"logistics.aero":true,"magazine.aero":true,"maintenance.aero":true,"marketplace.aero":true,"media.aero":true,"microlight.aero":true,"modelling.aero":true,"navigation.aero":true,"parachuting.aero":true,"paragliding.aero":true,"passenger-association.aero":true,"pilot.aero":true,"press.aero":true,"production.aero":true,"recreation.aero":true,"repbody.aero":true,"res.aero":true,"research.aero":true,"rotorcraft.aero":true,"safety.aero":true,"scientist.aero":true,"services.aero":true,"show.aero":true,"skydiving.aero":true,"software.aero":true,"student.aero":true,"taxi.aero":true,"trader.aero":true,"trading.aero":true,"trainer.aero":true,"union.aero":true,"workinggroup.aero":true,"works.aero":true,"af":true,"gov.af":true,"com.af":true,"org.af":true,"net.af":true,"edu.af":true,"ag":true,"com.ag":true,"org.ag":true,"net.ag":true,"co.ag":true,"nom.ag":true,"ai":true,"off.ai":true,"com.ai":true,"net.ai":true,"org.ai":true,"al":true,"com.al":true,"edu.al":true,"gov.al":true,"mil.al":true,"net.al":true,"org.al":true,"am":true,"an":true,"com.an":true,"net.an":true,"org.an":true,"edu.an":true,"ao":true,"ed.ao":true,"gv.ao":true,"og.ao":true,"co.ao":true,"pb.ao":true,"it.ao":true,"aq":true,"ar":true,"com.ar":true,"edu.ar":true,"gob.ar":true,"gov.ar":true,"int.ar":true,"mil.ar":true,"net.ar":true,"org.ar":true,"tur.ar":true,"arpa":true,"e164.arpa":true,"in-addr.arpa":true,"ip6.arpa":true,"iris.arpa":true,"uri.arpa":true,"urn.arpa":true,"as":true,"gov.as":true,"asia":true,"at":true,"ac.at":true,"co.at":true,"gv.at":true,"or.at":true,"au":true,"com.au":true,"net.au":true,"org.au":true,"edu.au":true,"gov.au":true,"asn.au":true,"id.au":true,"info.au":true,"conf.au":true,"oz.au":true,"act.au":true,"nsw.au":true,"nt.au":true,"qld.au":true,"sa.au":true,"tas.au":true,"vic.au":true,"wa.au":true,"act.edu.au":true,"nsw.edu.au":true,"nt.edu.au":true,"qld.edu.au":true,"sa.edu.au":true,"tas.edu.au":true,"vic.edu.au":true,"wa.edu.au":true,"qld.gov.au":true,"sa.gov.au":true,"tas.gov.au":true,"vic.gov.au":true,"wa.gov.au":true,"aw":true,"com.aw":true,"ax":true,"az":true,"com.az":true,"net.az":true,"int.az":true,"gov.az":true,"org.az":true,"edu.az":true,"info.az":true,"pp.az":true,"mil.az":true,"name.az":true,"pro.az":true,"biz.az":true,"ba":true,"org.ba":true,"net.ba":true,"edu.ba":true,"gov.ba":true,"mil.ba":true,"unsa.ba":true,"unbi.ba":true,"co.ba":true,"com.ba":true,"rs.ba":true,"bb":true,"biz.bb":true,"co.bb":true,"com.bb":true,"edu.bb":true,"gov.bb":true,"info.bb":true,"net.bb":true,"org.bb":true,"store.bb":true,"tv.bb":true,"*.bd":true,"be":true,"ac.be":true,"bf":true,"gov.bf":true,"bg":true,"a.bg":true,"b.bg":true,"c.bg":true,"d.bg":true,"e.bg":true,"f.bg":true,"g.bg":true,"h.bg":true,"i.bg":true,"j.bg":true,"k.bg":true,"l.bg":true,"m.bg":true,"n.bg":true,"o.bg":true,"p.bg":true,"q.bg":true,"r.bg":true,"s.bg":true,"t.bg":true,"u.bg":true,"v.bg":true,"w.bg":true,"x.bg":true,"y.bg":true,"z.bg":true,"0.bg":true,"1.bg":true,"2.bg":true,"3.bg":true,"4.bg":true,"5.bg":true,"6.bg":true,"7.bg":true,"8.bg":true,"9.bg":true,"bh":true,"com.bh":true,"edu.bh":true,"net.bh":true,"org.bh":true,"gov.bh":true,"bi":true,"co.bi":true,"com.bi":true,"edu.bi":true,"or.bi":true,"org.bi":true,"biz":true,"bj":true,"asso.bj":true,"barreau.bj":true,"gouv.bj":true,"bm":true,"com.bm":true,"edu.bm":true,"gov.bm":true,"net.bm":true,"org.bm":true,"*.bn":true,"bo":true,"com.bo":true,"edu.bo":true,"gov.bo":true,"gob.bo":true,"int.bo":true,"org.bo":true,"net.bo":true,"mil.bo":true,"tv.bo":true,"br":true,"adm.br":true,"adv.br":true,"agr.br":true,"am.br":true,"arq.br":true,"art.br":true,"ato.br":true,"b.br":true,"bio.br":true,"blog.br":true,"bmd.br":true,"cim.br":true,"cng.br":true,"cnt.br":true,"com.br":true,"coop.br":true,"ecn.br":true,"eco.br":true,"edu.br":true,"emp.br":true,"eng.br":true,"esp.br":true,"etc.br":true,"eti.br":true,"far.br":true,"flog.br":true,"fm.br":true,"fnd.br":true,"fot.br":true,"fst.br":true,"g12.br":true,"ggf.br":true,"gov.br":true,"imb.br":true,"ind.br":true,"inf.br":true,"jor.br":true,"jus.br":true,"leg.br":true,"lel.br":true,"mat.br":true,"med.br":true,"mil.br":true,"mp.br":true,"mus.br":true,"net.br":true,"*.nom.br":true,"not.br":true,"ntr.br":true,"odo.br":true,"org.br":true,"ppg.br":true,"pro.br":true,"psc.br":true,"psi.br":true,"qsl.br":true,"radio.br":true,"rec.br":true,"slg.br":true,"srv.br":true,"taxi.br":true,"teo.br":true,"tmp.br":true,"trd.br":true,"tur.br":true,"tv.br":true,"vet.br":true,"vlog.br":true,"wiki.br":true,"zlg.br":true,"bs":true,"com.bs":true,"net.bs":true,"org.bs":true,"edu.bs":true,"gov.bs":true,"bt":true,"com.bt":true,"edu.bt":true,"gov.bt":true,"net.bt":true,"org.bt":true,"bv":true,"bw":true,"co.bw":true,"org.bw":true,"by":true,"gov.by":true,"mil.by":true,"com.by":true,"of.by":true,"bz":true,"com.bz":true,"net.bz":true,"org.bz":true,"edu.bz":true,"gov.bz":true,"ca":true,"ab.ca":true,"bc.ca":true,"mb.ca":true,"nb.ca":true,"nf.ca":true,"nl.ca":true,"ns.ca":true,"nt.ca":true,"nu.ca":true,"on.ca":true,"pe.ca":true,"qc.ca":true,"sk.ca":true,"yk.ca":true,"gc.ca":true,"cat":true,"cc":true,"cd":true,"gov.cd":true,"cf":true,"cg":true,"ch":true,"ci":true,"org.ci":true,"or.ci":true,"com.ci":true,"co.ci":true,"edu.ci":true,"ed.ci":true,"ac.ci":true,"net.ci":true,"go.ci":true,"asso.ci":true,"xn--aroport-bya.ci":true,"int.ci":true,"presse.ci":true,"md.ci":true,"gouv.ci":true,"*.ck":true,"www.ck":false,"cl":true,"gov.cl":true,"gob.cl":true,"co.cl":true,"mil.cl":true,"cm":true,"co.cm":true,"com.cm":true,"gov.cm":true,"net.cm":true,"cn":true,"ac.cn":true,"com.cn":true,"edu.cn":true,"gov.cn":true,"net.cn":true,"org.cn":true,"mil.cn":true,"xn--55qx5d.cn":true,"xn--io0a7i.cn":true,"xn--od0alg.cn":true,"ah.cn":true,"bj.cn":true,"cq.cn":true,"fj.cn":true,"gd.cn":true,"gs.cn":true,"gz.cn":true,"gx.cn":true,"ha.cn":true,"hb.cn":true,"he.cn":true,"hi.cn":true,"hl.cn":true,"hn.cn":true,"jl.cn":true,"js.cn":true,"jx.cn":true,"ln.cn":true,"nm.cn":true,"nx.cn":true,"qh.cn":true,"sc.cn":true,"sd.cn":true,"sh.cn":true,"sn.cn":true,"sx.cn":true,"tj.cn":true,"xj.cn":true,"xz.cn":true,"yn.cn":true,"zj.cn":true,"hk.cn":true,"mo.cn":true,"tw.cn":true,"co":true,"arts.co":true,"com.co":true,"edu.co":true,"firm.co":true,"gov.co":true,"info.co":true,"int.co":true,"mil.co":true,"net.co":true,"nom.co":true,"org.co":true,"rec.co":true,"web.co":true,"com":true,"coop":true,"cr":true,"ac.cr":true,"co.cr":true,"ed.cr":true,"fi.cr":true,"go.cr":true,"or.cr":true,"sa.cr":true,"cu":true,"com.cu":true,"edu.cu":true,"org.cu":true,"net.cu":true,"gov.cu":true,"inf.cu":true,"cv":true,"cw":true,"com.cw":true,"edu.cw":true,"net.cw":true,"org.cw":true,"cx":true,"gov.cx":true,"*.cy":true,"cz":true,"de":true,"dj":true,"dk":true,"dm":true,"com.dm":true,"net.dm":true,"org.dm":true,"edu.dm":true,"gov.dm":true,"do":true,"art.do":true,"com.do":true,"edu.do":true,"gob.do":true,"gov.do":true,"mil.do":true,"net.do":true,"org.do":true,"sld.do":true,"web.do":true,"dz":true,"com.dz":true,"org.dz":true,"net.dz":true,"gov.dz":true,"edu.dz":true,"asso.dz":true,"pol.dz":true,"art.dz":true,"ec":true,"com.ec":true,"info.ec":true,"net.ec":true,"fin.ec":true,"k12.ec":true,"med.ec":true,"pro.ec":true,"org.ec":true,"edu.ec":true,"gov.ec":true,"gob.ec":true,"mil.ec":true,"edu":true,"ee":true,"edu.ee":true,"gov.ee":true,"riik.ee":true,"lib.ee":true,"med.ee":true,"com.ee":true,"pri.ee":true,"aip.ee":true,"org.ee":true,"fie.ee":true,"eg":true,"com.eg":true,"edu.eg":true,"eun.eg":true,"gov.eg":true,"mil.eg":true,"name.eg":true,"net.eg":true,"org.eg":true,"sci.eg":true,"*.er":true,"es":true,"com.es":true,"nom.es":true,"org.es":true,"gob.es":true,"edu.es":true,"et":true,"com.et":true,"gov.et":true,"org.et":true,"edu.et":true,"biz.et":true,"name.et":true,"info.et":true,"eu":true,"fi":true,"aland.fi":true,"*.fj":true,"*.fk":true,"fm":true,"fo":true,"fr":true,"com.fr":true,"asso.fr":true,"nom.fr":true,"prd.fr":true,"presse.fr":true,"tm.fr":true,"aeroport.fr":true,"assedic.fr":true,"avocat.fr":true,"avoues.fr":true,"cci.fr":true,"chambagri.fr":true,"chirurgiens-dentistes.fr":true,"experts-comptables.fr":true,"geometre-expert.fr":true,"gouv.fr":true,"greta.fr":true,"huissier-justice.fr":true,"medecin.fr":true,"notaires.fr":true,"pharmacien.fr":true,"port.fr":true,"veterinaire.fr":true,"ga":true,"gb":true,"gd":true,"ge":true,"com.ge":true,"edu.ge":true,"gov.ge":true,"org.ge":true,"mil.ge":true,"net.ge":true,"pvt.ge":true,"gf":true,"gg":true,"co.gg":true,"net.gg":true,"org.gg":true,"gh":true,"com.gh":true,"edu.gh":true,"gov.gh":true,"org.gh":true,"mil.gh":true,"gi":true,"com.gi":true,"ltd.gi":true,"gov.gi":true,"mod.gi":true,"edu.gi":true,"org.gi":true,"gl":true,"gm":true,"gn":true,"ac.gn":true,"com.gn":true,"edu.gn":true,"gov.gn":true,"org.gn":true,"net.gn":true,"gov":true,"gp":true,"com.gp":true,"net.gp":true,"mobi.gp":true,"edu.gp":true,"org.gp":true,"asso.gp":true,"gq":true,"gr":true,"com.gr":true,"edu.gr":true,"net.gr":true,"org.gr":true,"gov.gr":true,"gs":true,"gt":true,"com.gt":true,"edu.gt":true,"gob.gt":true,"ind.gt":true,"mil.gt":true,"net.gt":true,"org.gt":true,"*.gu":true,"gw":true,"gy":true,"co.gy":true,"com.gy":true,"net.gy":true,"hk":true,"com.hk":true,"edu.hk":true,"gov.hk":true,"idv.hk":true,"net.hk":true,"org.hk":true,"xn--55qx5d.hk":true,"xn--wcvs22d.hk":true,"xn--lcvr32d.hk":true,"xn--mxtq1m.hk":true,"xn--gmqw5a.hk":true,"xn--ciqpn.hk":true,"xn--gmq050i.hk":true,"xn--zf0avx.hk":true,"xn--io0a7i.hk":true,"xn--mk0axi.hk":true,"xn--od0alg.hk":true,"xn--od0aq3b.hk":true,"xn--tn0ag.hk":true,"xn--uc0atv.hk":true,"xn--uc0ay4a.hk":true,"hm":true,"hn":true,"com.hn":true,"edu.hn":true,"org.hn":true,"net.hn":true,"mil.hn":true,"gob.hn":true,"hr":true,"iz.hr":true,"from.hr":true,"name.hr":true,"com.hr":true,"ht":true,"com.ht":true,"shop.ht":true,"firm.ht":true,"info.ht":true,"adult.ht":true,"net.ht":true,"pro.ht":true,"org.ht":true,"med.ht":true,"art.ht":true,"coop.ht":true,"pol.ht":true,"asso.ht":true,"edu.ht":true,"rel.ht":true,"gouv.ht":true,"perso.ht":true,"hu":true,"co.hu":true,"info.hu":true,"org.hu":true,"priv.hu":true,"sport.hu":true,"tm.hu":true,"2000.hu":true,"agrar.hu":true,"bolt.hu":true,"casino.hu":true,"city.hu":true,"erotica.hu":true,"erotika.hu":true,"film.hu":true,"forum.hu":true,"games.hu":true,"hotel.hu":true,"ingatlan.hu":true,"jogasz.hu":true,"konyvelo.hu":true,"lakas.hu":true,"media.hu":true,"news.hu":true,"reklam.hu":true,"sex.hu":true,"shop.hu":true,"suli.hu":true,"szex.hu":true,"tozsde.hu":true,"utazas.hu":true,"video.hu":true,"id":true,"ac.id":true,"biz.id":true,"co.id":true,"desa.id":true,"go.id":true,"mil.id":true,"my.id":true,"net.id":true,"or.id":true,"sch.id":true,"web.id":true,"ie":true,"gov.ie":true,"*.il":true,"im":true,"ac.im":true,"co.im":true,"com.im":true,"ltd.co.im":true,"net.im":true,"org.im":true,"plc.co.im":true,"tt.im":true,"tv.im":true,"in":true,"co.in":true,"firm.in":true,"net.in":true,"org.in":true,"gen.in":true,"ind.in":true,"nic.in":true,"ac.in":true,"edu.in":true,"res.in":true,"gov.in":true,"mil.in":true,"info":true,"int":true,"eu.int":true,"io":true,"com.io":true,"iq":true,"gov.iq":true,"edu.iq":true,"mil.iq":true,"com.iq":true,"org.iq":true,"net.iq":true,"ir":true,"ac.ir":true,"co.ir":true,"gov.ir":true,"id.ir":true,"net.ir":true,"org.ir":true,"sch.ir":true,"xn--mgba3a4f16a.ir":true,"xn--mgba3a4fra.ir":true,"is":true,"net.is":true,"com.is":true,"edu.is":true,"gov.is":true,"org.is":true,"int.is":true,"it":true,"gov.it":true,"edu.it":true,"abr.it":true,"abruzzo.it":true,"aosta-valley.it":true,"aostavalley.it":true,"bas.it":true,"basilicata.it":true,"cal.it":true,"calabria.it":true,"cam.it":true,"campania.it":true,"emilia-romagna.it":true,"emiliaromagna.it":true,"emr.it":true,"friuli-v-giulia.it":true,"friuli-ve-giulia.it":true,"friuli-vegiulia.it":true,"friuli-venezia-giulia.it":true,"friuli-veneziagiulia.it":true,"friuli-vgiulia.it":true,"friuliv-giulia.it":true,"friulive-giulia.it":true,"friulivegiulia.it":true,"friulivenezia-giulia.it":true,"friuliveneziagiulia.it":true,"friulivgiulia.it":true,"fvg.it":true,"laz.it":true,"lazio.it":true,"lig.it":true,"liguria.it":true,"lom.it":true,"lombardia.it":true,"lombardy.it":true,"lucania.it":true,"mar.it":true,"marche.it":true,"mol.it":true,"molise.it":true,"piedmont.it":true,"piemonte.it":true,"pmn.it":true,"pug.it":true,"puglia.it":true,"sar.it":true,"sardegna.it":true,"sardinia.it":true,"sic.it":true,"sicilia.it":true,"sicily.it":true,"taa.it":true,"tos.it":true,"toscana.it":true,"trentino-a-adige.it":true,"trentino-aadige.it":true,"trentino-alto-adige.it":true,"trentino-altoadige.it":true,"trentino-s-tirol.it":true,"trentino-stirol.it":true,"trentino-sud-tirol.it":true,"trentino-sudtirol.it":true,"trentino-sued-tirol.it":true,"trentino-suedtirol.it":true,"trentinoa-adige.it":true,"trentinoaadige.it":true,"trentinoalto-adige.it":true,"trentinoaltoadige.it":true,"trentinos-tirol.it":true,"trentinostirol.it":true,"trentinosud-tirol.it":true,"trentinosudtirol.it":true,"trentinosued-tirol.it":true,"trentinosuedtirol.it":true,"tuscany.it":true,"umb.it":true,"umbria.it":true,"val-d-aosta.it":true,"val-daosta.it":true,"vald-aosta.it":true,"valdaosta.it":true,"valle-aosta.it":true,"valle-d-aosta.it":true,"valle-daosta.it":true,"valleaosta.it":true,"valled-aosta.it":true,"valledaosta.it":true,"vallee-aoste.it":true,"valleeaoste.it":true,"vao.it":true,"vda.it":true,"ven.it":true,"veneto.it":true,"ag.it":true,"agrigento.it":true,"al.it":true,"alessandria.it":true,"alto-adige.it":true,"altoadige.it":true,"an.it":true,"ancona.it":true,"andria-barletta-trani.it":true,"andria-trani-barletta.it":true,"andriabarlettatrani.it":true,"andriatranibarletta.it":true,"ao.it":true,"aosta.it":true,"aoste.it":true,"ap.it":true,"aq.it":true,"aquila.it":true,"ar.it":true,"arezzo.it":true,"ascoli-piceno.it":true,"ascolipiceno.it":true,"asti.it":true,"at.it":true,"av.it":true,"avellino.it":true,"ba.it":true,"balsan.it":true,"bari.it":true,"barletta-trani-andria.it":true,"barlettatraniandria.it":true,"belluno.it":true,"benevento.it":true,"bergamo.it":true,"bg.it":true,"bi.it":true,"biella.it":true,"bl.it":true,"bn.it":true,"bo.it":true,"bologna.it":true,"bolzano.it":true,"bozen.it":true,"br.it":true,"brescia.it":true,"brindisi.it":true,"bs.it":true,"bt.it":true,"bz.it":true,"ca.it":true,"cagliari.it":true,"caltanissetta.it":true,"campidano-medio.it":true,"campidanomedio.it":true,"campobasso.it":true,"carbonia-iglesias.it":true,"carboniaiglesias.it":true,"carrara-massa.it":true,"carraramassa.it":true,"caserta.it":true,"catania.it":true,"catanzaro.it":true,"cb.it":true,"ce.it":true,"cesena-forli.it":true,"cesenaforli.it":true,"ch.it":true,"chieti.it":true,"ci.it":true,"cl.it":true,"cn.it":true,"co.it":true,"como.it":true,"cosenza.it":true,"cr.it":true,"cremona.it":true,"crotone.it":true,"cs.it":true,"ct.it":true,"cuneo.it":true,"cz.it":true,"dell-ogliastra.it":true,"dellogliastra.it":true,"en.it":true,"enna.it":true,"fc.it":true,"fe.it":true,"fermo.it":true,"ferrara.it":true,"fg.it":true,"fi.it":true,"firenze.it":true,"florence.it":true,"fm.it":true,"foggia.it":true,"forli-cesena.it":true,"forlicesena.it":true,"fr.it":true,"frosinone.it":true,"ge.it":true,"genoa.it":true,"genova.it":true,"go.it":true,"gorizia.it":true,"gr.it":true,"grosseto.it":true,"iglesias-carbonia.it":true,"iglesiascarbonia.it":true,"im.it":true,"imperia.it":true,"is.it":true,"isernia.it":true,"kr.it":true,"la-spezia.it":true,"laquila.it":true,"laspezia.it":true,"latina.it":true,"lc.it":true,"le.it":true,"lecce.it":true,"lecco.it":true,"li.it":true,"livorno.it":true,"lo.it":true,"lodi.it":true,"lt.it":true,"lu.it":true,"lucca.it":true,"macerata.it":true,"mantova.it":true,"massa-carrara.it":true,"massacarrara.it":true,"matera.it":true,"mb.it":true,"mc.it":true,"me.it":true,"medio-campidano.it":true,"mediocampidano.it":true,"messina.it":true,"mi.it":true,"milan.it":true,"milano.it":true,"mn.it":true,"mo.it":true,"modena.it":true,"monza-brianza.it":true,"monza-e-della-brianza.it":true,"monza.it":true,"monzabrianza.it":true,"monzaebrianza.it":true,"monzaedellabrianza.it":true,"ms.it":true,"mt.it":true,"na.it":true,"naples.it":true,"napoli.it":true,"no.it":true,"novara.it":true,"nu.it":true,"nuoro.it":true,"og.it":true,"ogliastra.it":true,"olbia-tempio.it":true,"olbiatempio.it":true,"or.it":true,"oristano.it":true,"ot.it":true,"pa.it":true,"padova.it":true,"padua.it":true,"palermo.it":true,"parma.it":true,"pavia.it":true,"pc.it":true,"pd.it":true,"pe.it":true,"perugia.it":true,"pesaro-urbino.it":true,"pesarourbino.it":true,"pescara.it":true,"pg.it":true,"pi.it":true,"piacenza.it":true,"pisa.it":true,"pistoia.it":true,"pn.it":true,"po.it":true,"pordenone.it":true,"potenza.it":true,"pr.it":true,"prato.it":true,"pt.it":true,"pu.it":true,"pv.it":true,"pz.it":true,"ra.it":true,"ragusa.it":true,"ravenna.it":true,"rc.it":true,"re.it":true,"reggio-calabria.it":true,"reggio-emilia.it":true,"reggiocalabria.it":true,"reggioemilia.it":true,"rg.it":true,"ri.it":true,"rieti.it":true,"rimini.it":true,"rm.it":true,"rn.it":true,"ro.it":true,"roma.it":true,"rome.it":true,"rovigo.it":true,"sa.it":true,"salerno.it":true,"sassari.it":true,"savona.it":true,"si.it":true,"siena.it":true,"siracusa.it":true,"so.it":true,"sondrio.it":true,"sp.it":true,"sr.it":true,"ss.it":true,"suedtirol.it":true,"sv.it":true,"ta.it":true,"taranto.it":true,"te.it":true,"tempio-olbia.it":true,"tempioolbia.it":true,"teramo.it":true,"terni.it":true,"tn.it":true,"to.it":true,"torino.it":true,"tp.it":true,"tr.it":true,"trani-andria-barletta.it":true,"trani-barletta-andria.it":true,"traniandriabarletta.it":true,"tranibarlettaandria.it":true,"trapani.it":true,"trentino.it":true,"trento.it":true,"treviso.it":true,"trieste.it":true,"ts.it":true,"turin.it":true,"tv.it":true,"ud.it":true,"udine.it":true,"urbino-pesaro.it":true,"urbinopesaro.it":true,"va.it":true,"varese.it":true,"vb.it":true,"vc.it":true,"ve.it":true,"venezia.it":true,"venice.it":true,"verbania.it":true,"vercelli.it":true,"verona.it":true,"vi.it":true,"vibo-valentia.it":true,"vibovalentia.it":true,"vicenza.it":true,"viterbo.it":true,"vr.it":true,"vs.it":true,"vt.it":true,"vv.it":true,"je":true,"co.je":true,"net.je":true,"org.je":true,"*.jm":true,"jo":true,"com.jo":true,"org.jo":true,"net.jo":true,"edu.jo":true,"sch.jo":true,"gov.jo":true,"mil.jo":true,"name.jo":true,"jobs":true,"jp":true,"ac.jp":true,"ad.jp":true,"co.jp":true,"ed.jp":true,"go.jp":true,"gr.jp":true,"lg.jp":true,"ne.jp":true,"or.jp":true,"aichi.jp":true,"akita.jp":true,"aomori.jp":true,"chiba.jp":true,"ehime.jp":true,"fukui.jp":true,"fukuoka.jp":true,"fukushima.jp":true,"gifu.jp":true,"gunma.jp":true,"hiroshima.jp":true,"hokkaido.jp":true,"hyogo.jp":true,"ibaraki.jp":true,"ishikawa.jp":true,"iwate.jp":true,"kagawa.jp":true,"kagoshima.jp":true,"kanagawa.jp":true,"kochi.jp":true,"kumamoto.jp":true,"kyoto.jp":true,"mie.jp":true,"miyagi.jp":true,"miyazaki.jp":true,"nagano.jp":true,"nagasaki.jp":true,"nara.jp":true,"niigata.jp":true,"oita.jp":true,"okayama.jp":true,"okinawa.jp":true,"osaka.jp":true,"saga.jp":true,"saitama.jp":true,"shiga.jp":true,"shimane.jp":true,"shizuoka.jp":true,"tochigi.jp":true,"tokushima.jp":true,"tokyo.jp":true,"tottori.jp":true,"toyama.jp":true,"wakayama.jp":true,"yamagata.jp":true,"yamaguchi.jp":true,"yamanashi.jp":true,"xn--4pvxs.jp":true,"xn--vgu402c.jp":true,"xn--c3s14m.jp":true,"xn--f6qx53a.jp":true,"xn--8pvr4u.jp":true,"xn--uist22h.jp":true,"xn--djrs72d6uy.jp":true,"xn--mkru45i.jp":true,"xn--0trq7p7nn.jp":true,"xn--8ltr62k.jp":true,"xn--2m4a15e.jp":true,"xn--efvn9s.jp":true,"xn--32vp30h.jp":true,"xn--4it797k.jp":true,"xn--1lqs71d.jp":true,"xn--5rtp49c.jp":true,"xn--5js045d.jp":true,"xn--ehqz56n.jp":true,"xn--1lqs03n.jp":true,"xn--qqqt11m.jp":true,"xn--kbrq7o.jp":true,"xn--pssu33l.jp":true,"xn--ntsq17g.jp":true,"xn--uisz3g.jp":true,"xn--6btw5a.jp":true,"xn--1ctwo.jp":true,"xn--6orx2r.jp":true,"xn--rht61e.jp":true,"xn--rht27z.jp":true,"xn--djty4k.jp":true,"xn--nit225k.jp":true,"xn--rht3d.jp":true,"xn--klty5x.jp":true,"xn--kltx9a.jp":true,"xn--kltp7d.jp":true,"xn--uuwu58a.jp":true,"xn--zbx025d.jp":true,"xn--ntso0iqx3a.jp":true,"xn--elqq16h.jp":true,"xn--4it168d.jp":true,"xn--klt787d.jp":true,"xn--rny31h.jp":true,"xn--7t0a264c.jp":true,"xn--5rtq34k.jp":true,"xn--k7yn95e.jp":true,"xn--tor131o.jp":true,"xn--d5qv7z876c.jp":true,"*.kawasaki.jp":true,"*.kitakyushu.jp":true,"*.kobe.jp":true,"*.nagoya.jp":true,"*.sapporo.jp":true,"*.sendai.jp":true,"*.yokohama.jp":true,"city.kawasaki.jp":false,"city.kitakyushu.jp":false,"city.kobe.jp":false,"city.nagoya.jp":false,"city.sapporo.jp":false,"city.sendai.jp":false,"city.yokohama.jp":false,"aisai.aichi.jp":true,"ama.aichi.jp":true,"anjo.aichi.jp":true,"asuke.aichi.jp":true,"chiryu.aichi.jp":true,"chita.aichi.jp":true,"fuso.aichi.jp":true,"gamagori.aichi.jp":true,"handa.aichi.jp":true,"hazu.aichi.jp":true,"hekinan.aichi.jp":true,"higashiura.aichi.jp":true,"ichinomiya.aichi.jp":true,"inazawa.aichi.jp":true,"inuyama.aichi.jp":true,"isshiki.aichi.jp":true,"iwakura.aichi.jp":true,"kanie.aichi.jp":true,"kariya.aichi.jp":true,"kasugai.aichi.jp":true,"kira.aichi.jp":true,"kiyosu.aichi.jp":true,"komaki.aichi.jp":true,"konan.aichi.jp":true,"kota.aichi.jp":true,"mihama.aichi.jp":true,"miyoshi.aichi.jp":true,"nishio.aichi.jp":true,"nisshin.aichi.jp":true,"obu.aichi.jp":true,"oguchi.aichi.jp":true,"oharu.aichi.jp":true,"okazaki.aichi.jp":true,"owariasahi.aichi.jp":true,"seto.aichi.jp":true,"shikatsu.aichi.jp":true,"shinshiro.aichi.jp":true,"shitara.aichi.jp":true,"tahara.aichi.jp":true,"takahama.aichi.jp":true,"tobishima.aichi.jp":true,"toei.aichi.jp":true,"togo.aichi.jp":true,"tokai.aichi.jp":true,"tokoname.aichi.jp":true,"toyoake.aichi.jp":true,"toyohashi.aichi.jp":true,"toyokawa.aichi.jp":true,"toyone.aichi.jp":true,"toyota.aichi.jp":true,"tsushima.aichi.jp":true,"yatomi.aichi.jp":true,"akita.akita.jp":true,"daisen.akita.jp":true,"fujisato.akita.jp":true,"gojome.akita.jp":true,"hachirogata.akita.jp":true,"happou.akita.jp":true,"higashinaruse.akita.jp":true,"honjo.akita.jp":true,"honjyo.akita.jp":true,"ikawa.akita.jp":true,"kamikoani.akita.jp":true,"kamioka.akita.jp":true,"katagami.akita.jp":true,"kazuno.akita.jp":true,"kitaakita.akita.jp":true,"kosaka.akita.jp":true,"kyowa.akita.jp":true,"misato.akita.jp":true,"mitane.akita.jp":true,"moriyoshi.akita.jp":true,"nikaho.akita.jp":true,"noshiro.akita.jp":true,"odate.akita.jp":true,"oga.akita.jp":true,"ogata.akita.jp":true,"semboku.akita.jp":true,"yokote.akita.jp":true,"yurihonjo.akita.jp":true,"aomori.aomori.jp":true,"gonohe.aomori.jp":true,"hachinohe.aomori.jp":true,"hashikami.aomori.jp":true,"hiranai.aomori.jp":true,"hirosaki.aomori.jp":true,"itayanagi.aomori.jp":true,"kuroishi.aomori.jp":true,"misawa.aomori.jp":true,"mutsu.aomori.jp":true,"nakadomari.aomori.jp":true,"noheji.aomori.jp":true,"oirase.aomori.jp":true,"owani.aomori.jp":true,"rokunohe.aomori.jp":true,"sannohe.aomori.jp":true,"shichinohe.aomori.jp":true,"shingo.aomori.jp":true,"takko.aomori.jp":true,"towada.aomori.jp":true,"tsugaru.aomori.jp":true,"tsuruta.aomori.jp":true,"abiko.chiba.jp":true,"asahi.chiba.jp":true,"chonan.chiba.jp":true,"chosei.chiba.jp":true,"choshi.chiba.jp":true,"chuo.chiba.jp":true,"funabashi.chiba.jp":true,"futtsu.chiba.jp":true,"hanamigawa.chiba.jp":true,"ichihara.chiba.jp":true,"ichikawa.chiba.jp":true,"ichinomiya.chiba.jp":true,"inzai.chiba.jp":true,"isumi.chiba.jp":true,"kamagaya.chiba.jp":true,"kamogawa.chiba.jp":true,"kashiwa.chiba.jp":true,"katori.chiba.jp":true,"katsuura.chiba.jp":true,"kimitsu.chiba.jp":true,"kisarazu.chiba.jp":true,"kozaki.chiba.jp":true,"kujukuri.chiba.jp":true,"kyonan.chiba.jp":true,"matsudo.chiba.jp":true,"midori.chiba.jp":true,"mihama.chiba.jp":true,"minamiboso.chiba.jp":true,"mobara.chiba.jp":true,"mutsuzawa.chiba.jp":true,"nagara.chiba.jp":true,"nagareyama.chiba.jp":true,"narashino.chiba.jp":true,"narita.chiba.jp":true,"noda.chiba.jp":true,"oamishirasato.chiba.jp":true,"omigawa.chiba.jp":true,"onjuku.chiba.jp":true,"otaki.chiba.jp":true,"sakae.chiba.jp":true,"sakura.chiba.jp":true,"shimofusa.chiba.jp":true,"shirako.chiba.jp":true,"shiroi.chiba.jp":true,"shisui.chiba.jp":true,"sodegaura.chiba.jp":true,"sosa.chiba.jp":true,"tako.chiba.jp":true,"tateyama.chiba.jp":true,"togane.chiba.jp":true,"tohnosho.chiba.jp":true,"tomisato.chiba.jp":true,"urayasu.chiba.jp":true,"yachimata.chiba.jp":true,"yachiyo.chiba.jp":true,"yokaichiba.chiba.jp":true,"yokoshibahikari.chiba.jp":true,"yotsukaido.chiba.jp":true,"ainan.ehime.jp":true,"honai.ehime.jp":true,"ikata.ehime.jp":true,"imabari.ehime.jp":true,"iyo.ehime.jp":true,"kamijima.ehime.jp":true,"kihoku.ehime.jp":true,"kumakogen.ehime.jp":true,"masaki.ehime.jp":true,"matsuno.ehime.jp":true,"matsuyama.ehime.jp":true,"namikata.ehime.jp":true,"niihama.ehime.jp":true,"ozu.ehime.jp":true,"saijo.ehime.jp":true,"seiyo.ehime.jp":true,"shikokuchuo.ehime.jp":true,"tobe.ehime.jp":true,"toon.ehime.jp":true,"uchiko.ehime.jp":true,"uwajima.ehime.jp":true,"yawatahama.ehime.jp":true,"echizen.fukui.jp":true,"eiheiji.fukui.jp":true,"fukui.fukui.jp":true,"ikeda.fukui.jp":true,"katsuyama.fukui.jp":true,"mihama.fukui.jp":true,"minamiechizen.fukui.jp":true,"obama.fukui.jp":true,"ohi.fukui.jp":true,"ono.fukui.jp":true,"sabae.fukui.jp":true,"sakai.fukui.jp":true,"takahama.fukui.jp":true,"tsuruga.fukui.jp":true,"wakasa.fukui.jp":true,"ashiya.fukuoka.jp":true,"buzen.fukuoka.jp":true,"chikugo.fukuoka.jp":true,"chikuho.fukuoka.jp":true,"chikujo.fukuoka.jp":true,"chikushino.fukuoka.jp":true,"chikuzen.fukuoka.jp":true,"chuo.fukuoka.jp":true,"dazaifu.fukuoka.jp":true,"fukuchi.fukuoka.jp":true,"hakata.fukuoka.jp":true,"higashi.fukuoka.jp":true,"hirokawa.fukuoka.jp":true,"hisayama.fukuoka.jp":true,"iizuka.fukuoka.jp":true,"inatsuki.fukuoka.jp":true,"kaho.fukuoka.jp":true,"kasuga.fukuoka.jp":true,"kasuya.fukuoka.jp":true,"kawara.fukuoka.jp":true,"keisen.fukuoka.jp":true,"koga.fukuoka.jp":true,"kurate.fukuoka.jp":true,"kurogi.fukuoka.jp":true,"kurume.fukuoka.jp":true,"minami.fukuoka.jp":true,"miyako.fukuoka.jp":true,"miyama.fukuoka.jp":true,"miyawaka.fukuoka.jp":true,"mizumaki.fukuoka.jp":true,"munakata.fukuoka.jp":true,"nakagawa.fukuoka.jp":true,"nakama.fukuoka.jp":true,"nishi.fukuoka.jp":true,"nogata.fukuoka.jp":true,"ogori.fukuoka.jp":true,"okagaki.fukuoka.jp":true,"okawa.fukuoka.jp":true,"oki.fukuoka.jp":true,"omuta.fukuoka.jp":true,"onga.fukuoka.jp":true,"onojo.fukuoka.jp":true,"oto.fukuoka.jp":true,"saigawa.fukuoka.jp":true,"sasaguri.fukuoka.jp":true,"shingu.fukuoka.jp":true,"shinyoshitomi.fukuoka.jp":true,"shonai.fukuoka.jp":true,"soeda.fukuoka.jp":true,"sue.fukuoka.jp":true,"tachiarai.fukuoka.jp":true,"tagawa.fukuoka.jp":true,"takata.fukuoka.jp":true,"toho.fukuoka.jp":true,"toyotsu.fukuoka.jp":true,"tsuiki.fukuoka.jp":true,"ukiha.fukuoka.jp":true,"umi.fukuoka.jp":true,"usui.fukuoka.jp":true,"yamada.fukuoka.jp":true,"yame.fukuoka.jp":true,"yanagawa.fukuoka.jp":true,"yukuhashi.fukuoka.jp":true,"aizubange.fukushima.jp":true,"aizumisato.fukushima.jp":true,"aizuwakamatsu.fukushima.jp":true,"asakawa.fukushima.jp":true,"bandai.fukushima.jp":true,"date.fukushima.jp":true,"fukushima.fukushima.jp":true,"furudono.fukushima.jp":true,"futaba.fukushima.jp":true,"hanawa.fukushima.jp":true,"higashi.fukushima.jp":true,"hirata.fukushima.jp":true,"hirono.fukushima.jp":true,"iitate.fukushima.jp":true,"inawashiro.fukushima.jp":true,"ishikawa.fukushima.jp":true,"iwaki.fukushima.jp":true,"izumizaki.fukushima.jp":true,"kagamiishi.fukushima.jp":true,"kaneyama.fukushima.jp":true,"kawamata.fukushima.jp":true,"kitakata.fukushima.jp":true,"kitashiobara.fukushima.jp":true,"koori.fukushima.jp":true,"koriyama.fukushima.jp":true,"kunimi.fukushima.jp":true,"miharu.fukushima.jp":true,"mishima.fukushima.jp":true,"namie.fukushima.jp":true,"nango.fukushima.jp":true,"nishiaizu.fukushima.jp":true,"nishigo.fukushima.jp":true,"okuma.fukushima.jp":true,"omotego.fukushima.jp":true,"ono.fukushima.jp":true,"otama.fukushima.jp":true,"samegawa.fukushima.jp":true,"shimogo.fukushima.jp":true,"shirakawa.fukushima.jp":true,"showa.fukushima.jp":true,"soma.fukushima.jp":true,"sukagawa.fukushima.jp":true,"taishin.fukushima.jp":true,"tamakawa.fukushima.jp":true,"tanagura.fukushima.jp":true,"tenei.fukushima.jp":true,"yabuki.fukushima.jp":true,"yamato.fukushima.jp":true,"yamatsuri.fukushima.jp":true,"yanaizu.fukushima.jp":true,"yugawa.fukushima.jp":true,"anpachi.gifu.jp":true,"ena.gifu.jp":true,"gifu.gifu.jp":true,"ginan.gifu.jp":true,"godo.gifu.jp":true,"gujo.gifu.jp":true,"hashima.gifu.jp":true,"hichiso.gifu.jp":true,"hida.gifu.jp":true,"higashishirakawa.gifu.jp":true,"ibigawa.gifu.jp":true,"ikeda.gifu.jp":true,"kakamigahara.gifu.jp":true,"kani.gifu.jp":true,"kasahara.gifu.jp":true,"kasamatsu.gifu.jp":true,"kawaue.gifu.jp":true,"kitagata.gifu.jp":true,"mino.gifu.jp":true,"minokamo.gifu.jp":true,"mitake.gifu.jp":true,"mizunami.gifu.jp":true,"motosu.gifu.jp":true,"nakatsugawa.gifu.jp":true,"ogaki.gifu.jp":true,"sakahogi.gifu.jp":true,"seki.gifu.jp":true,"sekigahara.gifu.jp":true,"shirakawa.gifu.jp":true,"tajimi.gifu.jp":true,"takayama.gifu.jp":true,"tarui.gifu.jp":true,"toki.gifu.jp":true,"tomika.gifu.jp":true,"wanouchi.gifu.jp":true,"yamagata.gifu.jp":true,"yaotsu.gifu.jp":true,"yoro.gifu.jp":true,"annaka.gunma.jp":true,"chiyoda.gunma.jp":true,"fujioka.gunma.jp":true,"higashiagatsuma.gunma.jp":true,"isesaki.gunma.jp":true,"itakura.gunma.jp":true,"kanna.gunma.jp":true,"kanra.gunma.jp":true,"katashina.gunma.jp":true,"kawaba.gunma.jp":true,"kiryu.gunma.jp":true,"kusatsu.gunma.jp":true,"maebashi.gunma.jp":true,"meiwa.gunma.jp":true,"midori.gunma.jp":true,"minakami.gunma.jp":true,"naganohara.gunma.jp":true,"nakanojo.gunma.jp":true,"nanmoku.gunma.jp":true,"numata.gunma.jp":true,"oizumi.gunma.jp":true,"ora.gunma.jp":true,"ota.gunma.jp":true,"shibukawa.gunma.jp":true,"shimonita.gunma.jp":true,"shinto.gunma.jp":true,"showa.gunma.jp":true,"takasaki.gunma.jp":true,"takayama.gunma.jp":true,"tamamura.gunma.jp":true,"tatebayashi.gunma.jp":true,"tomioka.gunma.jp":true,"tsukiyono.gunma.jp":true,"tsumagoi.gunma.jp":true,"ueno.gunma.jp":true,"yoshioka.gunma.jp":true,"asaminami.hiroshima.jp":true,"daiwa.hiroshima.jp":true,"etajima.hiroshima.jp":true,"fuchu.hiroshima.jp":true,"fukuyama.hiroshima.jp":true,"hatsukaichi.hiroshima.jp":true,"higashihiroshima.hiroshima.jp":true,"hongo.hiroshima.jp":true,"jinsekikogen.hiroshima.jp":true,"kaita.hiroshima.jp":true,"kui.hiroshima.jp":true,"kumano.hiroshima.jp":true,"kure.hiroshima.jp":true,"mihara.hiroshima.jp":true,"miyoshi.hiroshima.jp":true,"naka.hiroshima.jp":true,"onomichi.hiroshima.jp":true,"osakikamijima.hiroshima.jp":true,"otake.hiroshima.jp":true,"saka.hiroshima.jp":true,"sera.hiroshima.jp":true,"seranishi.hiroshima.jp":true,"shinichi.hiroshima.jp":true,"shobara.hiroshima.jp":true,"takehara.hiroshima.jp":true,"abashiri.hokkaido.jp":true,"abira.hokkaido.jp":true,"aibetsu.hokkaido.jp":true,"akabira.hokkaido.jp":true,"akkeshi.hokkaido.jp":true,"asahikawa.hokkaido.jp":true,"ashibetsu.hokkaido.jp":true,"ashoro.hokkaido.jp":true,"assabu.hokkaido.jp":true,"atsuma.hokkaido.jp":true,"bibai.hokkaido.jp":true,"biei.hokkaido.jp":true,"bifuka.hokkaido.jp":true,"bihoro.hokkaido.jp":true,"biratori.hokkaido.jp":true,"chippubetsu.hokkaido.jp":true,"chitose.hokkaido.jp":true,"date.hokkaido.jp":true,"ebetsu.hokkaido.jp":true,"embetsu.hokkaido.jp":true,"eniwa.hokkaido.jp":true,"erimo.hokkaido.jp":true,"esan.hokkaido.jp":true,"esashi.hokkaido.jp":true,"fukagawa.hokkaido.jp":true,"fukushima.hokkaido.jp":true,"furano.hokkaido.jp":true,"furubira.hokkaido.jp":true,"haboro.hokkaido.jp":true,"hakodate.hokkaido.jp":true,"hamatonbetsu.hokkaido.jp":true,"hidaka.hokkaido.jp":true,"higashikagura.hokkaido.jp":true,"higashikawa.hokkaido.jp":true,"hiroo.hokkaido.jp":true,"hokuryu.hokkaido.jp":true,"hokuto.hokkaido.jp":true,"honbetsu.hokkaido.jp":true,"horokanai.hokkaido.jp":true,"horonobe.hokkaido.jp":true,"ikeda.hokkaido.jp":true,"imakane.hokkaido.jp":true,"ishikari.hokkaido.jp":true,"iwamizawa.hokkaido.jp":true,"iwanai.hokkaido.jp":true,"kamifurano.hokkaido.jp":true,"kamikawa.hokkaido.jp":true,"kamishihoro.hokkaido.jp":true,"kamisunagawa.hokkaido.jp":true,"kamoenai.hokkaido.jp":true,"kayabe.hokkaido.jp":true,"kembuchi.hokkaido.jp":true,"kikonai.hokkaido.jp":true,"kimobetsu.hokkaido.jp":true,"kitahiroshima.hokkaido.jp":true,"kitami.hokkaido.jp":true,"kiyosato.hokkaido.jp":true,"koshimizu.hokkaido.jp":true,"kunneppu.hokkaido.jp":true,"kuriyama.hokkaido.jp":true,"kuromatsunai.hokkaido.jp":true,"kushiro.hokkaido.jp":true,"kutchan.hokkaido.jp":true,"kyowa.hokkaido.jp":true,"mashike.hokkaido.jp":true,"matsumae.hokkaido.jp":true,"mikasa.hokkaido.jp":true,"minamifurano.hokkaido.jp":true,"mombetsu.hokkaido.jp":true,"moseushi.hokkaido.jp":true,"mukawa.hokkaido.jp":true,"muroran.hokkaido.jp":true,"naie.hokkaido.jp":true,"nakagawa.hokkaido.jp":true,"nakasatsunai.hokkaido.jp":true,"nakatombetsu.hokkaido.jp":true,"nanae.hokkaido.jp":true,"nanporo.hokkaido.jp":true,"nayoro.hokkaido.jp":true,"nemuro.hokkaido.jp":true,"niikappu.hokkaido.jp":true,"niki.hokkaido.jp":true,"nishiokoppe.hokkaido.jp":true,"noboribetsu.hokkaido.jp":true,"numata.hokkaido.jp":true,"obihiro.hokkaido.jp":true,"obira.hokkaido.jp":true,"oketo.hokkaido.jp":true,"okoppe.hokkaido.jp":true,"otaru.hokkaido.jp":true,"otobe.hokkaido.jp":true,"otofuke.hokkaido.jp":true,"otoineppu.hokkaido.jp":true,"oumu.hokkaido.jp":true,"ozora.hokkaido.jp":true,"pippu.hokkaido.jp":true,"rankoshi.hokkaido.jp":true,"rebun.hokkaido.jp":true,"rikubetsu.hokkaido.jp":true,"rishiri.hokkaido.jp":true,"rishirifuji.hokkaido.jp":true,"saroma.hokkaido.jp":true,"sarufutsu.hokkaido.jp":true,"shakotan.hokkaido.jp":true,"shari.hokkaido.jp":true,"shibecha.hokkaido.jp":true,"shibetsu.hokkaido.jp":true,"shikabe.hokkaido.jp":true,"shikaoi.hokkaido.jp":true,"shimamaki.hokkaido.jp":true,"shimizu.hokkaido.jp":true,"shimokawa.hokkaido.jp":true,"shinshinotsu.hokkaido.jp":true,"shintoku.hokkaido.jp":true,"shiranuka.hokkaido.jp":true,"shiraoi.hokkaido.jp":true,"shiriuchi.hokkaido.jp":true,"sobetsu.hokkaido.jp":true,"sunagawa.hokkaido.jp":true,"taiki.hokkaido.jp":true,"takasu.hokkaido.jp":true,"takikawa.hokkaido.jp":true,"takinoue.hokkaido.jp":true,"teshikaga.hokkaido.jp":true,"tobetsu.hokkaido.jp":true,"tohma.hokkaido.jp":true,"tomakomai.hokkaido.jp":true,"tomari.hokkaido.jp":true,"toya.hokkaido.jp":true,"toyako.hokkaido.jp":true,"toyotomi.hokkaido.jp":true,"toyoura.hokkaido.jp":true,"tsubetsu.hokkaido.jp":true,"tsukigata.hokkaido.jp":true,"urakawa.hokkaido.jp":true,"urausu.hokkaido.jp":true,"uryu.hokkaido.jp":true,"utashinai.hokkaido.jp":true,"wakkanai.hokkaido.jp":true,"wassamu.hokkaido.jp":true,"yakumo.hokkaido.jp":true,"yoichi.hokkaido.jp":true,"aioi.hyogo.jp":true,"akashi.hyogo.jp":true,"ako.hyogo.jp":true,"amagasaki.hyogo.jp":true,"aogaki.hyogo.jp":true,"asago.hyogo.jp":true,"ashiya.hyogo.jp":true,"awaji.hyogo.jp":true,"fukusaki.hyogo.jp":true,"goshiki.hyogo.jp":true,"harima.hyogo.jp":true,"himeji.hyogo.jp":true,"ichikawa.hyogo.jp":true,"inagawa.hyogo.jp":true,"itami.hyogo.jp":true,"kakogawa.hyogo.jp":true,"kamigori.hyogo.jp":true,"kamikawa.hyogo.jp":true,"kasai.hyogo.jp":true,"kasuga.hyogo.jp":true,"kawanishi.hyogo.jp":true,"miki.hyogo.jp":true,"minamiawaji.hyogo.jp":true,"nishinomiya.hyogo.jp":true,"nishiwaki.hyogo.jp":true,"ono.hyogo.jp":true,"sanda.hyogo.jp":true,"sannan.hyogo.jp":true,"sasayama.hyogo.jp":true,"sayo.hyogo.jp":true,"shingu.hyogo.jp":true,"shinonsen.hyogo.jp":true,"shiso.hyogo.jp":true,"sumoto.hyogo.jp":true,"taishi.hyogo.jp":true,"taka.hyogo.jp":true,"takarazuka.hyogo.jp":true,"takasago.hyogo.jp":true,"takino.hyogo.jp":true,"tamba.hyogo.jp":true,"tatsuno.hyogo.jp":true,"toyooka.hyogo.jp":true,"yabu.hyogo.jp":true,"yashiro.hyogo.jp":true,"yoka.hyogo.jp":true,"yokawa.hyogo.jp":true,"ami.ibaraki.jp":true,"asahi.ibaraki.jp":true,"bando.ibaraki.jp":true,"chikusei.ibaraki.jp":true,"daigo.ibaraki.jp":true,"fujishiro.ibaraki.jp":true,"hitachi.ibaraki.jp":true,"hitachinaka.ibaraki.jp":true,"hitachiomiya.ibaraki.jp":true,"hitachiota.ibaraki.jp":true,"ibaraki.ibaraki.jp":true,"ina.ibaraki.jp":true,"inashiki.ibaraki.jp":true,"itako.ibaraki.jp":true,"iwama.ibaraki.jp":true,"joso.ibaraki.jp":true,"kamisu.ibaraki.jp":true,"kasama.ibaraki.jp":true,"kashima.ibaraki.jp":true,"kasumigaura.ibaraki.jp":true,"koga.ibaraki.jp":true,"miho.ibaraki.jp":true,"mito.ibaraki.jp":true,"moriya.ibaraki.jp":true,"naka.ibaraki.jp":true,"namegata.ibaraki.jp":true,"oarai.ibaraki.jp":true,"ogawa.ibaraki.jp":true,"omitama.ibaraki.jp":true,"ryugasaki.ibaraki.jp":true,"sakai.ibaraki.jp":true,"sakuragawa.ibaraki.jp":true,"shimodate.ibaraki.jp":true,"shimotsuma.ibaraki.jp":true,"shirosato.ibaraki.jp":true,"sowa.ibaraki.jp":true,"suifu.ibaraki.jp":true,"takahagi.ibaraki.jp":true,"tamatsukuri.ibaraki.jp":true,"tokai.ibaraki.jp":true,"tomobe.ibaraki.jp":true,"tone.ibaraki.jp":true,"toride.ibaraki.jp":true,"tsuchiura.ibaraki.jp":true,"tsukuba.ibaraki.jp":true,"uchihara.ibaraki.jp":true,"ushiku.ibaraki.jp":true,"yachiyo.ibaraki.jp":true,"yamagata.ibaraki.jp":true,"yawara.ibaraki.jp":true,"yuki.ibaraki.jp":true,"anamizu.ishikawa.jp":true,"hakui.ishikawa.jp":true,"hakusan.ishikawa.jp":true,"kaga.ishikawa.jp":true,"kahoku.ishikawa.jp":true,"kanazawa.ishikawa.jp":true,"kawakita.ishikawa.jp":true,"komatsu.ishikawa.jp":true,"nakanoto.ishikawa.jp":true,"nanao.ishikawa.jp":true,"nomi.ishikawa.jp":true,"nonoichi.ishikawa.jp":true,"noto.ishikawa.jp":true,"shika.ishikawa.jp":true,"suzu.ishikawa.jp":true,"tsubata.ishikawa.jp":true,"tsurugi.ishikawa.jp":true,"uchinada.ishikawa.jp":true,"wajima.ishikawa.jp":true,"fudai.iwate.jp":true,"fujisawa.iwate.jp":true,"hanamaki.iwate.jp":true,"hiraizumi.iwate.jp":true,"hirono.iwate.jp":true,"ichinohe.iwate.jp":true,"ichinoseki.iwate.jp":true,"iwaizumi.iwate.jp":true,"iwate.iwate.jp":true,"joboji.iwate.jp":true,"kamaishi.iwate.jp":true,"kanegasaki.iwate.jp":true,"karumai.iwate.jp":true,"kawai.iwate.jp":true,"kitakami.iwate.jp":true,"kuji.iwate.jp":true,"kunohe.iwate.jp":true,"kuzumaki.iwate.jp":true,"miyako.iwate.jp":true,"mizusawa.iwate.jp":true,"morioka.iwate.jp":true,"ninohe.iwate.jp":true,"noda.iwate.jp":true,"ofunato.iwate.jp":true,"oshu.iwate.jp":true,"otsuchi.iwate.jp":true,"rikuzentakata.iwate.jp":true,"shiwa.iwate.jp":true,"shizukuishi.iwate.jp":true,"sumita.iwate.jp":true,"tanohata.iwate.jp":true,"tono.iwate.jp":true,"yahaba.iwate.jp":true,"yamada.iwate.jp":true,"ayagawa.kagawa.jp":true,"higashikagawa.kagawa.jp":true,"kanonji.kagawa.jp":true,"kotohira.kagawa.jp":true,"manno.kagawa.jp":true,"marugame.kagawa.jp":true,"mitoyo.kagawa.jp":true,"naoshima.kagawa.jp":true,"sanuki.kagawa.jp":true,"tadotsu.kagawa.jp":true,"takamatsu.kagawa.jp":true,"tonosho.kagawa.jp":true,"uchinomi.kagawa.jp":true,"utazu.kagawa.jp":true,"zentsuji.kagawa.jp":true,"akune.kagoshima.jp":true,"amami.kagoshima.jp":true,"hioki.kagoshima.jp":true,"isa.kagoshima.jp":true,"isen.kagoshima.jp":true,"izumi.kagoshima.jp":true,"kagoshima.kagoshima.jp":true,"kanoya.kagoshima.jp":true,"kawanabe.kagoshima.jp":true,"kinko.kagoshima.jp":true,"kouyama.kagoshima.jp":true,"makurazaki.kagoshima.jp":true,"matsumoto.kagoshima.jp":true,"minamitane.kagoshima.jp":true,"nakatane.kagoshima.jp":true,"nishinoomote.kagoshima.jp":true,"satsumasendai.kagoshima.jp":true,"soo.kagoshima.jp":true,"tarumizu.kagoshima.jp":true,"yusui.kagoshima.jp":true,"aikawa.kanagawa.jp":true,"atsugi.kanagawa.jp":true,"ayase.kanagawa.jp":true,"chigasaki.kanagawa.jp":true,"ebina.kanagawa.jp":true,"fujisawa.kanagawa.jp":true,"hadano.kanagawa.jp":true,"hakone.kanagawa.jp":true,"hiratsuka.kanagawa.jp":true,"isehara.kanagawa.jp":true,"kaisei.kanagawa.jp":true,"kamakura.kanagawa.jp":true,"kiyokawa.kanagawa.jp":true,"matsuda.kanagawa.jp":true,"minamiashigara.kanagawa.jp":true,"miura.kanagawa.jp":true,"nakai.kanagawa.jp":true,"ninomiya.kanagawa.jp":true,"odawara.kanagawa.jp":true,"oi.kanagawa.jp":true,"oiso.kanagawa.jp":true,"sagamihara.kanagawa.jp":true,"samukawa.kanagawa.jp":true,"tsukui.kanagawa.jp":true,"yamakita.kanagawa.jp":true,"yamato.kanagawa.jp":true,"yokosuka.kanagawa.jp":true,"yugawara.kanagawa.jp":true,"zama.kanagawa.jp":true,"zushi.kanagawa.jp":true,"aki.kochi.jp":true,"geisei.kochi.jp":true,"hidaka.kochi.jp":true,"higashitsuno.kochi.jp":true,"ino.kochi.jp":true,"kagami.kochi.jp":true,"kami.kochi.jp":true,"kitagawa.kochi.jp":true,"kochi.kochi.jp":true,"mihara.kochi.jp":true,"motoyama.kochi.jp":true,"muroto.kochi.jp":true,"nahari.kochi.jp":true,"nakamura.kochi.jp":true,"nankoku.kochi.jp":true,"nishitosa.kochi.jp":true,"niyodogawa.kochi.jp":true,"ochi.kochi.jp":true,"okawa.kochi.jp":true,"otoyo.kochi.jp":true,"otsuki.kochi.jp":true,"sakawa.kochi.jp":true,"sukumo.kochi.jp":true,"susaki.kochi.jp":true,"tosa.kochi.jp":true,"tosashimizu.kochi.jp":true,"toyo.kochi.jp":true,"tsuno.kochi.jp":true,"umaji.kochi.jp":true,"yasuda.kochi.jp":true,"yusuhara.kochi.jp":true,"amakusa.kumamoto.jp":true,"arao.kumamoto.jp":true,"aso.kumamoto.jp":true,"choyo.kumamoto.jp":true,"gyokuto.kumamoto.jp":true,"hitoyoshi.kumamoto.jp":true,"kamiamakusa.kumamoto.jp":true,"kashima.kumamoto.jp":true,"kikuchi.kumamoto.jp":true,"kosa.kumamoto.jp":true,"kumamoto.kumamoto.jp":true,"mashiki.kumamoto.jp":true,"mifune.kumamoto.jp":true,"minamata.kumamoto.jp":true,"minamioguni.kumamoto.jp":true,"nagasu.kumamoto.jp":true,"nishihara.kumamoto.jp":true,"oguni.kumamoto.jp":true,"ozu.kumamoto.jp":true,"sumoto.kumamoto.jp":true,"takamori.kumamoto.jp":true,"uki.kumamoto.jp":true,"uto.kumamoto.jp":true,"yamaga.kumamoto.jp":true,"yamato.kumamoto.jp":true,"yatsushiro.kumamoto.jp":true,"ayabe.kyoto.jp":true,"fukuchiyama.kyoto.jp":true,"higashiyama.kyoto.jp":true,"ide.kyoto.jp":true,"ine.kyoto.jp":true,"joyo.kyoto.jp":true,"kameoka.kyoto.jp":true,"kamo.kyoto.jp":true,"kita.kyoto.jp":true,"kizu.kyoto.jp":true,"kumiyama.kyoto.jp":true,"kyotamba.kyoto.jp":true,"kyotanabe.kyoto.jp":true,"kyotango.kyoto.jp":true,"maizuru.kyoto.jp":true,"minami.kyoto.jp":true,"minamiyamashiro.kyoto.jp":true,"miyazu.kyoto.jp":true,"muko.kyoto.jp":true,"nagaokakyo.kyoto.jp":true,"nakagyo.kyoto.jp":true,"nantan.kyoto.jp":true,"oyamazaki.kyoto.jp":true,"sakyo.kyoto.jp":true,"seika.kyoto.jp":true,"tanabe.kyoto.jp":true,"uji.kyoto.jp":true,"ujitawara.kyoto.jp":true,"wazuka.kyoto.jp":true,"yamashina.kyoto.jp":true,"yawata.kyoto.jp":true,"asahi.mie.jp":true,"inabe.mie.jp":true,"ise.mie.jp":true,"kameyama.mie.jp":true,"kawagoe.mie.jp":true,"kiho.mie.jp":true,"kisosaki.mie.jp":true,"kiwa.mie.jp":true,"komono.mie.jp":true,"kumano.mie.jp":true,"kuwana.mie.jp":true,"matsusaka.mie.jp":true,"meiwa.mie.jp":true,"mihama.mie.jp":true,"minamiise.mie.jp":true,"misugi.mie.jp":true,"miyama.mie.jp":true,"nabari.mie.jp":true,"shima.mie.jp":true,"suzuka.mie.jp":true,"tado.mie.jp":true,"taiki.mie.jp":true,"taki.mie.jp":true,"tamaki.mie.jp":true,"toba.mie.jp":true,"tsu.mie.jp":true,"udono.mie.jp":true,"ureshino.mie.jp":true,"watarai.mie.jp":true,"yokkaichi.mie.jp":true,"furukawa.miyagi.jp":true,"higashimatsushima.miyagi.jp":true,"ishinomaki.miyagi.jp":true,"iwanuma.miyagi.jp":true,"kakuda.miyagi.jp":true,"kami.miyagi.jp":true,"kawasaki.miyagi.jp":true,"kesennuma.miyagi.jp":true,"marumori.miyagi.jp":true,"matsushima.miyagi.jp":true,"minamisanriku.miyagi.jp":true,"misato.miyagi.jp":true,"murata.miyagi.jp":true,"natori.miyagi.jp":true,"ogawara.miyagi.jp":true,"ohira.miyagi.jp":true,"onagawa.miyagi.jp":true,"osaki.miyagi.jp":true,"rifu.miyagi.jp":true,"semine.miyagi.jp":true,"shibata.miyagi.jp":true,"shichikashuku.miyagi.jp":true,"shikama.miyagi.jp":true,"shiogama.miyagi.jp":true,"shiroishi.miyagi.jp":true,"tagajo.miyagi.jp":true,"taiwa.miyagi.jp":true,"tome.miyagi.jp":true,"tomiya.miyagi.jp":true,"wakuya.miyagi.jp":true,"watari.miyagi.jp":true,"yamamoto.miyagi.jp":true,"zao.miyagi.jp":true,"aya.miyazaki.jp":true,"ebino.miyazaki.jp":true,"gokase.miyazaki.jp":true,"hyuga.miyazaki.jp":true,"kadogawa.miyazaki.jp":true,"kawaminami.miyazaki.jp":true,"kijo.miyazaki.jp":true,"kitagawa.miyazaki.jp":true,"kitakata.miyazaki.jp":true,"kitaura.miyazaki.jp":true,"kobayashi.miyazaki.jp":true,"kunitomi.miyazaki.jp":true,"kushima.miyazaki.jp":true,"mimata.miyazaki.jp":true,"miyakonojo.miyazaki.jp":true,"miyazaki.miyazaki.jp":true,"morotsuka.miyazaki.jp":true,"nichinan.miyazaki.jp":true,"nishimera.miyazaki.jp":true,"nobeoka.miyazaki.jp":true,"saito.miyazaki.jp":true,"shiiba.miyazaki.jp":true,"shintomi.miyazaki.jp":true,"takaharu.miyazaki.jp":true,"takanabe.miyazaki.jp":true,"takazaki.miyazaki.jp":true,"tsuno.miyazaki.jp":true,"achi.nagano.jp":true,"agematsu.nagano.jp":true,"anan.nagano.jp":true,"aoki.nagano.jp":true,"asahi.nagano.jp":true,"azumino.nagano.jp":true,"chikuhoku.nagano.jp":true,"chikuma.nagano.jp":true,"chino.nagano.jp":true,"fujimi.nagano.jp":true,"hakuba.nagano.jp":true,"hara.nagano.jp":true,"hiraya.nagano.jp":true,"iida.nagano.jp":true,"iijima.nagano.jp":true,"iiyama.nagano.jp":true,"iizuna.nagano.jp":true,"ikeda.nagano.jp":true,"ikusaka.nagano.jp":true,"ina.nagano.jp":true,"karuizawa.nagano.jp":true,"kawakami.nagano.jp":true,"kiso.nagano.jp":true,"kisofukushima.nagano.jp":true,"kitaaiki.nagano.jp":true,"komagane.nagano.jp":true,"komoro.nagano.jp":true,"matsukawa.nagano.jp":true,"matsumoto.nagano.jp":true,"miasa.nagano.jp":true,"minamiaiki.nagano.jp":true,"minamimaki.nagano.jp":true,"minamiminowa.nagano.jp":true,"minowa.nagano.jp":true,"miyada.nagano.jp":true,"miyota.nagano.jp":true,"mochizuki.nagano.jp":true,"nagano.nagano.jp":true,"nagawa.nagano.jp":true,"nagiso.nagano.jp":true,"nakagawa.nagano.jp":true,"nakano.nagano.jp":true,"nozawaonsen.nagano.jp":true,"obuse.nagano.jp":true,"ogawa.nagano.jp":true,"okaya.nagano.jp":true,"omachi.nagano.jp":true,"omi.nagano.jp":true,"ookuwa.nagano.jp":true,"ooshika.nagano.jp":true,"otaki.nagano.jp":true,"otari.nagano.jp":true,"sakae.nagano.jp":true,"sakaki.nagano.jp":true,"saku.nagano.jp":true,"sakuho.nagano.jp":true,"shimosuwa.nagano.jp":true,"shinanomachi.nagano.jp":true,"shiojiri.nagano.jp":true,"suwa.nagano.jp":true,"suzaka.nagano.jp":true,"takagi.nagano.jp":true,"takamori.nagano.jp":true,"takayama.nagano.jp":true,"tateshina.nagano.jp":true,"tatsuno.nagano.jp":true,"togakushi.nagano.jp":true,"togura.nagano.jp":true,"tomi.nagano.jp":true,"ueda.nagano.jp":true,"wada.nagano.jp":true,"yamagata.nagano.jp":true,"yamanouchi.nagano.jp":true,"yasaka.nagano.jp":true,"yasuoka.nagano.jp":true,"chijiwa.nagasaki.jp":true,"futsu.nagasaki.jp":true,"goto.nagasaki.jp":true,"hasami.nagasaki.jp":true,"hirado.nagasaki.jp":true,"iki.nagasaki.jp":true,"isahaya.nagasaki.jp":true,"kawatana.nagasaki.jp":true,"kuchinotsu.nagasaki.jp":true,"matsuura.nagasaki.jp":true,"nagasaki.nagasaki.jp":true,"obama.nagasaki.jp":true,"omura.nagasaki.jp":true,"oseto.nagasaki.jp":true,"saikai.nagasaki.jp":true,"sasebo.nagasaki.jp":true,"seihi.nagasaki.jp":true,"shimabara.nagasaki.jp":true,"shinkamigoto.nagasaki.jp":true,"togitsu.nagasaki.jp":true,"tsushima.nagasaki.jp":true,"unzen.nagasaki.jp":true,"ando.nara.jp":true,"gose.nara.jp":true,"heguri.nara.jp":true,"higashiyoshino.nara.jp":true,"ikaruga.nara.jp":true,"ikoma.nara.jp":true,"kamikitayama.nara.jp":true,"kanmaki.nara.jp":true,"kashiba.nara.jp":true,"kashihara.nara.jp":true,"katsuragi.nara.jp":true,"kawai.nara.jp":true,"kawakami.nara.jp":true,"kawanishi.nara.jp":true,"koryo.nara.jp":true,"kurotaki.nara.jp":true,"mitsue.nara.jp":true,"miyake.nara.jp":true,"nara.nara.jp":true,"nosegawa.nara.jp":true,"oji.nara.jp":true,"ouda.nara.jp":true,"oyodo.nara.jp":true,"sakurai.nara.jp":true,"sango.nara.jp":true,"shimoichi.nara.jp":true,"shimokitayama.nara.jp":true,"shinjo.nara.jp":true,"soni.nara.jp":true,"takatori.nara.jp":true,"tawaramoto.nara.jp":true,"tenkawa.nara.jp":true,"tenri.nara.jp":true,"uda.nara.jp":true,"yamatokoriyama.nara.jp":true,"yamatotakada.nara.jp":true,"yamazoe.nara.jp":true,"yoshino.nara.jp":true,"aga.niigata.jp":true,"agano.niigata.jp":true,"gosen.niigata.jp":true,"itoigawa.niigata.jp":true,"izumozaki.niigata.jp":true,"joetsu.niigata.jp":true,"kamo.niigata.jp":true,"kariwa.niigata.jp":true,"kashiwazaki.niigata.jp":true,"minamiuonuma.niigata.jp":true,"mitsuke.niigata.jp":true,"muika.niigata.jp":true,"murakami.niigata.jp":true,"myoko.niigata.jp":true,"nagaoka.niigata.jp":true,"niigata.niigata.jp":true,"ojiya.niigata.jp":true,"omi.niigata.jp":true,"sado.niigata.jp":true,"sanjo.niigata.jp":true,"seiro.niigata.jp":true,"seirou.niigata.jp":true,"sekikawa.niigata.jp":true,"shibata.niigata.jp":true,"tagami.niigata.jp":true,"tainai.niigata.jp":true,"tochio.niigata.jp":true,"tokamachi.niigata.jp":true,"tsubame.niigata.jp":true,"tsunan.niigata.jp":true,"uonuma.niigata.jp":true,"yahiko.niigata.jp":true,"yoita.niigata.jp":true,"yuzawa.niigata.jp":true,"beppu.oita.jp":true,"bungoono.oita.jp":true,"bungotakada.oita.jp":true,"hasama.oita.jp":true,"hiji.oita.jp":true,"himeshima.oita.jp":true,"hita.oita.jp":true,"kamitsue.oita.jp":true,"kokonoe.oita.jp":true,"kuju.oita.jp":true,"kunisaki.oita.jp":true,"kusu.oita.jp":true,"oita.oita.jp":true,"saiki.oita.jp":true,"taketa.oita.jp":true,"tsukumi.oita.jp":true,"usa.oita.jp":true,"usuki.oita.jp":true,"yufu.oita.jp":true,"akaiwa.okayama.jp":true,"asakuchi.okayama.jp":true,"bizen.okayama.jp":true,"hayashima.okayama.jp":true,"ibara.okayama.jp":true,"kagamino.okayama.jp":true,"kasaoka.okayama.jp":true,"kibichuo.okayama.jp":true,"kumenan.okayama.jp":true,"kurashiki.okayama.jp":true,"maniwa.okayama.jp":true,"misaki.okayama.jp":true,"nagi.okayama.jp":true,"niimi.okayama.jp":true,"nishiawakura.okayama.jp":true,"okayama.okayama.jp":true,"satosho.okayama.jp":true,"setouchi.okayama.jp":true,"shinjo.okayama.jp":true,"shoo.okayama.jp":true,"soja.okayama.jp":true,"takahashi.okayama.jp":true,"tamano.okayama.jp":true,"tsuyama.okayama.jp":true,"wake.okayama.jp":true,"yakage.okayama.jp":true,"aguni.okinawa.jp":true,"ginowan.okinawa.jp":true,"ginoza.okinawa.jp":true,"gushikami.okinawa.jp":true,"haebaru.okinawa.jp":true,"higashi.okinawa.jp":true,"hirara.okinawa.jp":true,"iheya.okinawa.jp":true,"ishigaki.okinawa.jp":true,"ishikawa.okinawa.jp":true,"itoman.okinawa.jp":true,"izena.okinawa.jp":true,"kadena.okinawa.jp":true,"kin.okinawa.jp":true,"kitadaito.okinawa.jp":true,"kitanakagusuku.okinawa.jp":true,"kumejima.okinawa.jp":true,"kunigami.okinawa.jp":true,"minamidaito.okinawa.jp":true,"motobu.okinawa.jp":true,"nago.okinawa.jp":true,"naha.okinawa.jp":true,"nakagusuku.okinawa.jp":true,"nakijin.okinawa.jp":true,"nanjo.okinawa.jp":true,"nishihara.okinawa.jp":true,"ogimi.okinawa.jp":true,"okinawa.okinawa.jp":true,"onna.okinawa.jp":true,"shimoji.okinawa.jp":true,"taketomi.okinawa.jp":true,"tarama.okinawa.jp":true,"tokashiki.okinawa.jp":true,"tomigusuku.okinawa.jp":true,"tonaki.okinawa.jp":true,"urasoe.okinawa.jp":true,"uruma.okinawa.jp":true,"yaese.okinawa.jp":true,"yomitan.okinawa.jp":true,"yonabaru.okinawa.jp":true,"yonaguni.okinawa.jp":true,"zamami.okinawa.jp":true,"abeno.osaka.jp":true,"chihayaakasaka.osaka.jp":true,"chuo.osaka.jp":true,"daito.osaka.jp":true,"fujiidera.osaka.jp":true,"habikino.osaka.jp":true,"hannan.osaka.jp":true,"higashiosaka.osaka.jp":true,"higashisumiyoshi.osaka.jp":true,"higashiyodogawa.osaka.jp":true,"hirakata.osaka.jp":true,"ibaraki.osaka.jp":true,"ikeda.osaka.jp":true,"izumi.osaka.jp":true,"izumiotsu.osaka.jp":true,"izumisano.osaka.jp":true,"kadoma.osaka.jp":true,"kaizuka.osaka.jp":true,"kanan.osaka.jp":true,"kashiwara.osaka.jp":true,"katano.osaka.jp":true,"kawachinagano.osaka.jp":true,"kishiwada.osaka.jp":true,"kita.osaka.jp":true,"kumatori.osaka.jp":true,"matsubara.osaka.jp":true,"minato.osaka.jp":true,"minoh.osaka.jp":true,"misaki.osaka.jp":true,"moriguchi.osaka.jp":true,"neyagawa.osaka.jp":true,"nishi.osaka.jp":true,"nose.osaka.jp":true,"osakasayama.osaka.jp":true,"sakai.osaka.jp":true,"sayama.osaka.jp":true,"sennan.osaka.jp":true,"settsu.osaka.jp":true,"shijonawate.osaka.jp":true,"shimamoto.osaka.jp":true,"suita.osaka.jp":true,"tadaoka.osaka.jp":true,"taishi.osaka.jp":true,"tajiri.osaka.jp":true,"takaishi.osaka.jp":true,"takatsuki.osaka.jp":true,"tondabayashi.osaka.jp":true,"toyonaka.osaka.jp":true,"toyono.osaka.jp":true,"yao.osaka.jp":true,"ariake.saga.jp":true,"arita.saga.jp":true,"fukudomi.saga.jp":true,"genkai.saga.jp":true,"hamatama.saga.jp":true,"hizen.saga.jp":true,"imari.saga.jp":true,"kamimine.saga.jp":true,"kanzaki.saga.jp":true,"karatsu.saga.jp":true,"kashima.saga.jp":true,"kitagata.saga.jp":true,"kitahata.saga.jp":true,"kiyama.saga.jp":true,"kouhoku.saga.jp":true,"kyuragi.saga.jp":true,"nishiarita.saga.jp":true,"ogi.saga.jp":true,"omachi.saga.jp":true,"ouchi.saga.jp":true,"saga.saga.jp":true,"shiroishi.saga.jp":true,"taku.saga.jp":true,"tara.saga.jp":true,"tosu.saga.jp":true,"yoshinogari.saga.jp":true,"arakawa.saitama.jp":true,"asaka.saitama.jp":true,"chichibu.saitama.jp":true,"fujimi.saitama.jp":true,"fujimino.saitama.jp":true,"fukaya.saitama.jp":true,"hanno.saitama.jp":true,"hanyu.saitama.jp":true,"hasuda.saitama.jp":true,"hatogaya.saitama.jp":true,"hatoyama.saitama.jp":true,"hidaka.saitama.jp":true,"higashichichibu.saitama.jp":true,"higashimatsuyama.saitama.jp":true,"honjo.saitama.jp":true,"ina.saitama.jp":true,"iruma.saitama.jp":true,"iwatsuki.saitama.jp":true,"kamiizumi.saitama.jp":true,"kamikawa.saitama.jp":true,"kamisato.saitama.jp":true,"kasukabe.saitama.jp":true,"kawagoe.saitama.jp":true,"kawaguchi.saitama.jp":true,"kawajima.saitama.jp":true,"kazo.saitama.jp":true,"kitamoto.saitama.jp":true,"koshigaya.saitama.jp":true,"kounosu.saitama.jp":true,"kuki.saitama.jp":true,"kumagaya.saitama.jp":true,"matsubushi.saitama.jp":true,"minano.saitama.jp":true,"misato.saitama.jp":true,"miyashiro.saitama.jp":true,"miyoshi.saitama.jp":true,"moroyama.saitama.jp":true,"nagatoro.saitama.jp":true,"namegawa.saitama.jp":true,"niiza.saitama.jp":true,"ogano.saitama.jp":true,"ogawa.saitama.jp":true,"ogose.saitama.jp":true,"okegawa.saitama.jp":true,"omiya.saitama.jp":true,"otaki.saitama.jp":true,"ranzan.saitama.jp":true,"ryokami.saitama.jp":true,"saitama.saitama.jp":true,"sakado.saitama.jp":true,"satte.saitama.jp":true,"sayama.saitama.jp":true,"shiki.saitama.jp":true,"shiraoka.saitama.jp":true,"soka.saitama.jp":true,"sugito.saitama.jp":true,"toda.saitama.jp":true,"tokigawa.saitama.jp":true,"tokorozawa.saitama.jp":true,"tsurugashima.saitama.jp":true,"urawa.saitama.jp":true,"warabi.saitama.jp":true,"yashio.saitama.jp":true,"yokoze.saitama.jp":true,"yono.saitama.jp":true,"yorii.saitama.jp":true,"yoshida.saitama.jp":true,"yoshikawa.saitama.jp":true,"yoshimi.saitama.jp":true,"aisho.shiga.jp":true,"gamo.shiga.jp":true,"higashiomi.shiga.jp":true,"hikone.shiga.jp":true,"koka.shiga.jp":true,"konan.shiga.jp":true,"kosei.shiga.jp":true,"koto.shiga.jp":true,"kusatsu.shiga.jp":true,"maibara.shiga.jp":true,"moriyama.shiga.jp":true,"nagahama.shiga.jp":true,"nishiazai.shiga.jp":true,"notogawa.shiga.jp":true,"omihachiman.shiga.jp":true,"otsu.shiga.jp":true,"ritto.shiga.jp":true,"ryuoh.shiga.jp":true,"takashima.shiga.jp":true,"takatsuki.shiga.jp":true,"torahime.shiga.jp":true,"toyosato.shiga.jp":true,"yasu.shiga.jp":true,"akagi.shimane.jp":true,"ama.shimane.jp":true,"gotsu.shimane.jp":true,"hamada.shimane.jp":true,"higashiizumo.shimane.jp":true,"hikawa.shimane.jp":true,"hikimi.shimane.jp":true,"izumo.shimane.jp":true,"kakinoki.shimane.jp":true,"masuda.shimane.jp":true,"matsue.shimane.jp":true,"misato.shimane.jp":true,"nishinoshima.shimane.jp":true,"ohda.shimane.jp":true,"okinoshima.shimane.jp":true,"okuizumo.shimane.jp":true,"shimane.shimane.jp":true,"tamayu.shimane.jp":true,"tsuwano.shimane.jp":true,"unnan.shimane.jp":true,"yakumo.shimane.jp":true,"yasugi.shimane.jp":true,"yatsuka.shimane.jp":true,"arai.shizuoka.jp":true,"atami.shizuoka.jp":true,"fuji.shizuoka.jp":true,"fujieda.shizuoka.jp":true,"fujikawa.shizuoka.jp":true,"fujinomiya.shizuoka.jp":true,"fukuroi.shizuoka.jp":true,"gotemba.shizuoka.jp":true,"haibara.shizuoka.jp":true,"hamamatsu.shizuoka.jp":true,"higashiizu.shizuoka.jp":true,"ito.shizuoka.jp":true,"iwata.shizuoka.jp":true,"izu.shizuoka.jp":true,"izunokuni.shizuoka.jp":true,"kakegawa.shizuoka.jp":true,"kannami.shizuoka.jp":true,"kawanehon.shizuoka.jp":true,"kawazu.shizuoka.jp":true,"kikugawa.shizuoka.jp":true,"kosai.shizuoka.jp":true,"makinohara.shizuoka.jp":true,"matsuzaki.shizuoka.jp":true,"minamiizu.shizuoka.jp":true,"mishima.shizuoka.jp":true,"morimachi.shizuoka.jp":true,"nishiizu.shizuoka.jp":true,"numazu.shizuoka.jp":true,"omaezaki.shizuoka.jp":true,"shimada.shizuoka.jp":true,"shimizu.shizuoka.jp":true,"shimoda.shizuoka.jp":true,"shizuoka.shizuoka.jp":true,"susono.shizuoka.jp":true,"yaizu.shizuoka.jp":true,"yoshida.shizuoka.jp":true,"ashikaga.tochigi.jp":true,"bato.tochigi.jp":true,"haga.tochigi.jp":true,"ichikai.tochigi.jp":true,"iwafune.tochigi.jp":true,"kaminokawa.tochigi.jp":true,"kanuma.tochigi.jp":true,"karasuyama.tochigi.jp":true,"kuroiso.tochigi.jp":true,"mashiko.tochigi.jp":true,"mibu.tochigi.jp":true,"moka.tochigi.jp":true,"motegi.tochigi.jp":true,"nasu.tochigi.jp":true,"nasushiobara.tochigi.jp":true,"nikko.tochigi.jp":true,"nishikata.tochigi.jp":true,"nogi.tochigi.jp":true,"ohira.tochigi.jp":true,"ohtawara.tochigi.jp":true,"oyama.tochigi.jp":true,"sakura.tochigi.jp":true,"sano.tochigi.jp":true,"shimotsuke.tochigi.jp":true,"shioya.tochigi.jp":true,"takanezawa.tochigi.jp":true,"tochigi.tochigi.jp":true,"tsuga.tochigi.jp":true,"ujiie.tochigi.jp":true,"utsunomiya.tochigi.jp":true,"yaita.tochigi.jp":true,"aizumi.tokushima.jp":true,"anan.tokushima.jp":true,"ichiba.tokushima.jp":true,"itano.tokushima.jp":true,"kainan.tokushima.jp":true,"komatsushima.tokushima.jp":true,"matsushige.tokushima.jp":true,"mima.tokushima.jp":true,"minami.tokushima.jp":true,"miyoshi.tokushima.jp":true,"mugi.tokushima.jp":true,"nakagawa.tokushima.jp":true,"naruto.tokushima.jp":true,"sanagochi.tokushima.jp":true,"shishikui.tokushima.jp":true,"tokushima.tokushima.jp":true,"wajiki.tokushima.jp":true,"adachi.tokyo.jp":true,"akiruno.tokyo.jp":true,"akishima.tokyo.jp":true,"aogashima.tokyo.jp":true,"arakawa.tokyo.jp":true,"bunkyo.tokyo.jp":true,"chiyoda.tokyo.jp":true,"chofu.tokyo.jp":true,"chuo.tokyo.jp":true,"edogawa.tokyo.jp":true,"fuchu.tokyo.jp":true,"fussa.tokyo.jp":true,"hachijo.tokyo.jp":true,"hachioji.tokyo.jp":true,"hamura.tokyo.jp":true,"higashikurume.tokyo.jp":true,"higashimurayama.tokyo.jp":true,"higashiyamato.tokyo.jp":true,"hino.tokyo.jp":true,"hinode.tokyo.jp":true,"hinohara.tokyo.jp":true,"inagi.tokyo.jp":true,"itabashi.tokyo.jp":true,"katsushika.tokyo.jp":true,"kita.tokyo.jp":true,"kiyose.tokyo.jp":true,"kodaira.tokyo.jp":true,"koganei.tokyo.jp":true,"kokubunji.tokyo.jp":true,"komae.tokyo.jp":true,"koto.tokyo.jp":true,"kouzushima.tokyo.jp":true,"kunitachi.tokyo.jp":true,"machida.tokyo.jp":true,"meguro.tokyo.jp":true,"minato.tokyo.jp":true,"mitaka.tokyo.jp":true,"mizuho.tokyo.jp":true,"musashimurayama.tokyo.jp":true,"musashino.tokyo.jp":true,"nakano.tokyo.jp":true,"nerima.tokyo.jp":true,"ogasawara.tokyo.jp":true,"okutama.tokyo.jp":true,"ome.tokyo.jp":true,"oshima.tokyo.jp":true,"ota.tokyo.jp":true,"setagaya.tokyo.jp":true,"shibuya.tokyo.jp":true,"shinagawa.tokyo.jp":true,"shinjuku.tokyo.jp":true,"suginami.tokyo.jp":true,"sumida.tokyo.jp":true,"tachikawa.tokyo.jp":true,"taito.tokyo.jp":true,"tama.tokyo.jp":true,"toshima.tokyo.jp":true,"chizu.tottori.jp":true,"hino.tottori.jp":true,"kawahara.tottori.jp":true,"koge.tottori.jp":true,"kotoura.tottori.jp":true,"misasa.tottori.jp":true,"nanbu.tottori.jp":true,"nichinan.tottori.jp":true,"sakaiminato.tottori.jp":true,"tottori.tottori.jp":true,"wakasa.tottori.jp":true,"yazu.tottori.jp":true,"yonago.tottori.jp":true,"asahi.toyama.jp":true,"fuchu.toyama.jp":true,"fukumitsu.toyama.jp":true,"funahashi.toyama.jp":true,"himi.toyama.jp":true,"imizu.toyama.jp":true,"inami.toyama.jp":true,"johana.toyama.jp":true,"kamiichi.toyama.jp":true,"kurobe.toyama.jp":true,"nakaniikawa.toyama.jp":true,"namerikawa.toyama.jp":true,"nanto.toyama.jp":true,"nyuzen.toyama.jp":true,"oyabe.toyama.jp":true,"taira.toyama.jp":true,"takaoka.toyama.jp":true,"tateyama.toyama.jp":true,"toga.toyama.jp":true,"tonami.toyama.jp":true,"toyama.toyama.jp":true,"unazuki.toyama.jp":true,"uozu.toyama.jp":true,"yamada.toyama.jp":true,"arida.wakayama.jp":true,"aridagawa.wakayama.jp":true,"gobo.wakayama.jp":true,"hashimoto.wakayama.jp":true,"hidaka.wakayama.jp":true,"hirogawa.wakayama.jp":true,"inami.wakayama.jp":true,"iwade.wakayama.jp":true,"kainan.wakayama.jp":true,"kamitonda.wakayama.jp":true,"katsuragi.wakayama.jp":true,"kimino.wakayama.jp":true,"kinokawa.wakayama.jp":true,"kitayama.wakayama.jp":true,"koya.wakayama.jp":true,"koza.wakayama.jp":true,"kozagawa.wakayama.jp":true,"kudoyama.wakayama.jp":true,"kushimoto.wakayama.jp":true,"mihama.wakayama.jp":true,"misato.wakayama.jp":true,"nachikatsuura.wakayama.jp":true,"shingu.wakayama.jp":true,"shirahama.wakayama.jp":true,"taiji.wakayama.jp":true,"tanabe.wakayama.jp":true,"wakayama.wakayama.jp":true,"yuasa.wakayama.jp":true,"yura.wakayama.jp":true,"asahi.yamagata.jp":true,"funagata.yamagata.jp":true,"higashine.yamagata.jp":true,"iide.yamagata.jp":true,"kahoku.yamagata.jp":true,"kaminoyama.yamagata.jp":true,"kaneyama.yamagata.jp":true,"kawanishi.yamagata.jp":true,"mamurogawa.yamagata.jp":true,"mikawa.yamagata.jp":true,"murayama.yamagata.jp":true,"nagai.yamagata.jp":true,"nakayama.yamagata.jp":true,"nanyo.yamagata.jp":true,"nishikawa.yamagata.jp":true,"obanazawa.yamagata.jp":true,"oe.yamagata.jp":true,"oguni.yamagata.jp":true,"ohkura.yamagata.jp":true,"oishida.yamagata.jp":true,"sagae.yamagata.jp":true,"sakata.yamagata.jp":true,"sakegawa.yamagata.jp":true,"shinjo.yamagata.jp":true,"shirataka.yamagata.jp":true,"shonai.yamagata.jp":true,"takahata.yamagata.jp":true,"tendo.yamagata.jp":true,"tozawa.yamagata.jp":true,"tsuruoka.yamagata.jp":true,"yamagata.yamagata.jp":true,"yamanobe.yamagata.jp":true,"yonezawa.yamagata.jp":true,"yuza.yamagata.jp":true,"abu.yamaguchi.jp":true,"hagi.yamaguchi.jp":true,"hikari.yamaguchi.jp":true,"hofu.yamaguchi.jp":true,"iwakuni.yamaguchi.jp":true,"kudamatsu.yamaguchi.jp":true,"mitou.yamaguchi.jp":true,"nagato.yamaguchi.jp":true,"oshima.yamaguchi.jp":true,"shimonoseki.yamaguchi.jp":true,"shunan.yamaguchi.jp":true,"tabuse.yamaguchi.jp":true,"tokuyama.yamaguchi.jp":true,"toyota.yamaguchi.jp":true,"ube.yamaguchi.jp":true,"yuu.yamaguchi.jp":true,"chuo.yamanashi.jp":true,"doshi.yamanashi.jp":true,"fuefuki.yamanashi.jp":true,"fujikawa.yamanashi.jp":true,"fujikawaguchiko.yamanashi.jp":true,"fujiyoshida.yamanashi.jp":true,"hayakawa.yamanashi.jp":true,"hokuto.yamanashi.jp":true,"ichikawamisato.yamanashi.jp":true,"kai.yamanashi.jp":true,"kofu.yamanashi.jp":true,"koshu.yamanashi.jp":true,"kosuge.yamanashi.jp":true,"minami-alps.yamanashi.jp":true,"minobu.yamanashi.jp":true,"nakamichi.yamanashi.jp":true,"nanbu.yamanashi.jp":true,"narusawa.yamanashi.jp":true,"nirasaki.yamanashi.jp":true,"nishikatsura.yamanashi.jp":true,"oshino.yamanashi.jp":true,"otsuki.yamanashi.jp":true,"showa.yamanashi.jp":true,"tabayama.yamanashi.jp":true,"tsuru.yamanashi.jp":true,"uenohara.yamanashi.jp":true,"yamanakako.yamanashi.jp":true,"yamanashi.yamanashi.jp":true,"*.ke":true,"kg":true,"org.kg":true,"net.kg":true,"com.kg":true,"edu.kg":true,"gov.kg":true,"mil.kg":true,"*.kh":true,"ki":true,"edu.ki":true,"biz.ki":true,"net.ki":true,"org.ki":true,"gov.ki":true,"info.ki":true,"com.ki":true,"km":true,"org.km":true,"nom.km":true,"gov.km":true,"prd.km":true,"tm.km":true,"edu.km":true,"mil.km":true,"ass.km":true,"com.km":true,"coop.km":true,"asso.km":true,"presse.km":true,"medecin.km":true,"notaires.km":true,"pharmaciens.km":true,"veterinaire.km":true,"gouv.km":true,"kn":true,"net.kn":true,"org.kn":true,"edu.kn":true,"gov.kn":true,"kp":true,"com.kp":true,"edu.kp":true,"gov.kp":true,"org.kp":true,"rep.kp":true,"tra.kp":true,"kr":true,"ac.kr":true,"co.kr":true,"es.kr":true,"go.kr":true,"hs.kr":true,"kg.kr":true,"mil.kr":true,"ms.kr":true,"ne.kr":true,"or.kr":true,"pe.kr":true,"re.kr":true,"sc.kr":true,"busan.kr":true,"chungbuk.kr":true,"chungnam.kr":true,"daegu.kr":true,"daejeon.kr":true,"gangwon.kr":true,"gwangju.kr":true,"gyeongbuk.kr":true,"gyeonggi.kr":true,"gyeongnam.kr":true,"incheon.kr":true,"jeju.kr":true,"jeonbuk.kr":true,"jeonnam.kr":true,"seoul.kr":true,"ulsan.kr":true,"*.kw":true,"ky":true,"edu.ky":true,"gov.ky":true,"com.ky":true,"org.ky":true,"net.ky":true,"kz":true,"org.kz":true,"edu.kz":true,"net.kz":true,"gov.kz":true,"mil.kz":true,"com.kz":true,"la":true,"int.la":true,"net.la":true,"info.la":true,"edu.la":true,"gov.la":true,"per.la":true,"com.la":true,"org.la":true,"lb":true,"com.lb":true,"edu.lb":true,"gov.lb":true,"net.lb":true,"org.lb":true,"lc":true,"com.lc":true,"net.lc":true,"co.lc":true,"org.lc":true,"edu.lc":true,"gov.lc":true,"li":true,"lk":true,"gov.lk":true,"sch.lk":true,"net.lk":true,"int.lk":true,"com.lk":true,"org.lk":true,"edu.lk":true,"ngo.lk":true,"soc.lk":true,"web.lk":true,"ltd.lk":true,"assn.lk":true,"grp.lk":true,"hotel.lk":true,"lr":true,"com.lr":true,"edu.lr":true,"gov.lr":true,"org.lr":true,"net.lr":true,"ls":true,"co.ls":true,"org.ls":true,"lt":true,"gov.lt":true,"lu":true,"lv":true,"com.lv":true,"edu.lv":true,"gov.lv":true,"org.lv":true,"mil.lv":true,"id.lv":true,"net.lv":true,"asn.lv":true,"conf.lv":true,"ly":true,"com.ly":true,"net.ly":true,"gov.ly":true,"plc.ly":true,"edu.ly":true,"sch.ly":true,"med.ly":true,"org.ly":true,"id.ly":true,"ma":true,"co.ma":true,"net.ma":true,"gov.ma":true,"org.ma":true,"ac.ma":true,"press.ma":true,"mc":true,"tm.mc":true,"asso.mc":true,"md":true,"me":true,"co.me":true,"net.me":true,"org.me":true,"edu.me":true,"ac.me":true,"gov.me":true,"its.me":true,"priv.me":true,"mg":true,"org.mg":true,"nom.mg":true,"gov.mg":true,"prd.mg":true,"tm.mg":true,"edu.mg":true,"mil.mg":true,"com.mg":true,"mh":true,"mil":true,"mk":true,"com.mk":true,"org.mk":true,"net.mk":true,"edu.mk":true,"gov.mk":true,"inf.mk":true,"name.mk":true,"ml":true,"com.ml":true,"edu.ml":true,"gouv.ml":true,"gov.ml":true,"net.ml":true,"org.ml":true,"presse.ml":true,"*.mm":true,"mn":true,"gov.mn":true,"edu.mn":true,"org.mn":true,"mo":true,"com.mo":true,"net.mo":true,"org.mo":true,"edu.mo":true,"gov.mo":true,"mobi":true,"mp":true,"mq":true,"mr":true,"gov.mr":true,"ms":true,"com.ms":true,"edu.ms":true,"gov.ms":true,"net.ms":true,"org.ms":true,"mt":true,"com.mt":true,"edu.mt":true,"net.mt":true,"org.mt":true,"mu":true,"com.mu":true,"net.mu":true,"org.mu":true,"gov.mu":true,"ac.mu":true,"co.mu":true,"or.mu":true,"museum":true,"academy.museum":true,"agriculture.museum":true,"air.museum":true,"airguard.museum":true,"alabama.museum":true,"alaska.museum":true,"amber.museum":true,"ambulance.museum":true,"american.museum":true,"americana.museum":true,"americanantiques.museum":true,"americanart.museum":true,"amsterdam.museum":true,"and.museum":true,"annefrank.museum":true,"anthro.museum":true,"anthropology.museum":true,"antiques.museum":true,"aquarium.museum":true,"arboretum.museum":true,"archaeological.museum":true,"archaeology.museum":true,"architecture.museum":true,"art.museum":true,"artanddesign.museum":true,"artcenter.museum":true,"artdeco.museum":true,"arteducation.museum":true,"artgallery.museum":true,"arts.museum":true,"artsandcrafts.museum":true,"asmatart.museum":true,"assassination.museum":true,"assisi.museum":true,"association.museum":true,"astronomy.museum":true,"atlanta.museum":true,"austin.museum":true,"australia.museum":true,"automotive.museum":true,"aviation.museum":true,"axis.museum":true,"badajoz.museum":true,"baghdad.museum":true,"bahn.museum":true,"bale.museum":true,"baltimore.museum":true,"barcelona.museum":true,"baseball.museum":true,"basel.museum":true,"baths.museum":true,"bauern.museum":true,"beauxarts.museum":true,"beeldengeluid.museum":true,"bellevue.museum":true,"bergbau.museum":true,"berkeley.museum":true,"berlin.museum":true,"bern.museum":true,"bible.museum":true,"bilbao.museum":true,"bill.museum":true,"birdart.museum":true,"birthplace.museum":true,"bonn.museum":true,"boston.museum":true,"botanical.museum":true,"botanicalgarden.museum":true,"botanicgarden.museum":true,"botany.museum":true,"brandywinevalley.museum":true,"brasil.museum":true,"bristol.museum":true,"british.museum":true,"britishcolumbia.museum":true,"broadcast.museum":true,"brunel.museum":true,"brussel.museum":true,"brussels.museum":true,"bruxelles.museum":true,"building.museum":true,"burghof.museum":true,"bus.museum":true,"bushey.museum":true,"cadaques.museum":true,"california.museum":true,"cambridge.museum":true,"can.museum":true,"canada.museum":true,"capebreton.museum":true,"carrier.museum":true,"cartoonart.museum":true,"casadelamoneda.museum":true,"castle.museum":true,"castres.museum":true,"celtic.museum":true,"center.museum":true,"chattanooga.museum":true,"cheltenham.museum":true,"chesapeakebay.museum":true,"chicago.museum":true,"children.museum":true,"childrens.museum":true,"childrensgarden.museum":true,"chiropractic.museum":true,"chocolate.museum":true,"christiansburg.museum":true,"cincinnati.museum":true,"cinema.museum":true,"circus.museum":true,"civilisation.museum":true,"civilization.museum":true,"civilwar.museum":true,"clinton.museum":true,"clock.museum":true,"coal.museum":true,"coastaldefence.museum":true,"cody.museum":true,"coldwar.museum":true,"collection.museum":true,"colonialwilliamsburg.museum":true,"coloradoplateau.museum":true,"columbia.museum":true,"columbus.museum":true,"communication.museum":true,"communications.museum":true,"community.museum":true,"computer.museum":true,"computerhistory.museum":true,"xn--comunicaes-v6a2o.museum":true,"contemporary.museum":true,"contemporaryart.museum":true,"convent.museum":true,"copenhagen.museum":true,"corporation.museum":true,"xn--correios-e-telecomunicaes-ghc29a.museum":true,"corvette.museum":true,"costume.museum":true,"countryestate.museum":true,"county.museum":true,"crafts.museum":true,"cranbrook.museum":true,"creation.museum":true,"cultural.museum":true,"culturalcenter.museum":true,"culture.museum":true,"cyber.museum":true,"cymru.museum":true,"dali.museum":true,"dallas.museum":true,"database.museum":true,"ddr.museum":true,"decorativearts.museum":true,"delaware.museum":true,"delmenhorst.museum":true,"denmark.museum":true,"depot.museum":true,"design.museum":true,"detroit.museum":true,"dinosaur.museum":true,"discovery.museum":true,"dolls.museum":true,"donostia.museum":true,"durham.museum":true,"eastafrica.museum":true,"eastcoast.museum":true,"education.museum":true,"educational.museum":true,"egyptian.museum":true,"eisenbahn.museum":true,"elburg.museum":true,"elvendrell.museum":true,"embroidery.museum":true,"encyclopedic.museum":true,"england.museum":true,"entomology.museum":true,"environment.museum":true,"environmentalconservation.museum":true,"epilepsy.museum":true,"essex.museum":true,"estate.museum":true,"ethnology.museum":true,"exeter.museum":true,"exhibition.museum":true,"family.museum":true,"farm.museum":true,"farmequipment.museum":true,"farmers.museum":true,"farmstead.museum":true,"field.museum":true,"figueres.museum":true,"filatelia.museum":true,"film.museum":true,"fineart.museum":true,"finearts.museum":true,"finland.museum":true,"flanders.museum":true,"florida.museum":true,"force.museum":true,"fortmissoula.museum":true,"fortworth.museum":true,"foundation.museum":true,"francaise.museum":true,"frankfurt.museum":true,"franziskaner.museum":true,"freemasonry.museum":true,"freiburg.museum":true,"fribourg.museum":true,"frog.museum":true,"fundacio.museum":true,"furniture.museum":true,"gallery.museum":true,"garden.museum":true,"gateway.museum":true,"geelvinck.museum":true,"gemological.museum":true,"geology.museum":true,"georgia.museum":true,"giessen.museum":true,"glas.museum":true,"glass.museum":true,"gorge.museum":true,"grandrapids.museum":true,"graz.museum":true,"guernsey.museum":true,"halloffame.museum":true,"hamburg.museum":true,"handson.museum":true,"harvestcelebration.museum":true,"hawaii.museum":true,"health.museum":true,"heimatunduhren.museum":true,"hellas.museum":true,"helsinki.museum":true,"hembygdsforbund.museum":true,"heritage.museum":true,"histoire.museum":true,"historical.museum":true,"historicalsociety.museum":true,"historichouses.museum":true,"historisch.museum":true,"historisches.museum":true,"history.museum":true,"historyofscience.museum":true,"horology.museum":true,"house.museum":true,"humanities.museum":true,"illustration.museum":true,"imageandsound.museum":true,"indian.museum":true,"indiana.museum":true,"indianapolis.museum":true,"indianmarket.museum":true,"intelligence.museum":true,"interactive.museum":true,"iraq.museum":true,"iron.museum":true,"isleofman.museum":true,"jamison.museum":true,"jefferson.museum":true,"jerusalem.museum":true,"jewelry.museum":true,"jewish.museum":true,"jewishart.museum":true,"jfk.museum":true,"journalism.museum":true,"judaica.museum":true,"judygarland.museum":true,"juedisches.museum":true,"juif.museum":true,"karate.museum":true,"karikatur.museum":true,"kids.museum":true,"koebenhavn.museum":true,"koeln.museum":true,"kunst.museum":true,"kunstsammlung.museum":true,"kunstunddesign.museum":true,"labor.museum":true,"labour.museum":true,"lajolla.museum":true,"lancashire.museum":true,"landes.museum":true,"lans.museum":true,"xn--lns-qla.museum":true,"larsson.museum":true,"lewismiller.museum":true,"lincoln.museum":true,"linz.museum":true,"living.museum":true,"livinghistory.museum":true,"localhistory.museum":true,"london.museum":true,"losangeles.museum":true,"louvre.museum":true,"loyalist.museum":true,"lucerne.museum":true,"luxembourg.museum":true,"luzern.museum":true,"mad.museum":true,"madrid.museum":true,"mallorca.museum":true,"manchester.museum":true,"mansion.museum":true,"mansions.museum":true,"manx.museum":true,"marburg.museum":true,"maritime.museum":true,"maritimo.museum":true,"maryland.museum":true,"marylhurst.museum":true,"media.museum":true,"medical.museum":true,"medizinhistorisches.museum":true,"meeres.museum":true,"memorial.museum":true,"mesaverde.museum":true,"michigan.museum":true,"midatlantic.museum":true,"military.museum":true,"mill.museum":true,"miners.museum":true,"mining.museum":true,"minnesota.museum":true,"missile.museum":true,"missoula.museum":true,"modern.museum":true,"moma.museum":true,"money.museum":true,"monmouth.museum":true,"monticello.museum":true,"montreal.museum":true,"moscow.museum":true,"motorcycle.museum":true,"muenchen.museum":true,"muenster.museum":true,"mulhouse.museum":true,"muncie.museum":true,"museet.museum":true,"museumcenter.museum":true,"museumvereniging.museum":true,"music.museum":true,"national.museum":true,"nationalfirearms.museum":true,"nationalheritage.museum":true,"nativeamerican.museum":true,"naturalhistory.museum":true,"naturalhistorymuseum.museum":true,"naturalsciences.museum":true,"nature.museum":true,"naturhistorisches.museum":true,"natuurwetenschappen.museum":true,"naumburg.museum":true,"naval.museum":true,"nebraska.museum":true,"neues.museum":true,"newhampshire.museum":true,"newjersey.museum":true,"newmexico.museum":true,"newport.museum":true,"newspaper.museum":true,"newyork.museum":true,"niepce.museum":true,"norfolk.museum":true,"north.museum":true,"nrw.museum":true,"nuernberg.museum":true,"nuremberg.museum":true,"nyc.museum":true,"nyny.museum":true,"oceanographic.museum":true,"oceanographique.museum":true,"omaha.museum":true,"online.museum":true,"ontario.museum":true,"openair.museum":true,"oregon.museum":true,"oregontrail.museum":true,"otago.museum":true,"oxford.museum":true,"pacific.museum":true,"paderborn.museum":true,"palace.museum":true,"paleo.museum":true,"palmsprings.museum":true,"panama.museum":true,"paris.museum":true,"pasadena.museum":true,"pharmacy.museum":true,"philadelphia.museum":true,"philadelphiaarea.museum":true,"philately.museum":true,"phoenix.museum":true,"photography.museum":true,"pilots.museum":true,"pittsburgh.museum":true,"planetarium.museum":true,"plantation.museum":true,"plants.museum":true,"plaza.museum":true,"portal.museum":true,"portland.museum":true,"portlligat.museum":true,"posts-and-telecommunications.museum":true,"preservation.museum":true,"presidio.museum":true,"press.museum":true,"project.museum":true,"public.museum":true,"pubol.museum":true,"quebec.museum":true,"railroad.museum":true,"railway.museum":true,"research.museum":true,"resistance.museum":true,"riodejaneiro.museum":true,"rochester.museum":true,"rockart.museum":true,"roma.museum":true,"russia.museum":true,"saintlouis.museum":true,"salem.museum":true,"salvadordali.museum":true,"salzburg.museum":true,"sandiego.museum":true,"sanfrancisco.museum":true,"santabarbara.museum":true,"santacruz.museum":true,"santafe.museum":true,"saskatchewan.museum":true,"satx.museum":true,"savannahga.museum":true,"schlesisches.museum":true,"schoenbrunn.museum":true,"schokoladen.museum":true,"school.museum":true,"schweiz.museum":true,"science.museum":true,"scienceandhistory.museum":true,"scienceandindustry.museum":true,"sciencecenter.museum":true,"sciencecenters.museum":true,"science-fiction.museum":true,"sciencehistory.museum":true,"sciences.museum":true,"sciencesnaturelles.museum":true,"scotland.museum":true,"seaport.museum":true,"settlement.museum":true,"settlers.museum":true,"shell.museum":true,"sherbrooke.museum":true,"sibenik.museum":true,"silk.museum":true,"ski.museum":true,"skole.museum":true,"society.museum":true,"sologne.museum":true,"soundandvision.museum":true,"southcarolina.museum":true,"southwest.museum":true,"space.museum":true,"spy.museum":true,"square.museum":true,"stadt.museum":true,"stalbans.museum":true,"starnberg.museum":true,"state.museum":true,"stateofdelaware.museum":true,"station.museum":true,"steam.museum":true,"steiermark.museum":true,"stjohn.museum":true,"stockholm.museum":true,"stpetersburg.museum":true,"stuttgart.museum":true,"suisse.museum":true,"surgeonshall.museum":true,"surrey.museum":true,"svizzera.museum":true,"sweden.museum":true,"sydney.museum":true,"tank.museum":true,"tcm.museum":true,"technology.museum":true,"telekommunikation.museum":true,"television.museum":true,"texas.museum":true,"textile.museum":true,"theater.museum":true,"time.museum":true,"timekeeping.museum":true,"topology.museum":true,"torino.museum":true,"touch.museum":true,"town.museum":true,"transport.museum":true,"tree.museum":true,"trolley.museum":true,"trust.museum":true,"trustee.museum":true,"uhren.museum":true,"ulm.museum":true,"undersea.museum":true,"university.museum":true,"usa.museum":true,"usantiques.museum":true,"usarts.museum":true,"uscountryestate.museum":true,"usculture.museum":true,"usdecorativearts.museum":true,"usgarden.museum":true,"ushistory.museum":true,"ushuaia.museum":true,"uslivinghistory.museum":true,"utah.museum":true,"uvic.museum":true,"valley.museum":true,"vantaa.museum":true,"versailles.museum":true,"viking.museum":true,"village.museum":true,"virginia.museum":true,"virtual.museum":true,"virtuel.museum":true,"vlaanderen.museum":true,"volkenkunde.museum":true,"wales.museum":true,"wallonie.museum":true,"war.museum":true,"washingtondc.museum":true,"watchandclock.museum":true,"watch-and-clock.museum":true,"western.museum":true,"westfalen.museum":true,"whaling.museum":true,"wildlife.museum":true,"williamsburg.museum":true,"windmill.museum":true,"workshop.museum":true,"york.museum":true,"yorkshire.museum":true,"yosemite.museum":true,"youth.museum":true,"zoological.museum":true,"zoology.museum":true,"xn--9dbhblg6di.museum":true,"xn--h1aegh.museum":true,"mv":true,"aero.mv":true,"biz.mv":true,"com.mv":true,"coop.mv":true,"edu.mv":true,"gov.mv":true,"info.mv":true,"int.mv":true,"mil.mv":true,"museum.mv":true,"name.mv":true,"net.mv":true,"org.mv":true,"pro.mv":true,"mw":true,"ac.mw":true,"biz.mw":true,"co.mw":true,"com.mw":true,"coop.mw":true,"edu.mw":true,"gov.mw":true,"int.mw":true,"museum.mw":true,"net.mw":true,"org.mw":true,"mx":true,"com.mx":true,"org.mx":true,"gob.mx":true,"edu.mx":true,"net.mx":true,"my":true,"com.my":true,"net.my":true,"org.my":true,"gov.my":true,"edu.my":true,"mil.my":true,"name.my":true,"*.mz":true,"teledata.mz":false,"na":true,"info.na":true,"pro.na":true,"name.na":true,"school.na":true,"or.na":true,"dr.na":true,"us.na":true,"mx.na":true,"ca.na":true,"in.na":true,"cc.na":true,"tv.na":true,"ws.na":true,"mobi.na":true,"co.na":true,"com.na":true,"org.na":true,"name":true,"nc":true,"asso.nc":true,"ne":true,"net":true,"nf":true,"com.nf":true,"net.nf":true,"per.nf":true,"rec.nf":true,"web.nf":true,"arts.nf":true,"firm.nf":true,"info.nf":true,"other.nf":true,"store.nf":true,"ng":true,"com.ng":true,"edu.ng":true,"name.ng":true,"net.ng":true,"org.ng":true,"sch.ng":true,"gov.ng":true,"mil.ng":true,"mobi.ng":true,"*.ni":true,"nl":true,"bv.nl":true,"no":true,"fhs.no":true,"vgs.no":true,"fylkesbibl.no":true,"folkebibl.no":true,"museum.no":true,"idrett.no":true,"priv.no":true,"mil.no":true,"stat.no":true,"dep.no":true,"kommune.no":true,"herad.no":true,"aa.no":true,"ah.no":true,"bu.no":true,"fm.no":true,"hl.no":true,"hm.no":true,"jan-mayen.no":true,"mr.no":true,"nl.no":true,"nt.no":true,"of.no":true,"ol.no":true,"oslo.no":true,"rl.no":true,"sf.no":true,"st.no":true,"svalbard.no":true,"tm.no":true,"tr.no":true,"va.no":true,"vf.no":true,"gs.aa.no":true,"gs.ah.no":true,"gs.bu.no":true,"gs.fm.no":true,"gs.hl.no":true,"gs.hm.no":true,"gs.jan-mayen.no":true,"gs.mr.no":true,"gs.nl.no":true,"gs.nt.no":true,"gs.of.no":true,"gs.ol.no":true,"gs.oslo.no":true,"gs.rl.no":true,"gs.sf.no":true,"gs.st.no":true,"gs.svalbard.no":true,"gs.tm.no":true,"gs.tr.no":true,"gs.va.no":true,"gs.vf.no":true,"akrehamn.no":true,"xn--krehamn-dxa.no":true,"algard.no":true,"xn--lgrd-poac.no":true,"arna.no":true,"brumunddal.no":true,"bryne.no":true,"bronnoysund.no":true,"xn--brnnysund-m8ac.no":true,"drobak.no":true,"xn--drbak-wua.no":true,"egersund.no":true,"fetsund.no":true,"floro.no":true,"xn--flor-jra.no":true,"fredrikstad.no":true,"hokksund.no":true,"honefoss.no":true,"xn--hnefoss-q1a.no":true,"jessheim.no":true,"jorpeland.no":true,"xn--jrpeland-54a.no":true,"kirkenes.no":true,"kopervik.no":true,"krokstadelva.no":true,"langevag.no":true,"xn--langevg-jxa.no":true,"leirvik.no":true,"mjondalen.no":true,"xn--mjndalen-64a.no":true,"mo-i-rana.no":true,"mosjoen.no":true,"xn--mosjen-eya.no":true,"nesoddtangen.no":true,"orkanger.no":true,"osoyro.no":true,"xn--osyro-wua.no":true,"raholt.no":true,"xn--rholt-mra.no":true,"sandnessjoen.no":true,"xn--sandnessjen-ogb.no":true,"skedsmokorset.no":true,"slattum.no":true,"spjelkavik.no":true,"stathelle.no":true,"stavern.no":true,"stjordalshalsen.no":true,"xn--stjrdalshalsen-sqb.no":true,"tananger.no":true,"tranby.no":true,"vossevangen.no":true,"afjord.no":true,"xn--fjord-lra.no":true,"agdenes.no":true,"al.no":true,"xn--l-1fa.no":true,"alesund.no":true,"xn--lesund-hua.no":true,"alstahaug.no":true,"alta.no":true,"xn--lt-liac.no":true,"alaheadju.no":true,"xn--laheadju-7ya.no":true,"alvdal.no":true,"amli.no":true,"xn--mli-tla.no":true,"amot.no":true,"xn--mot-tla.no":true,"andebu.no":true,"andoy.no":true,"xn--andy-ira.no":true,"andasuolo.no":true,"ardal.no":true,"xn--rdal-poa.no":true,"aremark.no":true,"arendal.no":true,"xn--s-1fa.no":true,"aseral.no":true,"xn--seral-lra.no":true,"asker.no":true,"askim.no":true,"askvoll.no":true,"askoy.no":true,"xn--asky-ira.no":true,"asnes.no":true,"xn--snes-poa.no":true,"audnedaln.no":true,"aukra.no":true,"aure.no":true,"aurland.no":true,"aurskog-holand.no":true,"xn--aurskog-hland-jnb.no":true,"austevoll.no":true,"austrheim.no":true,"averoy.no":true,"xn--avery-yua.no":true,"balestrand.no":true,"ballangen.no":true,"balat.no":true,"xn--blt-elab.no":true,"balsfjord.no":true,"bahccavuotna.no":true,"xn--bhccavuotna-k7a.no":true,"bamble.no":true,"bardu.no":true,"beardu.no":true,"beiarn.no":true,"bajddar.no":true,"xn--bjddar-pta.no":true,"baidar.no":true,"xn--bidr-5nac.no":true,"berg.no":true,"bergen.no":true,"berlevag.no":true,"xn--berlevg-jxa.no":true,"bearalvahki.no":true,"xn--bearalvhki-y4a.no":true,"bindal.no":true,"birkenes.no":true,"bjarkoy.no":true,"xn--bjarky-fya.no":true,"bjerkreim.no":true,"bjugn.no":true,"bodo.no":true,"xn--bod-2na.no":true,"badaddja.no":true,"xn--bdddj-mrabd.no":true,"budejju.no":true,"bokn.no":true,"bremanger.no":true,"bronnoy.no":true,"xn--brnny-wuac.no":true,"bygland.no":true,"bykle.no":true,"barum.no":true,"xn--brum-voa.no":true,"bo.telemark.no":true,"xn--b-5ga.telemark.no":true,"bo.nordland.no":true,"xn--b-5ga.nordland.no":true,"bievat.no":true,"xn--bievt-0qa.no":true,"bomlo.no":true,"xn--bmlo-gra.no":true,"batsfjord.no":true,"xn--btsfjord-9za.no":true,"bahcavuotna.no":true,"xn--bhcavuotna-s4a.no":true,"dovre.no":true,"drammen.no":true,"drangedal.no":true,"dyroy.no":true,"xn--dyry-ira.no":true,"donna.no":true,"xn--dnna-gra.no":true,"eid.no":true,"eidfjord.no":true,"eidsberg.no":true,"eidskog.no":true,"eidsvoll.no":true,"eigersund.no":true,"elverum.no":true,"enebakk.no":true,"engerdal.no":true,"etne.no":true,"etnedal.no":true,"evenes.no":true,"evenassi.no":true,"xn--eveni-0qa01ga.no":true,"evje-og-hornnes.no":true,"farsund.no":true,"fauske.no":true,"fuossko.no":true,"fuoisku.no":true,"fedje.no":true,"fet.no":true,"finnoy.no":true,"xn--finny-yua.no":true,"fitjar.no":true,"fjaler.no":true,"fjell.no":true,"flakstad.no":true,"flatanger.no":true,"flekkefjord.no":true,"flesberg.no":true,"flora.no":true,"fla.no":true,"xn--fl-zia.no":true,"folldal.no":true,"forsand.no":true,"fosnes.no":true,"frei.no":true,"frogn.no":true,"froland.no":true,"frosta.no":true,"frana.no":true,"xn--frna-woa.no":true,"froya.no":true,"xn--frya-hra.no":true,"fusa.no":true,"fyresdal.no":true,"forde.no":true,"xn--frde-gra.no":true,"gamvik.no":true,"gangaviika.no":true,"xn--ggaviika-8ya47h.no":true,"gaular.no":true,"gausdal.no":true,"gildeskal.no":true,"xn--gildeskl-g0a.no":true,"giske.no":true,"gjemnes.no":true,"gjerdrum.no":true,"gjerstad.no":true,"gjesdal.no":true,"gjovik.no":true,"xn--gjvik-wua.no":true,"gloppen.no":true,"gol.no":true,"gran.no":true,"grane.no":true,"granvin.no":true,"gratangen.no":true,"grimstad.no":true,"grong.no":true,"kraanghke.no":true,"xn--kranghke-b0a.no":true,"grue.no":true,"gulen.no":true,"hadsel.no":true,"halden.no":true,"halsa.no":true,"hamar.no":true,"hamaroy.no":true,"habmer.no":true,"xn--hbmer-xqa.no":true,"hapmir.no":true,"xn--hpmir-xqa.no":true,"hammerfest.no":true,"hammarfeasta.no":true,"xn--hmmrfeasta-s4ac.no":true,"haram.no":true,"hareid.no":true,"harstad.no":true,"hasvik.no":true,"aknoluokta.no":true,"xn--koluokta-7ya57h.no":true,"hattfjelldal.no":true,"aarborte.no":true,"haugesund.no":true,"hemne.no":true,"hemnes.no":true,"hemsedal.no":true,"heroy.more-og-romsdal.no":true,"xn--hery-ira.xn--mre-og-romsdal-qqb.no":true,"heroy.nordland.no":true,"xn--hery-ira.nordland.no":true,"hitra.no":true,"hjartdal.no":true,"hjelmeland.no":true,"hobol.no":true,"xn--hobl-ira.no":true,"hof.no":true,"hol.no":true,"hole.no":true,"holmestrand.no":true,"holtalen.no":true,"xn--holtlen-hxa.no":true,"hornindal.no":true,"horten.no":true,"hurdal.no":true,"hurum.no":true,"hvaler.no":true,"hyllestad.no":true,"hagebostad.no":true,"xn--hgebostad-g3a.no":true,"hoyanger.no":true,"xn--hyanger-q1a.no":true,"hoylandet.no":true,"xn--hylandet-54a.no":true,"ha.no":true,"xn--h-2fa.no":true,"ibestad.no":true,"inderoy.no":true,"xn--indery-fya.no":true,"iveland.no":true,"jevnaker.no":true,"jondal.no":true,"jolster.no":true,"xn--jlster-bya.no":true,"karasjok.no":true,"karasjohka.no":true,"xn--krjohka-hwab49j.no":true,"karlsoy.no":true,"galsa.no":true,"xn--gls-elac.no":true,"karmoy.no":true,"xn--karmy-yua.no":true,"kautokeino.no":true,"guovdageaidnu.no":true,"klepp.no":true,"klabu.no":true,"xn--klbu-woa.no":true,"kongsberg.no":true,"kongsvinger.no":true,"kragero.no":true,"xn--krager-gya.no":true,"kristiansand.no":true,"kristiansund.no":true,"krodsherad.no":true,"xn--krdsherad-m8a.no":true,"kvalsund.no":true,"rahkkeravju.no":true,"xn--rhkkervju-01af.no":true,"kvam.no":true,"kvinesdal.no":true,"kvinnherad.no":true,"kviteseid.no":true,"kvitsoy.no":true,"xn--kvitsy-fya.no":true,"kvafjord.no":true,"xn--kvfjord-nxa.no":true,"giehtavuoatna.no":true,"kvanangen.no":true,"xn--kvnangen-k0a.no":true,"navuotna.no":true,"xn--nvuotna-hwa.no":true,"kafjord.no":true,"xn--kfjord-iua.no":true,"gaivuotna.no":true,"xn--givuotna-8ya.no":true,"larvik.no":true,"lavangen.no":true,"lavagis.no":true,"loabat.no":true,"xn--loabt-0qa.no":true,"lebesby.no":true,"davvesiida.no":true,"leikanger.no":true,"leirfjord.no":true,"leka.no":true,"leksvik.no":true,"lenvik.no":true,"leangaviika.no":true,"xn--leagaviika-52b.no":true,"lesja.no":true,"levanger.no":true,"lier.no":true,"lierne.no":true,"lillehammer.no":true,"lillesand.no":true,"lindesnes.no":true,"lindas.no":true,"xn--linds-pra.no":true,"lom.no":true,"loppa.no":true,"lahppi.no":true,"xn--lhppi-xqa.no":true,"lund.no":true,"lunner.no":true,"luroy.no":true,"xn--lury-ira.no":true,"luster.no":true,"lyngdal.no":true,"lyngen.no":true,"ivgu.no":true,"lardal.no":true,"lerdal.no":true,"xn--lrdal-sra.no":true,"lodingen.no":true,"xn--ldingen-q1a.no":true,"lorenskog.no":true,"xn--lrenskog-54a.no":true,"loten.no":true,"xn--lten-gra.no":true,"malvik.no":true,"masoy.no":true,"xn--msy-ula0h.no":true,"muosat.no":true,"xn--muost-0qa.no":true,"mandal.no":true,"marker.no":true,"marnardal.no":true,"masfjorden.no":true,"meland.no":true,"meldal.no":true,"melhus.no":true,"meloy.no":true,"xn--mely-ira.no":true,"meraker.no":true,"xn--merker-kua.no":true,"moareke.no":true,"xn--moreke-jua.no":true,"midsund.no":true,"midtre-gauldal.no":true,"modalen.no":true,"modum.no":true,"molde.no":true,"moskenes.no":true,"moss.no":true,"mosvik.no":true,"malselv.no":true,"xn--mlselv-iua.no":true,"malatvuopmi.no":true,"xn--mlatvuopmi-s4a.no":true,"namdalseid.no":true,"aejrie.no":true,"namsos.no":true,"namsskogan.no":true,"naamesjevuemie.no":true,"xn--nmesjevuemie-tcba.no":true,"laakesvuemie.no":true,"nannestad.no":true,"narvik.no":true,"narviika.no":true,"naustdal.no":true,"nedre-eiker.no":true,"nes.akershus.no":true,"nes.buskerud.no":true,"nesna.no":true,"nesodden.no":true,"nesseby.no":true,"unjarga.no":true,"xn--unjrga-rta.no":true,"nesset.no":true,"nissedal.no":true,"nittedal.no":true,"nord-aurdal.no":true,"nord-fron.no":true,"nord-odal.no":true,"norddal.no":true,"nordkapp.no":true,"davvenjarga.no":true,"xn--davvenjrga-y4a.no":true,"nordre-land.no":true,"nordreisa.no":true,"raisa.no":true,"xn--risa-5na.no":true,"nore-og-uvdal.no":true,"notodden.no":true,"naroy.no":true,"xn--nry-yla5g.no":true,"notteroy.no":true,"xn--nttery-byae.no":true,"odda.no":true,"oksnes.no":true,"xn--ksnes-uua.no":true,"oppdal.no":true,"oppegard.no":true,"xn--oppegrd-ixa.no":true,"orkdal.no":true,"orland.no":true,"xn--rland-uua.no":true,"orskog.no":true,"xn--rskog-uua.no":true,"orsta.no":true,"xn--rsta-fra.no":true,"os.hedmark.no":true,"os.hordaland.no":true,"osen.no":true,"osteroy.no":true,"xn--ostery-fya.no":true,"ostre-toten.no":true,"xn--stre-toten-zcb.no":true,"overhalla.no":true,"ovre-eiker.no":true,"xn--vre-eiker-k8a.no":true,"oyer.no":true,"xn--yer-zna.no":true,"oygarden.no":true,"xn--ygarden-p1a.no":true,"oystre-slidre.no":true,"xn--ystre-slidre-ujb.no":true,"porsanger.no":true,"porsangu.no":true,"xn--porsgu-sta26f.no":true,"porsgrunn.no":true,"radoy.no":true,"xn--rady-ira.no":true,"rakkestad.no":true,"rana.no":true,"ruovat.no":true,"randaberg.no":true,"rauma.no":true,"rendalen.no":true,"rennebu.no":true,"rennesoy.no":true,"xn--rennesy-v1a.no":true,"rindal.no":true,"ringebu.no":true,"ringerike.no":true,"ringsaker.no":true,"rissa.no":true,"risor.no":true,"xn--risr-ira.no":true,"roan.no":true,"rollag.no":true,"rygge.no":true,"ralingen.no":true,"xn--rlingen-mxa.no":true,"rodoy.no":true,"xn--rdy-0nab.no":true,"romskog.no":true,"xn--rmskog-bya.no":true,"roros.no":true,"xn--rros-gra.no":true,"rost.no":true,"xn--rst-0na.no":true,"royken.no":true,"xn--ryken-vua.no":true,"royrvik.no":true,"xn--ryrvik-bya.no":true,"rade.no":true,"xn--rde-ula.no":true,"salangen.no":true,"siellak.no":true,"saltdal.no":true,"salat.no":true,"xn--slt-elab.no":true,"xn--slat-5na.no":true,"samnanger.no":true,"sande.more-og-romsdal.no":true,"sande.xn--mre-og-romsdal-qqb.no":true,"sande.vestfold.no":true,"sandefjord.no":true,"sandnes.no":true,"sandoy.no":true,"xn--sandy-yua.no":true,"sarpsborg.no":true,"sauda.no":true,"sauherad.no":true,"sel.no":true,"selbu.no":true,"selje.no":true,"seljord.no":true,"sigdal.no":true,"siljan.no":true,"sirdal.no":true,"skaun.no":true,"skedsmo.no":true,"ski.no":true,"skien.no":true,"skiptvet.no":true,"skjervoy.no":true,"xn--skjervy-v1a.no":true,"skierva.no":true,"xn--skierv-uta.no":true,"skjak.no":true,"xn--skjk-soa.no":true,"skodje.no":true,"skanland.no":true,"xn--sknland-fxa.no":true,"skanit.no":true,"xn--sknit-yqa.no":true,"smola.no":true,"xn--smla-hra.no":true,"snillfjord.no":true,"snasa.no":true,"xn--snsa-roa.no":true,"snoasa.no":true,"snaase.no":true,"xn--snase-nra.no":true,"sogndal.no":true,"sokndal.no":true,"sola.no":true,"solund.no":true,"songdalen.no":true,"sortland.no":true,"spydeberg.no":true,"stange.no":true,"stavanger.no":true,"steigen.no":true,"steinkjer.no":true,"stjordal.no":true,"xn--stjrdal-s1a.no":true,"stokke.no":true,"stor-elvdal.no":true,"stord.no":true,"stordal.no":true,"storfjord.no":true,"omasvuotna.no":true,"strand.no":true,"stranda.no":true,"stryn.no":true,"sula.no":true,"suldal.no":true,"sund.no":true,"sunndal.no":true,"surnadal.no":true,"sveio.no":true,"svelvik.no":true,"sykkylven.no":true,"sogne.no":true,"xn--sgne-gra.no":true,"somna.no":true,"xn--smna-gra.no":true,"sondre-land.no":true,"xn--sndre-land-0cb.no":true,"sor-aurdal.no":true,"xn--sr-aurdal-l8a.no":true,"sor-fron.no":true,"xn--sr-fron-q1a.no":true,"sor-odal.no":true,"xn--sr-odal-q1a.no":true,"sor-varanger.no":true,"xn--sr-varanger-ggb.no":true,"matta-varjjat.no":true,"xn--mtta-vrjjat-k7af.no":true,"sorfold.no":true,"xn--srfold-bya.no":true,"sorreisa.no":true,"xn--srreisa-q1a.no":true,"sorum.no":true,"xn--srum-gra.no":true,"tana.no":true,"deatnu.no":true,"time.no":true,"tingvoll.no":true,"tinn.no":true,"tjeldsund.no":true,"dielddanuorri.no":true,"tjome.no":true,"xn--tjme-hra.no":true,"tokke.no":true,"tolga.no":true,"torsken.no":true,"tranoy.no":true,"xn--trany-yua.no":true,"tromso.no":true,"xn--troms-zua.no":true,"tromsa.no":true,"romsa.no":true,"trondheim.no":true,"troandin.no":true,"trysil.no":true,"trana.no":true,"xn--trna-woa.no":true,"trogstad.no":true,"xn--trgstad-r1a.no":true,"tvedestrand.no":true,"tydal.no":true,"tynset.no":true,"tysfjord.no":true,"divtasvuodna.no":true,"divttasvuotna.no":true,"tysnes.no":true,"tysvar.no":true,"xn--tysvr-vra.no":true,"tonsberg.no":true,"xn--tnsberg-q1a.no":true,"ullensaker.no":true,"ullensvang.no":true,"ulvik.no":true,"utsira.no":true,"vadso.no":true,"xn--vads-jra.no":true,"cahcesuolo.no":true,"xn--hcesuolo-7ya35b.no":true,"vaksdal.no":true,"valle.no":true,"vang.no":true,"vanylven.no":true,"vardo.no":true,"xn--vard-jra.no":true,"varggat.no":true,"xn--vrggt-xqad.no":true,"vefsn.no":true,"vaapste.no":true,"vega.no":true,"vegarshei.no":true,"xn--vegrshei-c0a.no":true,"vennesla.no":true,"verdal.no":true,"verran.no":true,"vestby.no":true,"vestnes.no":true,"vestre-slidre.no":true,"vestre-toten.no":true,"vestvagoy.no":true,"xn--vestvgy-ixa6o.no":true,"vevelstad.no":true,"vik.no":true,"vikna.no":true,"vindafjord.no":true,"volda.no":true,"voss.no":true,"varoy.no":true,"xn--vry-yla5g.no":true,"vagan.no":true,"xn--vgan-qoa.no":true,"voagat.no":true,"vagsoy.no":true,"xn--vgsy-qoa0j.no":true,"vaga.no":true,"xn--vg-yiab.no":true,"valer.ostfold.no":true,"xn--vler-qoa.xn--stfold-9xa.no":true,"valer.hedmark.no":true,"xn--vler-qoa.hedmark.no":true,"*.np":true,"nr":true,"biz.nr":true,"info.nr":true,"gov.nr":true,"edu.nr":true,"org.nr":true,"net.nr":true,"com.nr":true,"nu":true,"nz":true,"ac.nz":true,"co.nz":true,"cri.nz":true,"geek.nz":true,"gen.nz":true,"govt.nz":true,"health.nz":true,"iwi.nz":true,"kiwi.nz":true,"maori.nz":true,"mil.nz":true,"xn--mori-qsa.nz":true,"net.nz":true,"org.nz":true,"parliament.nz":true,"school.nz":true,"om":true,"co.om":true,"com.om":true,"edu.om":true,"gov.om":true,"med.om":true,"museum.om":true,"net.om":true,"org.om":true,"pro.om":true,"org":true,"pa":true,"ac.pa":true,"gob.pa":true,"com.pa":true,"org.pa":true,"sld.pa":true,"edu.pa":true,"net.pa":true,"ing.pa":true,"abo.pa":true,"med.pa":true,"nom.pa":true,"pe":true,"edu.pe":true,"gob.pe":true,"nom.pe":true,"mil.pe":true,"org.pe":true,"com.pe":true,"net.pe":true,"pf":true,"com.pf":true,"org.pf":true,"edu.pf":true,"*.pg":true,"ph":true,"com.ph":true,"net.ph":true,"org.ph":true,"gov.ph":true,"edu.ph":true,"ngo.ph":true,"mil.ph":true,"i.ph":true,"pk":true,"com.pk":true,"net.pk":true,"edu.pk":true,"org.pk":true,"fam.pk":true,"biz.pk":true,"web.pk":true,"gov.pk":true,"gob.pk":true,"gok.pk":true,"gon.pk":true,"gop.pk":true,"gos.pk":true,"info.pk":true,"pl":true,"com.pl":true,"net.pl":true,"org.pl":true,"info.pl":true,"waw.pl":true,"gov.pl":true,"aid.pl":true,"agro.pl":true,"atm.pl":true,"auto.pl":true,"biz.pl":true,"edu.pl":true,"gmina.pl":true,"gsm.pl":true,"mail.pl":true,"miasta.pl":true,"media.pl":true,"mil.pl":true,"nieruchomosci.pl":true,"nom.pl":true,"pc.pl":true,"powiat.pl":true,"priv.pl":true,"realestate.pl":true,"rel.pl":true,"sex.pl":true,"shop.pl":true,"sklep.pl":true,"sos.pl":true,"szkola.pl":true,"targi.pl":true,"tm.pl":true,"tourism.pl":true,"travel.pl":true,"turystyka.pl":true,"uw.gov.pl":true,"um.gov.pl":true,"ug.gov.pl":true,"upow.gov.pl":true,"starostwo.gov.pl":true,"so.gov.pl":true,"sr.gov.pl":true,"po.gov.pl":true,"pa.gov.pl":true,"augustow.pl":true,"babia-gora.pl":true,"bedzin.pl":true,"beskidy.pl":true,"bialowieza.pl":true,"bialystok.pl":true,"bielawa.pl":true,"bieszczady.pl":true,"boleslawiec.pl":true,"bydgoszcz.pl":true,"bytom.pl":true,"cieszyn.pl":true,"czeladz.pl":true,"czest.pl":true,"dlugoleka.pl":true,"elblag.pl":true,"elk.pl":true,"glogow.pl":true,"gniezno.pl":true,"gorlice.pl":true,"grajewo.pl":true,"ilawa.pl":true,"jaworzno.pl":true,"jelenia-gora.pl":true,"jgora.pl":true,"kalisz.pl":true,"kazimierz-dolny.pl":true,"karpacz.pl":true,"kartuzy.pl":true,"kaszuby.pl":true,"katowice.pl":true,"kepno.pl":true,"ketrzyn.pl":true,"klodzko.pl":true,"kobierzyce.pl":true,"kolobrzeg.pl":true,"konin.pl":true,"konskowola.pl":true,"kutno.pl":true,"lapy.pl":true,"lebork.pl":true,"legnica.pl":true,"lezajsk.pl":true,"limanowa.pl":true,"lomza.pl":true,"lowicz.pl":true,"lubin.pl":true,"lukow.pl":true,"malbork.pl":true,"malopolska.pl":true,"mazowsze.pl":true,"mazury.pl":true,"mielec.pl":true,"mielno.pl":true,"mragowo.pl":true,"naklo.pl":true,"nowaruda.pl":true,"nysa.pl":true,"olawa.pl":true,"olecko.pl":true,"olkusz.pl":true,"olsztyn.pl":true,"opoczno.pl":true,"opole.pl":true,"ostroda.pl":true,"ostroleka.pl":true,"ostrowiec.pl":true,"ostrowwlkp.pl":true,"pila.pl":true,"pisz.pl":true,"podhale.pl":true,"podlasie.pl":true,"polkowice.pl":true,"pomorze.pl":true,"pomorskie.pl":true,"prochowice.pl":true,"pruszkow.pl":true,"przeworsk.pl":true,"pulawy.pl":true,"radom.pl":true,"rawa-maz.pl":true,"rybnik.pl":true,"rzeszow.pl":true,"sanok.pl":true,"sejny.pl":true,"slask.pl":true,"slupsk.pl":true,"sosnowiec.pl":true,"stalowa-wola.pl":true,"skoczow.pl":true,"starachowice.pl":true,"stargard.pl":true,"suwalki.pl":true,"swidnica.pl":true,"swiebodzin.pl":true,"swinoujscie.pl":true,"szczecin.pl":true,"szczytno.pl":true,"tarnobrzeg.pl":true,"tgory.pl":true,"turek.pl":true,"tychy.pl":true,"ustka.pl":true,"walbrzych.pl":true,"warmia.pl":true,"warszawa.pl":true,"wegrow.pl":true,"wielun.pl":true,"wlocl.pl":true,"wloclawek.pl":true,"wodzislaw.pl":true,"wolomin.pl":true,"wroclaw.pl":true,"zachpomor.pl":true,"zagan.pl":true,"zarow.pl":true,"zgora.pl":true,"zgorzelec.pl":true,"pm":true,"pn":true,"gov.pn":true,"co.pn":true,"org.pn":true,"edu.pn":true,"net.pn":true,"post":true,"pr":true,"com.pr":true,"net.pr":true,"org.pr":true,"gov.pr":true,"edu.pr":true,"isla.pr":true,"pro.pr":true,"biz.pr":true,"info.pr":true,"name.pr":true,"est.pr":true,"prof.pr":true,"ac.pr":true,"pro":true,"aca.pro":true,"bar.pro":true,"cpa.pro":true,"jur.pro":true,"law.pro":true,"med.pro":true,"eng.pro":true,"ps":true,"edu.ps":true,"gov.ps":true,"sec.ps":true,"plo.ps":true,"com.ps":true,"org.ps":true,"net.ps":true,"pt":true,"net.pt":true,"gov.pt":true,"org.pt":true,"edu.pt":true,"int.pt":true,"publ.pt":true,"com.pt":true,"nome.pt":true,"pw":true,"co.pw":true,"ne.pw":true,"or.pw":true,"ed.pw":true,"go.pw":true,"belau.pw":true,"py":true,"com.py":true,"coop.py":true,"edu.py":true,"gov.py":true,"mil.py":true,"net.py":true,"org.py":true,"qa":true,"com.qa":true,"edu.qa":true,"gov.qa":true,"mil.qa":true,"name.qa":true,"net.qa":true,"org.qa":true,"sch.qa":true,"re":true,"com.re":true,"asso.re":true,"nom.re":true,"ro":true,"com.ro":true,"org.ro":true,"tm.ro":true,"nt.ro":true,"nom.ro":true,"info.ro":true,"rec.ro":true,"arts.ro":true,"firm.ro":true,"store.ro":true,"www.ro":true,"rs":true,"co.rs":true,"org.rs":true,"edu.rs":true,"ac.rs":true,"gov.rs":true,"in.rs":true,"ru":true,"ac.ru":true,"com.ru":true,"edu.ru":true,"int.ru":true,"net.ru":true,"org.ru":true,"pp.ru":true,"adygeya.ru":true,"altai.ru":true,"amur.ru":true,"arkhangelsk.ru":true,"astrakhan.ru":true,"bashkiria.ru":true,"belgorod.ru":true,"bir.ru":true,"bryansk.ru":true,"buryatia.ru":true,"cbg.ru":true,"chel.ru":true,"chelyabinsk.ru":true,"chita.ru":true,"chukotka.ru":true,"chuvashia.ru":true,"dagestan.ru":true,"dudinka.ru":true,"e-burg.ru":true,"grozny.ru":true,"irkutsk.ru":true,"ivanovo.ru":true,"izhevsk.ru":true,"jar.ru":true,"joshkar-ola.ru":true,"kalmykia.ru":true,"kaluga.ru":true,"kamchatka.ru":true,"karelia.ru":true,"kazan.ru":true,"kchr.ru":true,"kemerovo.ru":true,"khabarovsk.ru":true,"khakassia.ru":true,"khv.ru":true,"kirov.ru":true,"koenig.ru":true,"komi.ru":true,"kostroma.ru":true,"krasnoyarsk.ru":true,"kuban.ru":true,"kurgan.ru":true,"kursk.ru":true,"lipetsk.ru":true,"magadan.ru":true,"mari.ru":true,"mari-el.ru":true,"marine.ru":true,"mordovia.ru":true,"msk.ru":true,"murmansk.ru":true,"nalchik.ru":true,"nnov.ru":true,"nov.ru":true,"novosibirsk.ru":true,"nsk.ru":true,"omsk.ru":true,"orenburg.ru":true,"oryol.ru":true,"palana.ru":true,"penza.ru":true,"perm.ru":true,"ptz.ru":true,"rnd.ru":true,"ryazan.ru":true,"sakhalin.ru":true,"samara.ru":true,"saratov.ru":true,"simbirsk.ru":true,"smolensk.ru":true,"spb.ru":true,"stavropol.ru":true,"stv.ru":true,"surgut.ru":true,"tambov.ru":true,"tatarstan.ru":true,"tom.ru":true,"tomsk.ru":true,"tsaritsyn.ru":true,"tsk.ru":true,"tula.ru":true,"tuva.ru":true,"tver.ru":true,"tyumen.ru":true,"udm.ru":true,"udmurtia.ru":true,"ulan-ude.ru":true,"vladikavkaz.ru":true,"vladimir.ru":true,"vladivostok.ru":true,"volgograd.ru":true,"vologda.ru":true,"voronezh.ru":true,"vrn.ru":true,"vyatka.ru":true,"yakutia.ru":true,"yamal.ru":true,"yaroslavl.ru":true,"yekaterinburg.ru":true,"yuzhno-sakhalinsk.ru":true,"amursk.ru":true,"baikal.ru":true,"cmw.ru":true,"fareast.ru":true,"jamal.ru":true,"kms.ru":true,"k-uralsk.ru":true,"kustanai.ru":true,"kuzbass.ru":true,"magnitka.ru":true,"mytis.ru":true,"nakhodka.ru":true,"nkz.ru":true,"norilsk.ru":true,"oskol.ru":true,"pyatigorsk.ru":true,"rubtsovsk.ru":true,"snz.ru":true,"syzran.ru":true,"vdonsk.ru":true,"zgrad.ru":true,"gov.ru":true,"mil.ru":true,"test.ru":true,"rw":true,"gov.rw":true,"net.rw":true,"edu.rw":true,"ac.rw":true,"com.rw":true,"co.rw":true,"int.rw":true,"mil.rw":true,"gouv.rw":true,"sa":true,"com.sa":true,"net.sa":true,"org.sa":true,"gov.sa":true,"med.sa":true,"pub.sa":true,"edu.sa":true,"sch.sa":true,"sb":true,"com.sb":true,"edu.sb":true,"gov.sb":true,"net.sb":true,"org.sb":true,"sc":true,"com.sc":true,"gov.sc":true,"net.sc":true,"org.sc":true,"edu.sc":true,"sd":true,"com.sd":true,"net.sd":true,"org.sd":true,"edu.sd":true,"med.sd":true,"tv.sd":true,"gov.sd":true,"info.sd":true,"se":true,"a.se":true,"ac.se":true,"b.se":true,"bd.se":true,"brand.se":true,"c.se":true,"d.se":true,"e.se":true,"f.se":true,"fh.se":true,"fhsk.se":true,"fhv.se":true,"g.se":true,"h.se":true,"i.se":true,"k.se":true,"komforb.se":true,"kommunalforbund.se":true,"komvux.se":true,"l.se":true,"lanbib.se":true,"m.se":true,"n.se":true,"naturbruksgymn.se":true,"o.se":true,"org.se":true,"p.se":true,"parti.se":true,"pp.se":true,"press.se":true,"r.se":true,"s.se":true,"t.se":true,"tm.se":true,"u.se":true,"w.se":true,"x.se":true,"y.se":true,"z.se":true,"sg":true,"com.sg":true,"net.sg":true,"org.sg":true,"gov.sg":true,"edu.sg":true,"per.sg":true,"sh":true,"com.sh":true,"net.sh":true,"gov.sh":true,"org.sh":true,"mil.sh":true,"si":true,"sj":true,"sk":true,"sl":true,"com.sl":true,"net.sl":true,"edu.sl":true,"gov.sl":true,"org.sl":true,"sm":true,"sn":true,"art.sn":true,"com.sn":true,"edu.sn":true,"gouv.sn":true,"org.sn":true,"perso.sn":true,"univ.sn":true,"so":true,"com.so":true,"net.so":true,"org.so":true,"sr":true,"st":true,"co.st":true,"com.st":true,"consulado.st":true,"edu.st":true,"embaixada.st":true,"gov.st":true,"mil.st":true,"net.st":true,"org.st":true,"principe.st":true,"saotome.st":true,"store.st":true,"su":true,"adygeya.su":true,"arkhangelsk.su":true,"balashov.su":true,"bashkiria.su":true,"bryansk.su":true,"dagestan.su":true,"grozny.su":true,"ivanovo.su":true,"kalmykia.su":true,"kaluga.su":true,"karelia.su":true,"khakassia.su":true,"krasnodar.su":true,"kurgan.su":true,"lenug.su":true,"mordovia.su":true,"msk.su":true,"murmansk.su":true,"nalchik.su":true,"nov.su":true,"obninsk.su":true,"penza.su":true,"pokrovsk.su":true,"sochi.su":true,"spb.su":true,"togliatti.su":true,"troitsk.su":true,"tula.su":true,"tuva.su":true,"vladikavkaz.su":true,"vladimir.su":true,"vologda.su":true,"sv":true,"com.sv":true,"edu.sv":true,"gob.sv":true,"org.sv":true,"red.sv":true,"sx":true,"gov.sx":true,"sy":true,"edu.sy":true,"gov.sy":true,"net.sy":true,"mil.sy":true,"com.sy":true,"org.sy":true,"sz":true,"co.sz":true,"ac.sz":true,"org.sz":true,"tc":true,"td":true,"tel":true,"tf":true,"tg":true,"th":true,"ac.th":true,"co.th":true,"go.th":true,"in.th":true,"mi.th":true,"net.th":true,"or.th":true,"tj":true,"ac.tj":true,"biz.tj":true,"co.tj":true,"com.tj":true,"edu.tj":true,"go.tj":true,"gov.tj":true,"int.tj":true,"mil.tj":true,"name.tj":true,"net.tj":true,"nic.tj":true,"org.tj":true,"test.tj":true,"web.tj":true,"tk":true,"tl":true,"gov.tl":true,"tm":true,"com.tm":true,"co.tm":true,"org.tm":true,"net.tm":true,"nom.tm":true,"gov.tm":true,"mil.tm":true,"edu.tm":true,"tn":true,"com.tn":true,"ens.tn":true,"fin.tn":true,"gov.tn":true,"ind.tn":true,"intl.tn":true,"nat.tn":true,"net.tn":true,"org.tn":true,"info.tn":true,"perso.tn":true,"tourism.tn":true,"edunet.tn":true,"rnrt.tn":true,"rns.tn":true,"rnu.tn":true,"mincom.tn":true,"agrinet.tn":true,"defense.tn":true,"turen.tn":true,"to":true,"com.to":true,"gov.to":true,"net.to":true,"org.to":true,"edu.to":true,"mil.to":true,"tp":true,"tr":true,"com.tr":true,"info.tr":true,"biz.tr":true,"net.tr":true,"org.tr":true,"web.tr":true,"gen.tr":true,"tv.tr":true,"av.tr":true,"dr.tr":true,"bbs.tr":true,"name.tr":true,"tel.tr":true,"gov.tr":true,"bel.tr":true,"pol.tr":true,"mil.tr":true,"k12.tr":true,"edu.tr":true,"kep.tr":true,"nc.tr":true,"gov.nc.tr":true,"travel":true,"tt":true,"co.tt":true,"com.tt":true,"org.tt":true,"net.tt":true,"biz.tt":true,"info.tt":true,"pro.tt":true,"int.tt":true,"coop.tt":true,"jobs.tt":true,"mobi.tt":true,"travel.tt":true,"museum.tt":true,"aero.tt":true,"name.tt":true,"gov.tt":true,"edu.tt":true,"tv":true,"tw":true,"edu.tw":true,"gov.tw":true,"mil.tw":true,"com.tw":true,"net.tw":true,"org.tw":true,"idv.tw":true,"game.tw":true,"ebiz.tw":true,"club.tw":true,"xn--zf0ao64a.tw":true,"xn--uc0atv.tw":true,"xn--czrw28b.tw":true,"tz":true,"ac.tz":true,"co.tz":true,"go.tz":true,"hotel.tz":true,"info.tz":true,"me.tz":true,"mil.tz":true,"mobi.tz":true,"ne.tz":true,"or.tz":true,"sc.tz":true,"tv.tz":true,"ua":true,"com.ua":true,"edu.ua":true,"gov.ua":true,"in.ua":true,"net.ua":true,"org.ua":true,"cherkassy.ua":true,"cherkasy.ua":true,"chernigov.ua":true,"chernihiv.ua":true,"chernivtsi.ua":true,"chernovtsy.ua":true,"ck.ua":true,"cn.ua":true,"cr.ua":true,"crimea.ua":true,"cv.ua":true,"dn.ua":true,"dnepropetrovsk.ua":true,"dnipropetrovsk.ua":true,"dominic.ua":true,"donetsk.ua":true,"dp.ua":true,"if.ua":true,"ivano-frankivsk.ua":true,"kh.ua":true,"kharkiv.ua":true,"kharkov.ua":true,"kherson.ua":true,"khmelnitskiy.ua":true,"khmelnytskyi.ua":true,"kiev.ua":true,"kirovograd.ua":true,"km.ua":true,"kr.ua":true,"krym.ua":true,"ks.ua":true,"kv.ua":true,"kyiv.ua":true,"lg.ua":true,"lt.ua":true,"lugansk.ua":true,"lutsk.ua":true,"lv.ua":true,"lviv.ua":true,"mk.ua":true,"mykolaiv.ua":true,"nikolaev.ua":true,"od.ua":true,"odesa.ua":true,"odessa.ua":true,"pl.ua":true,"poltava.ua":true,"rivne.ua":true,"rovno.ua":true,"rv.ua":true,"sb.ua":true,"sebastopol.ua":true,"sevastopol.ua":true,"sm.ua":true,"sumy.ua":true,"te.ua":true,"ternopil.ua":true,"uz.ua":true,"uzhgorod.ua":true,"vinnica.ua":true,"vinnytsia.ua":true,"vn.ua":true,"volyn.ua":true,"yalta.ua":true,"zaporizhzhe.ua":true,"zaporizhzhia.ua":true,"zhitomir.ua":true,"zhytomyr.ua":true,"zp.ua":true,"zt.ua":true,"co.ua":true,"pp.ua":true,"ug":true,"co.ug":true,"or.ug":true,"ac.ug":true,"sc.ug":true,"go.ug":true,"ne.ug":true,"com.ug":true,"org.ug":true,"uk":true,"ac.uk":true,"co.uk":true,"gov.uk":true,"ltd.uk":true,"me.uk":true,"net.uk":true,"nhs.uk":true,"org.uk":true,"plc.uk":true,"police.uk":true,"*.sch.uk":true,"us":true,"dni.us":true,"fed.us":true,"isa.us":true,"kids.us":true,"nsn.us":true,"ak.us":true,"al.us":true,"ar.us":true,"as.us":true,"az.us":true,"ca.us":true,"co.us":true,"ct.us":true,"dc.us":true,"de.us":true,"fl.us":true,"ga.us":true,"gu.us":true,"hi.us":true,"ia.us":true,"id.us":true,"il.us":true,"in.us":true,"ks.us":true,"ky.us":true,"la.us":true,"ma.us":true,"md.us":true,"me.us":true,"mi.us":true,"mn.us":true,"mo.us":true,"ms.us":true,"mt.us":true,"nc.us":true,"nd.us":true,"ne.us":true,"nh.us":true,"nj.us":true,"nm.us":true,"nv.us":true,"ny.us":true,"oh.us":true,"ok.us":true,"or.us":true,"pa.us":true,"pr.us":true,"ri.us":true,"sc.us":true,"sd.us":true,"tn.us":true,"tx.us":true,"ut.us":true,"vi.us":true,"vt.us":true,"va.us":true,"wa.us":true,"wi.us":true,"wv.us":true,"wy.us":true,"k12.ak.us":true,"k12.al.us":true,"k12.ar.us":true,"k12.as.us":true,"k12.az.us":true,"k12.ca.us":true,"k12.co.us":true,"k12.ct.us":true,"k12.dc.us":true,"k12.de.us":true,"k12.fl.us":true,"k12.ga.us":true,"k12.gu.us":true,"k12.ia.us":true,"k12.id.us":true,"k12.il.us":true,"k12.in.us":true,"k12.ks.us":true,"k12.ky.us":true,"k12.la.us":true,"k12.ma.us":true,"k12.md.us":true,"k12.me.us":true,"k12.mi.us":true,"k12.mn.us":true,"k12.mo.us":true,"k12.ms.us":true,"k12.mt.us":true,"k12.nc.us":true,"k12.ne.us":true,"k12.nh.us":true,"k12.nj.us":true,"k12.nm.us":true,"k12.nv.us":true,"k12.ny.us":true,"k12.oh.us":true,"k12.ok.us":true,"k12.or.us":true,"k12.pa.us":true,"k12.pr.us":true,"k12.ri.us":true,"k12.sc.us":true,"k12.tn.us":true,"k12.tx.us":true,"k12.ut.us":true,"k12.vi.us":true,"k12.vt.us":true,"k12.va.us":true,"k12.wa.us":true,"k12.wi.us":true,"k12.wy.us":true,"cc.ak.us":true,"cc.al.us":true,"cc.ar.us":true,"cc.as.us":true,"cc.az.us":true,"cc.ca.us":true,"cc.co.us":true,"cc.ct.us":true,"cc.dc.us":true,"cc.de.us":true,"cc.fl.us":true,"cc.ga.us":true,"cc.gu.us":true,"cc.hi.us":true,"cc.ia.us":true,"cc.id.us":true,"cc.il.us":true,"cc.in.us":true,"cc.ks.us":true,"cc.ky.us":true,"cc.la.us":true,"cc.ma.us":true,"cc.md.us":true,"cc.me.us":true,"cc.mi.us":true,"cc.mn.us":true,"cc.mo.us":true,"cc.ms.us":true,"cc.mt.us":true,"cc.nc.us":true,"cc.nd.us":true,"cc.ne.us":true,"cc.nh.us":true,"cc.nj.us":true,"cc.nm.us":true,"cc.nv.us":true,"cc.ny.us":true,"cc.oh.us":true,"cc.ok.us":true,"cc.or.us":true,"cc.pa.us":true,"cc.pr.us":true,"cc.ri.us":true,"cc.sc.us":true,"cc.sd.us":true,"cc.tn.us":true,"cc.tx.us":true,"cc.ut.us":true,"cc.vi.us":true,"cc.vt.us":true,"cc.va.us":true,"cc.wa.us":true,"cc.wi.us":true,"cc.wv.us":true,"cc.wy.us":true,"lib.ak.us":true,"lib.al.us":true,"lib.ar.us":true,"lib.as.us":true,"lib.az.us":true,"lib.ca.us":true,"lib.co.us":true,"lib.ct.us":true,"lib.dc.us":true,"lib.de.us":true,"lib.fl.us":true,"lib.ga.us":true,"lib.gu.us":true,"lib.hi.us":true,"lib.ia.us":true,"lib.id.us":true,"lib.il.us":true,"lib.in.us":true,"lib.ks.us":true,"lib.ky.us":true,"lib.la.us":true,"lib.ma.us":true,"lib.md.us":true,"lib.me.us":true,"lib.mi.us":true,"lib.mn.us":true,"lib.mo.us":true,"lib.ms.us":true,"lib.mt.us":true,"lib.nc.us":true,"lib.nd.us":true,"lib.ne.us":true,"lib.nh.us":true,"lib.nj.us":true,"lib.nm.us":true,"lib.nv.us":true,"lib.ny.us":true,"lib.oh.us":true,"lib.ok.us":true,"lib.or.us":true,"lib.pa.us":true,"lib.pr.us":true,"lib.ri.us":true,"lib.sc.us":true,"lib.sd.us":true,"lib.tn.us":true,"lib.tx.us":true,"lib.ut.us":true,"lib.vi.us":true,"lib.vt.us":true,"lib.va.us":true,"lib.wa.us":true,"lib.wi.us":true,"lib.wy.us":true,"pvt.k12.ma.us":true,"chtr.k12.ma.us":true,"paroch.k12.ma.us":true,"uy":true,"com.uy":true,"edu.uy":true,"gub.uy":true,"mil.uy":true,"net.uy":true,"org.uy":true,"uz":true,"co.uz":true,"com.uz":true,"net.uz":true,"org.uz":true,"va":true,"vc":true,"com.vc":true,"net.vc":true,"org.vc":true,"gov.vc":true,"mil.vc":true,"edu.vc":true,"ve":true,"arts.ve":true,"co.ve":true,"com.ve":true,"e12.ve":true,"edu.ve":true,"firm.ve":true,"gob.ve":true,"gov.ve":true,"info.ve":true,"int.ve":true,"mil.ve":true,"net.ve":true,"org.ve":true,"rec.ve":true,"store.ve":true,"tec.ve":true,"web.ve":true,"vg":true,"vi":true,"co.vi":true,"com.vi":true,"k12.vi":true,"net.vi":true,"org.vi":true,"vn":true,"com.vn":true,"net.vn":true,"org.vn":true,"edu.vn":true,"gov.vn":true,"int.vn":true,"ac.vn":true,"biz.vn":true,"info.vn":true,"name.vn":true,"pro.vn":true,"health.vn":true,"vu":true,"com.vu":true,"edu.vu":true,"net.vu":true,"org.vu":true,"wf":true,"ws":true,"com.ws":true,"net.ws":true,"org.ws":true,"gov.ws":true,"edu.ws":true,"yt":true,"xn--mgbaam7a8h":true,"xn--54b7fta0cc":true,"xn--fiqs8s":true,"xn--fiqz9s":true,"xn--lgbbat1ad8j":true,"xn--wgbh1c":true,"xn--node":true,"xn--j6w193g":true,"xn--h2brj9c":true,"xn--mgbbh1a71e":true,"xn--fpcrj9c3d":true,"xn--gecrj9c":true,"xn--s9brj9c":true,"xn--45brj9c":true,"xn--xkc2dl3a5ee0h":true,"xn--mgba3a4f16a":true,"xn--mgba3a4fra":true,"xn--mgbayh7gpa":true,"xn--3e0b707e":true,"xn--80ao21a":true,"xn--fzc2c9e2c":true,"xn--xkc2al3hye2a":true,"xn--mgbc0a9azcg":true,"xn--l1acc":true,"xn--mgbx4cd0ab":true,"xn--mgb9awbf":true,"xn--ygbi2ammx":true,"xn--90a3ac":true,"xn--o1ac.xn--90a3ac":true,"xn--c1avg.xn--90a3ac":true,"xn--90azh.xn--90a3ac":true,"xn--d1at.xn--90a3ac":true,"xn--o1ach.xn--90a3ac":true,"xn--80au.xn--90a3ac":true,"xn--p1ai":true,"xn--wgbl6a":true,"xn--mgberp4a5d4ar":true,"xn--mgberp4a5d4a87g":true,"xn--mgbqly7c0a67fbc":true,"xn--mgbqly7cvafr":true,"xn--ogbpf8fl":true,"xn--mgbtf8fl":true,"xn--yfro4i67o":true,"xn--clchc0ea0b2g2a9gcd":true,"xn--o3cw4h":true,"xn--pgbs0dh":true,"xn--kpry57d":true,"xn--kprw13d":true,"xn--nnx388a":true,"xn--j1amh":true,"xn--mgb2ddes":true,"xxx":true,"*.ye":true,"*.za":true,"*.zm":true,"*.zw":true,"aaa":true,"abb":true,"abbott":true,"abogado":true,"academy":true,"accenture":true,"accountant":true,"accountants":true,"aco":true,"active":true,"actor":true,"ads":true,"adult":true,"aeg":true,"afl":true,"africa":true,"africamagic":true,"agency":true,"aig":true,"airforce":true,"airtel":true,"alibaba":true,"alipay":true,"allfinanz":true,"alsace":true,"amsterdam":true,"analytics":true,"android":true,"anquan":true,"apartments":true,"aquarelle":true,"aramco":true,"archi":true,"army":true,"arte":true,"associates":true,"attorney":true,"auction":true,"audio":true,"author":true,"auto":true,"autos":true,"avianca":true,"axa":true,"azure":true,"baidu":true,"band":true,"bank":true,"bar":true,"barcelona":true,"barclaycard":true,"barclays":true,"bargains":true,"bauhaus":true,"bayern":true,"bbc":true,"bbva":true,"bcg":true,"bcn":true,"beer":true,"bentley":true,"berlin":true,"best":true,"bharti":true,"bible":true,"bid":true,"bike":true,"bing":true,"bingo":true,"bio":true,"black":true,"blackfriday":true,"bloomberg":true,"blue":true,"bms":true,"bmw":true,"bnl":true,"bnpparibas":true,"boats":true,"bom":true,"bond":true,"boo":true,"boots":true,"bot":true,"boutique":true,"bradesco":true,"bridgestone":true,"broadway":true,"broker":true,"brother":true,"brussels":true,"budapest":true,"build":true,"builders":true,"business":true,"buy":true,"buzz":true,"bzh":true,"cab":true,"cafe":true,"cal":true,"call":true,"camera":true,"camp":true,"cancerresearch":true,"canon":true,"capetown":true,"capital":true,"car":true,"caravan":true,"cards":true,"care":true,"career":true,"careers":true,"cars":true,"cartier":true,"casa":true,"cash":true,"casino":true,"catering":true,"cba":true,"cbn":true,"center":true,"ceo":true,"cern":true,"cfa":true,"cfd":true,"channel":true,"chat":true,"cheap":true,"chloe":true,"christmas":true,"chrome":true,"church":true,"cipriani":true,"circle":true,"cisco":true,"citic":true,"city":true,"cityeats":true,"claims":true,"cleaning":true,"click":true,"clinic":true,"clothing":true,"club":true,"coach":true,"codes":true,"coffee":true,"college":true,"cologne":true,"commbank":true,"community":true,"company":true,"computer":true,"comsec":true,"condos":true,"construction":true,"consulting":true,"contact":true,"contractors":true,"cooking":true,"cool":true,"corsica":true,"country":true,"coupon":true,"coupons":true,"courses":true,"credit":true,"creditcard":true,"creditunion":true,"cricket":true,"crown":true,"crs":true,"cruises":true,"csc":true,"cuisinella":true,"cymru":true,"cyou":true,"dabur":true,"dad":true,"dance":true,"date":true,"dating":true,"datsun":true,"day":true,"dclk":true,"dealer":true,"deals":true,"degree":true,"delivery":true,"dell":true,"delta":true,"democrat":true,"dental":true,"dentist":true,"desi":true,"design":true,"dev":true,"diamonds":true,"diet":true,"digital":true,"direct":true,"directory":true,"discount":true,"dnp":true,"docs":true,"dog":true,"doha":true,"domains":true,"doosan":true,"download":true,"drive":true,"dstv":true,"dubai":true,"durban":true,"dvag":true,"earth":true,"eat":true,"edeka":true,"education":true,"email":true,"emerck":true,"energy":true,"engineer":true,"engineering":true,"enterprises":true,"epson":true,"equipment":true,"erni":true,"esq":true,"estate":true,"eurovision":true,"eus":true,"events":true,"everbank":true,"exchange":true,"expert":true,"exposed":true,"express":true,"fage":true,"fail":true,"fairwinds":true,"faith":true,"family":true,"fan":true,"fans":true,"farm":true,"fashion":true,"fast":true,"feedback":true,"ferrero":true,"film":true,"final":true,"finance":true,"financial":true,"firestone":true,"firmdale":true,"fish":true,"fishing":true,"fit":true,"fitness":true,"flickr":true,"flights":true,"florist":true,"flowers":true,"flsmidth":true,"fly":true,"foo":true,"football":true,"ford":true,"forex":true,"forsale":true,"forum":true,"foundation":true,"frl":true,"frogans":true,"frontier":true,"fund":true,"furniture":true,"futbol":true,"fyi":true,"gal":true,"gallery":true,"gallup":true,"garden":true,"gbiz":true,"gdn":true,"gea":true,"gent":true,"genting":true,"ggee":true,"gift":true,"gifts":true,"gives":true,"giving":true,"glass":true,"gle":true,"global":true,"globo":true,"gmail":true,"gmo":true,"gmx":true,"gold":true,"goldpoint":true,"golf":true,"goo":true,"goog":true,"google":true,"gop":true,"got":true,"gotv":true,"graphics":true,"gratis":true,"green":true,"gripe":true,"group":true,"gucci":true,"guge":true,"guide":true,"guitars":true,"guru":true,"hamburg":true,"hangout":true,"haus":true,"hdfcbank":true,"health":true,"healthcare":true,"help":true,"helsinki":true,"here":true,"hermes":true,"hiphop":true,"hitachi":true,"hiv":true,"hockey":true,"holdings":true,"holiday":true,"homedepot":true,"homes":true,"honda":true,"horse":true,"host":true,"hosting":true,"hoteles":true,"hotmail":true,"house":true,"how":true,"hsbc":true,"htc":true,"ibm":true,"icbc":true,"ice":true,"icu":true,"ifm":true,"iinet":true,"immo":true,"immobilien":true,"industries":true,"infiniti":true,"ing":true,"ink":true,"institute":true,"insurance":true,"insure":true,"international":true,"investments":true,"ipiranga":true,"irish":true,"iselect":true,"ist":true,"istanbul":true,"itau":true,"iwc":true,"jaguar":true,"java":true,"jcb":true,"jetzt":true,"jewelry":true,"jio":true,"jlc":true,"jll":true,"jmp":true,"joburg":true,"jot":true,"joy":true,"jprs":true,"juegos":true,"kaufen":true,"kddi":true,"kfh":true,"kim":true,"kinder":true,"kitchen":true,"kiwi":true,"koeln":true,"komatsu":true,"kpn":true,"krd":true,"kred":true,"kyknet":true,"kyoto":true,"lacaixa":true,"lancaster":true,"land":true,"landrover":true,"lasalle":true,"lat":true,"latrobe":true,"law":true,"lawyer":true,"lds":true,"lease":true,"leclerc":true,"legal":true,"lgbt":true,"liaison":true,"lidl":true,"life":true,"lifeinsurance":true,"lifestyle":true,"lighting":true,"like":true,"limited":true,"limo":true,"lincoln":true,"linde":true,"link":true,"live":true,"lixil":true,"loan":true,"loans":true,"lol":true,"london":true,"lotte":true,"lotto":true,"love":true,"ltd":true,"ltda":true,"lupin":true,"luxe":true,"luxury":true,"madrid":true,"maif":true,"maison":true,"makeup":true,"man":true,"management":true,"mango":true,"market":true,"marketing":true,"markets":true,"marriott":true,"mba":true,"media":true,"meet":true,"melbourne":true,"meme":true,"memorial":true,"men":true,"menu":true,"meo":true,"miami":true,"microsoft":true,"mini":true,"mma":true,"mnet":true,"mobily":true,"moda":true,"moe":true,"moi":true,"monash":true,"money":true,"montblanc":true,"mormon":true,"mortgage":true,"moscow":true,"motorcycles":true,"mov":true,"movie":true,"movistar":true,"mtn":true,"mtpc":true,"mtr":true,"multichoice":true,"mutual":true,"mzansimagic":true,"nadex":true,"nagoya":true,"naspers":true,"natura":true,"navy":true,"nec":true,"netbank":true,"network":true,"neustar":true,"new":true,"news":true,"nexus":true,"ngo":true,"nhk":true,"nico":true,"ninja":true,"nissan":true,"nokia":true,"norton":true,"nowruz":true,"nra":true,"nrw":true,"ntt":true,"nyc":true,"obi":true,"office":true,"okinawa":true,"omega":true,"one":true,"ong":true,"onl":true,"online":true,"ooo":true,"oracle":true,"orange":true,"organic":true,"orientexpress":true,"osaka":true,"otsuka":true,"ovh":true,"page":true,"pamperedchef":true,"panerai":true,"paris":true,"pars":true,"partners":true,"parts":true,"party":true,"passagens":true,"payu":true,"pharmacy":true,"philips":true,"photo":true,"photography":true,"photos":true,"physio":true,"piaget":true,"pics":true,"pictet":true,"pictures":true,"pid":true,"pin":true,"pink":true,"pizza":true,"place":true,"play":true,"plumbing":true,"plus":true,"pohl":true,"poker":true,"porn":true,"praxi":true,"press":true,"prod":true,"productions":true,"prof":true,"promo":true,"properties":true,"property":true,"pub":true,"qpon":true,"quebec":true,"quest":true,"racing":true,"read":true,"realtor":true,"realty":true,"recipes":true,"red":true,"redstone":true,"redumbrella":true,"rehab":true,"reise":true,"reisen":true,"reit":true,"reliance":true,"ren":true,"rent":true,"rentals":true,"repair":true,"report":true,"republican":true,"rest":true,"restaurant":true,"review":true,"reviews":true,"rich":true,"ricoh":true,"ril":true,"rio":true,"rip":true,"rocher":true,"rocks":true,"rodeo":true,"room":true,"rsvp":true,"ruhr":true,"run":true,"rwe":true,"ryukyu":true,"saarland":true,"safe":true,"safety":true,"sakura":true,"sale":true,"salon":true,"samsung":true,"sandvik":true,"sandvikcoromant":true,"sanofi":true,"sap":true,"sapo":true,"sarl":true,"sas":true,"saxo":true,"sbi":true,"sbs":true,"sca":true,"scb":true,"schmidt":true,"scholarships":true,"school":true,"schule":true,"schwarz":true,"science":true,"scor":true,"scot":true,"seat":true,"seek":true,"sener":true,"services":true,"sew":true,"sex":true,"sexy":true,"sharp":true,"shia":true,"shiksha":true,"shoes":true,"shouji":true,"show":true,"shriram":true,"sina":true,"singles":true,"site":true,"skin":true,"sky":true,"skype":true,"smile":true,"sncf":true,"soccer":true,"social":true,"software":true,"sohu":true,"solar":true,"solutions":true,"song":true,"sony":true,"soy":true,"space":true,"spiegel":true,"spot":true,"spreadbetting":true,"stada":true,"star":true,"starhub":true,"statebank":true,"statoil":true,"stc":true,"stcgroup":true,"stockholm":true,"storage":true,"studio":true,"study":true,"style":true,"sucks":true,"supersport":true,"supplies":true,"supply":true,"support":true,"surf":true,"surgery":true,"suzuki":true,"swatch":true,"swiss":true,"sydney":true,"symantec":true,"systems":true,"tab":true,"taipei":true,"taobao":true,"tatamotors":true,"tatar":true,"tattoo":true,"tax":true,"taxi":true,"tci":true,"team":true,"tech":true,"technology":true,"telecity":true,"telefonica":true,"temasek":true,"tennis":true,"thd":true,"theater":true,"tickets":true,"tienda":true,"tiffany":true,"tips":true,"tires":true,"tirol":true,"tmall":true,"today":true,"tokyo":true,"tools":true,"top":true,"toray":true,"toshiba":true,"tours":true,"town":true,"toys":true,"trade":true,"trading":true,"training":true,"travelers":true,"travelersinsurance":true,"trust":true,"trv":true,"tui":true,"tunes":true,"tushu":true,"tvs":true,"ubs":true,"university":true,"uno":true,"uol":true,"vacations":true,"vana":true,"vegas":true,"ventures":true,"versicherung":true,"vet":true,"viajes":true,"video":true,"viking":true,"villas":true,"vip":true,"virgin":true,"vision":true,"vista":true,"vistaprint":true,"viva":true,"vlaanderen":true,"vodka":true,"vote":true,"voting":true,"voto":true,"voyage":true,"vuelos":true,"wales":true,"walter":true,"wang":true,"wanggou":true,"watch":true,"watches":true,"weather":true,"weatherchannel":true,"webcam":true,"website":true,"wed":true,"wedding":true,"weibo":true,"weir":true,"whoswho":true,"wien":true,"wiki":true,"williamhill":true,"win":true,"windows":true,"wme":true,"work":true,"works":true,"world":true,"wtc":true,"wtf":true,"xbox":true,"xerox":true,"xihuan":true,"xin":true,"xn--11b4c3d":true,"xn--1ck2e1b":true,"xn--1qqw23a":true,"xn--30rr7y":true,"xn--3bst00m":true,"xn--3ds443g":true,"xn--3pxu8k":true,"xn--42c2d9a":true,"xn--45q11c":true,"xn--4gbrim":true,"xn--55qw42g":true,"xn--55qx5d":true,"xn--5tzm5g":true,"xn--6frz82g":true,"xn--6qq986b3xl":true,"xn--80adxhks":true,"xn--80asehdb":true,"xn--80aswg":true,"xn--8y0a063a":true,"xn--9dbq2a":true,"xn--9et52u":true,"xn--9krt00a":true,"xn--b4w605ferd":true,"xn--bck1b9a5dre4c":true,"xn--c1avg":true,"xn--c2br7g":true,"xn--cck2b3b":true,"xn--cg4bki":true,"xn--czr694b":true,"xn--czrs0t":true,"xn--czru2d":true,"xn--d1acj3b":true,"xn--eckvdtc9d":true,"xn--efvy88h":true,"xn--estv75g":true,"xn--fhbei":true,"xn--fiq228c5hs":true,"xn--fiq64b":true,"xn--fjq720a":true,"xn--flw351e":true,"xn--g2xx48c":true,"xn--gckr3f0f":true,"xn--hxt814e":true,"xn--i1b6b1a6a2e":true,"xn--imr513n":true,"xn--io0a7i":true,"xn--j1aef":true,"xn--jlq61u9w7b":true,"xn--jvr189m":true,"xn--kcrx77d1x4a":true,"xn--kpu716f":true,"xn--kput3i":true,"xn--mgba3a3ejt":true,"xn--mgbab2bd":true,"xn--mgbb9fbpob":true,"xn--mgbt3dhd":true,"xn--mk1bu44c":true,"xn--mxtq1m":true,"xn--ngbc5azd":true,"xn--ngbe9e0a":true,"xn--nqv7f":true,"xn--nqv7fs00ema":true,"xn--nyqy26a":true,"xn--p1acf":true,"xn--pbt977c":true,"xn--pssy2u":true,"xn--q9jyb4c":true,"xn--qcka1pmc":true,"xn--rhqv96g":true,"xn--rovu88b":true,"xn--ses554g":true,"xn--t60b56a":true,"xn--tckwe":true,"xn--unup4y":true,"xn--vermgensberater-ctb":true,"xn--vermgensberatung-pwb":true,"xn--vhquv":true,"xn--vuq861b":true,"xn--xhq521b":true,"xn--zfr164b":true,"xyz":true,"yachts":true,"yahoo":true,"yamaxun":true,"yandex":true,"yodobashi":true,"yoga":true,"yokohama":true,"youtube":true,"yun":true,"zara":true,"zero":true,"zip":true,"zone":true,"zuerich":true,"cloudfront.net":true,"ap-northeast-1.compute.amazonaws.com":true,"ap-southeast-1.compute.amazonaws.com":true,"ap-southeast-2.compute.amazonaws.com":true,"cn-north-1.compute.amazonaws.cn":true,"compute.amazonaws.cn":true,"compute.amazonaws.com":true,"compute-1.amazonaws.com":true,"eu-west-1.compute.amazonaws.com":true,"eu-central-1.compute.amazonaws.com":true,"sa-east-1.compute.amazonaws.com":true,"us-east-1.amazonaws.com":true,"us-gov-west-1.compute.amazonaws.com":true,"us-west-1.compute.amazonaws.com":true,"us-west-2.compute.amazonaws.com":true,"z-1.compute-1.amazonaws.com":true,"z-2.compute-1.amazonaws.com":true,"elasticbeanstalk.com":true,"elb.amazonaws.com":true,"s3.amazonaws.com":true,"s3-us-west-2.amazonaws.com":true,"s3-us-west-1.amazonaws.com":true,"s3-eu-west-1.amazonaws.com":true,"s3-ap-southeast-1.amazonaws.com":true,"s3-ap-southeast-2.amazonaws.com":true,"s3-ap-northeast-1.amazonaws.com":true,"s3-sa-east-1.amazonaws.com":true,"s3-us-gov-west-1.amazonaws.com":true,"s3-fips-us-gov-west-1.amazonaws.com":true,"s3-website-us-east-1.amazonaws.com":true,"s3-website-us-west-2.amazonaws.com":true,"s3-website-us-west-1.amazonaws.com":true,"s3-website-eu-west-1.amazonaws.com":true,"s3-website-ap-southeast-1.amazonaws.com":true,"s3-website-ap-southeast-2.amazonaws.com":true,"s3-website-ap-northeast-1.amazonaws.com":true,"s3-website-sa-east-1.amazonaws.com":true,"s3-website-us-gov-west-1.amazonaws.com":true,"betainabox.com":true,"ae.org":true,"ar.com":true,"br.com":true,"cn.com":true,"com.de":true,"com.se":true,"de.com":true,"eu.com":true,"gb.com":true,"gb.net":true,"hu.com":true,"hu.net":true,"jp.net":true,"jpn.com":true,"kr.com":true,"mex.com":true,"no.com":true,"qc.com":true,"ru.com":true,"sa.com":true,"se.com":true,"se.net":true,"uk.com":true,"uk.net":true,"us.com":true,"uy.com":true,"za.bz":true,"za.com":true,"africa.com":true,"gr.com":true,"in.net":true,"us.org":true,"co.com":true,"c.la":true,"cloudcontrolled.com":true,"cloudcontrolapp.com":true,"co.ca":true,"co.nl":true,"co.no":true,"*.platform.sh":true,"cupcake.is":true,"dreamhosters.com":true,"dyndns-at-home.com":true,"dyndns-at-work.com":true,"dyndns-blog.com":true,"dyndns-free.com":true,"dyndns-home.com":true,"dyndns-ip.com":true,"dyndns-mail.com":true,"dyndns-office.com":true,"dyndns-pics.com":true,"dyndns-remote.com":true,"dyndns-server.com":true,"dyndns-web.com":true,"dyndns-wiki.com":true,"dyndns-work.com":true,"dyndns.biz":true,"dyndns.info":true,"dyndns.org":true,"dyndns.tv":true,"at-band-camp.net":true,"ath.cx":true,"barrel-of-knowledge.info":true,"barrell-of-knowledge.info":true,"better-than.tv":true,"blogdns.com":true,"blogdns.net":true,"blogdns.org":true,"blogsite.org":true,"boldlygoingnowhere.org":true,"broke-it.net":true,"buyshouses.net":true,"cechire.com":true,"dnsalias.com":true,"dnsalias.net":true,"dnsalias.org":true,"dnsdojo.com":true,"dnsdojo.net":true,"dnsdojo.org":true,"does-it.net":true,"doesntexist.com":true,"doesntexist.org":true,"dontexist.com":true,"dontexist.net":true,"dontexist.org":true,"doomdns.com":true,"doomdns.org":true,"dvrdns.org":true,"dyn-o-saur.com":true,"dynalias.com":true,"dynalias.net":true,"dynalias.org":true,"dynathome.net":true,"dyndns.ws":true,"endofinternet.net":true,"endofinternet.org":true,"endoftheinternet.org":true,"est-a-la-maison.com":true,"est-a-la-masion.com":true,"est-le-patron.com":true,"est-mon-blogueur.com":true,"for-better.biz":true,"for-more.biz":true,"for-our.info":true,"for-some.biz":true,"for-the.biz":true,"forgot.her.name":true,"forgot.his.name":true,"from-ak.com":true,"from-al.com":true,"from-ar.com":true,"from-az.net":true,"from-ca.com":true,"from-co.net":true,"from-ct.com":true,"from-dc.com":true,"from-de.com":true,"from-fl.com":true,"from-ga.com":true,"from-hi.com":true,"from-ia.com":true,"from-id.com":true,"from-il.com":true,"from-in.com":true,"from-ks.com":true,"from-ky.com":true,"from-la.net":true,"from-ma.com":true,"from-md.com":true,"from-me.org":true,"from-mi.com":true,"from-mn.com":true,"from-mo.com":true,"from-ms.com":true,"from-mt.com":true,"from-nc.com":true,"from-nd.com":true,"from-ne.com":true,"from-nh.com":true,"from-nj.com":true,"from-nm.com":true,"from-nv.com":true,"from-ny.net":true,"from-oh.com":true,"from-ok.com":true,"from-or.com":true,"from-pa.com":true,"from-pr.com":true,"from-ri.com":true,"from-sc.com":true,"from-sd.com":true,"from-tn.com":true,"from-tx.com":true,"from-ut.com":true,"from-va.com":true,"from-vt.com":true,"from-wa.com":true,"from-wi.com":true,"from-wv.com":true,"from-wy.com":true,"ftpaccess.cc":true,"fuettertdasnetz.de":true,"game-host.org":true,"game-server.cc":true,"getmyip.com":true,"gets-it.net":true,"go.dyndns.org":true,"gotdns.com":true,"gotdns.org":true,"groks-the.info":true,"groks-this.info":true,"ham-radio-op.net":true,"here-for-more.info":true,"hobby-site.com":true,"hobby-site.org":true,"home.dyndns.org":true,"homedns.org":true,"homeftp.net":true,"homeftp.org":true,"homeip.net":true,"homelinux.com":true,"homelinux.net":true,"homelinux.org":true,"homeunix.com":true,"homeunix.net":true,"homeunix.org":true,"iamallama.com":true,"in-the-band.net":true,"is-a-anarchist.com":true,"is-a-blogger.com":true,"is-a-bookkeeper.com":true,"is-a-bruinsfan.org":true,"is-a-bulls-fan.com":true,"is-a-candidate.org":true,"is-a-caterer.com":true,"is-a-celticsfan.org":true,"is-a-chef.com":true,"is-a-chef.net":true,"is-a-chef.org":true,"is-a-conservative.com":true,"is-a-cpa.com":true,"is-a-cubicle-slave.com":true,"is-a-democrat.com":true,"is-a-designer.com":true,"is-a-doctor.com":true,"is-a-financialadvisor.com":true,"is-a-geek.com":true,"is-a-geek.net":true,"is-a-geek.org":true,"is-a-green.com":true,"is-a-guru.com":true,"is-a-hard-worker.com":true,"is-a-hunter.com":true,"is-a-knight.org":true,"is-a-landscaper.com":true,"is-a-lawyer.com":true,"is-a-liberal.com":true,"is-a-libertarian.com":true,"is-a-linux-user.org":true,"is-a-llama.com":true,"is-a-musician.com":true,"is-a-nascarfan.com":true,"is-a-nurse.com":true,"is-a-painter.com":true,"is-a-patsfan.org":true,"is-a-personaltrainer.com":true,"is-a-photographer.com":true,"is-a-player.com":true,"is-a-republican.com":true,"is-a-rockstar.com":true,"is-a-socialist.com":true,"is-a-soxfan.org":true,"is-a-student.com":true,"is-a-teacher.com":true,"is-a-techie.com":true,"is-a-therapist.com":true,"is-an-accountant.com":true,"is-an-actor.com":true,"is-an-actress.com":true,"is-an-anarchist.com":true,"is-an-artist.com":true,"is-an-engineer.com":true,"is-an-entertainer.com":true,"is-by.us":true,"is-certified.com":true,"is-found.org":true,"is-gone.com":true,"is-into-anime.com":true,"is-into-cars.com":true,"is-into-cartoons.com":true,"is-into-games.com":true,"is-leet.com":true,"is-lost.org":true,"is-not-certified.com":true,"is-saved.org":true,"is-slick.com":true,"is-uberleet.com":true,"is-very-bad.org":true,"is-very-evil.org":true,"is-very-good.org":true,"is-very-nice.org":true,"is-very-sweet.org":true,"is-with-theband.com":true,"isa-geek.com":true,"isa-geek.net":true,"isa-geek.org":true,"isa-hockeynut.com":true,"issmarterthanyou.com":true,"isteingeek.de":true,"istmein.de":true,"kicks-ass.net":true,"kicks-ass.org":true,"knowsitall.info":true,"land-4-sale.us":true,"lebtimnetz.de":true,"leitungsen.de":true,"likes-pie.com":true,"likescandy.com":true,"merseine.nu":true,"mine.nu":true,"misconfused.org":true,"mypets.ws":true,"myphotos.cc":true,"neat-url.com":true,"office-on-the.net":true,"on-the-web.tv":true,"podzone.net":true,"podzone.org":true,"readmyblog.org":true,"saves-the-whales.com":true,"scrapper-site.net":true,"scrapping.cc":true,"selfip.biz":true,"selfip.com":true,"selfip.info":true,"selfip.net":true,"selfip.org":true,"sells-for-less.com":true,"sells-for-u.com":true,"sells-it.net":true,"sellsyourhome.org":true,"servebbs.com":true,"servebbs.net":true,"servebbs.org":true,"serveftp.net":true,"serveftp.org":true,"servegame.org":true,"shacknet.nu":true,"simple-url.com":true,"space-to-rent.com":true,"stuff-4-sale.org":true,"stuff-4-sale.us":true,"teaches-yoga.com":true,"thruhere.net":true,"traeumtgerade.de":true,"webhop.biz":true,"webhop.info":true,"webhop.net":true,"webhop.org":true,"worse-than.tv":true,"writesthisblog.com":true,"a.ssl.fastly.net":true,"b.ssl.fastly.net":true,"global.ssl.fastly.net":true,"a.prod.fastly.net":true,"global.prod.fastly.net":true,"firebaseapp.com":true,"flynnhub.com":true,"service.gov.uk":true,"github.io":true,"githubusercontent.com":true,"ro.com":true,"appspot.com":true,"blogspot.ae":true,"blogspot.be":true,"blogspot.bj":true,"blogspot.ca":true,"blogspot.cf":true,"blogspot.ch":true,"blogspot.co.at":true,"blogspot.co.il":true,"blogspot.co.nz":true,"blogspot.co.uk":true,"blogspot.com":true,"blogspot.com.ar":true,"blogspot.com.au":true,"blogspot.com.br":true,"blogspot.com.es":true,"blogspot.com.tr":true,"blogspot.cv":true,"blogspot.cz":true,"blogspot.de":true,"blogspot.dk":true,"blogspot.fi":true,"blogspot.fr":true,"blogspot.gr":true,"blogspot.hk":true,"blogspot.hu":true,"blogspot.ie":true,"blogspot.in":true,"blogspot.it":true,"blogspot.jp":true,"blogspot.kr":true,"blogspot.mr":true,"blogspot.mx":true,"blogspot.nl":true,"blogspot.no":true,"blogspot.pt":true,"blogspot.re":true,"blogspot.ro":true,"blogspot.ru":true,"blogspot.se":true,"blogspot.sg":true,"blogspot.sk":true,"blogspot.td":true,"blogspot.tw":true,"codespot.com":true,"googleapis.com":true,"googlecode.com":true,"pagespeedmobilizer.com":true,"withgoogle.com":true,"herokuapp.com":true,"herokussl.com":true,"iki.fi":true,"biz.at":true,"info.at":true,"co.pl":true,"azurewebsites.net":true,"azure-mobile.net":true,"cloudapp.net":true,"nfshost.com":true,"nyc.mn":true,"nid.io":true,"operaunite.com":true,"outsystemscloud.com":true,"art.pl":true,"gliwice.pl":true,"krakow.pl":true,"poznan.pl":true,"wroc.pl":true,"zakopane.pl":true,"priv.at":true,"rhcloud.com":true,"sinaapp.com":true,"vipsinaapp.com":true,"1kapp.com":true,"gda.pl":true,"gdansk.pl":true,"gdynia.pl":true,"med.pl":true,"sopot.pl":true,"hk.com":true,"hk.org":true,"ltd.hk":true,"inc.hk":true,"yolasite.com":true,"za.net":true,"za.org":true});

	// END of automatically generated file


/***/ },
/* 531 */
/***/ function(module, exports) {

	module.exports = require("punycode");

/***/ },
/* 532 */
/***/ function(module, exports) {

	/*!
	 * Copyright (c) 2015, Salesforce.com, Inc.
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions are met:
	 *
	 * 1. Redistributions of source code must retain the above copyright notice,
	 * this list of conditions and the following disclaimer.
	 *
	 * 2. Redistributions in binary form must reproduce the above copyright notice,
	 * this list of conditions and the following disclaimer in the documentation
	 * and/or other materials provided with the distribution.
	 *
	 * 3. Neither the name of Salesforce.com nor the names of its contributors may
	 * be used to endorse or promote products derived from this software without
	 * specific prior written permission.
	 *
	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
	 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
	 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
	 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	 * POSSIBILITY OF SUCH DAMAGE.
	 */
	'use strict';
	/*jshint unused:false */

	function Store() {
	}
	exports.Store = Store;

	// Stores may be synchronous, but are still required to use a
	// Continuation-Passing Style API.  The CookieJar itself will expose a "*Sync"
	// API that converts from synchronous-callbacks to imperative style.
	Store.prototype.synchronous = false;

	Store.prototype.findCookie = function(domain, path, key, cb) {
	  throw new Error('findCookie is not implemented');
	};

	Store.prototype.findCookies = function(domain, path, cb) {
	  throw new Error('findCookies is not implemented');
	};

	Store.prototype.putCookie = function(cookie, cb) {
	  throw new Error('putCookie is not implemented');
	};

	Store.prototype.updateCookie = function(oldCookie, newCookie, cb) {
	  // recommended default implementation:
	  // return this.putCookie(newCookie, cb);
	  throw new Error('updateCookie is not implemented');
	};

	Store.prototype.removeCookie = function(domain, path, key, cb) {
	  throw new Error('removeCookie is not implemented');
	};

	Store.prototype.removeCookies = function(domain, path, cb) {
	  throw new Error('removeCookies is not implemented');
	};

	Store.prototype.getAllCookies = function(cb) {
	  throw new Error('getAllCookies is not implemented (therefore jar cannot be serialized)');
	};


/***/ },
/* 533 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Copyright (c) 2015, Salesforce.com, Inc.
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions are met:
	 *
	 * 1. Redistributions of source code must retain the above copyright notice,
	 * this list of conditions and the following disclaimer.
	 *
	 * 2. Redistributions in binary form must reproduce the above copyright notice,
	 * this list of conditions and the following disclaimer in the documentation
	 * and/or other materials provided with the distribution.
	 *
	 * 3. Neither the name of Salesforce.com nor the names of its contributors may
	 * be used to endorse or promote products derived from this software without
	 * specific prior written permission.
	 *
	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
	 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
	 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
	 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	 * POSSIBILITY OF SUCH DAMAGE.
	 */
	'use strict';
	var Store = __webpack_require__(532).Store;
	var permuteDomain = __webpack_require__(534).permuteDomain;
	var pathMatch = __webpack_require__(535).pathMatch;
	var util = __webpack_require__(471);

	function MemoryCookieStore() {
	  Store.call(this);
	  this.idx = {};
	}
	util.inherits(MemoryCookieStore, Store);
	exports.MemoryCookieStore = MemoryCookieStore;
	MemoryCookieStore.prototype.idx = null;

	// Since it's just a struct in RAM, this Store is synchronous
	MemoryCookieStore.prototype.synchronous = true;

	// force a default depth:
	MemoryCookieStore.prototype.inspect = function() {
	  return "{ idx: "+util.inspect(this.idx, false, 2)+' }';
	};

	MemoryCookieStore.prototype.findCookie = function(domain, path, key, cb) {
	  if (!this.idx[domain]) {
	    return cb(null,undefined);
	  }
	  if (!this.idx[domain][path]) {
	    return cb(null,undefined);
	  }
	  return cb(null,this.idx[domain][path][key]||null);
	};

	MemoryCookieStore.prototype.findCookies = function(domain, path, cb) {
	  var results = [];
	  if (!domain) {
	    return cb(null,[]);
	  }

	  var pathMatcher;
	  if (!path) {
	    // null means "all paths"
	    pathMatcher = function matchAll(domainIndex) {
	      for (var curPath in domainIndex) {
	        var pathIndex = domainIndex[curPath];
	        for (var key in pathIndex) {
	          results.push(pathIndex[key]);
	        }
	      }
	    };

	  } else {
	    pathMatcher = function matchRFC(domainIndex) {
	       //NOTE: we should use path-match algorithm from S5.1.4 here
	       //(see : https://github.com/ChromiumWebApps/chromium/blob/b3d3b4da8bb94c1b2e061600df106d590fda3620/net/cookies/canonical_cookie.cc#L299)
	       Object.keys(domainIndex).forEach(function (cookiePath) {
	         if (pathMatch(path, cookiePath)) {
	           var pathIndex = domainIndex[cookiePath];

	           for (var key in pathIndex) {
	             results.push(pathIndex[key]);
	           }
	         }
	       });
	     };
	  }

	  var domains = permuteDomain(domain) || [domain];
	  var idx = this.idx;
	  domains.forEach(function(curDomain) {
	    var domainIndex = idx[curDomain];
	    if (!domainIndex) {
	      return;
	    }
	    pathMatcher(domainIndex);
	  });

	  cb(null,results);
	};

	MemoryCookieStore.prototype.putCookie = function(cookie, cb) {
	  if (!this.idx[cookie.domain]) {
	    this.idx[cookie.domain] = {};
	  }
	  if (!this.idx[cookie.domain][cookie.path]) {
	    this.idx[cookie.domain][cookie.path] = {};
	  }
	  this.idx[cookie.domain][cookie.path][cookie.key] = cookie;
	  cb(null);
	};

	MemoryCookieStore.prototype.updateCookie = function(oldCookie, newCookie, cb) {
	  // updateCookie() may avoid updating cookies that are identical.  For example,
	  // lastAccessed may not be important to some stores and an equality
	  // comparison could exclude that field.
	  this.putCookie(newCookie,cb);
	};

	MemoryCookieStore.prototype.removeCookie = function(domain, path, key, cb) {
	  if (this.idx[domain] && this.idx[domain][path] && this.idx[domain][path][key]) {
	    delete this.idx[domain][path][key];
	  }
	  cb(null);
	};

	MemoryCookieStore.prototype.removeCookies = function(domain, path, cb) {
	  if (this.idx[domain]) {
	    if (path) {
	      delete this.idx[domain][path];
	    } else {
	      delete this.idx[domain];
	    }
	  }
	  return cb(null);
	};

	MemoryCookieStore.prototype.getAllCookies = function(cb) {
	  var cookies = [];
	  var idx = this.idx;

	  var domains = Object.keys(idx);
	  domains.forEach(function(domain) {
	    var paths = Object.keys(idx[domain]);
	    paths.forEach(function(path) {
	      var keys = Object.keys(idx[domain][path]);
	      keys.forEach(function(key) {
	        if (key !== null) {
	          cookies.push(idx[domain][path][key]);
	        }
	      });
	    });
	  });

	  // Sort by creationIndex so deserializing retains the creation order.
	  // When implementing your own store, this SHOULD retain the order too
	  cookies.sort(function(a,b) {
	    return (a.creationIndex||0) - (b.creationIndex||0);
	  });

	  cb(null, cookies);
	};


/***/ },
/* 534 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Copyright (c) 2015, Salesforce.com, Inc.
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions are met:
	 *
	 * 1. Redistributions of source code must retain the above copyright notice,
	 * this list of conditions and the following disclaimer.
	 *
	 * 2. Redistributions in binary form must reproduce the above copyright notice,
	 * this list of conditions and the following disclaimer in the documentation
	 * and/or other materials provided with the distribution.
	 *
	 * 3. Neither the name of Salesforce.com nor the names of its contributors may
	 * be used to endorse or promote products derived from this software without
	 * specific prior written permission.
	 *
	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
	 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
	 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
	 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	 * POSSIBILITY OF SUCH DAMAGE.
	 */
	"use strict";
	var pubsuffix = __webpack_require__(530);

	// Gives the permutation of all possible domainMatch()es of a given domain. The
	// array is in shortest-to-longest order.  Handy for indexing.
	function permuteDomain (domain) {
	  var pubSuf = pubsuffix.getPublicSuffix(domain);
	  if (!pubSuf) {
	    return null;
	  }
	  if (pubSuf == domain) {
	    return [domain];
	  }

	  var prefix = domain.slice(0, -(pubSuf.length + 1)); // ".example.com"
	  var parts = prefix.split('.').reverse();
	  var cur = pubSuf;
	  var permutations = [cur];
	  while (parts.length) {
	    cur = parts.shift() + '.' + cur;
	    permutations.push(cur);
	  }
	  return permutations;
	}

	exports.permuteDomain = permuteDomain;


/***/ },
/* 535 */
/***/ function(module, exports) {

	/*!
	 * Copyright (c) 2015, Salesforce.com, Inc.
	 * All rights reserved.
	 *
	 * Redistribution and use in source and binary forms, with or without
	 * modification, are permitted provided that the following conditions are met:
	 *
	 * 1. Redistributions of source code must retain the above copyright notice,
	 * this list of conditions and the following disclaimer.
	 *
	 * 2. Redistributions in binary form must reproduce the above copyright notice,
	 * this list of conditions and the following disclaimer in the documentation
	 * and/or other materials provided with the distribution.
	 *
	 * 3. Neither the name of Salesforce.com nor the names of its contributors may
	 * be used to endorse or promote products derived from this software without
	 * specific prior written permission.
	 *
	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
	 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
	 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
	 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
	 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
	 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
	 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
	 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
	 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
	 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
	 * POSSIBILITY OF SUCH DAMAGE.
	 */
	"use strict";
	/*
	 * "A request-path path-matches a given cookie-path if at least one of the
	 * following conditions holds:"
	 */
	function pathMatch (reqPath, cookiePath) {
	  // "o  The cookie-path and the request-path are identical."
	  if (cookiePath === reqPath) {
	    return true;
	  }

	  var idx = reqPath.indexOf(cookiePath);
	  if (idx === 0) {
	    // "o  The cookie-path is a prefix of the request-path, and the last
	    // character of the cookie-path is %x2F ("/")."
	    if (cookiePath.substr(-1) === "/") {
	      return true;
	    }

	    // " o  The cookie-path is a prefix of the request-path, and the first
	    // character of the request-path that is not included in the cookie- path
	    // is a %x2F ("/") character."
	    if (reqPath.substr(cookiePath.length, 1) === "/") {
	      return true;
	    }
	  }

	  return false;
	}

	exports.pathMatch = pathMatch;


/***/ },
/* 536 */
/***/ function(module, exports) {

	module.exports = {
		"author": {
			"name": "Jeremy Stashewsky",
			"email": "jstashewsky@salesforce.com"
		},
		"license": "BSD-3-Clause",
		"name": "tough-cookie",
		"description": "RFC6265 Cookies and Cookie Jar for node.js",
		"keywords": [
			"HTTP",
			"cookie",
			"cookies",
			"set-cookie",
			"cookiejar",
			"jar",
			"RFC6265",
			"RFC2965"
		],
		"version": "2.0.0",
		"homepage": "https://github.com/SalesforceEng/tough-cookie",
		"repository": {
			"type": "git",
			"url": "git://github.com/SalesforceEng/tough-cookie.git"
		},
		"bugs": {
			"url": "https://github.com/SalesforceEng/tough-cookie/issues"
		},
		"main": "./lib/cookie",
		"scripts": {
			"test": "vows test/*_test.js"
		},
		"engines": {
			"node": ">=0.10.0"
		},
		"devDependencies": {
			"vows": "0.7.0",
			"async": ">=0.1.12"
		},
		"gitHead": "a3af6104da7787c23bb98910109b0e0e8a10153c",
		"_id": "tough-cookie@2.0.0",
		"_shasum": "41ce08720b35cf90beb044dd2609fb19e928718f",
		"_from": "tough-cookie@>=0.12.0",
		"_npmVersion": "2.7.4",
		"_nodeVersion": "0.12.2",
		"_npmUser": {
			"name": "jstash",
			"email": "jstash@gmail.com"
		},
		"dist": {
			"shasum": "41ce08720b35cf90beb044dd2609fb19e928718f",
			"tarball": "http://registry.npmjs.org/tough-cookie/-/tough-cookie-2.0.0.tgz"
		},
		"maintainers": [
			{
				"name": "jstash",
				"email": "jeremy@goinstant.com"
			},
			{
				"name": "goinstant",
				"email": "services@goinstant.com"
			}
		],
		"directories": {},
		"_resolved": "https://registry.npmjs.org/tough-cookie/-/tough-cookie-2.0.0.tgz",
		"readme": "ERROR: No README data found!"
	}

/***/ },
/* 537 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var jsonSafeStringify = __webpack_require__(538)
	  , crypto = __webpack_require__(539)

	function deferMethod() {
	  if (typeof setImmediate === 'undefined') {
	    return process.nextTick
	  }

	  return setImmediate
	}

	function isFunction(value) {
	  return typeof value === 'function'
	}

	function paramsHaveRequestBody(params) {
	  return (
	    params.body ||
	    params.requestBodyStream ||
	    (params.json && typeof params.json !== 'boolean') ||
	    params.multipart
	  )
	}

	function safeStringify (obj) {
	  var ret
	  try {
	    ret = JSON.stringify(obj)
	  } catch (e) {
	    ret = jsonSafeStringify(obj)
	  }
	  return ret
	}

	function md5 (str) {
	  return crypto.createHash('md5').update(str).digest('hex')
	}

	function isReadStream (rs) {
	  return rs.readable && rs.path && rs.mode
	}

	function toBase64 (str) {
	  return (new Buffer(str || '', 'utf8')).toString('base64')
	}

	function copy (obj) {
	  var o = {}
	  Object.keys(obj).forEach(function (i) {
	    o[i] = obj[i]
	  })
	  return o
	}

	function version () {
	  var numbers = process.version.replace('v', '').split('.')
	  return {
	    major: parseInt(numbers[0], 10),
	    minor: parseInt(numbers[1], 10),
	    patch: parseInt(numbers[2], 10)
	  }
	}

	exports.isFunction            = isFunction
	exports.paramsHaveRequestBody = paramsHaveRequestBody
	exports.safeStringify         = safeStringify
	exports.md5                   = md5
	exports.isReadStream          = isReadStream
	exports.toBase64              = toBase64
	exports.copy                  = copy
	exports.version               = version
	exports.defer                 = deferMethod()


/***/ },
/* 538 */
/***/ function(module, exports) {

	exports = module.exports = stringify
	exports.getSerialize = serializer

	function stringify(obj, replacer, spaces, cycleReplacer) {
	  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)
	}

	function serializer(replacer, cycleReplacer) {
	  var stack = [], keys = []

	  if (cycleReplacer == null) cycleReplacer = function(key, value) {
	    if (stack[0] === value) return "[Circular ~]"
	    return "[Circular ~." + keys.slice(0, stack.indexOf(value)).join(".") + "]"
	  }

	  return function(key, value) {
	    if (stack.length > 0) {
	      var thisPos = stack.indexOf(this)
	      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)
	      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)
	      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)
	    }
	    else stack.push(value)

	    return replacer == null ? value : replacer.call(this, key, value)
	  }
	}


/***/ },
/* 539 */
/***/ function(module, exports) {

	module.exports = require("crypto");

/***/ },
/* 540 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var http = __webpack_require__(21)
	  , https = __webpack_require__(22)
	  , url = __webpack_require__(13)
	  , util = __webpack_require__(471)
	  , stream = __webpack_require__(480)
	  , zlib = __webpack_require__(541)
	  , bl = __webpack_require__(542)
	  , hawk = __webpack_require__(553)
	  , aws = __webpack_require__(569)
	  , httpSignature = __webpack_require__(570)
	  , mime = __webpack_require__(585)
	  , stringstream = __webpack_require__(588)
	  , caseless = __webpack_require__(590)
	  , ForeverAgent = __webpack_require__(591)
	  , FormData = __webpack_require__(593)
	  , helpers = __webpack_require__(537)
	  , cookies = __webpack_require__(527)
	  , getProxyFromURI = __webpack_require__(597)
	  , Querystring = __webpack_require__(598).Querystring
	  , Har = __webpack_require__(604).Har
	  , Auth = __webpack_require__(630).Auth
	  , OAuth = __webpack_require__(632).OAuth
	  , Multipart = __webpack_require__(634).Multipart
	  , Redirect = __webpack_require__(636).Redirect
	  , Tunnel = __webpack_require__(637).Tunnel

	var safeStringify = helpers.safeStringify
	  , isReadStream = helpers.isReadStream
	  , toBase64 = helpers.toBase64
	  , defer = helpers.defer
	  , copy = helpers.copy
	  , version = helpers.version
	  , globalCookieJar = cookies.jar()


	var globalPool = {}

	function filterForNonReserved(reserved, options) {
	  // Filter out properties that are not reserved.
	  // Reserved values are passed in at call site.

	  var object = {}
	  for (var i in options) {
	    var notReserved = (reserved.indexOf(i) === -1)
	    if (notReserved) {
	      object[i] = options[i]
	    }
	  }
	  return object
	}

	function filterOutReservedFunctions(reserved, options) {
	  // Filter out properties that are functions and are reserved.
	  // Reserved values are passed in at call site.

	  var object = {}
	  for (var i in options) {
	    var isReserved = !(reserved.indexOf(i) === -1)
	    var isFunction = (typeof options[i] === 'function')
	    if (!(isReserved && isFunction)) {
	      object[i] = options[i]
	    }
	  }
	  return object

	}

	// Function for properly handling a connection error
	function connectionErrorHandler(error) {
	  var socket = this
	  if (socket.res) {
	    if (socket.res.request) {
	      socket.res.request.emit('error', error)
	    } else {
	      socket.res.emit('error', error)
	    }
	  } else {
	    socket._httpMessage.emit('error', error)
	  }
	}

	// Return a simpler request object to allow serialization
	function requestToJSON() {
	  var self = this
	  return {
	    uri: self.uri,
	    method: self.method,
	    headers: self.headers
	  }
	}

	// Return a simpler response object to allow serialization
	function responseToJSON() {
	  var self = this
	  return {
	    statusCode: self.statusCode,
	    body: self.body,
	    headers: self.headers,
	    request: requestToJSON.call(self.request)
	  }
	}

	function Request (options) {
	  // if given the method property in options, set property explicitMethod to true

	  // extend the Request instance with any non-reserved properties
	  // remove any reserved functions from the options object
	  // set Request instance to be readable and writable
	  // call init

	  var self = this

	  // start with HAR, then override with additional options
	  if (options.har) {
	    self._har = new Har(self)
	    options = self._har.options(options)
	  }

	  stream.Stream.call(self)
	  var reserved = Object.keys(Request.prototype)
	  var nonReserved = filterForNonReserved(reserved, options)

	  stream.Stream.call(self)
	  util._extend(self, nonReserved)
	  options = filterOutReservedFunctions(reserved, options)

	  self.readable = true
	  self.writable = true
	  if (options.method) {
	    self.explicitMethod = true
	  }
	  self._qs = new Querystring(self)
	  self._auth = new Auth(self)
	  self._oauth = new OAuth(self)
	  self._multipart = new Multipart(self)
	  self._redirect = new Redirect(self)
	  self._tunnel = new Tunnel(self)
	  self.init(options)
	}

	util.inherits(Request, stream.Stream)

	// Debugging
	Request.debug = process.env.NODE_DEBUG && /\brequest\b/.test(process.env.NODE_DEBUG)
	function debug() {
	  if (Request.debug) {
	    console.error('REQUEST %s', util.format.apply(util, arguments))
	  }
	}
	Request.prototype.debug = debug

	Request.prototype.init = function (options) {
	  // init() contains all the code to setup the request object.
	  // the actual outgoing request is not started until start() is called
	  // this function is called from both the constructor and on redirect.
	  var self = this
	  if (!options) {
	    options = {}
	  }
	  self.headers = self.headers ? copy(self.headers) : {}

	  // Delete headers with value undefined since they break
	  // ClientRequest.OutgoingMessage.setHeader in node 0.12
	  for (var headerName in self.headers) {
	    if (typeof self.headers[headerName] === 'undefined') {
	      delete self.headers[headerName]
	    }
	  }

	  caseless.httpify(self, self.headers)

	  if (!self.method) {
	    self.method = options.method || 'GET'
	  }
	  if (!self.localAddress) {
	    self.localAddress = options.localAddress
	  }

	  self._qs.init(options)

	  debug(options)
	  if (!self.pool && self.pool !== false) {
	    self.pool = globalPool
	  }
	  self.dests = self.dests || []
	  self.__isRequestRequest = true

	  // Protect against double callback
	  if (!self._callback && self.callback) {
	    self._callback = self.callback
	    self.callback = function () {
	      if (self._callbackCalled) {
	        return // Print a warning maybe?
	      }
	      self._callbackCalled = true
	      self._callback.apply(self, arguments)
	    }
	    self.on('error', self.callback.bind())
	    self.on('complete', self.callback.bind(self, null))
	  }

	  // People use this property instead all the time, so support it
	  if (!self.uri && self.url) {
	    self.uri = self.url
	    delete self.url
	  }

	  // If there's a baseUrl, then use it as the base URL (i.e. uri must be
	  // specified as a relative path and is appended to baseUrl).
	  if (self.baseUrl) {
	    if (typeof self.baseUrl !== 'string') {
	      return self.emit('error', new Error('options.baseUrl must be a string'))
	    }

	    if (typeof self.uri !== 'string') {
	      return self.emit('error', new Error('options.uri must be a string when using options.baseUrl'))
	    }

	    if (self.uri.indexOf('//') === 0 || self.uri.indexOf('://') !== -1) {
	      return self.emit('error', new Error('options.uri must be a path when using options.baseUrl'))
	    }

	    // Handle all cases to make sure that there's only one slash between
	    // baseUrl and uri.
	    var baseUrlEndsWithSlash = self.baseUrl.lastIndexOf('/') === self.baseUrl.length - 1
	    var uriStartsWithSlash = self.uri.indexOf('/') === 0

	    if (baseUrlEndsWithSlash && uriStartsWithSlash) {
	      self.uri = self.baseUrl + self.uri.slice(1)
	    } else if (baseUrlEndsWithSlash || uriStartsWithSlash) {
	      self.uri = self.baseUrl + self.uri
	    } else if (self.uri === '') {
	      self.uri = self.baseUrl
	    } else {
	      self.uri = self.baseUrl + '/' + self.uri
	    }
	    delete self.baseUrl
	  }

	  // A URI is needed by this point, emit error if we haven't been able to get one
	  if (!self.uri) {
	    return self.emit('error', new Error('options.uri is a required argument'))
	  }

	  // If a string URI/URL was given, parse it into a URL object
	  if (typeof self.uri === 'string') {
	    self.uri = url.parse(self.uri)
	  }

	  // DEPRECATED: Warning for users of the old Unix Sockets URL Scheme
	  if (self.uri.protocol === 'unix:') {
	    return self.emit('error', new Error('`unix://` URL scheme is no longer supported. Please use the format `http://unix:SOCKET:PATH`'))
	  }

	  // Support Unix Sockets
	  if (self.uri.host === 'unix') {
	    // Get the socket & request paths from the URL
	    var unixParts = self.uri.path.split(':')
	      , host = unixParts[0]
	      , path = unixParts[1]
	    // Apply unix properties to request
	    self.socketPath = host
	    self.uri.pathname = path
	    self.uri.path = path
	    self.uri.host = host
	    self.uri.hostname = host
	    self.uri.isUnix = true
	  }

	  if (self.strictSSL === false) {
	    self.rejectUnauthorized = false
	  }

	  if (!self.uri.pathname) {self.uri.pathname = '/'}

	  if (!(self.uri.host || (self.uri.hostname && self.uri.port)) && !self.uri.isUnix) {
	    // Invalid URI: it may generate lot of bad errors, like 'TypeError: Cannot call method `indexOf` of undefined' in CookieJar
	    // Detect and reject it as soon as possible
	    var faultyUri = url.format(self.uri)
	    var message = 'Invalid URI "' + faultyUri + '"'
	    if (Object.keys(options).length === 0) {
	      // No option ? This can be the sign of a redirect
	      // As this is a case where the user cannot do anything (they didn't call request directly with this URL)
	      // they should be warned that it can be caused by a redirection (can save some hair)
	      message += '. This can be caused by a crappy redirection.'
	    }
	    // This error was fatal
	    return self.emit('error', new Error(message))
	  }

	  if (!self.hasOwnProperty('proxy')) {
	    self.proxy = getProxyFromURI(self.uri)
	  }

	  self.tunnel = self._tunnel.isEnabled(options)
	  if (self.proxy) {
	    self._tunnel.setup(options)
	  }

	  self._redirect.onRequest(options)

	  self.setHost = false
	  if (!self.hasHeader('host')) {
	    var hostHeaderName = self.originalHostHeaderName || 'host'
	    self.setHeader(hostHeaderName, self.uri.hostname)
	    if (self.uri.port) {
	      if ( !(self.uri.port === 80 && self.uri.protocol === 'http:') &&
	           !(self.uri.port === 443 && self.uri.protocol === 'https:') ) {
	        self.setHeader(hostHeaderName, self.getHeader('host') + (':' + self.uri.port) )
	      }
	    }
	    self.setHost = true
	  }

	  self.jar(self._jar || options.jar)

	  if (!self.uri.port) {
	    if (self.uri.protocol === 'http:') {self.uri.port = 80}
	    else if (self.uri.protocol === 'https:') {self.uri.port = 443}
	  }

	  if (self.proxy && !self.tunnel) {
	    self.port = self.proxy.port
	    self.host = self.proxy.hostname
	  } else {
	    self.port = self.uri.port
	    self.host = self.uri.hostname
	  }

	  if (options.form) {
	    self.form(options.form)
	  }

	  if (options.formData) {
	    var formData = options.formData
	    var requestForm = self.form()
	    var appendFormValue = function (key, value) {
	      if (value.hasOwnProperty('value') && value.hasOwnProperty('options')) {
	        requestForm.append(key, value.value, value.options)
	      } else {
	        requestForm.append(key, value)
	      }
	    }
	    for (var formKey in formData) {
	      if (formData.hasOwnProperty(formKey)) {
	        var formValue = formData[formKey]
	        if (formValue instanceof Array) {
	          for (var j = 0; j < formValue.length; j++) {
	            appendFormValue(formKey, formValue[j])
	          }
	        } else {
	          appendFormValue(formKey, formValue)
	        }
	      }
	    }
	  }

	  if (options.qs) {
	    self.qs(options.qs)
	  }

	  if (self.uri.path) {
	    self.path = self.uri.path
	  } else {
	    self.path = self.uri.pathname + (self.uri.search || '')
	  }

	  if (self.path.length === 0) {
	    self.path = '/'
	  }

	  // Auth must happen last in case signing is dependent on other headers
	  if (options.aws) {
	    self.aws(options.aws)
	  }

	  if (options.hawk) {
	    self.hawk(options.hawk)
	  }

	  if (options.httpSignature) {
	    self.httpSignature(options.httpSignature)
	  }

	  if (options.auth) {
	    if (Object.prototype.hasOwnProperty.call(options.auth, 'username')) {
	      options.auth.user = options.auth.username
	    }
	    if (Object.prototype.hasOwnProperty.call(options.auth, 'password')) {
	      options.auth.pass = options.auth.password
	    }

	    self.auth(
	      options.auth.user,
	      options.auth.pass,
	      options.auth.sendImmediately,
	      options.auth.bearer
	    )
	  }

	  if (self.gzip && !self.hasHeader('accept-encoding')) {
	    self.setHeader('accept-encoding', 'gzip')
	  }

	  if (self.uri.auth && !self.hasHeader('authorization')) {
	    var uriAuthPieces = self.uri.auth.split(':').map(function(item) {return self._qs.unescape(item)})
	    self.auth(uriAuthPieces[0], uriAuthPieces.slice(1).join(':'), true)
	  }

	  if (!self.tunnel && self.proxy && self.proxy.auth && !self.hasHeader('proxy-authorization')) {
	    var proxyAuthPieces = self.proxy.auth.split(':').map(function(item) {return self._qs.unescape(item)})
	    var authHeader = 'Basic ' + toBase64(proxyAuthPieces.join(':'))
	    self.setHeader('proxy-authorization', authHeader)
	  }

	  if (self.proxy && !self.tunnel) {
	    self.path = (self.uri.protocol + '//' + self.uri.host + self.path)
	  }

	  if (options.json) {
	    self.json(options.json)
	  }
	  if (options.multipart) {
	    self.multipart(options.multipart)
	  }

	  if (options.time) {
	    self.timing = true
	    self.elapsedTime = self.elapsedTime || 0
	  }

	  function setContentLength () {
	    if (!self.hasHeader('content-length')) {
	      var length
	      if (typeof self.body === 'string') {
	        length = Buffer.byteLength(self.body)
	      }
	      else if (Array.isArray(self.body)) {
	        length = self.body.reduce(function (a, b) {return a + b.length}, 0)
	      }
	      else {
	        length = self.body.length
	      }

	      if (length) {
	        self.setHeader('content-length', length)
	      } else {
	        self.emit('error', new Error('Argument error, options.body.'))
	      }
	    }
	  }
	  if (self.body) {
	    setContentLength()
	  }

	  if (options.oauth) {
	    self.oauth(options.oauth)
	  } else if (self._oauth.params && self.hasHeader('authorization')) {
	    self.oauth(self._oauth.params)
	  }

	  var protocol = self.proxy && !self.tunnel ? self.proxy.protocol : self.uri.protocol
	    , defaultModules = {'http:':http, 'https:':https}
	    , httpModules = self.httpModules || {}

	  self.httpModule = httpModules[protocol] || defaultModules[protocol]

	  if (!self.httpModule) {
	    return self.emit('error', new Error('Invalid protocol: ' + protocol))
	  }

	  if (options.ca) {
	    self.ca = options.ca
	  }

	  if (!self.agent) {
	    if (options.agentOptions) {
	      self.agentOptions = options.agentOptions
	    }

	    if (options.agentClass) {
	      self.agentClass = options.agentClass
	    } else if (options.forever) {
	      var v = version()
	      // use ForeverAgent in node 0.10- only
	      if (v.major === 0 && v.minor <= 10) {
	        self.agentClass = protocol === 'http:' ? ForeverAgent : ForeverAgent.SSL
	      } else {
	        self.agentClass = self.httpModule.Agent
	        self.agentOptions = self.agentOptions || {}
	        self.agentOptions.keepAlive = true
	      }
	    } else {
	      self.agentClass = self.httpModule.Agent
	    }
	  }

	  if (self.pool === false) {
	    self.agent = false
	  } else {
	    self.agent = self.agent || self.getNewAgent()
	  }

	  self.on('pipe', function (src) {
	    if (self.ntick && self._started) {
	      self.emit('error', new Error('You cannot pipe to this stream after the outbound request has started.'))
	    }
	    self.src = src
	    if (isReadStream(src)) {
	      if (!self.hasHeader('content-type')) {
	        self.setHeader('content-type', mime.lookup(src.path))
	      }
	    } else {
	      if (src.headers) {
	        for (var i in src.headers) {
	          if (!self.hasHeader(i)) {
	            self.setHeader(i, src.headers[i])
	          }
	        }
	      }
	      if (self._json && !self.hasHeader('content-type')) {
	        self.setHeader('content-type', 'application/json')
	      }
	      if (src.method && !self.explicitMethod) {
	        self.method = src.method
	      }
	    }

	    // self.on('pipe', function () {
	    //   console.error('You have already piped to this stream. Pipeing twice is likely to break the request.')
	    // })
	  })

	  defer(function () {
	    if (self._aborted) {
	      return
	    }

	    var end = function () {
	      if (self._form) {
	        if (!self._auth.hasAuth) {
	          self._form.pipe(self)
	        }
	        else if (self._auth.hasAuth && self._auth.sentAuth) {
	          self._form.pipe(self)
	        }
	      }
	      if (self._multipart && self._multipart.chunked) {
	        self._multipart.body.pipe(self)
	      }
	      if (self.body) {
	        setContentLength()
	        if (Array.isArray(self.body)) {
	          self.body.forEach(function (part) {
	            self.write(part)
	          })
	        } else {
	          self.write(self.body)
	        }
	        self.end()
	      } else if (self.requestBodyStream) {
	        console.warn('options.requestBodyStream is deprecated, please pass the request object to stream.pipe.')
	        self.requestBodyStream.pipe(self)
	      } else if (!self.src) {
	        if (self._auth.hasAuth && !self._auth.sentAuth) {
	          self.end()
	          return
	        }
	        if (self.method !== 'GET' && typeof self.method !== 'undefined') {
	          self.setHeader('content-length', 0)
	        }
	        self.end()
	      }
	    }

	    if (self._form && !self.hasHeader('content-length')) {
	      // Before ending the request, we had to compute the length of the whole form, asyncly
	      self.setHeader(self._form.getHeaders(), true)
	      self._form.getLength(function (err, length) {
	        if (!err) {
	          self.setHeader('content-length', length)
	        }
	        end()
	      })
	    } else {
	      end()
	    }

	    self.ntick = true
	  })

	}

	// Must call this when following a redirect from https to http or vice versa
	// Attempts to keep everything as identical as possible, but update the
	// httpModule, Tunneling agent, and/or Forever Agent in use.
	Request.prototype._updateProtocol = function () {
	  var self = this
	  var protocol = self.uri.protocol

	  if (protocol === 'https:' || self.tunnel) {
	    // previously was doing http, now doing https
	    // if it's https, then we might need to tunnel now.
	    if (self.proxy) {
	      if (self._tunnel.setup()) {
	        return
	      }
	    }

	    self.httpModule = https
	    switch (self.agentClass) {
	      case ForeverAgent:
	        self.agentClass = ForeverAgent.SSL
	        break
	      case http.Agent:
	        self.agentClass = https.Agent
	        break
	      default:
	        // nothing we can do.  Just hope for the best.
	        return
	    }

	    // if there's an agent, we need to get a new one.
	    if (self.agent) {
	      self.agent = self.getNewAgent()
	    }

	  } else {
	    // previously was doing https, now doing http
	    self.httpModule = http
	    switch (self.agentClass) {
	      case ForeverAgent.SSL:
	        self.agentClass = ForeverAgent
	        break
	      case https.Agent:
	        self.agentClass = http.Agent
	        break
	      default:
	        // nothing we can do.  just hope for the best
	        return
	    }

	    // if there's an agent, then get a new one.
	    if (self.agent) {
	      self.agent = null
	      self.agent = self.getNewAgent()
	    }
	  }
	}

	Request.prototype.getNewAgent = function () {
	  var self = this
	  var Agent = self.agentClass
	  var options = {}
	  if (self.agentOptions) {
	    for (var i in self.agentOptions) {
	      options[i] = self.agentOptions[i]
	    }
	  }
	  if (self.ca) {
	    options.ca = self.ca
	  }
	  if (self.ciphers) {
	    options.ciphers = self.ciphers
	  }
	  if (self.secureProtocol) {
	    options.secureProtocol = self.secureProtocol
	  }
	  if (self.secureOptions) {
	    options.secureOptions = self.secureOptions
	  }
	  if (typeof self.rejectUnauthorized !== 'undefined') {
	    options.rejectUnauthorized = self.rejectUnauthorized
	  }

	  if (self.cert && self.key) {
	    options.key = self.key
	    options.cert = self.cert
	  }

	  if (self.pfx) {
	    options.pfx = self.pfx
	  }

	  if (self.passphrase) {
	    options.passphrase = self.passphrase
	  }

	  var poolKey = ''

	  // different types of agents are in different pools
	  if (Agent !== self.httpModule.Agent) {
	    poolKey += Agent.name
	  }

	  // ca option is only relevant if proxy or destination are https
	  var proxy = self.proxy
	  if (typeof proxy === 'string') {
	    proxy = url.parse(proxy)
	  }
	  var isHttps = (proxy && proxy.protocol === 'https:') || this.uri.protocol === 'https:'

	  if (isHttps) {
	    if (options.ca) {
	      if (poolKey) {
	        poolKey += ':'
	      }
	      poolKey += options.ca
	    }

	    if (typeof options.rejectUnauthorized !== 'undefined') {
	      if (poolKey) {
	        poolKey += ':'
	      }
	      poolKey += options.rejectUnauthorized
	    }

	    if (options.cert) {
	      if (poolKey) {
	        poolKey += ':'
	      }
	      poolKey += options.cert.toString('ascii') + options.key.toString('ascii')
	    }

	    if (options.pfx) {
	      if (poolKey) {
	        poolKey += ':'
	      }
	      poolKey += options.pfx.toString('ascii')
	    }

	    if (options.ciphers) {
	      if (poolKey) {
	        poolKey += ':'
	      }
	      poolKey += options.ciphers
	    }

	    if (options.secureProtocol) {
	      if (poolKey) {
	        poolKey += ':'
	      }
	      poolKey += options.secureProtocol
	    }

	    if (options.secureOptions) {
	      if (poolKey) {
	        poolKey += ':'
	      }
	      poolKey += options.secureOptions
	    }
	  }

	  if (self.pool === globalPool && !poolKey && Object.keys(options).length === 0 && self.httpModule.globalAgent) {
	    // not doing anything special.  Use the globalAgent
	    return self.httpModule.globalAgent
	  }

	  // we're using a stored agent.  Make sure it's protocol-specific
	  poolKey = self.uri.protocol + poolKey

	  // generate a new agent for this setting if none yet exists
	  if (!self.pool[poolKey]) {
	    self.pool[poolKey] = new Agent(options)
	    // properly set maxSockets on new agents
	    if (self.pool.maxSockets) {
	      self.pool[poolKey].maxSockets = self.pool.maxSockets
	    }
	  }

	  return self.pool[poolKey]
	}

	Request.prototype.start = function () {
	  // start() is called once we are ready to send the outgoing HTTP request.
	  // this is usually called on the first write(), end() or on nextTick()
	  var self = this

	  if (self._aborted) {
	    return
	  }

	  self._started = true
	  self.method = self.method || 'GET'
	  self.href = self.uri.href

	  if (self.src && self.src.stat && self.src.stat.size && !self.hasHeader('content-length')) {
	    self.setHeader('content-length', self.src.stat.size)
	  }
	  if (self._aws) {
	    self.aws(self._aws, true)
	  }

	  // We have a method named auth, which is completely different from the http.request
	  // auth option.  If we don't remove it, we're gonna have a bad time.
	  var reqOptions = copy(self)
	  delete reqOptions.auth

	  debug('make request', self.uri.href)

	  self.req = self.httpModule.request(reqOptions)

	  if (self.timing) {
	    self.startTime = new Date().getTime()
	  }

	  if (self.timeout && !self.timeoutTimer) {
	    var timeout = self.timeout < 0 ? 0 : self.timeout
	    // Set a timeout in memory - this block will throw if the server takes more
	    // than `timeout` to write the HTTP status and headers (corresponding to
	    // the on('response') event on the client). NB: this measures wall-clock
	    // time, not the time between bytes sent by the server.
	    self.timeoutTimer = setTimeout(function () {
	      var connectTimeout = self.req.socket && self.req.socket.readable === false
	      self.abort()
	      var e = new Error('ETIMEDOUT')
	      e.code = 'ETIMEDOUT'
	      e.connect = connectTimeout
	      self.emit('error', e)
	    }, timeout)

	    if (self.req.setTimeout) { // only works on node 0.6+
	      // Set an additional timeout on the socket, via the `setsockopt` syscall.
	      // This timeout sets the amount of time to wait *between* bytes sent
	      // from the server, and may or may not correspond to the wall-clock time
	      // elapsed from the start of the request.
	      //
	      // In particular, it's useful for erroring if the server fails to send
	      // data halfway through streaming a response.
	      self.req.setTimeout(timeout, function () {
	        if (self.req) {
	          self.req.abort()
	          var e = new Error('ESOCKETTIMEDOUT')
	          e.code = 'ESOCKETTIMEDOUT'
	          e.connect = false
	          self.emit('error', e)
	        }
	      })
	    }
	  }

	  self.req.on('response', self.onRequestResponse.bind(self))
	  self.req.on('error', self.onRequestError.bind(self))
	  self.req.on('drain', function() {
	    self.emit('drain')
	  })
	  self.req.on('socket', function(socket) {
	    self.emit('socket', socket)
	  })

	  self.on('end', function() {
	    if ( self.req.connection ) {
	      self.req.connection.removeListener('error', connectionErrorHandler)
	    }
	  })
	  self.emit('request', self.req)
	}

	Request.prototype.onRequestError = function (error) {
	  var self = this
	  if (self._aborted) {
	    return
	  }
	  if (self.req && self.req._reusedSocket && error.code === 'ECONNRESET'
	      && self.agent.addRequestNoreuse) {
	    self.agent = { addRequest: self.agent.addRequestNoreuse.bind(self.agent) }
	    self.start()
	    self.req.end()
	    return
	  }
	  if (self.timeout && self.timeoutTimer) {
	    clearTimeout(self.timeoutTimer)
	    self.timeoutTimer = null
	  }
	  self.emit('error', error)
	}

	Request.prototype.onRequestResponse = function (response) {
	  var self = this
	  debug('onRequestResponse', self.uri.href, response.statusCode, response.headers)
	  response.on('end', function() {
	    if (self.timing) {
	      self.elapsedTime += (new Date().getTime() - self.startTime)
	      debug('elapsed time', self.elapsedTime)
	      response.elapsedTime = self.elapsedTime
	    }
	    debug('response end', self.uri.href, response.statusCode, response.headers)
	  })

	  // The check on response.connection is a workaround for browserify.
	  if (response.connection && response.connection.listeners('error').indexOf(connectionErrorHandler) === -1) {
	    response.connection.setMaxListeners(0)
	    response.connection.once('error', connectionErrorHandler)
	  }
	  if (self._aborted) {
	    debug('aborted', self.uri.href)
	    response.resume()
	    return
	  }

	  self.response = response
	  response.request = self
	  response.toJSON = responseToJSON

	  // XXX This is different on 0.10, because SSL is strict by default
	  if (self.httpModule === https &&
	      self.strictSSL && (!response.hasOwnProperty('socket') ||
	      !response.socket.authorized)) {
	    debug('strict ssl error', self.uri.href)
	    var sslErr = response.hasOwnProperty('socket') ? response.socket.authorizationError : self.uri.href + ' does not support SSL'
	    self.emit('error', new Error('SSL Error: ' + sslErr))
	    return
	  }

	  // Save the original host before any redirect (if it changes, we need to
	  // remove any authorization headers).  Also remember the case of the header
	  // name because lots of broken servers expect Host instead of host and we
	  // want the caller to be able to specify this.
	  self.originalHost = self.getHeader('host')
	  if (!self.originalHostHeaderName) {
	    self.originalHostHeaderName = self.hasHeader('host')
	  }
	  if (self.setHost) {
	    self.removeHeader('host')
	  }
	  if (self.timeout && self.timeoutTimer) {
	    clearTimeout(self.timeoutTimer)
	    self.timeoutTimer = null
	  }

	  var targetCookieJar = (self._jar && self._jar.setCookie) ? self._jar : globalCookieJar
	  var addCookie = function (cookie) {
	    //set the cookie if it's domain in the href's domain.
	    try {
	      targetCookieJar.setCookie(cookie, self.uri.href, {ignoreError: true})
	    } catch (e) {
	      self.emit('error', e)
	    }
	  }

	  response.caseless = caseless(response.headers)

	  if (response.caseless.has('set-cookie') && (!self._disableCookies)) {
	    var headerName = response.caseless.has('set-cookie')
	    if (Array.isArray(response.headers[headerName])) {
	      response.headers[headerName].forEach(addCookie)
	    } else {
	      addCookie(response.headers[headerName])
	    }
	  }

	  if (self._redirect.onResponse(response)) {
	    return // Ignore the rest of the response
	  } else {
	    // Be a good stream and emit end when the response is finished.
	    // Hack to emit end on close because of a core bug that never fires end
	    response.on('close', function () {
	      if (!self._ended) {
	        self.response.emit('end')
	      }
	    })

	    response.on('end', function () {
	      self._ended = true
	    })

	    var responseContent
	    if (self.gzip) {
	      var contentEncoding = response.headers['content-encoding'] || 'identity'
	      contentEncoding = contentEncoding.trim().toLowerCase()

	      if (contentEncoding === 'gzip') {
	        responseContent = zlib.createGunzip()
	        response.pipe(responseContent)
	      } else {
	        // Since previous versions didn't check for Content-Encoding header,
	        // ignore any invalid values to preserve backwards-compatibility
	        if (contentEncoding !== 'identity') {
	          debug('ignoring unrecognized Content-Encoding ' + contentEncoding)
	        }
	        responseContent = response
	      }
	    } else {
	      responseContent = response
	    }

	    if (self.encoding) {
	      if (self.dests.length !== 0) {
	        console.error('Ignoring encoding parameter as this stream is being piped to another stream which makes the encoding option invalid.')
	      } else if (responseContent.setEncoding) {
	        responseContent.setEncoding(self.encoding)
	      } else {
	        // Should only occur on node pre-v0.9.4 (joyent/node@9b5abe5) with
	        // zlib streams.
	        // If/When support for 0.9.4 is dropped, this should be unnecessary.
	        responseContent = responseContent.pipe(stringstream(self.encoding))
	      }
	    }

	    if (self._paused) {
	      responseContent.pause()
	    }

	    self.responseContent = responseContent

	    self.emit('response', response)

	    self.dests.forEach(function (dest) {
	      self.pipeDest(dest)
	    })

	    responseContent.on('data', function (chunk) {
	      self._destdata = true
	      self.emit('data', chunk)
	    })
	    responseContent.on('end', function (chunk) {
	      self.emit('end', chunk)
	    })
	    responseContent.on('error', function (error) {
	      self.emit('error', error)
	    })
	    responseContent.on('close', function () {self.emit('close')})

	    if (self.callback) {
	      var buffer = bl()
	        , strings = []

	      self.on('data', function (chunk) {
	        if (Buffer.isBuffer(chunk)) {
	          buffer.append(chunk)
	        } else {
	          strings.push(chunk)
	        }
	      })
	      self.on('end', function () {
	        debug('end event', self.uri.href)
	        if (self._aborted) {
	          debug('aborted', self.uri.href)
	          return
	        }

	        if (buffer.length) {
	          debug('has body', self.uri.href, buffer.length)
	          if (self.encoding === null) {
	            // response.body = buffer
	            // can't move to this until https://github.com/rvagg/bl/issues/13
	            response.body = buffer.slice()
	          } else {
	            response.body = buffer.toString(self.encoding)
	          }
	        } else if (strings.length) {
	          // The UTF8 BOM [0xEF,0xBB,0xBF] is converted to [0xFE,0xFF] in the JS UTC16/UCS2 representation.
	          // Strip this value out when the encoding is set to 'utf8', as upstream consumers won't expect it and it breaks JSON.parse().
	          if (self.encoding === 'utf8' && strings[0].length > 0 && strings[0][0] === '\uFEFF') {
	            strings[0] = strings[0].substring(1)
	          }
	          response.body = strings.join('')
	        }

	        if (self._json) {
	          try {
	            response.body = JSON.parse(response.body, self._jsonReviver)
	          } catch (e) {
	            debug('invalid JSON received', self.uri.href)
	          }
	        }
	        debug('emitting complete', self.uri.href)
	        if (typeof response.body === 'undefined' && !self._json) {
	          response.body = self.encoding === null ? new Buffer(0) : ''
	        }
	        self.emit('complete', response, response.body)
	      })
	    }
	    //if no callback
	    else {
	      self.on('end', function () {
	        if (self._aborted) {
	          debug('aborted', self.uri.href)
	          return
	        }
	        self.emit('complete', response)
	      })
	    }
	  }
	  debug('finish init function', self.uri.href)
	}

	Request.prototype.abort = function () {
	  var self = this
	  self._aborted = true

	  if (self.req) {
	    self.req.abort()
	  }
	  else if (self.response) {
	    self.response.abort()
	  }

	  self.emit('abort')
	}

	Request.prototype.pipeDest = function (dest) {
	  var self = this
	  var response = self.response
	  // Called after the response is received
	  if (dest.headers && !dest.headersSent) {
	    if (response.caseless.has('content-type')) {
	      var ctname = response.caseless.has('content-type')
	      if (dest.setHeader) {
	        dest.setHeader(ctname, response.headers[ctname])
	      }
	      else {
	        dest.headers[ctname] = response.headers[ctname]
	      }
	    }

	    if (response.caseless.has('content-length')) {
	      var clname = response.caseless.has('content-length')
	      if (dest.setHeader) {
	        dest.setHeader(clname, response.headers[clname])
	      } else {
	        dest.headers[clname] = response.headers[clname]
	      }
	    }
	  }
	  if (dest.setHeader && !dest.headersSent) {
	    for (var i in response.headers) {
	      // If the response content is being decoded, the Content-Encoding header
	      // of the response doesn't represent the piped content, so don't pass it.
	      if (!self.gzip || i !== 'content-encoding') {
	        dest.setHeader(i, response.headers[i])
	      }
	    }
	    dest.statusCode = response.statusCode
	  }
	  if (self.pipefilter) {
	    self.pipefilter(response, dest)
	  }
	}

	Request.prototype.qs = function (q, clobber) {
	  var self = this
	  var base
	  if (!clobber && self.uri.query) {
	    base = self._qs.parse(self.uri.query)
	  } else {
	    base = {}
	  }

	  for (var i in q) {
	    base[i] = q[i]
	  }

	  if (self._qs.stringify(base) === '') {
	    return self
	  }

	  var qs = self._qs.stringify(base)

	  self.uri = url.parse(self.uri.href.split('?')[0] + '?' + qs)
	  self.url = self.uri
	  self.path = self.uri.path

	  return self
	}
	Request.prototype.form = function (form) {
	  var self = this
	  if (form) {
	    if (!/^application\/x-www-form-urlencoded\b/.test(self.getHeader('content-type'))) {
	      self.setHeader('content-type', 'application/x-www-form-urlencoded')
	    }
	    self.body = (typeof form === 'string')
	      ? self._qs.rfc3986(form.toString('utf8'))
	      : self._qs.stringify(form).toString('utf8')
	    return self
	  }
	  // create form-data object
	  self._form = new FormData()
	  self._form.on('error', function(err) {
	    err.message = 'form-data: ' + err.message
	    self.emit('error', err)
	    self.abort()
	  })
	  return self._form
	}
	Request.prototype.multipart = function (multipart) {
	  var self = this

	  self._multipart.onRequest(multipart)

	  if (!self._multipart.chunked) {
	    self.body = self._multipart.body
	  }

	  return self
	}
	Request.prototype.json = function (val) {
	  var self = this

	  if (!self.hasHeader('accept')) {
	    self.setHeader('accept', 'application/json')
	  }

	  self._json = true
	  if (typeof val === 'boolean') {
	    if (self.body !== undefined) {
	      if (!/^application\/x-www-form-urlencoded\b/.test(self.getHeader('content-type'))) {
	        self.body = safeStringify(self.body)
	      } else {
	        self.body = self._qs.rfc3986(self.body)
	      }
	      if (!self.hasHeader('content-type')) {
	        self.setHeader('content-type', 'application/json')
	      }
	    }
	  } else {
	    self.body = safeStringify(val)
	    if (!self.hasHeader('content-type')) {
	      self.setHeader('content-type', 'application/json')
	    }
	  }

	  if (typeof self.jsonReviver === 'function') {
	    self._jsonReviver = self.jsonReviver
	  }

	  return self
	}
	Request.prototype.getHeader = function (name, headers) {
	  var self = this
	  var result, re, match
	  if (!headers) {
	    headers = self.headers
	  }
	  Object.keys(headers).forEach(function (key) {
	    if (key.length !== name.length) {
	      return
	    }
	    re = new RegExp(name, 'i')
	    match = key.match(re)
	    if (match) {
	      result = headers[key]
	    }
	  })
	  return result
	}

	Request.prototype.auth = function (user, pass, sendImmediately, bearer) {
	  var self = this

	  self._auth.onRequest(user, pass, sendImmediately, bearer)

	  return self
	}
	Request.prototype.aws = function (opts, now) {
	  var self = this

	  if (!now) {
	    self._aws = opts
	    return self
	  }
	  var date = new Date()
	  self.setHeader('date', date.toUTCString())
	  var auth =
	    { key: opts.key
	    , secret: opts.secret
	    , verb: self.method.toUpperCase()
	    , date: date
	    , contentType: self.getHeader('content-type') || ''
	    , md5: self.getHeader('content-md5') || ''
	    , amazonHeaders: aws.canonicalizeHeaders(self.headers)
	    }
	  var path = self.uri.path
	  if (opts.bucket && path) {
	    auth.resource = '/' + opts.bucket + path
	  } else if (opts.bucket && !path) {
	    auth.resource = '/' + opts.bucket
	  } else if (!opts.bucket && path) {
	    auth.resource = path
	  } else if (!opts.bucket && !path) {
	    auth.resource = '/'
	  }
	  auth.resource = aws.canonicalizeResource(auth.resource)
	  self.setHeader('authorization', aws.authorization(auth))

	  return self
	}
	Request.prototype.httpSignature = function (opts) {
	  var self = this
	  httpSignature.signRequest({
	    getHeader: function(header) {
	      return self.getHeader(header, self.headers)
	    },
	    setHeader: function(header, value) {
	      self.setHeader(header, value)
	    },
	    method: self.method,
	    path: self.path
	  }, opts)
	  debug('httpSignature authorization', self.getHeader('authorization'))

	  return self
	}
	Request.prototype.hawk = function (opts) {
	  var self = this
	  self.setHeader('Authorization', hawk.client.header(self.uri, self.method, opts).field)
	}
	Request.prototype.oauth = function (_oauth) {
	  var self = this

	  self._oauth.onRequest(_oauth)

	  return self
	}

	Request.prototype.jar = function (jar) {
	  var self = this
	  var cookies

	  if (self._redirect.redirectsFollowed === 0) {
	    self.originalCookieHeader = self.getHeader('cookie')
	  }

	  if (!jar) {
	    // disable cookies
	    cookies = false
	    self._disableCookies = true
	  } else {
	    var targetCookieJar = (jar && jar.getCookieString) ? jar : globalCookieJar
	    var urihref = self.uri.href
	    //fetch cookie in the Specified host
	    if (targetCookieJar) {
	      cookies = targetCookieJar.getCookieString(urihref)
	    }
	  }

	  //if need cookie and cookie is not empty
	  if (cookies && cookies.length) {
	    if (self.originalCookieHeader) {
	      // Don't overwrite existing Cookie header
	      self.setHeader('cookie', self.originalCookieHeader + '; ' + cookies)
	    } else {
	      self.setHeader('cookie', cookies)
	    }
	  }
	  self._jar = jar
	  return self
	}


	// Stream API
	Request.prototype.pipe = function (dest, opts) {
	  var self = this

	  if (self.response) {
	    if (self._destdata) {
	      self.emit('error', new Error('You cannot pipe after data has been emitted from the response.'))
	    } else if (self._ended) {
	      self.emit('error', new Error('You cannot pipe after the response has been ended.'))
	    } else {
	      stream.Stream.prototype.pipe.call(self, dest, opts)
	      self.pipeDest(dest)
	      return dest
	    }
	  } else {
	    self.dests.push(dest)
	    stream.Stream.prototype.pipe.call(self, dest, opts)
	    return dest
	  }
	}
	Request.prototype.write = function () {
	  var self = this
	  if (!self._started) {
	    self.start()
	  }
	  return self.req.write.apply(self.req, arguments)
	}
	Request.prototype.end = function (chunk) {
	  var self = this
	  if (chunk) {
	    self.write(chunk)
	  }
	  if (!self._started) {
	    self.start()
	  }
	  self.req.end()
	}
	Request.prototype.pause = function () {
	  var self = this
	  if (!self.responseContent) {
	    self._paused = true
	  } else {
	    self.responseContent.pause.apply(self.responseContent, arguments)
	  }
	}
	Request.prototype.resume = function () {
	  var self = this
	  if (!self.responseContent) {
	    self._paused = false
	  } else {
	    self.responseContent.resume.apply(self.responseContent, arguments)
	  }
	}
	Request.prototype.destroy = function () {
	  var self = this
	  if (!self._ended) {
	    self.end()
	  } else if (self.response) {
	    self.response.destroy()
	  }
	}

	Request.defaultProxyHeaderWhiteList =
	  Tunnel.defaultProxyHeaderWhiteList.slice()

	Request.defaultProxyHeaderExclusiveList =
	  Tunnel.defaultProxyHeaderExclusiveList.slice()

	// Exports

	Request.prototype.toJSON = requestToJSON
	module.exports = Request


/***/ },
/* 541 */
/***/ function(module, exports) {

	module.exports = require("zlib");

/***/ },
/* 542 */
/***/ function(module, exports, __webpack_require__) {

	var DuplexStream = __webpack_require__(543)
	  , util         = __webpack_require__(471)

	function BufferList (callback) {
	  if (!(this instanceof BufferList))
	    return new BufferList(callback)

	  this._bufs  = []
	  this.length = 0

	  if (typeof callback == 'function') {
	    this._callback = callback

	    var piper = function (err) {
	      if (this._callback) {
	        this._callback(err)
	        this._callback = null
	      }
	    }.bind(this)

	    this.on('pipe', function (src) {
	      src.on('error', piper)
	    })
	    this.on('unpipe', function (src) {
	      src.removeListener('error', piper)
	    })
	  }
	  else if (Buffer.isBuffer(callback))
	    this.append(callback)
	  else if (Array.isArray(callback)) {
	    callback.forEach(function (b) {
	      Buffer.isBuffer(b) && this.append(b)
	    }.bind(this))
	  }

	  DuplexStream.call(this)
	}

	util.inherits(BufferList, DuplexStream)

	BufferList.prototype._offset = function (offset) {
	  var tot = 0, i = 0, _t
	  for (; i < this._bufs.length; i++) {
	    _t = tot + this._bufs[i].length
	    if (offset < _t)
	      return [ i, offset - tot ]
	    tot = _t
	  }
	}

	BufferList.prototype.append = function (buf) {
	  var isBuffer = Buffer.isBuffer(buf) ||
	                 buf instanceof BufferList

	  this._bufs.push(isBuffer ? buf : new Buffer(buf))
	  this.length += buf.length
	  return this
	}

	BufferList.prototype._write = function (buf, encoding, callback) {
	  this.append(buf)
	  if (callback)
	    callback()
	}

	BufferList.prototype._read = function (size) {
	  if (!this.length)
	    return this.push(null)
	  size = Math.min(size, this.length)
	  this.push(this.slice(0, size))
	  this.consume(size)
	}

	BufferList.prototype.end = function (chunk) {
	  DuplexStream.prototype.end.call(this, chunk)

	  if (this._callback) {
	    this._callback(null, this.slice())
	    this._callback = null
	  }
	}

	BufferList.prototype.get = function (index) {
	  return this.slice(index, index + 1)[0]
	}

	BufferList.prototype.slice = function (start, end) {
	  return this.copy(null, 0, start, end)
	}

	BufferList.prototype.copy = function (dst, dstStart, srcStart, srcEnd) {
	  if (typeof srcStart != 'number' || srcStart < 0)
	    srcStart = 0
	  if (typeof srcEnd != 'number' || srcEnd > this.length)
	    srcEnd = this.length
	  if (srcStart >= this.length)
	    return dst || new Buffer(0)
	  if (srcEnd <= 0)
	    return dst || new Buffer(0)

	  var copy   = !!dst
	    , off    = this._offset(srcStart)
	    , len    = srcEnd - srcStart
	    , bytes  = len
	    , bufoff = (copy && dstStart) || 0
	    , start  = off[1]
	    , l
	    , i

	  // copy/slice everything
	  if (srcStart === 0 && srcEnd == this.length) {
	    if (!copy) // slice, just return a full concat
	      return Buffer.concat(this._bufs)

	    // copy, need to copy individual buffers
	    for (i = 0; i < this._bufs.length; i++) {
	      this._bufs[i].copy(dst, bufoff)
	      bufoff += this._bufs[i].length
	    }

	    return dst
	  }

	  // easy, cheap case where it's a subset of one of the buffers
	  if (bytes <= this._bufs[off[0]].length - start) {
	    return copy
	      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)
	      : this._bufs[off[0]].slice(start, start + bytes)
	  }

	  if (!copy) // a slice, we need something to copy in to
	    dst = new Buffer(len)

	  for (i = off[0]; i < this._bufs.length; i++) {
	    l = this._bufs[i].length - start

	    if (bytes > l) {
	      this._bufs[i].copy(dst, bufoff, start)
	    } else {
	      this._bufs[i].copy(dst, bufoff, start, start + bytes)
	      break
	    }

	    bufoff += l
	    bytes -= l

	    if (start)
	      start = 0
	  }

	  return dst
	}

	BufferList.prototype.toString = function (encoding, start, end) {
	  return this.slice(start, end).toString(encoding)
	}

	BufferList.prototype.consume = function (bytes) {
	  while (this._bufs.length) {
	    if (bytes > this._bufs[0].length) {
	      bytes -= this._bufs[0].length
	      this.length -= this._bufs[0].length
	      this._bufs.shift()
	    } else {
	      this._bufs[0] = this._bufs[0].slice(bytes)
	      this.length -= bytes
	      break
	    }
	  }
	  return this
	}

	BufferList.prototype.duplicate = function () {
	  var i = 0
	    , copy = new BufferList()

	  for (; i < this._bufs.length; i++)
	    copy.append(this._bufs[i])

	  return copy
	}

	BufferList.prototype.destroy = function () {
	  this._bufs.length = 0;
	  this.length = 0;
	  this.push(null);
	}

	;(function () {
	  var methods = {
	      'readDoubleBE' : 8
	    , 'readDoubleLE' : 8
	    , 'readFloatBE'  : 4
	    , 'readFloatLE'  : 4
	    , 'readInt32BE'  : 4
	    , 'readInt32LE'  : 4
	    , 'readUInt32BE' : 4
	    , 'readUInt32LE' : 4
	    , 'readInt16BE'  : 2
	    , 'readInt16LE'  : 2
	    , 'readUInt16BE' : 2
	    , 'readUInt16LE' : 2
	    , 'readInt8'     : 1
	    , 'readUInt8'    : 1
	  }

	  for (var m in methods) {
	    (function (m) {
	      BufferList.prototype[m] = function (offset) {
	        return this.slice(offset, offset + methods[m])[m](0)
	      }
	    }(m))
	  }
	}())

	module.exports = BufferList


/***/ },
/* 543 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(544)


/***/ },
/* 544 */
/***/ function(module, exports, __webpack_require__) {

	// a duplex stream is just a stream that is both readable and writable.
	// Since JS doesn't have multiple prototypal inheritance, this class
	// prototypally inherits from Readable, and then parasitically from
	// Writable.

	'use strict';

	/*<replacement>*/
	var objectKeys = Object.keys || function (obj) {
	  var keys = [];
	  for (var key in obj) keys.push(key);
	  return keys;
	}
	/*</replacement>*/


	module.exports = Duplex;

	/*<replacement>*/
	var processNextTick = __webpack_require__(545);
	/*</replacement>*/



	/*<replacement>*/
	var util = __webpack_require__(546);
	util.inherits = __webpack_require__(547);
	/*</replacement>*/

	var Readable = __webpack_require__(548);
	var Writable = __webpack_require__(551);

	util.inherits(Duplex, Readable);

	var keys = objectKeys(Writable.prototype);
	for (var v = 0; v < keys.length; v++) {
	  var method = keys[v];
	  if (!Duplex.prototype[method])
	    Duplex.prototype[method] = Writable.prototype[method];
	}

	function Duplex(options) {
	  if (!(this instanceof Duplex))
	    return new Duplex(options);

	  Readable.call(this, options);
	  Writable.call(this, options);

	  if (options && options.readable === false)
	    this.readable = false;

	  if (options && options.writable === false)
	    this.writable = false;

	  this.allowHalfOpen = true;
	  if (options && options.allowHalfOpen === false)
	    this.allowHalfOpen = false;

	  this.once('end', onend);
	}

	// the no-half-open enforcer
	function onend() {
	  // if we allow half-open state, or if the writable side ended,
	  // then we're ok.
	  if (this.allowHalfOpen || this._writableState.ended)
	    return;

	  // no more data can be written.
	  // But allow more writes to happen in this tick.
	  processNextTick(onEndNT, this);
	}

	function onEndNT(self) {
	  self.end();
	}

	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}


/***/ },
/* 545 */
/***/ function(module, exports) {

	'use strict';
	module.exports = nextTick;

	function nextTick(fn) {
	  var args = new Array(arguments.length - 1);
	  var i = 0;
	  while (i < arguments.length) {
	    args[i++] = arguments[i];
	  }
	  process.nextTick(function afterTick() {
	    fn.apply(null, args);
	  });
	}


/***/ },
/* 546 */
/***/ function(module, exports) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	// NOTE: These type checking functions intentionally don't use `instanceof`
	// because it is fragile and can be easily faked with `Object.create()`.
	function isArray(ar) {
	  return Array.isArray(ar);
	}
	exports.isArray = isArray;

	function isBoolean(arg) {
	  return typeof arg === 'boolean';
	}
	exports.isBoolean = isBoolean;

	function isNull(arg) {
	  return arg === null;
	}
	exports.isNull = isNull;

	function isNullOrUndefined(arg) {
	  return arg == null;
	}
	exports.isNullOrUndefined = isNullOrUndefined;

	function isNumber(arg) {
	  return typeof arg === 'number';
	}
	exports.isNumber = isNumber;

	function isString(arg) {
	  return typeof arg === 'string';
	}
	exports.isString = isString;

	function isSymbol(arg) {
	  return typeof arg === 'symbol';
	}
	exports.isSymbol = isSymbol;

	function isUndefined(arg) {
	  return arg === void 0;
	}
	exports.isUndefined = isUndefined;

	function isRegExp(re) {
	  return isObject(re) && objectToString(re) === '[object RegExp]';
	}
	exports.isRegExp = isRegExp;

	function isObject(arg) {
	  return typeof arg === 'object' && arg !== null;
	}
	exports.isObject = isObject;

	function isDate(d) {
	  return isObject(d) && objectToString(d) === '[object Date]';
	}
	exports.isDate = isDate;

	function isError(e) {
	  return isObject(e) &&
	      (objectToString(e) === '[object Error]' || e instanceof Error);
	}
	exports.isError = isError;

	function isFunction(arg) {
	  return typeof arg === 'function';
	}
	exports.isFunction = isFunction;

	function isPrimitive(arg) {
	  return arg === null ||
	         typeof arg === 'boolean' ||
	         typeof arg === 'number' ||
	         typeof arg === 'string' ||
	         typeof arg === 'symbol' ||  // ES6 symbol
	         typeof arg === 'undefined';
	}
	exports.isPrimitive = isPrimitive;

	function isBuffer(arg) {
	  return Buffer.isBuffer(arg);
	}
	exports.isBuffer = isBuffer;

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}

/***/ },
/* 547 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(471).inherits


/***/ },
/* 548 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	module.exports = Readable;

	/*<replacement>*/
	var processNextTick = __webpack_require__(545);
	/*</replacement>*/


	/*<replacement>*/
	var isArray = __webpack_require__(549);
	/*</replacement>*/


	/*<replacement>*/
	var Buffer = __webpack_require__(484).Buffer;
	/*</replacement>*/

	Readable.ReadableState = ReadableState;

	var EE = __webpack_require__(472).EventEmitter;

	/*<replacement>*/
	if (!EE.listenerCount) EE.listenerCount = function(emitter, type) {
	  return emitter.listeners(type).length;
	};
	/*</replacement>*/



	/*<replacement>*/
	var Stream;
	(function (){try{
	  Stream = __webpack_require__(480);
	}catch(_){}finally{
	  if (!Stream)
	    Stream = __webpack_require__(472).EventEmitter;
	}}())
	/*</replacement>*/

	var Buffer = __webpack_require__(484).Buffer;

	/*<replacement>*/
	var util = __webpack_require__(546);
	util.inherits = __webpack_require__(547);
	/*</replacement>*/



	/*<replacement>*/
	var debug = __webpack_require__(471);
	if (debug && debug.debuglog) {
	  debug = debug.debuglog('stream');
	} else {
	  debug = function () {};
	}
	/*</replacement>*/

	var StringDecoder;

	util.inherits(Readable, Stream);

	function ReadableState(options, stream) {
	  var Duplex = __webpack_require__(544);

	  options = options || {};

	  // object stream flag. Used to make read(n) ignore n and to
	  // make all the buffer merging and length checks go away
	  this.objectMode = !!options.objectMode;

	  if (stream instanceof Duplex)
	    this.objectMode = this.objectMode || !!options.readableObjectMode;

	  // the point at which it stops calling _read() to fill the buffer
	  // Note: 0 is a valid value, means "don't call _read preemptively ever"
	  var hwm = options.highWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;

	  this.buffer = [];
	  this.length = 0;
	  this.pipes = null;
	  this.pipesCount = 0;
	  this.flowing = null;
	  this.ended = false;
	  this.endEmitted = false;
	  this.reading = false;

	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;

	  // whenever we return null, then we set a flag to say
	  // that we're awaiting a 'readable' event emission.
	  this.needReadable = false;
	  this.emittedReadable = false;
	  this.readableListening = false;

	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';

	  // when piping, we only care about 'readable' events that happen
	  // after read()ing all the bytes and not getting any pushback.
	  this.ranOut = false;

	  // the number of writers that are awaiting a drain event in .pipe()s
	  this.awaitDrain = 0;

	  // if true, a maybeReadMore has been scheduled
	  this.readingMore = false;

	  this.decoder = null;
	  this.encoding = null;
	  if (options.encoding) {
	    if (!StringDecoder)
	      StringDecoder = __webpack_require__(550).StringDecoder;
	    this.decoder = new StringDecoder(options.encoding);
	    this.encoding = options.encoding;
	  }
	}

	function Readable(options) {
	  var Duplex = __webpack_require__(544);

	  if (!(this instanceof Readable))
	    return new Readable(options);

	  this._readableState = new ReadableState(options, this);

	  // legacy
	  this.readable = true;

	  if (options && typeof options.read === 'function')
	    this._read = options.read;

	  Stream.call(this);
	}

	// Manually shove something into the read() buffer.
	// This returns true if the highWaterMark has not been hit yet,
	// similar to how Writable.write() returns true if you should
	// write() some more.
	Readable.prototype.push = function(chunk, encoding) {
	  var state = this._readableState;

	  if (!state.objectMode && typeof chunk === 'string') {
	    encoding = encoding || state.defaultEncoding;
	    if (encoding !== state.encoding) {
	      chunk = new Buffer(chunk, encoding);
	      encoding = '';
	    }
	  }

	  return readableAddChunk(this, state, chunk, encoding, false);
	};

	// Unshift should *always* be something directly out of read()
	Readable.prototype.unshift = function(chunk) {
	  var state = this._readableState;
	  return readableAddChunk(this, state, chunk, '', true);
	};

	Readable.prototype.isPaused = function() {
	  return this._readableState.flowing === false;
	};

	function readableAddChunk(stream, state, chunk, encoding, addToFront) {
	  var er = chunkInvalid(state, chunk);
	  if (er) {
	    stream.emit('error', er);
	  } else if (chunk === null) {
	    state.reading = false;
	    onEofChunk(stream, state);
	  } else if (state.objectMode || chunk && chunk.length > 0) {
	    if (state.ended && !addToFront) {
	      var e = new Error('stream.push() after EOF');
	      stream.emit('error', e);
	    } else if (state.endEmitted && addToFront) {
	      var e = new Error('stream.unshift() after end event');
	      stream.emit('error', e);
	    } else {
	      if (state.decoder && !addToFront && !encoding)
	        chunk = state.decoder.write(chunk);

	      if (!addToFront)
	        state.reading = false;

	      // if we want the data now, just emit it.
	      if (state.flowing && state.length === 0 && !state.sync) {
	        stream.emit('data', chunk);
	        stream.read(0);
	      } else {
	        // update the buffer info.
	        state.length += state.objectMode ? 1 : chunk.length;
	        if (addToFront)
	          state.buffer.unshift(chunk);
	        else
	          state.buffer.push(chunk);

	        if (state.needReadable)
	          emitReadable(stream);
	      }

	      maybeReadMore(stream, state);
	    }
	  } else if (!addToFront) {
	    state.reading = false;
	  }

	  return needMoreData(state);
	}



	// if it's past the high water mark, we can push in some more.
	// Also, if we have no data yet, we can stand some
	// more bytes.  This is to work around cases where hwm=0,
	// such as the repl.  Also, if the push() triggered a
	// readable event, and the user called read(largeNumber) such that
	// needReadable was set, then we ought to push more, so that another
	// 'readable' event will be triggered.
	function needMoreData(state) {
	  return !state.ended &&
	         (state.needReadable ||
	          state.length < state.highWaterMark ||
	          state.length === 0);
	}

	// backwards compatibility.
	Readable.prototype.setEncoding = function(enc) {
	  if (!StringDecoder)
	    StringDecoder = __webpack_require__(550).StringDecoder;
	  this._readableState.decoder = new StringDecoder(enc);
	  this._readableState.encoding = enc;
	  return this;
	};

	// Don't raise the hwm > 128MB
	var MAX_HWM = 0x800000;
	function roundUpToNextPowerOf2(n) {
	  if (n >= MAX_HWM) {
	    n = MAX_HWM;
	  } else {
	    // Get the next highest power of 2
	    n--;
	    for (var p = 1; p < 32; p <<= 1) n |= n >> p;
	    n++;
	  }
	  return n;
	}

	function howMuchToRead(n, state) {
	  if (state.length === 0 && state.ended)
	    return 0;

	  if (state.objectMode)
	    return n === 0 ? 0 : 1;

	  if (n === null || isNaN(n)) {
	    // only flow one buffer at a time
	    if (state.flowing && state.buffer.length)
	      return state.buffer[0].length;
	    else
	      return state.length;
	  }

	  if (n <= 0)
	    return 0;

	  // If we're asking for more than the target buffer level,
	  // then raise the water mark.  Bump up to the next highest
	  // power of 2, to prevent increasing it excessively in tiny
	  // amounts.
	  if (n > state.highWaterMark)
	    state.highWaterMark = roundUpToNextPowerOf2(n);

	  // don't have that much.  return null, unless we've ended.
	  if (n > state.length) {
	    if (!state.ended) {
	      state.needReadable = true;
	      return 0;
	    } else {
	      return state.length;
	    }
	  }

	  return n;
	}

	// you can override either this method, or the async _read(n) below.
	Readable.prototype.read = function(n) {
	  debug('read', n);
	  var state = this._readableState;
	  var nOrig = n;

	  if (typeof n !== 'number' || n > 0)
	    state.emittedReadable = false;

	  // if we're doing read(0) to trigger a readable event, but we
	  // already have a bunch of data in the buffer, then just trigger
	  // the 'readable' event and move on.
	  if (n === 0 &&
	      state.needReadable &&
	      (state.length >= state.highWaterMark || state.ended)) {
	    debug('read: emitReadable', state.length, state.ended);
	    if (state.length === 0 && state.ended)
	      endReadable(this);
	    else
	      emitReadable(this);
	    return null;
	  }

	  n = howMuchToRead(n, state);

	  // if we've ended, and we're now clear, then finish it up.
	  if (n === 0 && state.ended) {
	    if (state.length === 0)
	      endReadable(this);
	    return null;
	  }

	  // All the actual chunk generation logic needs to be
	  // *below* the call to _read.  The reason is that in certain
	  // synthetic stream cases, such as passthrough streams, _read
	  // may be a completely synchronous operation which may change
	  // the state of the read buffer, providing enough data when
	  // before there was *not* enough.
	  //
	  // So, the steps are:
	  // 1. Figure out what the state of things will be after we do
	  // a read from the buffer.
	  //
	  // 2. If that resulting state will trigger a _read, then call _read.
	  // Note that this may be asynchronous, or synchronous.  Yes, it is
	  // deeply ugly to write APIs this way, but that still doesn't mean
	  // that the Readable class should behave improperly, as streams are
	  // designed to be sync/async agnostic.
	  // Take note if the _read call is sync or async (ie, if the read call
	  // has returned yet), so that we know whether or not it's safe to emit
	  // 'readable' etc.
	  //
	  // 3. Actually pull the requested chunks out of the buffer and return.

	  // if we need a readable event, then we need to do some reading.
	  var doRead = state.needReadable;
	  debug('need readable', doRead);

	  // if we currently have less than the highWaterMark, then also read some
	  if (state.length === 0 || state.length - n < state.highWaterMark) {
	    doRead = true;
	    debug('length less than watermark', doRead);
	  }

	  // however, if we've ended, then there's no point, and if we're already
	  // reading, then it's unnecessary.
	  if (state.ended || state.reading) {
	    doRead = false;
	    debug('reading or ended', doRead);
	  }

	  if (doRead) {
	    debug('do read');
	    state.reading = true;
	    state.sync = true;
	    // if the length is currently zero, then we *need* a readable event.
	    if (state.length === 0)
	      state.needReadable = true;
	    // call internal read method
	    this._read(state.highWaterMark);
	    state.sync = false;
	  }

	  // If _read pushed data synchronously, then `reading` will be false,
	  // and we need to re-evaluate how much data we can return to the user.
	  if (doRead && !state.reading)
	    n = howMuchToRead(nOrig, state);

	  var ret;
	  if (n > 0)
	    ret = fromList(n, state);
	  else
	    ret = null;

	  if (ret === null) {
	    state.needReadable = true;
	    n = 0;
	  }

	  state.length -= n;

	  // If we have nothing in the buffer, then we want to know
	  // as soon as we *do* get something into the buffer.
	  if (state.length === 0 && !state.ended)
	    state.needReadable = true;

	  // If we tried to read() past the EOF, then emit end on the next tick.
	  if (nOrig !== n && state.ended && state.length === 0)
	    endReadable(this);

	  if (ret !== null)
	    this.emit('data', ret);

	  return ret;
	};

	function chunkInvalid(state, chunk) {
	  var er = null;
	  if (!(Buffer.isBuffer(chunk)) &&
	      typeof chunk !== 'string' &&
	      chunk !== null &&
	      chunk !== undefined &&
	      !state.objectMode) {
	    er = new TypeError('Invalid non-string/buffer chunk');
	  }
	  return er;
	}


	function onEofChunk(stream, state) {
	  if (state.ended) return;
	  if (state.decoder) {
	    var chunk = state.decoder.end();
	    if (chunk && chunk.length) {
	      state.buffer.push(chunk);
	      state.length += state.objectMode ? 1 : chunk.length;
	    }
	  }
	  state.ended = true;

	  // emit 'readable' now to make sure it gets picked up.
	  emitReadable(stream);
	}

	// Don't emit readable right away in sync mode, because this can trigger
	// another read() call => stack overflow.  This way, it might trigger
	// a nextTick recursion warning, but that's not so bad.
	function emitReadable(stream) {
	  var state = stream._readableState;
	  state.needReadable = false;
	  if (!state.emittedReadable) {
	    debug('emitReadable', state.flowing);
	    state.emittedReadable = true;
	    if (state.sync)
	      processNextTick(emitReadable_, stream);
	    else
	      emitReadable_(stream);
	  }
	}

	function emitReadable_(stream) {
	  debug('emit readable');
	  stream.emit('readable');
	  flow(stream);
	}


	// at this point, the user has presumably seen the 'readable' event,
	// and called read() to consume some data.  that may have triggered
	// in turn another _read(n) call, in which case reading = true if
	// it's in progress.
	// However, if we're not ended, or reading, and the length < hwm,
	// then go ahead and try to read some more preemptively.
	function maybeReadMore(stream, state) {
	  if (!state.readingMore) {
	    state.readingMore = true;
	    processNextTick(maybeReadMore_, stream, state);
	  }
	}

	function maybeReadMore_(stream, state) {
	  var len = state.length;
	  while (!state.reading && !state.flowing && !state.ended &&
	         state.length < state.highWaterMark) {
	    debug('maybeReadMore read 0');
	    stream.read(0);
	    if (len === state.length)
	      // didn't get any data, stop spinning.
	      break;
	    else
	      len = state.length;
	  }
	  state.readingMore = false;
	}

	// abstract method.  to be overridden in specific implementation classes.
	// call cb(er, data) where data is <= n in length.
	// for virtual (non-string, non-buffer) streams, "length" is somewhat
	// arbitrary, and perhaps not very meaningful.
	Readable.prototype._read = function(n) {
	  this.emit('error', new Error('not implemented'));
	};

	Readable.prototype.pipe = function(dest, pipeOpts) {
	  var src = this;
	  var state = this._readableState;

	  switch (state.pipesCount) {
	    case 0:
	      state.pipes = dest;
	      break;
	    case 1:
	      state.pipes = [state.pipes, dest];
	      break;
	    default:
	      state.pipes.push(dest);
	      break;
	  }
	  state.pipesCount += 1;
	  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

	  var doEnd = (!pipeOpts || pipeOpts.end !== false) &&
	              dest !== process.stdout &&
	              dest !== process.stderr;

	  var endFn = doEnd ? onend : cleanup;
	  if (state.endEmitted)
	    processNextTick(endFn);
	  else
	    src.once('end', endFn);

	  dest.on('unpipe', onunpipe);
	  function onunpipe(readable) {
	    debug('onunpipe');
	    if (readable === src) {
	      cleanup();
	    }
	  }

	  function onend() {
	    debug('onend');
	    dest.end();
	  }

	  // when the dest drains, it reduces the awaitDrain counter
	  // on the source.  This would be more elegant with a .once()
	  // handler in flow(), but adding and removing repeatedly is
	  // too slow.
	  var ondrain = pipeOnDrain(src);
	  dest.on('drain', ondrain);

	  function cleanup() {
	    debug('cleanup');
	    // cleanup event handlers once the pipe is broken
	    dest.removeListener('close', onclose);
	    dest.removeListener('finish', onfinish);
	    dest.removeListener('drain', ondrain);
	    dest.removeListener('error', onerror);
	    dest.removeListener('unpipe', onunpipe);
	    src.removeListener('end', onend);
	    src.removeListener('end', cleanup);
	    src.removeListener('data', ondata);

	    // if the reader is waiting for a drain event from this
	    // specific writer, then it would cause it to never start
	    // flowing again.
	    // So, if this is awaiting a drain, then we just call it now.
	    // If we don't know, then assume that we are waiting for one.
	    if (state.awaitDrain &&
	        (!dest._writableState || dest._writableState.needDrain))
	      ondrain();
	  }

	  src.on('data', ondata);
	  function ondata(chunk) {
	    debug('ondata');
	    var ret = dest.write(chunk);
	    if (false === ret) {
	      debug('false write response, pause',
	            src._readableState.awaitDrain);
	      src._readableState.awaitDrain++;
	      src.pause();
	    }
	  }

	  // if the dest has an error, then stop piping into it.
	  // however, don't suppress the throwing behavior for this.
	  function onerror(er) {
	    debug('onerror', er);
	    unpipe();
	    dest.removeListener('error', onerror);
	    if (EE.listenerCount(dest, 'error') === 0)
	      dest.emit('error', er);
	  }
	  // This is a brutally ugly hack to make sure that our error handler
	  // is attached before any userland ones.  NEVER DO THIS.
	  if (!dest._events || !dest._events.error)
	    dest.on('error', onerror);
	  else if (isArray(dest._events.error))
	    dest._events.error.unshift(onerror);
	  else
	    dest._events.error = [onerror, dest._events.error];



	  // Both close and finish should trigger unpipe, but only once.
	  function onclose() {
	    dest.removeListener('finish', onfinish);
	    unpipe();
	  }
	  dest.once('close', onclose);
	  function onfinish() {
	    debug('onfinish');
	    dest.removeListener('close', onclose);
	    unpipe();
	  }
	  dest.once('finish', onfinish);

	  function unpipe() {
	    debug('unpipe');
	    src.unpipe(dest);
	  }

	  // tell the dest that it's being piped to
	  dest.emit('pipe', src);

	  // start the flow if it hasn't been started already.
	  if (!state.flowing) {
	    debug('pipe resume');
	    src.resume();
	  }

	  return dest;
	};

	function pipeOnDrain(src) {
	  return function() {
	    var state = src._readableState;
	    debug('pipeOnDrain', state.awaitDrain);
	    if (state.awaitDrain)
	      state.awaitDrain--;
	    if (state.awaitDrain === 0 && EE.listenerCount(src, 'data')) {
	      state.flowing = true;
	      flow(src);
	    }
	  };
	}


	Readable.prototype.unpipe = function(dest) {
	  var state = this._readableState;

	  // if we're not piping anywhere, then do nothing.
	  if (state.pipesCount === 0)
	    return this;

	  // just one destination.  most common case.
	  if (state.pipesCount === 1) {
	    // passed in one, but it's not the right one.
	    if (dest && dest !== state.pipes)
	      return this;

	    if (!dest)
	      dest = state.pipes;

	    // got a match.
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;
	    if (dest)
	      dest.emit('unpipe', this);
	    return this;
	  }

	  // slow case. multiple pipe destinations.

	  if (!dest) {
	    // remove all.
	    var dests = state.pipes;
	    var len = state.pipesCount;
	    state.pipes = null;
	    state.pipesCount = 0;
	    state.flowing = false;

	    for (var i = 0; i < len; i++)
	      dests[i].emit('unpipe', this);
	    return this;
	  }

	  // try to find the right one.
	  var i = indexOf(state.pipes, dest);
	  if (i === -1)
	    return this;

	  state.pipes.splice(i, 1);
	  state.pipesCount -= 1;
	  if (state.pipesCount === 1)
	    state.pipes = state.pipes[0];

	  dest.emit('unpipe', this);

	  return this;
	};

	// set up data events if they are asked for
	// Ensure readable listeners eventually get something
	Readable.prototype.on = function(ev, fn) {
	  var res = Stream.prototype.on.call(this, ev, fn);

	  // If listening to data, and it has not explicitly been paused,
	  // then call resume to start the flow of data on the next tick.
	  if (ev === 'data' && false !== this._readableState.flowing) {
	    this.resume();
	  }

	  if (ev === 'readable' && this.readable) {
	    var state = this._readableState;
	    if (!state.readableListening) {
	      state.readableListening = true;
	      state.emittedReadable = false;
	      state.needReadable = true;
	      if (!state.reading) {
	        processNextTick(nReadingNextTick, this);
	      } else if (state.length) {
	        emitReadable(this, state);
	      }
	    }
	  }

	  return res;
	};
	Readable.prototype.addListener = Readable.prototype.on;

	function nReadingNextTick(self) {
	  debug('readable nexttick read 0');
	  self.read(0);
	}

	// pause() and resume() are remnants of the legacy readable stream API
	// If the user uses them, then switch into old mode.
	Readable.prototype.resume = function() {
	  var state = this._readableState;
	  if (!state.flowing) {
	    debug('resume');
	    state.flowing = true;
	    resume(this, state);
	  }
	  return this;
	};

	function resume(stream, state) {
	  if (!state.resumeScheduled) {
	    state.resumeScheduled = true;
	    processNextTick(resume_, stream, state);
	  }
	}

	function resume_(stream, state) {
	  if (!state.reading) {
	    debug('resume read 0');
	    stream.read(0);
	  }

	  state.resumeScheduled = false;
	  stream.emit('resume');
	  flow(stream);
	  if (state.flowing && !state.reading)
	    stream.read(0);
	}

	Readable.prototype.pause = function() {
	  debug('call pause flowing=%j', this._readableState.flowing);
	  if (false !== this._readableState.flowing) {
	    debug('pause');
	    this._readableState.flowing = false;
	    this.emit('pause');
	  }
	  return this;
	};

	function flow(stream) {
	  var state = stream._readableState;
	  debug('flow', state.flowing);
	  if (state.flowing) {
	    do {
	      var chunk = stream.read();
	    } while (null !== chunk && state.flowing);
	  }
	}

	// wrap an old-style stream as the async data source.
	// This is *not* part of the readable stream interface.
	// It is an ugly unfortunate mess of history.
	Readable.prototype.wrap = function(stream) {
	  var state = this._readableState;
	  var paused = false;

	  var self = this;
	  stream.on('end', function() {
	    debug('wrapped end');
	    if (state.decoder && !state.ended) {
	      var chunk = state.decoder.end();
	      if (chunk && chunk.length)
	        self.push(chunk);
	    }

	    self.push(null);
	  });

	  stream.on('data', function(chunk) {
	    debug('wrapped data');
	    if (state.decoder)
	      chunk = state.decoder.write(chunk);

	    // don't skip over falsy values in objectMode
	    if (state.objectMode && (chunk === null || chunk === undefined))
	      return;
	    else if (!state.objectMode && (!chunk || !chunk.length))
	      return;

	    var ret = self.push(chunk);
	    if (!ret) {
	      paused = true;
	      stream.pause();
	    }
	  });

	  // proxy all the other methods.
	  // important when wrapping filters and duplexes.
	  for (var i in stream) {
	    if (this[i] === undefined && typeof stream[i] === 'function') {
	      this[i] = function(method) { return function() {
	        return stream[method].apply(stream, arguments);
	      }; }(i);
	    }
	  }

	  // proxy certain important events.
	  var events = ['error', 'close', 'destroy', 'pause', 'resume'];
	  forEach(events, function(ev) {
	    stream.on(ev, self.emit.bind(self, ev));
	  });

	  // when we try to consume some more bytes, simply unpause the
	  // underlying stream.
	  self._read = function(n) {
	    debug('wrapped _read', n);
	    if (paused) {
	      paused = false;
	      stream.resume();
	    }
	  };

	  return self;
	};



	// exposed for testing purposes only.
	Readable._fromList = fromList;

	// Pluck off n bytes from an array of buffers.
	// Length is the combined lengths of all the buffers in the list.
	function fromList(n, state) {
	  var list = state.buffer;
	  var length = state.length;
	  var stringMode = !!state.decoder;
	  var objectMode = !!state.objectMode;
	  var ret;

	  // nothing in the list, definitely empty.
	  if (list.length === 0)
	    return null;

	  if (length === 0)
	    ret = null;
	  else if (objectMode)
	    ret = list.shift();
	  else if (!n || n >= length) {
	    // read it all, truncate the array.
	    if (stringMode)
	      ret = list.join('');
	    else
	      ret = Buffer.concat(list, length);
	    list.length = 0;
	  } else {
	    // read just some of it.
	    if (n < list[0].length) {
	      // just take a part of the first list item.
	      // slice is the same for buffers and strings.
	      var buf = list[0];
	      ret = buf.slice(0, n);
	      list[0] = buf.slice(n);
	    } else if (n === list[0].length) {
	      // first list is a perfect match
	      ret = list.shift();
	    } else {
	      // complex case.
	      // we have enough to cover it, but it spans past the first buffer.
	      if (stringMode)
	        ret = '';
	      else
	        ret = new Buffer(n);

	      var c = 0;
	      for (var i = 0, l = list.length; i < l && c < n; i++) {
	        var buf = list[0];
	        var cpy = Math.min(n - c, buf.length);

	        if (stringMode)
	          ret += buf.slice(0, cpy);
	        else
	          buf.copy(ret, c, 0, cpy);

	        if (cpy < buf.length)
	          list[0] = buf.slice(cpy);
	        else
	          list.shift();

	        c += cpy;
	      }
	    }
	  }

	  return ret;
	}

	function endReadable(stream) {
	  var state = stream._readableState;

	  // If we get here before consuming all the bytes, then that is a
	  // bug in node.  Should never happen.
	  if (state.length > 0)
	    throw new Error('endReadable called on non-empty stream');

	  if (!state.endEmitted) {
	    state.ended = true;
	    processNextTick(endReadableNT, state, stream);
	  }
	}

	function endReadableNT(state, stream) {
	  // Check that we didn't get one last unshift.
	  if (!state.endEmitted && state.length === 0) {
	    state.endEmitted = true;
	    stream.readable = false;
	    stream.emit('end');
	  }
	}

	function forEach (xs, f) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    f(xs[i], i);
	  }
	}

	function indexOf (xs, x) {
	  for (var i = 0, l = xs.length; i < l; i++) {
	    if (xs[i] === x) return i;
	  }
	  return -1;
	}


/***/ },
/* 549 */
/***/ function(module, exports) {

	module.exports = Array.isArray || function (arr) {
	  return Object.prototype.toString.call(arr) == '[object Array]';
	};


/***/ },
/* 550 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright Joyent, Inc. and other Node contributors.
	//
	// Permission is hereby granted, free of charge, to any person obtaining a
	// copy of this software and associated documentation files (the
	// "Software"), to deal in the Software without restriction, including
	// without limitation the rights to use, copy, modify, merge, publish,
	// distribute, sublicense, and/or sell copies of the Software, and to permit
	// persons to whom the Software is furnished to do so, subject to the
	// following conditions:
	//
	// The above copyright notice and this permission notice shall be included
	// in all copies or substantial portions of the Software.
	//
	// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
	// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
	// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
	// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
	// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
	// USE OR OTHER DEALINGS IN THE SOFTWARE.

	var Buffer = __webpack_require__(484).Buffer;

	var isBufferEncoding = Buffer.isEncoding
	  || function(encoding) {
	       switch (encoding && encoding.toLowerCase()) {
	         case 'hex': case 'utf8': case 'utf-8': case 'ascii': case 'binary': case 'base64': case 'ucs2': case 'ucs-2': case 'utf16le': case 'utf-16le': case 'raw': return true;
	         default: return false;
	       }
	     }


	function assertEncoding(encoding) {
	  if (encoding && !isBufferEncoding(encoding)) {
	    throw new Error('Unknown encoding: ' + encoding);
	  }
	}

	// StringDecoder provides an interface for efficiently splitting a series of
	// buffers into a series of JS strings without breaking apart multi-byte
	// characters. CESU-8 is handled as part of the UTF-8 encoding.
	//
	// @TODO Handling all encodings inside a single object makes it very difficult
	// to reason about this code, so it should be split up in the future.
	// @TODO There should be a utf8-strict encoding that rejects invalid UTF-8 code
	// points as used by CESU-8.
	var StringDecoder = exports.StringDecoder = function(encoding) {
	  this.encoding = (encoding || 'utf8').toLowerCase().replace(/[-_]/, '');
	  assertEncoding(encoding);
	  switch (this.encoding) {
	    case 'utf8':
	      // CESU-8 represents each of Surrogate Pair by 3-bytes
	      this.surrogateSize = 3;
	      break;
	    case 'ucs2':
	    case 'utf16le':
	      // UTF-16 represents each of Surrogate Pair by 2-bytes
	      this.surrogateSize = 2;
	      this.detectIncompleteChar = utf16DetectIncompleteChar;
	      break;
	    case 'base64':
	      // Base-64 stores 3 bytes in 4 chars, and pads the remainder.
	      this.surrogateSize = 3;
	      this.detectIncompleteChar = base64DetectIncompleteChar;
	      break;
	    default:
	      this.write = passThroughWrite;
	      return;
	  }

	  // Enough space to store all bytes of a single character. UTF-8 needs 4
	  // bytes, but CESU-8 may require up to 6 (3 bytes per surrogate).
	  this.charBuffer = new Buffer(6);
	  // Number of bytes received for the current incomplete multi-byte character.
	  this.charReceived = 0;
	  // Number of bytes expected for the current incomplete multi-byte character.
	  this.charLength = 0;
	};


	// write decodes the given buffer and returns it as JS string that is
	// guaranteed to not contain any partial multi-byte characters. Any partial
	// character found at the end of the buffer is buffered up, and will be
	// returned when calling write again with the remaining bytes.
	//
	// Note: Converting a Buffer containing an orphan surrogate to a String
	// currently works, but converting a String to a Buffer (via `new Buffer`, or
	// Buffer#write) will replace incomplete surrogates with the unicode
	// replacement character. See https://codereview.chromium.org/121173009/ .
	StringDecoder.prototype.write = function(buffer) {
	  var charStr = '';
	  // if our last write ended with an incomplete multibyte character
	  while (this.charLength) {
	    // determine how many remaining bytes this buffer has to offer for this char
	    var available = (buffer.length >= this.charLength - this.charReceived) ?
	        this.charLength - this.charReceived :
	        buffer.length;

	    // add the new bytes to the char buffer
	    buffer.copy(this.charBuffer, this.charReceived, 0, available);
	    this.charReceived += available;

	    if (this.charReceived < this.charLength) {
	      // still not enough chars in this buffer? wait for more ...
	      return '';
	    }

	    // remove bytes belonging to the current character from the buffer
	    buffer = buffer.slice(available, buffer.length);

	    // get the character that was split
	    charStr = this.charBuffer.slice(0, this.charLength).toString(this.encoding);

	    // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	    var charCode = charStr.charCodeAt(charStr.length - 1);
	    if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	      this.charLength += this.surrogateSize;
	      charStr = '';
	      continue;
	    }
	    this.charReceived = this.charLength = 0;

	    // if there are no more bytes in this buffer, just emit our char
	    if (buffer.length === 0) {
	      return charStr;
	    }
	    break;
	  }

	  // determine and set charLength / charReceived
	  this.detectIncompleteChar(buffer);

	  var end = buffer.length;
	  if (this.charLength) {
	    // buffer the incomplete character bytes we got
	    buffer.copy(this.charBuffer, 0, buffer.length - this.charReceived, end);
	    end -= this.charReceived;
	  }

	  charStr += buffer.toString(this.encoding, 0, end);

	  var end = charStr.length - 1;
	  var charCode = charStr.charCodeAt(end);
	  // CESU-8: lead surrogate (D800-DBFF) is also the incomplete character
	  if (charCode >= 0xD800 && charCode <= 0xDBFF) {
	    var size = this.surrogateSize;
	    this.charLength += size;
	    this.charReceived += size;
	    this.charBuffer.copy(this.charBuffer, size, 0, size);
	    buffer.copy(this.charBuffer, 0, 0, size);
	    return charStr.substring(0, end);
	  }

	  // or just emit the charStr
	  return charStr;
	};

	// detectIncompleteChar determines if there is an incomplete UTF-8 character at
	// the end of the given buffer. If so, it sets this.charLength to the byte
	// length that character, and sets this.charReceived to the number of bytes
	// that are available for this character.
	StringDecoder.prototype.detectIncompleteChar = function(buffer) {
	  // determine how many bytes we have to check at the end of this buffer
	  var i = (buffer.length >= 3) ? 3 : buffer.length;

	  // Figure out if one of the last i bytes of our buffer announces an
	  // incomplete char.
	  for (; i > 0; i--) {
	    var c = buffer[buffer.length - i];

	    // See http://en.wikipedia.org/wiki/UTF-8#Description

	    // 110XXXXX
	    if (i == 1 && c >> 5 == 0x06) {
	      this.charLength = 2;
	      break;
	    }

	    // 1110XXXX
	    if (i <= 2 && c >> 4 == 0x0E) {
	      this.charLength = 3;
	      break;
	    }

	    // 11110XXX
	    if (i <= 3 && c >> 3 == 0x1E) {
	      this.charLength = 4;
	      break;
	    }
	  }
	  this.charReceived = i;
	};

	StringDecoder.prototype.end = function(buffer) {
	  var res = '';
	  if (buffer && buffer.length)
	    res = this.write(buffer);

	  if (this.charReceived) {
	    var cr = this.charReceived;
	    var buf = this.charBuffer;
	    var enc = this.encoding;
	    res += buf.slice(0, cr).toString(enc);
	  }

	  return res;
	};

	function passThroughWrite(buffer) {
	  return buffer.toString(this.encoding);
	}

	function utf16DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 2;
	  this.charLength = this.charReceived ? 2 : 0;
	}

	function base64DetectIncompleteChar(buffer) {
	  this.charReceived = buffer.length % 3;
	  this.charLength = this.charReceived ? 3 : 0;
	}


/***/ },
/* 551 */
/***/ function(module, exports, __webpack_require__) {

	// A bit simpler than readable streams.
	// Implement an async ._write(chunk, cb), and it'll handle all
	// the drain event emission and buffering.

	'use strict';

	module.exports = Writable;

	/*<replacement>*/
	var processNextTick = __webpack_require__(545);
	/*</replacement>*/


	/*<replacement>*/
	var Buffer = __webpack_require__(484).Buffer;
	/*</replacement>*/

	Writable.WritableState = WritableState;


	/*<replacement>*/
	var util = __webpack_require__(546);
	util.inherits = __webpack_require__(547);
	/*</replacement>*/



	/*<replacement>*/
	var Stream;
	(function (){try{
	  Stream = __webpack_require__(480);
	}catch(_){}finally{
	  if (!Stream)
	    Stream = __webpack_require__(472).EventEmitter;
	}}())
	/*</replacement>*/

	var Buffer = __webpack_require__(484).Buffer;

	util.inherits(Writable, Stream);

	function nop() {}

	function WriteReq(chunk, encoding, cb) {
	  this.chunk = chunk;
	  this.encoding = encoding;
	  this.callback = cb;
	  this.next = null;
	}

	function WritableState(options, stream) {
	  var Duplex = __webpack_require__(544);

	  options = options || {};

	  // object stream flag to indicate whether or not this stream
	  // contains buffers or objects.
	  this.objectMode = !!options.objectMode;

	  if (stream instanceof Duplex)
	    this.objectMode = this.objectMode || !!options.writableObjectMode;

	  // the point at which write() starts returning false
	  // Note: 0 is a valid value, means that we always return false if
	  // the entire buffer is not flushed immediately on write()
	  var hwm = options.highWaterMark;
	  var defaultHwm = this.objectMode ? 16 : 16 * 1024;
	  this.highWaterMark = (hwm || hwm === 0) ? hwm : defaultHwm;

	  // cast to ints.
	  this.highWaterMark = ~~this.highWaterMark;

	  this.needDrain = false;
	  // at the start of calling end()
	  this.ending = false;
	  // when end() has been called, and returned
	  this.ended = false;
	  // when 'finish' is emitted
	  this.finished = false;

	  // should we decode strings into buffers before passing to _write?
	  // this is here so that some node-core streams can optimize string
	  // handling at a lower level.
	  var noDecode = options.decodeStrings === false;
	  this.decodeStrings = !noDecode;

	  // Crypto is kind of old and crusty.  Historically, its default string
	  // encoding is 'binary' so we have to make this configurable.
	  // Everything else in the universe uses 'utf8', though.
	  this.defaultEncoding = options.defaultEncoding || 'utf8';

	  // not an actual buffer we keep track of, but a measurement
	  // of how much we're waiting to get pushed to some underlying
	  // socket or file.
	  this.length = 0;

	  // a flag to see when we're in the middle of a write.
	  this.writing = false;

	  // when true all writes will be buffered until .uncork() call
	  this.corked = 0;

	  // a flag to be able to tell if the onwrite cb is called immediately,
	  // or on a later tick.  We set this to true at first, because any
	  // actions that shouldn't happen until "later" should generally also
	  // not happen before the first write call.
	  this.sync = true;

	  // a flag to know if we're processing previously buffered items, which
	  // may call the _write() callback in the same tick, so that we don't
	  // end up in an overlapped onwrite situation.
	  this.bufferProcessing = false;

	  // the callback that's passed to _write(chunk,cb)
	  this.onwrite = function(er) {
	    onwrite(stream, er);
	  };

	  // the callback that the user supplies to write(chunk,encoding,cb)
	  this.writecb = null;

	  // the amount that is being written when _write is called.
	  this.writelen = 0;

	  this.bufferedRequest = null;
	  this.lastBufferedRequest = null;

	  // number of pending user-supplied write callbacks
	  // this must be 0 before 'finish' can be emitted
	  this.pendingcb = 0;

	  // emit prefinish if the only thing we're waiting for is _write cbs
	  // This is relevant for synchronous Transform streams
	  this.prefinished = false;

	  // True if the error was already emitted and should not be thrown again
	  this.errorEmitted = false;
	}

	WritableState.prototype.getBuffer = function writableStateGetBuffer() {
	  var current = this.bufferedRequest;
	  var out = [];
	  while (current) {
	    out.push(current);
	    current = current.next;
	  }
	  return out;
	};

	(function (){try {
	Object.defineProperty(WritableState.prototype, 'buffer', {
	  get: __webpack_require__(552)(function() {
	    return this.getBuffer();
	  }, '_writableState.buffer is deprecated. Use ' +
	      '_writableState.getBuffer() instead.')
	});
	}catch(_){}}());


	function Writable(options) {
	  var Duplex = __webpack_require__(544);

	  // Writable ctor is applied to Duplexes, though they're not
	  // instanceof Writable, they're instanceof Readable.
	  if (!(this instanceof Writable) && !(this instanceof Duplex))
	    return new Writable(options);

	  this._writableState = new WritableState(options, this);

	  // legacy.
	  this.writable = true;

	  if (options) {
	    if (typeof options.write === 'function')
	      this._write = options.write;

	    if (typeof options.writev === 'function')
	      this._writev = options.writev;
	  }

	  Stream.call(this);
	}

	// Otherwise people can pipe Writable streams, which is just wrong.
	Writable.prototype.pipe = function() {
	  this.emit('error', new Error('Cannot pipe. Not readable.'));
	};


	function writeAfterEnd(stream, cb) {
	  var er = new Error('write after end');
	  // TODO: defer error events consistently everywhere, not just the cb
	  stream.emit('error', er);
	  processNextTick(cb, er);
	}

	// If we get something that is not a buffer, string, null, or undefined,
	// and we're not in objectMode, then that's an error.
	// Otherwise stream chunks are all considered to be of length=1, and the
	// watermarks determine how many objects to keep in the buffer, rather than
	// how many bytes or characters.
	function validChunk(stream, state, chunk, cb) {
	  var valid = true;

	  if (!(Buffer.isBuffer(chunk)) &&
	      typeof chunk !== 'string' &&
	      chunk !== null &&
	      chunk !== undefined &&
	      !state.objectMode) {
	    var er = new TypeError('Invalid non-string/buffer chunk');
	    stream.emit('error', er);
	    processNextTick(cb, er);
	    valid = false;
	  }
	  return valid;
	}

	Writable.prototype.write = function(chunk, encoding, cb) {
	  var state = this._writableState;
	  var ret = false;

	  if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }

	  if (Buffer.isBuffer(chunk))
	    encoding = 'buffer';
	  else if (!encoding)
	    encoding = state.defaultEncoding;

	  if (typeof cb !== 'function')
	    cb = nop;

	  if (state.ended)
	    writeAfterEnd(this, cb);
	  else if (validChunk(this, state, chunk, cb)) {
	    state.pendingcb++;
	    ret = writeOrBuffer(this, state, chunk, encoding, cb);
	  }

	  return ret;
	};

	Writable.prototype.cork = function() {
	  var state = this._writableState;

	  state.corked++;
	};

	Writable.prototype.uncork = function() {
	  var state = this._writableState;

	  if (state.corked) {
	    state.corked--;

	    if (!state.writing &&
	        !state.corked &&
	        !state.finished &&
	        !state.bufferProcessing &&
	        state.bufferedRequest)
	      clearBuffer(this, state);
	  }
	};

	Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
	  // node::ParseEncoding() requires lower case.
	  if (typeof encoding === 'string')
	    encoding = encoding.toLowerCase();
	  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64',
	'ucs2', 'ucs-2','utf16le', 'utf-16le', 'raw']
	.indexOf((encoding + '').toLowerCase()) > -1))
	    throw new TypeError('Unknown encoding: ' + encoding);
	  this._writableState.defaultEncoding = encoding;
	};

	function decodeChunk(state, chunk, encoding) {
	  if (!state.objectMode &&
	      state.decodeStrings !== false &&
	      typeof chunk === 'string') {
	    chunk = new Buffer(chunk, encoding);
	  }
	  return chunk;
	}

	// if we're already writing something, then just put this
	// in the queue, and wait our turn.  Otherwise, call _write
	// If we return false, then we need a drain event, so set that flag.
	function writeOrBuffer(stream, state, chunk, encoding, cb) {
	  chunk = decodeChunk(state, chunk, encoding);

	  if (Buffer.isBuffer(chunk))
	    encoding = 'buffer';
	  var len = state.objectMode ? 1 : chunk.length;

	  state.length += len;

	  var ret = state.length < state.highWaterMark;
	  // we must ensure that previous needDrain will not be reset to false.
	  if (!ret)
	    state.needDrain = true;

	  if (state.writing || state.corked) {
	    var last = state.lastBufferedRequest;
	    state.lastBufferedRequest = new WriteReq(chunk, encoding, cb);
	    if (last) {
	      last.next = state.lastBufferedRequest;
	    } else {
	      state.bufferedRequest = state.lastBufferedRequest;
	    }
	  } else {
	    doWrite(stream, state, false, len, chunk, encoding, cb);
	  }

	  return ret;
	}

	function doWrite(stream, state, writev, len, chunk, encoding, cb) {
	  state.writelen = len;
	  state.writecb = cb;
	  state.writing = true;
	  state.sync = true;
	  if (writev)
	    stream._writev(chunk, state.onwrite);
	  else
	    stream._write(chunk, encoding, state.onwrite);
	  state.sync = false;
	}

	function onwriteError(stream, state, sync, er, cb) {
	  --state.pendingcb;
	  if (sync)
	    processNextTick(cb, er);
	  else
	    cb(er);

	  stream._writableState.errorEmitted = true;
	  stream.emit('error', er);
	}

	function onwriteStateUpdate(state) {
	  state.writing = false;
	  state.writecb = null;
	  state.length -= state.writelen;
	  state.writelen = 0;
	}

	function onwrite(stream, er) {
	  var state = stream._writableState;
	  var sync = state.sync;
	  var cb = state.writecb;

	  onwriteStateUpdate(state);

	  if (er)
	    onwriteError(stream, state, sync, er, cb);
	  else {
	    // Check if we're actually ready to finish, but don't emit yet
	    var finished = needFinish(state);

	    if (!finished &&
	        !state.corked &&
	        !state.bufferProcessing &&
	        state.bufferedRequest) {
	      clearBuffer(stream, state);
	    }

	    if (sync) {
	      processNextTick(afterWrite, stream, state, finished, cb);
	    } else {
	      afterWrite(stream, state, finished, cb);
	    }
	  }
	}

	function afterWrite(stream, state, finished, cb) {
	  if (!finished)
	    onwriteDrain(stream, state);
	  state.pendingcb--;
	  cb();
	  finishMaybe(stream, state);
	}

	// Must force callback to be called on nextTick, so that we don't
	// emit 'drain' before the write() consumer gets the 'false' return
	// value, and has a chance to attach a 'drain' listener.
	function onwriteDrain(stream, state) {
	  if (state.length === 0 && state.needDrain) {
	    state.needDrain = false;
	    stream.emit('drain');
	  }
	}


	// if there's something in the buffer waiting, then process it
	function clearBuffer(stream, state) {
	  state.bufferProcessing = true;
	  var entry = state.bufferedRequest;

	  if (stream._writev && entry && entry.next) {
	    // Fast case, write everything using _writev()
	    var buffer = [];
	    var cbs = [];
	    while (entry) {
	      cbs.push(entry.callback);
	      buffer.push(entry);
	      entry = entry.next;
	    }

	    // count the one we are adding, as well.
	    // TODO(isaacs) clean this up
	    state.pendingcb++;
	    state.lastBufferedRequest = null;
	    doWrite(stream, state, true, state.length, buffer, '', function(err) {
	      for (var i = 0; i < cbs.length; i++) {
	        state.pendingcb--;
	        cbs[i](err);
	      }
	    });

	    // Clear buffer
	  } else {
	    // Slow case, write chunks one-by-one
	    while (entry) {
	      var chunk = entry.chunk;
	      var encoding = entry.encoding;
	      var cb = entry.callback;
	      var len = state.objectMode ? 1 : chunk.length;

	      doWrite(stream, state, false, len, chunk, encoding, cb);
	      entry = entry.next;
	      // if we didn't call the onwrite immediately, then
	      // it means that we need to wait until it does.
	      // also, that means that the chunk and cb are currently
	      // being processed, so move the buffer counter past them.
	      if (state.writing) {
	        break;
	      }
	    }

	    if (entry === null)
	      state.lastBufferedRequest = null;
	  }
	  state.bufferedRequest = entry;
	  state.bufferProcessing = false;
	}

	Writable.prototype._write = function(chunk, encoding, cb) {
	  cb(new Error('not implemented'));
	};

	Writable.prototype._writev = null;

	Writable.prototype.end = function(chunk, encoding, cb) {
	  var state = this._writableState;

	  if (typeof chunk === 'function') {
	    cb = chunk;
	    chunk = null;
	    encoding = null;
	  } else if (typeof encoding === 'function') {
	    cb = encoding;
	    encoding = null;
	  }

	  if (chunk !== null && chunk !== undefined)
	    this.write(chunk, encoding);

	  // .end() fully uncorks
	  if (state.corked) {
	    state.corked = 1;
	    this.uncork();
	  }

	  // ignore unnecessary end() calls.
	  if (!state.ending && !state.finished)
	    endWritable(this, state, cb);
	};


	function needFinish(state) {
	  return (state.ending &&
	          state.length === 0 &&
	          state.bufferedRequest === null &&
	          !state.finished &&
	          !state.writing);
	}

	function prefinish(stream, state) {
	  if (!state.prefinished) {
	    state.prefinished = true;
	    stream.emit('prefinish');
	  }
	}

	function finishMaybe(stream, state) {
	  var need = needFinish(state);
	  if (need) {
	    if (state.pendingcb === 0) {
	      prefinish(stream, state);
	      state.finished = true;
	      stream.emit('finish');
	    } else {
	      prefinish(stream, state);
	    }
	  }
	  return need;
	}

	function endWritable(stream, state, cb) {
	  state.ending = true;
	  finishMaybe(stream, state);
	  if (cb) {
	    if (state.finished)
	      processNextTick(cb);
	    else
	      stream.once('finish', cb);
	  }
	  state.ended = true;
	}


/***/ },
/* 552 */
/***/ function(module, exports, __webpack_require__) {

	
	/**
	 * For Node.js, simply re-export the core `util.deprecate` function.
	 */

	module.exports = __webpack_require__(471).deprecate;


/***/ },
/* 553 */
/***/ function(module, exports, __webpack_require__) {

	// Export sub-modules

	exports.error = exports.Error = __webpack_require__(554);
	exports.sntp = __webpack_require__(558);

	exports.server = __webpack_require__(562);
	exports.client = __webpack_require__(568);
	exports.crypto = __webpack_require__(565);
	exports.utils = __webpack_require__(566);

	exports.uri = {
	    authenticate: exports.server.authenticateBewit,
	    getBewit: exports.client.getBewit
	};



/***/ },
/* 554 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Http = __webpack_require__(21);
	var Hoek = __webpack_require__(555);


	// Declare internals

	var internals = {};


	exports.wrap = function (error, statusCode, message) {

	    Hoek.assert(error instanceof Error, 'Cannot wrap non-Error object');
	    return (error.isBoom ? error : internals.initialize(error, statusCode || 500, message));
	};


	exports.create = function (statusCode, message, data) {

	    var error = new Error(message ? message : undefined);       // Avoids settings null message
	    error.data = data || null;
	    internals.initialize(error, statusCode);
	    return error;
	};


	internals.initialize = function (error, statusCode, message) {

	    var numberCode = parseInt(statusCode, 10);
	    Hoek.assert(!isNaN(numberCode) && numberCode >= 400, 'First argument must be a number (400+):', statusCode);

	    error.isBoom = true;
	    error.isServer = numberCode >= 500;

	    if (!error.hasOwnProperty('data')) {
	        error.data = null;
	    }

	    error.output = {
	        statusCode: numberCode,
	        payload: {},
	        headers: {}
	    };

	    error.reformat = internals.reformat;
	    error.reformat();

	    if (!message &&
	        !error.message) {

	        message = error.output.payload.error;
	    }

	    if (message) {
	        error.message = (message + (error.message ? ': ' + error.message : ''));
	    }

	    return error;
	};


	internals.reformat = function () {

	    this.output.payload.statusCode = this.output.statusCode;
	    this.output.payload.error = Http.STATUS_CODES[this.output.statusCode] || 'Unknown';

	    if (this.output.statusCode === 500) {
	        this.output.payload.message = 'An internal server error occurred';              // Hide actual error from user
	    }
	    else if (this.message) {
	        this.output.payload.message = this.message;
	    }
	};


	// 4xx Client Errors

	exports.badRequest = function (message, data) {

	    return exports.create(400, message, data);
	};


	exports.unauthorized = function (message, scheme, attributes) {          // Or function (message, wwwAuthenticate[])

	    var err = exports.create(401, message);

	    if (!scheme) {
	        return err;
	    }

	    var wwwAuthenticate = '';
	    var i = 0;
	    var il = 0;

	    if (typeof scheme === 'string') {

	        // function (message, scheme, attributes)

	        wwwAuthenticate = scheme;

	        if (attributes || message) {
	            err.output.payload.attributes = {};
	        }

	        if (attributes) {
	            var names = Object.keys(attributes);
	            for (i = 0, il = names.length; i < il; ++i) {
	                var name = names[i];
	                if (i) {
	                    wwwAuthenticate += ',';
	                }

	                var value = attributes[name];
	                if (value === null ||
	                    value === undefined) {              // Value can be zero

	                    value = '';
	                }
	                wwwAuthenticate += ' ' + name + '="' + Hoek.escapeHeaderAttribute(value.toString()) + '"';
	                err.output.payload.attributes[name] = value;
	            }
	        }

	        if (message) {
	            if (attributes) {
	                wwwAuthenticate += ',';
	            }
	            wwwAuthenticate += ' error="' + Hoek.escapeHeaderAttribute(message) + '"';
	            err.output.payload.attributes.error = message;
	        }
	        else {
	            err.isMissing = true;
	        }
	    }
	    else {

	        // function (message, wwwAuthenticate[])

	        var wwwArray = scheme;
	        for (i = 0, il = wwwArray.length; i < il; ++i) {
	            if (i) {
	                wwwAuthenticate += ', ';
	            }

	            wwwAuthenticate += wwwArray[i];
	        }
	    }

	    err.output.headers['WWW-Authenticate'] = wwwAuthenticate;

	    return err;
	};


	exports.forbidden = function (message, data) {

	    return exports.create(403, message, data);
	};


	exports.notFound = function (message, data) {

	    return exports.create(404, message, data);
	};


	exports.methodNotAllowed = function (message, data) {

	    return exports.create(405, message, data);
	};


	exports.notAcceptable = function (message, data) {

	    return exports.create(406, message, data);
	};


	exports.proxyAuthRequired = function (message, data) {

	    return exports.create(407, message, data);
	};


	exports.clientTimeout = function (message, data) {

	    return exports.create(408, message, data);
	};


	exports.conflict = function (message, data) {

	    return exports.create(409, message, data);
	};


	exports.resourceGone = function (message, data) {

	    return exports.create(410, message, data);
	};


	exports.lengthRequired = function (message, data) {

	    return exports.create(411, message, data);
	};


	exports.preconditionFailed = function (message, data) {

	    return exports.create(412, message, data);
	};


	exports.entityTooLarge = function (message, data) {

	    return exports.create(413, message, data);
	};


	exports.uriTooLong = function (message, data) {

	    return exports.create(414, message, data);
	};


	exports.unsupportedMediaType = function (message, data) {

	    return exports.create(415, message, data);
	};


	exports.rangeNotSatisfiable = function (message, data) {

	    return exports.create(416, message, data);
	};


	exports.expectationFailed = function (message, data) {

	    return exports.create(417, message, data);
	};

	exports.badData = function (message, data) {

	    return exports.create(422, message, data);
	};


	exports.tooManyRequests = function (message, data) {

	    return exports.create(429, message, data);
	};


	// 5xx Server Errors

	exports.internal = function (message, data, statusCode) {

	    var error = (data instanceof Error ? exports.wrap(data, statusCode, message) : exports.create(statusCode || 500, message));

	    if (data instanceof Error === false) {
	        error.data = data;
	    }

	    return error;
	};


	exports.notImplemented = function (message, data) {

	    return exports.internal(message, data, 501);
	};


	exports.badGateway = function (message, data) {

	    return exports.internal(message, data, 502);
	};


	exports.serverTimeout = function (message, data) {

	    return exports.internal(message, data, 503);
	};


	exports.gatewayTimeout = function (message, data) {

	    return exports.internal(message, data, 504);
	};


	exports.badImplementation = function (message, data) {

	    var err = exports.internal(message, data, 500);
	    err.isDeveloperError = true;
	    return err;
	};


/***/ },
/* 555 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(556);


/***/ },
/* 556 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Crypto = __webpack_require__(539);
	var Path = __webpack_require__(12);
	var Util = __webpack_require__(471);
	var Escape = __webpack_require__(557);


	// Declare internals

	var internals = {};


	// Clone object or array

	exports.clone = function (obj, seen) {

	    if (typeof obj !== 'object' ||
	        obj === null) {

	        return obj;
	    }

	    seen = seen || { orig: [], copy: [] };

	    var lookup = seen.orig.indexOf(obj);
	    if (lookup !== -1) {
	        return seen.copy[lookup];
	    }

	    var newObj;
	    var cloneDeep = false;

	    if (!Array.isArray(obj)) {
	        if (Buffer.isBuffer(obj)) {
	            newObj = new Buffer(obj);
	        }
	        else if (obj instanceof Date) {
	            newObj = new Date(obj.getTime());
	        }
	        else if (obj instanceof RegExp) {
	            newObj = new RegExp(obj);
	        }
	        else {
	            var proto = Object.getPrototypeOf(obj);
	            if (proto &&
	                proto.isImmutable) {

	                newObj = obj;
	            }
	            else {
	                newObj = Object.create(proto);
	                cloneDeep = true;
	            }
	        }
	    }
	    else {
	        newObj = [];
	        cloneDeep = true;
	    }

	    seen.orig.push(obj);
	    seen.copy.push(newObj);

	    if (cloneDeep) {
	        var keys = Object.getOwnPropertyNames(obj);
	        for (var i = 0, il = keys.length; i < il; ++i) {
	            var key = keys[i];
	            var descriptor = Object.getOwnPropertyDescriptor(obj, key);
	            if (descriptor.get ||
	                descriptor.set) {

	                Object.defineProperty(newObj, key, descriptor);
	            }
	            else {
	                newObj[key] = exports.clone(obj[key], seen);
	            }
	        }
	    }

	    return newObj;
	};


	// Merge all the properties of source into target, source wins in conflict, and by default null and undefined from source are applied
	/*eslint-disable */
	exports.merge = function (target, source, isNullOverride /* = true */, isMergeArrays /* = true */) {
	/*eslint-enable */
	    exports.assert(target && typeof target === 'object', 'Invalid target value: must be an object');
	    exports.assert(source === null || source === undefined || typeof source === 'object', 'Invalid source value: must be null, undefined, or an object');

	    if (!source) {
	        return target;
	    }

	    if (Array.isArray(source)) {
	        exports.assert(Array.isArray(target), 'Cannot merge array onto an object');
	        if (isMergeArrays === false) {                                                  // isMergeArrays defaults to true
	            target.length = 0;                                                          // Must not change target assignment
	        }

	        for (var i = 0, il = source.length; i < il; ++i) {
	            target.push(exports.clone(source[i]));
	        }

	        return target;
	    }

	    var keys = Object.keys(source);
	    for (var k = 0, kl = keys.length; k < kl; ++k) {
	        var key = keys[k];
	        var value = source[key];
	        if (value &&
	            typeof value === 'object') {

	            if (!target[key] ||
	                typeof target[key] !== 'object' ||
	                (Array.isArray(target[key]) ^ Array.isArray(value)) ||
	                value instanceof Date ||
	                Buffer.isBuffer(value) ||
	                value instanceof RegExp) {

	                target[key] = exports.clone(value);
	            }
	            else {
	                exports.merge(target[key], value, isNullOverride, isMergeArrays);
	            }
	        }
	        else {
	            if (value !== null &&
	                value !== undefined) {                              // Explicit to preserve empty strings

	                target[key] = value;
	            }
	            else if (isNullOverride !== false) {                    // Defaults to true
	                target[key] = value;
	            }
	        }
	    }

	    return target;
	};


	// Apply options to a copy of the defaults

	exports.applyToDefaults = function (defaults, options, isNullOverride) {

	    exports.assert(defaults && typeof defaults === 'object', 'Invalid defaults value: must be an object');
	    exports.assert(!options || options === true || typeof options === 'object', 'Invalid options value: must be true, falsy or an object');

	    if (!options) {                                                 // If no options, return null
	        return null;
	    }

	    var copy = exports.clone(defaults);

	    if (options === true) {                                         // If options is set to true, use defaults
	        return copy;
	    }

	    return exports.merge(copy, options, isNullOverride === true, false);
	};


	// Clone an object except for the listed keys which are shallow copied

	exports.cloneWithShallow = function (source, keys) {

	    if (!source ||
	        typeof source !== 'object') {

	        return source;
	    }

	    var storage = internals.store(source, keys);    // Move shallow copy items to storage
	    var copy = exports.clone(source);               // Deep copy the rest
	    internals.restore(copy, source, storage);       // Shallow copy the stored items and restore
	    return copy;
	};


	internals.store = function (source, keys) {

	    var storage = {};
	    for (var i = 0, il = keys.length; i < il; ++i) {
	        var key = keys[i];
	        var value = exports.reach(source, key);
	        if (value !== undefined) {
	            storage[key] = value;
	            internals.reachSet(source, key, undefined);
	        }
	    }

	    return storage;
	};


	internals.restore = function (copy, source, storage) {

	    var keys = Object.keys(storage);
	    for (var i = 0, il = keys.length; i < il; ++i) {
	        var key = keys[i];
	        internals.reachSet(copy, key, storage[key]);
	        internals.reachSet(source, key, storage[key]);
	    }
	};


	internals.reachSet = function (obj, key, value) {

	    var path = key.split('.');
	    var ref = obj;
	    for (var i = 0, il = path.length; i < il; ++i) {
	        var segment = path[i];
	        if (i + 1 === il) {
	            ref[segment] = value;
	        }

	        ref = ref[segment];
	    }
	};


	// Apply options to defaults except for the listed keys which are shallow copied from option without merging

	exports.applyToDefaultsWithShallow = function (defaults, options, keys) {

	    exports.assert(defaults && typeof defaults === 'object', 'Invalid defaults value: must be an object');
	    exports.assert(!options || options === true || typeof options === 'object', 'Invalid options value: must be true, falsy or an object');
	    exports.assert(keys && Array.isArray(keys), 'Invalid keys');

	    if (!options) {                                                 // If no options, return null
	        return null;
	    }

	    var copy = exports.cloneWithShallow(defaults, keys);

	    if (options === true) {                                         // If options is set to true, use defaults
	        return copy;
	    }

	    var storage = internals.store(options, keys);   // Move shallow copy items to storage
	    exports.merge(copy, options, false, false);     // Deep copy the rest
	    internals.restore(copy, options, storage);      // Shallow copy the stored items and restore
	    return copy;
	};


	// Deep object or array comparison

	exports.deepEqual = function (obj, ref, options, seen) {

	    options = options || { prototype: true };

	    var type = typeof obj;

	    if (type !== typeof ref) {
	        return false;
	    }

	    if (type !== 'object' ||
	        obj === null ||
	        ref === null) {

	        if (obj === ref) {                                                      // Copied from Deep-eql, copyright(c) 2013 Jake Luer, jake@alogicalparadox.com, MIT Licensed, https://github.com/chaijs/deep-eql
	            return obj !== 0 || 1 / obj === 1 / ref;        // -0 / +0
	        }

	        return obj !== obj && ref !== ref;                  // NaN
	    }

	    seen = seen || [];
	    if (seen.indexOf(obj) !== -1) {
	        return true;                            // If previous comparison failed, it would have stopped execution
	    }

	    seen.push(obj);

	    if (Array.isArray(obj)) {
	        if (!Array.isArray(ref)) {
	            return false;
	        }

	        if (!options.part && obj.length !== ref.length) {
	            return false;
	        }

	        for (var i = 0, il = obj.length; i < il; ++i) {
	            if (options.part) {
	                var found = false;
	                for (var r = 0, rl = ref.length; r < rl; ++r) {
	                    if (exports.deepEqual(obj[i], ref[r], options, seen)) {
	                        found = true;
	                        break;
	                    }
	                }

	                return found;
	            }

	            if (!exports.deepEqual(obj[i], ref[i], options, seen)) {
	                return false;
	            }
	        }

	        return true;
	    }

	    if (Buffer.isBuffer(obj)) {
	        if (!Buffer.isBuffer(ref)) {
	            return false;
	        }

	        if (obj.length !== ref.length) {
	            return false;
	        }

	        for (var j = 0, jl = obj.length; j < jl; ++j) {
	            if (obj[j] !== ref[j]) {
	                return false;
	            }
	        }

	        return true;
	    }

	    if (obj instanceof Date) {
	        return (ref instanceof Date && obj.getTime() === ref.getTime());
	    }

	    if (obj instanceof RegExp) {
	        return (ref instanceof RegExp && obj.toString() === ref.toString());
	    }

	    if (options.prototype) {
	        if (Object.getPrototypeOf(obj) !== Object.getPrototypeOf(ref)) {
	            return false;
	        }
	    }

	    var keys = Object.getOwnPropertyNames(obj);

	    if (!options.part && keys.length !== Object.getOwnPropertyNames(ref).length) {
	        return false;
	    }

	    for (var k = 0, kl = keys.length; k < kl; ++k) {
	        var key = keys[k];
	        var descriptor = Object.getOwnPropertyDescriptor(obj, key);
	        if (descriptor.get) {
	            if (!exports.deepEqual(descriptor, Object.getOwnPropertyDescriptor(ref, key), options, seen)) {
	                return false;
	            }
	        }
	        else if (!exports.deepEqual(obj[key], ref[key], options, seen)) {
	            return false;
	        }
	    }

	    return true;
	};


	// Remove duplicate items from array

	exports.unique = function (array, key) {

	    var index = {};
	    var result = [];

	    for (var i = 0, il = array.length; i < il; ++i) {
	        var id = (key ? array[i][key] : array[i]);
	        if (index[id] !== true) {

	            result.push(array[i]);
	            index[id] = true;
	        }
	    }

	    return result;
	};


	// Convert array into object

	exports.mapToObject = function (array, key) {

	    if (!array) {
	        return null;
	    }

	    var obj = {};
	    for (var i = 0, il = array.length; i < il; ++i) {
	        if (key) {
	            if (array[i][key]) {
	                obj[array[i][key]] = true;
	            }
	        }
	        else {
	            obj[array[i]] = true;
	        }
	    }

	    return obj;
	};


	// Find the common unique items in two arrays

	exports.intersect = function (array1, array2, justFirst) {

	    if (!array1 || !array2) {
	        return [];
	    }

	    var common = [];
	    var hash = (Array.isArray(array1) ? exports.mapToObject(array1) : array1);
	    var found = {};
	    for (var i = 0, il = array2.length; i < il; ++i) {
	        if (hash[array2[i]] && !found[array2[i]]) {
	            if (justFirst) {
	                return array2[i];
	            }

	            common.push(array2[i]);
	            found[array2[i]] = true;
	        }
	    }

	    return (justFirst ? null : common);
	};


	// Test if the reference contains the values

	exports.contain = function (ref, values, options) {

	    /*
	        string -> string(s)
	        array -> item(s)
	        object -> key(s)
	        object -> object (key:value)
	    */

	    var valuePairs = null;
	    if (typeof ref === 'object' &&
	        typeof values === 'object' &&
	        !Array.isArray(ref) &&
	        !Array.isArray(values)) {

	        valuePairs = values;
	        values = Object.keys(values);
	    }
	    else {
	        values = [].concat(values);
	    }

	    options = options || {};            // deep, once, only, part

	    exports.assert(arguments.length >= 2, 'Insufficient arguments');
	    exports.assert(typeof ref === 'string' || typeof ref === 'object', 'Reference must be string or an object');
	    exports.assert(values.length, 'Values array cannot be empty');

	    var compare, compareFlags;
	    if (options.deep) {
	        compare = exports.deepEqual;

	        var hasOnly = options.hasOwnProperty('only'), hasPart = options.hasOwnProperty('part');

	        compareFlags = {
	            prototype: hasOnly ? options.only : hasPart ? !options.part : false,
	            part: hasOnly ? !options.only : hasPart ? options.part : true
	        };
	    }
	    else {
	        compare = function (a, b) {

	            return a === b;
	        };
	    }

	    var misses = false;
	    var matches = new Array(values.length);
	    for (var i = 0, il = matches.length; i < il; ++i) {
	        matches[i] = 0;
	    }

	    if (typeof ref === 'string') {
	        var pattern = '(';
	        for (i = 0, il = values.length; i < il; ++i) {
	            var value = values[i];
	            exports.assert(typeof value === 'string', 'Cannot compare string reference to non-string value');
	            pattern += (i ? '|' : '') + exports.escapeRegex(value);
	        }

	        var regex = new RegExp(pattern + ')', 'g');
	        var leftovers = ref.replace(regex, function ($0, $1) {

	            var index = values.indexOf($1);
	            ++matches[index];
	            return '';          // Remove from string
	        });

	        misses = !!leftovers;
	    }
	    else if (Array.isArray(ref)) {
	        for (i = 0, il = ref.length; i < il; ++i) {
	            for (var j = 0, jl = values.length, matched = false; j < jl && matched === false; ++j) {
	                matched = compare(values[j], ref[i], compareFlags) && j;
	            }

	            if (matched !== false) {
	                ++matches[matched];
	            }
	            else {
	                misses = true;
	            }
	        }
	    }
	    else {
	        var keys = Object.keys(ref);
	        for (i = 0, il = keys.length; i < il; ++i) {
	            var key = keys[i];
	            var pos = values.indexOf(key);
	            if (pos !== -1) {
	                if (valuePairs &&
	                    !compare(valuePairs[key], ref[key], compareFlags)) {

	                    return false;
	                }

	                ++matches[pos];
	            }
	            else {
	                misses = true;
	            }
	        }
	    }

	    var result = false;
	    for (i = 0, il = matches.length; i < il; ++i) {
	        result = result || !!matches[i];
	        if ((options.once && matches[i] > 1) ||
	            (!options.part && !matches[i])) {

	            return false;
	        }
	    }

	    if (options.only &&
	        misses) {

	        return false;
	    }

	    return result;
	};


	// Flatten array

	exports.flatten = function (array, target) {

	    var result = target || [];

	    for (var i = 0, il = array.length; i < il; ++i) {
	        if (Array.isArray(array[i])) {
	            exports.flatten(array[i], result);
	        }
	        else {
	            result.push(array[i]);
	        }
	    }

	    return result;
	};


	// Convert an object key chain string ('a.b.c') to reference (object[a][b][c])

	exports.reach = function (obj, chain, options) {

	    options = options || {};
	    if (typeof options === 'string') {
	        options = { separator: options };
	    }

	    var path = chain.split(options.separator || '.');
	    var ref = obj;
	    for (var i = 0, il = path.length; i < il; ++i) {
	        var key = path[i];
	        if (key[0] === '-' && Array.isArray(ref)) {
	            key = key.slice(1, key.length);
	            key = ref.length - key;
	        }

	        if (!ref ||
	            !ref.hasOwnProperty(key) ||
	            (typeof ref !== 'object' && options.functions === false)) {         // Only object and function can have properties

	            exports.assert(!options.strict || i + 1 === il, 'Missing segment', key, 'in reach path ', chain);
	            exports.assert(typeof ref === 'object' || options.functions === true || typeof ref !== 'function', 'Invalid segment', key, 'in reach path ', chain);
	            ref = options.default;
	            break;
	        }

	        ref = ref[key];
	    }

	    return ref;
	};


	exports.reachTemplate = function (obj, template, options) {

	    return template.replace(/{([^}]+)}/g, function ($0, chain) {

	        var value = exports.reach(obj, chain, options);
	        return (value === undefined || value === null ? '' : value);
	    });
	};


	exports.formatStack = function (stack) {

	    var trace = [];
	    for (var i = 0, il = stack.length; i < il; ++i) {
	        var item = stack[i];
	        trace.push([item.getFileName(), item.getLineNumber(), item.getColumnNumber(), item.getFunctionName(), item.isConstructor()]);
	    }

	    return trace;
	};


	exports.formatTrace = function (trace) {

	    var display = [];

	    for (var i = 0, il = trace.length; i < il; ++i) {
	        var row = trace[i];
	        display.push((row[4] ? 'new ' : '') + row[3] + ' (' + row[0] + ':' + row[1] + ':' + row[2] + ')');
	    }

	    return display;
	};


	exports.callStack = function (slice) {

	    // http://code.google.com/p/v8/wiki/JavaScriptStackTraceApi

	    var v8 = Error.prepareStackTrace;
	    Error.prepareStackTrace = function (err, stack) {

	        return stack;
	    };

	    var capture = {};
	    Error.captureStackTrace(capture, arguments.callee);     /*eslint no-caller:0 */
	    var stack = capture.stack;

	    Error.prepareStackTrace = v8;

	    var trace = exports.formatStack(stack);

	    if (slice) {
	        return trace.slice(slice);
	    }

	    return trace;
	};


	exports.displayStack = function (slice) {

	    var trace = exports.callStack(slice === undefined ? 1 : slice + 1);

	    return exports.formatTrace(trace);
	};


	exports.abortThrow = false;


	exports.abort = function (message, hideStack) {

	    if (process.env.NODE_ENV === 'test' || exports.abortThrow === true) {
	        throw new Error(message || 'Unknown error');
	    }

	    var stack = '';
	    if (!hideStack) {
	        stack = exports.displayStack(1).join('\n\t');
	    }
	    console.log('ABORT: ' + message + '\n\t' + stack);
	    process.exit(1);
	};


	exports.assert = function (condition /*, msg1, msg2, msg3 */) {

	    if (condition) {
	        return;
	    }

	    if (arguments.length === 2 && arguments[1] instanceof Error) {
	        throw arguments[1];
	    }

	    var msgs = [];
	    for (var i = 1, il = arguments.length; i < il; ++i) {
	        if (arguments[i] !== '') {
	            msgs.push(arguments[i]);            // Avoids Array.slice arguments leak, allowing for V8 optimizations
	        }
	    }

	    msgs = msgs.map(function (msg) {

	        return typeof msg === 'string' ? msg : msg instanceof Error ? msg.message : exports.stringify(msg);
	    });
	    throw new Error(msgs.join(' ') || 'Unknown error');
	};


	exports.Timer = function () {

	    this.ts = 0;
	    this.reset();
	};


	exports.Timer.prototype.reset = function () {

	    this.ts = Date.now();
	};


	exports.Timer.prototype.elapsed = function () {

	    return Date.now() - this.ts;
	};


	exports.Bench = function () {

	    this.ts = 0;
	    this.reset();
	};


	exports.Bench.prototype.reset = function () {

	    this.ts = exports.Bench.now();
	};


	exports.Bench.prototype.elapsed = function () {

	    return exports.Bench.now() - this.ts;
	};


	exports.Bench.now = function () {

	    var ts = process.hrtime();
	    return (ts[0] * 1e3) + (ts[1] / 1e6);
	};


	// Escape string for Regex construction

	exports.escapeRegex = function (string) {

	    // Escape ^$.*+-?=!:|\/()[]{},
	    return string.replace(/[\^\$\.\*\+\-\?\=\!\:\|\\\/\(\)\[\]\{\}\,]/g, '\\$&');
	};


	// Base64url (RFC 4648) encode

	exports.base64urlEncode = function (value, encoding) {

	    var buf = (Buffer.isBuffer(value) ? value : new Buffer(value, encoding || 'binary'));
	    return buf.toString('base64').replace(/\+/g, '-').replace(/\//g, '_').replace(/\=/g, '');
	};


	// Base64url (RFC 4648) decode

	exports.base64urlDecode = function (value, encoding) {

	    if (value &&
	        !/^[\w\-]*$/.test(value)) {

	        return new Error('Invalid character');
	    }

	    try {
	        var buf = new Buffer(value, 'base64');
	        return (encoding === 'buffer' ? buf : buf.toString(encoding || 'binary'));
	    }
	    catch (err) {
	        return err;
	    }
	};


	// Escape attribute value for use in HTTP header

	exports.escapeHeaderAttribute = function (attribute) {

	    // Allowed value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9, \, "

	    exports.assert(/^[ \w\!#\$%&'\(\)\*\+,\-\.\/\:;<\=>\?@\[\]\^`\{\|\}~\"\\]*$/.test(attribute), 'Bad attribute value (' + attribute + ')');

	    return attribute.replace(/\\/g, '\\\\').replace(/\"/g, '\\"');                             // Escape quotes and slash
	};


	exports.escapeHtml = function (string) {

	    return Escape.escapeHtml(string);
	};


	exports.escapeJavaScript = function (string) {

	    return Escape.escapeJavaScript(string);
	};


	exports.nextTick = function (callback) {

	    return function () {

	        var args = arguments;
	        process.nextTick(function () {

	            callback.apply(null, args);
	        });
	    };
	};


	exports.once = function (method) {

	    if (method._hoekOnce) {
	        return method;
	    }

	    var once = false;
	    var wrapped = function () {

	        if (!once) {
	            once = true;
	            method.apply(null, arguments);
	        }
	    };

	    wrapped._hoekOnce = true;

	    return wrapped;
	};


	exports.isAbsolutePath = function (path, platform) {

	    if (!path) {
	        return false;
	    }

	    if (Path.isAbsolute) {                      // node >= 0.11
	        return Path.isAbsolute(path);
	    }

	    platform = platform || process.platform;

	    // Unix

	    if (platform !== 'win32') {
	        return path[0] === '/';
	    }

	    // Windows

	    return !!/^(?:[a-zA-Z]:[\\\/])|(?:[\\\/]{2}[^\\\/]+[\\\/]+[^\\\/])/.test(path);        // C:\ or \\something\something
	};


	exports.isInteger = function (value) {

	    return (typeof value === 'number' &&
	            parseFloat(value) === parseInt(value, 10) &&
	            !isNaN(value));
	};


	exports.ignore = function () { };


	exports.inherits = Util.inherits;


	exports.format = Util.format;


	exports.transform = function (source, transform, options) {

	    exports.assert(source === null || source === undefined || typeof source === 'object', 'Invalid source object: must be null, undefined, or an object');

	    var result = {};
	    var keys = Object.keys(transform);

	    for (var k = 0, kl = keys.length; k < kl; ++k) {
	        var key = keys[k];
	        var path = key.split('.');
	        var sourcePath = transform[key];

	        exports.assert(typeof sourcePath === 'string', 'All mappings must be "." delineated strings');

	        var segment;
	        var res = result;

	        while (path.length > 1) {
	            segment = path.shift();
	            if (!res[segment]) {
	                res[segment] = {};
	            }
	            res = res[segment];
	        }
	        segment = path.shift();
	        res[segment] = exports.reach(source, sourcePath, options);
	    }

	    return result;
	};


	exports.uniqueFilename = function (path, extension) {

	    if (extension) {
	        extension = extension[0] !== '.' ? '.' + extension : extension;
	    }
	    else {
	        extension = '';
	    }

	    path = Path.resolve(path);
	    var name = [Date.now(), process.pid, Crypto.randomBytes(8).toString('hex')].join('-') + extension;
	    return Path.join(path, name);
	};


	exports.stringify = function () {

	    try {
	        return JSON.stringify.apply(null, arguments);
	    }
	    catch (err) {
	        return '[Cannot display object: ' + err.message + ']';
	    }
	};


	exports.shallow = function (source) {

	    var target = {};
	    var keys = Object.keys(source);
	    for (var i = 0, il = keys.length; i < il; ++i) {
	        var key = keys[i];
	        target[key] = source[key];
	    }

	    return target;
	};


/***/ },
/* 557 */
/***/ function(module, exports) {

	// Declare internals

	var internals = {};


	exports.escapeJavaScript = function (input) {

	    if (!input) {
	        return '';
	    }

	    var escaped = '';

	    for (var i = 0, il = input.length; i < il; ++i) {

	        var charCode = input.charCodeAt(i);

	        if (internals.isSafe(charCode)) {
	            escaped += input[i];
	        }
	        else {
	            escaped += internals.escapeJavaScriptChar(charCode);
	        }
	    }

	    return escaped;
	};


	exports.escapeHtml = function (input) {

	    if (!input) {
	        return '';
	    }

	    var escaped = '';

	    for (var i = 0, il = input.length; i < il; ++i) {

	        var charCode = input.charCodeAt(i);

	        if (internals.isSafe(charCode)) {
	            escaped += input[i];
	        }
	        else {
	            escaped += internals.escapeHtmlChar(charCode);
	        }
	    }

	    return escaped;
	};


	internals.escapeJavaScriptChar = function (charCode) {

	    if (charCode >= 256) {
	        return '\\u' + internals.padLeft('' + charCode, 4);
	    }

	    var hexValue = new Buffer(String.fromCharCode(charCode), 'ascii').toString('hex');
	    return '\\x' + internals.padLeft(hexValue, 2);
	};


	internals.escapeHtmlChar = function (charCode) {

	    var namedEscape = internals.namedHtml[charCode];
	    if (typeof namedEscape !== 'undefined') {
	        return namedEscape;
	    }

	    if (charCode >= 256) {
	        return '&#' + charCode + ';';
	    }

	    var hexValue = new Buffer(String.fromCharCode(charCode), 'ascii').toString('hex');
	    return '&#x' + internals.padLeft(hexValue, 2) + ';';
	};


	internals.padLeft = function (str, len) {

	    while (str.length < len) {
	        str = '0' + str;
	    }

	    return str;
	};


	internals.isSafe = function (charCode) {

	    return (typeof internals.safeCharCodes[charCode] !== 'undefined');
	};


	internals.namedHtml = {
	    '38': '&amp;',
	    '60': '&lt;',
	    '62': '&gt;',
	    '34': '&quot;',
	    '160': '&nbsp;',
	    '162': '&cent;',
	    '163': '&pound;',
	    '164': '&curren;',
	    '169': '&copy;',
	    '174': '&reg;'
	};


	internals.safeCharCodes = (function () {

	    var safe = {};

	    for (var i = 32; i < 123; ++i) {

	        if ((i >= 97) ||                    // a-z
	            (i >= 65 && i <= 90) ||         // A-Z
	            (i >= 48 && i <= 57) ||         // 0-9
	            i === 32 ||                     // space
	            i === 46 ||                     // .
	            i === 44 ||                     // ,
	            i === 45 ||                     // -
	            i === 58 ||                     // :
	            i === 95) {                     // _

	            safe[i] = null;
	        }
	    }

	    return safe;
	}());


/***/ },
/* 558 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(559);

/***/ },
/* 559 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Dgram = __webpack_require__(560);
	var Dns = __webpack_require__(561);
	var Hoek = __webpack_require__(555);


	// Declare internals

	var internals = {};


	exports.time = function (options, callback) {

	    if (arguments.length !== 2) {
	        callback = arguments[0];
	        options = {};
	    }

	    var settings = Hoek.clone(options);
	    settings.host = settings.host || 'pool.ntp.org';
	    settings.port = settings.port || 123;
	    settings.resolveReference = settings.resolveReference || false;

	    // Declare variables used by callback

	    var timeoutId = 0;
	    var sent = 0;

	    // Ensure callback is only called once

	    var finish = function (err, result) {

	        if (timeoutId) {
	            clearTimeout(timeoutId);
	            timeoutId = 0;
	        }

	        socket.removeAllListeners();
	        socket.once('error', internals.ignore);
	        socket.close();
	        return callback(err, result);
	    };

	    finish = Hoek.once(finish);

	    // Create UDP socket

	    var socket = Dgram.createSocket('udp4');

	    socket.once('error', function (err) {

	        return finish(err);
	    });

	    // Listen to incoming messages

	    socket.on('message', function (buffer, rinfo) {

	        var received = Date.now();

	        var message = new internals.NtpMessage(buffer);
	        if (!message.isValid) {
	            return finish(new Error('Invalid server response'), message);
	        }

	        if (message.originateTimestamp !== sent) {
	            return finish(new Error('Wrong originate timestamp'), message);
	        }

	        // Timestamp Name          ID   When Generated
	        // ------------------------------------------------------------
	        // Originate Timestamp     T1   time request sent by client
	        // Receive Timestamp       T2   time request received by server
	        // Transmit Timestamp      T3   time reply sent by server
	        // Destination Timestamp   T4   time reply received by client
	        //
	        // The roundtrip delay d and system clock offset t are defined as:
	        //
	        // d = (T4 - T1) - (T3 - T2)     t = ((T2 - T1) + (T3 - T4)) / 2

	        var T1 = message.originateTimestamp;
	        var T2 = message.receiveTimestamp;
	        var T3 = message.transmitTimestamp;
	        var T4 = received;

	        message.d = (T4 - T1) - (T3 - T2);
	        message.t = ((T2 - T1) + (T3 - T4)) / 2;
	        message.receivedLocally = received;

	        if (!settings.resolveReference ||
	            message.stratum !== 'secondary') {

	            return finish(null, message);
	        }

	        // Resolve reference IP address

	        Dns.reverse(message.referenceId, function (err, domains) {

	            if (/* $lab:coverage:off$ */ !err /* $lab:coverage:on$ */) {
	                message.referenceHost = domains[0];
	            }

	            return finish(null, message);
	        });
	    });

	    // Set timeout

	    if (settings.timeout) {
	        timeoutId = setTimeout(function () {

	            timeoutId = 0;
	            return finish(new Error('Timeout'));
	        }, settings.timeout);
	    }

	    // Construct NTP message

	    var message = new Buffer(48);
	    for (var i = 0; i < 48; i++) {                      // Zero message
	        message[i] = 0;
	    }

	    message[0] = (0 << 6) + (4 << 3) + (3 << 0)         // Set version number to 4 and Mode to 3 (client)
	    sent = Date.now();
	    internals.fromMsecs(sent, message, 40);               // Set transmit timestamp (returns as originate)

	    // Send NTP request

	    socket.send(message, 0, message.length, settings.port, settings.host, function (err, bytes) {

	        if (err ||
	            bytes !== 48) {

	            return finish(err || new Error('Could not send entire message'));
	        }
	    });
	};


	internals.NtpMessage = function (buffer) {

	    this.isValid = false;

	    // Validate

	    if (buffer.length !== 48) {
	        return;
	    }

	    // Leap indicator

	    var li = (buffer[0] >> 6);
	    switch (li) {
	        case 0: this.leapIndicator = 'no-warning'; break;
	        case 1: this.leapIndicator = 'last-minute-61'; break;
	        case 2: this.leapIndicator = 'last-minute-59'; break;
	        case 3: this.leapIndicator = 'alarm'; break;
	    }

	    // Version

	    var vn = ((buffer[0] & 0x38) >> 3);
	    this.version = vn;

	    // Mode

	    var mode = (buffer[0] & 0x7);
	    switch (mode) {
	        case 1: this.mode = 'symmetric-active'; break;
	        case 2: this.mode = 'symmetric-passive'; break;
	        case 3: this.mode = 'client'; break;
	        case 4: this.mode = 'server'; break;
	        case 5: this.mode = 'broadcast'; break;
	        case 0:
	        case 6:
	        case 7: this.mode = 'reserved'; break;
	    }

	    // Stratum

	    var stratum = buffer[1];
	    if (stratum === 0) {
	        this.stratum = 'death';
	    }
	    else if (stratum === 1) {
	        this.stratum = 'primary';
	    }
	    else if (stratum <= 15) {
	        this.stratum = 'secondary';
	    }
	    else {
	        this.stratum = 'reserved';
	    }

	    // Poll interval (msec)

	    this.pollInterval = Math.round(Math.pow(2, buffer[2])) * 1000;

	    // Precision (msecs)

	    this.precision = Math.pow(2, buffer[3]) * 1000;

	    // Root delay (msecs)

	    var rootDelay = 256 * (256 * (256 * buffer[4] + buffer[5]) + buffer[6]) + buffer[7];
	    this.rootDelay = 1000 * (rootDelay / 0x10000);

	    // Root dispersion (msecs)

	    this.rootDispersion = ((buffer[8] << 8) + buffer[9] + ((buffer[10] << 8) + buffer[11]) / Math.pow(2, 16)) * 1000;

	    // Reference identifier

	    this.referenceId = '';
	    switch (this.stratum) {
	        case 'death':
	        case 'primary':
	            this.referenceId = String.fromCharCode(buffer[12]) + String.fromCharCode(buffer[13]) + String.fromCharCode(buffer[14]) + String.fromCharCode(buffer[15]);
	            break;
	        case 'secondary':
	            this.referenceId = '' + buffer[12] + '.' + buffer[13] + '.' + buffer[14] + '.' + buffer[15];
	            break;
	    }

	    // Reference timestamp

	    this.referenceTimestamp = internals.toMsecs(buffer, 16);

	    // Originate timestamp

	    this.originateTimestamp = internals.toMsecs(buffer, 24);

	    // Receive timestamp

	    this.receiveTimestamp = internals.toMsecs(buffer, 32);

	    // Transmit timestamp

	    this.transmitTimestamp = internals.toMsecs(buffer, 40);

	    // Validate

	    if (this.version === 4 &&
	        this.stratum !== 'reserved' &&
	        this.mode === 'server' &&
	        this.originateTimestamp &&
	        this.receiveTimestamp &&
	        this.transmitTimestamp) {

	        this.isValid = true;
	    }

	    return this;
	};


	internals.toMsecs = function (buffer, offset) {

	    var seconds = 0;
	    var fraction = 0;

	    for (var i = 0; i < 4; ++i) {
	        seconds = (seconds * 256) + buffer[offset + i];
	    }

	    for (i = 4; i < 8; ++i) {
	        fraction = (fraction * 256) + buffer[offset + i];
	    }

	    return ((seconds - 2208988800 + (fraction / Math.pow(2, 32))) * 1000);
	};


	internals.fromMsecs = function (ts, buffer, offset) {

	    var seconds = Math.floor(ts / 1000) + 2208988800;
	    var fraction = Math.round((ts % 1000) / 1000 * Math.pow(2, 32));

	    buffer[offset + 0] = (seconds & 0xFF000000) >> 24;
	    buffer[offset + 1] = (seconds & 0x00FF0000) >> 16;
	    buffer[offset + 2] = (seconds & 0x0000FF00) >> 8;
	    buffer[offset + 3] = (seconds & 0x000000FF);

	    buffer[offset + 4] = (fraction & 0xFF000000) >> 24;
	    buffer[offset + 5] = (fraction & 0x00FF0000) >> 16;
	    buffer[offset + 6] = (fraction & 0x0000FF00) >> 8;
	    buffer[offset + 7] = (fraction & 0x000000FF);
	};


	// Offset singleton

	internals.last = {
	    offset: 0,
	    expires: 0,
	    host: '',
	    port: 0
	};


	exports.offset = function (options, callback) {

	    if (arguments.length !== 2) {
	        callback = arguments[0];
	        options = {};
	    }

	    var now = Date.now();
	    var clockSyncRefresh = options.clockSyncRefresh || 24 * 60 * 60 * 1000;                    // Daily

	    if (internals.last.offset &&
	        internals.last.host === options.host &&
	        internals.last.port === options.port &&
	        now < internals.last.expires) {

	        process.nextTick(function () {

	            callback(null, internals.last.offset);
	        });

	        return;
	    }

	    exports.time(options, function (err, time) {

	        if (err) {
	            return callback(err, 0);
	        }

	        internals.last = {
	            offset: Math.round(time.t),
	            expires: now + clockSyncRefresh,
	            host: options.host,
	            port: options.port
	        };

	        return callback(null, internals.last.offset);
	    });
	};


	// Now singleton

	internals.now = {
	    intervalId: 0
	};


	exports.start = function (options, callback) {

	    if (arguments.length !== 2) {
	        callback = arguments[0];
	        options = {};
	    }

	    if (internals.now.intervalId) {
	        process.nextTick(function () {

	            callback();
	        });

	        return;
	    }

	    exports.offset(options, function (err, offset) {

	        internals.now.intervalId = setInterval(function () {

	            exports.offset(options, function () { });
	        }, options.clockSyncRefresh || 24 * 60 * 60 * 1000);                                // Daily

	        return callback();
	    });
	};


	exports.stop = function () {

	    if (!internals.now.intervalId) {
	        return;
	    }

	    clearInterval(internals.now.intervalId);
	    internals.now.intervalId = 0;
	};


	exports.isLive = function () {

	    return !!internals.now.intervalId;
	};


	exports.now = function () {

	    var now = Date.now();
	    if (!exports.isLive() ||
	        now >= internals.last.expires) {

	        return now;
	    }

	    return now + internals.last.offset;
	};


	internals.ignore = function () {

	};


/***/ },
/* 560 */
/***/ function(module, exports) {

	module.exports = require("dgram");

/***/ },
/* 561 */
/***/ function(module, exports) {

	module.exports = require("dns");

/***/ },
/* 562 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Boom = __webpack_require__(554);
	var Hoek = __webpack_require__(555);
	var Cryptiles = __webpack_require__(563);
	var Crypto = __webpack_require__(565);
	var Utils = __webpack_require__(566);


	// Declare internals

	var internals = {};


	// Hawk authentication

	/*
	   req:                 node's HTTP request object or an object as follows:

	                        var request = {
	                            method: 'GET',
	                            url: '/resource/4?a=1&b=2',
	                            host: 'example.com',
	                            port: 8080,
	                            authorization: 'Hawk id="dh37fgj492je", ts="1353832234", nonce="j4h3g2", ext="some-app-ext-data", mac="6R4rV5iE+NPoym+WwjeHzjAGXUtLNIxmo1vpMofpLAE="'
	                        };

	   credentialsFunc:     required function to lookup the set of Hawk credentials based on the provided credentials id.
	                        The credentials include the MAC key, MAC algorithm, and other attributes (such as username)
	                        needed by the application. This function is the equivalent of verifying the username and
	                        password in Basic authentication.

	                        var credentialsFunc = function (id, callback) {

	                            // Lookup credentials in database
	                            db.lookup(id, function (err, item) {

	                                if (err || !item) {
	                                    return callback(err);
	                                }

	                                var credentials = {
	                                    // Required
	                                    key: item.key,
	                                    algorithm: item.algorithm,
	                                    // Application specific
	                                    user: item.user
	                                };

	                                return callback(null, credentials);
	                            });
	                        };

	   options: {

	        hostHeaderName:        optional header field name, used to override the default 'Host' header when used
	                               behind a cache of a proxy. Apache2 changes the value of the 'Host' header while preserving
	                               the original (which is what the module must verify) in the 'x-forwarded-host' header field.
	                               Only used when passed a node Http.ServerRequest object.

	        nonceFunc:             optional nonce validation function. The function signature is function(key, nonce, ts, callback)
	                               where 'callback' must be called using the signature function(err).

	        timestampSkewSec:      optional number of seconds of permitted clock skew for incoming timestamps. Defaults to 60 seconds.
	                               Provides a +/- skew which means actual allowed window is double the number of seconds.

	        localtimeOffsetMsec:   optional local clock time offset express in a number of milliseconds (positive or negative).
	                               Defaults to 0.

	        payload:               optional payload for validation. The client calculates the hash value and includes it via the 'hash'
	                               header attribute. The server always ensures the value provided has been included in the request
	                               MAC. When this option is provided, it validates the hash value itself. Validation is done by calculating
	                               a hash value over the entire payload (assuming it has already be normalized to the same format and
	                               encoding used by the client to calculate the hash on request). If the payload is not available at the time
	                               of authentication, the authenticatePayload() method can be used by passing it the credentials and
	                               attributes.hash returned in the authenticate callback.

	        host:                  optional host name override. Only used when passed a node request object.
	        port:                  optional port override. Only used when passed a node request object.
	    }

	    callback: function (err, credentials, artifacts) { }
	 */

	exports.authenticate = function (req, credentialsFunc, options, callback) {

	    callback = Hoek.nextTick(callback);

	    // Default options

	    options.nonceFunc = options.nonceFunc || internals.nonceFunc;
	    options.timestampSkewSec = options.timestampSkewSec || 60;                                                  // 60 seconds

	    // Application time

	    var now = Utils.now(options.localtimeOffsetMsec);                           // Measure now before any other processing

	    // Convert node Http request object to a request configuration object

	    var request = Utils.parseRequest(req, options);
	    if (request instanceof Error) {
	        return callback(Boom.badRequest(request.message));
	    }

	    // Parse HTTP Authorization header

	    var attributes = Utils.parseAuthorizationHeader(request.authorization);
	    if (attributes instanceof Error) {
	        return callback(attributes);
	    }

	    // Construct artifacts container

	    var artifacts = {
	        method: request.method,
	        host: request.host,
	        port: request.port,
	        resource: request.url,
	        ts: attributes.ts,
	        nonce: attributes.nonce,
	        hash: attributes.hash,
	        ext: attributes.ext,
	        app: attributes.app,
	        dlg: attributes.dlg,
	        mac: attributes.mac,
	        id: attributes.id
	    };

	    // Verify required header attributes

	    if (!attributes.id ||
	        !attributes.ts ||
	        !attributes.nonce ||
	        !attributes.mac) {

	        return callback(Boom.badRequest('Missing attributes'), null, artifacts);
	    }

	    // Fetch Hawk credentials

	    credentialsFunc(attributes.id, function (err, credentials) {

	        if (err) {
	            return callback(err, credentials || null, artifacts);
	        }

	        if (!credentials) {
	            return callback(Boom.unauthorized('Unknown credentials', 'Hawk'), null, artifacts);
	        }

	        if (!credentials.key ||
	            !credentials.algorithm) {

	            return callback(Boom.internal('Invalid credentials'), credentials, artifacts);
	        }

	        if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {
	            return callback(Boom.internal('Unknown algorithm'), credentials, artifacts);
	        }

	        // Calculate MAC

	        var mac = Crypto.calculateMac('header', credentials, artifacts);
	        if (!Cryptiles.fixedTimeComparison(mac, attributes.mac)) {
	            return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials, artifacts);
	        }

	        // Check payload hash

	        if (options.payload ||
	            options.payload === '') {

	            if (!attributes.hash) {
	                return callback(Boom.unauthorized('Missing required payload hash', 'Hawk'), credentials, artifacts);
	            }

	            var hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, request.contentType);
	            if (!Cryptiles.fixedTimeComparison(hash, attributes.hash)) {
	                return callback(Boom.unauthorized('Bad payload hash', 'Hawk'), credentials, artifacts);
	            }
	        }

	        // Check nonce

	        options.nonceFunc(credentials.key, attributes.nonce, attributes.ts, function (err) {

	            if (err) {
	                return callback(Boom.unauthorized('Invalid nonce', 'Hawk'), credentials, artifacts);
	            }

	            // Check timestamp staleness

	            if (Math.abs((attributes.ts * 1000) - now) > (options.timestampSkewSec * 1000)) {
	                var tsm = Crypto.timestampMessage(credentials, options.localtimeOffsetMsec);
	                return callback(Boom.unauthorized('Stale timestamp', 'Hawk', tsm), credentials, artifacts);
	            }

	            // Successful authentication

	            return callback(null, credentials, artifacts);
	        });
	    });
	};


	// Authenticate payload hash - used when payload cannot be provided during authenticate()

	/*
	    payload:        raw request payload
	    credentials:    from authenticate callback
	    artifacts:      from authenticate callback
	    contentType:    req.headers['content-type']
	*/

	exports.authenticatePayload = function (payload, credentials, artifacts, contentType) {

	    var calculatedHash = Crypto.calculatePayloadHash(payload, credentials.algorithm, contentType);
	    return Cryptiles.fixedTimeComparison(calculatedHash, artifacts.hash);
	};


	// Authenticate payload hash - used when payload cannot be provided during authenticate()

	/*
	    calculatedHash: the payload hash calculated using Crypto.calculatePayloadHash()
	    artifacts:      from authenticate callback
	*/

	exports.authenticatePayloadHash = function (calculatedHash, artifacts) {

	    return Cryptiles.fixedTimeComparison(calculatedHash, artifacts.hash);
	};


	// Generate a Server-Authorization header for a given response

	/*
	    credentials: {},                                        // Object received from authenticate()
	    artifacts: {}                                           // Object received from authenticate(); 'mac', 'hash', and 'ext' - ignored
	    options: {
	        ext: 'application-specific',                        // Application specific data sent via the ext attribute
	        payload: '{"some":"payload"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)
	        contentType: 'application/json',                    // Payload content-type (ignored if hash provided)
	        hash: 'U4MKKSmiVxk37JCCrAVIjV='                     // Pre-calculated payload hash
	    }
	*/

	exports.header = function (credentials, artifacts, options) {

	    // Prepare inputs

	    options = options || {};

	    if (!artifacts ||
	        typeof artifacts !== 'object' ||
	        typeof options !== 'object') {

	        return '';
	    }

	    artifacts = Hoek.clone(artifacts);
	    delete artifacts.mac;
	    artifacts.hash = options.hash;
	    artifacts.ext = options.ext;

	    // Validate credentials

	    if (!credentials ||
	        !credentials.key ||
	        !credentials.algorithm) {

	        // Invalid credential object
	        return '';
	    }

	    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {
	        return '';
	    }

	    // Calculate payload hash

	    if (!artifacts.hash &&
	        (options.payload || options.payload === '')) {

	        artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);
	    }

	    var mac = Crypto.calculateMac('response', credentials, artifacts);

	    // Construct header

	    var header = 'Hawk mac="' + mac + '"' +
	                 (artifacts.hash ? ', hash="' + artifacts.hash + '"' : '');

	    if (artifacts.ext !== null &&
	        artifacts.ext !== undefined &&
	        artifacts.ext !== '') {                       // Other falsey values allowed

	        header += ', ext="' + Hoek.escapeHeaderAttribute(artifacts.ext) + '"';
	    }

	    return header;
	};


	/*
	 * Arguments and options are the same as authenticate() with the exception that the only supported options are:
	 * 'hostHeaderName', 'localtimeOffsetMsec', 'host', 'port'
	 */

	exports.authenticateBewit = function (req, credentialsFunc, options, callback) {

	    callback = Hoek.nextTick(callback);

	    // Application time

	    var now = Utils.now(options.localtimeOffsetMsec);

	    // Convert node Http request object to a request configuration object

	    var request = Utils.parseRequest(req, options);
	    if (request instanceof Error) {
	        return callback(Boom.badRequest(request.message));
	    }

	    // Extract bewit

	    //                                 1     2             3           4
	    var resource = request.url.match(/^(\/.*)([\?&])bewit\=([^&$]*)(?:&(.+))?$/);
	    if (!resource) {
	        return callback(Boom.unauthorized(null, 'Hawk'));
	    }

	    // Bewit not empty

	    if (!resource[3]) {
	        return callback(Boom.unauthorized('Empty bewit', 'Hawk'));
	    }

	    // Verify method is GET

	    if (request.method !== 'GET' &&
	        request.method !== 'HEAD') {

	        return callback(Boom.unauthorized('Invalid method', 'Hawk'));
	    }

	    // No other authentication

	    if (request.authorization) {
	        return callback(Boom.badRequest('Multiple authentications'));
	    }

	    // Parse bewit

	    var bewitString = Hoek.base64urlDecode(resource[3]);
	    if (bewitString instanceof Error) {
	        return callback(Boom.badRequest('Invalid bewit encoding'));
	    }

	    // Bewit format: id\exp\mac\ext ('\' is used because it is a reserved header attribute character)

	    var bewitParts = bewitString.split('\\');
	    if (bewitParts.length !== 4) {
	        return callback(Boom.badRequest('Invalid bewit structure'));
	    }

	    var bewit = {
	        id: bewitParts[0],
	        exp: parseInt(bewitParts[1], 10),
	        mac: bewitParts[2],
	        ext: bewitParts[3] || ''
	    };

	    if (!bewit.id ||
	        !bewit.exp ||
	        !bewit.mac) {

	        return callback(Boom.badRequest('Missing bewit attributes'));
	    }

	    // Construct URL without bewit

	    var url = resource[1];
	    if (resource[4]) {
	        url += resource[2] + resource[4];
	    }

	    // Check expiration

	    if (bewit.exp * 1000 <= now) {
	        return callback(Boom.unauthorized('Access expired', 'Hawk'), null, bewit);
	    }

	    // Fetch Hawk credentials

	    credentialsFunc(bewit.id, function (err, credentials) {

	        if (err) {
	            return callback(err, credentials || null, bewit.ext);
	        }

	        if (!credentials) {
	            return callback(Boom.unauthorized('Unknown credentials', 'Hawk'), null, bewit);
	        }

	        if (!credentials.key ||
	            !credentials.algorithm) {

	            return callback(Boom.internal('Invalid credentials'), credentials, bewit);
	        }

	        if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {
	            return callback(Boom.internal('Unknown algorithm'), credentials, bewit);
	        }

	        // Calculate MAC

	        var mac = Crypto.calculateMac('bewit', credentials, {
	            ts: bewit.exp,
	            nonce: '',
	            method: 'GET',
	            resource: url,
	            host: request.host,
	            port: request.port,
	            ext: bewit.ext
	        });

	        if (!Cryptiles.fixedTimeComparison(mac, bewit.mac)) {
	            return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials, bewit);
	        }

	        // Successful authentication

	        return callback(null, credentials, bewit);
	    });
	};


	/*
	 *  options are the same as authenticate() with the exception that the only supported options are:
	 * 'nonceFunc', 'timestampSkewSec', 'localtimeOffsetMsec'
	 */

	exports.authenticateMessage = function (host, port, message, authorization, credentialsFunc, options, callback) {

	    callback = Hoek.nextTick(callback);

	    // Default options

	    options.nonceFunc = options.nonceFunc || internals.nonceFunc;
	    options.timestampSkewSec = options.timestampSkewSec || 60;                                                  // 60 seconds

	    // Application time

	    var now = Utils.now(options.localtimeOffsetMsec);                       // Measure now before any other processing

	    // Validate authorization

	    if (!authorization.id ||
	        !authorization.ts ||
	        !authorization.nonce ||
	        !authorization.hash ||
	        !authorization.mac) {

	        return callback(Boom.badRequest('Invalid authorization'));
	    }

	    // Fetch Hawk credentials

	    credentialsFunc(authorization.id, function (err, credentials) {

	        if (err) {
	            return callback(err, credentials || null);
	        }

	        if (!credentials) {
	            return callback(Boom.unauthorized('Unknown credentials', 'Hawk'));
	        }

	        if (!credentials.key ||
	            !credentials.algorithm) {

	            return callback(Boom.internal('Invalid credentials'), credentials);
	        }

	        if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {
	            return callback(Boom.internal('Unknown algorithm'), credentials);
	        }

	        // Construct artifacts container

	        var artifacts = {
	            ts: authorization.ts,
	            nonce: authorization.nonce,
	            host: host,
	            port: port,
	            hash: authorization.hash
	        };

	        // Calculate MAC

	        var mac = Crypto.calculateMac('message', credentials, artifacts);
	        if (!Cryptiles.fixedTimeComparison(mac, authorization.mac)) {
	            return callback(Boom.unauthorized('Bad mac', 'Hawk'), credentials);
	        }

	        // Check payload hash

	        var hash = Crypto.calculatePayloadHash(message, credentials.algorithm);
	        if (!Cryptiles.fixedTimeComparison(hash, authorization.hash)) {
	            return callback(Boom.unauthorized('Bad message hash', 'Hawk'), credentials);
	        }

	        // Check nonce

	        options.nonceFunc(credentials.key, authorization.nonce, authorization.ts, function (err) {

	            if (err) {
	                return callback(Boom.unauthorized('Invalid nonce', 'Hawk'), credentials);
	            }

	            // Check timestamp staleness

	            if (Math.abs((authorization.ts * 1000) - now) > (options.timestampSkewSec * 1000)) {
	                return callback(Boom.unauthorized('Stale timestamp'), credentials);
	            }

	            // Successful authentication

	            return callback(null, credentials);
	        });
	    });
	};


	internals.nonceFunc = function (key, nonce, ts, nonceCallback) {

	    return nonceCallback();         // No validation
	};


/***/ },
/* 563 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(564);

/***/ },
/* 564 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Crypto = __webpack_require__(539);
	var Boom = __webpack_require__(554);


	// Declare internals

	var internals = {};


	// Generate a cryptographically strong pseudo-random data

	exports.randomString = function (size) {

	    var buffer = exports.randomBits((size + 1) * 6);
	    if (buffer instanceof Error) {
	        return buffer;
	    }

	    var string = buffer.toString('base64').replace(/\+/g, '-').replace(/\//g, '_').replace(/\=/g, '');
	    return string.slice(0, size);
	};


	exports.randomBits = function (bits) {

	    if (!bits ||
	        bits < 0) {

	        return Boom.internal('Invalid random bits count');
	    }

	    var bytes = Math.ceil(bits / 8);
	    try {
	        return Crypto.randomBytes(bytes);
	    }
	    catch (err) {
	        return Boom.internal('Failed generating random bits: ' + err.message);
	    }
	};


	// Compare two strings using fixed time algorithm (to prevent time-based analysis of MAC digest match)

	exports.fixedTimeComparison = function (a, b) {

	    if (typeof a !== 'string' ||
	        typeof b !== 'string') {

	        return false;
	    }

	    var mismatch = (a.length === b.length ? 0 : 1);
	    if (mismatch) {
	        b = a;
	    }

	    for (var i = 0, il = a.length; i < il; ++i) {
	        var ac = a.charCodeAt(i);
	        var bc = b.charCodeAt(i);
	        mismatch |= (ac ^ bc);
	    }

	    return (mismatch === 0);
	};




/***/ },
/* 565 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Crypto = __webpack_require__(539);
	var Url = __webpack_require__(13);
	var Utils = __webpack_require__(566);


	// Declare internals

	var internals = {};


	// MAC normalization format version

	exports.headerVersion = '1';                        // Prevent comparison of mac values generated with different normalized string formats


	// Supported HMAC algorithms

	exports.algorithms = ['sha1', 'sha256'];


	// Calculate the request MAC

	/*
	    type: 'header',                                 // 'header', 'bewit', 'response'
	    credentials: {
	        key: 'aoijedoaijsdlaksjdl',
	        algorithm: 'sha256'                         // 'sha1', 'sha256'
	    },
	    options: {
	        method: 'GET',
	        resource: '/resource?a=1&b=2',
	        host: 'example.com',
	        port: 8080,
	        ts: 1357718381034,
	        nonce: 'd3d345f',
	        hash: 'U4MKKSmiVxk37JCCrAVIjV/OhB3y+NdwoCr6RShbVkE=',
	        ext: 'app-specific-data',
	        app: 'hf48hd83qwkj',                        // Application id (Oz)
	        dlg: 'd8djwekds9cj'                         // Delegated by application id (Oz), requires options.app
	    }
	*/

	exports.calculateMac = function (type, credentials, options) {

	    var normalized = exports.generateNormalizedString(type, options);

	    var hmac = Crypto.createHmac(credentials.algorithm, credentials.key).update(normalized);
	    var digest = hmac.digest('base64');
	    return digest;
	};


	exports.generateNormalizedString = function (type, options) {

	    var resource = options.resource || '';
	    if (resource &&
	        resource[0] !== '/') {

	        var url = Url.parse(resource, false);
	        resource = url.path;                        // Includes query
	    }

	    var normalized = 'hawk.' + exports.headerVersion + '.' + type + '\n' +
	                     options.ts + '\n' +
	                     options.nonce + '\n' +
	                     (options.method || '').toUpperCase() + '\n' +
	                     resource + '\n' +
	                     options.host.toLowerCase() + '\n' +
	                     options.port + '\n' +
	                     (options.hash || '') + '\n';

	    if (options.ext) {
	        normalized += options.ext.replace('\\', '\\\\').replace('\n', '\\n');
	    }

	    normalized += '\n';

	    if (options.app) {
	        normalized += options.app + '\n' +
	                      (options.dlg || '') + '\n';
	    }

	    return normalized;
	};


	exports.calculatePayloadHash = function (payload, algorithm, contentType) {

	    var hash = exports.initializePayloadHash(algorithm, contentType);
	    hash.update(payload || '');
	    return exports.finalizePayloadHash(hash);
	};


	exports.initializePayloadHash = function (algorithm, contentType) {

	    var hash = Crypto.createHash(algorithm);
	    hash.update('hawk.' + exports.headerVersion + '.payload\n');
	    hash.update(Utils.parseContentType(contentType) + '\n');
	    return hash;
	};


	exports.finalizePayloadHash = function (hash) {

	    hash.update('\n');
	    return hash.digest('base64');
	};


	exports.calculateTsMac = function (ts, credentials) {

	    var hmac = Crypto.createHmac(credentials.algorithm, credentials.key);
	    hmac.update('hawk.' + exports.headerVersion + '.ts\n' + ts + '\n');
	    return hmac.digest('base64');
	};


	exports.timestampMessage = function (credentials, localtimeOffsetMsec) {

	    var now = Utils.nowSecs(localtimeOffsetMsec);
	    var tsm = exports.calculateTsMac(now, credentials);
	    return { ts: now, tsm: tsm };
	};


/***/ },
/* 566 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Sntp = __webpack_require__(558);
	var Boom = __webpack_require__(554);


	// Declare internals

	var internals = {};


	exports.version = function () {

	    return __webpack_require__(567).version;
	};


	// Extract host and port from request

	//                                            $1                            $2
	internals.hostHeaderRegex = /^(?:(?:\r\n)?\s)*((?:[^:]+)|(?:\[[^\]]+\]))(?::(\d+))?(?:(?:\r\n)?\s)*$/;              // (IPv4, hostname)|(IPv6)


	exports.parseHost = function (req, hostHeaderName) {

	    hostHeaderName = (hostHeaderName ? hostHeaderName.toLowerCase() : 'host');
	    var hostHeader = req.headers[hostHeaderName];
	    if (!hostHeader) {
	        return null;
	    }

	    var hostParts = hostHeader.match(internals.hostHeaderRegex);
	    if (!hostParts) {
	        return null;
	    }

	    return {
	        name: hostParts[1],
	        port: (hostParts[2] ? hostParts[2] : (req.connection && req.connection.encrypted ? 443 : 80))
	    };
	};


	// Parse Content-Type header content

	exports.parseContentType = function (header) {

	    if (!header) {
	        return '';
	    }

	    return header.split(';')[0].trim().toLowerCase();
	};


	// Convert node's  to request configuration object

	exports.parseRequest = function (req, options) {

	    if (!req.headers) {
	        return req;
	    }

	    // Obtain host and port information

	    if (!options.host || !options.port) {
	        var host = exports.parseHost(req, options.hostHeaderName);
	        if (!host) {
	            return new Error('Invalid Host header');
	        }
	    }

	    var request = {
	        method: req.method,
	        url: req.url,
	        host: options.host || host.name,
	        port: options.port || host.port,
	        authorization: req.headers.authorization,
	        contentType: req.headers['content-type'] || ''
	    };

	    return request;
	};


	exports.now = function (localtimeOffsetMsec) {

	    return Sntp.now() + (localtimeOffsetMsec || 0);
	};


	exports.nowSecs = function (localtimeOffsetMsec) {

	    return Math.floor(exports.now(localtimeOffsetMsec) / 1000);
	};


	// Parse Hawk HTTP Authorization header

	exports.parseAuthorizationHeader = function (header, keys) {

	    keys = keys || ['id', 'ts', 'nonce', 'hash', 'ext', 'mac', 'app', 'dlg'];

	    if (!header) {
	        return Boom.unauthorized(null, 'Hawk');
	    }

	    var headerParts = header.match(/^(\w+)(?:\s+(.*))?$/);       // Header: scheme[ something]
	    if (!headerParts) {
	        return Boom.badRequest('Invalid header syntax');
	    }

	    var scheme = headerParts[1];
	    if (scheme.toLowerCase() !== 'hawk') {
	        return Boom.unauthorized(null, 'Hawk');
	    }

	    var attributesString = headerParts[2];
	    if (!attributesString) {
	        return Boom.badRequest('Invalid header syntax');
	    }

	    var attributes = {};
	    var errorMessage = '';
	    var verify = attributesString.replace(/(\w+)="([^"\\]*)"\s*(?:,\s*|$)/g, function ($0, $1, $2) {

	        // Check valid attribute names

	        if (keys.indexOf($1) === -1) {
	            errorMessage = 'Unknown attribute: ' + $1;
	            return;
	        }

	        // Allowed attribute value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9

	        if ($2.match(/^[ \w\!#\$%&'\(\)\*\+,\-\.\/\:;<\=>\?@\[\]\^`\{\|\}~]+$/) === null) {
	            errorMessage = 'Bad attribute value: ' + $1;
	            return;
	        }

	        // Check for duplicates

	        if (attributes.hasOwnProperty($1)) {
	            errorMessage = 'Duplicate attribute: ' + $1;
	            return;
	        }

	        attributes[$1] = $2;
	        return '';
	    });

	    if (verify !== '') {
	        return Boom.badRequest(errorMessage || 'Bad header format');
	    }

	    return attributes;
	};


	exports.unauthorized = function (message, attributes) {

	    return Boom.unauthorized(message, 'Hawk', attributes);
	};



/***/ },
/* 567 */
/***/ function(module, exports) {

	module.exports = {
		"name": "hawk",
		"description": "HTTP Hawk Authentication Scheme",
		"version": "3.1.0",
		"author": {
			"name": "Eran Hammer",
			"email": "eran@hammer.io",
			"url": "http://hueniverse.com"
		},
		"contributors": [],
		"repository": {
			"type": "git",
			"url": "git://github.com/hueniverse/hawk.git"
		},
		"main": "lib/index.js",
		"keywords": [
			"http",
			"authentication",
			"scheme",
			"hawk"
		],
		"engines": {
			"node": ">=0.10.32"
		},
		"browser": "./lib/browser.js",
		"dependencies": {
			"hoek": "2.x.x",
			"boom": "^2.8.x",
			"cryptiles": "2.x.x",
			"sntp": "1.x.x"
		},
		"devDependencies": {
			"code": "1.x.x",
			"lab": "5.x.x"
		},
		"scripts": {
			"test": "lab -a code -t 100 -L",
			"test-cov-html": "lab -a code -r html -o coverage.html"
		},
		"license": "BSD-3-Clause",
		"gitHead": "fdb9d05e383d5237631eaddc4f51422e54fa8b52",
		"bugs": {
			"url": "https://github.com/hueniverse/hawk/issues"
		},
		"homepage": "https://github.com/hueniverse/hawk#readme",
		"_id": "hawk@3.1.0",
		"_shasum": "8a13ae19977ec607602f3f0b9fd676f18c384e44",
		"_from": "hawk@>=3.1.0 <3.2.0",
		"_npmVersion": "2.10.0",
		"_nodeVersion": "0.10.38",
		"_npmUser": {
			"name": "hueniverse",
			"email": "eran@hammer.io"
		},
		"dist": {
			"shasum": "8a13ae19977ec607602f3f0b9fd676f18c384e44",
			"tarball": "http://registry.npmjs.org/hawk/-/hawk-3.1.0.tgz"
		},
		"maintainers": [
			{
				"name": "hueniverse",
				"email": "eran@hueniverse.com"
			}
		],
		"directories": {},
		"_resolved": "https://registry.npmjs.org/hawk/-/hawk-3.1.0.tgz",
		"readme": "ERROR: No README data found!"
	}

/***/ },
/* 568 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Url = __webpack_require__(13);
	var Hoek = __webpack_require__(555);
	var Cryptiles = __webpack_require__(563);
	var Crypto = __webpack_require__(565);
	var Utils = __webpack_require__(566);


	// Declare internals

	var internals = {};


	// Generate an Authorization header for a given request

	/*
	    uri: 'http://example.com/resource?a=b' or object from Url.parse()
	    method: HTTP verb (e.g. 'GET', 'POST')
	    options: {

	        // Required

	        credentials: {
	            id: 'dh37fgj492je',
	            key: 'aoijedoaijsdlaksjdl',
	            algorithm: 'sha256'                                 // 'sha1', 'sha256'
	        },

	        // Optional

	        ext: 'application-specific',                        // Application specific data sent via the ext attribute
	        timestamp: Date.now(),                              // A pre-calculated timestamp
	        nonce: '2334f34f',                                  // A pre-generated nonce
	        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)
	        payload: '{"some":"payload"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)
	        contentType: 'application/json',                    // Payload content-type (ignored if hash provided)
	        hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash
	        app: '24s23423f34dx',                               // Oz application id
	        dlg: '234sz34tww3sd'                                // Oz delegated-by application id
	    }
	*/

	exports.header = function (uri, method, options) {

	    var result = {
	        field: '',
	        artifacts: {}
	    };

	    // Validate inputs

	    if (!uri || (typeof uri !== 'string' && typeof uri !== 'object') ||
	        !method || typeof method !== 'string' ||
	        !options || typeof options !== 'object') {

	        result.err = 'Invalid argument type';
	        return result;
	    }

	    // Application time

	    var timestamp = options.timestamp || Utils.nowSecs(options.localtimeOffsetMsec);

	    // Validate credentials

	    var credentials = options.credentials;
	    if (!credentials ||
	        !credentials.id ||
	        !credentials.key ||
	        !credentials.algorithm) {

	        result.err = 'Invalid credential object';
	        return result;
	    }

	    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {
	        result.err = 'Unknown algorithm';
	        return result;
	    }

	    // Parse URI

	    if (typeof uri === 'string') {
	        uri = Url.parse(uri);
	    }

	    // Calculate signature

	    var artifacts = {
	        ts: timestamp,
	        nonce: options.nonce || Cryptiles.randomString(6),
	        method: method,
	        resource: uri.pathname + (uri.search || ''),                            // Maintain trailing '?'
	        host: uri.hostname,
	        port: uri.port || (uri.protocol === 'http:' ? 80 : 443),
	        hash: options.hash,
	        ext: options.ext,
	        app: options.app,
	        dlg: options.dlg
	    };

	    result.artifacts = artifacts;

	    // Calculate payload hash

	    if (!artifacts.hash &&
	        (options.payload || options.payload === '')) {

	        artifacts.hash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);
	    }

	    var mac = Crypto.calculateMac('header', credentials, artifacts);

	    // Construct header

	    var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed
	    var header = 'Hawk id="' + credentials.id +
	                 '", ts="' + artifacts.ts +
	                 '", nonce="' + artifacts.nonce +
	                 (artifacts.hash ? '", hash="' + artifacts.hash : '') +
	                 (hasExt ? '", ext="' + Hoek.escapeHeaderAttribute(artifacts.ext) : '') +
	                 '", mac="' + mac + '"';

	    if (artifacts.app) {
	        header += ', app="' + artifacts.app +
	                  (artifacts.dlg ? '", dlg="' + artifacts.dlg : '') + '"';
	    }

	    result.field = header;

	    return result;
	};


	// Validate server response

	/*
	    res:        node's response object
	    artifacts:  object received from header().artifacts
	    options: {
	        payload:    optional payload received
	        required:   specifies if a Server-Authorization header is required. Defaults to 'false'
	    }
	*/

	exports.authenticate = function (res, credentials, artifacts, options) {

	    artifacts = Hoek.clone(artifacts);
	    options = options || {};

	    if (res.headers['www-authenticate']) {

	        // Parse HTTP WWW-Authenticate header

	        var wwwAttributes = Utils.parseAuthorizationHeader(res.headers['www-authenticate'], ['ts', 'tsm', 'error']);
	        if (wwwAttributes instanceof Error) {
	            return false;
	        }

	        // Validate server timestamp (not used to update clock since it is done via the SNPT client)

	        if (wwwAttributes.ts) {
	            var tsm = Crypto.calculateTsMac(wwwAttributes.ts, credentials);
	            if (tsm !== wwwAttributes.tsm) {
	                return false;
	            }
	        }
	    }

	    // Parse HTTP Server-Authorization header

	    if (!res.headers['server-authorization'] &&
	        !options.required) {

	        return true;
	    }

	    var attributes = Utils.parseAuthorizationHeader(res.headers['server-authorization'], ['mac', 'ext', 'hash']);
	    if (attributes instanceof Error) {
	        return false;
	    }

	    artifacts.ext = attributes.ext;
	    artifacts.hash = attributes.hash;

	    var mac = Crypto.calculateMac('response', credentials, artifacts);
	    if (mac !== attributes.mac) {
	        return false;
	    }

	    if (!options.payload &&
	        options.payload !== '') {

	        return true;
	    }

	    if (!attributes.hash) {
	        return false;
	    }

	    var calculatedHash = Crypto.calculatePayloadHash(options.payload, credentials.algorithm, res.headers['content-type']);
	    return (calculatedHash === attributes.hash);
	};


	// Generate a bewit value for a given URI

	/*
	    uri: 'http://example.com/resource?a=b' or object from Url.parse()
	    options: {

	        // Required

	        credentials: {
	            id: 'dh37fgj492je',
	            key: 'aoijedoaijsdlaksjdl',
	            algorithm: 'sha256'                             // 'sha1', 'sha256'
	        },
	        ttlSec: 60 * 60,                                    // TTL in seconds

	        // Optional

	        ext: 'application-specific',                        // Application specific data sent via the ext attribute
	        localtimeOffsetMsec: 400                            // Time offset to sync with server time
	    };
	*/

	exports.getBewit = function (uri, options) {

	    // Validate inputs

	    if (!uri ||
	        (typeof uri !== 'string' && typeof uri !== 'object') ||
	        !options ||
	        typeof options !== 'object' ||
	        !options.ttlSec) {

	        return '';
	    }

	    options.ext = (options.ext === null || options.ext === undefined ? '' : options.ext);       // Zero is valid value

	    // Application time

	    var now = Utils.now(options.localtimeOffsetMsec);

	    // Validate credentials

	    var credentials = options.credentials;
	    if (!credentials ||
	        !credentials.id ||
	        !credentials.key ||
	        !credentials.algorithm) {

	        return '';
	    }

	    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {
	        return '';
	    }

	    // Parse URI

	    if (typeof uri === 'string') {
	        uri = Url.parse(uri);
	    }

	    // Calculate signature

	    var exp = Math.floor(now / 1000) + options.ttlSec;
	    var mac = Crypto.calculateMac('bewit', credentials, {
	        ts: exp,
	        nonce: '',
	        method: 'GET',
	        resource: uri.pathname + (uri.search || ''),                            // Maintain trailing '?'
	        host: uri.hostname,
	        port: uri.port || (uri.protocol === 'http:' ? 80 : 443),
	        ext: options.ext
	    });

	    // Construct bewit: id\exp\mac\ext

	    var bewit = credentials.id + '\\' + exp + '\\' + mac + '\\' + options.ext;
	    return Hoek.base64urlEncode(bewit);
	};


	// Generate an authorization string for a message

	/*
	    host: 'example.com',
	    port: 8000,
	    message: '{"some":"payload"}',                          // UTF-8 encoded string for body hash generation
	    options: {

	        // Required

	        credentials: {
	            id: 'dh37fgj492je',
	            key: 'aoijedoaijsdlaksjdl',
	            algorithm: 'sha256'                             // 'sha1', 'sha256'
	        },

	        // Optional

	        timestamp: Date.now(),                              // A pre-calculated timestamp
	        nonce: '2334f34f',                                  // A pre-generated nonce
	        localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)
	    }
	*/

	exports.message = function (host, port, message, options) {

	    // Validate inputs

	    if (!host || typeof host !== 'string' ||
	        !port || typeof port !== 'number' ||
	        message === null || message === undefined || typeof message !== 'string' ||
	        !options || typeof options !== 'object') {

	        return null;
	    }

	    // Application time

	    var timestamp = options.timestamp || Utils.nowSecs(options.localtimeOffsetMsec);

	    // Validate credentials

	    var credentials = options.credentials;
	    if (!credentials ||
	        !credentials.id ||
	        !credentials.key ||
	        !credentials.algorithm) {

	        // Invalid credential object
	        return null;
	    }

	    if (Crypto.algorithms.indexOf(credentials.algorithm) === -1) {
	        return null;
	    }

	    // Calculate signature

	    var artifacts = {
	        ts: timestamp,
	        nonce: options.nonce || Cryptiles.randomString(6),
	        host: host,
	        port: port,
	        hash: Crypto.calculatePayloadHash(message, credentials.algorithm)
	    };

	    // Construct authorization

	    var result = {
	        id: credentials.id,
	        ts: artifacts.ts,
	        nonce: artifacts.nonce,
	        hash: artifacts.hash,
	        mac: Crypto.calculateMac('message', credentials, artifacts)
	    };

	    return result;
	};





/***/ },
/* 569 */
/***/ function(module, exports, __webpack_require__) {

	
	/*!
	 * knox - auth
	 * Copyright(c) 2010 LearnBoost <dev@learnboost.com>
	 * MIT Licensed
	 */

	/**
	 * Module dependencies.
	 */

	var crypto = __webpack_require__(539)
	  , parse = __webpack_require__(13).parse
	  ;

	/**
	 * Valid keys.
	 */

	var keys = 
	  [ 'acl'
	  , 'location'
	  , 'logging'
	  , 'notification'
	  , 'partNumber'
	  , 'policy'
	  , 'requestPayment'
	  , 'torrent'
	  , 'uploadId'
	  , 'uploads'
	  , 'versionId'
	  , 'versioning'
	  , 'versions'
	  , 'website'
	  ]

	/**
	 * Return an "Authorization" header value with the given `options`
	 * in the form of "AWS <key>:<signature>"
	 *
	 * @param {Object} options
	 * @return {String}
	 * @api private
	 */

	function authorization (options) {
	  return 'AWS ' + options.key + ':' + sign(options)
	}

	module.exports = authorization
	module.exports.authorization = authorization

	/**
	 * Simple HMAC-SHA1 Wrapper
	 *
	 * @param {Object} options
	 * @return {String}
	 * @api private
	 */ 

	function hmacSha1 (options) {
	  return crypto.createHmac('sha1', options.secret).update(options.message).digest('base64')
	}

	module.exports.hmacSha1 = hmacSha1

	/**
	 * Create a base64 sha1 HMAC for `options`. 
	 * 
	 * @param {Object} options
	 * @return {String}
	 * @api private
	 */

	function sign (options) {
	  options.message = stringToSign(options)
	  return hmacSha1(options)
	}
	module.exports.sign = sign

	/**
	 * Create a base64 sha1 HMAC for `options`. 
	 *
	 * Specifically to be used with S3 presigned URLs
	 * 
	 * @param {Object} options
	 * @return {String}
	 * @api private
	 */

	function signQuery (options) {
	  options.message = queryStringToSign(options)
	  return hmacSha1(options)
	}
	module.exports.signQuery= signQuery

	/**
	 * Return a string for sign() with the given `options`.
	 *
	 * Spec:
	 * 
	 *    <verb>\n
	 *    <md5>\n
	 *    <content-type>\n
	 *    <date>\n
	 *    [headers\n]
	 *    <resource>
	 *
	 * @param {Object} options
	 * @return {String}
	 * @api private
	 */

	function stringToSign (options) {
	  var headers = options.amazonHeaders || ''
	  if (headers) headers += '\n'
	  var r = 
	    [ options.verb
	    , options.md5
	    , options.contentType
	    , options.date ? options.date.toUTCString() : ''
	    , headers + options.resource
	    ]
	  return r.join('\n')
	}
	module.exports.queryStringToSign = stringToSign

	/**
	 * Return a string for sign() with the given `options`, but is meant exclusively
	 * for S3 presigned URLs
	 *
	 * Spec:
	 * 
	 *    <date>\n
	 *    <resource>
	 *
	 * @param {Object} options
	 * @return {String}
	 * @api private
	 */

	function queryStringToSign (options){
	  return 'GET\n\n\n' + options.date + '\n' + options.resource
	}
	module.exports.queryStringToSign = queryStringToSign

	/**
	 * Perform the following:
	 *
	 *  - ignore non-amazon headers
	 *  - lowercase fields
	 *  - sort lexicographically
	 *  - trim whitespace between ":"
	 *  - join with newline
	 *
	 * @param {Object} headers
	 * @return {String}
	 * @api private
	 */

	function canonicalizeHeaders (headers) {
	  var buf = []
	    , fields = Object.keys(headers)
	    ;
	  for (var i = 0, len = fields.length; i < len; ++i) {
	    var field = fields[i]
	      , val = headers[field]
	      , field = field.toLowerCase()
	      ;
	    if (0 !== field.indexOf('x-amz')) continue
	    buf.push(field + ':' + val)
	  }
	  return buf.sort().join('\n')
	}
	module.exports.canonicalizeHeaders = canonicalizeHeaders

	/**
	 * Perform the following:
	 *
	 *  - ignore non sub-resources
	 *  - sort lexicographically
	 *
	 * @param {String} resource
	 * @return {String}
	 * @api private
	 */

	function canonicalizeResource (resource) {
	  var url = parse(resource, true)
	    , path = url.pathname
	    , buf = []
	    ;

	  Object.keys(url.query).forEach(function(key){
	    if (!~keys.indexOf(key)) return
	    var val = '' == url.query[key] ? '' : '=' + encodeURIComponent(url.query[key])
	    buf.push(key + val)
	  })

	  return path + (buf.length ? '?' + buf.sort().join('&') : '')
	}
	module.exports.canonicalizeResource = canonicalizeResource


/***/ },
/* 570 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright 2015 Joyent, Inc.

	var parser = __webpack_require__(571);
	var signer = __webpack_require__(573);
	var verify = __webpack_require__(574);
	var util = __webpack_require__(575);



	///--- API

	module.exports = {

	  parse: parser.parseRequest,
	  parseRequest: parser.parseRequest,

	  sign: signer.signRequest,
	  signRequest: signer.signRequest,

	  sshKeyToPEM: util.sshKeyToPEM,
	  sshKeyFingerprint: util.fingerprint,
	  pemToRsaSSHKey: util.pemToRsaSSHKey,

	  verify: verify.verifySignature,
	  verifySignature: verify.verifySignature,
	  verifyHMAC: verify.verifyHMAC
	};


/***/ },
/* 571 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright 2012 Joyent, Inc.  All rights reserved.

	var assert = __webpack_require__(572);
	var util = __webpack_require__(471);



	///--- Globals

	var Algorithms = {
	  'rsa-sha1': true,
	  'rsa-sha256': true,
	  'rsa-sha512': true,
	  'dsa-sha1': true,
	  'hmac-sha1': true,
	  'hmac-sha256': true,
	  'hmac-sha512': true
	};

	var State = {
	  New: 0,
	  Params: 1
	};

	var ParamsState = {
	  Name: 0,
	  Quote: 1,
	  Value: 2,
	  Comma: 3
	};



	///--- Specific Errors

	function HttpSignatureError(message, caller) {
	  if (Error.captureStackTrace)
	    Error.captureStackTrace(this, caller || HttpSignatureError);

	  this.message = message;
	  this.name = caller.name;
	}
	util.inherits(HttpSignatureError, Error);

	function ExpiredRequestError(message) {
	  HttpSignatureError.call(this, message, ExpiredRequestError);
	}
	util.inherits(ExpiredRequestError, HttpSignatureError);


	function InvalidHeaderError(message) {
	  HttpSignatureError.call(this, message, InvalidHeaderError);
	}
	util.inherits(InvalidHeaderError, HttpSignatureError);


	function InvalidParamsError(message) {
	  HttpSignatureError.call(this, message, InvalidParamsError);
	}
	util.inherits(InvalidParamsError, HttpSignatureError);


	function MissingHeaderError(message) {
	  HttpSignatureError.call(this, message, MissingHeaderError);
	}
	util.inherits(MissingHeaderError, HttpSignatureError);



	///--- Exported API

	module.exports = {

	  /**
	   * Parses the 'Authorization' header out of an http.ServerRequest object.
	   *
	   * Note that this API will fully validate the Authorization header, and throw
	   * on any error.  It will not however check the signature, or the keyId format
	   * as those are specific to your environment.  You can use the options object
	   * to pass in extra constraints.
	   *
	   * As a response object you can expect this:
	   *
	   *     {
	   *       "scheme": "Signature",
	   *       "params": {
	   *         "keyId": "foo",
	   *         "algorithm": "rsa-sha256",
	   *         "headers": [
	   *           "date" or "x-date",
	   *           "content-md5"
	   *         ],
	   *         "signature": "base64"
	   *       },
	   *       "signingString": "ready to be passed to crypto.verify()"
	   *     }
	   *
	   * @param {Object} request an http.ServerRequest.
	   * @param {Object} options an optional options object with:
	   *                   - clockSkew: allowed clock skew in seconds (default 300).
	   *                   - headers: required header names (def: date or x-date)
	   *                   - algorithms: algorithms to support (default: all).
	   * @return {Object} parsed out object (see above).
	   * @throws {TypeError} on invalid input.
	   * @throws {InvalidHeaderError} on an invalid Authorization header error.
	   * @throws {InvalidParamsError} if the params in the scheme are invalid.
	   * @throws {MissingHeaderError} if the params indicate a header not present,
	   *                              either in the request headers from the params,
	   *                              or not in the params from a required header
	   *                              in options.
	   * @throws {ExpiredRequestError} if the value of date or x-date exceeds skew.
	   */
	  parseRequest: function parseRequest(request, options) {
	    assert.object(request, 'request');
	    assert.object(request.headers, 'request.headers');
	    if (options === undefined) {
	      options = {};
	    }
	    if (options.headers === undefined) {
	      options.headers = [request.headers['x-date'] ? 'x-date' : 'date'];
	    }
	    assert.object(options, 'options');
	    assert.arrayOfString(options.headers, 'options.headers');
	    assert.optionalNumber(options.clockSkew, 'options.clockSkew');

	    if (!request.headers.authorization)
	      throw new MissingHeaderError('no authorization header present in ' +
	                                   'the request');

	    options.clockSkew = options.clockSkew || 300;


	    var i = 0;
	    var state = State.New;
	    var substate = ParamsState.Name;
	    var tmpName = '';
	    var tmpValue = '';

	    var parsed = {
	      scheme: '',
	      params: {},
	      signingString: '',

	      get algorithm() {
	        return this.params.algorithm.toUpperCase();
	      },

	      get keyId() {
	        return this.params.keyId;
	      }

	    };

	    var authz = request.headers.authorization;
	    for (i = 0; i < authz.length; i++) {
	      var c = authz.charAt(i);

	      switch (Number(state)) {

	      case State.New:
	        if (c !== ' ') parsed.scheme += c;
	        else state = State.Params;
	        break;

	      case State.Params:
	        switch (Number(substate)) {

	        case ParamsState.Name:
	          var code = c.charCodeAt(0);
	          // restricted name of A-Z / a-z
	          if ((code >= 0x41 && code <= 0x5a) || // A-Z
	              (code >= 0x61 && code <= 0x7a)) { // a-z
	            tmpName += c;
	          } else if (c === '=') {
	            if (tmpName.length === 0)
	              throw new InvalidHeaderError('bad param format');
	            substate = ParamsState.Quote;
	          } else {
	            throw new InvalidHeaderError('bad param format');
	          }
	          break;

	        case ParamsState.Quote:
	          if (c === '"') {
	            tmpValue = '';
	            substate = ParamsState.Value;
	          } else {
	            throw new InvalidHeaderError('bad param format');
	          }
	          break;

	        case ParamsState.Value:
	          if (c === '"') {
	            parsed.params[tmpName] = tmpValue;
	            substate = ParamsState.Comma;
	          } else {
	            tmpValue += c;
	          }
	          break;

	        case ParamsState.Comma:
	          if (c === ',') {
	            tmpName = '';
	            substate = ParamsState.Name;
	          } else {
	            throw new InvalidHeaderError('bad param format');
	          }
	          break;

	        default:
	          throw new Error('Invalid substate');
	        }
	        break;

	      default:
	        throw new Error('Invalid substate');
	      }

	    }

	    if (!parsed.params.headers || parsed.params.headers === '') {
	      if (request.headers['x-date']) {
	        parsed.params.headers = ['x-date'];
	      } else {
	        parsed.params.headers = ['date'];
	      }
	    } else {
	      parsed.params.headers = parsed.params.headers.split(' ');
	    }

	    // Minimally validate the parsed object
	    if (!parsed.scheme || parsed.scheme !== 'Signature')
	      throw new InvalidHeaderError('scheme was not "Signature"');

	    if (!parsed.params.keyId)
	      throw new InvalidHeaderError('keyId was not specified');

	    if (!parsed.params.algorithm)
	      throw new InvalidHeaderError('algorithm was not specified');

	    if (!parsed.params.signature)
	      throw new InvalidHeaderError('signature was not specified');

	    // Check the algorithm against the official list
	    parsed.params.algorithm = parsed.params.algorithm.toLowerCase();
	    if (!Algorithms[parsed.params.algorithm])
	      throw new InvalidParamsError(parsed.params.algorithm +
	                                   ' is not supported');

	    // Build the signingString
	    for (i = 0; i < parsed.params.headers.length; i++) {
	      var h = parsed.params.headers[i].toLowerCase();
	      parsed.params.headers[i] = h;

	      if (h !== 'request-line') {
	        var value = request.headers[h];
	        if (!value)
	          throw new MissingHeaderError(h + ' was not in the request');
	        parsed.signingString += h + ': ' + value;
	      } else {
	        parsed.signingString +=
	          request.method + ' ' + request.url + ' HTTP/' + request.httpVersion;
	      }

	      if ((i + 1) < parsed.params.headers.length)
	        parsed.signingString += '\n';
	    }

	    // Check against the constraints
	    var date;
	    if (request.headers.date || request.headers['x-date']) {
	        if (request.headers['x-date']) {
	          date = new Date(request.headers['x-date']);
	        } else {
	          date = new Date(request.headers.date);
	        }
	      var now = new Date();
	      var skew = Math.abs(now.getTime() - date.getTime());

	      if (skew > options.clockSkew * 1000) {
	        throw new ExpiredRequestError('clock skew of ' +
	                                      (skew / 1000) +
	                                      's was greater than ' +
	                                      options.clockSkew + 's');
	      }
	    }

	    options.headers.forEach(function (hdr) {
	      // Remember that we already checked any headers in the params
	      // were in the request, so if this passes we're good.
	      if (parsed.params.headers.indexOf(hdr) < 0)
	        throw new MissingHeaderError(hdr + ' was not a signed header');
	    });

	    if (options.algorithms) {
	      if (options.algorithms.indexOf(parsed.params.algorithm) === -1)
	        throw new InvalidParamsError(parsed.params.algorithm +
	                                     ' is not a supported algorithm');
	    }

	    return parsed;
	  }

	};


/***/ },
/* 572 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright (c) 2012, Mark Cavage. All rights reserved.

	var assert = __webpack_require__(437);
	var Stream = __webpack_require__(480).Stream;
	var util = __webpack_require__(471);



	///--- Globals

	var NDEBUG = process.env.NODE_NDEBUG || false;
	var UUID_REGEXP = /^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/;



	///--- Messages

	var ARRAY_TYPE_REQUIRED = '%s ([%s]) required';
	var TYPE_REQUIRED = '%s (%s) is required';



	///--- Internal

	function capitalize(str) {
	        return (str.charAt(0).toUpperCase() + str.slice(1));
	}

	function uncapitalize(str) {
	        return (str.charAt(0).toLowerCase() + str.slice(1));
	}

	function _() {
	        return (util.format.apply(util, arguments));
	}


	function _assert(arg, type, name, stackFunc) {
	        if (!NDEBUG) {
	                name = name || type;
	                stackFunc = stackFunc || _assert.caller;
	                var t = typeof (arg);

	                if (t !== type) {
	                        throw new assert.AssertionError({
	                                message: _(TYPE_REQUIRED, name, type),
	                                actual: t,
	                                expected: type,
	                                operator: '===',
	                                stackStartFunction: stackFunc
	                        });
	                }
	        }
	}


	function _instanceof(arg, type, name, stackFunc) {
	        if (!NDEBUG) {
	                name = name || type;
	                stackFunc = stackFunc || _instanceof.caller;

	                if (!(arg instanceof type)) {
	                        throw new assert.AssertionError({
	                                message: _(TYPE_REQUIRED, name, type.name),
	                                actual: _getClass(arg),
	                                expected: type.name,
	                                operator: 'instanceof',
	                                stackStartFunction: stackFunc
	                        });
	                }
	        }
	}

	function _getClass(object) {
	        return (Object.prototype.toString.call(object).slice(8, -1));
	};



	///--- API

	function array(arr, type, name) {
	        if (!NDEBUG) {
	                name = name || type;

	                if (!Array.isArray(arr)) {
	                        throw new assert.AssertionError({
	                                message: _(ARRAY_TYPE_REQUIRED, name, type),
	                                actual: typeof (arr),
	                                expected: 'array',
	                                operator: 'Array.isArray',
	                                stackStartFunction: array.caller
	                        });
	                }

	                for (var i = 0; i < arr.length; i++) {
	                        _assert(arr[i], type, name, array);
	                }
	        }
	}


	function bool(arg, name) {
	        _assert(arg, 'boolean', name, bool);
	}


	function buffer(arg, name) {
	        if (!Buffer.isBuffer(arg)) {
	                throw new assert.AssertionError({
	                        message: _(TYPE_REQUIRED, name || '', 'Buffer'),
	                        actual: typeof (arg),
	                        expected: 'buffer',
	                        operator: 'Buffer.isBuffer',
	                        stackStartFunction: buffer
	                });
	        }
	}


	function func(arg, name) {
	        _assert(arg, 'function', name);
	}


	function number(arg, name) {
	        _assert(arg, 'number', name);
	        if (!NDEBUG && (isNaN(arg) || !isFinite(arg))) {
	                throw new assert.AssertionError({
	                        message: _(TYPE_REQUIRED, name, 'number'),
	                        actual: arg,
	                        expected: 'number',
	                        operator: 'isNaN',
	                        stackStartFunction: number
	                });
	        }
	}


	function object(arg, name) {
	        _assert(arg, 'object', name);
	}


	function stream(arg, name) {
	        _instanceof(arg, Stream, name);
	}


	function date(arg, name) {
	        _instanceof(arg, Date, name);
	}

	function regexp(arg, name) {
	        _instanceof(arg, RegExp, name);
	}


	function string(arg, name) {
	        _assert(arg, 'string', name);
	}


	function uuid(arg, name) {
	        string(arg, name);
	        if (!NDEBUG && !UUID_REGEXP.test(arg)) {
	                throw new assert.AssertionError({
	                        message: _(TYPE_REQUIRED, name, 'uuid'),
	                        actual: 'string',
	                        expected: 'uuid',
	                        operator: 'test',
	                        stackStartFunction: uuid
	                });
	        }
	}


	///--- Exports

	module.exports = {
	        bool: bool,
	        buffer: buffer,
	        date: date,
	        func: func,
	        number: number,
	        object: object,
	        regexp: regexp,
	        stream: stream,
	        string: string,
	        uuid: uuid
	};


	Object.keys(module.exports).forEach(function (k) {
	        if (k === 'buffer')
	                return;

	        var name = 'arrayOf' + capitalize(k);

	        if (k === 'bool')
	                k = 'boolean';
	        if (k === 'func')
	                k = 'function';
	        module.exports[name] = function (arg, name) {
	                array(arg, k, name);
	        };
	});

	Object.keys(module.exports).forEach(function (k) {
	        var _name = 'optional' + capitalize(k);
	        var s = uncapitalize(k.replace('arrayOf', ''));
	        if (s === 'bool')
	                s = 'boolean';
	        if (s === 'func')
	                s = 'function';

	        if (k.indexOf('arrayOf') !== -1) {
	          module.exports[_name] = function (arg, name) {
	                  if (!NDEBUG && arg !== undefined) {
	                          array(arg, s, name);
	                  }
	          };
	        } else {
	          module.exports[_name] = function (arg, name) {
	                  if (!NDEBUG && arg !== undefined) {
	                          _assert(arg, s, name);
	                  }
	          };
	        }
	});


	// Reexport built-in assertions
	Object.keys(assert).forEach(function (k) {
	        if (k === 'AssertionError') {
	                module.exports[k] = assert[k];
	                return;
	        }

	        module.exports[k] = function () {
	                if (!NDEBUG) {
	                        assert[k].apply(assert[k], arguments);
	                }
	        };
	});


/***/ },
/* 573 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright 2012 Joyent, Inc.  All rights reserved.

	var assert = __webpack_require__(572);
	var crypto = __webpack_require__(539);
	var http = __webpack_require__(21);

	var sprintf = __webpack_require__(471).format;



	///--- Globals

	var Algorithms = {
	  'rsa-sha1': true,
	  'rsa-sha256': true,
	  'rsa-sha512': true,
	  'dsa-sha1': true,
	  'hmac-sha1': true,
	  'hmac-sha256': true,
	  'hmac-sha512': true
	};

	var Authorization =
	  'Signature keyId="%s",algorithm="%s",headers="%s",signature="%s"';



	///--- Specific Errors

	function MissingHeaderError(message) {
	    this.name = 'MissingHeaderError';
	    this.message = message;
	    this.stack = (new Error()).stack;
	}
	MissingHeaderError.prototype = new Error();


	function InvalidAlgorithmError(message) {
	    this.name = 'InvalidAlgorithmError';
	    this.message = message;
	    this.stack = (new Error()).stack;
	}
	InvalidAlgorithmError.prototype = new Error();



	///--- Internal Functions

	function _pad(val) {
	  if (parseInt(val, 10) < 10) {
	    val = '0' + val;
	  }
	  return val;
	}


	function _rfc1123() {
	  var date = new Date();

	  var months = ['Jan',
	                'Feb',
	                'Mar',
	                'Apr',
	                'May',
	                'Jun',
	                'Jul',
	                'Aug',
	                'Sep',
	                'Oct',
	                'Nov',
	                'Dec'];
	  var days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];
	  return days[date.getUTCDay()] + ', ' +
	    _pad(date.getUTCDate()) + ' ' +
	    months[date.getUTCMonth()] + ' ' +
	    date.getUTCFullYear() + ' ' +
	    _pad(date.getUTCHours()) + ':' +
	    _pad(date.getUTCMinutes()) + ':' +
	    _pad(date.getUTCSeconds()) +
	    ' GMT';
	}



	///--- Exported API

	module.exports = {

	  /**
	   * Adds an 'Authorization' header to an http.ClientRequest object.
	   *
	   * Note that this API will add a Date header if it's not already set. Any
	   * other headers in the options.headers array MUST be present, or this
	   * will throw.
	   *
	   * You shouldn't need to check the return type; it's just there if you want
	   * to be pedantic.
	   *
	   * @param {Object} request an instance of http.ClientRequest.
	   * @param {Object} options signing parameters object:
	   *                   - {String} keyId required.
	   *                   - {String} key required (either a PEM or HMAC key).
	   *                   - {Array} headers optional; defaults to ['date'].
	   *                   - {String} algorithm optional; defaults to 'rsa-sha256'.
	   *                   - {String} httpVersion optional; defaults to '1.1'.
	   * @return {Boolean} true if Authorization (and optionally Date) were added.
	   * @throws {TypeError} on bad parameter types (input).
	   * @throws {InvalidAlgorithmError} if algorithm was bad.
	   * @throws {MissingHeaderError} if a header to be signed was specified but
	   *                              was not present.
	   */
	  signRequest: function signRequest(request, options) {
	    assert.object(request, 'request');
	    assert.object(options, 'options');
	    assert.optionalString(options.algorithm, 'options.algorithm');
	    assert.string(options.keyId, 'options.keyId');
	    assert.optionalArrayOfString(options.headers, 'options.headers');
	    assert.optionalString(options.httpVersion, 'options.httpVersion');

	    if (!request.getHeader('Date'))
	      request.setHeader('Date', _rfc1123());
	    if (!options.headers)
	      options.headers = ['date'];
	    if (!options.algorithm)
	      options.algorithm = 'rsa-sha256';
	    if (!options.httpVersion)
	      options.httpVersion = '1.1';

	    options.algorithm = options.algorithm.toLowerCase();

	    if (!Algorithms[options.algorithm])
	      throw new InvalidAlgorithmError(options.algorithm + ' is not supported');

	    var i;
	    var stringToSign = '';
	    for (i = 0; i < options.headers.length; i++) {
	      if (typeof (options.headers[i]) !== 'string')
	        throw new TypeError('options.headers must be an array of Strings');

	      var h = options.headers[i].toLowerCase();

	      if (h !== 'request-line') {
	        var value = request.getHeader(h);
	        if (!value) {
	          throw new MissingHeaderError(h + ' was not in the request');
	        }
	        stringToSign += h + ': ' + value;
	      } else {
	        stringToSign +=
	          request.method + ' ' + request.path + ' HTTP/' + options.httpVersion;
	      }

	      if ((i + 1) < options.headers.length)
	        stringToSign += '\n';
	    }

	    var alg = options.algorithm.match(/(hmac|rsa)-(\w+)/);
	    var signature;
	    if (alg[1] === 'hmac') {
	      var hmac = crypto.createHmac(alg[2].toUpperCase(), options.key);
	      hmac.update(stringToSign);
	      signature = hmac.digest('base64');
	    } else {
	      var signer = crypto.createSign(options.algorithm.toUpperCase());
	      signer.update(stringToSign);
	      signature = signer.sign(options.key, 'base64');
	    }

	    request.setHeader('Authorization', sprintf(Authorization,
	                                               options.keyId,
	                                               options.algorithm,
	                                               options.headers.join(' '),
	                                               signature));

	    return true;
	  }

	};


/***/ },
/* 574 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright 2015 Joyent, Inc.

	var assert = __webpack_require__(572);
	var crypto = __webpack_require__(539);



	///--- Exported API

	module.exports = {
	  /**
	   * Verify RSA/DSA signature against public key.  You are expected to pass in
	   * an object that was returned from `parse()`.
	   *
	   * @param {Object} parsedSignature the object you got from `parse`.
	   * @param {String} pubkey RSA/DSA private key PEM.
	   * @return {Boolean} true if valid, false otherwise.
	   * @throws {TypeError} if you pass in bad arguments.
	   */
	  verifySignature: function verifySignature(parsedSignature, pubkey) {
	    assert.object(parsedSignature, 'parsedSignature');
	    assert.string(pubkey, 'pubkey');

	    var alg = parsedSignature.algorithm.match(/^(RSA|DSA)-(\w+)/);
	    if (!alg || alg.length !== 3)
	      throw new TypeError('parsedSignature: unsupported algorithm ' +
	                          parsedSignature.algorithm);

	    var verify = crypto.createVerify(alg[0]);
	    verify.update(parsedSignature.signingString);
	    return verify.verify(pubkey, parsedSignature.params.signature, 'base64');
	  },

	  /**
	   * Verify HMAC against shared secret.  You are expected to pass in an object
	   * that was returned from `parse()`.
	   *
	   * @param {Object} parsedSignature the object you got from `parse`.
	   * @param {String} secret HMAC shared secret.
	   * @return {Boolean} true if valid, false otherwise.
	   * @throws {TypeError} if you pass in bad arguments.
	   */
	  verifyHMAC: function verifyHMAC(parsedSignature, secret) {
	    assert.object(parsedSignature, 'parsedHMAC');
	    assert.string(secret, 'secret');

	    var alg = parsedSignature.algorithm.match(/^HMAC-(\w+)/);
	    if (!alg || alg.length !== 2)
	      throw new TypeError('parsedSignature: unsupported algorithm ' +
	                          parsedSignature.algorithm);

	    var hmac = crypto.createHmac(alg[1].toUpperCase(), secret);
	    hmac.update(parsedSignature.signingString);
	    return (hmac.digest('base64') === parsedSignature.params.signature);
	  }
	};


/***/ },
/* 575 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright 2012 Joyent, Inc.  All rights reserved.

	var assert = __webpack_require__(572);
	var crypto = __webpack_require__(539);

	var asn1 = __webpack_require__(576);
	var ctype = __webpack_require__(582);



	///--- Helpers

	function readNext(buffer, offset) {
	  var len = ctype.ruint32(buffer, 'big', offset);
	  offset += 4;

	  var newOffset = offset + len;

	  return {
	    data: buffer.slice(offset, newOffset),
	    offset: newOffset
	  };
	}


	function writeInt(writer, buffer) {
	  writer.writeByte(0x02); // ASN1.Integer
	  writer.writeLength(buffer.length);

	  for (var i = 0; i < buffer.length; i++)
	    writer.writeByte(buffer[i]);

	  return writer;
	}


	function rsaToPEM(key) {
	  var buffer;
	  var der;
	  var exponent;
	  var i;
	  var modulus;
	  var newKey = '';
	  var offset = 0;
	  var type;
	  var tmp;

	  try {
	    buffer = new Buffer(key.split(' ')[1], 'base64');

	    tmp = readNext(buffer, offset);
	    type = tmp.data.toString();
	    offset = tmp.offset;

	    if (type !== 'ssh-rsa')
	      throw new Error('Invalid ssh key type: ' + type);

	    tmp = readNext(buffer, offset);
	    exponent = tmp.data;
	    offset = tmp.offset;

	    tmp = readNext(buffer, offset);
	    modulus = tmp.data;
	  } catch (e) {
	    throw new Error('Invalid ssh key: ' + key);
	  }

	  // DER is a subset of BER
	  der = new asn1.BerWriter();

	  der.startSequence();

	  der.startSequence();
	  der.writeOID('1.2.840.113549.1.1.1');
	  der.writeNull();
	  der.endSequence();

	  der.startSequence(0x03); // bit string
	  der.writeByte(0x00);

	  // Actual key
	  der.startSequence();
	  writeInt(der, modulus);
	  writeInt(der, exponent);
	  der.endSequence();

	  // bit string
	  der.endSequence();

	  der.endSequence();

	  tmp = der.buffer.toString('base64');
	  for (i = 0; i < tmp.length; i++) {
	    if ((i % 64) === 0)
	      newKey += '\n';
	    newKey += tmp.charAt(i);
	  }

	  if (!/\\n$/.test(newKey))
	    newKey += '\n';

	  return '-----BEGIN PUBLIC KEY-----' + newKey + '-----END PUBLIC KEY-----\n';
	}


	function dsaToPEM(key) {
	  var buffer;
	  var offset = 0;
	  var tmp;
	  var der;
	  var newKey = '';

	  var type;
	  var p;
	  var q;
	  var g;
	  var y;

	  try {
	    buffer = new Buffer(key.split(' ')[1], 'base64');

	    tmp = readNext(buffer, offset);
	    type = tmp.data.toString();
	    offset = tmp.offset;

	    /* JSSTYLED */
	    if (!/^ssh-ds[as].*/.test(type))
	      throw new Error('Invalid ssh key type: ' + type);

	    tmp = readNext(buffer, offset);
	    p = tmp.data;
	    offset = tmp.offset;

	    tmp = readNext(buffer, offset);
	    q = tmp.data;
	    offset = tmp.offset;

	    tmp = readNext(buffer, offset);
	    g = tmp.data;
	    offset = tmp.offset;

	    tmp = readNext(buffer, offset);
	    y = tmp.data;
	  } catch (e) {
	    console.log(e.stack);
	    throw new Error('Invalid ssh key: ' + key);
	  }

	  // DER is a subset of BER
	  der = new asn1.BerWriter();

	  der.startSequence();

	  der.startSequence();
	  der.writeOID('1.2.840.10040.4.1');

	  der.startSequence();
	  writeInt(der, p);
	  writeInt(der, q);
	  writeInt(der, g);
	  der.endSequence();

	  der.endSequence();

	  der.startSequence(0x03); // bit string
	  der.writeByte(0x00);
	  writeInt(der, y);
	  der.endSequence();

	  der.endSequence();

	  tmp = der.buffer.toString('base64');
	  for (var i = 0; i < tmp.length; i++) {
	    if ((i % 64) === 0)
	      newKey += '\n';
	    newKey += tmp.charAt(i);
	  }

	  if (!/\\n$/.test(newKey))
	    newKey += '\n';

	  return '-----BEGIN PUBLIC KEY-----' + newKey + '-----END PUBLIC KEY-----\n';
	}


	///--- API

	module.exports = {

	  /**
	   * Converts an OpenSSH public key (rsa only) to a PKCS#8 PEM file.
	   *
	   * The intent of this module is to interoperate with OpenSSL only,
	   * specifically the node crypto module's `verify` method.
	   *
	   * @param {String} key an OpenSSH public key.
	   * @return {String} PEM encoded form of the RSA public key.
	   * @throws {TypeError} on bad input.
	   * @throws {Error} on invalid ssh key formatted data.
	   */
	  sshKeyToPEM: function sshKeyToPEM(key) {
	    assert.string(key, 'ssh_key');

	    /* JSSTYLED */
	    if (/^ssh-rsa.*/.test(key))
	      return rsaToPEM(key);

	    /* JSSTYLED */
	    if (/^ssh-ds[as].*/.test(key))
	      return dsaToPEM(key);

	    throw new Error('Only RSA and DSA public keys are allowed');
	  },


	  /**
	   * Generates an OpenSSH fingerprint from an ssh public key.
	   *
	   * @param {String} key an OpenSSH public key.
	   * @return {String} key fingerprint.
	   * @throws {TypeError} on bad input.
	   * @throws {Error} if what you passed doesn't look like an ssh public key.
	   */
	  fingerprint: function fingerprint(key) {
	    assert.string(key, 'ssh_key');

	    var pieces = key.split(' ');
	    if (!pieces || !pieces.length || pieces.length < 2)
	      throw new Error('invalid ssh key');

	    var data = new Buffer(pieces[1], 'base64');

	    var hash = crypto.createHash('md5');
	    hash.update(data);
	    var digest = hash.digest('hex');

	    var fp = '';
	    for (var i = 0; i < digest.length; i++) {
	      if (i && i % 2 === 0)
	        fp += ':';

	      fp += digest[i];
	    }

	    return fp;
	  },

	  /**
	   * Converts a PKGCS#8 PEM file to an OpenSSH public key (rsa)
	   *
	   * The reverse of the above function.
	   */
	  pemToRsaSSHKey: function pemToRsaSSHKey(pem, comment) {
	    assert.equal('string', typeof (pem), 'typeof pem');

	    // chop off the BEGIN PUBLIC KEY and END PUBLIC KEY portion
	    var cleaned = pem.split('\n').slice(1, -2).join('');

	    var buf = new Buffer(cleaned, 'base64');

	    var der = new asn1.BerReader(buf);

	    der.readSequence();
	    der.readSequence();

	    var oid = der.readOID();
	    assert.equal(oid, '1.2.840.113549.1.1.1', 'pem not in RSA format');

	    // Null -- XXX this probably isn't good practice
	    der.readByte();
	    der.readByte();

	    // bit string sequence
	    der.readSequence(0x03);
	    der.readByte();
	    der.readSequence();

	    // modulus
	    assert.equal(der.peek(), asn1.Ber.Integer, 'modulus not an integer');
	    der._offset = der.readLength(der.offset + 1);
	    var modulus = der._buf.slice(der.offset, der.offset + der.length);
	    der._offset += der.length;

	    // exponent
	    assert.equal(der.peek(), asn1.Ber.Integer, 'exponent not an integer');
	    der._offset = der.readLength(der.offset + 1);
	    var exponent = der._buf.slice(der.offset, der.offset + der.length);
	    der._offset += der.length;

	    // now, make the key
	    var type = new Buffer('ssh-rsa');
	    var buffer = new Buffer(4 + type.length + 4 + modulus.length +
	      4 + exponent.length);
	    var i = 0;
	    buffer.writeUInt32BE(type.length, i);     i += 4;
	    type.copy(buffer, i);                     i += type.length;
	    buffer.writeUInt32BE(exponent.length, i); i += 4;
	    exponent.copy(buffer, i);                 i += exponent.length;
	    buffer.writeUInt32BE(modulus.length, i);  i += 4;
	    modulus.copy(buffer, i);                  i += modulus.length;

	    var s = (type.toString() + ' ' + buffer.toString('base64') + ' ' +
	      (comment || ''));
	    return s;
	  }
	};


/***/ },
/* 576 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.

	// If you have no idea what ASN.1 or BER is, see this:
	// ftp://ftp.rsa.com/pub/pkcs/ascii/layman.asc

	var Ber = __webpack_require__(577);



	///--- Exported API

	module.exports = {

	  Ber: Ber,

	  BerReader: Ber.Reader,

	  BerWriter: Ber.Writer

	};


/***/ },
/* 577 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.

	var errors = __webpack_require__(578);
	var types = __webpack_require__(579);

	var Reader = __webpack_require__(580);
	var Writer = __webpack_require__(581);


	///--- Exports

	module.exports = {

	  Reader: Reader,

	  Writer: Writer

	};

	for (var t in types) {
	  if (types.hasOwnProperty(t))
	    module.exports[t] = types[t];
	}
	for (var e in errors) {
	  if (errors.hasOwnProperty(e))
	    module.exports[e] = errors[e];
	}


/***/ },
/* 578 */
/***/ function(module, exports) {

	// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.


	module.exports = {

	  newInvalidAsn1Error: function(msg) {
	    var e = new Error();
	    e.name = 'InvalidAsn1Error';
	    e.message = msg || '';
	    return e;
	  }

	};


/***/ },
/* 579 */
/***/ function(module, exports) {

	// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.


	module.exports = {
	  EOC: 0,
	  Boolean: 1,
	  Integer: 2,
	  BitString: 3,
	  OctetString: 4,
	  Null: 5,
	  OID: 6,
	  ObjectDescriptor: 7,
	  External: 8,
	  Real: 9, // float
	  Enumeration: 10,
	  PDV: 11,
	  Utf8String: 12,
	  RelativeOID: 13,
	  Sequence: 16,
	  Set: 17,
	  NumericString: 18,
	  PrintableString: 19,
	  T61String: 20,
	  VideotexString: 21,
	  IA5String: 22,
	  UTCTime: 23,
	  GeneralizedTime: 24,
	  GraphicString: 25,
	  VisibleString: 26,
	  GeneralString: 28,
	  UniversalString: 29,
	  CharacterString: 30,
	  BMPString: 31,
	  Constructor: 32,
	  Context: 128
	};


/***/ },
/* 580 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.

	var assert = __webpack_require__(437);

	var ASN1 = __webpack_require__(579);
	var errors = __webpack_require__(578);


	///--- Globals

	var newInvalidAsn1Error = errors.newInvalidAsn1Error;



	///--- API

	function Reader(data) {
	  if (!data || !Buffer.isBuffer(data))
	    throw new TypeError('data must be a node Buffer');

	  this._buf = data;
	  this._size = data.length;

	  // These hold the "current" state
	  this._len = 0;
	  this._offset = 0;

	  var self = this;
	  this.__defineGetter__('length', function() { return self._len; });
	  this.__defineGetter__('offset', function() { return self._offset; });
	  this.__defineGetter__('remain', function() {
	    return self._size - self._offset;
	  });
	  this.__defineGetter__('buffer', function() {
	    return self._buf.slice(self._offset);
	  });
	}


	/**
	 * Reads a single byte and advances offset; you can pass in `true` to make this
	 * a "peek" operation (i.e., get the byte, but don't advance the offset).
	 *
	 * @param {Boolean} peek true means don't move offset.
	 * @return {Number} the next byte, null if not enough data.
	 */
	Reader.prototype.readByte = function(peek) {
	  if (this._size - this._offset < 1)
	    return null;

	  var b = this._buf[this._offset] & 0xff;

	  if (!peek)
	    this._offset += 1;

	  return b;
	};


	Reader.prototype.peek = function() {
	  return this.readByte(true);
	};


	/**
	 * Reads a (potentially) variable length off the BER buffer.  This call is
	 * not really meant to be called directly, as callers have to manipulate
	 * the internal buffer afterwards.
	 *
	 * As a result of this call, you can call `Reader.length`, until the
	 * next thing called that does a readLength.
	 *
	 * @return {Number} the amount of offset to advance the buffer.
	 * @throws {InvalidAsn1Error} on bad ASN.1
	 */
	Reader.prototype.readLength = function(offset) {
	  if (offset === undefined)
	    offset = this._offset;

	  if (offset >= this._size)
	    return null;

	  var lenB = this._buf[offset++] & 0xff;
	  if (lenB === null)
	    return null;

	  if ((lenB & 0x80) == 0x80) {
	    lenB &= 0x7f;

	    if (lenB == 0)
	      throw newInvalidAsn1Error('Indefinite length not supported');

	    if (lenB > 4)
	      throw newInvalidAsn1Error('encoding too long');

	    if (this._size - offset < lenB)
	      return null;

	    this._len = 0;
	    for (var i = 0; i < lenB; i++)
	      this._len = (this._len << 8) + (this._buf[offset++] & 0xff);

	  } else {
	    // Wasn't a variable length
	    this._len = lenB;
	  }

	  return offset;
	};


	/**
	 * Parses the next sequence in this BER buffer.
	 *
	 * To get the length of the sequence, call `Reader.length`.
	 *
	 * @return {Number} the sequence's tag.
	 */
	Reader.prototype.readSequence = function(tag) {
	  var seq = this.peek();
	  if (seq === null)
	    return null;
	  if (tag !== undefined && tag !== seq)
	    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +
	                              ': got 0x' + seq.toString(16));

	  var o = this.readLength(this._offset + 1); // stored in `length`
	  if (o === null)
	    return null;

	  this._offset = o;
	  return seq;
	};


	Reader.prototype.readInt = function() {
	  return this._readTag(ASN1.Integer);
	};


	Reader.prototype.readBoolean = function() {
	  return (this._readTag(ASN1.Boolean) === 0 ? false : true);
	};


	Reader.prototype.readEnumeration = function() {
	  return this._readTag(ASN1.Enumeration);
	};


	Reader.prototype.readString = function(tag, retbuf) {
	  if (!tag)
	    tag = ASN1.OctetString;

	  var b = this.peek();
	  if (b === null)
	    return null;

	  if (b !== tag)
	    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +
	                              ': got 0x' + b.toString(16));

	  var o = this.readLength(this._offset + 1); // stored in `length`

	  if (o === null)
	    return null;

	  if (this.length > this._size - o)
	    return null;

	  this._offset = o;

	  if (this.length === 0)
	    return '';

	  var str = this._buf.slice(this._offset, this._offset + this.length);
	  this._offset += this.length;

	  return retbuf ? str : str.toString('utf8');
	};

	Reader.prototype.readOID = function(tag) {
	  if (!tag)
	    tag = ASN1.OID;

	  var b = this.peek();
	  if (b === null)
	    return null;

	  if (b !== tag)
	    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +
	                              ': got 0x' + b.toString(16));

	  var o = this.readLength(this._offset + 1); // stored in `length`
	  if (o === null)
	    return null;

	  if (this.length > this._size - o)
	    return null;

	  this._offset = o;

	  var values = [];
	  var value = 0;

	  for (var i = 0; i < this.length; i++) {
	    var byte = this._buf[this._offset++] & 0xff;

	    value <<= 7;
	    value += byte & 0x7f;
	    if ((byte & 0x80) == 0) {
	      values.push(value);
	      value = 0;
	    }
	  }

	  value = values.shift();
	  values.unshift(value % 40);
	  values.unshift((value / 40) >> 0);

	  return values.join('.');
	};


	Reader.prototype._readTag = function(tag) {
	  assert.ok(tag !== undefined);

	  var b = this.peek();

	  if (b === null)
	    return null;

	  if (b !== tag)
	    throw newInvalidAsn1Error('Expected 0x' + tag.toString(16) +
	                              ': got 0x' + b.toString(16));

	  var o = this.readLength(this._offset + 1); // stored in `length`
	  if (o === null)
	    return null;

	  if (this.length > 4)
	    throw newInvalidAsn1Error('Integer too long: ' + this.length);

	  if (this.length > this._size - o)
	    return null;
	  this._offset = o;

	  var fb = this._buf[this._offset++];
	  var value = 0;

	  value = fb & 0x7F;
	  for (var i = 1; i < this.length; i++) {
	    value <<= 8;
	    value |= (this._buf[this._offset++] & 0xff);
	  }

	  if ((fb & 0x80) == 0x80)
	    value = -value;

	  return value;
	};



	///--- Exported API

	module.exports = Reader;


/***/ },
/* 581 */
/***/ function(module, exports, __webpack_require__) {

	// Copyright 2011 Mark Cavage <mcavage@gmail.com> All rights reserved.

	var assert = __webpack_require__(437);
	var ASN1 = __webpack_require__(579);
	var errors = __webpack_require__(578);


	///--- Globals

	var newInvalidAsn1Error = errors.newInvalidAsn1Error;

	var DEFAULT_OPTS = {
	  size: 1024,
	  growthFactor: 8
	};


	///--- Helpers

	function merge(from, to) {
	  assert.ok(from);
	  assert.equal(typeof(from), 'object');
	  assert.ok(to);
	  assert.equal(typeof(to), 'object');

	  var keys = Object.getOwnPropertyNames(from);
	  keys.forEach(function(key) {
	    if (to[key])
	      return;

	    var value = Object.getOwnPropertyDescriptor(from, key);
	    Object.defineProperty(to, key, value);
	  });

	  return to;
	}



	///--- API

	function Writer(options) {
	  options = merge(DEFAULT_OPTS, options || {});

	  this._buf = new Buffer(options.size || 1024);
	  this._size = this._buf.length;
	  this._offset = 0;
	  this._options = options;

	  // A list of offsets in the buffer where we need to insert
	  // sequence tag/len pairs.
	  this._seq = [];

	  var self = this;
	  this.__defineGetter__('buffer', function() {
	    if (self._seq.length)
	      throw new InvalidAsn1Error(self._seq.length + ' unended sequence(s)');

	    return self._buf.slice(0, self._offset);
	  });
	}


	Writer.prototype.writeByte = function(b) {
	  if (typeof(b) !== 'number')
	    throw new TypeError('argument must be a Number');

	  this._ensure(1);
	  this._buf[this._offset++] = b;
	};


	Writer.prototype.writeInt = function(i, tag) {
	  if (typeof(i) !== 'number')
	    throw new TypeError('argument must be a Number');
	  if (typeof(tag) !== 'number')
	    tag = ASN1.Integer;

	  var sz = 4;

	  while ((((i & 0xff800000) === 0) || ((i & 0xff800000) === 0xff800000)) &&
	         (sz > 1)) {
	    sz--;
	    i <<= 8;
	  }

	  if (sz > 4)
	    throw new InvalidAsn1Error('BER ints cannot be > 0xffffffff');

	  this._ensure(2 + sz);
	  this._buf[this._offset++] = tag;
	  this._buf[this._offset++] = sz;

	  while (sz-- > 0) {
	    this._buf[this._offset++] = ((i & 0xff000000) >> 24);
	    i <<= 8;
	  }

	};


	Writer.prototype.writeNull = function() {
	  this.writeByte(ASN1.Null);
	  this.writeByte(0x00);
	};


	Writer.prototype.writeEnumeration = function(i, tag) {
	  if (typeof(i) !== 'number')
	    throw new TypeError('argument must be a Number');
	  if (typeof(tag) !== 'number')
	    tag = ASN1.Enumeration;

	  return this.writeInt(i, tag);
	};


	Writer.prototype.writeBoolean = function(b, tag) {
	  if (typeof(b) !== 'boolean')
	    throw new TypeError('argument must be a Boolean');
	  if (typeof(tag) !== 'number')
	    tag = ASN1.Boolean;

	  this._ensure(3);
	  this._buf[this._offset++] = tag;
	  this._buf[this._offset++] = 0x01;
	  this._buf[this._offset++] = b ? 0xff : 0x00;
	};


	Writer.prototype.writeString = function(s, tag) {
	  if (typeof(s) !== 'string')
	    throw new TypeError('argument must be a string (was: ' + typeof(s) + ')');
	  if (typeof(tag) !== 'number')
	    tag = ASN1.OctetString;

	  var len = Buffer.byteLength(s);
	  this.writeByte(tag);
	  this.writeLength(len);
	  if (len) {
	    this._ensure(len);
	    this._buf.write(s, this._offset);
	    this._offset += len;
	  }
	};


	Writer.prototype.writeBuffer = function(buf, tag) {
	  if (typeof(tag) !== 'number')
	    throw new TypeError('tag must be a number');
	  if (!Buffer.isBuffer(buf))
	    throw new TypeError('argument must be a buffer');

	  this.writeByte(tag);
	  this.writeLength(buf.length);
	  this._ensure(buf.length);
	  buf.copy(this._buf, this._offset, 0, buf.length);
	  this._offset += buf.length;
	};


	Writer.prototype.writeStringArray = function(strings) {
	  if ((!strings instanceof Array))
	    throw new TypeError('argument must be an Array[String]');

	  var self = this;
	  strings.forEach(function(s) {
	    self.writeString(s);
	  });
	};

	// This is really to solve DER cases, but whatever for now
	Writer.prototype.writeOID = function(s, tag) {
	  if (typeof(s) !== 'string')
	    throw new TypeError('argument must be a string');
	  if (typeof(tag) !== 'number')
	    tag = ASN1.OID;

	  if (!/^([0-9]+\.){3,}[0-9]+$/.test(s))
	    throw new Error('argument is not a valid OID string');

	  function encodeOctet(bytes, octet) {
	    if (octet < 128) {
	        bytes.push(octet);
	    } else if (octet < 16384) {
	        bytes.push((octet >>> 7) | 0x80);
	        bytes.push(octet & 0x7F);
	    } else if (octet < 2097152) {
	      bytes.push((octet >>> 14) | 0x80);
	      bytes.push(((octet >>> 7) | 0x80) & 0xFF);
	      bytes.push(octet & 0x7F);
	    } else if (octet < 268435456) {
	      bytes.push((octet >>> 21) | 0x80);
	      bytes.push(((octet >>> 14) | 0x80) & 0xFF);
	      bytes.push(((octet >>> 7) | 0x80) & 0xFF);
	      bytes.push(octet & 0x7F);
	    } else {
	      bytes.push(((octet >>> 28) | 0x80) & 0xFF);
	      bytes.push(((octet >>> 21) | 0x80) & 0xFF);
	      bytes.push(((octet >>> 14) | 0x80) & 0xFF);
	      bytes.push(((octet >>> 7) | 0x80) & 0xFF);
	      bytes.push(octet & 0x7F);
	    }
	  }

	  var tmp = s.split('.');
	  var bytes = [];
	  bytes.push(parseInt(tmp[0], 10) * 40 + parseInt(tmp[1], 10));
	  tmp.slice(2).forEach(function(b) {
	    encodeOctet(bytes, parseInt(b, 10));
	  });

	  var self = this;
	  this._ensure(2 + bytes.length);
	  this.writeByte(tag);
	  this.writeLength(bytes.length);
	  bytes.forEach(function(b) {
	    self.writeByte(b);
	  });
	};


	Writer.prototype.writeLength = function(len) {
	  if (typeof(len) !== 'number')
	    throw new TypeError('argument must be a Number');

	  this._ensure(4);

	  if (len <= 0x7f) {
	    this._buf[this._offset++] = len;
	  } else if (len <= 0xff) {
	    this._buf[this._offset++] = 0x81;
	    this._buf[this._offset++] = len;
	  } else if (len <= 0xffff) {
	    this._buf[this._offset++] = 0x82;
	    this._buf[this._offset++] = len >> 8;
	    this._buf[this._offset++] = len;
	  } else if (len <= 0xffffff) {
	    this._shift(start, len, 1);
	    this._buf[this._offset++] = 0x83;
	    this._buf[this._offset++] = len >> 16;
	    this._buf[this._offset++] = len >> 8;
	    this._buf[this._offset++] = len;
	  } else {
	    throw new InvalidAsn1ERror('Length too long (> 4 bytes)');
	  }
	};

	Writer.prototype.startSequence = function(tag) {
	  if (typeof(tag) !== 'number')
	    tag = ASN1.Sequence | ASN1.Constructor;

	  this.writeByte(tag);
	  this._seq.push(this._offset);
	  this._ensure(3);
	  this._offset += 3;
	};


	Writer.prototype.endSequence = function() {
	  var seq = this._seq.pop();
	  var start = seq + 3;
	  var len = this._offset - start;

	  if (len <= 0x7f) {
	    this._shift(start, len, -2);
	    this._buf[seq] = len;
	  } else if (len <= 0xff) {
	    this._shift(start, len, -1);
	    this._buf[seq] = 0x81;
	    this._buf[seq + 1] = len;
	  } else if (len <= 0xffff) {
	    this._buf[seq] = 0x82;
	    this._buf[seq + 1] = len >> 8;
	    this._buf[seq + 2] = len;
	  } else if (len <= 0xffffff) {
	    this._shift(start, len, 1);
	    this._buf[seq] = 0x83;
	    this._buf[seq + 1] = len >> 16;
	    this._buf[seq + 2] = len >> 8;
	    this._buf[seq + 3] = len;
	  } else {
	    throw new InvalidAsn1Error('Sequence too long');
	  }
	};


	Writer.prototype._shift = function(start, len, shift) {
	  assert.ok(start !== undefined);
	  assert.ok(len !== undefined);
	  assert.ok(shift);

	  this._buf.copy(this._buf, start + shift, start, start + len);
	  this._offset += shift;
	};

	Writer.prototype._ensure = function(len) {
	  assert.ok(len);

	  if (this._size - this._offset < len) {
	    var sz = this._size * this._options.growthFactor;
	    if (sz - this._offset < len)
	      sz += len;

	    var buf = new Buffer(sz);

	    this._buf.copy(buf, 0, 0, this._offset);
	    this._buf = buf;
	    this._size = sz;
	  }
	};



	///--- Exported API

	module.exports = Writer;


/***/ },
/* 582 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * rm - Feb 2011
	 * ctype.js
	 *
	 * This module provides a simple abstraction towards reading and writing
	 * different types of binary data. It is designed to use ctio.js and provide a
	 * richer and more expressive API on top of it.
	 *
	 * By default we support the following as built in basic types:
	 *	int8_t
	 *	int16_t
	 *	int32_t
	 *	uint8_t
	 *	uint16_t
	 *	uint32_t
	 *	uint64_t
	 *	float
	 *	double
	 *	char
	 *	char[]
	 *
	 * Each type is returned as a Number, with the exception of char and char[]
	 * which are returned as Node Buffers. A char is considered a uint8_t.
	 *
	 * Requests to read and write data are specified as an array of JSON objects.
	 * This is also the same way that one declares structs. Even if just a single
	 * value is requested, it must be done as a struct. The array order determines
	 * the order that we try and read values. Each entry has the following format
	 * with values marked with a * being optional.
	 *
	 * { key: { type: /type/, value*: /value/, offset*: /offset/ }
	 *
	 * If offset is defined, we lseek(offset, SEEK_SET) before reading the next
	 * value. Value is defined when we're writing out data, otherwise it's ignored.
	 *
	 */

	var mod_ctf = __webpack_require__(583);
	var mod_ctio = __webpack_require__(584);
	var mod_assert = __webpack_require__(437);

	/*
	 * This is the set of basic types that we support.
	 *
	 *	read		The function to call to read in a value from a buffer
	 *
	 *	write		The function to call to write a value to a buffer
	 *
	 */
	var deftypes = {
	    'uint8_t':  { read: ctReadUint8, write: ctWriteUint8 },
	    'uint16_t': { read: ctReadUint16, write: ctWriteUint16 },
	    'uint32_t': { read: ctReadUint32, write: ctWriteUint32 },
	    'uint64_t': { read: ctReadUint64, write: ctWriteUint64 },
	    'int8_t': { read: ctReadSint8, write: ctWriteSint8 },
	    'int16_t': { read: ctReadSint16, write: ctWriteSint16 },
	    'int32_t': { read: ctReadSint32, write: ctWriteSint32 },
	    'int64_t': { read: ctReadSint64, write: ctWriteSint64 },
	    'float': { read: ctReadFloat, write: ctWriteFloat },
	    'double': { read: ctReadDouble, write: ctWriteDouble },
	    'char': { read: ctReadChar, write: ctWriteChar },
	    'char[]': { read: ctReadCharArray, write: ctWriteCharArray }
	};

	/*
	 * The following are wrappers around the CType IO low level API. They encode
	 * knowledge about the size and return something in the expected format.
	 */
	function ctReadUint8(endian, buffer, offset)
	{
		var val = mod_ctio.ruint8(buffer, endian, offset);
		return ({ value: val, size: 1 });
	}

	function ctReadUint16(endian, buffer, offset)
	{
		var val = mod_ctio.ruint16(buffer, endian, offset);
		return ({ value: val, size: 2 });
	}

	function ctReadUint32(endian, buffer, offset)
	{
		var val = mod_ctio.ruint32(buffer, endian, offset);
		return ({ value: val, size: 4 });
	}

	function ctReadUint64(endian, buffer, offset)
	{
		var val = mod_ctio.ruint64(buffer, endian, offset);
		return ({ value: val, size: 8 });
	}

	function ctReadSint8(endian, buffer, offset)
	{
		var val = mod_ctio.rsint8(buffer, endian, offset);
		return ({ value: val, size: 1 });
	}

	function ctReadSint16(endian, buffer, offset)
	{
		var val = mod_ctio.rsint16(buffer, endian, offset);
		return ({ value: val, size: 2 });
	}

	function ctReadSint32(endian, buffer, offset)
	{
		var val = mod_ctio.rsint32(buffer, endian, offset);
		return ({ value: val, size: 4 });
	}

	function ctReadSint64(endian, buffer, offset)
	{
		var val = mod_ctio.rsint64(buffer, endian, offset);
		return ({ value: val, size: 8 });
	}

	function ctReadFloat(endian, buffer, offset)
	{
		var val = mod_ctio.rfloat(buffer, endian, offset);
		return ({ value: val, size: 4 });
	}

	function ctReadDouble(endian, buffer, offset)
	{
		var val = mod_ctio.rdouble(buffer, endian, offset);
		return ({ value: val, size: 8 });
	}

	/*
	 * Reads a single character into a node buffer
	 */
	function ctReadChar(endian, buffer, offset)
	{
		var res = new Buffer(1);
		res[0] = mod_ctio.ruint8(buffer, endian, offset);
		return ({ value: res, size: 1 });
	}

	function ctReadCharArray(length, endian, buffer, offset)
	{
		var ii;
		var res = new Buffer(length);

		for (ii = 0; ii < length; ii++)
			res[ii] = mod_ctio.ruint8(buffer, endian, offset + ii);

		return ({ value: res, size: length });
	}

	function ctWriteUint8(value, endian, buffer, offset)
	{
		mod_ctio.wuint8(value, endian, buffer, offset);
		return (1);
	}

	function ctWriteUint16(value, endian, buffer, offset)
	{
		mod_ctio.wuint16(value, endian, buffer, offset);
		return (2);
	}

	function ctWriteUint32(value, endian, buffer, offset)
	{
		mod_ctio.wuint32(value, endian, buffer, offset);
		return (4);
	}

	function ctWriteUint64(value, endian, buffer, offset)
	{
		mod_ctio.wuint64(value, endian, buffer, offset);
		return (8);
	}

	function ctWriteSint8(value, endian, buffer, offset)
	{
		mod_ctio.wsint8(value, endian, buffer, offset);
		return (1);
	}

	function ctWriteSint16(value, endian, buffer, offset)
	{
		mod_ctio.wsint16(value, endian, buffer, offset);
		return (2);
	}

	function ctWriteSint32(value, endian, buffer, offset)
	{
		mod_ctio.wsint32(value, endian, buffer, offset);
		return (4);
	}

	function ctWriteSint64(value, endian, buffer, offset)
	{
		mod_ctio.wsint64(value, endian, buffer, offset);
		return (8);
	}

	function ctWriteFloat(value, endian, buffer, offset)
	{
		mod_ctio.wfloat(value, endian, buffer, offset);
		return (4);
	}

	function ctWriteDouble(value, endian, buffer, offset)
	{
		mod_ctio.wdouble(value, endian, buffer, offset);
		return (8);
	}

	/*
	 * Writes a single character into a node buffer
	 */
	function ctWriteChar(value, endian, buffer, offset)
	{
		if (!(value instanceof Buffer))
			throw (new Error('Input must be a buffer'));

		mod_ctio.ruint8(value[0], endian, buffer, offset);
		return (1);
	}

	/*
	 * We're going to write 0s into the buffer if the string is shorter than the
	 * length of the array.
	 */
	function ctWriteCharArray(value, length, endian, buffer, offset)
	{
		var ii;

		if (!(value instanceof Buffer))
			throw (new Error('Input must be a buffer'));

		if (value.length > length)
			throw (new Error('value length greater than array length'));

		for (ii = 0; ii < value.length && ii < length; ii++)
			mod_ctio.wuint8(value[ii], endian, buffer, offset + ii);

		for (; ii < length; ii++)
			mod_ctio.wuint8(0, endian, offset + ii);


		return (length);
	}

	/*
	 * Each parser has their own set of types. We want to make sure that they each
	 * get their own copy as they may need to modify it.
	 */
	function ctGetBasicTypes()
	{
		var ret = {};
		var key;
		for (key in deftypes)
			ret[key] = deftypes[key];

		return (ret);
	}

	/*
	 * Given a string in the form of type[length] we want to split this into an
	 * object that extracts that information. We want to note that we could possibly
	 * have nested arrays so this should only check the furthest one. It may also be
	 * the case that we have no [] pieces, in which case we just return the current
	 * type.
	 */
	function ctParseType(str)
	{
		var begInd, endInd;
		var type, len;
		if (typeof (str) != 'string')
			throw (new Error('type must be a Javascript string'));

		endInd = str.lastIndexOf(']');
		if (endInd == -1) {
			if (str.lastIndexOf('[') != -1)
				throw (new Error('found invalid type with \'[\' but ' +
				    'no corresponding \']\''));

			return ({ type: str });
		}

		begInd = str.lastIndexOf('[');
		if (begInd == -1)
			throw (new Error('found invalid type with \']\' but ' +
			    'no corresponding \'[\''));

		if (begInd >= endInd)
			throw (new Error('malformed type, \']\' appears before \'[\''));

		type = str.substring(0, begInd);
		len = str.substring(begInd + 1, endInd);

		return ({ type: type, len: len });
	}

	/*
	 * Given a request validate that all of the fields for it are valid and make
	 * sense. This includes verifying the following notions:
	 *  - Each type requested is present in types
	 *  - Only allow a name for a field to be specified once
	 *  - If an array is specified, validate that the requested field exists and
	 *    comes before it.
	 *  - If fields is defined, check that each entry has the occurrence of field
	 */
	function ctCheckReq(def, types, fields)
	{
		var ii, jj;
		var req, keys, key;
		var found = {};

		if (!(def instanceof Array))
			throw (new Error('definition is not an array'));

		if (def.length === 0)
			throw (new Error('definition must have at least one element'));

		for (ii = 0; ii < def.length; ii++) {
			req = def[ii];
			if (!(req instanceof Object))
				throw (new Error('definition must be an array of' +
				    'objects'));

			keys = Object.keys(req);
			if (keys.length != 1)
				throw (new Error('definition entry must only have ' +
				    'one key'));

			if (keys[0] in found)
				throw (new Error('Specified name already ' +
				    'specified: ' + keys[0]));

			if (!('type' in req[keys[0]]))
				throw (new Error('missing required type definition'));

			key = ctParseType(req[keys[0]]['type']);

			/*
			 * We may have nested arrays, we need to check the validity of
			 * the types until the len field is undefined in key. However,
			 * each time len is defined we need to verify it is either an
			 * integer or corresponds to an already seen key.
			 */
			while (key['len'] !== undefined) {
				if (isNaN(parseInt(key['len'], 10))) {
					if (!(key['len'] in found))
						throw (new Error('Given an array ' +
						    'length without a matching type'));

				}

				key = ctParseType(key['type']);
			}

			/* Now we can validate if the type is valid */
			if (!(key['type'] in types))
				throw (new Error('type not found or typdefed: ' +
				    key['type']));

			/* Check for any required fields */
			if (fields !== undefined) {
				for (jj = 0; jj < fields.length; jj++) {
					if (!(fields[jj] in req[keys[0]]))
						throw (new Error('Missing required ' +
						    'field: ' + fields[jj]));
				}
			}

			found[keys[0]] = true;
		}
	}


	/*
	 * Create a new instance of the parser. Each parser has its own store of
	 * typedefs and endianness. Conf is an object with the following required
	 * values:
	 *
	 *	endian		Either 'big' or 'little' do determine the endianness we
	 *			want to read from or write to.
	 *
	 * And the following optional values:
	 *
	 * 	char-type	Valid options here are uint8 and int8. If uint8 is
	 * 			specified this changes the default behavior of a single
	 * 			char from being a buffer of a single character to being
	 * 			a uint8_t. If int8, it becomes an int8_t instead.
	 */
	function CTypeParser(conf)
	{
		if (!conf) throw (new Error('missing required argument'));

		if (!('endian' in conf))
			throw (new Error('missing required endian value'));

		if (conf['endian'] != 'big' && conf['endian'] != 'little')
			throw (new Error('Invalid endian type'));

		if ('char-type' in conf && (conf['char-type'] != 'uint8' &&
		    conf['char-type'] != 'int8'))
			throw (new Error('invalid option for char-type: ' +
			    conf['char-type']));

		this.endian = conf['endian'];
		this.types = ctGetBasicTypes();

		/*
		 * There may be a more graceful way to do this, but this will have to
		 * serve.
		 */
		if ('char-type' in conf && conf['char-type'] == 'uint8')
			this.types['char'] = this.types['uint8_t'];

		if ('char-type' in conf && conf['char-type'] == 'int8')
			this.types['char'] = this.types['int8_t'];
	}

	/*
	 * Sets the current endian value for the Parser. If the value is not valid,
	 * throws an Error.
	 *
	 *	endian		Either 'big' or 'little' do determine the endianness we
	 *			want to read from or write to.
	 *
	 */
	CTypeParser.prototype.setEndian = function (endian)
	{
		if (endian != 'big' && endian != 'little')
			throw (new Error('invalid endian type, must be big or ' +
			    'little'));

		this.endian = endian;
	};

	/*
	 * Returns the current value of the endian value for the parser.
	 */
	CTypeParser.prototype.getEndian = function ()
	{
		return (this.endian);
	};

	/*
	 * A user has requested to add a type, let us honor their request. Yet, if their
	 * request doth spurn us, send them unto the Hells which Dante describes.
	 *
	 * 	name		The string for the type definition we're adding
	 *
	 *	value		Either a string that is a type/array name or an object
	 *			that describes a struct.
	 */
	CTypeParser.prototype.typedef = function (name, value)
	{
		var type;

		if (name === undefined)
			throw (new (Error('missing required typedef argument: name')));

		if (value === undefined)
			throw (new (Error('missing required typedef argument: value')));

		if (typeof (name) != 'string')
			throw (new (Error('the name of a type must be a string')));

		type = ctParseType(name);

		if (type['len'] !== undefined)
			throw (new Error('Cannot have an array in the typedef name'));

		if (name in this.types)
			throw (new Error('typedef name already present: ' + name));

		if (typeof (value) != 'string' && !(value instanceof Array))
			throw (new Error('typedef value must either be a string or ' +
			    'struct'));

		if (typeof (value) == 'string') {
			type = ctParseType(value);
			if (type['len'] !== undefined) {
				if (isNaN(parseInt(type['len'], 10)))
					throw (new (Error('typedef value must use ' +
					    'fixed size array when outside of a ' +
					    'struct')));
			}

			this.types[name] = value;
		} else {
			/* We have a struct, validate it */
			ctCheckReq(value, this.types);
			this.types[name] = value;
		}
	};

	/*
	 * Include all of the typedefs, but none of the built in types. This should be
	 * treated as read-only.
	 */
	CTypeParser.prototype.lstypes = function ()
	{
		var key;
		var ret = {};

		for (key in this.types) {
			if (key in deftypes)
				continue;
			ret[key] = this.types[key];
		}

		return (ret);
	};

	/*
	 * Given a type string that may have array types that aren't numbers, try and
	 * fill them in from the values object. The object should be of the format where
	 * indexing into it should return a number for that type.
	 *
	 *	str		The type string
	 *
	 *	values		An object that can be used to fulfill type information
	 */
	function ctResolveArray(str, values)
	{
		var ret = '';
		var type = ctParseType(str);

		while (type['len'] !== undefined) {
			if (isNaN(parseInt(type['len'], 10))) {
				if (typeof (values[type['len']]) != 'number')
					throw (new Error('cannot sawp in non-number ' +
					    'for array value'));
				ret = '[' + values[type['len']] + ']' + ret;
			} else {
				ret = '[' + type['len'] + ']' + ret;
			}
			type = ctParseType(type['type']);
		}

		ret = type['type'] + ret;

		return (ret);
	}

	/*
	 * [private] Either the typedef resolves to another type string or to a struct.
	 * If it resolves to a struct, we just pass it off to read struct. If not, we
	 * can just pass it off to read entry.
	 */
	CTypeParser.prototype.resolveTypedef = function (type, dispatch, buffer,
	    offset, value)
	{
		var pt;

		mod_assert.ok(type in this.types);
		if (typeof (this.types[type]) == 'string') {
			pt = ctParseType(this.types[type]);
			if (dispatch == 'read')
				return (this.readEntry(pt, buffer, offset));
			else if (dispatch == 'write')
				return (this.writeEntry(value, pt, buffer, offset));
			else
				throw (new Error('invalid dispatch type to ' +
				    'resolveTypedef'));
		} else {
			if (dispatch == 'read')
				return (this.readStruct(this.types[type], buffer,
				    offset));
			else if (dispatch == 'write')
				return (this.writeStruct(value, this.types[type],
				    buffer, offset));
			else
				throw (new Error('invalid dispatch type to ' +
				    'resolveTypedef'));
		}

	};

	/*
	 * [private] Try and read in the specific entry.
	 */
	CTypeParser.prototype.readEntry = function (type, buffer, offset)
	{
		var parse, len;

		/*
		 * Because we want to special case char[]s this is unfortunately
		 * a bit uglier than it really should be. We want to special
		 * case char[]s so that we return a node buffer, thus they are a
		 * first class type where as all other arrays just call into a
		 * generic array routine which calls their data-specific routine
		 * the specified number of times.
		 *
		 * The valid dispatch options we have are:
		 *  - Array and char => char[] handler
		 *  - Generic array handler
		 *  - Generic typedef handler
		 *  - Basic type handler
		 */
		if (type['len'] !== undefined) {
			len = parseInt(type['len'], 10);
			if (isNaN(len))
				throw (new Error('somehow got a non-numeric length'));

			if (type['type'] == 'char')
				parse = this.types['char[]']['read'](len,
				    this.endian, buffer, offset);
			else
				parse = this.readArray(type['type'],
				    len, buffer, offset);
		} else {
			if (type['type'] in deftypes)
				parse = this.types[type['type']]['read'](this.endian,
				    buffer, offset);
			else
				parse = this.resolveTypedef(type['type'], 'read',
				    buffer, offset);
		}

		return (parse);
	};

	/*
	 * [private] Read an array of data
	 */
	CTypeParser.prototype.readArray = function (type, length, buffer, offset)
	{
		var ii, ent, pt;
		var baseOffset = offset;
		var ret = new Array(length);
		pt = ctParseType(type);

		for (ii = 0; ii < length; ii++) {
			ent = this.readEntry(pt, buffer, offset);
			offset += ent['size'];
			ret[ii] = ent['value'];
		}

		return ({ value: ret, size: offset - baseOffset });
	};

	/*
	 * [private] Read a single struct in.
	 */
	CTypeParser.prototype.readStruct = function (def, buffer, offset)
	{
		var parse, ii, type, entry, key;
		var baseOffset = offset;
		var ret = {};

		/* Walk it and handle doing what's necessary */
		for (ii = 0; ii < def.length; ii++) {
			key = Object.keys(def[ii])[0];
			entry = def[ii][key];

			/* Resolve all array values */
			type = ctParseType(ctResolveArray(entry['type'], ret));

			if ('offset' in entry)
				offset = baseOffset + entry['offset'];

			parse = this.readEntry(type, buffer, offset);

			offset += parse['size'];
			ret[key] = parse['value'];
		}

		return ({ value: ret, size: (offset-baseOffset)});
	};

	/*
	 * This is what we were born to do. We read the data from a buffer and return it
	 * in an object whose keys match the values from the object.
	 *
	 *	def		The array definition of the data to read in
	 *
	 *	buffer		The buffer to read data from
	 *
	 *	offset		The offset to start writing to
	 *
	 * Returns an object where each key corresponds to an entry in def and the value
	 * is the read value.
	 */
	CTypeParser.prototype.readData = function (def, buffer, offset)
	{
		/* Sanity check for arguments */
		if (def === undefined)
			throw (new Error('missing definition for what we should be' +
			    'parsing'));

		if (buffer === undefined)
			throw (new Error('missing buffer for what we should be ' +
			    'parsing'));

		if (offset === undefined)
			throw (new Error('missing offset for what we should be ' +
			    'parsing'));

		/* Sanity check the object definition */
		ctCheckReq(def, this.types);

		return (this.readStruct(def, buffer, offset)['value']);
	};

	/*
	 * [private] Write out an array of data
	 */
	CTypeParser.prototype.writeArray = function (value, type, length, buffer,
	    offset)
	{
		var ii, pt;
		var baseOffset = offset;
		if (!(value instanceof Array))
			throw (new Error('asked to write an array, but value is not ' +
			    'an array'));

		if (value.length != length)
			throw (new Error('asked to write array of length ' + length +
			    ' but that does not match value length: ' + value.length));

		pt = ctParseType(type);
		for (ii = 0; ii < length; ii++)
			offset += this.writeEntry(value[ii], pt, buffer, offset);

		return (offset - baseOffset);
	};

	/*
	 * [private] Write the specific entry
	 */
	CTypeParser.prototype.writeEntry = function (value, type, buffer, offset)
	{
		var len, ret;

		if (type['len'] !== undefined) {
			len = parseInt(type['len'], 10);
			if (isNaN(len))
				throw (new Error('somehow got a non-numeric length'));

			if (type['type'] == 'char')
				ret = this.types['char[]']['write'](value, len,
				    this.endian, buffer, offset);
			else
				ret = this.writeArray(value, type['type'],
				    len, buffer, offset);
		} else {
			if (type['type'] in deftypes)
				ret = this.types[type['type']]['write'](value,
				    this.endian, buffer, offset);
			else
				ret = this.resolveTypedef(type['type'], 'write',
				    buffer, offset, value);
		}

		return (ret);
	};

	/*
	 * [private] Write a single struct out.
	 */
	CTypeParser.prototype.writeStruct = function (value, def, buffer, offset)
	{
		var ii, entry, type, key;
		var baseOffset = offset;
		var vals = {};

		for (ii = 0; ii < def.length; ii++) {
			key = Object.keys(def[ii])[0];
			entry = def[ii][key];

			type = ctParseType(ctResolveArray(entry['type'], vals));

			if ('offset' in entry)
				offset = baseOffset + entry['offset'];

			offset += this.writeEntry(value[ii], type, buffer, offset);
			/* Now that we've written it out, we can use it for arrays */
			vals[key] = value[ii];
		}

		return (offset);
	};

	/*
	 * Unfortunately, we're stuck with the sins of an initial poor design. Because
	 * of that, we are going to have to support the old way of writing data via
	 * writeData. There we insert the values that you want to write into the
	 * definition. A little baroque. Internally, we use the new model. So we need to
	 * just get those values out of there. But to maintain the principle of least
	 * surprise, we're not going to modify the input data.
	 */
	function getValues(def)
	{
		var ii, out, key;
		out = [];
		for (ii = 0; ii < def.length; ii++) {
			key = Object.keys(def[ii])[0];
			mod_assert.ok('value' in def[ii][key]);
			out.push(def[ii][key]['value']);
		}

		return (out);
	}

	/*
	 * This is the second half of what we were born to do, write out the data
	 * itself. Historically this function required you to put your values in the
	 * definition section. This was not the smartest thing to do and a bit of an
	 * oversight to be honest. As such, this function now takes a values argument.
	 * If values is non-null and non-undefined, it will be used to determine the
	 * values. This means that the old method is still supported, but is no longer
	 * acceptable.
	 *
	 *	def		The array definition of the data to write out with
	 *			values
	 *
	 *	buffer		The buffer to write to
	 *
	 *	offset		The offset in the buffer to write to
	 *
	 *	values		An array of values to write.
	 */
	CTypeParser.prototype.writeData = function (def, buffer, offset, values)
	{
		var hv;

		if (def === undefined)
			throw (new Error('missing definition for what we should be' +
			    'parsing'));

		if (buffer === undefined)
			throw (new Error('missing buffer for what we should be ' +
			    'parsing'));

		if (offset === undefined)
			throw (new Error('missing offset for what we should be ' +
			    'parsing'));

		hv = (values != null && values != undefined);
		if (hv) {
			if (!Array.isArray(values))
				throw (new Error('missing values for writing'));
			ctCheckReq(def, this.types);
		} else {
			ctCheckReq(def, this.types, [ 'value' ]);
		}

		this.writeStruct(hv ? values : getValues(def), def, buffer, offset);
	};

	/*
	 * Functions to go to and from 64 bit numbers in a way that is compatible with
	 * Javascript limitations. There are two sets. One where the user is okay with
	 * an approximation and one where they are definitely not okay with an
	 * approximation.
	 */

	/*
	 * Attempts to convert an array of two integers returned from rsint64 / ruint64
	 * into an absolute 64 bit number. If however the value would exceed 2^52 this
	 * will instead throw an error. The mantissa in a double is a 52 bit number and
	 * rather than potentially give you a value that is an approximation this will
	 * error. If you would rather an approximation, please see toApprox64.
	 *
	 *	val		An array of two 32-bit integers
	 */
	function toAbs64(val)
	{
		if (val === undefined)
			throw (new Error('missing required arg: value'));

		if (!Array.isArray(val))
			throw (new Error('value must be an array'));

		if (val.length != 2)
			throw (new Error('value must be an array of length 2'));

		/* We have 20 bits worth of precision in this range */
		if (val[0] >= 0x100000)
			throw (new Error('value would become approximated'));

		return (val[0] * Math.pow(2, 32) + val[1]);
	}

	/*
	 * Will return the 64 bit value as returned in an array from rsint64 / ruint64
	 * to a value as close as it can. Note that Javascript stores all numbers as a
	 * double and the mantissa only has 52 bits. Thus this version may approximate
	 * the value.
	 *
	 *	val		An array of two 32-bit integers
	 */
	function toApprox64(val)
	{
		if (val === undefined)
			throw (new Error('missing required arg: value'));

		if (!Array.isArray(val))
			throw (new Error('value must be an array'));

		if (val.length != 2)
			throw (new Error('value must be an array of length 2'));

		return (Math.pow(2, 32) * val[0] + val[1]);
	}

	function parseCTF(json, conf)
	{
		var ctype = new CTypeParser(conf);
		mod_ctf.ctfParseJson(json, ctype);

		return (ctype);
	}

	/*
	 * Export the few things we actually want to. Currently this is just the CType
	 * Parser and ctio.
	 */
	exports.Parser = CTypeParser;
	exports.toAbs64 = toAbs64;
	exports.toApprox64 = toApprox64;

	exports.parseCTF = parseCTF;

	exports.ruint8 = mod_ctio.ruint8;
	exports.ruint16 = mod_ctio.ruint16;
	exports.ruint32 = mod_ctio.ruint32;
	exports.ruint64 = mod_ctio.ruint64;
	exports.wuint8 = mod_ctio.wuint8;
	exports.wuint16 = mod_ctio.wuint16;
	exports.wuint32 = mod_ctio.wuint32;
	exports.wuint64 = mod_ctio.wuint64;

	exports.rsint8 = mod_ctio.rsint8;
	exports.rsint16 = mod_ctio.rsint16;
	exports.rsint32 = mod_ctio.rsint32;
	exports.rsint64 = mod_ctio.rsint64;
	exports.wsint8 = mod_ctio.wsint8;
	exports.wsint16 = mod_ctio.wsint16;
	exports.wsint32 = mod_ctio.wsint32;
	exports.wsint64 = mod_ctio.wsint64;

	exports.rfloat = mod_ctio.rfloat;
	exports.rdouble = mod_ctio.rdouble;
	exports.wfloat = mod_ctio.wfloat;
	exports.wdouble = mod_ctio.wdouble;


/***/ },
/* 583 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * ctf.js
	 *
	 * Understand and parse all of the different JSON formats of CTF data and
	 * translate that into a series of node-ctype friendly pieces. The reason for
	 * the abstraction is to handle different changes in the file format.
	 *
	 * We have to be careful here that we don't end up using a name that is already
	 * a built in type.
	 */
	var mod_assert = __webpack_require__(437);
	var ASSERT = mod_assert.ok;

	var ctf_versions = [ '1.0' ];
	var ctf_entries = [ 'integer', 'float', 'typedef', 'struct' ];
	var ctf_deftypes = [ 'int8_t', 'uint8_t', 'int16_t', 'uint16_t', 'int32_t',
	    'uint32_t', 'float', 'double' ];

	function ctfParseInteger(entry, ctype)
	{
		var name, sign, len, type;

		name = entry['name'];
		if (!('signed' in entry['integer']))
			throw (new Error('Malformed CTF JSON: integer missing ' +
			    'signed value'));


		if (!('length' in entry['integer']))
			throw (new Error('Malformed CTF JSON: integer missing ' +
			    'length value'));

		sign = entry['integer']['signed'];
		len = entry['integer']['length'];
		type = null;

		if (sign && len == 1)
			type = 'int8_t';
		else if (len == 1)
			type = 'uint8_t';
		else if (sign && len == 2)
			type = 'int16_t';
		else if (len == 2)
			type = 'uint16_t';
		else if (sign && len == 4)
			type = 'int32_t';
		else if (len == 4)
			type = 'uint32_t';
		else if (sign && len == 8)
			type = 'int64_t';
		else if (len == 8)
			type = 'uint64_t';

		if (type === null)
			throw (new Error('Malformed CTF JSON: integer has ' +
			    'unsupported length and sign - ' + len + '/' + sign));

		/*
		 * This means that this is the same as one of our built in types. If
		 * that's the case defining it would be an error. So instead of trying
		 * to typedef it, we'll return here.
		 */
		if (name == type)
			return;

		if (name == 'char') {
			ASSERT(type == 'int8_t');
			return;
		}

		ctype.typedef(name, type);
	}

	function ctfParseFloat(entry, ctype)
	{
		var name, len;

		name = entry['name'];
		if (!('length' in entry['float']))
			throw (new Error('Malformed CTF JSON: float missing ' +
			    'length value'));

		len = entry['float']['length'];
		if (len != 4 && len != 8)
			throw (new Error('Malformed CTF JSON: float has invalid ' +
			    'length value'));

		if (len == 4) {
			if (name == 'float')
				return;
			ctype.typedef(name, 'float');
		} else if (len == 8) {
			if (name == 'double')
				return;
			ctype.typedef(name, 'double');
		}
	}

	function ctfParseTypedef(entry, ctype)
	{
		var name, type, ii;

		name = entry['name'];
		if (typeof (entry['typedef']) != 'string')
			throw (new Error('Malformed CTF JSON: typedef value in not ' +
			    'a string'));

		type = entry['typedef'];

		/*
		 * We need to ensure that we're not looking at type that's one of our
		 * built in types. Traditionally in C a uint32_t would be a typedef to
		 * some kind of integer. However, those size types are built ins.
		 */
		for (ii = 0; ii < ctf_deftypes.length; ii++) {
			if (name == ctf_deftypes[ii])
				return;
		}

		ctype.typedef(name, type);
	}

	function ctfParseStruct(entry, ctype)
	{
		var name, type, ii, val, index, member, push;

		member = [];
		if (!Array.isArray(entry['struct']))
			throw (new Error('Malformed CTF JSON: struct value is not ' +
			    'an array'));

		for (ii = 0; ii < entry['struct'].length; ii++) {
			val = entry['struct'][ii];
			if (!('name' in val))
				throw (new Error('Malformed CTF JSON: struct member ' +
				    'missing name'));

			if (!('type' in val))
				throw (new Error('Malformed CTF JSON: struct member ' +
				    'missing type'));

			if (typeof (val['name']) != 'string')
				throw (new Error('Malformed CTF JSON: struct member ' +
				    'name isn\'t a string'));

			if (typeof (val['type']) != 'string')
				throw (new Error('Malformed CTF JSON: struct member ' +
				    'type isn\'t a string'));

			/*
			 * CTF version 2 specifies array names as <type> [<num>] where
			 * as node-ctype does this as <type>[<num>].
			 */
			name = val['name'];
			type = val['type'];
			index = type.indexOf(' [');
			if (index != -1) {
				type = type.substring(0, index) +
				    type.substring(index + 1, type.length);
			}
			push = {};
			push[name] = { 'type': type };
			member.push(push);
		}

		name = entry['name'];
		ctype.typedef(name, member);
	}

	function ctfParseEntry(entry, ctype)
	{
		var ii, found;

		if (!('name' in entry))
			throw (new Error('Malformed CTF JSON: entry missing "name" ' +
			    'section'));

		for (ii = 0; ii < ctf_entries.length; ii++) {
			if (ctf_entries[ii] in entry)
				found++;
		}

		if (found === 0)
			throw (new Error('Malformed CTF JSON: found no entries'));

		if (found >= 2)
			throw (new Error('Malformed CTF JSON: found more than one ' +
			    'entry'));

		if ('integer' in entry) {
			ctfParseInteger(entry, ctype);
			return;
		}

		if ('float' in entry) {
			ctfParseFloat(entry, ctype);
			return;
		}

		if ('typedef' in entry) {
			ctfParseTypedef(entry, ctype);
			return;
		}

		if ('struct' in entry) {
			ctfParseStruct(entry, ctype);
			return;
		}

		ASSERT(false, 'shouldn\'t reach here');
	}

	function ctfParseJson(json, ctype)
	{
		var version, ii;

		ASSERT(json);
		ASSERT(ctype);
		if (!('metadata' in json))
			throw (new Error('Invalid CTF JSON: missing metadata section'));

		if (!('ctf2json_version' in json['metadata']))
			throw (new Error('Invalid CTF JSON: missing ctf2json_version'));

		version = json['metadata']['ctf2json_version'];
		for (ii = 0; ii < ctf_versions.length; ii++) {
			if (ctf_versions[ii] == version)
				break;
		}

		if (ii == ctf_versions.length)
			throw (new Error('Unsuported ctf2json_version: ' + version));

		if (!('data' in json))
			throw (new Error('Invalid CTF JSON: missing data section'));

		if (!Array.isArray(json['data']))
			throw (new Error('Malformed CTF JSON: data section is not ' +
			    'an array'));

		for (ii = 0; ii < json['data'].length; ii++)
			ctfParseEntry(json['data'][ii], ctype);
	}

	exports.ctfParseJson = ctfParseJson;


/***/ },
/* 584 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * rm - Feb 2011
	 * ctio.js:
	 *
	 * A simple way to read and write simple ctypes. Of course, as you'll find the
	 * code isn't as simple as it might appear. The following types are currently
	 * supported in big and little endian formats:
	 *
	 * 	uint8_t			int8_t
	 * 	uint16_t		int16_t
	 * 	uint32_t		int32_t
	 *	float (single precision IEEE 754)
	 *	double (double precision IEEE 754)
	 *
	 * This is designed to work in Node and v8. It may in fact work in other
	 * Javascript interpreters (that'd be pretty neat), but it hasn't been tested.
	 * If you find that it does in fact work, that's pretty cool. Try and pass word
	 * back to the original author.
	 *
	 * Note to the reader: If you're tabstop isn't set to 8, parts of this may look
	 * weird.
	 */

	/*
	 * Numbers in Javascript have a secret: all numbers must be represented with an
	 * IEEE-754 double. The double has a mantissa with a length of 52 bits with an
	 * implicit one. Thus the range of integers that can be represented is limited
	 * to the size of the mantissa, this makes reading and writing 64-bit integers
	 * difficult, but far from impossible.
	 *
	 * Another side effect of this representation is what happens when you use the
	 * bitwise operators, i.e. shift left, shift right, and, or, etc. In Javascript,
	 * each operand and the result is cast to a signed 32-bit number. However, in
	 * the case of >>> the values are cast to an unsigned number.
	 */

	/*
	 * A reminder on endian related issues:
	 *
	 * Big Endian: MSB -> First byte
	 * Little Endian: MSB->Last byte
	 */
	var mod_assert = __webpack_require__(437);

	/*
	 * An 8 bit unsigned integer involves doing no significant work.
	 */
	function ruint8(buffer, endian, offset)
	{
		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		return (buffer[offset]);
	}

	/*
	 * For 16 bit unsigned numbers we can do all the casting that we want to do.
	 */
	function rgint16(buffer, endian, offset)
	{
		var val = 0;

		if (endian == 'big') {
			val = buffer[offset] << 8;
			val |=  buffer[offset+1];
		} else {
			val = buffer[offset];
			val |= buffer[offset+1] << 8;
		}

		return (val);

	}

	function ruint16(buffer, endian, offset)
	{
		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 1 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		return (rgint16(buffer, endian, offset));
	}

	/*
	 * Because most bitshifting is done using signed numbers, if we would go into
	 * the realm where we use that 32nd bit, we'll end up going into the negative
	 * range. i.e.:
	 * > 200 << 24
	 * -939524096
	 *
	 * Not the value you'd expect. To work around this, we end up having to do some
	 * abuse of the JavaScript standard. in this case, we know that a >>> shift is
	 * defined to cast our value to an *unsigned* 32-bit number. Because of that, we
	 * use that instead to save us some additional math, though it does feel a
	 * little weird and it isn't obvious as to why you woul dwant to do this at
	 * first.
	 */
	function rgint32(buffer, endian, offset)
	{
		var val = 0;

		if (endian == 'big') {
			val = buffer[offset+1] << 16;
			val |= buffer[offset+2] << 8;
			val |= buffer[offset+3];
			val = val + (buffer[offset] << 24 >>> 0);
		} else {
			val = buffer[offset+2] << 16;
			val |= buffer[offset+1] << 8;
			val |= buffer[offset];
			val = val + (buffer[offset + 3] << 24 >>> 0);
		}

		return (val);
	}

	function ruint32(buffer, endian, offset)
	{
		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 3 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		return (rgint32(buffer, endian, offset));
	}

	/*
	 * Reads a 64-bit unsigned number. The astue observer will note that this
	 * doesn't quite work. Javascript has chosen to only have numbers that can be
	 * represented by a double. A double only has 52 bits of mantissa with an
	 * implicit 1, thus we have up to 53 bits to represent an integer. However, 2^53
	 * doesn't quite give us what we want. Isn't 53 bits enough for anyone? What
	 * could you have possibly wanted to represent that was larger than that? Oh,
	 * maybe a size? You mean we bypassed the 4 GB limit on file sizes, when did
	 * that happen?
	 *
	 * To get around this egregious language issue, we're going to instead construct
	 * an array of two 32 bit unsigned integers. Where arr[0] << 32 + arr[1] would
	 * give the actual number. However, note that the above code probably won't
	 * produce the desired results because of the way Javascript numbers are
	 * doubles.
	 */
	function rgint64(buffer, endian, offset)
	{
		var val = new Array(2);

		if (endian == 'big') {
			val[0] = ruint32(buffer, endian, offset);
			val[1] = ruint32(buffer, endian, offset+4);
		} else {
			val[0] = ruint32(buffer, endian, offset+4);
			val[1] = ruint32(buffer, endian, offset);
		}

		return (val);
	}

	function ruint64(buffer, endian, offset)
	{
		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 7 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		return (rgint64(buffer, endian, offset));
	}


	/*
	 * Signed integer types, yay team! A reminder on how two's complement actually
	 * works. The first bit is the signed bit, i.e. tells us whether or not the
	 * number should be positive or negative. If the two's complement value is
	 * positive, then we're done, as it's equivalent to the unsigned representation.
	 *
	 * Now if the number is positive, you're pretty much done, you can just leverage
	 * the unsigned translations and return those. Unfortunately, negative numbers
	 * aren't quite that straightforward.
	 *
	 * At first glance, one might be inclined to use the traditional formula to
	 * translate binary numbers between the positive and negative values in two's
	 * complement. (Though it doesn't quite work for the most negative value)
	 * Mainly:
	 *  - invert all the bits
	 *  - add one to the result
	 *
	 * Of course, this doesn't quite work in Javascript. Take for example the value
	 * of -128. This could be represented in 16 bits (big-endian) as 0xff80. But of
	 * course, Javascript will do the following:
	 *
	 * > ~0xff80
	 * -65409
	 *
	 * Whoh there, Javascript, that's not quite right. But wait, according to
	 * Javascript that's perfectly correct. When Javascript ends up seeing the
	 * constant 0xff80, it has no notion that it is actually a signed number. It
	 * assumes that we've input the unsigned value 0xff80. Thus, when it does the
	 * binary negation, it casts it into a signed value, (positive 0xff80). Then
	 * when you perform binary negation on that, it turns it into a negative number.
	 *
	 * Instead, we're going to have to use the following general formula, that works
	 * in a rather Javascript friendly way. I'm glad we don't support this kind of
	 * weird numbering scheme in the kernel.
	 *
	 * (BIT-MAX - (unsigned)val + 1) * -1
	 *
	 * The astute observer, may think that this doesn't make sense for 8-bit numbers
	 * (really it isn't necessary for them). However, when you get 16-bit numbers,
	 * you do. Let's go back to our prior example and see how this will look:
	 *
	 * (0xffff - 0xff80 + 1) * -1
	 * (0x007f + 1) * -1
	 * (0x0080) * -1
	 *
	 * Doing it this way ends up allowing us to treat it appropriately in
	 * Javascript. Sigh, that's really quite ugly for what should just be a few bit
	 * shifts, ~ and &.
	 */

	/*
	 * Endianness doesn't matter for 8-bit signed values. We could in fact optimize
	 * this case because the more traditional methods work, but for consistency,
	 * we'll keep doing this the same way.
	 */
	function rsint8(buffer, endian, offset)
	{
		var neg;

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		neg = buffer[offset] & 0x80;
		if (!neg)
			return (buffer[offset]);

		return ((0xff - buffer[offset] + 1) * -1);
	}

	/*
	 * The 16-bit version requires a bit more effort. In this case, we can leverage
	 * our unsigned code to generate the value we want to return.
	 */
	function rsint16(buffer, endian, offset)
	{
		var neg, val;

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 1 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		val = rgint16(buffer, endian, offset);
		neg = val & 0x8000;
		if (!neg)
			return (val);

		return ((0xffff - val + 1) * -1);
	}

	/*
	 * We really shouldn't leverage our 32-bit code here and instead utilize the
	 * fact that we know that since these are signed numbers, we can do all the
	 * shifting and binary anding to generate the 32-bit number. But, for
	 * consistency we'll do the same. If we want to do otherwise, we should instead
	 * make the 32 bit unsigned code do the optimization. But as long as there
	 * aren't floats secretly under the hood for that, we /should/ be okay.
	 */
	function rsint32(buffer, endian, offset)
	{
		var neg, val;

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 3 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		val = rgint32(buffer, endian, offset);
		neg = val & 0x80000000;
		if (!neg)
			return (val);

		return ((0xffffffff - val + 1) * -1);
	}

	/*
	 * The signed version of this code suffers from all of the same problems of the
	 * other 64 bit version.
	 */
	function rsint64(buffer, endian, offset)
	{
		var neg, val;

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 3 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		val = rgint64(buffer, endian, offset);
		neg = val[0] & 0x80000000;

		if (!neg)
			return (val);

		val[0] = (0xffffffff - val[0]) * -1;
		val[1] = (0xffffffff - val[1] + 1) * -1;

		/*
		 * If we had the key 0x8000000000000000, that would leave the lower 32
		 * bits as 0xffffffff, however, since we're goint to add one, that would
		 * actually leave the lower 32-bits as 0x100000000, which would break
		 * our ability to write back a value that we received. To work around
		 * this, if we actually get that value, we're going to bump the upper
		 * portion by 1 and set this to zero.
		 */
		mod_assert.ok(val[1] <= 0x100000000);
		if (val[1] == -0x100000000) {
			val[1] = 0;
			val[0]--;
		}

		return (val);
	}

	/*
	 * We now move onto IEEE 754: The traditional form for floating point numbers
	 * and what is secretly hiding at the heart of everything in this. I really hope
	 * that someone is actually using this, as otherwise, this effort is probably
	 * going to be more wasted.
	 *
	 * One might be tempted to use parseFloat here, but that wouldn't work at all
	 * for several reasons. Mostly due to the way floats actually work, and
	 * parseFloat only actually works in base 10. I don't see base 10 anywhere near
	 * this file.
	 *
	 * In this case we'll implement the single and double precision versions. The
	 * quadruple precision, while probably useful, wouldn't really be accepted by
	 * Javascript, so let's not even waste our time.
	 *
	 * So let's review how this format looks like. A single precision value is 32
	 * bits and has three parts:
	 *   -  Sign bit
	 *   -  Exponent (Using bias notation)
	 *   -  Mantissa
	 *
	 * |s|eeeeeeee|mmmmmmmmmmmmmmmmmmmmmmmmm|
	 * 31| 30-23  |  22    	-       0       |
	 *
	 * The exponent is stored in a biased input. The bias in this case 127.
	 * Therefore, our exponent is equal to the 8-bit value - 127.
	 *
	 * By default, a number is normalized in IEEE, that means that the mantissa has
	 * an implicit one that we don't see. So really the value stored is 1.m.
	 * However, if the exponent is all zeros, then instead we have to shift
	 * everything to the right one and there is no more implicit one.
	 *
	 * Special values:
	 *  - Positive Infinity:
	 *	Sign:		0
	 *	Exponent: 	All 1s
	 *	Mantissa:	0
	 *  - Negative Infinity:
	 *	Sign:		1
	 *	Exponent: 	All 1s
	 *	Mantissa:	0
	 *  - NaN:
	 *	Sign:		*
	 *	Exponent: 	All 1s
	 *	Mantissa:	non-zero
	 *  - Zero:
	 *	Sign:		*
	 *	Exponent:	All 0s
	 *	Mantissa:	0
	 *
	 * In the case of zero, the sign bit determines whether we get a positive or
	 * negative zero. However, since Javascript cannot determine the difference
	 * between the two: i.e. -0 == 0, we just always return 0.
	 *
	 */
	function rfloat(buffer, endian, offset)
	{
		var bytes = [];
		var sign, exponent, mantissa, val;
		var bias = 127;
		var maxexp = 0xff;

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 3 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		/* Normalize the bytes to be in endian order */
		if (endian == 'big') {
			bytes[0] = buffer[offset];
			bytes[1] = buffer[offset+1];
			bytes[2] = buffer[offset+2];
			bytes[3] = buffer[offset+3];
		} else {
			bytes[3] = buffer[offset];
			bytes[2] = buffer[offset+1];
			bytes[1] = buffer[offset+2];
			bytes[0] = buffer[offset+3];
		}

		sign = bytes[0] & 0x80;
		exponent = (bytes[0] & 0x7f) << 1;
		exponent |= (bytes[1] & 0x80) >>> 7;
		mantissa = (bytes[1] & 0x7f) << 16;
		mantissa |= bytes[2] << 8;
		mantissa |= bytes[3];

		/* Check for special cases before we do general parsing */
		if (!sign && exponent == maxexp && mantissa === 0)
			return (Number.POSITIVE_INFINITY);

		if (sign && exponent == maxexp && mantissa === 0)
			return (Number.NEGATIVE_INFINITY);

		if (exponent == maxexp && mantissa !== 0)
			return (Number.NaN);

		/*
		 * Javascript really doesn't have support for positive or negative zero.
		 * So we're not going to try and give it to you. That would be just
		 * plain weird. Besides -0 == 0.
		 */
		if (exponent === 0 && mantissa === 0)
			return (0);

		/*
		 * Now we can deal with the bias and the determine whether the mantissa
		 * has the implicit one or not.
		 */
		exponent -= bias;
		if (exponent == -bias) {
			exponent++;
			val = 0;
		} else {
			val = 1;
		}

		val = (val + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);

		if (sign)
			val *= -1;

		return (val);
	}

	/*
	 * Doubles in IEEE 754 are like their brothers except for a few changes and
	 * increases in size:
	 *   - The exponent is now 11 bits
	 *   - The mantissa is now 52 bits
	 *   - The bias is now 1023
	 *
	 * |s|eeeeeeeeeee|mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm|
	 * 63| 62 - 52   | 	51		-			0     |
	 * 63| 62 - 52   |      51              -                       0     |
	 *
	 * While the size has increased a fair amount, we're going to end up keeping the
	 * same general formula for calculating the final value. As a reminder, this
	 * formula is:
	 *
	 * (-1)^s * (n + m) * 2^(e-b)
	 *
	 * Where:
	 *	s	is the sign bit
	 *	n	is (exponent > 0) ? 1 : 0 -- Determines whether we're normalized
	 *					     or not
	 *	m	is the mantissa
	 *	e	is the exponent specified
	 *	b	is the bias for the exponent
	 *
	 */
	function rdouble(buffer, endian, offset)
	{
		var bytes = [];
		var sign, exponent, mantissa, val, lowmant;
		var bias = 1023;
		var maxexp = 0x7ff;

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 7 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		/* Normalize the bytes to be in endian order */
		if (endian == 'big') {
			bytes[0] = buffer[offset];
			bytes[1] = buffer[offset+1];
			bytes[2] = buffer[offset+2];
			bytes[3] = buffer[offset+3];
			bytes[4] = buffer[offset+4];
			bytes[5] = buffer[offset+5];
			bytes[6] = buffer[offset+6];
			bytes[7] = buffer[offset+7];
		} else {
			bytes[7] = buffer[offset];
			bytes[6] = buffer[offset+1];
			bytes[5] = buffer[offset+2];
			bytes[4] = buffer[offset+3];
			bytes[3] = buffer[offset+4];
			bytes[2] = buffer[offset+5];
			bytes[1] = buffer[offset+6];
			bytes[0] = buffer[offset+7];
		}

		/*
		 * We can construct the exponent and mantissa the same way as we did in
		 * the case of a float, just increase the range of the exponent.
		 */
		sign = bytes[0] & 0x80;
		exponent = (bytes[0] & 0x7f) << 4;
		exponent |= (bytes[1] & 0xf0) >>> 4;

		/*
		 * This is going to be ugly but then again, we're dealing with IEEE 754.
		 * This could probably be done as a node add on in a few lines of C++,
		 * but oh we'll, we've made it this far so let's be native the rest of
		 * the way...
		 *
		 * What we're going to do is break the mantissa into two parts, the
		 * lower 24 bits and the upper 28 bits. We'll multiply the upper 28 bits
		 * by the appropriate power and then add in the lower 24-bits. Not
		 * really that great. It's pretty much a giant kludge to deal with
		 * Javascript eccentricities around numbers.
		 */
		lowmant = bytes[7];
		lowmant |= bytes[6] << 8;
		lowmant |= bytes[5] << 16;
		mantissa = bytes[4];
		mantissa |= bytes[3] << 8;
		mantissa |= bytes[2] << 16;
		mantissa |= (bytes[1] & 0x0f) << 24;
		mantissa *= Math.pow(2, 24); /* Equivalent to << 24, but JS compat */
		mantissa += lowmant;

		/* Check for special cases before we do general parsing */
		if (!sign && exponent == maxexp && mantissa === 0)
			return (Number.POSITIVE_INFINITY);

		if (sign && exponent == maxexp && mantissa === 0)
			return (Number.NEGATIVE_INFINITY);

		if (exponent == maxexp && mantissa !== 0)
			return (Number.NaN);

		/*
		 * Javascript really doesn't have support for positive or negative zero.
		 * So we're not going to try and give it to you. That would be just
		 * plain weird. Besides -0 == 0.
		 */
		if (exponent === 0 && mantissa === 0)
			return (0);

		/*
		 * Now we can deal with the bias and the determine whether the mantissa
		 * has the implicit one or not.
		 */
		exponent -= bias;
		if (exponent == -bias) {
			exponent++;
			val = 0;
		} else {
			val = 1;
		}

		val = (val + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);

		if (sign)
			val *= -1;

		return (val);
	}

	/*
	 * Now that we have gone through the pain of reading the individual types, we're
	 * probably going to want some way to write these back. None of this is going to
	 * be good. But since we have Javascript numbers this should certainly be more
	 * interesting. Though we can constrain this end a little bit more in what is
	 * valid. For now, let's go back to our friends the unsigned value.
	 */

	/*
	 * Unsigned numbers seem deceptively easy. Here are the general steps and rules
	 * that we are going to take:
	 *   -  If the number is negative, throw an Error
	 *   -  Truncate any floating point portion
	 *   -  Take the modulus of the number in our base
	 *   -  Write it out to the buffer in the endian format requested at the offset
	 */

	/*
	 * We have to make sure that the value is a valid integer. This means that it is
	 * non-negative. It has no fractional component and that it does not exceed the
	 * maximum allowed value.
	 *
	 *	value		The number to check for validity
	 *
	 *	max		The maximum value
	 */
	function prepuint(value, max)
	{
		if (typeof (value) != 'number')
			throw (new (Error('cannot write a non-number as a number')));

		if (value < 0)
			throw (new Error('specified a negative value for writing an ' +
			    'unsigned value'));

		if (value > max)
			throw (new Error('value is larger than maximum value for ' +
			    'type'));

		if (Math.floor(value) !== value)
			throw (new Error('value has a fractional component'));

		return (value);
	}

	/*
	 * 8-bit version, classy. We can ignore endianness which is good.
	 */
	function wuint8(value, endian, buffer, offset)
	{
		var val;

		if (value === undefined)
			throw (new Error('missing value'));

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		val = prepuint(value, 0xff);
		buffer[offset] = val;
	}

	/*
	 * Pretty much the same as the 8-bit version, just this time we need to worry
	 * about endian related issues.
	 */
	function wgint16(val, endian, buffer, offset)
	{
		if (endian == 'big') {
			buffer[offset] = (val & 0xff00) >>> 8;
			buffer[offset+1] = val & 0x00ff;
		} else {
			buffer[offset+1] = (val & 0xff00) >>> 8;
			buffer[offset] = val & 0x00ff;
		}
	}

	function wuint16(value, endian, buffer, offset)
	{
		var val;

		if (value === undefined)
			throw (new Error('missing value'));

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 1 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		val = prepuint(value, 0xffff);
		wgint16(val, endian, buffer, offset);
	}

	/*
	 * The 32-bit version is going to have to be a little different unfortunately.
	 * We can't quite bitshift to get the largest byte, because that would end up
	 * getting us caught by the signed values.
	 *
	 * And yes, we do want to subtract out the lower part by default. This means
	 * that when we do the division, it will be treated as a bit shift and we won't
	 * end up generating a floating point value. If we did generate a floating point
	 * value we'd have to truncate it intelligently, this saves us that problem and
	 * may even be somewhat faster under the hood.
	 */
	function wgint32(val, endian, buffer, offset)
	{
		if (endian == 'big') {
			buffer[offset] = (val - (val & 0x00ffffff)) / Math.pow(2, 24);
			buffer[offset+1] = (val >>> 16) & 0xff;
			buffer[offset+2] = (val >>> 8) & 0xff;
			buffer[offset+3] = val & 0xff;
		} else {
			buffer[offset+3] = (val - (val & 0x00ffffff)) /
			    Math.pow(2, 24);
			buffer[offset+2] = (val >>> 16) & 0xff;
			buffer[offset+1] = (val >>> 8) & 0xff;
			buffer[offset] = val & 0xff;
		}
	}

	function wuint32(value, endian, buffer, offset)
	{
		var val;

		if (value === undefined)
			throw (new Error('missing value'));

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 3 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		val = prepuint(value, 0xffffffff);
		wgint32(val, endian, buffer, offset);
	}

	/*
	 * Unlike the other versions, we expect the value to be in the form of two
	 * arrays where value[0] << 32 + value[1] would result in the value that we
	 * want.
	 */
	function wgint64(value, endian, buffer, offset)
	{
		if (endian == 'big') {
			wgint32(value[0], endian, buffer, offset);
			wgint32(value[1], endian, buffer, offset+4);
		} else {
			wgint32(value[0], endian, buffer, offset+4);
			wgint32(value[1], endian, buffer, offset);
		}
	}

	function wuint64(value, endian, buffer, offset)
	{
		if (value === undefined)
			throw (new Error('missing value'));

		if (!(value instanceof Array))
			throw (new Error('value must be an array'));

		if (value.length != 2)
			throw (new Error('value must be an array of length 2'));

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 7 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		prepuint(value[0], 0xffffffff);
		prepuint(value[1], 0xffffffff);
		wgint64(value, endian, buffer, offset);
	}

	/*
	 * We now move onto our friends in the signed number category. Unlike unsigned
	 * numbers, we're going to have to worry a bit more about how we put values into
	 * arrays. Since we are only worrying about signed 32-bit values, we're in
	 * slightly better shape. Unfortunately, we really can't do our favorite binary
	 * & in this system. It really seems to do the wrong thing. For example:
	 *
	 * > -32 & 0xff
	 * 224
	 *
	 * What's happening above is really: 0xe0 & 0xff = 0xe0. However, the results of
	 * this aren't treated as a signed number. Ultimately a bad thing.
	 *
	 * What we're going to want to do is basically create the unsigned equivalent of
	 * our representation and pass that off to the wuint* functions. To do that
	 * we're going to do the following:
	 *
	 *  - if the value is positive
	 *	we can pass it directly off to the equivalent wuint
	 *  - if the value is negative
	 *	we do the following computation:
	 *	mb + val + 1, where
	 *	mb	is the maximum unsigned value in that byte size
	 *	val	is the Javascript negative integer
	 *
	 *
	 * As a concrete value, take -128. In signed 16 bits this would be 0xff80. If
	 * you do out the computations:
	 *
	 * 0xffff - 128 + 1
	 * 0xffff - 127
	 * 0xff80
	 *
	 * You can then encode this value as the signed version. This is really rather
	 * hacky, but it should work and get the job done which is our goal here.
	 *
	 * Thus the overall flow is:
	 *   -  Truncate the floating point part of the number
	 *   -  We don't have to take the modulus, because the unsigned versions will
	 *   	take care of that for us. And we don't have to worry about that
	 *   	potentially causing bad things to happen because of sign extension
	 *   -  Pass it off to the appropriate unsigned version, potentially modifying
	 *	the negative portions as necessary.
	 */

	/*
	 * A series of checks to make sure we actually have a signed 32-bit number
	 */
	function prepsint(value, max, min)
	{
		if (typeof (value) != 'number')
			throw (new (Error('cannot write a non-number as a number')));

		if (value > max)
			throw (new Error('value larger than maximum allowed value'));

		if (value < min)
			throw (new Error('value smaller than minimum allowed value'));

		if (Math.floor(value) !== value)
			throw (new Error('value has a fractional component'));

		return (value);
	}

	/*
	 * The 8-bit version of the signed value. Overall, fairly straightforward.
	 */
	function wsint8(value, endian, buffer, offset)
	{
		var val;

		if (value === undefined)
			throw (new Error('missing value'));

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		val = prepsint(value, 0x7f, -0x80);
		if (val >= 0)
			wuint8(val, endian, buffer, offset);
		else
			wuint8(0xff + val + 1, endian, buffer, offset);
	}

	/*
	 * The 16-bit version of the signed value. Also, fairly straightforward.
	 */
	function wsint16(value, endian, buffer, offset)
	{
		var val;

		if (value === undefined)
			throw (new Error('missing value'));

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 1 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		val = prepsint(value, 0x7fff, -0x8000);
		if (val >= 0)
			wgint16(val, endian, buffer, offset);
		else
			wgint16(0xffff + val + 1, endian, buffer, offset);

	}

	/*
	 * We can do this relatively easily by leveraging the code used for 32-bit
	 * unsigned code.
	 */
	function wsint32(value, endian, buffer, offset)
	{
		var val;

		if (value === undefined)
			throw (new Error('missing value'));

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 3 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		val = prepsint(value, 0x7fffffff, -0x80000000);
		if (val >= 0)
			wgint32(val, endian, buffer, offset);
		else
			wgint32(0xffffffff + val + 1, endian, buffer, offset);
	}

	/*
	 * The signed 64 bit integer should by in the same format as when received.
	 * Mainly it should ensure that the value is an array of two integers where
	 * value[0] << 32 + value[1] is the desired number. Furthermore, the two values
	 * need to be equal.
	 */
	function wsint64(value, endian, buffer, offset)
	{
		var vzpos, vopos;
		var vals = new Array(2);

		if (value === undefined)
			throw (new Error('missing value'));

		if (!(value instanceof Array))
			throw (new Error('value must be an array'));

		if (value.length != 2)
			throw (new Error('value must be an array of length 2'));

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));

		if (offset + 7 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		/*
		 * We need to make sure that we have the same sign on both values. The
		 * hokiest way to to do this is to multiply the number by +inf. If we do
		 * this, we'll get either +/-inf depending on the sign of the value.
		 * Once we have this, we can compare it to +inf to see if the number is
		 * positive or not.
		 */
		vzpos = (value[0] * Number.POSITIVE_INFINITY) ==
		    Number.POSITIVE_INFINITY;
		vopos = (value[1] * Number.POSITIVE_INFINITY) ==
		    Number.POSITIVE_INFINITY;

		/*
		 * If either of these is zero, then we don't actually need this check.
		 */
		if (value[0] != 0 && value[1] != 0 && vzpos != vopos)
			throw (new Error('Both entries in the array must have ' +
			    'the same sign'));

		/*
		 * Doing verification for a signed 64-bit integer is actually a big
		 * trickier than it appears. We can't quite use our standard techniques
		 * because we need to compare both sets of values. The first value is
		 * pretty straightforward. If the first value is beond the extremes than
		 * we error out. However, the valid range of the second value varies
		 * based on the first one. If the first value is negative, and *not* the
		 * largest negative value, than it can be any integer within the range [
		 * 0, 0xffffffff ]. If it is the largest negative number, it must be
		 * zero.
		 *
		 * If the first number is positive, than it doesn't matter what the
		 * value is. We just simply have to make sure we have a valid positive
		 * integer.
		 */
		if (vzpos) {
			prepuint(value[0], 0x7fffffff);
			prepuint(value[1], 0xffffffff);
		} else {
			prepsint(value[0], 0, -0x80000000);
			prepsint(value[1], 0, -0xffffffff);
			if (value[0] == -0x80000000 && value[1] != 0)
				throw (new Error('value smaller than minimum ' +
				    'allowed value'));
		}

		/* Fix negative numbers */
		if (value[0] < 0 || value[1] < 0) {
			vals[0] = 0xffffffff - Math.abs(value[0]);
			vals[1] = 0x100000000 - Math.abs(value[1]);
			if (vals[1] == 0x100000000) {
				vals[1] = 0;
				vals[0]++;
			}
		} else {
			vals[0] = value[0];
			vals[1] = value[1];
		}
		wgint64(vals, endian, buffer, offset);
	}

	/*
	 * Now we are moving onto the weirder of these, the float and double. For this
	 * we're going to just have to do something that's pretty weird. First off, we
	 * have no way to get at the underlying float representation, at least not
	 * easily. But that doesn't mean we can't figure it out, we just have to use our
	 * heads.
	 *
	 * One might propose to use Number.toString(2). Of course, this is not really
	 * that good, because the ECMAScript 262 v3 Standard says the following Section
	 * 15.7.4.2-Number.prototype.toString (radix):
	 *
	 * If radix is an integer from 2 to 36, but not 10, the result is a string, the
	 * choice of which is implementation-dependent.
	 *
	 * Well that doesn't really help us one bit now does it? We could use the
	 * standard base 10 version of the string, but that's just going to create more
	 * errors as we end up trying to convert it back to a binary value. So, really
	 * this just means we have to be non-lazy and parse the structure intelligently.
	 *
	 * First off, we can do the basic checks: NaN, positive and negative infinity.
	 *
	 * Now that those are done we can work backwards to generate the mantissa and
	 * exponent.
	 *
	 * The first thing we need to do is determine the sign bit, easy to do, check
	 * whether the value is less than 0. And convert the number to its absolute
	 * value representation. Next, we need to determine if the value is less than
	 * one or greater than or equal to one and from there determine what power was
	 * used to get there. What follows is now specific to floats, though the general
	 * ideas behind this will hold for doubles as well, but the exact numbers
	 * involved will change.
	 *
	 * Once we have that power we can determine the exponent and the mantissa. Call
	 * the value that has the number of bits to reach the power ebits. In the
	 * general case they have the following values:
	 *
	 *	exponent	127 + ebits
	 *	mantissa	value * 2^(23 - ebits) & 0x7fffff
	 *
	 * In the case where the value of ebits is <= -127 we are now in the case where
	 * we no longer have normalized numbers. In this case the values take on the
	 * following values:
	 *
	 * 	exponent	0
	 *	mantissa	value * 2^149 & 0x7fffff
	 *
	 * Once we have the values for the sign, mantissa, and exponent. We reconstruct
	 * the four bytes as follows:
	 *
	 *	byte0		sign bit and seven most significant bits from the exp
	 *			sign << 7 | (exponent & 0xfe) >>> 1
	 *
	 *	byte1		lsb from the exponent and 7 top bits from the mantissa
	 *			(exponent & 0x01) << 7 | (mantissa & 0x7f0000) >>> 16
	 *
	 *	byte2		bits 8-15 (zero indexing) from mantissa
	 *			mantissa & 0xff00 >> 8
	 *
	 *	byte3		bits 0-7 from mantissa
	 *			mantissa & 0xff
	 *
	 * Once we have this we have to assign them into the buffer in proper endian
	 * order.
	 */

	/*
	 * Compute the log base 2 of the value. Now, someone who remembers basic
	 * properties of logarithms will point out that we could use the change of base
	 * formula for logs, and in fact that would be astute, because that's what we'll
	 * do for now. It feels cleaner, albeit it may be less efficient than just
	 * iterating and dividing by 2. We may want to come back and revisit that some
	 * day.
	 */
	function log2(value)
	{
		return (Math.log(value) / Math.log(2));
	}

	/*
	 * Helper to determine the exponent of the number we're looking at.
	 */
	function intexp(value)
	{
		return (Math.floor(log2(value)));
	}

	/*
	 * Helper to determine the exponent of the fractional part of the value.
	 */
	function fracexp(value)
	{
		return (Math.floor(log2(value)));
	}

	function wfloat(value, endian, buffer, offset)
	{
		var sign, exponent, mantissa, ebits;
		var bytes = [];

		if (value === undefined)
			throw (new Error('missing value'));

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));


		if (offset + 3 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		if (isNaN(value)) {
			sign = 0;
			exponent = 0xff;
			mantissa = 23;
		} else if (value == Number.POSITIVE_INFINITY) {
			sign = 0;
			exponent = 0xff;
			mantissa = 0;
		} else if (value == Number.NEGATIVE_INFINITY) {
			sign = 1;
			exponent = 0xff;
			mantissa = 0;
		} else {
			/* Well we have some work to do */

			/* Thankfully the sign bit is trivial */
			if (value < 0) {
				sign = 1;
				value = Math.abs(value);
			} else {
				sign = 0;
			}

			/* Use the correct function to determine number of bits */
			if (value < 1)
				ebits = fracexp(value);
			else
				ebits = intexp(value);

			/* Time to deal with the issues surrounding normalization */
			if (ebits <= -127) {
				exponent = 0;
				mantissa = (value * Math.pow(2, 149)) & 0x7fffff;
			} else {
				exponent = 127 + ebits;
				mantissa = value * Math.pow(2, 23 - ebits);
				mantissa &= 0x7fffff;
			}
		}

		bytes[0] = sign << 7 | (exponent & 0xfe) >>> 1;
		bytes[1] = (exponent & 0x01) << 7 | (mantissa & 0x7f0000) >>> 16;
		bytes[2] = (mantissa & 0x00ff00) >>> 8;
		bytes[3] = mantissa & 0x0000ff;

		if (endian == 'big') {
			buffer[offset] = bytes[0];
			buffer[offset+1] = bytes[1];
			buffer[offset+2] = bytes[2];
			buffer[offset+3] = bytes[3];
		} else {
			buffer[offset] = bytes[3];
			buffer[offset+1] = bytes[2];
			buffer[offset+2] = bytes[1];
			buffer[offset+3] = bytes[0];
		}
	}

	/*
	 * Now we move onto doubles. Doubles are similar to floats in pretty much all
	 * ways except that the processing isn't quite as straightforward because we
	 * can't always use shifting, i.e. we have > 32 bit values.
	 *
	 * We're going to proceed in an identical fashion to floats and utilize the same
	 * helper functions. All that really is changing are the specific values that we
	 * use to do the calculations. Thus, to review we have to do the following.
	 *
	 * First get the sign bit and convert the value to its absolute value
	 * representation. Next, we determine the number of bits that we used to get to
	 * the value, branching whether the value is greater than or less than 1. Once
	 * we have that value which we will again call ebits, we have to do the
	 * following in the general case:
	 *
	 *	exponent	1023 + ebits
	 *	mantissa	[value * 2^(52 - ebits)] % 2^52
	 *
	 * In the case where the value of ebits <= -1023 we no longer use normalized
	 * numbers, thus like with floats we have to do slightly different processing:
	 *
	 *	exponent	0
	 *	mantissa	[value * 2^1074] % 2^52
	 *
	 * Once we have determined the sign, exponent and mantissa we can construct the
	 * bytes as follows:
	 *
	 *	byte0		sign bit and seven most significant bits form the exp
	 *			sign << 7 | (exponent & 0x7f0) >>> 4
	 *
	 *	byte1		Remaining 4 bits from the exponent and the four most
	 *			significant bits from the mantissa 48-51
	 *			(exponent & 0x00f) << 4 | mantissa >>> 48
	 *
	 *	byte2		Bits 40-47 from the mantissa
	 *			(mantissa >>> 40) & 0xff
	 *
	 *	byte3		Bits 32-39 from the mantissa
	 *			(mantissa >>> 32) & 0xff
	 *
	 *	byte4		Bits 24-31 from the mantissa
	 *			(mantissa >>> 24) & 0xff
	 *
	 *	byte5		Bits 16-23 from the Mantissa
	 *			(mantissa >>> 16) & 0xff
	 *
	 *	byte6		Bits 8-15 from the mantissa
	 *			(mantissa >>> 8) & 0xff
	 *
	 *	byte7		Bits 0-7 from the mantissa
	 *			mantissa & 0xff
	 *
	 * Now we can't quite do the right shifting that we want in bytes 1 - 3, because
	 * we'll have extended too far and we'll lose those values when we try and do
	 * the shift. Instead we have to use an alternate approach. To try and stay out
	 * of floating point, what we'll do is say that mantissa -= bytes[4-7] and then
	 * divide by 2^32. Once we've done that we can use binary arithmetic. Oof,
	 * that's ugly, but it seems to avoid using floating point (just based on how v8
	 * seems to be optimizing for base 2 arithmetic).
	 */
	function wdouble(value, endian, buffer, offset)
	{
		var sign, exponent, mantissa, ebits;
		var bytes = [];

		if (value === undefined)
			throw (new Error('missing value'));

		if (endian === undefined)
			throw (new Error('missing endian'));

		if (buffer === undefined)
			throw (new Error('missing buffer'));

		if (offset === undefined)
			throw (new Error('missing offset'));


		if (offset + 7 >= buffer.length)
			throw (new Error('Trying to read beyond buffer length'));

		if (isNaN(value)) {
			sign = 0;
			exponent = 0x7ff;
			mantissa = 23;
		} else if (value == Number.POSITIVE_INFINITY) {
			sign = 0;
			exponent = 0x7ff;
			mantissa = 0;
		} else if (value == Number.NEGATIVE_INFINITY) {
			sign = 1;
			exponent = 0x7ff;
			mantissa = 0;
		} else {
			/* Well we have some work to do */

			/* Thankfully the sign bit is trivial */
			if (value < 0) {
				sign = 1;
				value = Math.abs(value);
			} else {
				sign = 0;
			}

			/* Use the correct function to determine number of bits */
			if (value < 1)
				ebits = fracexp(value);
			else
				ebits = intexp(value);

			/*
			 * This is a total hack to determine a denormalized value.
			 * Unfortunately, we sometimes do not get a proper value for
			 * ebits, i.e. we lose the values that would get rounded off.
			 *
			 *
			 * The astute observer may wonder why we would be
			 * multiplying by two Math.pows rather than just summing
			 * them. Well, that's to get around a small bug in the
			 * way v8 seems to implement the function. On occasion
			 * doing:
			 *
			 * foo * Math.pow(2, 1023 + 51)
			 *
			 * Causes us to overflow to infinity, where as doing:
			 *
			 * foo * Math.pow(2, 1023) * Math.pow(2, 51)
			 *
			 * Does not cause us to overflow. Go figure.
			 *
			 */
			if (value <= 2.225073858507201e-308 || ebits <= -1023) {
				exponent = 0;
				mantissa = value * Math.pow(2, 1023) * Math.pow(2, 51);
				mantissa %= Math.pow(2, 52);
			} else {
				/*
				 * We might have gotten fucked by our floating point
				 * logarithm magic. This is rather crappy, but that's
				 * our luck. If we just had a log base 2 or access to
				 * the stupid underlying representation this would have
				 * been much easier and we wouldn't have such stupid
				 * kludges or hacks.
				 */
				if (ebits > 1023)
					ebits = 1023;
				exponent = 1023 + ebits;
				mantissa = value * Math.pow(2, -ebits);
				mantissa *= Math.pow(2, 52);
				mantissa %= Math.pow(2, 52);
			}
		}

		/* Fill the bytes in backwards to deal with the size issues */
		bytes[7] = mantissa & 0xff;
		bytes[6] = (mantissa >>> 8) & 0xff;
		bytes[5] = (mantissa >>> 16) & 0xff;
		mantissa = (mantissa - (mantissa & 0xffffff)) / Math.pow(2, 24);
		bytes[4] = mantissa & 0xff;
		bytes[3] = (mantissa >>> 8) & 0xff;
		bytes[2] = (mantissa >>> 16) & 0xff;
		bytes[1] = (exponent & 0x00f) << 4 | mantissa >>> 24;
		bytes[0] = (sign << 7) | (exponent & 0x7f0) >>> 4;

		if (endian == 'big') {
			buffer[offset] = bytes[0];
			buffer[offset+1] = bytes[1];
			buffer[offset+2] = bytes[2];
			buffer[offset+3] = bytes[3];
			buffer[offset+4] = bytes[4];
			buffer[offset+5] = bytes[5];
			buffer[offset+6] = bytes[6];
			buffer[offset+7] = bytes[7];
		} else {
			buffer[offset+7] = bytes[0];
			buffer[offset+6] = bytes[1];
			buffer[offset+5] = bytes[2];
			buffer[offset+4] = bytes[3];
			buffer[offset+3] = bytes[4];
			buffer[offset+2] = bytes[5];
			buffer[offset+1] = bytes[6];
			buffer[offset] = bytes[7];
		}
	}

	/*
	 * Actually export our work above. One might argue that we shouldn't expose
	 * these interfaces and just force people to use the higher level abstractions
	 * around this work. However, unlike say other libraries we've come across, this
	 * interface has several properties: it makes sense, it's simple, and it's
	 * useful.
	 */
	exports.ruint8 = ruint8;
	exports.ruint16 = ruint16;
	exports.ruint32 = ruint32;
	exports.ruint64 = ruint64;
	exports.wuint8 = wuint8;
	exports.wuint16 = wuint16;
	exports.wuint32 = wuint32;
	exports.wuint64 = wuint64;

	exports.rsint8 = rsint8;
	exports.rsint16 = rsint16;
	exports.rsint32 = rsint32;
	exports.rsint64 = rsint64;
	exports.wsint8 = wsint8;
	exports.wsint16 = wsint16;
	exports.wsint32 = wsint32;
	exports.wsint64 = wsint64;

	exports.rfloat = rfloat;
	exports.rdouble = rdouble;
	exports.wfloat = wfloat;
	exports.wdouble = wdouble;


/***/ },
/* 585 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * mime-types
	 * Copyright(c) 2014 Jonathan Ong
	 * Copyright(c) 2015 Douglas Christopher Wilson
	 * MIT Licensed
	 */

	'use strict'

	/**
	 * Module dependencies.
	 * @private
	 */

	var db = __webpack_require__(586)
	var extname = __webpack_require__(12).extname

	/**
	 * Module variables.
	 * @private
	 */

	var extractTypeRegExp = /^\s*([^;\s]*)(?:;|\s|$)/
	var textTypeRegExp = /^text\//i

	/**
	 * Module exports.
	 * @public
	 */

	exports.charset = charset
	exports.charsets = { lookup: charset }
	exports.contentType = contentType
	exports.extension = extension
	exports.extensions = Object.create(null)
	exports.lookup = lookup
	exports.types = Object.create(null)

	// Populate the extensions/types maps
	populateMaps(exports.extensions, exports.types)

	/**
	 * Get the default charset for a MIME type.
	 *
	 * @param {string} type
	 * @return {boolean|string}
	 */

	function charset(type) {
	  if (!type || typeof type !== 'string') {
	    return false
	  }

	  // TODO: use media-typer
	  var match = extractTypeRegExp.exec(type)
	  var mime = match && db[match[1].toLowerCase()]

	  if (mime && mime.charset) {
	    return mime.charset
	  }

	  // default text/* to utf-8
	  if (match && textTypeRegExp.test(match[1])) {
	    return 'UTF-8'
	  }

	  return false
	}

	/**
	 * Create a full Content-Type header given a MIME type or extension.
	 *
	 * @param {string} str
	 * @return {boolean|string}
	 */

	function contentType(str) {
	  // TODO: should this even be in this module?
	  if (!str || typeof str !== 'string') {
	    return false
	  }

	  var mime = str.indexOf('/') === -1
	    ? exports.lookup(str)
	    : str

	  if (!mime) {
	    return false
	  }

	  // TODO: use content-type or other module
	  if (mime.indexOf('charset') === -1) {
	    var charset = exports.charset(mime)
	    if (charset) mime += '; charset=' + charset.toLowerCase()
	  }

	  return mime
	}

	/**
	 * Get the default extension for a MIME type.
	 *
	 * @param {string} type
	 * @return {boolean|string}
	 */

	function extension(type) {
	  if (!type || typeof type !== 'string') {
	    return false
	  }

	  // TODO: use media-typer
	  var match = extractTypeRegExp.exec(type)

	  // get extensions
	  var exts = match && exports.extensions[match[1].toLowerCase()]

	  if (!exts || !exts.length) {
	    return false
	  }

	  return exts[0]
	}

	/**
	 * Lookup the MIME type for a file path/extension.
	 *
	 * @param {string} path
	 * @return {boolean|string}
	 */

	function lookup(path) {
	  if (!path || typeof path !== 'string') {
	    return false
	  }

	  // get the extension ("ext" or ".ext" or full path)
	  var extension = extname('x.' + path)
	    .toLowerCase()
	    .substr(1)

	  if (!extension) {
	    return false
	  }

	  return exports.types[extension] || false
	}

	/**
	 * Populate the extensions and types maps.
	 * @private
	 */

	function populateMaps(extensions, types) {
	  // source preference (least -> most)
	  var preference = ['nginx', 'apache', undefined, 'iana']

	  Object.keys(db).forEach(function forEachMimeType(type) {
	    var mime = db[type]
	    var exts = mime.extensions

	    if (!exts || !exts.length) {
	      return
	    }

	    // mime -> extensions
	    extensions[type] = exts

	    // extension -> mime
	    for (var i = 0; i < exts.length; i++) {
	      var extension = exts[i]

	      if (types[extension]) {
	        var from = preference.indexOf(db[types[extension]].source)
	        var to = preference.indexOf(mime.source)

	        if (types[extension] !== 'application/octet-stream'
	          && from > to || (from === to && types[extension].substr(0, 12) === 'application/')) {
	          // skip the remapping
	          continue
	        }
	      }

	      // set the extension -> mime
	      types[extension] = type
	    }
	  })
	}


/***/ },
/* 586 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * mime-db
	 * Copyright(c) 2014 Jonathan Ong
	 * MIT Licensed
	 */

	/**
	 * Module exports.
	 */

	module.exports = __webpack_require__(587)


/***/ },
/* 587 */
/***/ function(module, exports) {

	module.exports = {
		"application/1d-interleaved-parityfec": {
			"source": "iana"
		},
		"application/3gpdash-qoe-report+xml": {
			"source": "iana"
		},
		"application/3gpp-ims+xml": {
			"source": "iana"
		},
		"application/a2l": {
			"source": "iana"
		},
		"application/activemessage": {
			"source": "iana"
		},
		"application/alto-costmap+json": {
			"source": "iana",
			"compressible": true
		},
		"application/alto-costmapfilter+json": {
			"source": "iana",
			"compressible": true
		},
		"application/alto-directory+json": {
			"source": "iana",
			"compressible": true
		},
		"application/alto-endpointcost+json": {
			"source": "iana",
			"compressible": true
		},
		"application/alto-endpointcostparams+json": {
			"source": "iana",
			"compressible": true
		},
		"application/alto-endpointprop+json": {
			"source": "iana",
			"compressible": true
		},
		"application/alto-endpointpropparams+json": {
			"source": "iana",
			"compressible": true
		},
		"application/alto-error+json": {
			"source": "iana",
			"compressible": true
		},
		"application/alto-networkmap+json": {
			"source": "iana",
			"compressible": true
		},
		"application/alto-networkmapfilter+json": {
			"source": "iana",
			"compressible": true
		},
		"application/aml": {
			"source": "iana"
		},
		"application/andrew-inset": {
			"source": "iana",
			"extensions": [
				"ez"
			]
		},
		"application/applefile": {
			"source": "iana"
		},
		"application/applixware": {
			"source": "apache",
			"extensions": [
				"aw"
			]
		},
		"application/atf": {
			"source": "iana"
		},
		"application/atfx": {
			"source": "iana"
		},
		"application/atom+xml": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"atom"
			]
		},
		"application/atomcat+xml": {
			"source": "iana",
			"extensions": [
				"atomcat"
			]
		},
		"application/atomdeleted+xml": {
			"source": "iana"
		},
		"application/atomicmail": {
			"source": "iana"
		},
		"application/atomsvc+xml": {
			"source": "iana",
			"extensions": [
				"atomsvc"
			]
		},
		"application/atxml": {
			"source": "iana"
		},
		"application/auth-policy+xml": {
			"source": "iana"
		},
		"application/bacnet-xdd+zip": {
			"source": "iana"
		},
		"application/batch-smtp": {
			"source": "iana"
		},
		"application/bdoc": {
			"compressible": false,
			"extensions": [
				"bdoc"
			]
		},
		"application/beep+xml": {
			"source": "iana"
		},
		"application/calendar+json": {
			"source": "iana",
			"compressible": true
		},
		"application/calendar+xml": {
			"source": "iana"
		},
		"application/call-completion": {
			"source": "iana"
		},
		"application/cals-1840": {
			"source": "iana"
		},
		"application/cbor": {
			"source": "iana"
		},
		"application/ccmp+xml": {
			"source": "iana"
		},
		"application/ccxml+xml": {
			"source": "iana",
			"extensions": [
				"ccxml"
			]
		},
		"application/cdfx+xml": {
			"source": "iana"
		},
		"application/cdmi-capability": {
			"source": "iana",
			"extensions": [
				"cdmia"
			]
		},
		"application/cdmi-container": {
			"source": "iana",
			"extensions": [
				"cdmic"
			]
		},
		"application/cdmi-domain": {
			"source": "iana",
			"extensions": [
				"cdmid"
			]
		},
		"application/cdmi-object": {
			"source": "iana",
			"extensions": [
				"cdmio"
			]
		},
		"application/cdmi-queue": {
			"source": "iana",
			"extensions": [
				"cdmiq"
			]
		},
		"application/cea": {
			"source": "iana"
		},
		"application/cea-2018+xml": {
			"source": "iana"
		},
		"application/cellml+xml": {
			"source": "iana"
		},
		"application/cfw": {
			"source": "iana"
		},
		"application/cms": {
			"source": "iana"
		},
		"application/cnrp+xml": {
			"source": "iana"
		},
		"application/coap-group+json": {
			"source": "iana",
			"compressible": true
		},
		"application/commonground": {
			"source": "iana"
		},
		"application/conference-info+xml": {
			"source": "iana"
		},
		"application/cpl+xml": {
			"source": "iana"
		},
		"application/csrattrs": {
			"source": "iana"
		},
		"application/csta+xml": {
			"source": "iana"
		},
		"application/cstadata+xml": {
			"source": "iana"
		},
		"application/cu-seeme": {
			"source": "apache",
			"extensions": [
				"cu"
			]
		},
		"application/cybercash": {
			"source": "iana"
		},
		"application/dart": {
			"compressible": true
		},
		"application/dash+xml": {
			"source": "iana",
			"extensions": [
				"mdp"
			]
		},
		"application/dashdelta": {
			"source": "iana"
		},
		"application/davmount+xml": {
			"source": "iana",
			"extensions": [
				"davmount"
			]
		},
		"application/dca-rft": {
			"source": "iana"
		},
		"application/dcd": {
			"source": "iana"
		},
		"application/dec-dx": {
			"source": "iana"
		},
		"application/dialog-info+xml": {
			"source": "iana"
		},
		"application/dicom": {
			"source": "iana"
		},
		"application/dii": {
			"source": "iana"
		},
		"application/dit": {
			"source": "iana"
		},
		"application/dns": {
			"source": "iana"
		},
		"application/docbook+xml": {
			"source": "apache",
			"extensions": [
				"dbk"
			]
		},
		"application/dskpp+xml": {
			"source": "iana"
		},
		"application/dssc+der": {
			"source": "iana",
			"extensions": [
				"dssc"
			]
		},
		"application/dssc+xml": {
			"source": "iana",
			"extensions": [
				"xdssc"
			]
		},
		"application/dvcs": {
			"source": "iana"
		},
		"application/ecmascript": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"ecma"
			]
		},
		"application/edi-consent": {
			"source": "iana"
		},
		"application/edi-x12": {
			"source": "iana",
			"compressible": false
		},
		"application/edifact": {
			"source": "iana",
			"compressible": false
		},
		"application/emma+xml": {
			"source": "iana",
			"extensions": [
				"emma"
			]
		},
		"application/emotionml+xml": {
			"source": "iana"
		},
		"application/encaprtp": {
			"source": "iana"
		},
		"application/epp+xml": {
			"source": "iana"
		},
		"application/epub+zip": {
			"source": "iana",
			"extensions": [
				"epub"
			]
		},
		"application/eshop": {
			"source": "iana"
		},
		"application/exi": {
			"source": "iana",
			"extensions": [
				"exi"
			]
		},
		"application/fastinfoset": {
			"source": "iana"
		},
		"application/fastsoap": {
			"source": "iana"
		},
		"application/fdt+xml": {
			"source": "iana"
		},
		"application/fits": {
			"source": "iana"
		},
		"application/font-sfnt": {
			"source": "iana"
		},
		"application/font-tdpfr": {
			"source": "iana",
			"extensions": [
				"pfr"
			]
		},
		"application/font-woff": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"woff"
			]
		},
		"application/font-woff2": {
			"compressible": false,
			"extensions": [
				"woff2"
			]
		},
		"application/framework-attributes+xml": {
			"source": "iana"
		},
		"application/gml+xml": {
			"source": "apache",
			"extensions": [
				"gml"
			]
		},
		"application/gpx+xml": {
			"source": "apache",
			"extensions": [
				"gpx"
			]
		},
		"application/gxf": {
			"source": "apache",
			"extensions": [
				"gxf"
			]
		},
		"application/gzip": {
			"source": "iana",
			"compressible": false
		},
		"application/h224": {
			"source": "iana"
		},
		"application/held+xml": {
			"source": "iana"
		},
		"application/http": {
			"source": "iana"
		},
		"application/hyperstudio": {
			"source": "iana",
			"extensions": [
				"stk"
			]
		},
		"application/ibe-key-request+xml": {
			"source": "iana"
		},
		"application/ibe-pkg-reply+xml": {
			"source": "iana"
		},
		"application/ibe-pp-data": {
			"source": "iana"
		},
		"application/iges": {
			"source": "iana"
		},
		"application/im-iscomposing+xml": {
			"source": "iana"
		},
		"application/index": {
			"source": "iana"
		},
		"application/index.cmd": {
			"source": "iana"
		},
		"application/index.obj": {
			"source": "iana"
		},
		"application/index.response": {
			"source": "iana"
		},
		"application/index.vnd": {
			"source": "iana"
		},
		"application/inkml+xml": {
			"source": "iana",
			"extensions": [
				"ink",
				"inkml"
			]
		},
		"application/iotp": {
			"source": "iana"
		},
		"application/ipfix": {
			"source": "iana",
			"extensions": [
				"ipfix"
			]
		},
		"application/ipp": {
			"source": "iana"
		},
		"application/isup": {
			"source": "iana"
		},
		"application/its+xml": {
			"source": "iana"
		},
		"application/java-archive": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"jar",
				"war",
				"ear"
			]
		},
		"application/java-serialized-object": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"ser"
			]
		},
		"application/java-vm": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"class"
			]
		},
		"application/javascript": {
			"source": "iana",
			"charset": "UTF-8",
			"compressible": true,
			"extensions": [
				"js"
			]
		},
		"application/jose": {
			"source": "iana"
		},
		"application/jose+json": {
			"source": "iana",
			"compressible": true
		},
		"application/jrd+json": {
			"source": "iana",
			"compressible": true
		},
		"application/json": {
			"source": "iana",
			"charset": "UTF-8",
			"compressible": true,
			"extensions": [
				"json",
				"map"
			]
		},
		"application/json-patch+json": {
			"source": "iana",
			"compressible": true
		},
		"application/json-seq": {
			"source": "iana"
		},
		"application/json5": {
			"extensions": [
				"json5"
			]
		},
		"application/jsonml+json": {
			"source": "apache",
			"compressible": true,
			"extensions": [
				"jsonml"
			]
		},
		"application/jwk+json": {
			"source": "iana",
			"compressible": true
		},
		"application/jwk-set+json": {
			"source": "iana",
			"compressible": true
		},
		"application/jwt": {
			"source": "iana"
		},
		"application/kpml-request+xml": {
			"source": "iana"
		},
		"application/kpml-response+xml": {
			"source": "iana"
		},
		"application/ld+json": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"jsonld"
			]
		},
		"application/link-format": {
			"source": "iana"
		},
		"application/load-control+xml": {
			"source": "iana"
		},
		"application/lost+xml": {
			"source": "iana",
			"extensions": [
				"lostxml"
			]
		},
		"application/lostsync+xml": {
			"source": "iana"
		},
		"application/lxf": {
			"source": "iana"
		},
		"application/mac-binhex40": {
			"source": "iana",
			"extensions": [
				"hqx"
			]
		},
		"application/mac-compactpro": {
			"source": "apache",
			"extensions": [
				"cpt"
			]
		},
		"application/macwriteii": {
			"source": "iana"
		},
		"application/mads+xml": {
			"source": "iana",
			"extensions": [
				"mads"
			]
		},
		"application/manifest+json": {
			"charset": "UTF-8",
			"compressible": true,
			"extensions": [
				"webmanifest"
			]
		},
		"application/marc": {
			"source": "iana",
			"extensions": [
				"mrc"
			]
		},
		"application/marcxml+xml": {
			"source": "iana",
			"extensions": [
				"mrcx"
			]
		},
		"application/mathematica": {
			"source": "iana",
			"extensions": [
				"ma",
				"nb",
				"mb"
			]
		},
		"application/mathml+xml": {
			"source": "iana",
			"extensions": [
				"mathml"
			]
		},
		"application/mathml-content+xml": {
			"source": "iana"
		},
		"application/mathml-presentation+xml": {
			"source": "iana"
		},
		"application/mbms-associated-procedure-description+xml": {
			"source": "iana"
		},
		"application/mbms-deregister+xml": {
			"source": "iana"
		},
		"application/mbms-envelope+xml": {
			"source": "iana"
		},
		"application/mbms-msk+xml": {
			"source": "iana"
		},
		"application/mbms-msk-response+xml": {
			"source": "iana"
		},
		"application/mbms-protection-description+xml": {
			"source": "iana"
		},
		"application/mbms-reception-report+xml": {
			"source": "iana"
		},
		"application/mbms-register+xml": {
			"source": "iana"
		},
		"application/mbms-register-response+xml": {
			"source": "iana"
		},
		"application/mbms-schedule+xml": {
			"source": "iana"
		},
		"application/mbms-user-service-description+xml": {
			"source": "iana"
		},
		"application/mbox": {
			"source": "iana",
			"extensions": [
				"mbox"
			]
		},
		"application/media-policy-dataset+xml": {
			"source": "iana"
		},
		"application/media_control+xml": {
			"source": "iana"
		},
		"application/mediaservercontrol+xml": {
			"source": "iana",
			"extensions": [
				"mscml"
			]
		},
		"application/merge-patch+json": {
			"source": "iana",
			"compressible": true
		},
		"application/metalink+xml": {
			"source": "apache",
			"extensions": [
				"metalink"
			]
		},
		"application/metalink4+xml": {
			"source": "iana",
			"extensions": [
				"meta4"
			]
		},
		"application/mets+xml": {
			"source": "iana",
			"extensions": [
				"mets"
			]
		},
		"application/mf4": {
			"source": "iana"
		},
		"application/mikey": {
			"source": "iana"
		},
		"application/mods+xml": {
			"source": "iana",
			"extensions": [
				"mods"
			]
		},
		"application/moss-keys": {
			"source": "iana"
		},
		"application/moss-signature": {
			"source": "iana"
		},
		"application/mosskey-data": {
			"source": "iana"
		},
		"application/mosskey-request": {
			"source": "iana"
		},
		"application/mp21": {
			"source": "iana",
			"extensions": [
				"m21",
				"mp21"
			]
		},
		"application/mp4": {
			"source": "iana",
			"extensions": [
				"mp4s",
				"m4p"
			]
		},
		"application/mpeg4-generic": {
			"source": "iana"
		},
		"application/mpeg4-iod": {
			"source": "iana"
		},
		"application/mpeg4-iod-xmt": {
			"source": "iana"
		},
		"application/mrb-consumer+xml": {
			"source": "iana"
		},
		"application/mrb-publish+xml": {
			"source": "iana"
		},
		"application/msc-ivr+xml": {
			"source": "iana"
		},
		"application/msc-mixer+xml": {
			"source": "iana"
		},
		"application/msword": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"doc",
				"dot"
			]
		},
		"application/mxf": {
			"source": "iana",
			"extensions": [
				"mxf"
			]
		},
		"application/nasdata": {
			"source": "iana"
		},
		"application/news-checkgroups": {
			"source": "iana"
		},
		"application/news-groupinfo": {
			"source": "iana"
		},
		"application/news-transmission": {
			"source": "iana"
		},
		"application/nlsml+xml": {
			"source": "iana"
		},
		"application/nss": {
			"source": "iana"
		},
		"application/ocsp-request": {
			"source": "iana"
		},
		"application/ocsp-response": {
			"source": "iana"
		},
		"application/octet-stream": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"bin",
				"dms",
				"lrf",
				"mar",
				"so",
				"dist",
				"distz",
				"pkg",
				"bpk",
				"dump",
				"elc",
				"deploy",
				"exe",
				"dll",
				"deb",
				"dmg",
				"iso",
				"img",
				"msi",
				"msp",
				"msm",
				"buffer"
			]
		},
		"application/oda": {
			"source": "iana",
			"extensions": [
				"oda"
			]
		},
		"application/odx": {
			"source": "iana"
		},
		"application/oebps-package+xml": {
			"source": "iana",
			"extensions": [
				"opf"
			]
		},
		"application/ogg": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"ogx"
			]
		},
		"application/omdoc+xml": {
			"source": "apache",
			"extensions": [
				"omdoc"
			]
		},
		"application/onenote": {
			"source": "apache",
			"extensions": [
				"onetoc",
				"onetoc2",
				"onetmp",
				"onepkg"
			]
		},
		"application/oxps": {
			"source": "iana",
			"extensions": [
				"oxps"
			]
		},
		"application/p2p-overlay+xml": {
			"source": "iana"
		},
		"application/parityfec": {
			"source": "iana"
		},
		"application/patch-ops-error+xml": {
			"source": "iana",
			"extensions": [
				"xer"
			]
		},
		"application/pdf": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"pdf"
			]
		},
		"application/pdx": {
			"source": "iana"
		},
		"application/pgp-encrypted": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"pgp"
			]
		},
		"application/pgp-keys": {
			"source": "iana"
		},
		"application/pgp-signature": {
			"source": "iana",
			"extensions": [
				"asc",
				"sig"
			]
		},
		"application/pics-rules": {
			"source": "apache",
			"extensions": [
				"prf"
			]
		},
		"application/pidf+xml": {
			"source": "iana"
		},
		"application/pidf-diff+xml": {
			"source": "iana"
		},
		"application/pkcs10": {
			"source": "iana",
			"extensions": [
				"p10"
			]
		},
		"application/pkcs7-mime": {
			"source": "iana",
			"extensions": [
				"p7m",
				"p7c"
			]
		},
		"application/pkcs7-signature": {
			"source": "iana",
			"extensions": [
				"p7s"
			]
		},
		"application/pkcs8": {
			"source": "iana",
			"extensions": [
				"p8"
			]
		},
		"application/pkix-attr-cert": {
			"source": "iana",
			"extensions": [
				"ac"
			]
		},
		"application/pkix-cert": {
			"source": "iana",
			"extensions": [
				"cer"
			]
		},
		"application/pkix-crl": {
			"source": "iana",
			"extensions": [
				"crl"
			]
		},
		"application/pkix-pkipath": {
			"source": "iana",
			"extensions": [
				"pkipath"
			]
		},
		"application/pkixcmp": {
			"source": "iana",
			"extensions": [
				"pki"
			]
		},
		"application/pls+xml": {
			"source": "iana",
			"extensions": [
				"pls"
			]
		},
		"application/poc-settings+xml": {
			"source": "iana"
		},
		"application/postscript": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"ai",
				"eps",
				"ps"
			]
		},
		"application/provenance+xml": {
			"source": "iana"
		},
		"application/prs.alvestrand.titrax-sheet": {
			"source": "iana"
		},
		"application/prs.cww": {
			"source": "iana",
			"extensions": [
				"cww"
			]
		},
		"application/prs.hpub+zip": {
			"source": "iana"
		},
		"application/prs.nprend": {
			"source": "iana"
		},
		"application/prs.plucker": {
			"source": "iana"
		},
		"application/prs.rdf-xml-crypt": {
			"source": "iana"
		},
		"application/prs.xsf+xml": {
			"source": "iana"
		},
		"application/pskc+xml": {
			"source": "iana",
			"extensions": [
				"pskcxml"
			]
		},
		"application/qsig": {
			"source": "iana"
		},
		"application/raptorfec": {
			"source": "iana"
		},
		"application/rdap+json": {
			"source": "iana",
			"compressible": true
		},
		"application/rdf+xml": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"rdf"
			]
		},
		"application/reginfo+xml": {
			"source": "iana",
			"extensions": [
				"rif"
			]
		},
		"application/relax-ng-compact-syntax": {
			"source": "iana",
			"extensions": [
				"rnc"
			]
		},
		"application/remote-printing": {
			"source": "iana"
		},
		"application/reputon+json": {
			"source": "iana",
			"compressible": true
		},
		"application/resource-lists+xml": {
			"source": "iana",
			"extensions": [
				"rl"
			]
		},
		"application/resource-lists-diff+xml": {
			"source": "iana",
			"extensions": [
				"rld"
			]
		},
		"application/riscos": {
			"source": "iana"
		},
		"application/rlmi+xml": {
			"source": "iana"
		},
		"application/rls-services+xml": {
			"source": "iana",
			"extensions": [
				"rs"
			]
		},
		"application/rpki-ghostbusters": {
			"source": "iana",
			"extensions": [
				"gbr"
			]
		},
		"application/rpki-manifest": {
			"source": "iana",
			"extensions": [
				"mft"
			]
		},
		"application/rpki-roa": {
			"source": "iana",
			"extensions": [
				"roa"
			]
		},
		"application/rpki-updown": {
			"source": "iana"
		},
		"application/rsd+xml": {
			"source": "apache",
			"extensions": [
				"rsd"
			]
		},
		"application/rss+xml": {
			"source": "apache",
			"compressible": true,
			"extensions": [
				"rss"
			]
		},
		"application/rtf": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"rtf"
			]
		},
		"application/rtploopback": {
			"source": "iana"
		},
		"application/rtx": {
			"source": "iana"
		},
		"application/samlassertion+xml": {
			"source": "iana"
		},
		"application/samlmetadata+xml": {
			"source": "iana"
		},
		"application/sbml+xml": {
			"source": "iana",
			"extensions": [
				"sbml"
			]
		},
		"application/scaip+xml": {
			"source": "iana"
		},
		"application/scim+json": {
			"source": "iana",
			"compressible": true
		},
		"application/scvp-cv-request": {
			"source": "iana",
			"extensions": [
				"scq"
			]
		},
		"application/scvp-cv-response": {
			"source": "iana",
			"extensions": [
				"scs"
			]
		},
		"application/scvp-vp-request": {
			"source": "iana",
			"extensions": [
				"spq"
			]
		},
		"application/scvp-vp-response": {
			"source": "iana",
			"extensions": [
				"spp"
			]
		},
		"application/sdp": {
			"source": "iana",
			"extensions": [
				"sdp"
			]
		},
		"application/sep+xml": {
			"source": "iana"
		},
		"application/sep-exi": {
			"source": "iana"
		},
		"application/session-info": {
			"source": "iana"
		},
		"application/set-payment": {
			"source": "iana"
		},
		"application/set-payment-initiation": {
			"source": "iana",
			"extensions": [
				"setpay"
			]
		},
		"application/set-registration": {
			"source": "iana"
		},
		"application/set-registration-initiation": {
			"source": "iana",
			"extensions": [
				"setreg"
			]
		},
		"application/sgml": {
			"source": "iana"
		},
		"application/sgml-open-catalog": {
			"source": "iana"
		},
		"application/shf+xml": {
			"source": "iana",
			"extensions": [
				"shf"
			]
		},
		"application/sieve": {
			"source": "iana"
		},
		"application/simple-filter+xml": {
			"source": "iana"
		},
		"application/simple-message-summary": {
			"source": "iana"
		},
		"application/simplesymbolcontainer": {
			"source": "iana"
		},
		"application/slate": {
			"source": "iana"
		},
		"application/smil": {
			"source": "iana"
		},
		"application/smil+xml": {
			"source": "iana",
			"extensions": [
				"smi",
				"smil"
			]
		},
		"application/smpte336m": {
			"source": "iana"
		},
		"application/soap+fastinfoset": {
			"source": "iana"
		},
		"application/soap+xml": {
			"source": "iana",
			"compressible": true
		},
		"application/sparql-query": {
			"source": "iana",
			"extensions": [
				"rq"
			]
		},
		"application/sparql-results+xml": {
			"source": "iana",
			"extensions": [
				"srx"
			]
		},
		"application/spirits-event+xml": {
			"source": "iana"
		},
		"application/sql": {
			"source": "iana"
		},
		"application/srgs": {
			"source": "iana",
			"extensions": [
				"gram"
			]
		},
		"application/srgs+xml": {
			"source": "iana",
			"extensions": [
				"grxml"
			]
		},
		"application/sru+xml": {
			"source": "iana",
			"extensions": [
				"sru"
			]
		},
		"application/ssdl+xml": {
			"source": "apache",
			"extensions": [
				"ssdl"
			]
		},
		"application/ssml+xml": {
			"source": "iana",
			"extensions": [
				"ssml"
			]
		},
		"application/tamp-apex-update": {
			"source": "iana"
		},
		"application/tamp-apex-update-confirm": {
			"source": "iana"
		},
		"application/tamp-community-update": {
			"source": "iana"
		},
		"application/tamp-community-update-confirm": {
			"source": "iana"
		},
		"application/tamp-error": {
			"source": "iana"
		},
		"application/tamp-sequence-adjust": {
			"source": "iana"
		},
		"application/tamp-sequence-adjust-confirm": {
			"source": "iana"
		},
		"application/tamp-status-query": {
			"source": "iana"
		},
		"application/tamp-status-response": {
			"source": "iana"
		},
		"application/tamp-update": {
			"source": "iana"
		},
		"application/tamp-update-confirm": {
			"source": "iana"
		},
		"application/tar": {
			"compressible": true
		},
		"application/tei+xml": {
			"source": "iana",
			"extensions": [
				"tei",
				"teicorpus"
			]
		},
		"application/thraud+xml": {
			"source": "iana",
			"extensions": [
				"tfi"
			]
		},
		"application/timestamp-query": {
			"source": "iana"
		},
		"application/timestamp-reply": {
			"source": "iana"
		},
		"application/timestamped-data": {
			"source": "iana",
			"extensions": [
				"tsd"
			]
		},
		"application/ttml+xml": {
			"source": "iana"
		},
		"application/tve-trigger": {
			"source": "iana"
		},
		"application/ulpfec": {
			"source": "iana"
		},
		"application/urc-grpsheet+xml": {
			"source": "iana"
		},
		"application/urc-ressheet+xml": {
			"source": "iana"
		},
		"application/urc-targetdesc+xml": {
			"source": "iana"
		},
		"application/urc-uisocketdesc+xml": {
			"source": "iana"
		},
		"application/vcard+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vcard+xml": {
			"source": "iana"
		},
		"application/vemmi": {
			"source": "iana"
		},
		"application/vividence.scriptfile": {
			"source": "apache"
		},
		"application/vnd.3gpp.bsf+xml": {
			"source": "iana"
		},
		"application/vnd.3gpp.pic-bw-large": {
			"source": "iana",
			"extensions": [
				"plb"
			]
		},
		"application/vnd.3gpp.pic-bw-small": {
			"source": "iana",
			"extensions": [
				"psb"
			]
		},
		"application/vnd.3gpp.pic-bw-var": {
			"source": "iana",
			"extensions": [
				"pvb"
			]
		},
		"application/vnd.3gpp.sms": {
			"source": "iana"
		},
		"application/vnd.3gpp.ussd+xml": {
			"source": "iana"
		},
		"application/vnd.3gpp2.bcmcsinfo+xml": {
			"source": "iana"
		},
		"application/vnd.3gpp2.sms": {
			"source": "iana"
		},
		"application/vnd.3gpp2.tcap": {
			"source": "iana",
			"extensions": [
				"tcap"
			]
		},
		"application/vnd.3m.post-it-notes": {
			"source": "iana",
			"extensions": [
				"pwn"
			]
		},
		"application/vnd.accpac.simply.aso": {
			"source": "iana",
			"extensions": [
				"aso"
			]
		},
		"application/vnd.accpac.simply.imp": {
			"source": "iana",
			"extensions": [
				"imp"
			]
		},
		"application/vnd.acucobol": {
			"source": "iana",
			"extensions": [
				"acu"
			]
		},
		"application/vnd.acucorp": {
			"source": "iana",
			"extensions": [
				"atc",
				"acutc"
			]
		},
		"application/vnd.adobe.air-application-installer-package+zip": {
			"source": "apache",
			"extensions": [
				"air"
			]
		},
		"application/vnd.adobe.flash.movie": {
			"source": "iana"
		},
		"application/vnd.adobe.formscentral.fcdt": {
			"source": "iana",
			"extensions": [
				"fcdt"
			]
		},
		"application/vnd.adobe.fxp": {
			"source": "iana",
			"extensions": [
				"fxp",
				"fxpl"
			]
		},
		"application/vnd.adobe.partial-upload": {
			"source": "iana"
		},
		"application/vnd.adobe.xdp+xml": {
			"source": "iana",
			"extensions": [
				"xdp"
			]
		},
		"application/vnd.adobe.xfdf": {
			"source": "iana",
			"extensions": [
				"xfdf"
			]
		},
		"application/vnd.aether.imp": {
			"source": "iana"
		},
		"application/vnd.ah-barcode": {
			"source": "iana"
		},
		"application/vnd.ahead.space": {
			"source": "iana",
			"extensions": [
				"ahead"
			]
		},
		"application/vnd.airzip.filesecure.azf": {
			"source": "iana",
			"extensions": [
				"azf"
			]
		},
		"application/vnd.airzip.filesecure.azs": {
			"source": "iana",
			"extensions": [
				"azs"
			]
		},
		"application/vnd.amazon.ebook": {
			"source": "apache",
			"extensions": [
				"azw"
			]
		},
		"application/vnd.americandynamics.acc": {
			"source": "iana",
			"extensions": [
				"acc"
			]
		},
		"application/vnd.amiga.ami": {
			"source": "iana",
			"extensions": [
				"ami"
			]
		},
		"application/vnd.amundsen.maze+xml": {
			"source": "iana"
		},
		"application/vnd.android.package-archive": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"apk"
			]
		},
		"application/vnd.anser-web-certificate-issue-initiation": {
			"source": "iana",
			"extensions": [
				"cii"
			]
		},
		"application/vnd.anser-web-funds-transfer-initiation": {
			"source": "apache",
			"extensions": [
				"fti"
			]
		},
		"application/vnd.antix.game-component": {
			"source": "iana",
			"extensions": [
				"atx"
			]
		},
		"application/vnd.apache.thrift.binary": {
			"source": "iana"
		},
		"application/vnd.apache.thrift.compact": {
			"source": "iana"
		},
		"application/vnd.apache.thrift.json": {
			"source": "iana"
		},
		"application/vnd.api+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.apple.installer+xml": {
			"source": "iana",
			"extensions": [
				"mpkg"
			]
		},
		"application/vnd.apple.mpegurl": {
			"source": "iana",
			"extensions": [
				"m3u8"
			]
		},
		"application/vnd.arastra.swi": {
			"source": "iana"
		},
		"application/vnd.aristanetworks.swi": {
			"source": "iana",
			"extensions": [
				"swi"
			]
		},
		"application/vnd.artsquare": {
			"source": "iana"
		},
		"application/vnd.astraea-software.iota": {
			"source": "iana",
			"extensions": [
				"iota"
			]
		},
		"application/vnd.audiograph": {
			"source": "iana",
			"extensions": [
				"aep"
			]
		},
		"application/vnd.autopackage": {
			"source": "iana"
		},
		"application/vnd.avistar+xml": {
			"source": "iana"
		},
		"application/vnd.balsamiq.bmml+xml": {
			"source": "iana"
		},
		"application/vnd.balsamiq.bmpr": {
			"source": "iana"
		},
		"application/vnd.bekitzur-stech+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.biopax.rdf+xml": {
			"source": "iana"
		},
		"application/vnd.blueice.multipass": {
			"source": "iana",
			"extensions": [
				"mpm"
			]
		},
		"application/vnd.bluetooth.ep.oob": {
			"source": "iana"
		},
		"application/vnd.bluetooth.le.oob": {
			"source": "iana"
		},
		"application/vnd.bmi": {
			"source": "iana",
			"extensions": [
				"bmi"
			]
		},
		"application/vnd.businessobjects": {
			"source": "iana",
			"extensions": [
				"rep"
			]
		},
		"application/vnd.cab-jscript": {
			"source": "iana"
		},
		"application/vnd.canon-cpdl": {
			"source": "iana"
		},
		"application/vnd.canon-lips": {
			"source": "iana"
		},
		"application/vnd.cendio.thinlinc.clientconf": {
			"source": "iana"
		},
		"application/vnd.century-systems.tcp_stream": {
			"source": "iana"
		},
		"application/vnd.chemdraw+xml": {
			"source": "iana",
			"extensions": [
				"cdxml"
			]
		},
		"application/vnd.chipnuts.karaoke-mmd": {
			"source": "iana",
			"extensions": [
				"mmd"
			]
		},
		"application/vnd.cinderella": {
			"source": "iana",
			"extensions": [
				"cdy"
			]
		},
		"application/vnd.cirpack.isdn-ext": {
			"source": "iana"
		},
		"application/vnd.citationstyles.style+xml": {
			"source": "iana"
		},
		"application/vnd.claymore": {
			"source": "iana",
			"extensions": [
				"cla"
			]
		},
		"application/vnd.cloanto.rp9": {
			"source": "iana",
			"extensions": [
				"rp9"
			]
		},
		"application/vnd.clonk.c4group": {
			"source": "iana",
			"extensions": [
				"c4g",
				"c4d",
				"c4f",
				"c4p",
				"c4u"
			]
		},
		"application/vnd.cluetrust.cartomobile-config": {
			"source": "iana",
			"extensions": [
				"c11amc"
			]
		},
		"application/vnd.cluetrust.cartomobile-config-pkg": {
			"source": "iana",
			"extensions": [
				"c11amz"
			]
		},
		"application/vnd.coffeescript": {
			"source": "iana"
		},
		"application/vnd.collection+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.collection.doc+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.collection.next+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.commerce-battelle": {
			"source": "iana"
		},
		"application/vnd.commonspace": {
			"source": "iana",
			"extensions": [
				"csp"
			]
		},
		"application/vnd.contact.cmsg": {
			"source": "iana",
			"extensions": [
				"cdbcmsg"
			]
		},
		"application/vnd.cosmocaller": {
			"source": "iana",
			"extensions": [
				"cmc"
			]
		},
		"application/vnd.crick.clicker": {
			"source": "iana",
			"extensions": [
				"clkx"
			]
		},
		"application/vnd.crick.clicker.keyboard": {
			"source": "iana",
			"extensions": [
				"clkk"
			]
		},
		"application/vnd.crick.clicker.palette": {
			"source": "iana",
			"extensions": [
				"clkp"
			]
		},
		"application/vnd.crick.clicker.template": {
			"source": "iana",
			"extensions": [
				"clkt"
			]
		},
		"application/vnd.crick.clicker.wordbank": {
			"source": "iana",
			"extensions": [
				"clkw"
			]
		},
		"application/vnd.criticaltools.wbs+xml": {
			"source": "iana",
			"extensions": [
				"wbs"
			]
		},
		"application/vnd.ctc-posml": {
			"source": "iana",
			"extensions": [
				"pml"
			]
		},
		"application/vnd.ctct.ws+xml": {
			"source": "iana"
		},
		"application/vnd.cups-pdf": {
			"source": "iana"
		},
		"application/vnd.cups-postscript": {
			"source": "iana"
		},
		"application/vnd.cups-ppd": {
			"source": "iana",
			"extensions": [
				"ppd"
			]
		},
		"application/vnd.cups-raster": {
			"source": "iana"
		},
		"application/vnd.cups-raw": {
			"source": "iana"
		},
		"application/vnd.curl": {
			"source": "iana"
		},
		"application/vnd.curl.car": {
			"source": "apache",
			"extensions": [
				"car"
			]
		},
		"application/vnd.curl.pcurl": {
			"source": "apache",
			"extensions": [
				"pcurl"
			]
		},
		"application/vnd.cyan.dean.root+xml": {
			"source": "iana"
		},
		"application/vnd.cybank": {
			"source": "iana"
		},
		"application/vnd.dart": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"dart"
			]
		},
		"application/vnd.data-vision.rdz": {
			"source": "iana",
			"extensions": [
				"rdz"
			]
		},
		"application/vnd.debian.binary-package": {
			"source": "iana"
		},
		"application/vnd.dece.data": {
			"source": "iana",
			"extensions": [
				"uvf",
				"uvvf",
				"uvd",
				"uvvd"
			]
		},
		"application/vnd.dece.ttml+xml": {
			"source": "iana",
			"extensions": [
				"uvt",
				"uvvt"
			]
		},
		"application/vnd.dece.unspecified": {
			"source": "iana",
			"extensions": [
				"uvx",
				"uvvx"
			]
		},
		"application/vnd.dece.zip": {
			"source": "iana",
			"extensions": [
				"uvz",
				"uvvz"
			]
		},
		"application/vnd.denovo.fcselayout-link": {
			"source": "iana",
			"extensions": [
				"fe_launch"
			]
		},
		"application/vnd.desmume-movie": {
			"source": "iana"
		},
		"application/vnd.dir-bi.plate-dl-nosuffix": {
			"source": "iana"
		},
		"application/vnd.dm.delegation+xml": {
			"source": "iana"
		},
		"application/vnd.dna": {
			"source": "iana",
			"extensions": [
				"dna"
			]
		},
		"application/vnd.document+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.dolby.mlp": {
			"source": "apache",
			"extensions": [
				"mlp"
			]
		},
		"application/vnd.dolby.mobile.1": {
			"source": "iana"
		},
		"application/vnd.dolby.mobile.2": {
			"source": "iana"
		},
		"application/vnd.doremir.scorecloud-binary-document": {
			"source": "iana"
		},
		"application/vnd.dpgraph": {
			"source": "iana",
			"extensions": [
				"dpg"
			]
		},
		"application/vnd.dreamfactory": {
			"source": "iana",
			"extensions": [
				"dfac"
			]
		},
		"application/vnd.ds-keypoint": {
			"source": "apache",
			"extensions": [
				"kpxx"
			]
		},
		"application/vnd.dtg.local": {
			"source": "iana"
		},
		"application/vnd.dtg.local.flash": {
			"source": "iana"
		},
		"application/vnd.dtg.local.html": {
			"source": "iana"
		},
		"application/vnd.dvb.ait": {
			"source": "iana",
			"extensions": [
				"ait"
			]
		},
		"application/vnd.dvb.dvbj": {
			"source": "iana"
		},
		"application/vnd.dvb.esgcontainer": {
			"source": "iana"
		},
		"application/vnd.dvb.ipdcdftnotifaccess": {
			"source": "iana"
		},
		"application/vnd.dvb.ipdcesgaccess": {
			"source": "iana"
		},
		"application/vnd.dvb.ipdcesgaccess2": {
			"source": "iana"
		},
		"application/vnd.dvb.ipdcesgpdd": {
			"source": "iana"
		},
		"application/vnd.dvb.ipdcroaming": {
			"source": "iana"
		},
		"application/vnd.dvb.iptv.alfec-base": {
			"source": "iana"
		},
		"application/vnd.dvb.iptv.alfec-enhancement": {
			"source": "iana"
		},
		"application/vnd.dvb.notif-aggregate-root+xml": {
			"source": "iana"
		},
		"application/vnd.dvb.notif-container+xml": {
			"source": "iana"
		},
		"application/vnd.dvb.notif-generic+xml": {
			"source": "iana"
		},
		"application/vnd.dvb.notif-ia-msglist+xml": {
			"source": "iana"
		},
		"application/vnd.dvb.notif-ia-registration-request+xml": {
			"source": "iana"
		},
		"application/vnd.dvb.notif-ia-registration-response+xml": {
			"source": "iana"
		},
		"application/vnd.dvb.notif-init+xml": {
			"source": "iana"
		},
		"application/vnd.dvb.pfr": {
			"source": "iana"
		},
		"application/vnd.dvb.service": {
			"source": "iana",
			"extensions": [
				"svc"
			]
		},
		"application/vnd.dxr": {
			"source": "iana"
		},
		"application/vnd.dynageo": {
			"source": "iana",
			"extensions": [
				"geo"
			]
		},
		"application/vnd.dzr": {
			"source": "iana"
		},
		"application/vnd.easykaraoke.cdgdownload": {
			"source": "iana"
		},
		"application/vnd.ecdis-update": {
			"source": "iana"
		},
		"application/vnd.ecowin.chart": {
			"source": "iana",
			"extensions": [
				"mag"
			]
		},
		"application/vnd.ecowin.filerequest": {
			"source": "iana"
		},
		"application/vnd.ecowin.fileupdate": {
			"source": "iana"
		},
		"application/vnd.ecowin.series": {
			"source": "iana"
		},
		"application/vnd.ecowin.seriesrequest": {
			"source": "iana"
		},
		"application/vnd.ecowin.seriesupdate": {
			"source": "iana"
		},
		"application/vnd.emclient.accessrequest+xml": {
			"source": "iana"
		},
		"application/vnd.enliven": {
			"source": "iana",
			"extensions": [
				"nml"
			]
		},
		"application/vnd.enphase.envoy": {
			"source": "iana"
		},
		"application/vnd.eprints.data+xml": {
			"source": "iana"
		},
		"application/vnd.epson.esf": {
			"source": "iana",
			"extensions": [
				"esf"
			]
		},
		"application/vnd.epson.msf": {
			"source": "iana",
			"extensions": [
				"msf"
			]
		},
		"application/vnd.epson.quickanime": {
			"source": "iana",
			"extensions": [
				"qam"
			]
		},
		"application/vnd.epson.salt": {
			"source": "iana",
			"extensions": [
				"slt"
			]
		},
		"application/vnd.epson.ssf": {
			"source": "iana",
			"extensions": [
				"ssf"
			]
		},
		"application/vnd.ericsson.quickcall": {
			"source": "iana"
		},
		"application/vnd.eszigno3+xml": {
			"source": "iana",
			"extensions": [
				"es3",
				"et3"
			]
		},
		"application/vnd.etsi.aoc+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.asic-e+zip": {
			"source": "iana"
		},
		"application/vnd.etsi.asic-s+zip": {
			"source": "iana"
		},
		"application/vnd.etsi.cug+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.iptvcommand+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.iptvdiscovery+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.iptvprofile+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.iptvsad-bc+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.iptvsad-cod+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.iptvsad-npvr+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.iptvservice+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.iptvsync+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.iptvueprofile+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.mcid+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.mheg5": {
			"source": "iana"
		},
		"application/vnd.etsi.overload-control-policy-dataset+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.pstn+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.sci+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.simservs+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.timestamp-token": {
			"source": "iana"
		},
		"application/vnd.etsi.tsl+xml": {
			"source": "iana"
		},
		"application/vnd.etsi.tsl.der": {
			"source": "iana"
		},
		"application/vnd.eudora.data": {
			"source": "iana"
		},
		"application/vnd.ezpix-album": {
			"source": "iana",
			"extensions": [
				"ez2"
			]
		},
		"application/vnd.ezpix-package": {
			"source": "iana",
			"extensions": [
				"ez3"
			]
		},
		"application/vnd.f-secure.mobile": {
			"source": "iana"
		},
		"application/vnd.fastcopy-disk-image": {
			"source": "iana"
		},
		"application/vnd.fdf": {
			"source": "iana",
			"extensions": [
				"fdf"
			]
		},
		"application/vnd.fdsn.mseed": {
			"source": "iana",
			"extensions": [
				"mseed"
			]
		},
		"application/vnd.fdsn.seed": {
			"source": "iana",
			"extensions": [
				"seed",
				"dataless"
			]
		},
		"application/vnd.ffsns": {
			"source": "iana"
		},
		"application/vnd.fints": {
			"source": "iana"
		},
		"application/vnd.flographit": {
			"source": "iana",
			"extensions": [
				"gph"
			]
		},
		"application/vnd.fluxtime.clip": {
			"source": "iana",
			"extensions": [
				"ftc"
			]
		},
		"application/vnd.font-fontforge-sfd": {
			"source": "iana"
		},
		"application/vnd.framemaker": {
			"source": "iana",
			"extensions": [
				"fm",
				"frame",
				"maker",
				"book"
			]
		},
		"application/vnd.frogans.fnc": {
			"source": "iana",
			"extensions": [
				"fnc"
			]
		},
		"application/vnd.frogans.ltf": {
			"source": "iana",
			"extensions": [
				"ltf"
			]
		},
		"application/vnd.fsc.weblaunch": {
			"source": "iana",
			"extensions": [
				"fsc"
			]
		},
		"application/vnd.fujitsu.oasys": {
			"source": "iana",
			"extensions": [
				"oas"
			]
		},
		"application/vnd.fujitsu.oasys2": {
			"source": "iana",
			"extensions": [
				"oa2"
			]
		},
		"application/vnd.fujitsu.oasys3": {
			"source": "iana",
			"extensions": [
				"oa3"
			]
		},
		"application/vnd.fujitsu.oasysgp": {
			"source": "iana",
			"extensions": [
				"fg5"
			]
		},
		"application/vnd.fujitsu.oasysprs": {
			"source": "iana",
			"extensions": [
				"bh2"
			]
		},
		"application/vnd.fujixerox.art-ex": {
			"source": "iana"
		},
		"application/vnd.fujixerox.art4": {
			"source": "iana"
		},
		"application/vnd.fujixerox.ddd": {
			"source": "iana",
			"extensions": [
				"ddd"
			]
		},
		"application/vnd.fujixerox.docuworks": {
			"source": "iana",
			"extensions": [
				"xdw"
			]
		},
		"application/vnd.fujixerox.docuworks.binder": {
			"source": "iana",
			"extensions": [
				"xbd"
			]
		},
		"application/vnd.fujixerox.docuworks.container": {
			"source": "iana"
		},
		"application/vnd.fujixerox.hbpl": {
			"source": "iana"
		},
		"application/vnd.fut-misnet": {
			"source": "iana"
		},
		"application/vnd.fuzzysheet": {
			"source": "iana",
			"extensions": [
				"fzs"
			]
		},
		"application/vnd.genomatix.tuxedo": {
			"source": "iana",
			"extensions": [
				"txd"
			]
		},
		"application/vnd.geo+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.geocube+xml": {
			"source": "iana"
		},
		"application/vnd.geogebra.file": {
			"source": "iana",
			"extensions": [
				"ggb"
			]
		},
		"application/vnd.geogebra.tool": {
			"source": "iana",
			"extensions": [
				"ggt"
			]
		},
		"application/vnd.geometry-explorer": {
			"source": "iana",
			"extensions": [
				"gex",
				"gre"
			]
		},
		"application/vnd.geonext": {
			"source": "iana",
			"extensions": [
				"gxt"
			]
		},
		"application/vnd.geoplan": {
			"source": "iana",
			"extensions": [
				"g2w"
			]
		},
		"application/vnd.geospace": {
			"source": "iana",
			"extensions": [
				"g3w"
			]
		},
		"application/vnd.gerber": {
			"source": "iana"
		},
		"application/vnd.globalplatform.card-content-mgt": {
			"source": "iana"
		},
		"application/vnd.globalplatform.card-content-mgt-response": {
			"source": "iana"
		},
		"application/vnd.gmx": {
			"source": "iana",
			"extensions": [
				"gmx"
			]
		},
		"application/vnd.google-earth.kml+xml": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"kml"
			]
		},
		"application/vnd.google-earth.kmz": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"kmz"
			]
		},
		"application/vnd.gov.sk.e-form+xml": {
			"source": "iana"
		},
		"application/vnd.gov.sk.e-form+zip": {
			"source": "iana"
		},
		"application/vnd.gov.sk.xmldatacontainer+xml": {
			"source": "iana"
		},
		"application/vnd.grafeq": {
			"source": "iana",
			"extensions": [
				"gqf",
				"gqs"
			]
		},
		"application/vnd.gridmp": {
			"source": "iana"
		},
		"application/vnd.groove-account": {
			"source": "iana",
			"extensions": [
				"gac"
			]
		},
		"application/vnd.groove-help": {
			"source": "iana",
			"extensions": [
				"ghf"
			]
		},
		"application/vnd.groove-identity-message": {
			"source": "iana",
			"extensions": [
				"gim"
			]
		},
		"application/vnd.groove-injector": {
			"source": "iana",
			"extensions": [
				"grv"
			]
		},
		"application/vnd.groove-tool-message": {
			"source": "iana",
			"extensions": [
				"gtm"
			]
		},
		"application/vnd.groove-tool-template": {
			"source": "iana",
			"extensions": [
				"tpl"
			]
		},
		"application/vnd.groove-vcard": {
			"source": "iana",
			"extensions": [
				"vcg"
			]
		},
		"application/vnd.hal+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.hal+xml": {
			"source": "iana",
			"extensions": [
				"hal"
			]
		},
		"application/vnd.handheld-entertainment+xml": {
			"source": "iana",
			"extensions": [
				"zmm"
			]
		},
		"application/vnd.hbci": {
			"source": "iana",
			"extensions": [
				"hbci"
			]
		},
		"application/vnd.hcl-bireports": {
			"source": "iana"
		},
		"application/vnd.heroku+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.hhe.lesson-player": {
			"source": "iana",
			"extensions": [
				"les"
			]
		},
		"application/vnd.hp-hpgl": {
			"source": "iana",
			"extensions": [
				"hpgl"
			]
		},
		"application/vnd.hp-hpid": {
			"source": "iana",
			"extensions": [
				"hpid"
			]
		},
		"application/vnd.hp-hps": {
			"source": "iana",
			"extensions": [
				"hps"
			]
		},
		"application/vnd.hp-jlyt": {
			"source": "iana",
			"extensions": [
				"jlt"
			]
		},
		"application/vnd.hp-pcl": {
			"source": "iana",
			"extensions": [
				"pcl"
			]
		},
		"application/vnd.hp-pclxl": {
			"source": "iana",
			"extensions": [
				"pclxl"
			]
		},
		"application/vnd.httphone": {
			"source": "iana"
		},
		"application/vnd.hydrostatix.sof-data": {
			"source": "iana",
			"extensions": [
				"sfd-hdstx"
			]
		},
		"application/vnd.hyperdrive+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.hzn-3d-crossword": {
			"source": "iana"
		},
		"application/vnd.ibm.afplinedata": {
			"source": "iana"
		},
		"application/vnd.ibm.electronic-media": {
			"source": "iana"
		},
		"application/vnd.ibm.minipay": {
			"source": "iana",
			"extensions": [
				"mpy"
			]
		},
		"application/vnd.ibm.modcap": {
			"source": "iana",
			"extensions": [
				"afp",
				"listafp",
				"list3820"
			]
		},
		"application/vnd.ibm.rights-management": {
			"source": "iana",
			"extensions": [
				"irm"
			]
		},
		"application/vnd.ibm.secure-container": {
			"source": "iana",
			"extensions": [
				"sc"
			]
		},
		"application/vnd.iccprofile": {
			"source": "iana",
			"extensions": [
				"icc",
				"icm"
			]
		},
		"application/vnd.ieee.1905": {
			"source": "iana"
		},
		"application/vnd.igloader": {
			"source": "iana",
			"extensions": [
				"igl"
			]
		},
		"application/vnd.immervision-ivp": {
			"source": "iana",
			"extensions": [
				"ivp"
			]
		},
		"application/vnd.immervision-ivu": {
			"source": "iana",
			"extensions": [
				"ivu"
			]
		},
		"application/vnd.ims.imsccv1p1": {
			"source": "iana"
		},
		"application/vnd.ims.imsccv1p2": {
			"source": "iana"
		},
		"application/vnd.ims.imsccv1p3": {
			"source": "iana"
		},
		"application/vnd.ims.lis.v2.result+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.ims.lti.v2.toolconsumerprofile+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.ims.lti.v2.toolproxy+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.ims.lti.v2.toolproxy.id+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.ims.lti.v2.toolsettings+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.ims.lti.v2.toolsettings.simple+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.informedcontrol.rms+xml": {
			"source": "iana"
		},
		"application/vnd.informix-visionary": {
			"source": "iana"
		},
		"application/vnd.infotech.project": {
			"source": "iana"
		},
		"application/vnd.infotech.project+xml": {
			"source": "iana"
		},
		"application/vnd.innopath.wamp.notification": {
			"source": "iana"
		},
		"application/vnd.insors.igm": {
			"source": "iana",
			"extensions": [
				"igm"
			]
		},
		"application/vnd.intercon.formnet": {
			"source": "iana",
			"extensions": [
				"xpw",
				"xpx"
			]
		},
		"application/vnd.intergeo": {
			"source": "iana",
			"extensions": [
				"i2g"
			]
		},
		"application/vnd.intertrust.digibox": {
			"source": "iana"
		},
		"application/vnd.intertrust.nncp": {
			"source": "iana"
		},
		"application/vnd.intu.qbo": {
			"source": "iana",
			"extensions": [
				"qbo"
			]
		},
		"application/vnd.intu.qfx": {
			"source": "iana",
			"extensions": [
				"qfx"
			]
		},
		"application/vnd.iptc.g2.catalogitem+xml": {
			"source": "iana"
		},
		"application/vnd.iptc.g2.conceptitem+xml": {
			"source": "iana"
		},
		"application/vnd.iptc.g2.knowledgeitem+xml": {
			"source": "iana"
		},
		"application/vnd.iptc.g2.newsitem+xml": {
			"source": "iana"
		},
		"application/vnd.iptc.g2.newsmessage+xml": {
			"source": "iana"
		},
		"application/vnd.iptc.g2.packageitem+xml": {
			"source": "iana"
		},
		"application/vnd.iptc.g2.planningitem+xml": {
			"source": "iana"
		},
		"application/vnd.ipunplugged.rcprofile": {
			"source": "iana",
			"extensions": [
				"rcprofile"
			]
		},
		"application/vnd.irepository.package+xml": {
			"source": "iana",
			"extensions": [
				"irp"
			]
		},
		"application/vnd.is-xpr": {
			"source": "iana",
			"extensions": [
				"xpr"
			]
		},
		"application/vnd.isac.fcs": {
			"source": "iana",
			"extensions": [
				"fcs"
			]
		},
		"application/vnd.jam": {
			"source": "iana",
			"extensions": [
				"jam"
			]
		},
		"application/vnd.japannet-directory-service": {
			"source": "iana"
		},
		"application/vnd.japannet-jpnstore-wakeup": {
			"source": "iana"
		},
		"application/vnd.japannet-payment-wakeup": {
			"source": "iana"
		},
		"application/vnd.japannet-registration": {
			"source": "iana"
		},
		"application/vnd.japannet-registration-wakeup": {
			"source": "iana"
		},
		"application/vnd.japannet-setstore-wakeup": {
			"source": "iana"
		},
		"application/vnd.japannet-verification": {
			"source": "iana"
		},
		"application/vnd.japannet-verification-wakeup": {
			"source": "iana"
		},
		"application/vnd.jcp.javame.midlet-rms": {
			"source": "iana",
			"extensions": [
				"rms"
			]
		},
		"application/vnd.jisp": {
			"source": "iana",
			"extensions": [
				"jisp"
			]
		},
		"application/vnd.joost.joda-archive": {
			"source": "iana",
			"extensions": [
				"joda"
			]
		},
		"application/vnd.jsk.isdn-ngn": {
			"source": "iana"
		},
		"application/vnd.kahootz": {
			"source": "iana",
			"extensions": [
				"ktz",
				"ktr"
			]
		},
		"application/vnd.kde.karbon": {
			"source": "iana",
			"extensions": [
				"karbon"
			]
		},
		"application/vnd.kde.kchart": {
			"source": "iana",
			"extensions": [
				"chrt"
			]
		},
		"application/vnd.kde.kformula": {
			"source": "iana",
			"extensions": [
				"kfo"
			]
		},
		"application/vnd.kde.kivio": {
			"source": "iana",
			"extensions": [
				"flw"
			]
		},
		"application/vnd.kde.kontour": {
			"source": "iana",
			"extensions": [
				"kon"
			]
		},
		"application/vnd.kde.kpresenter": {
			"source": "iana",
			"extensions": [
				"kpr",
				"kpt"
			]
		},
		"application/vnd.kde.kspread": {
			"source": "iana",
			"extensions": [
				"ksp"
			]
		},
		"application/vnd.kde.kword": {
			"source": "iana",
			"extensions": [
				"kwd",
				"kwt"
			]
		},
		"application/vnd.kenameaapp": {
			"source": "iana",
			"extensions": [
				"htke"
			]
		},
		"application/vnd.kidspiration": {
			"source": "iana",
			"extensions": [
				"kia"
			]
		},
		"application/vnd.kinar": {
			"source": "iana",
			"extensions": [
				"kne",
				"knp"
			]
		},
		"application/vnd.koan": {
			"source": "iana",
			"extensions": [
				"skp",
				"skd",
				"skt",
				"skm"
			]
		},
		"application/vnd.kodak-descriptor": {
			"source": "iana",
			"extensions": [
				"sse"
			]
		},
		"application/vnd.las.las+xml": {
			"source": "iana",
			"extensions": [
				"lasxml"
			]
		},
		"application/vnd.liberty-request+xml": {
			"source": "iana"
		},
		"application/vnd.llamagraphics.life-balance.desktop": {
			"source": "iana",
			"extensions": [
				"lbd"
			]
		},
		"application/vnd.llamagraphics.life-balance.exchange+xml": {
			"source": "iana",
			"extensions": [
				"lbe"
			]
		},
		"application/vnd.lotus-1-2-3": {
			"source": "iana",
			"extensions": [
				"123"
			]
		},
		"application/vnd.lotus-approach": {
			"source": "iana",
			"extensions": [
				"apr"
			]
		},
		"application/vnd.lotus-freelance": {
			"source": "iana",
			"extensions": [
				"pre"
			]
		},
		"application/vnd.lotus-notes": {
			"source": "iana",
			"extensions": [
				"nsf"
			]
		},
		"application/vnd.lotus-organizer": {
			"source": "iana",
			"extensions": [
				"org"
			]
		},
		"application/vnd.lotus-screencam": {
			"source": "iana",
			"extensions": [
				"scm"
			]
		},
		"application/vnd.lotus-wordpro": {
			"source": "iana",
			"extensions": [
				"lwp"
			]
		},
		"application/vnd.macports.portpkg": {
			"source": "iana",
			"extensions": [
				"portpkg"
			]
		},
		"application/vnd.marlin.drm.actiontoken+xml": {
			"source": "iana"
		},
		"application/vnd.marlin.drm.conftoken+xml": {
			"source": "iana"
		},
		"application/vnd.marlin.drm.license+xml": {
			"source": "iana"
		},
		"application/vnd.marlin.drm.mdcf": {
			"source": "iana"
		},
		"application/vnd.mason+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.maxmind.maxmind-db": {
			"source": "iana"
		},
		"application/vnd.mcd": {
			"source": "iana",
			"extensions": [
				"mcd"
			]
		},
		"application/vnd.medcalcdata": {
			"source": "iana",
			"extensions": [
				"mc1"
			]
		},
		"application/vnd.mediastation.cdkey": {
			"source": "iana",
			"extensions": [
				"cdkey"
			]
		},
		"application/vnd.meridian-slingshot": {
			"source": "iana"
		},
		"application/vnd.mfer": {
			"source": "iana",
			"extensions": [
				"mwf"
			]
		},
		"application/vnd.mfmp": {
			"source": "iana",
			"extensions": [
				"mfm"
			]
		},
		"application/vnd.micro+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.micrografx.flo": {
			"source": "iana",
			"extensions": [
				"flo"
			]
		},
		"application/vnd.micrografx.igx": {
			"source": "iana",
			"extensions": [
				"igx"
			]
		},
		"application/vnd.microsoft.portable-executable": {
			"source": "iana"
		},
		"application/vnd.miele+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.mif": {
			"source": "iana",
			"extensions": [
				"mif"
			]
		},
		"application/vnd.minisoft-hp3000-save": {
			"source": "iana"
		},
		"application/vnd.mitsubishi.misty-guard.trustweb": {
			"source": "iana"
		},
		"application/vnd.mobius.daf": {
			"source": "iana",
			"extensions": [
				"daf"
			]
		},
		"application/vnd.mobius.dis": {
			"source": "iana",
			"extensions": [
				"dis"
			]
		},
		"application/vnd.mobius.mbk": {
			"source": "iana",
			"extensions": [
				"mbk"
			]
		},
		"application/vnd.mobius.mqy": {
			"source": "iana",
			"extensions": [
				"mqy"
			]
		},
		"application/vnd.mobius.msl": {
			"source": "iana",
			"extensions": [
				"msl"
			]
		},
		"application/vnd.mobius.plc": {
			"source": "iana",
			"extensions": [
				"plc"
			]
		},
		"application/vnd.mobius.txf": {
			"source": "iana",
			"extensions": [
				"txf"
			]
		},
		"application/vnd.mophun.application": {
			"source": "iana",
			"extensions": [
				"mpn"
			]
		},
		"application/vnd.mophun.certificate": {
			"source": "iana",
			"extensions": [
				"mpc"
			]
		},
		"application/vnd.motorola.flexsuite": {
			"source": "iana"
		},
		"application/vnd.motorola.flexsuite.adsi": {
			"source": "iana"
		},
		"application/vnd.motorola.flexsuite.fis": {
			"source": "iana"
		},
		"application/vnd.motorola.flexsuite.gotap": {
			"source": "iana"
		},
		"application/vnd.motorola.flexsuite.kmr": {
			"source": "iana"
		},
		"application/vnd.motorola.flexsuite.ttc": {
			"source": "iana"
		},
		"application/vnd.motorola.flexsuite.wem": {
			"source": "iana"
		},
		"application/vnd.motorola.iprm": {
			"source": "iana"
		},
		"application/vnd.mozilla.xul+xml": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"xul"
			]
		},
		"application/vnd.ms-3mfdocument": {
			"source": "iana"
		},
		"application/vnd.ms-artgalry": {
			"source": "iana",
			"extensions": [
				"cil"
			]
		},
		"application/vnd.ms-asf": {
			"source": "iana"
		},
		"application/vnd.ms-cab-compressed": {
			"source": "iana",
			"extensions": [
				"cab"
			]
		},
		"application/vnd.ms-color.iccprofile": {
			"source": "apache"
		},
		"application/vnd.ms-excel": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"xls",
				"xlm",
				"xla",
				"xlc",
				"xlt",
				"xlw"
			]
		},
		"application/vnd.ms-excel.addin.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"xlam"
			]
		},
		"application/vnd.ms-excel.sheet.binary.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"xlsb"
			]
		},
		"application/vnd.ms-excel.sheet.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"xlsm"
			]
		},
		"application/vnd.ms-excel.template.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"xltm"
			]
		},
		"application/vnd.ms-fontobject": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"eot"
			]
		},
		"application/vnd.ms-htmlhelp": {
			"source": "iana",
			"extensions": [
				"chm"
			]
		},
		"application/vnd.ms-ims": {
			"source": "iana",
			"extensions": [
				"ims"
			]
		},
		"application/vnd.ms-lrm": {
			"source": "iana",
			"extensions": [
				"lrm"
			]
		},
		"application/vnd.ms-office.activex+xml": {
			"source": "iana"
		},
		"application/vnd.ms-officetheme": {
			"source": "iana",
			"extensions": [
				"thmx"
			]
		},
		"application/vnd.ms-opentype": {
			"source": "apache",
			"compressible": true
		},
		"application/vnd.ms-package.obfuscated-opentype": {
			"source": "apache"
		},
		"application/vnd.ms-pki.seccat": {
			"source": "apache",
			"extensions": [
				"cat"
			]
		},
		"application/vnd.ms-pki.stl": {
			"source": "apache",
			"extensions": [
				"stl"
			]
		},
		"application/vnd.ms-playready.initiator+xml": {
			"source": "iana"
		},
		"application/vnd.ms-powerpoint": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"ppt",
				"pps",
				"pot"
			]
		},
		"application/vnd.ms-powerpoint.addin.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"ppam"
			]
		},
		"application/vnd.ms-powerpoint.presentation.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"pptm"
			]
		},
		"application/vnd.ms-powerpoint.slide.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"sldm"
			]
		},
		"application/vnd.ms-powerpoint.slideshow.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"ppsm"
			]
		},
		"application/vnd.ms-powerpoint.template.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"potm"
			]
		},
		"application/vnd.ms-printing.printticket+xml": {
			"source": "apache"
		},
		"application/vnd.ms-project": {
			"source": "iana",
			"extensions": [
				"mpp",
				"mpt"
			]
		},
		"application/vnd.ms-tnef": {
			"source": "iana"
		},
		"application/vnd.ms-windows.printerpairing": {
			"source": "iana"
		},
		"application/vnd.ms-wmdrm.lic-chlg-req": {
			"source": "iana"
		},
		"application/vnd.ms-wmdrm.lic-resp": {
			"source": "iana"
		},
		"application/vnd.ms-wmdrm.meter-chlg-req": {
			"source": "iana"
		},
		"application/vnd.ms-wmdrm.meter-resp": {
			"source": "iana"
		},
		"application/vnd.ms-word.document.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"docm"
			]
		},
		"application/vnd.ms-word.template.macroenabled.12": {
			"source": "iana",
			"extensions": [
				"dotm"
			]
		},
		"application/vnd.ms-works": {
			"source": "iana",
			"extensions": [
				"wps",
				"wks",
				"wcm",
				"wdb"
			]
		},
		"application/vnd.ms-wpl": {
			"source": "iana",
			"extensions": [
				"wpl"
			]
		},
		"application/vnd.ms-xpsdocument": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"xps"
			]
		},
		"application/vnd.msa-disk-image": {
			"source": "iana"
		},
		"application/vnd.mseq": {
			"source": "iana",
			"extensions": [
				"mseq"
			]
		},
		"application/vnd.msign": {
			"source": "iana"
		},
		"application/vnd.multiad.creator": {
			"source": "iana"
		},
		"application/vnd.multiad.creator.cif": {
			"source": "iana"
		},
		"application/vnd.music-niff": {
			"source": "iana"
		},
		"application/vnd.musician": {
			"source": "iana",
			"extensions": [
				"mus"
			]
		},
		"application/vnd.muvee.style": {
			"source": "iana",
			"extensions": [
				"msty"
			]
		},
		"application/vnd.mynfc": {
			"source": "iana",
			"extensions": [
				"taglet"
			]
		},
		"application/vnd.ncd.control": {
			"source": "iana"
		},
		"application/vnd.ncd.reference": {
			"source": "iana"
		},
		"application/vnd.nervana": {
			"source": "iana"
		},
		"application/vnd.netfpx": {
			"source": "iana"
		},
		"application/vnd.neurolanguage.nlu": {
			"source": "iana",
			"extensions": [
				"nlu"
			]
		},
		"application/vnd.nintendo.nitro.rom": {
			"source": "iana"
		},
		"application/vnd.nintendo.snes.rom": {
			"source": "iana"
		},
		"application/vnd.nitf": {
			"source": "iana",
			"extensions": [
				"ntf",
				"nitf"
			]
		},
		"application/vnd.noblenet-directory": {
			"source": "iana",
			"extensions": [
				"nnd"
			]
		},
		"application/vnd.noblenet-sealer": {
			"source": "iana",
			"extensions": [
				"nns"
			]
		},
		"application/vnd.noblenet-web": {
			"source": "iana",
			"extensions": [
				"nnw"
			]
		},
		"application/vnd.nokia.catalogs": {
			"source": "iana"
		},
		"application/vnd.nokia.conml+wbxml": {
			"source": "iana"
		},
		"application/vnd.nokia.conml+xml": {
			"source": "iana"
		},
		"application/vnd.nokia.iptv.config+xml": {
			"source": "iana"
		},
		"application/vnd.nokia.isds-radio-presets": {
			"source": "iana"
		},
		"application/vnd.nokia.landmark+wbxml": {
			"source": "iana"
		},
		"application/vnd.nokia.landmark+xml": {
			"source": "iana"
		},
		"application/vnd.nokia.landmarkcollection+xml": {
			"source": "iana"
		},
		"application/vnd.nokia.n-gage.ac+xml": {
			"source": "iana"
		},
		"application/vnd.nokia.n-gage.data": {
			"source": "iana",
			"extensions": [
				"ngdat"
			]
		},
		"application/vnd.nokia.n-gage.symbian.install": {
			"source": "iana",
			"extensions": [
				"n-gage"
			]
		},
		"application/vnd.nokia.ncd": {
			"source": "iana"
		},
		"application/vnd.nokia.pcd+wbxml": {
			"source": "iana"
		},
		"application/vnd.nokia.pcd+xml": {
			"source": "iana"
		},
		"application/vnd.nokia.radio-preset": {
			"source": "iana",
			"extensions": [
				"rpst"
			]
		},
		"application/vnd.nokia.radio-presets": {
			"source": "iana",
			"extensions": [
				"rpss"
			]
		},
		"application/vnd.novadigm.edm": {
			"source": "iana",
			"extensions": [
				"edm"
			]
		},
		"application/vnd.novadigm.edx": {
			"source": "iana",
			"extensions": [
				"edx"
			]
		},
		"application/vnd.novadigm.ext": {
			"source": "iana",
			"extensions": [
				"ext"
			]
		},
		"application/vnd.ntt-local.content-share": {
			"source": "iana"
		},
		"application/vnd.ntt-local.file-transfer": {
			"source": "iana"
		},
		"application/vnd.ntt-local.ogw_remote-access": {
			"source": "iana"
		},
		"application/vnd.ntt-local.sip-ta_remote": {
			"source": "iana"
		},
		"application/vnd.ntt-local.sip-ta_tcp_stream": {
			"source": "iana"
		},
		"application/vnd.oasis.opendocument.chart": {
			"source": "iana",
			"extensions": [
				"odc"
			]
		},
		"application/vnd.oasis.opendocument.chart-template": {
			"source": "iana",
			"extensions": [
				"otc"
			]
		},
		"application/vnd.oasis.opendocument.database": {
			"source": "iana",
			"extensions": [
				"odb"
			]
		},
		"application/vnd.oasis.opendocument.formula": {
			"source": "iana",
			"extensions": [
				"odf"
			]
		},
		"application/vnd.oasis.opendocument.formula-template": {
			"source": "iana",
			"extensions": [
				"odft"
			]
		},
		"application/vnd.oasis.opendocument.graphics": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"odg"
			]
		},
		"application/vnd.oasis.opendocument.graphics-template": {
			"source": "iana",
			"extensions": [
				"otg"
			]
		},
		"application/vnd.oasis.opendocument.image": {
			"source": "iana",
			"extensions": [
				"odi"
			]
		},
		"application/vnd.oasis.opendocument.image-template": {
			"source": "iana",
			"extensions": [
				"oti"
			]
		},
		"application/vnd.oasis.opendocument.presentation": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"odp"
			]
		},
		"application/vnd.oasis.opendocument.presentation-template": {
			"source": "iana",
			"extensions": [
				"otp"
			]
		},
		"application/vnd.oasis.opendocument.spreadsheet": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"ods"
			]
		},
		"application/vnd.oasis.opendocument.spreadsheet-template": {
			"source": "iana",
			"extensions": [
				"ots"
			]
		},
		"application/vnd.oasis.opendocument.text": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"odt"
			]
		},
		"application/vnd.oasis.opendocument.text-master": {
			"source": "iana",
			"extensions": [
				"odm"
			]
		},
		"application/vnd.oasis.opendocument.text-template": {
			"source": "iana",
			"extensions": [
				"ott"
			]
		},
		"application/vnd.oasis.opendocument.text-web": {
			"source": "iana",
			"extensions": [
				"oth"
			]
		},
		"application/vnd.obn": {
			"source": "iana"
		},
		"application/vnd.oftn.l10n+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.oipf.contentaccessdownload+xml": {
			"source": "iana"
		},
		"application/vnd.oipf.contentaccessstreaming+xml": {
			"source": "iana"
		},
		"application/vnd.oipf.cspg-hexbinary": {
			"source": "iana"
		},
		"application/vnd.oipf.dae.svg+xml": {
			"source": "iana"
		},
		"application/vnd.oipf.dae.xhtml+xml": {
			"source": "iana"
		},
		"application/vnd.oipf.mippvcontrolmessage+xml": {
			"source": "iana"
		},
		"application/vnd.oipf.pae.gem": {
			"source": "iana"
		},
		"application/vnd.oipf.spdiscovery+xml": {
			"source": "iana"
		},
		"application/vnd.oipf.spdlist+xml": {
			"source": "iana"
		},
		"application/vnd.oipf.ueprofile+xml": {
			"source": "iana"
		},
		"application/vnd.oipf.userprofile+xml": {
			"source": "iana"
		},
		"application/vnd.olpc-sugar": {
			"source": "iana",
			"extensions": [
				"xo"
			]
		},
		"application/vnd.oma-scws-config": {
			"source": "iana"
		},
		"application/vnd.oma-scws-http-request": {
			"source": "iana"
		},
		"application/vnd.oma-scws-http-response": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.associated-procedure-parameter+xml": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.drm-trigger+xml": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.imd+xml": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.ltkm": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.notification+xml": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.provisioningtrigger": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.sgboot": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.sgdd+xml": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.sgdu": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.simple-symbol-container": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.smartcard-trigger+xml": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.sprov+xml": {
			"source": "iana"
		},
		"application/vnd.oma.bcast.stkm": {
			"source": "iana"
		},
		"application/vnd.oma.cab-address-book+xml": {
			"source": "iana"
		},
		"application/vnd.oma.cab-feature-handler+xml": {
			"source": "iana"
		},
		"application/vnd.oma.cab-pcc+xml": {
			"source": "iana"
		},
		"application/vnd.oma.cab-subs-invite+xml": {
			"source": "iana"
		},
		"application/vnd.oma.cab-user-prefs+xml": {
			"source": "iana"
		},
		"application/vnd.oma.dcd": {
			"source": "iana"
		},
		"application/vnd.oma.dcdc": {
			"source": "iana"
		},
		"application/vnd.oma.dd2+xml": {
			"source": "iana",
			"extensions": [
				"dd2"
			]
		},
		"application/vnd.oma.drm.risd+xml": {
			"source": "iana"
		},
		"application/vnd.oma.group-usage-list+xml": {
			"source": "iana"
		},
		"application/vnd.oma.pal+xml": {
			"source": "iana"
		},
		"application/vnd.oma.poc.detailed-progress-report+xml": {
			"source": "iana"
		},
		"application/vnd.oma.poc.final-report+xml": {
			"source": "iana"
		},
		"application/vnd.oma.poc.groups+xml": {
			"source": "iana"
		},
		"application/vnd.oma.poc.invocation-descriptor+xml": {
			"source": "iana"
		},
		"application/vnd.oma.poc.optimized-progress-report+xml": {
			"source": "iana"
		},
		"application/vnd.oma.push": {
			"source": "iana"
		},
		"application/vnd.oma.scidm.messages+xml": {
			"source": "iana"
		},
		"application/vnd.oma.xcap-directory+xml": {
			"source": "iana"
		},
		"application/vnd.omads-email+xml": {
			"source": "iana"
		},
		"application/vnd.omads-file+xml": {
			"source": "iana"
		},
		"application/vnd.omads-folder+xml": {
			"source": "iana"
		},
		"application/vnd.omaloc-supl-init": {
			"source": "iana"
		},
		"application/vnd.openeye.oeb": {
			"source": "iana"
		},
		"application/vnd.openofficeorg.extension": {
			"source": "apache",
			"extensions": [
				"oxt"
			]
		},
		"application/vnd.openxmlformats-officedocument.custom-properties+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.customxmlproperties+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.drawing+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.drawingml.chart+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.drawingml.chartshapes+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.drawingml.diagramdata+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.extended-properties+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml-template": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.commentauthors+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.comments+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.notesmaster+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.notesslide+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.presentation": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"pptx"
			]
		},
		"application/vnd.openxmlformats-officedocument.presentationml.presentation.main+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.presprops+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.slide": {
			"source": "iana",
			"extensions": [
				"sldx"
			]
		},
		"application/vnd.openxmlformats-officedocument.presentationml.slide+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.slidelayout+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.slidemaster+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.slideshow": {
			"source": "iana",
			"extensions": [
				"ppsx"
			]
		},
		"application/vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.tablestyles+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.tags+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.template": {
			"source": "apache",
			"extensions": [
				"potx"
			]
		},
		"application/vnd.openxmlformats-officedocument.presentationml.template.main+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.presentationml.viewprops+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml-template": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.comments+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.connections+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"xlsx"
			]
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.table+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.template": {
			"source": "apache",
			"extensions": [
				"xltx"
			]
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.theme+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.themeoverride+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.vmldrawing": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml-template": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.comments+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"docx"
			]
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.footer+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.settings+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.styles+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.template": {
			"source": "apache",
			"extensions": [
				"dotx"
			]
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-package.core-properties+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml": {
			"source": "iana"
		},
		"application/vnd.openxmlformats-package.relationships+xml": {
			"source": "iana"
		},
		"application/vnd.oracle.resource+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.orange.indata": {
			"source": "iana"
		},
		"application/vnd.osa.netdeploy": {
			"source": "iana"
		},
		"application/vnd.osgeo.mapguide.package": {
			"source": "iana",
			"extensions": [
				"mgp"
			]
		},
		"application/vnd.osgi.bundle": {
			"source": "iana"
		},
		"application/vnd.osgi.dp": {
			"source": "iana",
			"extensions": [
				"dp"
			]
		},
		"application/vnd.osgi.subsystem": {
			"source": "iana",
			"extensions": [
				"esa"
			]
		},
		"application/vnd.otps.ct-kip+xml": {
			"source": "iana"
		},
		"application/vnd.palm": {
			"source": "iana",
			"extensions": [
				"pdb",
				"pqa",
				"oprc"
			]
		},
		"application/vnd.panoply": {
			"source": "iana"
		},
		"application/vnd.paos+xml": {
			"source": "iana"
		},
		"application/vnd.paos.xml": {
			"source": "apache"
		},
		"application/vnd.pawaafile": {
			"source": "iana",
			"extensions": [
				"paw"
			]
		},
		"application/vnd.pcos": {
			"source": "iana"
		},
		"application/vnd.pg.format": {
			"source": "iana",
			"extensions": [
				"str"
			]
		},
		"application/vnd.pg.osasli": {
			"source": "iana",
			"extensions": [
				"ei6"
			]
		},
		"application/vnd.piaccess.application-licence": {
			"source": "iana"
		},
		"application/vnd.picsel": {
			"source": "iana",
			"extensions": [
				"efif"
			]
		},
		"application/vnd.pmi.widget": {
			"source": "iana",
			"extensions": [
				"wg"
			]
		},
		"application/vnd.poc.group-advertisement+xml": {
			"source": "iana"
		},
		"application/vnd.pocketlearn": {
			"source": "iana",
			"extensions": [
				"plf"
			]
		},
		"application/vnd.powerbuilder6": {
			"source": "iana",
			"extensions": [
				"pbd"
			]
		},
		"application/vnd.powerbuilder6-s": {
			"source": "iana"
		},
		"application/vnd.powerbuilder7": {
			"source": "iana"
		},
		"application/vnd.powerbuilder7-s": {
			"source": "iana"
		},
		"application/vnd.powerbuilder75": {
			"source": "iana"
		},
		"application/vnd.powerbuilder75-s": {
			"source": "iana"
		},
		"application/vnd.preminet": {
			"source": "iana"
		},
		"application/vnd.previewsystems.box": {
			"source": "iana",
			"extensions": [
				"box"
			]
		},
		"application/vnd.proteus.magazine": {
			"source": "iana",
			"extensions": [
				"mgz"
			]
		},
		"application/vnd.publishare-delta-tree": {
			"source": "iana",
			"extensions": [
				"qps"
			]
		},
		"application/vnd.pvi.ptid1": {
			"source": "iana",
			"extensions": [
				"ptid"
			]
		},
		"application/vnd.pwg-multiplexed": {
			"source": "iana"
		},
		"application/vnd.pwg-xhtml-print+xml": {
			"source": "iana"
		},
		"application/vnd.qualcomm.brew-app-res": {
			"source": "iana"
		},
		"application/vnd.quark.quarkxpress": {
			"source": "iana",
			"extensions": [
				"qxd",
				"qxt",
				"qwd",
				"qwt",
				"qxl",
				"qxb"
			]
		},
		"application/vnd.quobject-quoxdocument": {
			"source": "iana"
		},
		"application/vnd.radisys.moml+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-audit+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-audit-conf+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-audit-conn+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-audit-dialog+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-audit-stream+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-conf+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-dialog+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-dialog-base+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-dialog-fax-detect+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-dialog-fax-sendrecv+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-dialog-group+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-dialog-speech+xml": {
			"source": "iana"
		},
		"application/vnd.radisys.msml-dialog-transform+xml": {
			"source": "iana"
		},
		"application/vnd.rainstor.data": {
			"source": "iana"
		},
		"application/vnd.rapid": {
			"source": "iana"
		},
		"application/vnd.realvnc.bed": {
			"source": "iana",
			"extensions": [
				"bed"
			]
		},
		"application/vnd.recordare.musicxml": {
			"source": "iana",
			"extensions": [
				"mxl"
			]
		},
		"application/vnd.recordare.musicxml+xml": {
			"source": "iana",
			"extensions": [
				"musicxml"
			]
		},
		"application/vnd.renlearn.rlprint": {
			"source": "iana"
		},
		"application/vnd.rig.cryptonote": {
			"source": "iana",
			"extensions": [
				"cryptonote"
			]
		},
		"application/vnd.rim.cod": {
			"source": "apache",
			"extensions": [
				"cod"
			]
		},
		"application/vnd.rn-realmedia": {
			"source": "apache",
			"extensions": [
				"rm"
			]
		},
		"application/vnd.rn-realmedia-vbr": {
			"source": "apache",
			"extensions": [
				"rmvb"
			]
		},
		"application/vnd.route66.link66+xml": {
			"source": "iana",
			"extensions": [
				"link66"
			]
		},
		"application/vnd.rs-274x": {
			"source": "iana"
		},
		"application/vnd.ruckus.download": {
			"source": "iana"
		},
		"application/vnd.s3sms": {
			"source": "iana"
		},
		"application/vnd.sailingtracker.track": {
			"source": "iana",
			"extensions": [
				"st"
			]
		},
		"application/vnd.sbm.cid": {
			"source": "iana"
		},
		"application/vnd.sbm.mid2": {
			"source": "iana"
		},
		"application/vnd.scribus": {
			"source": "iana"
		},
		"application/vnd.sealed.3df": {
			"source": "iana"
		},
		"application/vnd.sealed.csf": {
			"source": "iana"
		},
		"application/vnd.sealed.doc": {
			"source": "iana"
		},
		"application/vnd.sealed.eml": {
			"source": "iana"
		},
		"application/vnd.sealed.mht": {
			"source": "iana"
		},
		"application/vnd.sealed.net": {
			"source": "iana"
		},
		"application/vnd.sealed.ppt": {
			"source": "iana"
		},
		"application/vnd.sealed.tiff": {
			"source": "iana"
		},
		"application/vnd.sealed.xls": {
			"source": "iana"
		},
		"application/vnd.sealedmedia.softseal.html": {
			"source": "iana"
		},
		"application/vnd.sealedmedia.softseal.pdf": {
			"source": "iana"
		},
		"application/vnd.seemail": {
			"source": "iana",
			"extensions": [
				"see"
			]
		},
		"application/vnd.sema": {
			"source": "iana",
			"extensions": [
				"sema"
			]
		},
		"application/vnd.semd": {
			"source": "iana",
			"extensions": [
				"semd"
			]
		},
		"application/vnd.semf": {
			"source": "iana",
			"extensions": [
				"semf"
			]
		},
		"application/vnd.shana.informed.formdata": {
			"source": "iana",
			"extensions": [
				"ifm"
			]
		},
		"application/vnd.shana.informed.formtemplate": {
			"source": "iana",
			"extensions": [
				"itp"
			]
		},
		"application/vnd.shana.informed.interchange": {
			"source": "iana",
			"extensions": [
				"iif"
			]
		},
		"application/vnd.shana.informed.package": {
			"source": "iana",
			"extensions": [
				"ipk"
			]
		},
		"application/vnd.simtech-mindmapper": {
			"source": "iana",
			"extensions": [
				"twd",
				"twds"
			]
		},
		"application/vnd.siren+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.smaf": {
			"source": "iana",
			"extensions": [
				"mmf"
			]
		},
		"application/vnd.smart.notebook": {
			"source": "iana"
		},
		"application/vnd.smart.teacher": {
			"source": "iana",
			"extensions": [
				"teacher"
			]
		},
		"application/vnd.software602.filler.form+xml": {
			"source": "iana"
		},
		"application/vnd.software602.filler.form-xml-zip": {
			"source": "iana"
		},
		"application/vnd.solent.sdkm+xml": {
			"source": "iana",
			"extensions": [
				"sdkm",
				"sdkd"
			]
		},
		"application/vnd.spotfire.dxp": {
			"source": "iana",
			"extensions": [
				"dxp"
			]
		},
		"application/vnd.spotfire.sfs": {
			"source": "iana",
			"extensions": [
				"sfs"
			]
		},
		"application/vnd.sss-cod": {
			"source": "iana"
		},
		"application/vnd.sss-dtf": {
			"source": "iana"
		},
		"application/vnd.sss-ntf": {
			"source": "iana"
		},
		"application/vnd.stardivision.calc": {
			"source": "apache",
			"extensions": [
				"sdc"
			]
		},
		"application/vnd.stardivision.draw": {
			"source": "apache",
			"extensions": [
				"sda"
			]
		},
		"application/vnd.stardivision.impress": {
			"source": "apache",
			"extensions": [
				"sdd"
			]
		},
		"application/vnd.stardivision.math": {
			"source": "apache",
			"extensions": [
				"smf"
			]
		},
		"application/vnd.stardivision.writer": {
			"source": "apache",
			"extensions": [
				"sdw",
				"vor"
			]
		},
		"application/vnd.stardivision.writer-global": {
			"source": "apache",
			"extensions": [
				"sgl"
			]
		},
		"application/vnd.stepmania.package": {
			"source": "iana",
			"extensions": [
				"smzip"
			]
		},
		"application/vnd.stepmania.stepchart": {
			"source": "iana",
			"extensions": [
				"sm"
			]
		},
		"application/vnd.street-stream": {
			"source": "iana"
		},
		"application/vnd.sun.wadl+xml": {
			"source": "iana"
		},
		"application/vnd.sun.xml.calc": {
			"source": "apache",
			"extensions": [
				"sxc"
			]
		},
		"application/vnd.sun.xml.calc.template": {
			"source": "apache",
			"extensions": [
				"stc"
			]
		},
		"application/vnd.sun.xml.draw": {
			"source": "apache",
			"extensions": [
				"sxd"
			]
		},
		"application/vnd.sun.xml.draw.template": {
			"source": "apache",
			"extensions": [
				"std"
			]
		},
		"application/vnd.sun.xml.impress": {
			"source": "apache",
			"extensions": [
				"sxi"
			]
		},
		"application/vnd.sun.xml.impress.template": {
			"source": "apache",
			"extensions": [
				"sti"
			]
		},
		"application/vnd.sun.xml.math": {
			"source": "apache",
			"extensions": [
				"sxm"
			]
		},
		"application/vnd.sun.xml.writer": {
			"source": "apache",
			"extensions": [
				"sxw"
			]
		},
		"application/vnd.sun.xml.writer.global": {
			"source": "apache",
			"extensions": [
				"sxg"
			]
		},
		"application/vnd.sun.xml.writer.template": {
			"source": "apache",
			"extensions": [
				"stw"
			]
		},
		"application/vnd.sus-calendar": {
			"source": "iana",
			"extensions": [
				"sus",
				"susp"
			]
		},
		"application/vnd.svd": {
			"source": "iana",
			"extensions": [
				"svd"
			]
		},
		"application/vnd.swiftview-ics": {
			"source": "iana"
		},
		"application/vnd.symbian.install": {
			"source": "apache",
			"extensions": [
				"sis",
				"sisx"
			]
		},
		"application/vnd.syncml+xml": {
			"source": "iana",
			"extensions": [
				"xsm"
			]
		},
		"application/vnd.syncml.dm+wbxml": {
			"source": "iana",
			"extensions": [
				"bdm"
			]
		},
		"application/vnd.syncml.dm+xml": {
			"source": "iana",
			"extensions": [
				"xdm"
			]
		},
		"application/vnd.syncml.dm.notification": {
			"source": "iana"
		},
		"application/vnd.syncml.dmddf+wbxml": {
			"source": "iana"
		},
		"application/vnd.syncml.dmddf+xml": {
			"source": "iana"
		},
		"application/vnd.syncml.dmtnds+wbxml": {
			"source": "iana"
		},
		"application/vnd.syncml.dmtnds+xml": {
			"source": "iana"
		},
		"application/vnd.syncml.ds.notification": {
			"source": "iana"
		},
		"application/vnd.tao.intent-module-archive": {
			"source": "iana",
			"extensions": [
				"tao"
			]
		},
		"application/vnd.tcpdump.pcap": {
			"source": "iana",
			"extensions": [
				"pcap",
				"cap",
				"dmp"
			]
		},
		"application/vnd.tmd.mediaflex.api+xml": {
			"source": "iana"
		},
		"application/vnd.tmobile-livetv": {
			"source": "iana",
			"extensions": [
				"tmo"
			]
		},
		"application/vnd.trid.tpt": {
			"source": "iana",
			"extensions": [
				"tpt"
			]
		},
		"application/vnd.triscape.mxs": {
			"source": "iana",
			"extensions": [
				"mxs"
			]
		},
		"application/vnd.trueapp": {
			"source": "iana",
			"extensions": [
				"tra"
			]
		},
		"application/vnd.truedoc": {
			"source": "iana"
		},
		"application/vnd.ubisoft.webplayer": {
			"source": "iana"
		},
		"application/vnd.ufdl": {
			"source": "iana",
			"extensions": [
				"ufd",
				"ufdl"
			]
		},
		"application/vnd.uiq.theme": {
			"source": "iana",
			"extensions": [
				"utz"
			]
		},
		"application/vnd.umajin": {
			"source": "iana",
			"extensions": [
				"umj"
			]
		},
		"application/vnd.unity": {
			"source": "iana",
			"extensions": [
				"unityweb"
			]
		},
		"application/vnd.uoml+xml": {
			"source": "iana",
			"extensions": [
				"uoml"
			]
		},
		"application/vnd.uplanet.alert": {
			"source": "iana"
		},
		"application/vnd.uplanet.alert-wbxml": {
			"source": "iana"
		},
		"application/vnd.uplanet.bearer-choice": {
			"source": "iana"
		},
		"application/vnd.uplanet.bearer-choice-wbxml": {
			"source": "iana"
		},
		"application/vnd.uplanet.cacheop": {
			"source": "iana"
		},
		"application/vnd.uplanet.cacheop-wbxml": {
			"source": "iana"
		},
		"application/vnd.uplanet.channel": {
			"source": "iana"
		},
		"application/vnd.uplanet.channel-wbxml": {
			"source": "iana"
		},
		"application/vnd.uplanet.list": {
			"source": "iana"
		},
		"application/vnd.uplanet.list-wbxml": {
			"source": "iana"
		},
		"application/vnd.uplanet.listcmd": {
			"source": "iana"
		},
		"application/vnd.uplanet.listcmd-wbxml": {
			"source": "iana"
		},
		"application/vnd.uplanet.signal": {
			"source": "iana"
		},
		"application/vnd.uri-map": {
			"source": "iana"
		},
		"application/vnd.valve.source.material": {
			"source": "iana"
		},
		"application/vnd.vcx": {
			"source": "iana",
			"extensions": [
				"vcx"
			]
		},
		"application/vnd.vd-study": {
			"source": "iana"
		},
		"application/vnd.vectorworks": {
			"source": "iana"
		},
		"application/vnd.verimatrix.vcas": {
			"source": "iana"
		},
		"application/vnd.vidsoft.vidconference": {
			"source": "iana"
		},
		"application/vnd.visio": {
			"source": "iana",
			"extensions": [
				"vsd",
				"vst",
				"vss",
				"vsw"
			]
		},
		"application/vnd.visionary": {
			"source": "iana",
			"extensions": [
				"vis"
			]
		},
		"application/vnd.vividence.scriptfile": {
			"source": "iana"
		},
		"application/vnd.vsf": {
			"source": "iana",
			"extensions": [
				"vsf"
			]
		},
		"application/vnd.wap.sic": {
			"source": "iana"
		},
		"application/vnd.wap.slc": {
			"source": "iana"
		},
		"application/vnd.wap.wbxml": {
			"source": "iana",
			"extensions": [
				"wbxml"
			]
		},
		"application/vnd.wap.wmlc": {
			"source": "iana",
			"extensions": [
				"wmlc"
			]
		},
		"application/vnd.wap.wmlscriptc": {
			"source": "iana",
			"extensions": [
				"wmlsc"
			]
		},
		"application/vnd.webturbo": {
			"source": "iana",
			"extensions": [
				"wtb"
			]
		},
		"application/vnd.wfa.p2p": {
			"source": "iana"
		},
		"application/vnd.wfa.wsc": {
			"source": "iana"
		},
		"application/vnd.windows.devicepairing": {
			"source": "iana"
		},
		"application/vnd.wmc": {
			"source": "iana"
		},
		"application/vnd.wmf.bootstrap": {
			"source": "iana"
		},
		"application/vnd.wolfram.mathematica": {
			"source": "iana"
		},
		"application/vnd.wolfram.mathematica.package": {
			"source": "iana"
		},
		"application/vnd.wolfram.player": {
			"source": "iana",
			"extensions": [
				"nbp"
			]
		},
		"application/vnd.wordperfect": {
			"source": "iana",
			"extensions": [
				"wpd"
			]
		},
		"application/vnd.wqd": {
			"source": "iana",
			"extensions": [
				"wqd"
			]
		},
		"application/vnd.wrq-hp3000-labelled": {
			"source": "iana"
		},
		"application/vnd.wt.stf": {
			"source": "iana",
			"extensions": [
				"stf"
			]
		},
		"application/vnd.wv.csp+wbxml": {
			"source": "iana"
		},
		"application/vnd.wv.csp+xml": {
			"source": "iana"
		},
		"application/vnd.wv.ssp+xml": {
			"source": "iana"
		},
		"application/vnd.xacml+json": {
			"source": "iana",
			"compressible": true
		},
		"application/vnd.xara": {
			"source": "iana",
			"extensions": [
				"xar"
			]
		},
		"application/vnd.xfdl": {
			"source": "iana",
			"extensions": [
				"xfdl"
			]
		},
		"application/vnd.xfdl.webform": {
			"source": "iana"
		},
		"application/vnd.xmi+xml": {
			"source": "iana"
		},
		"application/vnd.xmpie.cpkg": {
			"source": "iana"
		},
		"application/vnd.xmpie.dpkg": {
			"source": "iana"
		},
		"application/vnd.xmpie.plan": {
			"source": "iana"
		},
		"application/vnd.xmpie.ppkg": {
			"source": "iana"
		},
		"application/vnd.xmpie.xlim": {
			"source": "iana"
		},
		"application/vnd.yamaha.hv-dic": {
			"source": "iana",
			"extensions": [
				"hvd"
			]
		},
		"application/vnd.yamaha.hv-script": {
			"source": "iana",
			"extensions": [
				"hvs"
			]
		},
		"application/vnd.yamaha.hv-voice": {
			"source": "iana",
			"extensions": [
				"hvp"
			]
		},
		"application/vnd.yamaha.openscoreformat": {
			"source": "iana",
			"extensions": [
				"osf"
			]
		},
		"application/vnd.yamaha.openscoreformat.osfpvg+xml": {
			"source": "iana",
			"extensions": [
				"osfpvg"
			]
		},
		"application/vnd.yamaha.remote-setup": {
			"source": "iana"
		},
		"application/vnd.yamaha.smaf-audio": {
			"source": "iana",
			"extensions": [
				"saf"
			]
		},
		"application/vnd.yamaha.smaf-phrase": {
			"source": "iana",
			"extensions": [
				"spf"
			]
		},
		"application/vnd.yamaha.through-ngn": {
			"source": "iana"
		},
		"application/vnd.yamaha.tunnel-udpencap": {
			"source": "iana"
		},
		"application/vnd.yaoweme": {
			"source": "iana"
		},
		"application/vnd.yellowriver-custom-menu": {
			"source": "iana",
			"extensions": [
				"cmp"
			]
		},
		"application/vnd.zul": {
			"source": "iana",
			"extensions": [
				"zir",
				"zirz"
			]
		},
		"application/vnd.zzazz.deck+xml": {
			"source": "iana",
			"extensions": [
				"zaz"
			]
		},
		"application/voicexml+xml": {
			"source": "iana",
			"extensions": [
				"vxml"
			]
		},
		"application/vq-rtcpxr": {
			"source": "iana"
		},
		"application/watcherinfo+xml": {
			"source": "iana"
		},
		"application/whoispp-query": {
			"source": "iana"
		},
		"application/whoispp-response": {
			"source": "iana"
		},
		"application/widget": {
			"source": "iana",
			"extensions": [
				"wgt"
			]
		},
		"application/winhlp": {
			"source": "apache",
			"extensions": [
				"hlp"
			]
		},
		"application/wita": {
			"source": "iana"
		},
		"application/wordperfect5.1": {
			"source": "iana"
		},
		"application/wsdl+xml": {
			"source": "iana",
			"extensions": [
				"wsdl"
			]
		},
		"application/wspolicy+xml": {
			"source": "iana",
			"extensions": [
				"wspolicy"
			]
		},
		"application/x-7z-compressed": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"7z"
			]
		},
		"application/x-abiword": {
			"source": "apache",
			"extensions": [
				"abw"
			]
		},
		"application/x-ace-compressed": {
			"source": "apache",
			"extensions": [
				"ace"
			]
		},
		"application/x-amf": {
			"source": "apache"
		},
		"application/x-apple-diskimage": {
			"source": "apache",
			"extensions": [
				"dmg"
			]
		},
		"application/x-authorware-bin": {
			"source": "apache",
			"extensions": [
				"aab",
				"x32",
				"u32",
				"vox"
			]
		},
		"application/x-authorware-map": {
			"source": "apache",
			"extensions": [
				"aam"
			]
		},
		"application/x-authorware-seg": {
			"source": "apache",
			"extensions": [
				"aas"
			]
		},
		"application/x-bcpio": {
			"source": "apache",
			"extensions": [
				"bcpio"
			]
		},
		"application/x-bdoc": {
			"compressible": false,
			"extensions": [
				"bdoc"
			]
		},
		"application/x-bittorrent": {
			"source": "apache",
			"extensions": [
				"torrent"
			]
		},
		"application/x-blorb": {
			"source": "apache",
			"extensions": [
				"blb",
				"blorb"
			]
		},
		"application/x-bzip": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"bz"
			]
		},
		"application/x-bzip2": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"bz2",
				"boz"
			]
		},
		"application/x-cbr": {
			"source": "apache",
			"extensions": [
				"cbr",
				"cba",
				"cbt",
				"cbz",
				"cb7"
			]
		},
		"application/x-cdlink": {
			"source": "apache",
			"extensions": [
				"vcd"
			]
		},
		"application/x-cfs-compressed": {
			"source": "apache",
			"extensions": [
				"cfs"
			]
		},
		"application/x-chat": {
			"source": "apache",
			"extensions": [
				"chat"
			]
		},
		"application/x-chess-pgn": {
			"source": "apache",
			"extensions": [
				"pgn"
			]
		},
		"application/x-chrome-extension": {
			"extensions": [
				"crx"
			]
		},
		"application/x-cocoa": {
			"source": "nginx",
			"extensions": [
				"cco"
			]
		},
		"application/x-compress": {
			"source": "apache"
		},
		"application/x-conference": {
			"source": "apache",
			"extensions": [
				"nsc"
			]
		},
		"application/x-cpio": {
			"source": "apache",
			"extensions": [
				"cpio"
			]
		},
		"application/x-csh": {
			"source": "apache",
			"extensions": [
				"csh"
			]
		},
		"application/x-deb": {
			"compressible": false
		},
		"application/x-debian-package": {
			"source": "apache",
			"extensions": [
				"deb",
				"udeb"
			]
		},
		"application/x-dgc-compressed": {
			"source": "apache",
			"extensions": [
				"dgc"
			]
		},
		"application/x-director": {
			"source": "apache",
			"extensions": [
				"dir",
				"dcr",
				"dxr",
				"cst",
				"cct",
				"cxt",
				"w3d",
				"fgd",
				"swa"
			]
		},
		"application/x-doom": {
			"source": "apache",
			"extensions": [
				"wad"
			]
		},
		"application/x-dtbncx+xml": {
			"source": "apache",
			"extensions": [
				"ncx"
			]
		},
		"application/x-dtbook+xml": {
			"source": "apache",
			"extensions": [
				"dtb"
			]
		},
		"application/x-dtbresource+xml": {
			"source": "apache",
			"extensions": [
				"res"
			]
		},
		"application/x-dvi": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"dvi"
			]
		},
		"application/x-envoy": {
			"source": "apache",
			"extensions": [
				"evy"
			]
		},
		"application/x-eva": {
			"source": "apache",
			"extensions": [
				"eva"
			]
		},
		"application/x-font-bdf": {
			"source": "apache",
			"extensions": [
				"bdf"
			]
		},
		"application/x-font-dos": {
			"source": "apache"
		},
		"application/x-font-framemaker": {
			"source": "apache"
		},
		"application/x-font-ghostscript": {
			"source": "apache",
			"extensions": [
				"gsf"
			]
		},
		"application/x-font-libgrx": {
			"source": "apache"
		},
		"application/x-font-linux-psf": {
			"source": "apache",
			"extensions": [
				"psf"
			]
		},
		"application/x-font-otf": {
			"source": "apache",
			"compressible": true,
			"extensions": [
				"otf"
			]
		},
		"application/x-font-pcf": {
			"source": "apache",
			"extensions": [
				"pcf"
			]
		},
		"application/x-font-snf": {
			"source": "apache",
			"extensions": [
				"snf"
			]
		},
		"application/x-font-speedo": {
			"source": "apache"
		},
		"application/x-font-sunos-news": {
			"source": "apache"
		},
		"application/x-font-ttf": {
			"source": "apache",
			"compressible": true,
			"extensions": [
				"ttf",
				"ttc"
			]
		},
		"application/x-font-type1": {
			"source": "apache",
			"extensions": [
				"pfa",
				"pfb",
				"pfm",
				"afm"
			]
		},
		"application/x-font-vfont": {
			"source": "apache"
		},
		"application/x-freearc": {
			"source": "apache",
			"extensions": [
				"arc"
			]
		},
		"application/x-futuresplash": {
			"source": "apache",
			"extensions": [
				"spl"
			]
		},
		"application/x-gca-compressed": {
			"source": "apache",
			"extensions": [
				"gca"
			]
		},
		"application/x-glulx": {
			"source": "apache",
			"extensions": [
				"ulx"
			]
		},
		"application/x-gnumeric": {
			"source": "apache",
			"extensions": [
				"gnumeric"
			]
		},
		"application/x-gramps-xml": {
			"source": "apache",
			"extensions": [
				"gramps"
			]
		},
		"application/x-gtar": {
			"source": "apache",
			"extensions": [
				"gtar"
			]
		},
		"application/x-gzip": {
			"source": "apache"
		},
		"application/x-hdf": {
			"source": "apache",
			"extensions": [
				"hdf"
			]
		},
		"application/x-httpd-php": {
			"compressible": true,
			"extensions": [
				"php"
			]
		},
		"application/x-install-instructions": {
			"source": "apache",
			"extensions": [
				"install"
			]
		},
		"application/x-iso9660-image": {
			"source": "apache",
			"extensions": [
				"iso"
			]
		},
		"application/x-java-archive-diff": {
			"source": "nginx",
			"extensions": [
				"jardiff"
			]
		},
		"application/x-java-jnlp-file": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"jnlp"
			]
		},
		"application/x-javascript": {
			"compressible": true
		},
		"application/x-latex": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"latex"
			]
		},
		"application/x-lua-bytecode": {
			"extensions": [
				"luac"
			]
		},
		"application/x-lzh-compressed": {
			"source": "apache",
			"extensions": [
				"lzh",
				"lha"
			]
		},
		"application/x-makeself": {
			"source": "nginx",
			"extensions": [
				"run"
			]
		},
		"application/x-mie": {
			"source": "apache",
			"extensions": [
				"mie"
			]
		},
		"application/x-mobipocket-ebook": {
			"source": "apache",
			"extensions": [
				"prc",
				"mobi"
			]
		},
		"application/x-mpegurl": {
			"compressible": false
		},
		"application/x-ms-application": {
			"source": "apache",
			"extensions": [
				"application"
			]
		},
		"application/x-ms-shortcut": {
			"source": "apache",
			"extensions": [
				"lnk"
			]
		},
		"application/x-ms-wmd": {
			"source": "apache",
			"extensions": [
				"wmd"
			]
		},
		"application/x-ms-wmz": {
			"source": "apache",
			"extensions": [
				"wmz"
			]
		},
		"application/x-ms-xbap": {
			"source": "apache",
			"extensions": [
				"xbap"
			]
		},
		"application/x-msaccess": {
			"source": "apache",
			"extensions": [
				"mdb"
			]
		},
		"application/x-msbinder": {
			"source": "apache",
			"extensions": [
				"obd"
			]
		},
		"application/x-mscardfile": {
			"source": "apache",
			"extensions": [
				"crd"
			]
		},
		"application/x-msclip": {
			"source": "apache",
			"extensions": [
				"clp"
			]
		},
		"application/x-msdos-program": {
			"extensions": [
				"exe"
			]
		},
		"application/x-msdownload": {
			"source": "apache",
			"extensions": [
				"exe",
				"dll",
				"com",
				"bat",
				"msi"
			]
		},
		"application/x-msmediaview": {
			"source": "apache",
			"extensions": [
				"mvb",
				"m13",
				"m14"
			]
		},
		"application/x-msmetafile": {
			"source": "apache",
			"extensions": [
				"wmf",
				"wmz",
				"emf",
				"emz"
			]
		},
		"application/x-msmoney": {
			"source": "apache",
			"extensions": [
				"mny"
			]
		},
		"application/x-mspublisher": {
			"source": "apache",
			"extensions": [
				"pub"
			]
		},
		"application/x-msschedule": {
			"source": "apache",
			"extensions": [
				"scd"
			]
		},
		"application/x-msterminal": {
			"source": "apache",
			"extensions": [
				"trm"
			]
		},
		"application/x-mswrite": {
			"source": "apache",
			"extensions": [
				"wri"
			]
		},
		"application/x-netcdf": {
			"source": "apache",
			"extensions": [
				"nc",
				"cdf"
			]
		},
		"application/x-ns-proxy-autoconfig": {
			"compressible": true,
			"extensions": [
				"pac"
			]
		},
		"application/x-nzb": {
			"source": "apache",
			"extensions": [
				"nzb"
			]
		},
		"application/x-perl": {
			"source": "nginx",
			"extensions": [
				"pl",
				"pm"
			]
		},
		"application/x-pilot": {
			"source": "nginx",
			"extensions": [
				"prc",
				"pdb"
			]
		},
		"application/x-pkcs12": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"p12",
				"pfx"
			]
		},
		"application/x-pkcs7-certificates": {
			"source": "apache",
			"extensions": [
				"p7b",
				"spc"
			]
		},
		"application/x-pkcs7-certreqresp": {
			"source": "apache",
			"extensions": [
				"p7r"
			]
		},
		"application/x-rar-compressed": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"rar"
			]
		},
		"application/x-redhat-package-manager": {
			"source": "nginx",
			"extensions": [
				"rpm"
			]
		},
		"application/x-research-info-systems": {
			"source": "apache",
			"extensions": [
				"ris"
			]
		},
		"application/x-sea": {
			"source": "nginx",
			"extensions": [
				"sea"
			]
		},
		"application/x-sh": {
			"source": "apache",
			"compressible": true,
			"extensions": [
				"sh"
			]
		},
		"application/x-shar": {
			"source": "apache",
			"extensions": [
				"shar"
			]
		},
		"application/x-shockwave-flash": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"swf"
			]
		},
		"application/x-silverlight-app": {
			"source": "apache",
			"extensions": [
				"xap"
			]
		},
		"application/x-sql": {
			"source": "apache",
			"extensions": [
				"sql"
			]
		},
		"application/x-stuffit": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"sit"
			]
		},
		"application/x-stuffitx": {
			"source": "apache",
			"extensions": [
				"sitx"
			]
		},
		"application/x-subrip": {
			"source": "apache",
			"extensions": [
				"srt"
			]
		},
		"application/x-sv4cpio": {
			"source": "apache",
			"extensions": [
				"sv4cpio"
			]
		},
		"application/x-sv4crc": {
			"source": "apache",
			"extensions": [
				"sv4crc"
			]
		},
		"application/x-t3vm-image": {
			"source": "apache",
			"extensions": [
				"t3"
			]
		},
		"application/x-tads": {
			"source": "apache",
			"extensions": [
				"gam"
			]
		},
		"application/x-tar": {
			"source": "apache",
			"compressible": true,
			"extensions": [
				"tar"
			]
		},
		"application/x-tcl": {
			"source": "apache",
			"extensions": [
				"tcl",
				"tk"
			]
		},
		"application/x-tex": {
			"source": "apache",
			"extensions": [
				"tex"
			]
		},
		"application/x-tex-tfm": {
			"source": "apache",
			"extensions": [
				"tfm"
			]
		},
		"application/x-texinfo": {
			"source": "apache",
			"extensions": [
				"texinfo",
				"texi"
			]
		},
		"application/x-tgif": {
			"source": "apache",
			"extensions": [
				"obj"
			]
		},
		"application/x-ustar": {
			"source": "apache",
			"extensions": [
				"ustar"
			]
		},
		"application/x-wais-source": {
			"source": "apache",
			"extensions": [
				"src"
			]
		},
		"application/x-web-app-manifest+json": {
			"compressible": true,
			"extensions": [
				"webapp"
			]
		},
		"application/x-www-form-urlencoded": {
			"source": "iana",
			"compressible": true
		},
		"application/x-x509-ca-cert": {
			"source": "apache",
			"extensions": [
				"der",
				"crt",
				"pem"
			]
		},
		"application/x-xfig": {
			"source": "apache",
			"extensions": [
				"fig"
			]
		},
		"application/x-xliff+xml": {
			"source": "apache",
			"extensions": [
				"xlf"
			]
		},
		"application/x-xpinstall": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"xpi"
			]
		},
		"application/x-xz": {
			"source": "apache",
			"extensions": [
				"xz"
			]
		},
		"application/x-zmachine": {
			"source": "apache",
			"extensions": [
				"z1",
				"z2",
				"z3",
				"z4",
				"z5",
				"z6",
				"z7",
				"z8"
			]
		},
		"application/x400-bp": {
			"source": "iana"
		},
		"application/xacml+xml": {
			"source": "iana"
		},
		"application/xaml+xml": {
			"source": "apache",
			"extensions": [
				"xaml"
			]
		},
		"application/xcap-att+xml": {
			"source": "iana"
		},
		"application/xcap-caps+xml": {
			"source": "iana"
		},
		"application/xcap-diff+xml": {
			"source": "iana",
			"extensions": [
				"xdf"
			]
		},
		"application/xcap-el+xml": {
			"source": "iana"
		},
		"application/xcap-error+xml": {
			"source": "iana"
		},
		"application/xcap-ns+xml": {
			"source": "iana"
		},
		"application/xcon-conference-info+xml": {
			"source": "iana"
		},
		"application/xcon-conference-info-diff+xml": {
			"source": "iana"
		},
		"application/xenc+xml": {
			"source": "iana",
			"extensions": [
				"xenc"
			]
		},
		"application/xhtml+xml": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"xhtml",
				"xht"
			]
		},
		"application/xhtml-voice+xml": {
			"source": "apache"
		},
		"application/xml": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"xml",
				"xsl",
				"xsd"
			]
		},
		"application/xml-dtd": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"dtd"
			]
		},
		"application/xml-external-parsed-entity": {
			"source": "iana"
		},
		"application/xml-patch+xml": {
			"source": "iana"
		},
		"application/xmpp+xml": {
			"source": "iana"
		},
		"application/xop+xml": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"xop"
			]
		},
		"application/xproc+xml": {
			"source": "apache",
			"extensions": [
				"xpl"
			]
		},
		"application/xslt+xml": {
			"source": "iana",
			"extensions": [
				"xslt"
			]
		},
		"application/xspf+xml": {
			"source": "apache",
			"extensions": [
				"xspf"
			]
		},
		"application/xv+xml": {
			"source": "iana",
			"extensions": [
				"mxml",
				"xhvml",
				"xvml",
				"xvm"
			]
		},
		"application/yang": {
			"source": "iana",
			"extensions": [
				"yang"
			]
		},
		"application/yin+xml": {
			"source": "iana",
			"extensions": [
				"yin"
			]
		},
		"application/zip": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"zip"
			]
		},
		"application/zlib": {
			"source": "iana"
		},
		"audio/1d-interleaved-parityfec": {
			"source": "iana"
		},
		"audio/32kadpcm": {
			"source": "iana"
		},
		"audio/3gpp": {
			"source": "iana"
		},
		"audio/3gpp2": {
			"source": "iana"
		},
		"audio/ac3": {
			"source": "iana"
		},
		"audio/adpcm": {
			"source": "apache",
			"extensions": [
				"adp"
			]
		},
		"audio/amr": {
			"source": "iana"
		},
		"audio/amr-wb": {
			"source": "iana"
		},
		"audio/amr-wb+": {
			"source": "iana"
		},
		"audio/aptx": {
			"source": "iana"
		},
		"audio/asc": {
			"source": "iana"
		},
		"audio/atrac-advanced-lossless": {
			"source": "iana"
		},
		"audio/atrac-x": {
			"source": "iana"
		},
		"audio/atrac3": {
			"source": "iana"
		},
		"audio/basic": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"au",
				"snd"
			]
		},
		"audio/bv16": {
			"source": "iana"
		},
		"audio/bv32": {
			"source": "iana"
		},
		"audio/clearmode": {
			"source": "iana"
		},
		"audio/cn": {
			"source": "iana"
		},
		"audio/dat12": {
			"source": "iana"
		},
		"audio/dls": {
			"source": "iana"
		},
		"audio/dsr-es201108": {
			"source": "iana"
		},
		"audio/dsr-es202050": {
			"source": "iana"
		},
		"audio/dsr-es202211": {
			"source": "iana"
		},
		"audio/dsr-es202212": {
			"source": "iana"
		},
		"audio/dv": {
			"source": "iana"
		},
		"audio/dvi4": {
			"source": "iana"
		},
		"audio/eac3": {
			"source": "iana"
		},
		"audio/encaprtp": {
			"source": "iana"
		},
		"audio/evrc": {
			"source": "iana"
		},
		"audio/evrc-qcp": {
			"source": "iana"
		},
		"audio/evrc0": {
			"source": "iana"
		},
		"audio/evrc1": {
			"source": "iana"
		},
		"audio/evrcb": {
			"source": "iana"
		},
		"audio/evrcb0": {
			"source": "iana"
		},
		"audio/evrcb1": {
			"source": "iana"
		},
		"audio/evrcnw": {
			"source": "iana"
		},
		"audio/evrcnw0": {
			"source": "iana"
		},
		"audio/evrcnw1": {
			"source": "iana"
		},
		"audio/evrcwb": {
			"source": "iana"
		},
		"audio/evrcwb0": {
			"source": "iana"
		},
		"audio/evrcwb1": {
			"source": "iana"
		},
		"audio/fwdred": {
			"source": "iana"
		},
		"audio/g711-0": {
			"source": "iana"
		},
		"audio/g719": {
			"source": "iana"
		},
		"audio/g722": {
			"source": "iana"
		},
		"audio/g7221": {
			"source": "iana"
		},
		"audio/g723": {
			"source": "iana"
		},
		"audio/g726-16": {
			"source": "iana"
		},
		"audio/g726-24": {
			"source": "iana"
		},
		"audio/g726-32": {
			"source": "iana"
		},
		"audio/g726-40": {
			"source": "iana"
		},
		"audio/g728": {
			"source": "iana"
		},
		"audio/g729": {
			"source": "iana"
		},
		"audio/g7291": {
			"source": "iana"
		},
		"audio/g729d": {
			"source": "iana"
		},
		"audio/g729e": {
			"source": "iana"
		},
		"audio/gsm": {
			"source": "iana"
		},
		"audio/gsm-efr": {
			"source": "iana"
		},
		"audio/gsm-hr-08": {
			"source": "iana"
		},
		"audio/ilbc": {
			"source": "iana"
		},
		"audio/ip-mr_v2.5": {
			"source": "iana"
		},
		"audio/isac": {
			"source": "apache"
		},
		"audio/l16": {
			"source": "iana"
		},
		"audio/l20": {
			"source": "iana"
		},
		"audio/l24": {
			"source": "iana",
			"compressible": false
		},
		"audio/l8": {
			"source": "iana"
		},
		"audio/lpc": {
			"source": "iana"
		},
		"audio/midi": {
			"source": "apache",
			"extensions": [
				"mid",
				"midi",
				"kar",
				"rmi"
			]
		},
		"audio/mobile-xmf": {
			"source": "iana"
		},
		"audio/mp4": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"mp4a",
				"m4a"
			]
		},
		"audio/mp4a-latm": {
			"source": "iana"
		},
		"audio/mpa": {
			"source": "iana"
		},
		"audio/mpa-robust": {
			"source": "iana"
		},
		"audio/mpeg": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"mpga",
				"mp2",
				"mp2a",
				"mp3",
				"m2a",
				"m3a"
			]
		},
		"audio/mpeg4-generic": {
			"source": "iana"
		},
		"audio/musepack": {
			"source": "apache"
		},
		"audio/ogg": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"oga",
				"ogg",
				"spx"
			]
		},
		"audio/opus": {
			"source": "iana"
		},
		"audio/parityfec": {
			"source": "iana"
		},
		"audio/pcma": {
			"source": "iana"
		},
		"audio/pcma-wb": {
			"source": "iana"
		},
		"audio/pcmu": {
			"source": "iana"
		},
		"audio/pcmu-wb": {
			"source": "iana"
		},
		"audio/prs.sid": {
			"source": "iana"
		},
		"audio/qcelp": {
			"source": "iana"
		},
		"audio/raptorfec": {
			"source": "iana"
		},
		"audio/red": {
			"source": "iana"
		},
		"audio/rtp-enc-aescm128": {
			"source": "iana"
		},
		"audio/rtp-midi": {
			"source": "iana"
		},
		"audio/rtploopback": {
			"source": "iana"
		},
		"audio/rtx": {
			"source": "iana"
		},
		"audio/s3m": {
			"source": "apache",
			"extensions": [
				"s3m"
			]
		},
		"audio/silk": {
			"source": "apache",
			"extensions": [
				"sil"
			]
		},
		"audio/smv": {
			"source": "iana"
		},
		"audio/smv-qcp": {
			"source": "iana"
		},
		"audio/smv0": {
			"source": "iana"
		},
		"audio/sp-midi": {
			"source": "iana"
		},
		"audio/speex": {
			"source": "iana"
		},
		"audio/t140c": {
			"source": "iana"
		},
		"audio/t38": {
			"source": "iana"
		},
		"audio/telephone-event": {
			"source": "iana"
		},
		"audio/tone": {
			"source": "iana"
		},
		"audio/uemclip": {
			"source": "iana"
		},
		"audio/ulpfec": {
			"source": "iana"
		},
		"audio/vdvi": {
			"source": "iana"
		},
		"audio/vmr-wb": {
			"source": "iana"
		},
		"audio/vnd.3gpp.iufp": {
			"source": "iana"
		},
		"audio/vnd.4sb": {
			"source": "iana"
		},
		"audio/vnd.audiokoz": {
			"source": "iana"
		},
		"audio/vnd.celp": {
			"source": "iana"
		},
		"audio/vnd.cisco.nse": {
			"source": "iana"
		},
		"audio/vnd.cmles.radio-events": {
			"source": "iana"
		},
		"audio/vnd.cns.anp1": {
			"source": "iana"
		},
		"audio/vnd.cns.inf1": {
			"source": "iana"
		},
		"audio/vnd.dece.audio": {
			"source": "iana",
			"extensions": [
				"uva",
				"uvva"
			]
		},
		"audio/vnd.digital-winds": {
			"source": "iana",
			"extensions": [
				"eol"
			]
		},
		"audio/vnd.dlna.adts": {
			"source": "iana"
		},
		"audio/vnd.dolby.heaac.1": {
			"source": "iana"
		},
		"audio/vnd.dolby.heaac.2": {
			"source": "iana"
		},
		"audio/vnd.dolby.mlp": {
			"source": "iana"
		},
		"audio/vnd.dolby.mps": {
			"source": "iana"
		},
		"audio/vnd.dolby.pl2": {
			"source": "iana"
		},
		"audio/vnd.dolby.pl2x": {
			"source": "iana"
		},
		"audio/vnd.dolby.pl2z": {
			"source": "iana"
		},
		"audio/vnd.dolby.pulse.1": {
			"source": "iana"
		},
		"audio/vnd.dra": {
			"source": "iana",
			"extensions": [
				"dra"
			]
		},
		"audio/vnd.dts": {
			"source": "iana",
			"extensions": [
				"dts"
			]
		},
		"audio/vnd.dts.hd": {
			"source": "iana",
			"extensions": [
				"dtshd"
			]
		},
		"audio/vnd.dvb.file": {
			"source": "iana"
		},
		"audio/vnd.everad.plj": {
			"source": "iana"
		},
		"audio/vnd.hns.audio": {
			"source": "iana"
		},
		"audio/vnd.lucent.voice": {
			"source": "iana",
			"extensions": [
				"lvp"
			]
		},
		"audio/vnd.ms-playready.media.pya": {
			"source": "iana",
			"extensions": [
				"pya"
			]
		},
		"audio/vnd.nokia.mobile-xmf": {
			"source": "iana"
		},
		"audio/vnd.nortel.vbk": {
			"source": "iana"
		},
		"audio/vnd.nuera.ecelp4800": {
			"source": "iana",
			"extensions": [
				"ecelp4800"
			]
		},
		"audio/vnd.nuera.ecelp7470": {
			"source": "iana",
			"extensions": [
				"ecelp7470"
			]
		},
		"audio/vnd.nuera.ecelp9600": {
			"source": "iana",
			"extensions": [
				"ecelp9600"
			]
		},
		"audio/vnd.octel.sbc": {
			"source": "iana"
		},
		"audio/vnd.qcelp": {
			"source": "iana"
		},
		"audio/vnd.rhetorex.32kadpcm": {
			"source": "iana"
		},
		"audio/vnd.rip": {
			"source": "iana",
			"extensions": [
				"rip"
			]
		},
		"audio/vnd.rn-realaudio": {
			"compressible": false
		},
		"audio/vnd.sealedmedia.softseal.mpeg": {
			"source": "iana"
		},
		"audio/vnd.vmx.cvsd": {
			"source": "iana"
		},
		"audio/vnd.wave": {
			"compressible": false
		},
		"audio/vorbis": {
			"source": "iana",
			"compressible": false
		},
		"audio/vorbis-config": {
			"source": "iana"
		},
		"audio/wav": {
			"compressible": false,
			"extensions": [
				"wav"
			]
		},
		"audio/wave": {
			"compressible": false,
			"extensions": [
				"wav"
			]
		},
		"audio/webm": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"weba"
			]
		},
		"audio/x-aac": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"aac"
			]
		},
		"audio/x-aiff": {
			"source": "apache",
			"extensions": [
				"aif",
				"aiff",
				"aifc"
			]
		},
		"audio/x-caf": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"caf"
			]
		},
		"audio/x-flac": {
			"source": "apache",
			"extensions": [
				"flac"
			]
		},
		"audio/x-m4a": {
			"source": "nginx",
			"extensions": [
				"m4a"
			]
		},
		"audio/x-matroska": {
			"source": "apache",
			"extensions": [
				"mka"
			]
		},
		"audio/x-mpegurl": {
			"source": "apache",
			"extensions": [
				"m3u"
			]
		},
		"audio/x-ms-wax": {
			"source": "apache",
			"extensions": [
				"wax"
			]
		},
		"audio/x-ms-wma": {
			"source": "apache",
			"extensions": [
				"wma"
			]
		},
		"audio/x-pn-realaudio": {
			"source": "apache",
			"extensions": [
				"ram",
				"ra"
			]
		},
		"audio/x-pn-realaudio-plugin": {
			"source": "apache",
			"extensions": [
				"rmp"
			]
		},
		"audio/x-realaudio": {
			"source": "nginx",
			"extensions": [
				"ra"
			]
		},
		"audio/x-tta": {
			"source": "apache"
		},
		"audio/x-wav": {
			"source": "apache",
			"extensions": [
				"wav"
			]
		},
		"audio/xm": {
			"source": "apache",
			"extensions": [
				"xm"
			]
		},
		"chemical/x-cdx": {
			"source": "apache",
			"extensions": [
				"cdx"
			]
		},
		"chemical/x-cif": {
			"source": "apache",
			"extensions": [
				"cif"
			]
		},
		"chemical/x-cmdf": {
			"source": "apache",
			"extensions": [
				"cmdf"
			]
		},
		"chemical/x-cml": {
			"source": "apache",
			"extensions": [
				"cml"
			]
		},
		"chemical/x-csml": {
			"source": "apache",
			"extensions": [
				"csml"
			]
		},
		"chemical/x-pdb": {
			"source": "apache"
		},
		"chemical/x-xyz": {
			"source": "apache",
			"extensions": [
				"xyz"
			]
		},
		"font/opentype": {
			"compressible": true,
			"extensions": [
				"otf"
			]
		},
		"image/bmp": {
			"source": "apache",
			"compressible": true,
			"extensions": [
				"bmp"
			]
		},
		"image/cgm": {
			"source": "iana",
			"extensions": [
				"cgm"
			]
		},
		"image/fits": {
			"source": "iana"
		},
		"image/g3fax": {
			"source": "iana",
			"extensions": [
				"g3"
			]
		},
		"image/gif": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"gif"
			]
		},
		"image/ief": {
			"source": "iana",
			"extensions": [
				"ief"
			]
		},
		"image/jp2": {
			"source": "iana"
		},
		"image/jpeg": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"jpeg",
				"jpg",
				"jpe"
			]
		},
		"image/jpm": {
			"source": "iana"
		},
		"image/jpx": {
			"source": "iana"
		},
		"image/ktx": {
			"source": "iana",
			"extensions": [
				"ktx"
			]
		},
		"image/naplps": {
			"source": "iana"
		},
		"image/pjpeg": {
			"compressible": false
		},
		"image/png": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"png"
			]
		},
		"image/prs.btif": {
			"source": "iana",
			"extensions": [
				"btif"
			]
		},
		"image/prs.pti": {
			"source": "iana"
		},
		"image/pwg-raster": {
			"source": "iana"
		},
		"image/sgi": {
			"source": "apache",
			"extensions": [
				"sgi"
			]
		},
		"image/svg+xml": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"svg",
				"svgz"
			]
		},
		"image/t38": {
			"source": "iana"
		},
		"image/tiff": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"tiff",
				"tif"
			]
		},
		"image/tiff-fx": {
			"source": "iana"
		},
		"image/vnd.adobe.photoshop": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"psd"
			]
		},
		"image/vnd.airzip.accelerator.azv": {
			"source": "iana"
		},
		"image/vnd.cns.inf2": {
			"source": "iana"
		},
		"image/vnd.dece.graphic": {
			"source": "iana",
			"extensions": [
				"uvi",
				"uvvi",
				"uvg",
				"uvvg"
			]
		},
		"image/vnd.djvu": {
			"source": "iana",
			"extensions": [
				"djvu",
				"djv"
			]
		},
		"image/vnd.dvb.subtitle": {
			"source": "iana",
			"extensions": [
				"sub"
			]
		},
		"image/vnd.dwg": {
			"source": "iana",
			"extensions": [
				"dwg"
			]
		},
		"image/vnd.dxf": {
			"source": "iana",
			"extensions": [
				"dxf"
			]
		},
		"image/vnd.fastbidsheet": {
			"source": "iana",
			"extensions": [
				"fbs"
			]
		},
		"image/vnd.fpx": {
			"source": "iana",
			"extensions": [
				"fpx"
			]
		},
		"image/vnd.fst": {
			"source": "iana",
			"extensions": [
				"fst"
			]
		},
		"image/vnd.fujixerox.edmics-mmr": {
			"source": "iana",
			"extensions": [
				"mmr"
			]
		},
		"image/vnd.fujixerox.edmics-rlc": {
			"source": "iana",
			"extensions": [
				"rlc"
			]
		},
		"image/vnd.globalgraphics.pgb": {
			"source": "iana"
		},
		"image/vnd.microsoft.icon": {
			"source": "iana"
		},
		"image/vnd.mix": {
			"source": "iana"
		},
		"image/vnd.mozilla.apng": {
			"source": "iana"
		},
		"image/vnd.ms-modi": {
			"source": "iana",
			"extensions": [
				"mdi"
			]
		},
		"image/vnd.ms-photo": {
			"source": "apache",
			"extensions": [
				"wdp"
			]
		},
		"image/vnd.net-fpx": {
			"source": "iana",
			"extensions": [
				"npx"
			]
		},
		"image/vnd.radiance": {
			"source": "iana"
		},
		"image/vnd.sealed.png": {
			"source": "iana"
		},
		"image/vnd.sealedmedia.softseal.gif": {
			"source": "iana"
		},
		"image/vnd.sealedmedia.softseal.jpg": {
			"source": "iana"
		},
		"image/vnd.svf": {
			"source": "iana"
		},
		"image/vnd.tencent.tap": {
			"source": "iana"
		},
		"image/vnd.valve.source.texture": {
			"source": "iana"
		},
		"image/vnd.wap.wbmp": {
			"source": "iana",
			"extensions": [
				"wbmp"
			]
		},
		"image/vnd.xiff": {
			"source": "iana",
			"extensions": [
				"xif"
			]
		},
		"image/vnd.zbrush.pcx": {
			"source": "iana"
		},
		"image/webp": {
			"source": "apache",
			"extensions": [
				"webp"
			]
		},
		"image/x-3ds": {
			"source": "apache",
			"extensions": [
				"3ds"
			]
		},
		"image/x-cmu-raster": {
			"source": "apache",
			"extensions": [
				"ras"
			]
		},
		"image/x-cmx": {
			"source": "apache",
			"extensions": [
				"cmx"
			]
		},
		"image/x-freehand": {
			"source": "apache",
			"extensions": [
				"fh",
				"fhc",
				"fh4",
				"fh5",
				"fh7"
			]
		},
		"image/x-icon": {
			"source": "apache",
			"compressible": true,
			"extensions": [
				"ico"
			]
		},
		"image/x-jng": {
			"source": "nginx",
			"extensions": [
				"jng"
			]
		},
		"image/x-mrsid-image": {
			"source": "apache",
			"extensions": [
				"sid"
			]
		},
		"image/x-ms-bmp": {
			"source": "nginx",
			"compressible": true,
			"extensions": [
				"bmp"
			]
		},
		"image/x-pcx": {
			"source": "apache",
			"extensions": [
				"pcx"
			]
		},
		"image/x-pict": {
			"source": "apache",
			"extensions": [
				"pic",
				"pct"
			]
		},
		"image/x-portable-anymap": {
			"source": "apache",
			"extensions": [
				"pnm"
			]
		},
		"image/x-portable-bitmap": {
			"source": "apache",
			"extensions": [
				"pbm"
			]
		},
		"image/x-portable-graymap": {
			"source": "apache",
			"extensions": [
				"pgm"
			]
		},
		"image/x-portable-pixmap": {
			"source": "apache",
			"extensions": [
				"ppm"
			]
		},
		"image/x-rgb": {
			"source": "apache",
			"extensions": [
				"rgb"
			]
		},
		"image/x-tga": {
			"source": "apache",
			"extensions": [
				"tga"
			]
		},
		"image/x-xbitmap": {
			"source": "apache",
			"extensions": [
				"xbm"
			]
		},
		"image/x-xcf": {
			"compressible": false
		},
		"image/x-xpixmap": {
			"source": "apache",
			"extensions": [
				"xpm"
			]
		},
		"image/x-xwindowdump": {
			"source": "apache",
			"extensions": [
				"xwd"
			]
		},
		"message/cpim": {
			"source": "iana"
		},
		"message/delivery-status": {
			"source": "iana"
		},
		"message/disposition-notification": {
			"source": "iana"
		},
		"message/external-body": {
			"source": "iana"
		},
		"message/feedback-report": {
			"source": "iana"
		},
		"message/global": {
			"source": "iana"
		},
		"message/global-delivery-status": {
			"source": "iana"
		},
		"message/global-disposition-notification": {
			"source": "iana"
		},
		"message/global-headers": {
			"source": "iana"
		},
		"message/http": {
			"source": "iana",
			"compressible": false
		},
		"message/imdn+xml": {
			"source": "iana",
			"compressible": true
		},
		"message/news": {
			"source": "iana"
		},
		"message/partial": {
			"source": "iana",
			"compressible": false
		},
		"message/rfc822": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"eml",
				"mime"
			]
		},
		"message/s-http": {
			"source": "iana"
		},
		"message/sip": {
			"source": "iana"
		},
		"message/sipfrag": {
			"source": "iana"
		},
		"message/tracking-status": {
			"source": "iana"
		},
		"message/vnd.si.simp": {
			"source": "iana"
		},
		"message/vnd.wfa.wsc": {
			"source": "iana"
		},
		"model/iges": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"igs",
				"iges"
			]
		},
		"model/mesh": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"msh",
				"mesh",
				"silo"
			]
		},
		"model/vnd.collada+xml": {
			"source": "iana",
			"extensions": [
				"dae"
			]
		},
		"model/vnd.dwf": {
			"source": "iana",
			"extensions": [
				"dwf"
			]
		},
		"model/vnd.flatland.3dml": {
			"source": "iana"
		},
		"model/vnd.gdl": {
			"source": "iana",
			"extensions": [
				"gdl"
			]
		},
		"model/vnd.gs-gdl": {
			"source": "apache"
		},
		"model/vnd.gs.gdl": {
			"source": "iana"
		},
		"model/vnd.gtw": {
			"source": "iana",
			"extensions": [
				"gtw"
			]
		},
		"model/vnd.moml+xml": {
			"source": "iana"
		},
		"model/vnd.mts": {
			"source": "iana",
			"extensions": [
				"mts"
			]
		},
		"model/vnd.opengex": {
			"source": "iana"
		},
		"model/vnd.parasolid.transmit.binary": {
			"source": "iana"
		},
		"model/vnd.parasolid.transmit.text": {
			"source": "iana"
		},
		"model/vnd.valve.source.compiled-map": {
			"source": "iana"
		},
		"model/vnd.vtu": {
			"source": "iana",
			"extensions": [
				"vtu"
			]
		},
		"model/vrml": {
			"source": "iana",
			"compressible": false,
			"extensions": [
				"wrl",
				"vrml"
			]
		},
		"model/x3d+binary": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"x3db",
				"x3dbz"
			]
		},
		"model/x3d+fastinfoset": {
			"source": "iana"
		},
		"model/x3d+vrml": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"x3dv",
				"x3dvz"
			]
		},
		"model/x3d+xml": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"x3d",
				"x3dz"
			]
		},
		"model/x3d-vrml": {
			"source": "iana"
		},
		"multipart/alternative": {
			"source": "iana",
			"compressible": false
		},
		"multipart/appledouble": {
			"source": "iana"
		},
		"multipart/byteranges": {
			"source": "iana"
		},
		"multipart/digest": {
			"source": "iana"
		},
		"multipart/encrypted": {
			"source": "iana",
			"compressible": false
		},
		"multipart/form-data": {
			"source": "iana",
			"compressible": false
		},
		"multipart/header-set": {
			"source": "iana"
		},
		"multipart/mixed": {
			"source": "iana",
			"compressible": false
		},
		"multipart/parallel": {
			"source": "iana"
		},
		"multipart/related": {
			"source": "iana",
			"compressible": false
		},
		"multipart/report": {
			"source": "iana"
		},
		"multipart/signed": {
			"source": "iana",
			"compressible": false
		},
		"multipart/voice-message": {
			"source": "iana"
		},
		"multipart/x-mixed-replace": {
			"source": "iana"
		},
		"text/1d-interleaved-parityfec": {
			"source": "iana"
		},
		"text/cache-manifest": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"appcache",
				"manifest"
			]
		},
		"text/calendar": {
			"source": "iana",
			"extensions": [
				"ics",
				"ifb"
			]
		},
		"text/calender": {
			"compressible": true
		},
		"text/cmd": {
			"compressible": true
		},
		"text/coffeescript": {
			"extensions": [
				"coffee",
				"litcoffee"
			]
		},
		"text/css": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"css"
			]
		},
		"text/csv": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"csv"
			]
		},
		"text/csv-schema": {
			"source": "iana"
		},
		"text/directory": {
			"source": "iana"
		},
		"text/dns": {
			"source": "iana"
		},
		"text/ecmascript": {
			"source": "iana"
		},
		"text/encaprtp": {
			"source": "iana"
		},
		"text/enriched": {
			"source": "iana"
		},
		"text/fwdred": {
			"source": "iana"
		},
		"text/grammar-ref-list": {
			"source": "iana"
		},
		"text/hjson": {
			"extensions": [
				"hjson"
			]
		},
		"text/html": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"html",
				"htm",
				"shtml"
			]
		},
		"text/jade": {
			"extensions": [
				"jade"
			]
		},
		"text/javascript": {
			"source": "iana",
			"compressible": true
		},
		"text/jcr-cnd": {
			"source": "iana"
		},
		"text/jsx": {
			"compressible": true,
			"extensions": [
				"jsx"
			]
		},
		"text/less": {
			"extensions": [
				"less"
			]
		},
		"text/markdown": {
			"source": "iana"
		},
		"text/mathml": {
			"source": "nginx",
			"extensions": [
				"mml"
			]
		},
		"text/mizar": {
			"source": "iana"
		},
		"text/n3": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"n3"
			]
		},
		"text/parameters": {
			"source": "iana"
		},
		"text/parityfec": {
			"source": "iana"
		},
		"text/plain": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"txt",
				"text",
				"conf",
				"def",
				"list",
				"log",
				"in",
				"ini"
			]
		},
		"text/provenance-notation": {
			"source": "iana"
		},
		"text/prs.fallenstein.rst": {
			"source": "iana"
		},
		"text/prs.lines.tag": {
			"source": "iana",
			"extensions": [
				"dsc"
			]
		},
		"text/raptorfec": {
			"source": "iana"
		},
		"text/red": {
			"source": "iana"
		},
		"text/rfc822-headers": {
			"source": "iana"
		},
		"text/richtext": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"rtx"
			]
		},
		"text/rtf": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"rtf"
			]
		},
		"text/rtp-enc-aescm128": {
			"source": "iana"
		},
		"text/rtploopback": {
			"source": "iana"
		},
		"text/rtx": {
			"source": "iana"
		},
		"text/sgml": {
			"source": "iana",
			"extensions": [
				"sgml",
				"sgm"
			]
		},
		"text/stylus": {
			"extensions": [
				"stylus",
				"styl"
			]
		},
		"text/t140": {
			"source": "iana"
		},
		"text/tab-separated-values": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"tsv"
			]
		},
		"text/troff": {
			"source": "iana",
			"extensions": [
				"t",
				"tr",
				"roff",
				"man",
				"me",
				"ms"
			]
		},
		"text/turtle": {
			"source": "iana",
			"extensions": [
				"ttl"
			]
		},
		"text/ulpfec": {
			"source": "iana"
		},
		"text/uri-list": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"uri",
				"uris",
				"urls"
			]
		},
		"text/vcard": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"vcard"
			]
		},
		"text/vnd.a": {
			"source": "iana"
		},
		"text/vnd.abc": {
			"source": "iana"
		},
		"text/vnd.curl": {
			"source": "iana",
			"extensions": [
				"curl"
			]
		},
		"text/vnd.curl.dcurl": {
			"source": "apache",
			"extensions": [
				"dcurl"
			]
		},
		"text/vnd.curl.mcurl": {
			"source": "apache",
			"extensions": [
				"mcurl"
			]
		},
		"text/vnd.curl.scurl": {
			"source": "apache",
			"extensions": [
				"scurl"
			]
		},
		"text/vnd.debian.copyright": {
			"source": "iana"
		},
		"text/vnd.dmclientscript": {
			"source": "iana"
		},
		"text/vnd.dvb.subtitle": {
			"source": "iana",
			"extensions": [
				"sub"
			]
		},
		"text/vnd.esmertec.theme-descriptor": {
			"source": "iana"
		},
		"text/vnd.fly": {
			"source": "iana",
			"extensions": [
				"fly"
			]
		},
		"text/vnd.fmi.flexstor": {
			"source": "iana",
			"extensions": [
				"flx"
			]
		},
		"text/vnd.graphviz": {
			"source": "iana",
			"extensions": [
				"gv"
			]
		},
		"text/vnd.in3d.3dml": {
			"source": "iana",
			"extensions": [
				"3dml"
			]
		},
		"text/vnd.in3d.spot": {
			"source": "iana",
			"extensions": [
				"spot"
			]
		},
		"text/vnd.iptc.newsml": {
			"source": "iana"
		},
		"text/vnd.iptc.nitf": {
			"source": "iana"
		},
		"text/vnd.latex-z": {
			"source": "iana"
		},
		"text/vnd.motorola.reflex": {
			"source": "iana"
		},
		"text/vnd.ms-mediapackage": {
			"source": "iana"
		},
		"text/vnd.net2phone.commcenter.command": {
			"source": "iana"
		},
		"text/vnd.radisys.msml-basic-layout": {
			"source": "iana"
		},
		"text/vnd.si.uricatalogue": {
			"source": "iana"
		},
		"text/vnd.sun.j2me.app-descriptor": {
			"source": "iana",
			"extensions": [
				"jad"
			]
		},
		"text/vnd.trolltech.linguist": {
			"source": "iana"
		},
		"text/vnd.wap.si": {
			"source": "iana"
		},
		"text/vnd.wap.sl": {
			"source": "iana"
		},
		"text/vnd.wap.wml": {
			"source": "iana",
			"extensions": [
				"wml"
			]
		},
		"text/vnd.wap.wmlscript": {
			"source": "iana",
			"extensions": [
				"wmls"
			]
		},
		"text/vtt": {
			"charset": "UTF-8",
			"compressible": true,
			"extensions": [
				"vtt"
			]
		},
		"text/x-asm": {
			"source": "apache",
			"extensions": [
				"s",
				"asm"
			]
		},
		"text/x-c": {
			"source": "apache",
			"extensions": [
				"c",
				"cc",
				"cxx",
				"cpp",
				"h",
				"hh",
				"dic"
			]
		},
		"text/x-component": {
			"source": "nginx",
			"extensions": [
				"htc"
			]
		},
		"text/x-fortran": {
			"source": "apache",
			"extensions": [
				"f",
				"for",
				"f77",
				"f90"
			]
		},
		"text/x-gwt-rpc": {
			"compressible": true
		},
		"text/x-handlebars-template": {
			"extensions": [
				"hbs"
			]
		},
		"text/x-java-source": {
			"source": "apache",
			"extensions": [
				"java"
			]
		},
		"text/x-jquery-tmpl": {
			"compressible": true
		},
		"text/x-lua": {
			"extensions": [
				"lua"
			]
		},
		"text/x-markdown": {
			"compressible": true,
			"extensions": [
				"markdown",
				"md",
				"mkd"
			]
		},
		"text/x-nfo": {
			"source": "apache",
			"extensions": [
				"nfo"
			]
		},
		"text/x-opml": {
			"source": "apache",
			"extensions": [
				"opml"
			]
		},
		"text/x-pascal": {
			"source": "apache",
			"extensions": [
				"p",
				"pas"
			]
		},
		"text/x-processing": {
			"compressible": true,
			"extensions": [
				"pde"
			]
		},
		"text/x-sass": {
			"extensions": [
				"sass"
			]
		},
		"text/x-scss": {
			"extensions": [
				"scss"
			]
		},
		"text/x-setext": {
			"source": "apache",
			"extensions": [
				"etx"
			]
		},
		"text/x-sfv": {
			"source": "apache",
			"extensions": [
				"sfv"
			]
		},
		"text/x-uuencode": {
			"source": "apache",
			"extensions": [
				"uu"
			]
		},
		"text/x-vcalendar": {
			"source": "apache",
			"extensions": [
				"vcs"
			]
		},
		"text/x-vcard": {
			"source": "apache",
			"extensions": [
				"vcf"
			]
		},
		"text/xml": {
			"source": "iana",
			"compressible": true,
			"extensions": [
				"xml"
			]
		},
		"text/xml-external-parsed-entity": {
			"source": "iana"
		},
		"text/yaml": {
			"extensions": [
				"yaml",
				"yml"
			]
		},
		"video/1d-interleaved-parityfec": {
			"source": "apache"
		},
		"video/3gpp": {
			"source": "apache",
			"extensions": [
				"3gp",
				"3gpp"
			]
		},
		"video/3gpp-tt": {
			"source": "apache"
		},
		"video/3gpp2": {
			"source": "apache",
			"extensions": [
				"3g2"
			]
		},
		"video/bmpeg": {
			"source": "apache"
		},
		"video/bt656": {
			"source": "apache"
		},
		"video/celb": {
			"source": "apache"
		},
		"video/dv": {
			"source": "apache"
		},
		"video/h261": {
			"source": "apache",
			"extensions": [
				"h261"
			]
		},
		"video/h263": {
			"source": "apache",
			"extensions": [
				"h263"
			]
		},
		"video/h263-1998": {
			"source": "apache"
		},
		"video/h263-2000": {
			"source": "apache"
		},
		"video/h264": {
			"source": "apache",
			"extensions": [
				"h264"
			]
		},
		"video/h264-rcdo": {
			"source": "apache"
		},
		"video/h264-svc": {
			"source": "apache"
		},
		"video/jpeg": {
			"source": "apache",
			"extensions": [
				"jpgv"
			]
		},
		"video/jpeg2000": {
			"source": "apache"
		},
		"video/jpm": {
			"source": "apache",
			"extensions": [
				"jpm",
				"jpgm"
			]
		},
		"video/mj2": {
			"source": "apache",
			"extensions": [
				"mj2",
				"mjp2"
			]
		},
		"video/mp1s": {
			"source": "apache"
		},
		"video/mp2p": {
			"source": "apache"
		},
		"video/mp2t": {
			"source": "apache",
			"extensions": [
				"ts"
			]
		},
		"video/mp4": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"mp4",
				"mp4v",
				"mpg4"
			]
		},
		"video/mp4v-es": {
			"source": "apache"
		},
		"video/mpeg": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"mpeg",
				"mpg",
				"mpe",
				"m1v",
				"m2v"
			]
		},
		"video/mpeg4-generic": {
			"source": "apache"
		},
		"video/mpv": {
			"source": "apache"
		},
		"video/nv": {
			"source": "apache"
		},
		"video/ogg": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"ogv"
			]
		},
		"video/parityfec": {
			"source": "apache"
		},
		"video/pointer": {
			"source": "apache"
		},
		"video/quicktime": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"qt",
				"mov"
			]
		},
		"video/raw": {
			"source": "apache"
		},
		"video/rtp-enc-aescm128": {
			"source": "apache"
		},
		"video/rtx": {
			"source": "apache"
		},
		"video/smpte292m": {
			"source": "apache"
		},
		"video/ulpfec": {
			"source": "apache"
		},
		"video/vc1": {
			"source": "apache"
		},
		"video/vnd.cctv": {
			"source": "apache"
		},
		"video/vnd.dece.hd": {
			"source": "apache",
			"extensions": [
				"uvh",
				"uvvh"
			]
		},
		"video/vnd.dece.mobile": {
			"source": "apache",
			"extensions": [
				"uvm",
				"uvvm"
			]
		},
		"video/vnd.dece.mp4": {
			"source": "apache"
		},
		"video/vnd.dece.pd": {
			"source": "apache",
			"extensions": [
				"uvp",
				"uvvp"
			]
		},
		"video/vnd.dece.sd": {
			"source": "apache",
			"extensions": [
				"uvs",
				"uvvs"
			]
		},
		"video/vnd.dece.video": {
			"source": "apache",
			"extensions": [
				"uvv",
				"uvvv"
			]
		},
		"video/vnd.directv.mpeg": {
			"source": "apache"
		},
		"video/vnd.directv.mpeg-tts": {
			"source": "apache"
		},
		"video/vnd.dlna.mpeg-tts": {
			"source": "apache"
		},
		"video/vnd.dvb.file": {
			"source": "apache",
			"extensions": [
				"dvb"
			]
		},
		"video/vnd.fvt": {
			"source": "apache",
			"extensions": [
				"fvt"
			]
		},
		"video/vnd.hns.video": {
			"source": "apache"
		},
		"video/vnd.iptvforum.1dparityfec-1010": {
			"source": "apache"
		},
		"video/vnd.iptvforum.1dparityfec-2005": {
			"source": "apache"
		},
		"video/vnd.iptvforum.2dparityfec-1010": {
			"source": "apache"
		},
		"video/vnd.iptvforum.2dparityfec-2005": {
			"source": "apache"
		},
		"video/vnd.iptvforum.ttsavc": {
			"source": "apache"
		},
		"video/vnd.iptvforum.ttsmpeg2": {
			"source": "apache"
		},
		"video/vnd.motorola.video": {
			"source": "apache"
		},
		"video/vnd.motorola.videop": {
			"source": "apache"
		},
		"video/vnd.mpegurl": {
			"source": "apache",
			"extensions": [
				"mxu",
				"m4u"
			]
		},
		"video/vnd.ms-playready.media.pyv": {
			"source": "apache",
			"extensions": [
				"pyv"
			]
		},
		"video/vnd.nokia.interleaved-multimedia": {
			"source": "apache"
		},
		"video/vnd.nokia.videovoip": {
			"source": "apache"
		},
		"video/vnd.objectvideo": {
			"source": "apache"
		},
		"video/vnd.sealed.mpeg1": {
			"source": "apache"
		},
		"video/vnd.sealed.mpeg4": {
			"source": "apache"
		},
		"video/vnd.sealed.swf": {
			"source": "apache"
		},
		"video/vnd.sealedmedia.softseal.mov": {
			"source": "apache"
		},
		"video/vnd.uvvu.mp4": {
			"source": "apache",
			"extensions": [
				"uvu",
				"uvvu"
			]
		},
		"video/vnd.vivo": {
			"source": "apache",
			"extensions": [
				"viv"
			]
		},
		"video/webm": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"webm"
			]
		},
		"video/x-f4v": {
			"source": "apache",
			"extensions": [
				"f4v"
			]
		},
		"video/x-fli": {
			"source": "apache",
			"extensions": [
				"fli"
			]
		},
		"video/x-flv": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"flv"
			]
		},
		"video/x-m4v": {
			"source": "apache",
			"extensions": [
				"m4v"
			]
		},
		"video/x-matroska": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"mkv",
				"mk3d",
				"mks"
			]
		},
		"video/x-mng": {
			"source": "apache",
			"extensions": [
				"mng"
			]
		},
		"video/x-ms-asf": {
			"source": "apache",
			"extensions": [
				"asf",
				"asx"
			]
		},
		"video/x-ms-vob": {
			"source": "apache",
			"extensions": [
				"vob"
			]
		},
		"video/x-ms-wm": {
			"source": "apache",
			"extensions": [
				"wm"
			]
		},
		"video/x-ms-wmv": {
			"source": "apache",
			"compressible": false,
			"extensions": [
				"wmv"
			]
		},
		"video/x-ms-wmx": {
			"source": "apache",
			"extensions": [
				"wmx"
			]
		},
		"video/x-ms-wvx": {
			"source": "apache",
			"extensions": [
				"wvx"
			]
		},
		"video/x-msvideo": {
			"source": "apache",
			"extensions": [
				"avi"
			]
		},
		"video/x-sgi-movie": {
			"source": "apache",
			"extensions": [
				"movie"
			]
		},
		"video/x-smv": {
			"source": "apache",
			"extensions": [
				"smv"
			]
		},
		"x-conference/x-cooltalk": {
			"source": "apache",
			"extensions": [
				"ice"
			]
		},
		"x-shader/x-fragment": {
			"compressible": true
		},
		"x-shader/x-vertex": {
			"compressible": true
		}
	}

/***/ },
/* 588 */
/***/ function(module, exports, __webpack_require__) {

	var util = __webpack_require__(471)
	var Stream = __webpack_require__(480)
	var StringDecoder = __webpack_require__(589).StringDecoder

	module.exports = StringStream
	module.exports.AlignedStringDecoder = AlignedStringDecoder

	function StringStream(from, to) {
	  if (!(this instanceof StringStream)) return new StringStream(from, to)

	  Stream.call(this)

	  if (from == null) from = 'utf8'

	  this.readable = this.writable = true
	  this.paused = false
	  this.toEncoding = (to == null ? from : to)
	  this.fromEncoding = (to == null ? '' : from)
	  this.decoder = new AlignedStringDecoder(this.toEncoding)
	}
	util.inherits(StringStream, Stream)

	StringStream.prototype.write = function(data) {
	  if (!this.writable) {
	    var err = new Error('stream not writable')
	    err.code = 'EPIPE'
	    this.emit('error', err)
	    return false
	  }
	  if (this.fromEncoding) {
	    if (Buffer.isBuffer(data)) data = data.toString()
	    data = new Buffer(data, this.fromEncoding)
	  }
	  var string = this.decoder.write(data)
	  if (string.length) this.emit('data', string)
	  return !this.paused
	}

	StringStream.prototype.flush = function() {
	  if (this.decoder.flush) {
	    var string = this.decoder.flush()
	    if (string.length) this.emit('data', string)
	  }
	}

	StringStream.prototype.end = function() {
	  if (!this.writable && !this.readable) return
	  this.flush()
	  this.emit('end')
	  this.writable = this.readable = false
	  this.destroy()
	}

	StringStream.prototype.destroy = function() {
	  this.decoder = null
	  this.writable = this.readable = false
	  this.emit('close')
	}

	StringStream.prototype.pause = function() {
	  this.paused = true
	}

	StringStream.prototype.resume = function () {
	  if (this.paused) this.emit('drain')
	  this.paused = false
	}

	function AlignedStringDecoder(encoding) {
	  StringDecoder.call(this, encoding)

	  switch (this.encoding) {
	    case 'base64':
	      this.write = alignedWrite
	      this.alignedBuffer = new Buffer(3)
	      this.alignedBytes = 0
	      break
	  }
	}
	util.inherits(AlignedStringDecoder, StringDecoder)

	AlignedStringDecoder.prototype.flush = function() {
	  if (!this.alignedBuffer || !this.alignedBytes) return ''
	  var leftover = this.alignedBuffer.toString(this.encoding, 0, this.alignedBytes)
	  this.alignedBytes = 0
	  return leftover
	}

	function alignedWrite(buffer) {
	  var rem = (this.alignedBytes + buffer.length) % this.alignedBuffer.length
	  if (!rem && !this.alignedBytes) return buffer.toString(this.encoding)

	  var returnBuffer = new Buffer(this.alignedBytes + buffer.length - rem)

	  this.alignedBuffer.copy(returnBuffer, 0, 0, this.alignedBytes)
	  buffer.copy(returnBuffer, this.alignedBytes, 0, buffer.length - rem)

	  buffer.copy(this.alignedBuffer, 0, buffer.length - rem, buffer.length)
	  this.alignedBytes = rem

	  return returnBuffer.toString(this.encoding)
	}


/***/ },
/* 589 */
/***/ function(module, exports) {

	module.exports = require("string_decoder");

/***/ },
/* 590 */
/***/ function(module, exports) {

	function Caseless (dict) {
	  this.dict = dict || {}
	}
	Caseless.prototype.set = function (name, value, clobber) {
	  if (typeof name === 'object') {
	    for (var i in name) {
	      this.set(i, name[i], value)
	    }
	  } else {
	    if (typeof clobber === 'undefined') clobber = true
	    var has = this.has(name)

	    if (!clobber && has) this.dict[has] = this.dict[has] + ',' + value
	    else this.dict[has || name] = value
	    return has
	  }
	}
	Caseless.prototype.has = function (name) {
	  var keys = Object.keys(this.dict)
	    , name = name.toLowerCase()
	    ;
	  for (var i=0;i<keys.length;i++) {
	    if (keys[i].toLowerCase() === name) return keys[i]
	  }
	  return false
	}
	Caseless.prototype.get = function (name) {
	  name = name.toLowerCase()
	  var result, _key
	  var headers = this.dict
	  Object.keys(headers).forEach(function (key) {
	    _key = key.toLowerCase()
	    if (name === _key) result = headers[key]
	  })
	  return result
	}
	Caseless.prototype.swap = function (name) {
	  var has = this.has(name)
	  if (!has) throw new Error('There is no header than matches "'+name+'"')
	  this.dict[name] = this.dict[has]
	  delete this.dict[has]
	}
	Caseless.prototype.del = function (name) {
	  var has = this.has(name)
	  return delete this.dict[has || name]
	}

	module.exports = function (dict) {return new Caseless(dict)}
	module.exports.httpify = function (resp, headers) {
	  var c = new Caseless(headers)
	  resp.setHeader = function (key, value, clobber) {
	    if (typeof value === 'undefined') return
	    return c.set(key, value, clobber)
	  }
	  resp.hasHeader = function (key) {
	    return c.has(key)
	  }
	  resp.getHeader = function (key) {
	    return c.get(key)
	  }
	  resp.removeHeader = function (key) {
	    return c.del(key)
	  }
	  resp.headers = c.dict
	  return c
	}


/***/ },
/* 591 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = ForeverAgent
	ForeverAgent.SSL = ForeverAgentSSL

	var util = __webpack_require__(471)
	  , Agent = __webpack_require__(21).Agent
	  , net = __webpack_require__(529)
	  , tls = __webpack_require__(592)
	  , AgentSSL = __webpack_require__(22).Agent
	  
	function getConnectionName(host, port) {  
	  var name = ''
	  if (typeof host === 'string') {
	    name = host + ':' + port
	  } else {
	    // For node.js v012.0 and iojs-v1.5.1, host is an object. And any existing localAddress is part of the connection name.
	    name = host.host + ':' + host.port + ':' + (host.localAddress ? (host.localAddress + ':') : ':')
	  }
	  return name
	}    

	function ForeverAgent(options) {
	  var self = this
	  self.options = options || {}
	  self.requests = {}
	  self.sockets = {}
	  self.freeSockets = {}
	  self.maxSockets = self.options.maxSockets || Agent.defaultMaxSockets
	  self.minSockets = self.options.minSockets || ForeverAgent.defaultMinSockets
	  self.on('free', function(socket, host, port) {
	    var name = getConnectionName(host, port)

	    if (self.requests[name] && self.requests[name].length) {
	      self.requests[name].shift().onSocket(socket)
	    } else if (self.sockets[name].length < self.minSockets) {
	      if (!self.freeSockets[name]) self.freeSockets[name] = []
	      self.freeSockets[name].push(socket)
	      
	      // if an error happens while we don't use the socket anyway, meh, throw the socket away
	      var onIdleError = function() {
	        socket.destroy()
	      }
	      socket._onIdleError = onIdleError
	      socket.on('error', onIdleError)
	    } else {
	      // If there are no pending requests just destroy the
	      // socket and it will get removed from the pool. This
	      // gets us out of timeout issues and allows us to
	      // default to Connection:keep-alive.
	      socket.destroy()
	    }
	  })

	}
	util.inherits(ForeverAgent, Agent)

	ForeverAgent.defaultMinSockets = 5


	ForeverAgent.prototype.createConnection = net.createConnection
	ForeverAgent.prototype.addRequestNoreuse = Agent.prototype.addRequest
	ForeverAgent.prototype.addRequest = function(req, host, port) {
	  var name = getConnectionName(host, port)
	  
	  if (typeof host !== 'string') {
	    var options = host
	    port = options.port
	    host = options.host
	  }

	  if (this.freeSockets[name] && this.freeSockets[name].length > 0 && !req.useChunkedEncodingByDefault) {
	    var idleSocket = this.freeSockets[name].pop()
	    idleSocket.removeListener('error', idleSocket._onIdleError)
	    delete idleSocket._onIdleError
	    req._reusedSocket = true
	    req.onSocket(idleSocket)
	  } else {
	    this.addRequestNoreuse(req, host, port)
	  }
	}

	ForeverAgent.prototype.removeSocket = function(s, name, host, port) {
	  if (this.sockets[name]) {
	    var index = this.sockets[name].indexOf(s)
	    if (index !== -1) {
	      this.sockets[name].splice(index, 1)
	    }
	  } else if (this.sockets[name] && this.sockets[name].length === 0) {
	    // don't leak
	    delete this.sockets[name]
	    delete this.requests[name]
	  }
	  
	  if (this.freeSockets[name]) {
	    var index = this.freeSockets[name].indexOf(s)
	    if (index !== -1) {
	      this.freeSockets[name].splice(index, 1)
	      if (this.freeSockets[name].length === 0) {
	        delete this.freeSockets[name]
	      }
	    }
	  }

	  if (this.requests[name] && this.requests[name].length) {
	    // If we have pending requests and a socket gets closed a new one
	    // needs to be created to take over in the pool for the one that closed.
	    this.createSocket(name, host, port).emit('free')
	  }
	}

	function ForeverAgentSSL (options) {
	  ForeverAgent.call(this, options)
	}
	util.inherits(ForeverAgentSSL, ForeverAgent)

	ForeverAgentSSL.prototype.createConnection = createConnectionSSL
	ForeverAgentSSL.prototype.addRequestNoreuse = AgentSSL.prototype.addRequest

	function createConnectionSSL (port, host, options) {
	  if (typeof port === 'object') {
	    options = port;
	  } else if (typeof host === 'object') {
	    options = host;
	  } else if (typeof options === 'object') {
	    options = options;
	  } else {
	    options = {};
	  }

	  if (typeof port === 'number') {
	    options.port = port;
	  }

	  if (typeof host === 'string') {
	    options.host = host;
	  }

	  return tls.connect(options);
	}


/***/ },
/* 592 */
/***/ function(module, exports) {

	module.exports = require("tls");

/***/ },
/* 593 */
/***/ function(module, exports, __webpack_require__) {

	var CombinedStream = __webpack_require__(594);
	var util = __webpack_require__(471);
	var path = __webpack_require__(12);
	var http = __webpack_require__(21);
	var https = __webpack_require__(22);
	var parseUrl = __webpack_require__(13).parse;
	var fs = __webpack_require__(11);
	var mime = __webpack_require__(585);
	var async = __webpack_require__(596);

	module.exports = FormData;
	function FormData() {
	  this._overheadLength = 0;
	  this._valueLength = 0;
	  this._lengthRetrievers = [];

	  CombinedStream.call(this);
	}
	util.inherits(FormData, CombinedStream);

	FormData.LINE_BREAK = '\r\n';
	FormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';

	FormData.prototype.append = function(field, value, options) {
	  options = (typeof options === 'string')
	    ? { filename: options }
	    : options || {};

	  var append = CombinedStream.prototype.append.bind(this);

	  // all that streamy business can't handle numbers
	  if (typeof value == 'number') value = ''+value;

	  // https://github.com/felixge/node-form-data/issues/38
	  if (util.isArray(value)) {
	    // Please convert your array into string
	    // the way web server expects it
	    this._error(new Error('Arrays are not supported.'));
	    return;
	  }

	  var header = this._multiPartHeader(field, value, options);
	  var footer = this._multiPartFooter(field, value, options);

	  append(header);
	  append(value);
	  append(footer);

	  // pass along options.knownLength
	  this._trackLength(header, value, options);
	};

	FormData.prototype._trackLength = function(header, value, options) {
	  var valueLength = 0;

	  // used w/ getLengthSync(), when length is known.
	  // e.g. for streaming directly from a remote server,
	  // w/ a known file a size, and not wanting to wait for
	  // incoming file to finish to get its size.
	  if (options.knownLength != null) {
	    valueLength += +options.knownLength;
	  } else if (Buffer.isBuffer(value)) {
	    valueLength = value.length;
	  } else if (typeof value === 'string') {
	    valueLength = Buffer.byteLength(value);
	  }

	  this._valueLength += valueLength;

	  // @check why add CRLF? does this account for custom/multiple CRLFs?
	  this._overheadLength +=
	    Buffer.byteLength(header) +
	    FormData.LINE_BREAK.length;

	  // empty or either doesn't have path or not an http response
	  if (!value || ( !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) )) {
	    return;
	  }

	  // no need to bother with the length
	  if (!options.knownLength)
	  this._lengthRetrievers.push(function(next) {

	    if (value.hasOwnProperty('fd')) {

	      // take read range into a account
	      // `end` = Infinity –> read file till the end
	      //
	      // TODO: Looks like there is bug in Node fs.createReadStream
	      // it doesn't respect `end` options without `start` options
	      // Fix it when node fixes it.
	      // https://github.com/joyent/node/issues/7819
	      if (value.end != undefined && value.end != Infinity && value.start != undefined) {

	        // when end specified
	        // no need to calculate range
	        // inclusive, starts with 0
	        next(null, value.end+1 - (value.start ? value.start : 0));

	      // not that fast snoopy
	      } else {
	        // still need to fetch file size from fs
	        fs.stat(value.path, function(err, stat) {

	          var fileSize;

	          if (err) {
	            next(err);
	            return;
	          }

	          // update final size based on the range options
	          fileSize = stat.size - (value.start ? value.start : 0);
	          next(null, fileSize);
	        });
	      }

	    // or http response
	    } else if (value.hasOwnProperty('httpVersion')) {
	      next(null, +value.headers['content-length']);

	    // or request stream http://github.com/mikeal/request
	    } else if (value.hasOwnProperty('httpModule')) {
	      // wait till response come back
	      value.on('response', function(response) {
	        value.pause();
	        next(null, +response.headers['content-length']);
	      });
	      value.resume();

	    // something else
	    } else {
	      next('Unknown stream');
	    }
	  });
	};

	FormData.prototype._multiPartHeader = function(field, value, options) {
	  // custom header specified (as string)?
	  // it becomes responsible for boundary
	  // (e.g. to handle extra CRLFs on .NET servers)
	  if (options.header != null) {
	    return options.header;
	  }

	  var contents = '';
	  var headers  = {
	    'Content-Disposition': ['form-data', 'name="' + field + '"'],
	    'Content-Type': []
	  };

	  // fs- and request- streams have path property
	  // or use custom filename and/or contentType
	  // TODO: Use request's response mime-type
	  if (options.filename || value.path) {
	    headers['Content-Disposition'].push(
	      'filename="' + path.basename(options.filename || value.path) + '"'
	    );
	    headers['Content-Type'].push(
	      options.contentType ||
	      mime.lookup(options.filename || value.path) ||
	      FormData.DEFAULT_CONTENT_TYPE
	    );
	  // http response has not
	  } else if (value.readable && value.hasOwnProperty('httpVersion')) {
	    headers['Content-Disposition'].push(
	      'filename="' + path.basename(value.client._httpMessage.path) + '"'
	    );
	    headers['Content-Type'].push(
	      options.contentType ||
	      value.headers['content-type'] ||
	      FormData.DEFAULT_CONTENT_TYPE
	    );
	  } else if (Buffer.isBuffer(value)) {
	    headers['Content-Type'].push(
	      options.contentType ||
	      FormData.DEFAULT_CONTENT_TYPE
	    );
	  } else if (options.contentType) {
	    headers['Content-Type'].push(options.contentType);
	  }

	  for (var prop in headers) {
	    if (headers[prop].length) {
	      contents += prop + ': ' + headers[prop].join('; ') + FormData.LINE_BREAK;
	    }
	  }
	  
	  return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;
	};

	FormData.prototype._multiPartFooter = function(field, value, options) {
	  return function(next) {
	    var footer = FormData.LINE_BREAK;

	    var lastPart = (this._streams.length === 0);
	    if (lastPart) {
	      footer += this._lastBoundary();
	    }

	    next(footer);
	  }.bind(this);
	};

	FormData.prototype._lastBoundary = function() {
	  return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;
	};

	FormData.prototype.getHeaders = function(userHeaders) {
	  var formHeaders = {
	    'content-type': 'multipart/form-data; boundary=' + this.getBoundary()
	  };

	  for (var header in userHeaders) {
	    formHeaders[header.toLowerCase()] = userHeaders[header];
	  }

	  return formHeaders;
	}

	FormData.prototype.getCustomHeaders = function(contentType) {
	    contentType = contentType ? contentType : 'multipart/form-data';

	    var formHeaders = {
	        'content-type': contentType + '; boundary=' + this.getBoundary(),
	        'content-length': this.getLengthSync()
	    };

	    return formHeaders;
	}

	FormData.prototype.getBoundary = function() {
	  if (!this._boundary) {
	    this._generateBoundary();
	  }

	  return this._boundary;
	};

	FormData.prototype._generateBoundary = function() {
	  // This generates a 50 character boundary similar to those used by Firefox.
	  // They are optimized for boyer-moore parsing.
	  var boundary = '--------------------------';
	  for (var i = 0; i < 24; i++) {
	    boundary += Math.floor(Math.random() * 10).toString(16);
	  }

	  this._boundary = boundary;
	};

	// Note: getLengthSync DOESN'T calculate streams length
	// As workaround one can calculate file size manually
	// and add it as knownLength option
	FormData.prototype.getLengthSync = function(debug) {
	  var knownLength = this._overheadLength + this._valueLength;

	  // Don't get confused, there are 3 "internal" streams for each keyval pair
	  // so it basically checks if there is any value added to the form
	  if (this._streams.length) {
	    knownLength += this._lastBoundary().length;
	  }

	  // https://github.com/felixge/node-form-data/issues/40
	  if (this._lengthRetrievers.length) {
	    // Some async length retrivers are present
	    // therefore synchronous length calculation is false.
	    // Please use getLength(callback) to get proper length
	    this._error(new Error('Cannot calculate proper length in synchronous way.'));
	  }

	  return knownLength;
	};

	FormData.prototype.getLength = function(cb) {
	  var knownLength = this._overheadLength + this._valueLength;

	  if (this._streams.length) {
	    knownLength += this._lastBoundary().length;
	  }

	  if (!this._lengthRetrievers.length) {
	    process.nextTick(cb.bind(this, null, knownLength));
	    return;
	  }

	  async.parallel(this._lengthRetrievers, function(err, values) {
	    if (err) {
	      cb(err);
	      return;
	    }

	    values.forEach(function(length) {
	      knownLength += length;
	    });

	    cb(null, knownLength);
	  });
	};

	FormData.prototype.submit = function(params, cb) {

	  var request
	    , options
	    , defaults = {
	        method : 'post'
	    };

	  // parse provided url if it's string
	  // or treat it as options object
	  if (typeof params == 'string') {
	    params = parseUrl(params);

	    options = populate({
	      port: params.port,
	      path: params.pathname,
	      host: params.hostname
	    }, defaults);
	  }
	  else // use custom params
	  {
	    options = populate(params, defaults);
	    // if no port provided use default one
	    if (!options.port) {
	      options.port = options.protocol == 'https:' ? 443 : 80;
	    }
	  }

	  // put that good code in getHeaders to some use
	  options.headers = this.getHeaders(params.headers);

	  // https if specified, fallback to http in any other case
	  if (options.protocol == 'https:') {
	    request = https.request(options);
	  } else {
	    request = http.request(options);
	  }

	  // get content length and fire away
	  this.getLength(function(err, length) {

	    // TODO: Add chunked encoding when no length (if err)

	    // add content length
	    request.setHeader('Content-Length', length);

	    this.pipe(request);
	    if (cb) {
	      request.on('error', cb);
	      request.on('response', cb.bind(this, null));
	    }
	  }.bind(this));

	  return request;
	};

	FormData.prototype._error = function(err) {
	  if (this.error) return;

	  this.error = err;
	  this.pause();
	  this.emit('error', err);
	};

	/*
	 * Santa's little helpers
	 */

	// populates missing values
	function populate(dst, src) {
	  for (var prop in src) {
	    if (!dst[prop]) dst[prop] = src[prop];
	  }
	  return dst;
	}


/***/ },
/* 594 */
/***/ function(module, exports, __webpack_require__) {

	var util = __webpack_require__(471);
	var Stream = __webpack_require__(480).Stream;
	var DelayedStream = __webpack_require__(595);

	module.exports = CombinedStream;
	function CombinedStream() {
	  this.writable = false;
	  this.readable = true;
	  this.dataSize = 0;
	  this.maxDataSize = 2 * 1024 * 1024;
	  this.pauseStreams = true;

	  this._released = false;
	  this._streams = [];
	  this._currentStream = null;
	}
	util.inherits(CombinedStream, Stream);

	CombinedStream.create = function(options) {
	  var combinedStream = new this();

	  options = options || {};
	  for (var option in options) {
	    combinedStream[option] = options[option];
	  }

	  return combinedStream;
	};

	CombinedStream.isStreamLike = function(stream) {
	  return (typeof stream !== 'function')
	    && (typeof stream !== 'string')
	    && (typeof stream !== 'boolean')
	    && (typeof stream !== 'number')
	    && (!Buffer.isBuffer(stream));
	};

	CombinedStream.prototype.append = function(stream) {
	  var isStreamLike = CombinedStream.isStreamLike(stream);

	  if (isStreamLike) {
	    if (!(stream instanceof DelayedStream)) {
	      var newStream = DelayedStream.create(stream, {
	        maxDataSize: Infinity,
	        pauseStream: this.pauseStreams,
	      });
	      stream.on('data', this._checkDataSize.bind(this));
	      stream = newStream;
	    }

	    this._handleErrors(stream);

	    if (this.pauseStreams) {
	      stream.pause();
	    }
	  }

	  this._streams.push(stream);
	  return this;
	};

	CombinedStream.prototype.pipe = function(dest, options) {
	  Stream.prototype.pipe.call(this, dest, options);
	  this.resume();
	  return dest;
	};

	CombinedStream.prototype._getNext = function() {
	  this._currentStream = null;
	  var stream = this._streams.shift();


	  if (typeof stream == 'undefined') {
	    this.end();
	    return;
	  }

	  if (typeof stream !== 'function') {
	    this._pipeNext(stream);
	    return;
	  }

	  var getStream = stream;
	  getStream(function(stream) {
	    var isStreamLike = CombinedStream.isStreamLike(stream);
	    if (isStreamLike) {
	      stream.on('data', this._checkDataSize.bind(this));
	      this._handleErrors(stream);
	    }

	    this._pipeNext(stream);
	  }.bind(this));
	};

	CombinedStream.prototype._pipeNext = function(stream) {
	  this._currentStream = stream;

	  var isStreamLike = CombinedStream.isStreamLike(stream);
	  if (isStreamLike) {
	    stream.on('end', this._getNext.bind(this));
	    stream.pipe(this, {end: false});
	    return;
	  }

	  var value = stream;
	  this.write(value);
	  this._getNext();
	};

	CombinedStream.prototype._handleErrors = function(stream) {
	  var self = this;
	  stream.on('error', function(err) {
	    self._emitError(err);
	  });
	};

	CombinedStream.prototype.write = function(data) {
	  this.emit('data', data);
	};

	CombinedStream.prototype.pause = function() {
	  if (!this.pauseStreams) {
	    return;
	  }

	  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.pause) == 'function') this._currentStream.pause();
	  this.emit('pause');
	};

	CombinedStream.prototype.resume = function() {
	  if (!this._released) {
	    this._released = true;
	    this.writable = true;
	    this._getNext();
	  }

	  if(this.pauseStreams && this._currentStream && typeof(this._currentStream.resume) == 'function') this._currentStream.resume();
	  this.emit('resume');
	};

	CombinedStream.prototype.end = function() {
	  this._reset();
	  this.emit('end');
	};

	CombinedStream.prototype.destroy = function() {
	  this._reset();
	  this.emit('close');
	};

	CombinedStream.prototype._reset = function() {
	  this.writable = false;
	  this._streams = [];
	  this._currentStream = null;
	};

	CombinedStream.prototype._checkDataSize = function() {
	  this._updateDataSize();
	  if (this.dataSize <= this.maxDataSize) {
	    return;
	  }

	  var message =
	    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';
	  this._emitError(new Error(message));
	};

	CombinedStream.prototype._updateDataSize = function() {
	  this.dataSize = 0;

	  var self = this;
	  this._streams.forEach(function(stream) {
	    if (!stream.dataSize) {
	      return;
	    }

	    self.dataSize += stream.dataSize;
	  });

	  if (this._currentStream && this._currentStream.dataSize) {
	    this.dataSize += this._currentStream.dataSize;
	  }
	};

	CombinedStream.prototype._emitError = function(err) {
	  this._reset();
	  this.emit('error', err);
	};


/***/ },
/* 595 */
/***/ function(module, exports, __webpack_require__) {

	var Stream = __webpack_require__(480).Stream;
	var util = __webpack_require__(471);

	module.exports = DelayedStream;
	function DelayedStream() {
	  this.source = null;
	  this.dataSize = 0;
	  this.maxDataSize = 1024 * 1024;
	  this.pauseStream = true;

	  this._maxDataSizeExceeded = false;
	  this._released = false;
	  this._bufferedEvents = [];
	}
	util.inherits(DelayedStream, Stream);

	DelayedStream.create = function(source, options) {
	  var delayedStream = new this();

	  options = options || {};
	  for (var option in options) {
	    delayedStream[option] = options[option];
	  }

	  delayedStream.source = source;

	  var realEmit = source.emit;
	  source.emit = function() {
	    delayedStream._handleEmit(arguments);
	    return realEmit.apply(source, arguments);
	  };

	  source.on('error', function() {});
	  if (delayedStream.pauseStream) {
	    source.pause();
	  }

	  return delayedStream;
	};

	Object.defineProperty(DelayedStream.prototype, 'readable', {
	  configurable: true,
	  enumerable: true,
	  get: function() {
	    return this.source.readable;
	  }
	});

	DelayedStream.prototype.setEncoding = function() {
	  return this.source.setEncoding.apply(this.source, arguments);
	};

	DelayedStream.prototype.resume = function() {
	  if (!this._released) {
	    this.release();
	  }

	  this.source.resume();
	};

	DelayedStream.prototype.pause = function() {
	  this.source.pause();
	};

	DelayedStream.prototype.release = function() {
	  this._released = true;

	  this._bufferedEvents.forEach(function(args) {
	    this.emit.apply(this, args);
	  }.bind(this));
	  this._bufferedEvents = [];
	};

	DelayedStream.prototype.pipe = function() {
	  var r = Stream.prototype.pipe.apply(this, arguments);
	  this.resume();
	  return r;
	};

	DelayedStream.prototype._handleEmit = function(args) {
	  if (this._released) {
	    this.emit.apply(this, args);
	    return;
	  }

	  if (args[0] === 'data') {
	    this.dataSize += args[1].length;
	    this._checkIfMaxDataSizeExceeded();
	  }

	  this._bufferedEvents.push(args);
	};

	DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
	  if (this._maxDataSizeExceeded) {
	    return;
	  }

	  if (this.dataSize <= this.maxDataSize) {
	    return;
	  }

	  this._maxDataSizeExceeded = true;
	  var message =
	    'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.'
	  this.emit('error', new Error(message));
	};


/***/ },
/* 596 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
	 * async
	 * https://github.com/caolan/async
	 *
	 * Copyright 2010-2014 Caolan McMahon
	 * Released under the MIT license
	 */
	(function () {

	    var async = {};
	    function noop() {}
	    function identity(v) {
	        return v;
	    }
	    function toBool(v) {
	        return !!v;
	    }
	    function notId(v) {
	        return !v;
	    }

	    // global on the server, window in the browser
	    var previous_async;

	    // Establish the root object, `window` (`self`) in the browser, `global`
	    // on the server, or `this` in some virtual machines. We use `self`
	    // instead of `window` for `WebWorker` support.
	    var root = typeof self === 'object' && self.self === self && self ||
	            typeof global === 'object' && global.global === global && global ||
	            this;

	    if (root != null) {
	        previous_async = root.async;
	    }

	    async.noConflict = function () {
	        root.async = previous_async;
	        return async;
	    };

	    function only_once(fn) {
	        return function() {
	            if (fn === null) throw new Error("Callback was already called.");
	            fn.apply(this, arguments);
	            fn = null;
	        };
	    }

	    function _once(fn) {
	        return function() {
	            if (fn === null) return;
	            fn.apply(this, arguments);
	            fn = null;
	        };
	    }

	    //// cross-browser compatiblity functions ////

	    var _toString = Object.prototype.toString;

	    var _isArray = Array.isArray || function (obj) {
	        return _toString.call(obj) === '[object Array]';
	    };

	    // Ported from underscore.js isObject
	    var _isObject = function(obj) {
	        var type = typeof obj;
	        return type === 'function' || type === 'object' && !!obj;
	    };

	    function _isArrayLike(arr) {
	        return _isArray(arr) || (
	            // has a positive integer length property
	            typeof arr.length === "number" &&
	            arr.length >= 0 &&
	            arr.length % 1 === 0
	        );
	    }

	    function _each(coll, iterator) {
	        return _isArrayLike(coll) ?
	            _arrayEach(coll, iterator) :
	            _forEachOf(coll, iterator);
	    }

	    function _arrayEach(arr, iterator) {
	        var index = -1,
	            length = arr.length;

	        while (++index < length) {
	            iterator(arr[index], index, arr);
	        }
	    }

	    function _map(arr, iterator) {
	        var index = -1,
	            length = arr.length,
	            result = Array(length);

	        while (++index < length) {
	            result[index] = iterator(arr[index], index, arr);
	        }
	        return result;
	    }

	    function _range(count) {
	        return _map(Array(count), function (v, i) { return i; });
	    }

	    function _reduce(arr, iterator, memo) {
	        _arrayEach(arr, function (x, i, a) {
	            memo = iterator(memo, x, i, a);
	        });
	        return memo;
	    }

	    function _forEachOf(object, iterator) {
	        _arrayEach(_keys(object), function (key) {
	            iterator(object[key], key);
	        });
	    }

	    function _indexOf(arr, item) {
	        for (var i = 0; i < arr.length; i++) {
	            if (arr[i] === item) return i;
	        }
	        return -1;
	    }

	    var _keys = Object.keys || function (obj) {
	        var keys = [];
	        for (var k in obj) {
	            if (obj.hasOwnProperty(k)) {
	                keys.push(k);
	            }
	        }
	        return keys;
	    };

	    function _keyIterator(coll) {
	        var i = -1;
	        var len;
	        var keys;
	        if (_isArrayLike(coll)) {
	            len = coll.length;
	            return function next() {
	                i++;
	                return i < len ? i : null;
	            };
	        } else {
	            keys = _keys(coll);
	            len = keys.length;
	            return function next() {
	                i++;
	                return i < len ? keys[i] : null;
	            };
	        }
	    }

	    // Similar to ES6's rest param (http://ariya.ofilabs.com/2013/03/es6-and-rest-parameter.html)
	    // This accumulates the arguments passed into an array, after a given index.
	    // From underscore.js (https://github.com/jashkenas/underscore/pull/2140).
	    function _restParam(func, startIndex) {
	        startIndex = startIndex == null ? func.length - 1 : +startIndex;
	        return function() {
	            var length = Math.max(arguments.length - startIndex, 0);
	            var rest = Array(length);
	            for (var index = 0; index < length; index++) {
	                rest[index] = arguments[index + startIndex];
	            }
	            switch (startIndex) {
	                case 0: return func.call(this, rest);
	                case 1: return func.call(this, arguments[0], rest);
	            }
	            // Currently unused but handle cases outside of the switch statement:
	            // var args = Array(startIndex + 1);
	            // for (index = 0; index < startIndex; index++) {
	            //     args[index] = arguments[index];
	            // }
	            // args[startIndex] = rest;
	            // return func.apply(this, args);
	        };
	    }

	    function _withoutIndex(iterator) {
	        return function (value, index, callback) {
	            return iterator(value, callback);
	        };
	    }

	    //// exported async module functions ////

	    //// nextTick implementation with browser-compatible fallback ////

	    // capture the global reference to guard against fakeTimer mocks
	    var _setImmediate = typeof setImmediate === 'function' && setImmediate;

	    var _delay = _setImmediate ? function(fn) {
	        // not a direct alias for IE10 compatibility
	        _setImmediate(fn);
	    } : function(fn) {
	        setTimeout(fn, 0);
	    };

	    if (typeof process === 'object' && typeof process.nextTick === 'function') {
	        async.nextTick = process.nextTick;
	    } else {
	        async.nextTick = _delay;
	    }
	    async.setImmediate = _setImmediate ? _delay : async.nextTick;


	    async.forEach =
	    async.each = function (arr, iterator, callback) {
	        return async.eachOf(arr, _withoutIndex(iterator), callback);
	    };

	    async.forEachSeries =
	    async.eachSeries = function (arr, iterator, callback) {
	        return async.eachOfSeries(arr, _withoutIndex(iterator), callback);
	    };


	    async.forEachLimit =
	    async.eachLimit = function (arr, limit, iterator, callback) {
	        return _eachOfLimit(limit)(arr, _withoutIndex(iterator), callback);
	    };

	    async.forEachOf =
	    async.eachOf = function (object, iterator, callback) {
	        callback = _once(callback || noop);
	        object = object || [];
	        var size = _isArrayLike(object) ? object.length : _keys(object).length;
	        var completed = 0;
	        if (!size) {
	            return callback(null);
	        }
	        _each(object, function (value, key) {
	            iterator(object[key], key, only_once(done));
	        });
	        function done(err) {
	            if (err) {
	                callback(err);
	            }
	            else {
	                completed += 1;
	                if (completed >= size) {
	                    callback(null);
	                }
	            }
	        }
	    };

	    async.forEachOfSeries =
	    async.eachOfSeries = function (obj, iterator, callback) {
	        callback = _once(callback || noop);
	        obj = obj || [];
	        var nextKey = _keyIterator(obj);
	        var key = nextKey();
	        function iterate() {
	            var sync = true;
	            if (key === null) {
	                return callback(null);
	            }
	            iterator(obj[key], key, only_once(function (err) {
	                if (err) {
	                    callback(err);
	                }
	                else {
	                    key = nextKey();
	                    if (key === null) {
	                        return callback(null);
	                    } else {
	                        if (sync) {
	                            async.nextTick(iterate);
	                        } else {
	                            iterate();
	                        }
	                    }
	                }
	            }));
	            sync = false;
	        }
	        iterate();
	    };



	    async.forEachOfLimit =
	    async.eachOfLimit = function (obj, limit, iterator, callback) {
	        _eachOfLimit(limit)(obj, iterator, callback);
	    };

	    function _eachOfLimit(limit) {

	        return function (obj, iterator, callback) {
	            callback = _once(callback || noop);
	            obj = obj || [];
	            var nextKey = _keyIterator(obj);
	            if (limit <= 0) {
	                return callback(null);
	            }
	            var done = false;
	            var running = 0;
	            var errored = false;

	            (function replenish () {
	                if (done && running <= 0) {
	                    return callback(null);
	                }

	                while (running < limit && !errored) {
	                    var key = nextKey();
	                    if (key === null) {
	                        done = true;
	                        if (running <= 0) {
	                            callback(null);
	                        }
	                        return;
	                    }
	                    running += 1;
	                    iterator(obj[key], key, only_once(function (err) {
	                        running -= 1;
	                        if (err) {
	                            callback(err);
	                            errored = true;
	                        }
	                        else {
	                            replenish();
	                        }
	                    }));
	                }
	            })();
	        };
	    }


	    function doParallel(fn) {
	        return function (obj, iterator, callback) {
	            return fn(async.eachOf, obj, iterator, callback);
	        };
	    }
	    function doParallelLimit(fn) {
	        return function (obj, limit, iterator, callback) {
	            return fn(_eachOfLimit(limit), obj, iterator, callback);
	        };
	    }
	    function doSeries(fn) {
	        return function (obj, iterator, callback) {
	            return fn(async.eachOfSeries, obj, iterator, callback);
	        };
	    }

	    function _asyncMap(eachfn, arr, iterator, callback) {
	        callback = _once(callback || noop);
	        var results = [];
	        eachfn(arr, function (value, index, callback) {
	            iterator(value, function (err, v) {
	                results[index] = v;
	                callback(err);
	            });
	        }, function (err) {
	            callback(err, results);
	        });
	    }

	    async.map = doParallel(_asyncMap);
	    async.mapSeries = doSeries(_asyncMap);
	    async.mapLimit = doParallelLimit(_asyncMap);

	    // reduce only has a series version, as doing reduce in parallel won't
	    // work in many situations.
	    async.inject =
	    async.foldl =
	    async.reduce = function (arr, memo, iterator, callback) {
	        async.eachOfSeries(arr, function (x, i, callback) {
	            iterator(memo, x, function (err, v) {
	                memo = v;
	                callback(err);
	            });
	        }, function (err) {
	            callback(err || null, memo);
	        });
	    };

	    async.foldr =
	    async.reduceRight = function (arr, memo, iterator, callback) {
	        var reversed = _map(arr, identity).reverse();
	        async.reduce(reversed, memo, iterator, callback);
	    };

	    function _filter(eachfn, arr, iterator, callback) {
	        var results = [];
	        eachfn(arr, function (x, index, callback) {
	            iterator(x, function (v) {
	                if (v) {
	                    results.push({index: index, value: x});
	                }
	                callback();
	            });
	        }, function () {
	            callback(_map(results.sort(function (a, b) {
	                return a.index - b.index;
	            }), function (x) {
	                return x.value;
	            }));
	        });
	    }

	    async.select =
	    async.filter = doParallel(_filter);

	    async.selectLimit =
	    async.filterLimit = doParallelLimit(_filter);

	    async.selectSeries =
	    async.filterSeries = doSeries(_filter);

	    function _reject(eachfn, arr, iterator, callback) {
	        _filter(eachfn, arr, function(value, cb) {
	            iterator(value, function(v) {
	                cb(!v);
	            });
	        }, callback);
	    }
	    async.reject = doParallel(_reject);
	    async.rejectLimit = doParallelLimit(_reject);
	    async.rejectSeries = doSeries(_reject);

	    function _createTester(eachfn, check, getResult) {
	        return function(arr, limit, iterator, cb) {
	            function done() {
	                if (cb) cb(getResult(false, void 0));
	            }
	            function iteratee(x, _, callback) {
	                if (!cb) return callback();
	                iterator(x, function (v) {
	                    if (cb && check(v)) {
	                        cb(getResult(true, x));
	                        cb = iterator = false;
	                    }
	                    callback();
	                });
	            }
	            if (arguments.length > 3) {
	                eachfn(arr, limit, iteratee, done);
	            } else {
	                cb = iterator;
	                iterator = limit;
	                eachfn(arr, iteratee, done);
	            }
	        };
	    }

	    async.any =
	    async.some = _createTester(async.eachOf, toBool, identity);

	    async.someLimit = _createTester(async.eachOfLimit, toBool, identity);

	    async.all =
	    async.every = _createTester(async.eachOf, notId, notId);

	    async.everyLimit = _createTester(async.eachOfLimit, notId, notId);

	    function _findGetResult(v, x) {
	        return x;
	    }
	    async.detect = _createTester(async.eachOf, identity, _findGetResult);
	    async.detectSeries = _createTester(async.eachOfSeries, identity, _findGetResult);
	    async.detectLimit = _createTester(async.eachOfLimit, identity, _findGetResult);

	    async.sortBy = function (arr, iterator, callback) {
	        async.map(arr, function (x, callback) {
	            iterator(x, function (err, criteria) {
	                if (err) {
	                    callback(err);
	                }
	                else {
	                    callback(null, {value: x, criteria: criteria});
	                }
	            });
	        }, function (err, results) {
	            if (err) {
	                return callback(err);
	            }
	            else {
	                callback(null, _map(results.sort(comparator), function (x) {
	                    return x.value;
	                }));
	            }

	        });

	        function comparator(left, right) {
	            var a = left.criteria, b = right.criteria;
	            return a < b ? -1 : a > b ? 1 : 0;
	        }
	    };

	    async.auto = function (tasks, callback) {
	        callback = _once(callback || noop);
	        var keys = _keys(tasks);
	        var remainingTasks = keys.length;
	        if (!remainingTasks) {
	            return callback(null);
	        }

	        var results = {};

	        var listeners = [];
	        function addListener(fn) {
	            listeners.unshift(fn);
	        }
	        function removeListener(fn) {
	            var idx = _indexOf(listeners, fn);
	            if (idx >= 0) listeners.splice(idx, 1);
	        }
	        function taskComplete() {
	            remainingTasks--;
	            _arrayEach(listeners.slice(0), function (fn) {
	                fn();
	            });
	        }

	        addListener(function () {
	            if (!remainingTasks) {
	                callback(null, results);
	            }
	        });

	        _arrayEach(keys, function (k) {
	            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];
	            var taskCallback = _restParam(function(err, args) {
	                if (args.length <= 1) {
	                    args = args[0];
	                }
	                if (err) {
	                    var safeResults = {};
	                    _forEachOf(results, function(val, rkey) {
	                        safeResults[rkey] = val;
	                    });
	                    safeResults[k] = args;
	                    callback(err, safeResults);
	                }
	                else {
	                    results[k] = args;
	                    async.setImmediate(taskComplete);
	                }
	            });
	            var requires = task.slice(0, task.length - 1);
	            // prevent dead-locks
	            var len = requires.length;
	            var dep;
	            while (len--) {
	                if (!(dep = tasks[requires[len]])) {
	                    throw new Error('Has inexistant dependency');
	                }
	                if (_isArray(dep) && _indexOf(dep, k) >= 0) {
	                    throw new Error('Has cyclic dependencies');
	                }
	            }
	            function ready() {
	                return _reduce(requires, function (a, x) {
	                    return (a && results.hasOwnProperty(x));
	                }, true) && !results.hasOwnProperty(k);
	            }
	            if (ready()) {
	                task[task.length - 1](taskCallback, results);
	            }
	            else {
	                addListener(listener);
	            }
	            function listener() {
	                if (ready()) {
	                    removeListener(listener);
	                    task[task.length - 1](taskCallback, results);
	                }
	            }
	        });
	    };



	    async.retry = function(times, task, callback) {
	        var DEFAULT_TIMES = 5;
	        var DEFAULT_INTERVAL = 0;

	        var attempts = [];

	        var opts = {
	            times: DEFAULT_TIMES,
	            interval: DEFAULT_INTERVAL
	        };

	        function parseTimes(acc, t){
	            if(typeof t === 'number'){
	                acc.times = parseInt(t, 10) || DEFAULT_TIMES;
	            } else if(typeof t === 'object'){
	                acc.times = parseInt(t.times, 10) || DEFAULT_TIMES;
	                acc.interval = parseInt(t.interval, 10) || DEFAULT_INTERVAL;
	            } else {
	                throw new Error('Unsupported argument type for \'times\': ' + typeof t);
	            }
	        }

	        var length = arguments.length;
	        if (length < 1 || length > 3) {
	            throw new Error('Invalid arguments - must be either (task), (task, callback), (times, task) or (times, task, callback)');
	        } else if (length <= 2 && typeof times === 'function') {
	            callback = task;
	            task = times;
	        }
	        if (typeof times !== 'function') {
	            parseTimes(opts, times);
	        }
	        opts.callback = callback;
	        opts.task = task;

	        function wrappedTask(wrappedCallback, wrappedResults) {
	            function retryAttempt(task, finalAttempt) {
	                return function(seriesCallback) {
	                    task(function(err, result){
	                        seriesCallback(!err || finalAttempt, {err: err, result: result});
	                    }, wrappedResults);
	                };
	            }

	            function retryInterval(interval){
	                return function(seriesCallback){
	                    setTimeout(function(){
	                        seriesCallback(null);
	                    }, interval);
	                };
	            }

	            while (opts.times) {

	                var finalAttempt = !(opts.times-=1);
	                attempts.push(retryAttempt(opts.task, finalAttempt));
	                if(!finalAttempt && opts.interval > 0){
	                    attempts.push(retryInterval(opts.interval));
	                }
	            }

	            async.series(attempts, function(done, data){
	                data = data[data.length - 1];
	                (wrappedCallback || opts.callback)(data.err, data.result);
	            });
	        }

	        // If a callback is passed, run this as a controll flow
	        return opts.callback ? wrappedTask() : wrappedTask;
	    };

	    async.waterfall = function (tasks, callback) {
	        callback = _once(callback || noop);
	        if (!_isArray(tasks)) {
	            var err = new Error('First argument to waterfall must be an array of functions');
	            return callback(err);
	        }
	        if (!tasks.length) {
	            return callback();
	        }
	        function wrapIterator(iterator) {
	            return _restParam(function (err, args) {
	                if (err) {
	                    callback.apply(null, [err].concat(args));
	                }
	                else {
	                    var next = iterator.next();
	                    if (next) {
	                        args.push(wrapIterator(next));
	                    }
	                    else {
	                        args.push(callback);
	                    }
	                    ensureAsync(iterator).apply(null, args);
	                }
	            });
	        }
	        wrapIterator(async.iterator(tasks))();
	    };

	    function _parallel(eachfn, tasks, callback) {
	        callback = callback || noop;
	        var results = _isArrayLike(tasks) ? [] : {};

	        eachfn(tasks, function (task, key, callback) {
	            task(_restParam(function (err, args) {
	                if (args.length <= 1) {
	                    args = args[0];
	                }
	                results[key] = args;
	                callback(err);
	            }));
	        }, function (err) {
	            callback(err, results);
	        });
	    }

	    async.parallel = function (tasks, callback) {
	        _parallel(async.eachOf, tasks, callback);
	    };

	    async.parallelLimit = function(tasks, limit, callback) {
	        _parallel(_eachOfLimit(limit), tasks, callback);
	    };

	    async.series = function(tasks, callback) {
	        _parallel(async.eachOfSeries, tasks, callback);
	    };

	    async.iterator = function (tasks) {
	        function makeCallback(index) {
	            function fn() {
	                if (tasks.length) {
	                    tasks[index].apply(null, arguments);
	                }
	                return fn.next();
	            }
	            fn.next = function () {
	                return (index < tasks.length - 1) ? makeCallback(index + 1): null;
	            };
	            return fn;
	        }
	        return makeCallback(0);
	    };

	    async.apply = _restParam(function (fn, args) {
	        return _restParam(function (callArgs) {
	            return fn.apply(
	                null, args.concat(callArgs)
	            );
	        });
	    });

	    function _concat(eachfn, arr, fn, callback) {
	        var result = [];
	        eachfn(arr, function (x, index, cb) {
	            fn(x, function (err, y) {
	                result = result.concat(y || []);
	                cb(err);
	            });
	        }, function (err) {
	            callback(err, result);
	        });
	    }
	    async.concat = doParallel(_concat);
	    async.concatSeries = doSeries(_concat);

	    async.whilst = function (test, iterator, callback) {
	        callback = callback || noop;
	        if (test()) {
	            var next = _restParam(function(err, args) {
	                if (err) {
	                    callback(err);
	                } else if (test.apply(this, args)) {
	                    iterator(next);
	                } else {
	                    callback(null);
	                }
	            });
	            iterator(next);
	        } else {
	            callback(null);
	        }
	    };

	    async.doWhilst = function (iterator, test, callback) {
	        var calls = 0;
	        return async.whilst(function() {
	            return ++calls <= 1 || test.apply(this, arguments);
	        }, iterator, callback);
	    };

	    async.until = function (test, iterator, callback) {
	        return async.whilst(function() {
	            return !test.apply(this, arguments);
	        }, iterator, callback);
	    };

	    async.doUntil = function (iterator, test, callback) {
	        return async.doWhilst(iterator, function() {
	            return !test.apply(this, arguments);
	        }, callback);
	    };

	    async.during = function (test, iterator, callback) {
	        callback = callback || noop;

	        var next = _restParam(function(err, args) {
	            if (err) {
	                callback(err);
	            } else {
	                args.push(check);
	                test.apply(this, args);
	            }
	        });

	        var check = function(err, truth) {
	            if (err) {
	                callback(err);
	            } else if (truth) {
	                iterator(next);
	            } else {
	                callback(null);
	            }
	        };

	        test(check);
	    };

	    async.doDuring = function (iterator, test, callback) {
	        var calls = 0;
	        async.during(function(next) {
	            if (calls++ < 1) {
	                next(null, true);
	            } else {
	                test.apply(this, arguments);
	            }
	        }, iterator, callback);
	    };

	    function _queue(worker, concurrency, payload) {
	        if (concurrency == null) {
	            concurrency = 1;
	        }
	        else if(concurrency === 0) {
	            throw new Error('Concurrency must not be zero');
	        }
	        function _insert(q, data, pos, callback) {
	            if (callback != null && typeof callback !== "function") {
	                throw new Error("task callback must be a function");
	            }
	            q.started = true;
	            if (!_isArray(data)) {
	                data = [data];
	            }
	            if(data.length === 0 && q.idle()) {
	                // call drain immediately if there are no tasks
	                return async.setImmediate(function() {
	                    q.drain();
	                });
	            }
	            _arrayEach(data, function(task) {
	                var item = {
	                    data: task,
	                    callback: callback || noop
	                };

	                if (pos) {
	                    q.tasks.unshift(item);
	                } else {
	                    q.tasks.push(item);
	                }

	                if (q.tasks.length === q.concurrency) {
	                    q.saturated();
	                }
	            });
	            async.setImmediate(q.process);
	        }
	        function _next(q, tasks) {
	            return function(){
	                workers -= 1;
	                var args = arguments;
	                _arrayEach(tasks, function (task) {
	                    task.callback.apply(task, args);
	                });
	                if (q.tasks.length + workers === 0) {
	                    q.drain();
	                }
	                q.process();
	            };
	        }

	        var workers = 0;
	        var q = {
	            tasks: [],
	            concurrency: concurrency,
	            payload: payload,
	            saturated: noop,
	            empty: noop,
	            drain: noop,
	            started: false,
	            paused: false,
	            push: function (data, callback) {
	                _insert(q, data, false, callback);
	            },
	            kill: function () {
	                q.drain = noop;
	                q.tasks = [];
	            },
	            unshift: function (data, callback) {
	                _insert(q, data, true, callback);
	            },
	            process: function () {
	                if (!q.paused && workers < q.concurrency && q.tasks.length) {
	                    while(workers < q.concurrency && q.tasks.length){
	                        var tasks = q.payload ?
	                            q.tasks.splice(0, q.payload) :
	                            q.tasks.splice(0, q.tasks.length);

	                        var data = _map(tasks, function (task) {
	                            return task.data;
	                        });

	                        if (q.tasks.length === 0) {
	                            q.empty();
	                        }
	                        workers += 1;
	                        var cb = only_once(_next(q, tasks));
	                        worker(data, cb);
	                    }
	                }
	            },
	            length: function () {
	                return q.tasks.length;
	            },
	            running: function () {
	                return workers;
	            },
	            idle: function() {
	                return q.tasks.length + workers === 0;
	            },
	            pause: function () {
	                q.paused = true;
	            },
	            resume: function () {
	                if (q.paused === false) { return; }
	                q.paused = false;
	                var resumeCount = Math.min(q.concurrency, q.tasks.length);
	                // Need to call q.process once per concurrent
	                // worker to preserve full concurrency after pause
	                for (var w = 1; w <= resumeCount; w++) {
	                    async.setImmediate(q.process);
	                }
	            }
	        };
	        return q;
	    }

	    async.queue = function (worker, concurrency) {
	        var q = _queue(function (items, cb) {
	            worker(items[0], cb);
	        }, concurrency, 1);

	        return q;
	    };

	    async.priorityQueue = function (worker, concurrency) {

	        function _compareTasks(a, b){
	            return a.priority - b.priority;
	        }

	        function _binarySearch(sequence, item, compare) {
	            var beg = -1,
	                end = sequence.length - 1;
	            while (beg < end) {
	                var mid = beg + ((end - beg + 1) >>> 1);
	                if (compare(item, sequence[mid]) >= 0) {
	                    beg = mid;
	                } else {
	                    end = mid - 1;
	                }
	            }
	            return beg;
	        }

	        function _insert(q, data, priority, callback) {
	            if (callback != null && typeof callback !== "function") {
	                throw new Error("task callback must be a function");
	            }
	            q.started = true;
	            if (!_isArray(data)) {
	                data = [data];
	            }
	            if(data.length === 0) {
	                // call drain immediately if there are no tasks
	                return async.setImmediate(function() {
	                    q.drain();
	                });
	            }
	            _arrayEach(data, function(task) {
	                var item = {
	                    data: task,
	                    priority: priority,
	                    callback: typeof callback === 'function' ? callback : noop
	                };

	                q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);

	                if (q.tasks.length === q.concurrency) {
	                    q.saturated();
	                }
	                async.setImmediate(q.process);
	            });
	        }

	        // Start with a normal queue
	        var q = async.queue(worker, concurrency);

	        // Override push to accept second parameter representing priority
	        q.push = function (data, priority, callback) {
	            _insert(q, data, priority, callback);
	        };

	        // Remove unshift function
	        delete q.unshift;

	        return q;
	    };

	    async.cargo = function (worker, payload) {
	        return _queue(worker, 1, payload);
	    };

	    function _console_fn(name) {
	        return _restParam(function (fn, args) {
	            fn.apply(null, args.concat([_restParam(function (err, args) {
	                if (typeof console === 'object') {
	                    if (err) {
	                        if (console.error) {
	                            console.error(err);
	                        }
	                    }
	                    else if (console[name]) {
	                        _arrayEach(args, function (x) {
	                            console[name](x);
	                        });
	                    }
	                }
	            })]));
	        });
	    }
	    async.log = _console_fn('log');
	    async.dir = _console_fn('dir');
	    /*async.info = _console_fn('info');
	    async.warn = _console_fn('warn');
	    async.error = _console_fn('error');*/

	    async.memoize = function (fn, hasher) {
	        var memo = {};
	        var queues = {};
	        hasher = hasher || identity;
	        var memoized = _restParam(function memoized(args) {
	            var callback = args.pop();
	            var key = hasher.apply(null, args);
	            if (key in memo) {
	                async.nextTick(function () {
	                    callback.apply(null, memo[key]);
	                });
	            }
	            else if (key in queues) {
	                queues[key].push(callback);
	            }
	            else {
	                queues[key] = [callback];
	                fn.apply(null, args.concat([_restParam(function (args) {
	                    memo[key] = args;
	                    var q = queues[key];
	                    delete queues[key];
	                    for (var i = 0, l = q.length; i < l; i++) {
	                        q[i].apply(null, args);
	                    }
	                })]));
	            }
	        });
	        memoized.memo = memo;
	        memoized.unmemoized = fn;
	        return memoized;
	    };

	    async.unmemoize = function (fn) {
	        return function () {
	            return (fn.unmemoized || fn).apply(null, arguments);
	        };
	    };

	    function _times(mapper) {
	        return function (count, iterator, callback) {
	            mapper(_range(count), iterator, callback);
	        };
	    }

	    async.times = _times(async.map);
	    async.timesSeries = _times(async.mapSeries);
	    async.timesLimit = function (count, limit, iterator, callback) {
	        return async.mapLimit(_range(count), limit, iterator, callback);
	    };

	    async.seq = function (/* functions... */) {
	        var fns = arguments;
	        return _restParam(function (args) {
	            var that = this;

	            var callback = args[args.length - 1];
	            if (typeof callback == 'function') {
	                args.pop();
	            } else {
	                callback = noop;
	            }

	            async.reduce(fns, args, function (newargs, fn, cb) {
	                fn.apply(that, newargs.concat([_restParam(function (err, nextargs) {
	                    cb(err, nextargs);
	                })]));
	            },
	            function (err, results) {
	                callback.apply(that, [err].concat(results));
	            });
	        });
	    };

	    async.compose = function (/* functions... */) {
	        return async.seq.apply(null, Array.prototype.reverse.call(arguments));
	    };


	    function _applyEach(eachfn) {
	        return _restParam(function(fns, args) {
	            var go = _restParam(function(args) {
	                var that = this;
	                var callback = args.pop();
	                return eachfn(fns, function (fn, _, cb) {
	                    fn.apply(that, args.concat([cb]));
	                },
	                callback);
	            });
	            if (args.length) {
	                return go.apply(this, args);
	            }
	            else {
	                return go;
	            }
	        });
	    }

	    async.applyEach = _applyEach(async.eachOf);
	    async.applyEachSeries = _applyEach(async.eachOfSeries);


	    async.forever = function (fn, callback) {
	        var done = only_once(callback || noop);
	        var task = ensureAsync(fn);
	        function next(err) {
	            if (err) {
	                return done(err);
	            }
	            task(next);
	        }
	        next();
	    };

	    function ensureAsync(fn) {
	        return _restParam(function (args) {
	            var callback = args.pop();
	            args.push(function () {
	                var innerArgs = arguments;
	                if (sync) {
	                    async.setImmediate(function () {
	                        callback.apply(null, innerArgs);
	                    });
	                } else {
	                    callback.apply(null, innerArgs);
	                }
	            });
	            var sync = true;
	            fn.apply(this, args);
	            sync = false;
	        });
	    }

	    async.ensureAsync = ensureAsync;

	    async.constant = _restParam(function(values) {
	        var args = [null].concat(values);
	        return function (callback) {
	            return callback.apply(this, args);
	        };
	    });

	    async.wrapSync =
	    async.asyncify = function asyncify(func) {
	        return _restParam(function (args) {
	            var callback = args.pop();
	            var result;
	            try {
	                result = func.apply(this, args);
	            } catch (e) {
	                return callback(e);
	            }
	            // if result is Promise object
	            if (_isObject(result) && typeof result.then === "function") {
	                result.then(function(value) {
	                    callback(null, value);
	                })["catch"](function(err) {
	                    callback(err.message ? err : new Error(err));
	                });
	            } else {
	                callback(null, result);
	            }
	        });
	    };

	    // Node.js
	    if (typeof module === 'object' && module.exports) {
	        module.exports = async;
	    }
	    // AMD / RequireJS
	    else if (true) {
	        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {
	            return async;
	        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	    }
	    // included directly via <script> tag
	    else {
	        root.async = async;
	    }

	}());


/***/ },
/* 597 */
/***/ function(module, exports) {

	'use strict'

	function formatHostname(hostname) {
	  // canonicalize the hostname, so that 'oogle.com' won't match 'google.com'
	  return hostname.replace(/^\.*/, '.').toLowerCase()
	}

	function parseNoProxyZone(zone) {
	  zone = zone.trim().toLowerCase()

	  var zoneParts = zone.split(':', 2)
	    , zoneHost = formatHostname(zoneParts[0])
	    , zonePort = zoneParts[1]
	    , hasPort = zone.indexOf(':') > -1

	  return {hostname: zoneHost, port: zonePort, hasPort: hasPort}
	}

	function uriInNoProxy(uri, noProxy) {
	  var port = uri.port || (uri.protocol === 'https:' ? '443' : '80')
	    , hostname = formatHostname(uri.hostname)
	    , noProxyList = noProxy.split(',')

	  // iterate through the noProxyList until it finds a match.
	  return noProxyList.map(parseNoProxyZone).some(function(noProxyZone) {
	    var isMatchedAt = hostname.indexOf(noProxyZone.hostname)
	      , hostnameMatched = (
	          isMatchedAt > -1 &&
	          (isMatchedAt === hostname.length - noProxyZone.hostname.length)
	        )

	    if (noProxyZone.hasPort) {
	      return (port === noProxyZone.port) && hostnameMatched
	    }

	    return hostnameMatched
	  })
	}

	function getProxyFromURI(uri) {
	  // Decide the proper request proxy to use based on the request URI object and the
	  // environmental variables (NO_PROXY, HTTP_PROXY, etc.)
	  // respect NO_PROXY environment variables (see: http://lynx.isc.org/current/breakout/lynx_help/keystrokes/environments.html)

	  var noProxy = process.env.NO_PROXY || process.env.no_proxy || ''

	  // if the noProxy is a wildcard then return null

	  if (noProxy === '*') {
	    return null
	  }

	  // if the noProxy is not empty and the uri is found return null

	  if (noProxy !== '' && uriInNoProxy(uri, noProxy)) {
	    return null
	  }

	  // Check for HTTP or HTTPS Proxy in environment Else default to null

	  if (uri.protocol === 'http:') {
	    return process.env.HTTP_PROXY ||
	           process.env.http_proxy || null
	  }

	  if (uri.protocol === 'https:') {
	    return process.env.HTTPS_PROXY ||
	           process.env.https_proxy ||
	           process.env.HTTP_PROXY  ||
	           process.env.http_proxy  || null
	  }

	  // if none of that works, return null
	  // (What uri protocol are you using then?)

	  return null
	}

	module.exports = getProxyFromURI


/***/ },
/* 598 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var qs = __webpack_require__(599)
	  , querystring = __webpack_require__(603)


	function Querystring (request) {
	  this.request = request
	  this.lib = null
	  this.useQuerystring = null
	  this.parseOptions = null
	  this.stringifyOptions = null
	}

	Querystring.prototype.init = function (options) {
	  if (this.lib) {return}

	  this.useQuerystring = options.useQuerystring
	  this.lib = (this.useQuerystring ? querystring : qs)

	  this.parseOptions = options.qsParseOptions || {}
	  this.stringifyOptions = options.qsStringifyOptions || {}
	}

	Querystring.prototype.stringify = function (obj) {
	  return (this.useQuerystring)
	    ? this.rfc3986(this.lib.stringify(obj,
	      this.stringifyOptions.sep || null,
	      this.stringifyOptions.eq || null,
	      this.stringifyOptions))
	    : this.lib.stringify(obj, this.stringifyOptions)
	}

	Querystring.prototype.parse = function (str) {
	  return (this.useQuerystring)
	    ? this.lib.parse(str,
	      this.parseOptions.sep || null,
	      this.parseOptions.eq || null,
	      this.parseOptions)
	    : this.lib.parse(str, this.parseOptions)
	}

	Querystring.prototype.rfc3986 = function (str) {
	  return str.replace(/[!'()*]/g, function (c) {
	    return '%' + c.charCodeAt(0).toString(16).toUpperCase()
	  })
	}

	Querystring.prototype.unescape = querystring.unescape

	exports.Querystring = Querystring


/***/ },
/* 599 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Stringify = __webpack_require__(600);
	var Parse = __webpack_require__(602);


	// Declare internals

	var internals = {};


	module.exports = {
	    stringify: Stringify,
	    parse: Parse
	};


/***/ },
/* 600 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Utils = __webpack_require__(601);


	// Declare internals

	var internals = {
	    delimiter: '&',
	    arrayPrefixGenerators: {
	        brackets: function (prefix, key) {

	            return prefix + '[]';
	        },
	        indices: function (prefix, key) {

	            return prefix + '[' + key + ']';
	        },
	        repeat: function (prefix, key) {

	            return prefix;
	        }
	    },
	    strictNullHandling: false
	};


	internals.stringify = function (obj, prefix, generateArrayPrefix, strictNullHandling, filter) {

	    if (typeof filter === 'function') {
	        obj = filter(prefix, obj);
	    }
	    else if (Utils.isBuffer(obj)) {
	        obj = obj.toString();
	    }
	    else if (obj instanceof Date) {
	        obj = obj.toISOString();
	    }
	    else if (obj === null) {
	        if (strictNullHandling) {
	            return Utils.encode(prefix);
	        }

	        obj = '';
	    }

	    if (typeof obj === 'string' ||
	        typeof obj === 'number' ||
	        typeof obj === 'boolean') {

	        return [Utils.encode(prefix) + '=' + Utils.encode(obj)];
	    }

	    var values = [];

	    if (typeof obj === 'undefined') {
	        return values;
	    }

	    var objKeys = Array.isArray(filter) ? filter : Object.keys(obj);
	    for (var i = 0, il = objKeys.length; i < il; ++i) {
	        var key = objKeys[i];

	        if (Array.isArray(obj)) {
	            values = values.concat(internals.stringify(obj[key], generateArrayPrefix(prefix, key), generateArrayPrefix, strictNullHandling, filter));
	        }
	        else {
	            values = values.concat(internals.stringify(obj[key], prefix + '[' + key + ']', generateArrayPrefix, strictNullHandling, filter));
	        }
	    }

	    return values;
	};


	module.exports = function (obj, options) {

	    options = options || {};
	    var delimiter = typeof options.delimiter === 'undefined' ? internals.delimiter : options.delimiter;
	    var strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;
	    var objKeys;
	    var filter;
	    if (typeof options.filter === 'function') {
	        filter = options.filter;
	        obj = filter('', obj);
	    }
	    else if (Array.isArray(options.filter)) {
	        objKeys = filter = options.filter;
	    }

	    var keys = [];

	    if (typeof obj !== 'object' ||
	        obj === null) {

	        return '';
	    }

	    var arrayFormat;
	    if (options.arrayFormat in internals.arrayPrefixGenerators) {
	        arrayFormat = options.arrayFormat;
	    }
	    else if ('indices' in options) {
	        arrayFormat = options.indices ? 'indices' : 'repeat';
	    }
	    else {
	        arrayFormat = 'indices';
	    }

	    var generateArrayPrefix = internals.arrayPrefixGenerators[arrayFormat];

	    if (!objKeys) {
	        objKeys = Object.keys(obj);
	    }
	    for (var i = 0, il = objKeys.length; i < il; ++i) {
	        var key = objKeys[i];
	        keys = keys.concat(internals.stringify(obj[key], key, generateArrayPrefix, strictNullHandling, filter));
	    }

	    return keys.join(delimiter);
	};


/***/ },
/* 601 */
/***/ function(module, exports) {

	// Load modules


	// Declare internals

	var internals = {};
	internals.hexTable = new Array(256);
	for (var h = 0; h < 256; ++h) {
	    internals.hexTable[h] = '%' + ((h < 16 ? '0' : '') + h.toString(16)).toUpperCase();
	}


	exports.arrayToObject = function (source, options) {

	    var obj = options.plainObjects ? Object.create(null) : {};
	    for (var i = 0, il = source.length; i < il; ++i) {
	        if (typeof source[i] !== 'undefined') {

	            obj[i] = source[i];
	        }
	    }

	    return obj;
	};


	exports.merge = function (target, source, options) {

	    if (!source) {
	        return target;
	    }

	    if (typeof source !== 'object') {
	        if (Array.isArray(target)) {
	            target.push(source);
	        }
	        else if (typeof target === 'object') {
	            target[source] = true;
	        }
	        else {
	            target = [target, source];
	        }

	        return target;
	    }

	    if (typeof target !== 'object') {
	        target = [target].concat(source);
	        return target;
	    }

	    if (Array.isArray(target) &&
	        !Array.isArray(source)) {

	        target = exports.arrayToObject(target, options);
	    }

	    var keys = Object.keys(source);
	    for (var k = 0, kl = keys.length; k < kl; ++k) {
	        var key = keys[k];
	        var value = source[key];

	        if (!Object.prototype.hasOwnProperty.call(target, key)) {
	            target[key] = value;
	        }
	        else {
	            target[key] = exports.merge(target[key], value, options);
	        }
	    }

	    return target;
	};


	exports.decode = function (str) {

	    try {
	        return decodeURIComponent(str.replace(/\+/g, ' '));
	    } catch (e) {
	        return str;
	    }
	};

	exports.encode = function (str) {

	    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
	    // It has been adapted here for stricter adherence to RFC 3986
	    if (str.length === 0) {
	        return str;
	    }

	    if (typeof str !== 'string') {
	        str = '' + str;
	    }

	    var out = '';
	    for (var i = 0, il = str.length; i < il; ++i) {
	        var c = str.charCodeAt(i);

	        if (c === 0x2D || // -
	            c === 0x2E || // .
	            c === 0x5F || // _
	            c === 0x7E || // ~
	            (c >= 0x30 && c <= 0x39) || // 0-9
	            (c >= 0x41 && c <= 0x5A) || // a-z
	            (c >= 0x61 && c <= 0x7A)) { // A-Z

	            out += str[i];
	            continue;
	        }

	        if (c < 0x80) {
	            out += internals.hexTable[c];
	            continue;
	        }

	        if (c < 0x800) {
	            out += internals.hexTable[0xC0 | (c >> 6)] + internals.hexTable[0x80 | (c & 0x3F)];
	            continue;
	        }

	        if (c < 0xD800 || c >= 0xE000) {
	            out += internals.hexTable[0xE0 | (c >> 12)] + internals.hexTable[0x80 | ((c >> 6) & 0x3F)] + internals.hexTable[0x80 | (c & 0x3F)];
	            continue;
	        }

	        ++i;
	        c = 0x10000 + (((c & 0x3FF) << 10) | (str.charCodeAt(i) & 0x3FF));
	        out += internals.hexTable[0xF0 | (c >> 18)] + internals.hexTable[0x80 | ((c >> 12) & 0x3F)] + internals.hexTable[0x80 | ((c >> 6) & 0x3F)] + internals.hexTable[0x80 | (c & 0x3F)];
	    }

	    return out;
	};

	exports.compact = function (obj, refs) {

	    if (typeof obj !== 'object' ||
	        obj === null) {

	        return obj;
	    }

	    refs = refs || [];
	    var lookup = refs.indexOf(obj);
	    if (lookup !== -1) {
	        return refs[lookup];
	    }

	    refs.push(obj);

	    if (Array.isArray(obj)) {
	        var compacted = [];

	        for (var i = 0, il = obj.length; i < il; ++i) {
	            if (typeof obj[i] !== 'undefined') {
	                compacted.push(obj[i]);
	            }
	        }

	        return compacted;
	    }

	    var keys = Object.keys(obj);
	    for (i = 0, il = keys.length; i < il; ++i) {
	        var key = keys[i];
	        obj[key] = exports.compact(obj[key], refs);
	    }

	    return obj;
	};


	exports.isRegExp = function (obj) {

	    return Object.prototype.toString.call(obj) === '[object RegExp]';
	};


	exports.isBuffer = function (obj) {

	    if (obj === null ||
	        typeof obj === 'undefined') {

	        return false;
	    }

	    return !!(obj.constructor &&
	              obj.constructor.isBuffer &&
	              obj.constructor.isBuffer(obj));
	};


/***/ },
/* 602 */
/***/ function(module, exports, __webpack_require__) {

	// Load modules

	var Utils = __webpack_require__(601);


	// Declare internals

	var internals = {
	    delimiter: '&',
	    depth: 5,
	    arrayLimit: 20,
	    parameterLimit: 1000,
	    strictNullHandling: false,
	    plainObjects: false,
	    allowPrototypes: false
	};


	internals.parseValues = function (str, options) {

	    var obj = {};
	    var parts = str.split(options.delimiter, options.parameterLimit === Infinity ? undefined : options.parameterLimit);

	    for (var i = 0, il = parts.length; i < il; ++i) {
	        var part = parts[i];
	        var pos = part.indexOf(']=') === -1 ? part.indexOf('=') : part.indexOf(']=') + 1;

	        if (pos === -1) {
	            obj[Utils.decode(part)] = '';

	            if (options.strictNullHandling) {
	                obj[Utils.decode(part)] = null;
	            }
	        }
	        else {
	            var key = Utils.decode(part.slice(0, pos));
	            var val = Utils.decode(part.slice(pos + 1));

	            if (!Object.prototype.hasOwnProperty.call(obj, key)) {
	                obj[key] = val;
	            }
	            else {
	                obj[key] = [].concat(obj[key]).concat(val);
	            }
	        }
	    }

	    return obj;
	};


	internals.parseObject = function (chain, val, options) {

	    if (!chain.length) {
	        return val;
	    }

	    var root = chain.shift();

	    var obj;
	    if (root === '[]') {
	        obj = [];
	        obj = obj.concat(internals.parseObject(chain, val, options));
	    }
	    else {
	        obj = options.plainObjects ? Object.create(null) : {};
	        var cleanRoot = root[0] === '[' && root[root.length - 1] === ']' ? root.slice(1, root.length - 1) : root;
	        var index = parseInt(cleanRoot, 10);
	        var indexString = '' + index;
	        if (!isNaN(index) &&
	            root !== cleanRoot &&
	            indexString === cleanRoot &&
	            index >= 0 &&
	            (options.parseArrays &&
	             index <= options.arrayLimit)) {

	            obj = [];
	            obj[index] = internals.parseObject(chain, val, options);
	        }
	        else {
	            obj[cleanRoot] = internals.parseObject(chain, val, options);
	        }
	    }

	    return obj;
	};


	internals.parseKeys = function (key, val, options) {

	    if (!key) {
	        return;
	    }

	    // Transform dot notation to bracket notation

	    if (options.allowDots) {
	        key = key.replace(/\.([^\.\[]+)/g, '[$1]');
	    }

	    // The regex chunks

	    var parent = /^([^\[\]]*)/;
	    var child = /(\[[^\[\]]*\])/g;

	    // Get the parent

	    var segment = parent.exec(key);

	    // Stash the parent if it exists

	    var keys = [];
	    if (segment[1]) {
	        // If we aren't using plain objects, optionally prefix keys
	        // that would overwrite object prototype properties
	        if (!options.plainObjects &&
	            Object.prototype.hasOwnProperty(segment[1])) {

	            if (!options.allowPrototypes) {
	                return;
	            }
	        }

	        keys.push(segment[1]);
	    }

	    // Loop through children appending to the array until we hit depth

	    var i = 0;
	    while ((segment = child.exec(key)) !== null && i < options.depth) {

	        ++i;
	        if (!options.plainObjects &&
	            Object.prototype.hasOwnProperty(segment[1].replace(/\[|\]/g, ''))) {

	            if (!options.allowPrototypes) {
	                continue;
	            }
	        }
	        keys.push(segment[1]);
	    }

	    // If there's a remainder, just add whatever is left

	    if (segment) {
	        keys.push('[' + key.slice(segment.index) + ']');
	    }

	    return internals.parseObject(keys, val, options);
	};


	module.exports = function (str, options) {

	    options = options || {};
	    options.delimiter = typeof options.delimiter === 'string' || Utils.isRegExp(options.delimiter) ? options.delimiter : internals.delimiter;
	    options.depth = typeof options.depth === 'number' ? options.depth : internals.depth;
	    options.arrayLimit = typeof options.arrayLimit === 'number' ? options.arrayLimit : internals.arrayLimit;
	    options.parseArrays = options.parseArrays !== false;
	    options.allowDots = options.allowDots !== false;
	    options.plainObjects = typeof options.plainObjects === 'boolean' ? options.plainObjects : internals.plainObjects;
	    options.allowPrototypes = typeof options.allowPrototypes === 'boolean' ? options.allowPrototypes : internals.allowPrototypes;
	    options.parameterLimit = typeof options.parameterLimit === 'number' ? options.parameterLimit : internals.parameterLimit;
	    options.strictNullHandling = typeof options.strictNullHandling === 'boolean' ? options.strictNullHandling : internals.strictNullHandling;

	    if (str === '' ||
	        str === null ||
	        typeof str === 'undefined') {

	        return options.plainObjects ? Object.create(null) : {};
	    }

	    var tempObj = typeof str === 'string' ? internals.parseValues(str, options) : str;
	    var obj = options.plainObjects ? Object.create(null) : {};

	    // Iterate over the keys and setup the new object

	    var keys = Object.keys(tempObj);
	    for (var i = 0, il = keys.length; i < il; ++i) {
	        var key = keys[i];
	        var newObj = internals.parseKeys(key, tempObj[key], options);
	        obj = Utils.merge(obj, newObj, options);
	    }

	    return Utils.compact(obj);
	};


/***/ },
/* 603 */
/***/ function(module, exports) {

	module.exports = require("querystring");

/***/ },
/* 604 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var fs = __webpack_require__(11)
	var qs = __webpack_require__(603)
	var validate = __webpack_require__(605)
	var util = __webpack_require__(471)

	function Har (request) {
	  this.request = request
	}

	Har.prototype.reducer = function (obj, pair) {
	  // new property ?
	  if (obj[pair.name] === undefined) {
	    obj[pair.name] = pair.value
	    return obj
	  }

	  // existing? convert to array
	  var arr = [
	    obj[pair.name],
	    pair.value
	  ]

	  obj[pair.name] = arr

	  return obj
	}

	Har.prototype.prep = function (data) {
	  // construct utility properties
	  data.queryObj = {}
	  data.headersObj = {}
	  data.postData.jsonObj = false
	  data.postData.paramsObj = false

	  // construct query objects
	  if (data.queryString && data.queryString.length) {
	    data.queryObj = data.queryString.reduce(this.reducer, {})
	  }

	  // construct headers objects
	  if (data.headers && data.headers.length) {
	    // loweCase header keys
	    data.headersObj = data.headers.reduceRight(function (headers, header) {
	      headers[header.name] = header.value
	      return headers
	    }, {})
	  }

	  // construct Cookie header
	  if (data.cookies && data.cookies.length) {
	    var cookies = data.cookies.map(function (cookie) {
	      return cookie.name + '=' + cookie.value
	    })

	    if (cookies.length) {
	      data.headersObj.cookie = cookies.join('; ')
	    }
	  }

	  // prep body
	  switch (data.postData.mimeType) {
	    case 'multipart/mixed':
	    case 'multipart/related':
	    case 'multipart/form-data':
	    case 'multipart/alternative':
	      // reset values
	      data.postData.mimeType = 'multipart/form-data'
	      break

	    case 'application/x-www-form-urlencoded':
	      if (!data.postData.params) {
	        data.postData.text = ''
	      } else {
	        data.postData.paramsObj = data.postData.params.reduce(this.reducer, {})

	        // always overwrite
	        data.postData.text = qs.stringify(data.postData.paramsObj)
	      }
	      break

	    case 'text/json':
	    case 'text/x-json':
	    case 'application/json':
	    case 'application/x-json':
	      data.postData.mimeType = 'application/json'

	      if (data.postData.text) {
	        try {
	          data.postData.jsonObj = JSON.parse(data.postData.text)
	        } catch (e) {
	          this.request.debug(e)

	          // force back to text/plain
	          data.postData.mimeType = 'text/plain'
	        }
	      }
	      break
	  }

	  return data
	}

	Har.prototype.options = function (options) {
	  // skip if no har property defined
	  if (!options.har) {
	    return options
	  }

	  var har = util._extend({}, options.har)

	  // only process the first entry
	  if (har.log && har.log.entries) {
	    har = har.log.entries[0]
	  }

	  // add optional properties to make validation successful
	  har.url = har.url || options.url || options.uri || options.baseUrl || '/'
	  har.httpVersion = har.httpVersion || 'HTTP/1.1'
	  har.queryString = har.queryString || []
	  har.headers = har.headers || []
	  har.cookies = har.cookies || []
	  har.postData = har.postData || {}
	  har.postData.mimeType = har.postData.mimeType || 'application/octet-stream'

	  har.bodySize = 0
	  har.headersSize = 0
	  har.postData.size = 0

	  if (!validate.request(har)) {
	    return options
	  }

	  // clean up and get some utility properties
	  var req = this.prep(har)

	  // construct new options
	  if (req.url) {
	    options.url = req.url
	  }

	  if (req.method) {
	    options.method = req.method
	  }

	  if (Object.keys(req.queryObj).length) {
	    options.qs = req.queryObj
	  }

	  if (Object.keys(req.headersObj).length) {
	    options.headers = req.headersObj
	  }

	  switch (req.postData.mimeType) {
	    case 'application/x-www-form-urlencoded':
	      options.form = req.postData.paramsObj
	      break

	    case 'application/json':
	      if (req.postData.jsonObj) {
	        options.body = req.postData.jsonObj
	        options.json = true
	      }
	      break

	    case 'multipart/form-data':
	      options.formData = {}

	      req.postData.params.forEach(function (param) {
	        var attachment = {}

	        if (!param.fileName && !param.fileName && !param.contentType) {
	          options.formData[param.name] = param.value
	          return
	        }

	        // attempt to read from disk!
	        if (param.fileName && !param.value) {
	          attachment.value = fs.createReadStream(param.fileName)
	        } else if (param.value) {
	          attachment.value = param.value
	        }

	        if (param.fileName) {
	          attachment.options = {
	            filename: param.fileName,
	            contentType: param.contentType ? param.contentType : null
	          }
	        }

	        options.formData[param.name] = attachment
	      })
	      break

	    default:
	      if (req.postData.text) {
	        options.body = req.postData.text
	      }
	  }

	  return options
	}

	exports.Har = Har


/***/ },
/* 605 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var schemas = __webpack_require__(606)
	var ValidationError = __webpack_require__(622)
	var validator = __webpack_require__(623)

	var runner = function (schema, data, cb) {
	  var validate = validator(schema, {
	    greedy: true,
	    verbose: true,
	    schemas: schemas
	  })

	  var valid = false

	  if (data !== undefined) {
	    // execute is-my-json-valid
	    valid = validate(data)
	  }

	  // callback?
	  if (!cb) {
	    return valid
	  } else {
	    return cb(validate.errors ? new ValidationError(validate.errors) : null, valid)
	  }

	  return valid
	}

	module.exports = function (data, cb) {
	  return runner(schemas.har, data, cb)
	}

	Object.keys(schemas).map(function (name) {
	  module.exports[name] = function (data, cb) {
	    return runner(schemas[name], data, cb)
	  }
	})


/***/ },
/* 606 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var schemas = {
	  cache: __webpack_require__(607),
	  cacheEntry: __webpack_require__(608),
	  content: __webpack_require__(609),
	  cookie: __webpack_require__(610),
	  creator: __webpack_require__(611),
	  entry: __webpack_require__(612),
	  har: __webpack_require__(613),
	  log: __webpack_require__(614),
	  page: __webpack_require__(615),
	  pageTimings: __webpack_require__(616),
	  postData: __webpack_require__(617),
	  record: __webpack_require__(618),
	  request: __webpack_require__(619),
	  response: __webpack_require__(620),
	  timings: __webpack_require__(621)
	}

	// is-my-json-valid does not provide meaningful error messages for external schemas
	// this is a workaround
	schemas.cache.properties.beforeRequest = schemas.cacheEntry
	schemas.cache.properties.afterRequest = schemas.cacheEntry

	schemas.page.properties.pageTimings = schemas.pageTimings

	schemas.request.properties.cookies.items = schemas.cookie
	schemas.request.properties.headers.items = schemas.record
	schemas.request.properties.queryString.items = schemas.record
	schemas.request.properties.postData = schemas.postData

	schemas.response.properties.cookies.items = schemas.cookie
	schemas.response.properties.headers.items = schemas.record
	schemas.response.properties.content = schemas.content

	schemas.entry.properties.request = schemas.request
	schemas.entry.properties.response = schemas.response
	schemas.entry.properties.cache = schemas.cache
	schemas.entry.properties.timings = schemas.timings

	schemas.log.properties.creator = schemas.creator
	schemas.log.properties.browser = schemas.creator
	schemas.log.properties.pages.items = schemas.page
	schemas.log.properties.entries.items = schemas.entry

	schemas.har.properties.log = schemas.log

	module.exports = schemas


/***/ },
/* 607 */
/***/ function(module, exports) {

	module.exports = {
		"properties": {
			"beforeRequest": {
				"$ref": "#cacheEntry"
			},
			"afterRequest": {
				"$ref": "#cacheEntry"
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 608 */
/***/ function(module, exports) {

	module.exports = {
		"oneOf": [
			{
				"type": "object",
				"optional": true,
				"required": [
					"lastAccess",
					"eTag",
					"hitCount"
				],
				"properties": {
					"expires": {
						"type": "string"
					},
					"lastAccess": {
						"type": "string"
					},
					"eTag": {
						"type": "string"
					},
					"hitCount": {
						"type": "integer"
					},
					"comment": {
						"type": "string"
					}
				}
			},
			{
				"type": null,
				"additionalProperties": false
			}
		]
	}

/***/ },
/* 609 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"required": [
			"size",
			"mimeType"
		],
		"properties": {
			"size": {
				"type": "integer"
			},
			"compression": {
				"type": "integer"
			},
			"mimeType": {
				"type": "string"
			},
			"text": {
				"type": "string"
			},
			"encoding": {
				"type": "string"
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 610 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"required": [
			"name",
			"value"
		],
		"properties": {
			"name": {
				"type": "string"
			},
			"value": {
				"type": "string"
			},
			"path": {
				"type": "string"
			},
			"domain": {
				"type": "string"
			},
			"expires": {
				"type": [
					"string",
					"null"
				],
				"format": "date-time"
			},
			"httpOnly": {
				"type": "boolean"
			},
			"secure": {
				"type": "boolean"
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 611 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"required": [
			"name",
			"version"
		],
		"properties": {
			"name": {
				"type": "string"
			},
			"version": {
				"type": "string"
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 612 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"optional": true,
		"required": [
			"startedDateTime",
			"time",
			"request",
			"response",
			"cache",
			"timings"
		],
		"properties": {
			"pageref": {
				"type": "string"
			},
			"startedDateTime": {
				"type": "string",
				"format": "date-time",
				"pattern": "^(\\d{4})(-)?(\\d\\d)(-)?(\\d\\d)(T)?(\\d\\d)(:)?(\\d\\d)(:)?(\\d\\d)(\\.\\d+)?(Z|([+-])(\\d\\d)(:)?(\\d\\d))"
			},
			"time": {
				"type": "number",
				"min": 0
			},
			"request": {
				"$ref": "#request"
			},
			"response": {
				"$ref": "#response"
			},
			"cache": {
				"$ref": "#cache"
			},
			"timings": {
				"$ref": "#timings"
			},
			"serverIPAddress": {
				"type": "string",
				"oneOf": [
					{
						"format": "ipv4"
					},
					{
						"format": "ipv6"
					}
				]
			},
			"connection": {
				"type": "string"
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 613 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"required": [
			"log"
		],
		"properties": {
			"log": {
				"$ref": "#log"
			}
		}
	}

/***/ },
/* 614 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"required": [
			"version",
			"creator",
			"entries"
		],
		"properties": {
			"version": {
				"type": "string"
			},
			"creator": {
				"$ref": "#creator"
			},
			"browser": {
				"$ref": "#creator"
			},
			"pages": {
				"type": "array",
				"items": {
					"$ref": "#page"
				}
			},
			"entries": {
				"type": "array",
				"items": {
					"$ref": "#entry"
				}
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 615 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"optional": true,
		"required": [
			"startedDateTime",
			"id",
			"title",
			"pageTimings"
		],
		"properties": {
			"startedDateTime": {
				"type": "string",
				"format": "date-time",
				"pattern": "^(\\d{4})(-)?(\\d\\d)(-)?(\\d\\d)(T)?(\\d\\d)(:)?(\\d\\d)(:)?(\\d\\d)(\\.\\d+)?(Z|([+-])(\\d\\d)(:)?(\\d\\d))"
			},
			"id": {
				"type": "string",
				"unique": true
			},
			"title": {
				"type": "string"
			},
			"pageTimings": {
				"$ref": "#pageTimings"
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 616 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"properties": {
			"onContentLoad": {
				"type": "number",
				"min": -1
			},
			"onLoad": {
				"type": "number",
				"min": -1
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 617 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"optional": true,
		"required": [
			"mimeType"
		],
		"properties": {
			"mimeType": {
				"type": "string"
			},
			"text": {
				"type": "string"
			},
			"params": {
				"type": "array",
				"required": [
					"name"
				],
				"properties": {
					"name": {
						"type": "string"
					},
					"value": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					},
					"contentType": {
						"type": "string"
					},
					"comment": {
						"type": "string"
					}
				}
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 618 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"required": [
			"name",
			"value"
		],
		"properties": {
			"name": {
				"type": "string"
			},
			"value": {
				"type": "string"
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 619 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"required": [
			"method",
			"url",
			"httpVersion",
			"cookies",
			"headers",
			"queryString",
			"headersSize",
			"bodySize"
		],
		"properties": {
			"method": {
				"type": "string"
			},
			"url": {
				"type": "string",
				"format": "uri"
			},
			"httpVersion": {
				"type": "string"
			},
			"cookies": {
				"type": "array",
				"items": {
					"$ref": "#cookie"
				}
			},
			"headers": {
				"type": "array",
				"items": {
					"$ref": "#record"
				}
			},
			"queryString": {
				"type": "array",
				"items": {
					"$ref": "#record"
				}
			},
			"postData": {
				"$ref": "#postData"
			},
			"headersSize": {
				"type": "integer"
			},
			"bodySize": {
				"type": "integer"
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 620 */
/***/ function(module, exports) {

	module.exports = {
		"type": "object",
		"required": [
			"status",
			"statusText",
			"httpVersion",
			"cookies",
			"headers",
			"content",
			"redirectURL",
			"headersSize",
			"bodySize"
		],
		"properties": {
			"status": {
				"type": "integer"
			},
			"statusText": {
				"type": "string"
			},
			"httpVersion": {
				"type": "string"
			},
			"cookies": {
				"type": "array",
				"items": {
					"$ref": "#cookie"
				}
			},
			"headers": {
				"type": "array",
				"items": {
					"$ref": "#record"
				}
			},
			"content": {
				"$ref": "#content"
			},
			"redirectURL": {
				"type": "string"
			},
			"headersSize": {
				"type": "integer"
			},
			"bodySize": {
				"type": "integer"
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 621 */
/***/ function(module, exports) {

	module.exports = {
		"required": [
			"send",
			"wait",
			"receive"
		],
		"properties": {
			"dns": {
				"type": "number",
				"min": -1
			},
			"connect": {
				"type": "number",
				"min": -1
			},
			"blocked": {
				"type": "number",
				"min": -1
			},
			"send": {
				"type": "number",
				"min": -1
			},
			"wait": {
				"type": "number",
				"min": -1
			},
			"receive": {
				"type": "number",
				"min": -1
			},
			"ssl": {
				"type": "number",
				"min": -1
			},
			"comment": {
				"type": "string"
			}
		}
	}

/***/ },
/* 622 */
/***/ function(module, exports) {

	'use strict'

	function ValidationError (errors) {
	  this.name = 'ValidationError'
	  this.errors = errors
	}

	ValidationError.prototype = Error.prototype

	module.exports = ValidationError


/***/ },
/* 623 */
/***/ function(module, exports, __webpack_require__) {

	var genobj = __webpack_require__(624)
	var genfun = __webpack_require__(626)
	var jsonpointer = __webpack_require__(627)
	var xtend = __webpack_require__(628)
	var formats = __webpack_require__(629)

	var get = function(obj, additionalSchemas, ptr) {
	  if (/^https?:\/\//.test(ptr)) return null

	  var visit = function(sub) {
	    if (sub && sub.id === ptr) return sub
	    if (typeof sub !== 'object' || !sub) return null
	    return Object.keys(sub).reduce(function(res, k) {
	      return res || visit(sub[k])
	    }, null)
	  }

	  var res = visit(obj)
	  if (res) return res

	  ptr = ptr.replace(/^#/, '')
	  ptr = ptr.replace(/\/$/, '')

	  try {
	    return jsonpointer.get(obj, decodeURI(ptr))
	  } catch (err) {
	    var end = ptr.indexOf('#')
	    var other
	    // external reference
	    if (end !== 0) {
	      // fragment doesn't exist.
	      if (end === -1) {
	        other = additionalSchemas[ptr]
	      } else {
	        var ext = ptr.slice(0, end)
	        other = additionalSchemas[ext]
	        var fragment = ptr.slice(end).replace(/^#/, '')
	        try {
	          return jsonpointer.get(other, fragment)
	        } catch (err) {}
	      }
	    } else {
	      other = additionalSchemas[ptr]
	    }
	    return other || null
	  }
	}

	var formatName = function(field) {
	  field = JSON.stringify(field)
	  var pattern = /\[([^\[\]"]+)\]/
	  while (pattern.test(field)) field = field.replace(pattern, '."+$1+"')
	  return field
	}

	var types = {}

	types.any = function() {
	  return 'true'
	}

	types.null = function(name) {
	  return name+' === null'
	}

	types.boolean = function(name) {
	  return 'typeof '+name+' === "boolean"'
	}

	types.array = function(name) {
	  return 'Array.isArray('+name+')'
	}

	types.object = function(name) {
	  return 'typeof '+name+' === "object" && '+name+' && !Array.isArray('+name+')'
	}

	types.number = function(name) {
	  return 'typeof '+name+' === "number"'
	}

	types.integer = function(name) {
	  return 'typeof '+name+' === "number" && (Math.floor('+name+') === '+name+' || '+name+' > 9007199254740992 || '+name+' < -9007199254740992)'
	}

	types.string = function(name) {
	  return 'typeof '+name+' === "string"'
	}

	var unique = function(array) {
	  var list = []
	  for (var i = 0; i < array.length; i++) {
	    list.push(typeof array[i] === 'object' ? JSON.stringify(array[i]) : array[i])
	  }
	  for (var i = 1; i < list.length; i++) {
	    if (list.indexOf(list[i]) !== i) return false
	  }
	  return true
	}

	var toType = function(node) {
	  return node.type
	}

	var compile = function(schema, cache, root, reporter, opts) {
	  var fmts = opts ? xtend(formats, opts.formats) : formats
	  var scope = {unique:unique, formats:fmts}
	  var verbose = opts ? !!opts.verbose : false;
	  var greedy = opts && opts.greedy !== undefined ?
	    opts.greedy : false;

	  var syms = {}
	  var gensym = function(name) {
	    return name+(syms[name] = (syms[name] || 0)+1)
	  }

	  var reversePatterns = {}
	  var patterns = function(p) {
	    if (reversePatterns[p]) return reversePatterns[p]
	    var n = gensym('pattern')
	    scope[n] = new RegExp(p)
	    reversePatterns[p] = n
	    return n
	  }

	  var vars = ['i','j','k','l','m','n','o','p','q','r','s','t','u','v','x','y','z']
	  var genloop = function() {
	    var v = vars.shift()
	    vars.push(v+v[0])
	    return v
	  }

	  var visit = function(name, node, reporter, filter) {
	    var properties = node.properties
	    var type = node.type
	    var tuple = false

	    if (Array.isArray(node.items)) { // tuple type
	      properties = {}
	      node.items.forEach(function(item, i) {
	        properties[i] = item
	      })
	      type = 'array'
	      tuple = true
	    }

	    var indent = 0
	    var error = function(msg, prop, value) {
	      validate('errors++')
	      if (reporter === true) {
	        validate('if (validate.errors === null) validate.errors = []')
	        if (verbose) {
	          validate('validate.errors.push({field:%s,message:%s,value:%s})', formatName(prop || name), JSON.stringify(msg), value || name)
	        } else {
	          validate('validate.errors.push({field:%s,message:%s})', formatName(prop || name), JSON.stringify(msg))
	        }
	      }
	    }

	    if (node.required === true) {
	      indent++
	      validate('if (%s === undefined) {', name)
	      error('is required')
	      validate('} else {')
	    } else {
	      indent++
	      validate('if (%s !== undefined) {', name)
	    }

	    var valid = [].concat(type)
	      .map(function(t) {
	        return types[t || 'any'](name)
	      })
	      .join(' || ') || 'true'

	    if (valid !== 'true') {
	      indent++
	      validate('if (!(%s)) {', valid)
	      error('is the wrong type')
	      validate('} else {')
	    }

	    if (tuple) {
	      if (node.additionalItems === false) {
	        validate('if (%s.length > %d) {', name, node.items.length)
	        error('has additional items')
	        validate('}')
	      } else if (node.additionalItems) {
	        var i = genloop()
	        validate('for (var %s = %d; %s < %s.length; %s++) {', i, node.items.length, i, name, i)
	        visit(name+'['+i+']', node.additionalItems, reporter, filter)
	        validate('}')
	      }   
	    }

	    if (node.format && fmts[node.format]) {
	      if (type !== 'string' && formats[node.format]) validate('if (%s) {', types.string(name))
	      var n = gensym('format')
	      scope[n] = fmts[node.format]

	      if (typeof scope[n] === 'function') validate('if (!%s(%s)) {', n, name)
	      else validate('if (!%s.test(%s)) {', n, name)
	      error('must be '+node.format+' format')
	      validate('}')
	      if (type !== 'string' && formats[node.format]) validate('}')
	    }

	    if (Array.isArray(node.required)) {
	      var isUndefined = function(req) {
	        return genobj(name, req) + ' === undefined'
	      }

	      var checkRequired = function (req) {
	        var prop = genobj(name, req);
	        validate('if (%s === undefined) {', prop)
	        error('is required', prop)
	        validate('missing++')
	        validate('}')
	      }
	      validate('if ((%s)) {', type !== 'object' ? types.object(name) : 'true')
	      validate('var missing = 0')
	      node.required.map(checkRequired)
	      validate('}');
	      if (!greedy) {
	        validate('if (missing === 0) {')
	        indent++
	      }
	    }

	    if (node.uniqueItems) {
	      if (type !== 'array') validate('if (%s) {', types.array(name))
	      validate('if (!(unique(%s))) {', name)
	      error('must be unique')
	      validate('}')
	      if (type !== 'array') validate('}')
	    }

	    if (node.enum) {
	      var complex = node.enum.some(function(e) {
	        return typeof e === 'object'
	      })

	      var compare = complex ?
	        function(e) {
	          return 'JSON.stringify('+name+')'+' !== JSON.stringify('+JSON.stringify(e)+')'
	        } :
	        function(e) {
	          return name+' !== '+JSON.stringify(e)
	        }

	      validate('if (%s) {', node.enum.map(compare).join(' && ') || 'false')
	      error('must be an enum value')
	      validate('}')
	    }

	    if (node.dependencies) {
	      if (type !== 'object') validate('if (%s) {', types.object(name))

	      Object.keys(node.dependencies).forEach(function(key) {
	        var deps = node.dependencies[key]
	        if (typeof deps === 'string') deps = [deps]

	        var exists = function(k) {
	          return genobj(name, k) + ' !== undefined'
	        }

	        if (Array.isArray(deps)) {
	          validate('if (%s !== undefined && !(%s)) {', genobj(name, key), deps.map(exists).join(' && ') || 'true')
	          error('dependencies not set')
	          validate('}')
	        }
	        if (typeof deps === 'object') {
	          validate('if (%s !== undefined) {', genobj(name, key))
	          visit(name, deps, reporter, filter)
	          validate('}')
	        }
	      })

	      if (type !== 'object') validate('}')
	    }

	    if (node.additionalProperties || node.additionalProperties === false) {
	      if (type !== 'object') validate('if (%s) {', types.object(name))

	      var i = genloop()
	      var keys = gensym('keys')

	      var toCompare = function(p) {
	        return keys+'['+i+'] !== '+JSON.stringify(p)
	      }

	      var toTest = function(p) {
	        return '!'+patterns(p)+'.test('+keys+'['+i+'])'
	      }

	      var additionalProp = Object.keys(properties || {}).map(toCompare)
	        .concat(Object.keys(node.patternProperties || {}).map(toTest))
	        .join(' && ') || 'true'

	      validate('var %s = Object.keys(%s)', keys, name)
	        ('for (var %s = 0; %s < %s.length; %s++) {', i, i, keys, i)
	          ('if (%s) {', additionalProp)

	      if (node.additionalProperties === false) {
	        if (filter) validate('delete %s', name+'['+keys+'['+i+']]')
	        error('has additional properties', null, JSON.stringify(name+'.') + ' + ' + keys + '['+i+']')
	      } else {
	        visit(name+'['+keys+'['+i+']]', node.additionalProperties, reporter, filter)
	      }

	      validate
	          ('}')
	        ('}')

	      if (type !== 'object') validate('}')
	    }

	    if (node.$ref) {
	      var sub = get(root, opts && opts.schemas || {}, node.$ref)
	      if (sub) {
	        var fn = cache[node.$ref]
	        if (!fn) {
	          cache[node.$ref] = function proxy(data) {
	            return fn(data)
	          }
	          fn = compile(sub, cache, root, false, opts)
	        }
	        var n = gensym('ref')
	        scope[n] = fn
	        validate('if (!(%s(%s))) {', n, name)
	        error('referenced schema does not match')
	        validate('}')
	      }
	    }

	    if (node.not) {
	      var prev = gensym('prev')
	      validate('var %s = errors', prev)
	      visit(name, node.not, false, filter)
	      validate('if (%s === errors) {', prev)
	      error('negative schema matches')
	      validate('} else {')
	        ('errors = %s', prev)
	      ('}')
	    }

	    if (node.items && !tuple) {
	      if (type !== 'array') validate('if (%s) {', types.array(name))

	      var i = genloop()
	      validate('for (var %s = 0; %s < %s.length; %s++) {', i, i, name, i)
	      visit(name+'['+i+']', node.items, reporter, filter)
	      validate('}')

	      if (type !== 'array') validate('}')
	    }

	    if (node.patternProperties) {
	      if (type !== 'object') validate('if (%s) {', types.object(name))
	      var keys = gensym('keys')
	      var i = genloop()
	      validate
	        ('var %s = Object.keys(%s)', keys, name)
	        ('for (var %s = 0; %s < %s.length; %s++) {', i, i, keys, i)

	      Object.keys(node.patternProperties).forEach(function(key) {
	        var p = patterns(key)
	        validate('if (%s.test(%s)) {', p, keys+'['+i+']')
	        visit(name+'['+keys+'['+i+']]', node.patternProperties[key], reporter, filter)
	        validate('}')
	      })

	      validate('}')
	      if (type !== 'object') validate('}')
	    }

	    if (node.pattern) {
	      var p = patterns(node.pattern)
	      if (type !== 'string') validate('if (%s) {', types.string(name))
	      validate('if (!(%s.test(%s))) {', p, name)
	      error('pattern mismatch')
	      validate('}')
	      if (type !== 'string') validate('}')
	    }

	    if (node.allOf) {
	      node.allOf.forEach(function(sch) {
	        visit(name, sch, reporter, filter)
	      })
	    }

	    if (node.anyOf && node.anyOf.length) {
	      var prev = gensym('prev')

	      node.anyOf.forEach(function(sch, i) {
	        if (i === 0) {
	          validate('var %s = errors', prev)
	        } else {          
	          validate('if (errors !== %s) {', prev)
	            ('errors = %s', prev)
	        }
	        visit(name, sch, false, false)
	      })
	      node.anyOf.forEach(function(sch, i) {
	        if (i) validate('}')
	      })
	      validate('if (%s !== errors) {', prev)
	      error('no schemas match')
	      validate('}')
	    }

	    if (node.oneOf && node.oneOf.length) {
	      var prev = gensym('prev')
	      var passes = gensym('passes')

	      validate
	        ('var %s = errors', prev)
	        ('var %s = 0', passes)

	      node.oneOf.forEach(function(sch, i) {
	        visit(name, sch, false, false)
	        validate('if (%s === errors) {', prev)
	          ('%s++', passes)
	        ('} else {')
	          ('errors = %s', prev)
	        ('}')
	      })

	      validate('if (%s !== 1) {', passes)
	      error('no (or more than one) schemas match')
	      validate('}')
	    }

	    if (node.multipleOf !== undefined) {
	      if (type !== 'number' && type !== 'integer') validate('if (%s) {', types.number(name))

	      var factor = ((node.multipleOf | 0) !== node.multipleOf) ? Math.pow(10, node.multipleOf.toString().split('.').pop().length) : 1
	      if (factor > 1) validate('if ((%d*%s) % %d) {', factor, name, factor*node.multipleOf)
	      else validate('if (%s % %d) {', name, node.multipleOf)

	      error('has a remainder')
	      validate('}')

	      if (type !== 'number' && type !== 'integer') validate('}')
	    }

	    if (node.maxProperties !== undefined) {
	      if (type !== 'object') validate('if (%s) {', types.object(name))
	      
	      validate('if (Object.keys(%s).length > %d) {', name, node.maxProperties)
	      error('has more properties than allowed')
	      validate('}')

	      if (type !== 'object') validate('}')
	    }

	    if (node.minProperties !== undefined) {
	      if (type !== 'object') validate('if (%s) {', types.object(name))
	      
	      validate('if (Object.keys(%s).length < %d) {', name, node.minProperties)
	      error('has less properties than allowed')
	      validate('}')

	      if (type !== 'object') validate('}')
	    }

	    if (node.maxItems !== undefined) {
	      if (type !== 'array') validate('if (%s) {', types.array(name))
	      
	      validate('if (%s.length > %d) {', name, node.maxItems)
	      error('has more items than allowed')
	      validate('}')

	      if (type !== 'array') validate('}')
	    }

	    if (node.minItems !== undefined) {
	      if (type !== 'array') validate('if (%s) {', types.array(name))
	      
	      validate('if (%s.length < %d) {', name, node.minItems)
	      error('has less items than allowed')
	      validate('}')

	      if (type !== 'array') validate('}')
	    }

	    if (node.maxLength !== undefined) {
	      if (type !== 'string') validate('if (%s) {', types.string(name))

	      validate('if (%s.length > %d) {', name, node.maxLength)
	      error('has longer length than allowed')
	      validate('}')

	      if (type !== 'string') validate('}')
	    }

	    if (node.minLength !== undefined) {
	      if (type !== 'string') validate('if (%s) {', types.string(name))

	      validate('if (%s.length < %d) {', name, node.minLength)
	      error('has less length than allowed')
	      validate('}')

	      if (type !== 'string') validate('}')
	    }

	    if (node.minimum !== undefined) {
	      validate('if (%s %s %d) {', name, node.exclusiveMinimum ? '<=' : '<', node.minimum)
	      error('is less than minimum')
	      validate('}')
	    }

	    if (node.maximum !== undefined) {
	      validate('if (%s %s %d) {', name, node.exclusiveMaximum ? '>=' : '>', node.maximum)
	      error('is more than maximum')
	      validate('}')
	    }

	    if (properties) {
	      Object.keys(properties).forEach(function(p) {
	        if (Array.isArray(type) && type.indexOf('null') !== -1) validate('if (%s !== null) {', name)

	        visit(genobj(name, p), properties[p], reporter, filter)

	        if (Array.isArray(type) && type.indexOf('null') !== -1) validate('}')
	      })
	    }

	    while (indent--) validate('}')
	  }

	  var validate = genfun
	    ('function validate(data) {')
	      ('validate.errors = null')
	      ('var errors = 0')

	  visit('data', schema, reporter, opts && opts.filter)

	  validate
	      ('return errors === 0')
	    ('}')

	  validate = validate.toFunction(scope)
	  validate.errors = null

	  validate.__defineGetter__('error', function() {
	    if (!validate.errors) return ''
	    return validate.errors
	      .map(function(err) {
	        return err.field+' '+err.message
	      })
	      .join('\n')
	  })

	  validate.toJSON = function() {
	    return schema
	  }

	  return validate
	}

	module.exports = function(schema, opts) {
	  if (typeof schema === 'string') schema = JSON.parse(schema)
	  return compile(schema, {}, schema, true, opts)
	}

	module.exports.filter = function(schema, opts) {
	  var validate = module.exports(schema, xtend(opts, {filter: true}))
	  return function(sch) {
	    validate(sch)
	    return sch
	  }
	}


/***/ },
/* 624 */
/***/ function(module, exports, __webpack_require__) {

	var isProperty = __webpack_require__(625)

	var gen = function(obj, prop) {
	  return isProperty(prop) ? obj+'.'+prop : obj+'['+JSON.stringify(prop)+']'
	}

	gen.valid = isProperty
	gen.property = function (prop) {
	 return isProperty(prop) ? prop : JSON.stringify(prop)
	}

	module.exports = gen


/***/ },
/* 625 */
/***/ function(module, exports) {

	"use strict"
	function isProperty(str) {
	  return /^[$A-Z\_a-z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc][$A-Z\_a-z\xaa\xb5\xba\xc0-\xd6\xd8-\xf6\xf8-\u02c1\u02c6-\u02d1\u02e0-\u02e4\u02ec\u02ee\u0370-\u0374\u0376\u0377\u037a-\u037d\u0386\u0388-\u038a\u038c\u038e-\u03a1\u03a3-\u03f5\u03f7-\u0481\u048a-\u0527\u0531-\u0556\u0559\u0561-\u0587\u05d0-\u05ea\u05f0-\u05f2\u0620-\u064a\u066e\u066f\u0671-\u06d3\u06d5\u06e5\u06e6\u06ee\u06ef\u06fa-\u06fc\u06ff\u0710\u0712-\u072f\u074d-\u07a5\u07b1\u07ca-\u07ea\u07f4\u07f5\u07fa\u0800-\u0815\u081a\u0824\u0828\u0840-\u0858\u08a0\u08a2-\u08ac\u0904-\u0939\u093d\u0950\u0958-\u0961\u0971-\u0977\u0979-\u097f\u0985-\u098c\u098f\u0990\u0993-\u09a8\u09aa-\u09b0\u09b2\u09b6-\u09b9\u09bd\u09ce\u09dc\u09dd\u09df-\u09e1\u09f0\u09f1\u0a05-\u0a0a\u0a0f\u0a10\u0a13-\u0a28\u0a2a-\u0a30\u0a32\u0a33\u0a35\u0a36\u0a38\u0a39\u0a59-\u0a5c\u0a5e\u0a72-\u0a74\u0a85-\u0a8d\u0a8f-\u0a91\u0a93-\u0aa8\u0aaa-\u0ab0\u0ab2\u0ab3\u0ab5-\u0ab9\u0abd\u0ad0\u0ae0\u0ae1\u0b05-\u0b0c\u0b0f\u0b10\u0b13-\u0b28\u0b2a-\u0b30\u0b32\u0b33\u0b35-\u0b39\u0b3d\u0b5c\u0b5d\u0b5f-\u0b61\u0b71\u0b83\u0b85-\u0b8a\u0b8e-\u0b90\u0b92-\u0b95\u0b99\u0b9a\u0b9c\u0b9e\u0b9f\u0ba3\u0ba4\u0ba8-\u0baa\u0bae-\u0bb9\u0bd0\u0c05-\u0c0c\u0c0e-\u0c10\u0c12-\u0c28\u0c2a-\u0c33\u0c35-\u0c39\u0c3d\u0c58\u0c59\u0c60\u0c61\u0c85-\u0c8c\u0c8e-\u0c90\u0c92-\u0ca8\u0caa-\u0cb3\u0cb5-\u0cb9\u0cbd\u0cde\u0ce0\u0ce1\u0cf1\u0cf2\u0d05-\u0d0c\u0d0e-\u0d10\u0d12-\u0d3a\u0d3d\u0d4e\u0d60\u0d61\u0d7a-\u0d7f\u0d85-\u0d96\u0d9a-\u0db1\u0db3-\u0dbb\u0dbd\u0dc0-\u0dc6\u0e01-\u0e30\u0e32\u0e33\u0e40-\u0e46\u0e81\u0e82\u0e84\u0e87\u0e88\u0e8a\u0e8d\u0e94-\u0e97\u0e99-\u0e9f\u0ea1-\u0ea3\u0ea5\u0ea7\u0eaa\u0eab\u0ead-\u0eb0\u0eb2\u0eb3\u0ebd\u0ec0-\u0ec4\u0ec6\u0edc-\u0edf\u0f00\u0f40-\u0f47\u0f49-\u0f6c\u0f88-\u0f8c\u1000-\u102a\u103f\u1050-\u1055\u105a-\u105d\u1061\u1065\u1066\u106e-\u1070\u1075-\u1081\u108e\u10a0-\u10c5\u10c7\u10cd\u10d0-\u10fa\u10fc-\u1248\u124a-\u124d\u1250-\u1256\u1258\u125a-\u125d\u1260-\u1288\u128a-\u128d\u1290-\u12b0\u12b2-\u12b5\u12b8-\u12be\u12c0\u12c2-\u12c5\u12c8-\u12d6\u12d8-\u1310\u1312-\u1315\u1318-\u135a\u1380-\u138f\u13a0-\u13f4\u1401-\u166c\u166f-\u167f\u1681-\u169a\u16a0-\u16ea\u16ee-\u16f0\u1700-\u170c\u170e-\u1711\u1720-\u1731\u1740-\u1751\u1760-\u176c\u176e-\u1770\u1780-\u17b3\u17d7\u17dc\u1820-\u1877\u1880-\u18a8\u18aa\u18b0-\u18f5\u1900-\u191c\u1950-\u196d\u1970-\u1974\u1980-\u19ab\u19c1-\u19c7\u1a00-\u1a16\u1a20-\u1a54\u1aa7\u1b05-\u1b33\u1b45-\u1b4b\u1b83-\u1ba0\u1bae\u1baf\u1bba-\u1be5\u1c00-\u1c23\u1c4d-\u1c4f\u1c5a-\u1c7d\u1ce9-\u1cec\u1cee-\u1cf1\u1cf5\u1cf6\u1d00-\u1dbf\u1e00-\u1f15\u1f18-\u1f1d\u1f20-\u1f45\u1f48-\u1f4d\u1f50-\u1f57\u1f59\u1f5b\u1f5d\u1f5f-\u1f7d\u1f80-\u1fb4\u1fb6-\u1fbc\u1fbe\u1fc2-\u1fc4\u1fc6-\u1fcc\u1fd0-\u1fd3\u1fd6-\u1fdb\u1fe0-\u1fec\u1ff2-\u1ff4\u1ff6-\u1ffc\u2071\u207f\u2090-\u209c\u2102\u2107\u210a-\u2113\u2115\u2119-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2139\u213c-\u213f\u2145-\u2149\u214e\u2160-\u2188\u2c00-\u2c2e\u2c30-\u2c5e\u2c60-\u2ce4\u2ceb-\u2cee\u2cf2\u2cf3\u2d00-\u2d25\u2d27\u2d2d\u2d30-\u2d67\u2d6f\u2d80-\u2d96\u2da0-\u2da6\u2da8-\u2dae\u2db0-\u2db6\u2db8-\u2dbe\u2dc0-\u2dc6\u2dc8-\u2dce\u2dd0-\u2dd6\u2dd8-\u2dde\u2e2f\u3005-\u3007\u3021-\u3029\u3031-\u3035\u3038-\u303c\u3041-\u3096\u309d-\u309f\u30a1-\u30fa\u30fc-\u30ff\u3105-\u312d\u3131-\u318e\u31a0-\u31ba\u31f0-\u31ff\u3400-\u4db5\u4e00-\u9fcc\ua000-\ua48c\ua4d0-\ua4fd\ua500-\ua60c\ua610-\ua61f\ua62a\ua62b\ua640-\ua66e\ua67f-\ua697\ua6a0-\ua6ef\ua717-\ua71f\ua722-\ua788\ua78b-\ua78e\ua790-\ua793\ua7a0-\ua7aa\ua7f8-\ua801\ua803-\ua805\ua807-\ua80a\ua80c-\ua822\ua840-\ua873\ua882-\ua8b3\ua8f2-\ua8f7\ua8fb\ua90a-\ua925\ua930-\ua946\ua960-\ua97c\ua984-\ua9b2\ua9cf\uaa00-\uaa28\uaa40-\uaa42\uaa44-\uaa4b\uaa60-\uaa76\uaa7a\uaa80-\uaaaf\uaab1\uaab5\uaab6\uaab9-\uaabd\uaac0\uaac2\uaadb-\uaadd\uaae0-\uaaea\uaaf2-\uaaf4\uab01-\uab06\uab09-\uab0e\uab11-\uab16\uab20-\uab26\uab28-\uab2e\uabc0-\uabe2\uac00-\ud7a3\ud7b0-\ud7c6\ud7cb-\ud7fb\uf900-\ufa6d\ufa70-\ufad9\ufb00-\ufb06\ufb13-\ufb17\ufb1d\ufb1f-\ufb28\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40\ufb41\ufb43\ufb44\ufb46-\ufbb1\ufbd3-\ufd3d\ufd50-\ufd8f\ufd92-\ufdc7\ufdf0-\ufdfb\ufe70-\ufe74\ufe76-\ufefc\uff21-\uff3a\uff41-\uff5a\uff66-\uffbe\uffc2-\uffc7\uffca-\uffcf\uffd2-\uffd7\uffda-\uffdc0-9\u0300-\u036f\u0483-\u0487\u0591-\u05bd\u05bf\u05c1\u05c2\u05c4\u05c5\u05c7\u0610-\u061a\u064b-\u0669\u0670\u06d6-\u06dc\u06df-\u06e4\u06e7\u06e8\u06ea-\u06ed\u06f0-\u06f9\u0711\u0730-\u074a\u07a6-\u07b0\u07c0-\u07c9\u07eb-\u07f3\u0816-\u0819\u081b-\u0823\u0825-\u0827\u0829-\u082d\u0859-\u085b\u08e4-\u08fe\u0900-\u0903\u093a-\u093c\u093e-\u094f\u0951-\u0957\u0962\u0963\u0966-\u096f\u0981-\u0983\u09bc\u09be-\u09c4\u09c7\u09c8\u09cb-\u09cd\u09d7\u09e2\u09e3\u09e6-\u09ef\u0a01-\u0a03\u0a3c\u0a3e-\u0a42\u0a47\u0a48\u0a4b-\u0a4d\u0a51\u0a66-\u0a71\u0a75\u0a81-\u0a83\u0abc\u0abe-\u0ac5\u0ac7-\u0ac9\u0acb-\u0acd\u0ae2\u0ae3\u0ae6-\u0aef\u0b01-\u0b03\u0b3c\u0b3e-\u0b44\u0b47\u0b48\u0b4b-\u0b4d\u0b56\u0b57\u0b62\u0b63\u0b66-\u0b6f\u0b82\u0bbe-\u0bc2\u0bc6-\u0bc8\u0bca-\u0bcd\u0bd7\u0be6-\u0bef\u0c01-\u0c03\u0c3e-\u0c44\u0c46-\u0c48\u0c4a-\u0c4d\u0c55\u0c56\u0c62\u0c63\u0c66-\u0c6f\u0c82\u0c83\u0cbc\u0cbe-\u0cc4\u0cc6-\u0cc8\u0cca-\u0ccd\u0cd5\u0cd6\u0ce2\u0ce3\u0ce6-\u0cef\u0d02\u0d03\u0d3e-\u0d44\u0d46-\u0d48\u0d4a-\u0d4d\u0d57\u0d62\u0d63\u0d66-\u0d6f\u0d82\u0d83\u0dca\u0dcf-\u0dd4\u0dd6\u0dd8-\u0ddf\u0df2\u0df3\u0e31\u0e34-\u0e3a\u0e47-\u0e4e\u0e50-\u0e59\u0eb1\u0eb4-\u0eb9\u0ebb\u0ebc\u0ec8-\u0ecd\u0ed0-\u0ed9\u0f18\u0f19\u0f20-\u0f29\u0f35\u0f37\u0f39\u0f3e\u0f3f\u0f71-\u0f84\u0f86\u0f87\u0f8d-\u0f97\u0f99-\u0fbc\u0fc6\u102b-\u103e\u1040-\u1049\u1056-\u1059\u105e-\u1060\u1062-\u1064\u1067-\u106d\u1071-\u1074\u1082-\u108d\u108f-\u109d\u135d-\u135f\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17b4-\u17d3\u17dd\u17e0-\u17e9\u180b-\u180d\u1810-\u1819\u18a9\u1920-\u192b\u1930-\u193b\u1946-\u194f\u19b0-\u19c0\u19c8\u19c9\u19d0-\u19d9\u1a17-\u1a1b\u1a55-\u1a5e\u1a60-\u1a7c\u1a7f-\u1a89\u1a90-\u1a99\u1b00-\u1b04\u1b34-\u1b44\u1b50-\u1b59\u1b6b-\u1b73\u1b80-\u1b82\u1ba1-\u1bad\u1bb0-\u1bb9\u1be6-\u1bf3\u1c24-\u1c37\u1c40-\u1c49\u1c50-\u1c59\u1cd0-\u1cd2\u1cd4-\u1ce8\u1ced\u1cf2-\u1cf4\u1dc0-\u1de6\u1dfc-\u1dff\u200c\u200d\u203f\u2040\u2054\u20d0-\u20dc\u20e1\u20e5-\u20f0\u2cef-\u2cf1\u2d7f\u2de0-\u2dff\u302a-\u302f\u3099\u309a\ua620-\ua629\ua66f\ua674-\ua67d\ua69f\ua6f0\ua6f1\ua802\ua806\ua80b\ua823-\ua827\ua880\ua881\ua8b4-\ua8c4\ua8d0-\ua8d9\ua8e0-\ua8f1\ua900-\ua909\ua926-\ua92d\ua947-\ua953\ua980-\ua983\ua9b3-\ua9c0\ua9d0-\ua9d9\uaa29-\uaa36\uaa43\uaa4c\uaa4d\uaa50-\uaa59\uaa7b\uaab0\uaab2-\uaab4\uaab7\uaab8\uaabe\uaabf\uaac1\uaaeb-\uaaef\uaaf5\uaaf6\uabe3-\uabea\uabec\uabed\uabf0-\uabf9\ufb1e\ufe00-\ufe0f\ufe20-\ufe26\ufe33\ufe34\ufe4d-\ufe4f\uff10-\uff19\uff3f]*$/.test(str)
	}
	module.exports = isProperty

/***/ },
/* 626 */
/***/ function(module, exports, __webpack_require__) {

	var util = __webpack_require__(471)

	var INDENT_START = /[\{\[]/
	var INDENT_END = /[\}\]]/

	module.exports = function() {
	  var lines = []
	  var indent = 0

	  var push = function(str) {
	    var spaces = ''
	    while (spaces.length < indent*2) spaces += '  '
	    lines.push(spaces+str)
	  }

	  var line = function(fmt) {
	    if (!fmt) return line

	    if (INDENT_END.test(fmt.trim()[0]) && INDENT_START.test(fmt[fmt.length-1])) {
	      indent--
	      push(util.format.apply(util, arguments))
	      indent++
	      return line
	    }
	    if (INDENT_START.test(fmt[fmt.length-1])) {
	      push(util.format.apply(util, arguments))
	      indent++
	      return line
	    }
	    if (INDENT_END.test(fmt.trim()[0])) {
	      indent--
	      push(util.format.apply(util, arguments))
	      return line
	    }

	    push(util.format.apply(util, arguments))
	    return line
	  }

	  line.toString = function() {
	    return lines.join('\n')
	  }

	  line.toFunction = function(scope) {
	    var src = 'return ('+line.toString()+')'

	    var keys = Object.keys(scope || {}).map(function(key) {
	      return key
	    })

	    var vals = keys.map(function(key) {
	      return scope[key]
	    })

	    return Function.apply(null, keys.concat(src)).apply(null, vals)
	  }

	  if (arguments.length) line.apply(null, arguments)

	  return line
	}


/***/ },
/* 627 */
/***/ function(module, exports) {

	var untilde = function(str) {
	  return str.replace(/~./g, function(m) {
	    switch (m) {
	      case "~0":
	        return "~";
	      case "~1":
	        return "/";
	    }
	    throw new Error("Invalid tilde escape: " + m);
	  });
	}

	var traverse = function(obj, pointer, value) {
	  // assert(isArray(pointer))
	  var part = untilde(pointer.shift());
	  if(!obj.hasOwnProperty(part)) {
	    return null;
	  }
	  if(pointer.length !== 0) { // keep traversin!
	    return traverse(obj[part], pointer, value);
	  }
	  // we're done
	  if(typeof value === "undefined") {
	    // just reading
	    return obj[part];
	  }
	  // set new value, return old value
	  var old_value = obj[part];
	  if(value === null) {
	    delete obj[part];
	  } else {
	    obj[part] = value;
	  }
	  return old_value;
	}

	var validate_input = function(obj, pointer) {
	  if(typeof obj !== "object") {
	    throw new Error("Invalid input object.");
	  }

	  if(pointer === "") {
	    return [];
	  }

	  if(!pointer) {
	    throw new Error("Invalid JSON pointer.");
	  }

	  pointer = pointer.split("/");
	  var first = pointer.shift();
	  if (first !== "") {
	    throw new Error("Invalid JSON pointer.");
	  }

	  return pointer;
	}

	var get = function(obj, pointer) {
	  pointer = validate_input(obj, pointer);
	  if (pointer.length === 0) {
	    return obj;
	  }
	  return traverse(obj, pointer);
	}

	var set = function(obj, pointer, value) {
	  pointer = validate_input(obj, pointer);
	  if (pointer.length === 0) {
	    throw new Error("Invalid JSON pointer for set.")
	  }
	  return traverse(obj, pointer, value);
	}

	exports.get = get
	exports.set = set


/***/ },
/* 628 */
/***/ function(module, exports) {

	module.exports = extend

	function extend() {
	    var target = {}

	    for (var i = 0; i < arguments.length; i++) {
	        var source = arguments[i]

	        for (var key in source) {
	            if (source.hasOwnProperty(key)) {
	                target[key] = source[key]
	            }
	        }
	    }

	    return target
	}


/***/ },
/* 629 */
/***/ function(module, exports) {

	exports['date-time'] = /^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}[tT ]\d{2}:\d{2}:\d{2}(\.\d+)?([zZ]|[+-]\d{2}:\d{2})$/
	exports['date'] = /^\d{4}-(?:0[0-9]{1}|1[0-2]{1})-[0-9]{2}$/
	exports['time'] = /^\d{2}:\d{2}:\d{2}$/
	exports['email'] = /^\S+@\S+$/
	exports['ip-address'] = exports['ipv4'] = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/
	exports['ipv6'] = /^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/
	exports['uri'] = /^[a-zA-Z][a-zA-Z0-9+-.]*:[^\s]*$/
	exports['color'] = /(#?([0-9A-Fa-f]{3,6})\b)|(aqua)|(black)|(blue)|(fuchsia)|(gray)|(green)|(lime)|(maroon)|(navy)|(olive)|(orange)|(purple)|(red)|(silver)|(teal)|(white)|(yellow)|(rgb\(\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*,\s*\b([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\b\s*\))|(rgb\(\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*,\s*(\d?\d%|100%)+\s*\))/
	exports['hostname'] = /^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$/
	exports['alpha'] = /^[a-zA-Z]+$/
	exports['alphanumeric'] = /^[a-zA-Z0-9]+$/
	exports['style'] = /\s*(.+?):\s*([^;]+);?/g
	exports['phone'] = /^\+(?:[0-9] ?){6,14}[0-9]$/
	exports['utc-millisec'] = /^[0-9]+(\.?[0-9]+)?$/


/***/ },
/* 630 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var caseless = __webpack_require__(590)
	  , uuid = __webpack_require__(631)
	  , helpers = __webpack_require__(537)

	var md5 = helpers.md5
	  , toBase64 = helpers.toBase64


	function Auth (request) {
	  // define all public properties here
	  this.request = request
	  this.hasAuth = false
	  this.sentAuth = false
	  this.bearerToken = null
	  this.user = null
	  this.pass = null
	}

	Auth.prototype.basic = function (user, pass, sendImmediately) {
	  var self = this
	  if (typeof user !== 'string' || (pass !== undefined && typeof pass !== 'string')) {
	    self.request.emit('error', new Error('auth() received invalid user or password'))
	  }
	  self.user = user
	  self.pass = pass
	  self.hasAuth = true
	  var header = user + ':' + (pass || '')
	  if (sendImmediately || typeof sendImmediately === 'undefined') {
	    var authHeader = 'Basic ' + toBase64(header)
	    self.sentAuth = true
	    return authHeader
	  }
	}

	Auth.prototype.bearer = function (bearer, sendImmediately) {
	  var self = this
	  self.bearerToken = bearer
	  self.hasAuth = true
	  if (sendImmediately || typeof sendImmediately === 'undefined') {
	    if (typeof bearer === 'function') {
	      bearer = bearer()
	    }
	    var authHeader = 'Bearer ' + (bearer || '')
	    self.sentAuth = true
	    return authHeader
	  }
	}

	Auth.prototype.digest = function (method, path, authHeader) {
	  // TODO: More complete implementation of RFC 2617.
	  //   - check challenge.algorithm
	  //   - support algorithm="MD5-sess"
	  //   - handle challenge.domain
	  //   - support qop="auth-int" only
	  //   - handle Authentication-Info (not necessarily?)
	  //   - check challenge.stale (not necessarily?)
	  //   - increase nc (not necessarily?)
	  // For reference:
	  // http://tools.ietf.org/html/rfc2617#section-3
	  // https://github.com/bagder/curl/blob/master/lib/http_digest.c

	  var self = this

	  var challenge = {}
	  var re = /([a-z0-9_-]+)=(?:"([^"]+)"|([a-z0-9_-]+))/gi
	  for (;;) {
	    var match = re.exec(authHeader)
	    if (!match) {
	      break
	    }
	    challenge[match[1]] = match[2] || match[3]
	  }

	  var ha1 = md5(self.user + ':' + challenge.realm + ':' + self.pass)
	  var ha2 = md5(method + ':' + path)
	  var qop = /(^|,)\s*auth\s*($|,)/.test(challenge.qop) && 'auth'
	  var nc = qop && '00000001'
	  var cnonce = qop && uuid().replace(/-/g, '')
	  var digestResponse = qop
	    ? md5(ha1 + ':' + challenge.nonce + ':' + nc + ':' + cnonce + ':' + qop + ':' + ha2)
	    : md5(ha1 + ':' + challenge.nonce + ':' + ha2)
	  var authValues = {
	    username: self.user,
	    realm: challenge.realm,
	    nonce: challenge.nonce,
	    uri: path,
	    qop: qop,
	    response: digestResponse,
	    nc: nc,
	    cnonce: cnonce,
	    algorithm: challenge.algorithm,
	    opaque: challenge.opaque
	  }

	  authHeader = []
	  for (var k in authValues) {
	    if (authValues[k]) {
	      if (k === 'qop' || k === 'nc' || k === 'algorithm') {
	        authHeader.push(k + '=' + authValues[k])
	      } else {
	        authHeader.push(k + '="' + authValues[k] + '"')
	      }
	    }
	  }
	  authHeader = 'Digest ' + authHeader.join(', ')
	  self.sentAuth = true
	  return authHeader
	}

	Auth.prototype.onRequest = function (user, pass, sendImmediately, bearer) {
	  var self = this
	    , request = self.request

	  var authHeader
	  if (bearer === undefined && user === undefined) {
	    self.request.emit('error', new Error('no auth mechanism defined'))
	  } else if (bearer !== undefined) {
	    authHeader = self.bearer(bearer, sendImmediately)
	  } else {
	    authHeader = self.basic(user, pass, sendImmediately)
	  }
	  if (authHeader) {
	    request.setHeader('authorization', authHeader)
	  }
	}

	Auth.prototype.onResponse = function (response) {
	  var self = this
	    , request = self.request

	  if (!self.hasAuth || self.sentAuth) { return null }

	  var c = caseless(response.headers)

	  var authHeader = c.get('www-authenticate')
	  var authVerb = authHeader && authHeader.split(' ')[0].toLowerCase()
	  request.debug('reauth', authVerb)

	  switch (authVerb) {
	    case 'basic':
	      return self.basic(self.user, self.pass, true)

	    case 'bearer':
	      return self.bearer(self.bearerToken, true)

	    case 'digest':
	      return self.digest(request.method, request.path, authHeader)
	  }
	}

	exports.Auth = Auth


/***/ },
/* 631 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;//     uuid.js
	//
	//     Copyright (c) 2010-2012 Robert Kieffer
	//     MIT License - http://opensource.org/licenses/mit-license.php

	(function() {
	  var _global = this;

	  // Unique ID creation requires a high quality random # generator.  We feature
	  // detect to determine the best RNG source, normalizing to a function that
	  // returns 128-bits of randomness, since that's what's usually required
	  var _rng;

	  // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html
	  //
	  // Moderately fast, high quality
	  if (typeof(_global.require) == 'function') {
	    try {
	      var _rb = _global.require('crypto').randomBytes;
	      _rng = _rb && function() {return _rb(16);};
	    } catch(e) {}
	  }

	  if (!_rng && _global.crypto && crypto.getRandomValues) {
	    // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
	    //
	    // Moderately fast, high quality
	    var _rnds8 = new Uint8Array(16);
	    _rng = function whatwgRNG() {
	      crypto.getRandomValues(_rnds8);
	      return _rnds8;
	    };
	  }

	  if (!_rng) {
	    // Math.random()-based (RNG)
	    //
	    // If all else fails, use Math.random().  It's fast, but is of unspecified
	    // quality.
	    var  _rnds = new Array(16);
	    _rng = function() {
	      for (var i = 0, r; i < 16; i++) {
	        if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
	        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
	      }

	      return _rnds;
	    };
	  }

	  // Buffer class to use
	  var BufferClass = typeof(_global.Buffer) == 'function' ? _global.Buffer : Array;

	  // Maps for number <-> hex string conversion
	  var _byteToHex = [];
	  var _hexToByte = {};
	  for (var i = 0; i < 256; i++) {
	    _byteToHex[i] = (i + 0x100).toString(16).substr(1);
	    _hexToByte[_byteToHex[i]] = i;
	  }

	  // **`parse()` - Parse a UUID into it's component bytes**
	  function parse(s, buf, offset) {
	    var i = (buf && offset) || 0, ii = 0;

	    buf = buf || [];
	    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {
	      if (ii < 16) { // Don't overflow!
	        buf[i + ii++] = _hexToByte[oct];
	      }
	    });

	    // Zero out remaining bytes if string was short
	    while (ii < 16) {
	      buf[i + ii++] = 0;
	    }

	    return buf;
	  }

	  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**
	  function unparse(buf, offset) {
	    var i = offset || 0, bth = _byteToHex;
	    return  bth[buf[i++]] + bth[buf[i++]] +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] + '-' +
	            bth[buf[i++]] + bth[buf[i++]] +
	            bth[buf[i++]] + bth[buf[i++]] +
	            bth[buf[i++]] + bth[buf[i++]];
	  }

	  // **`v1()` - Generate time-based UUID**
	  //
	  // Inspired by https://github.com/LiosK/UUID.js
	  // and http://docs.python.org/library/uuid.html

	  // random #'s we need to init node and clockseq
	  var _seedBytes = _rng();

	  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
	  var _nodeId = [
	    _seedBytes[0] | 0x01,
	    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]
	  ];

	  // Per 4.2.2, randomize (14 bit) clockseq
	  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

	  // Previous uuid creation time
	  var _lastMSecs = 0, _lastNSecs = 0;

	  // See https://github.com/broofa/node-uuid for API details
	  function v1(options, buf, offset) {
	    var i = buf && offset || 0;
	    var b = buf || [];

	    options = options || {};

	    var clockseq = options.clockseq != null ? options.clockseq : _clockseq;

	    // UUID timestamps are 100 nano-second units since the Gregorian epoch,
	    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
	    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
	    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
	    var msecs = options.msecs != null ? options.msecs : new Date().getTime();

	    // Per 4.2.1.2, use count of uuid's generated during the current clock
	    // cycle to simulate higher resolution clock
	    var nsecs = options.nsecs != null ? options.nsecs : _lastNSecs + 1;

	    // Time since last uuid creation (in msecs)
	    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

	    // Per 4.2.1.2, Bump clockseq on clock regression
	    if (dt < 0 && options.clockseq == null) {
	      clockseq = clockseq + 1 & 0x3fff;
	    }

	    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
	    // time interval
	    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {
	      nsecs = 0;
	    }

	    // Per 4.2.1.2 Throw error if too many uuids are requested
	    if (nsecs >= 10000) {
	      throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
	    }

	    _lastMSecs = msecs;
	    _lastNSecs = nsecs;
	    _clockseq = clockseq;

	    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
	    msecs += 12219292800000;

	    // `time_low`
	    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
	    b[i++] = tl >>> 24 & 0xff;
	    b[i++] = tl >>> 16 & 0xff;
	    b[i++] = tl >>> 8 & 0xff;
	    b[i++] = tl & 0xff;

	    // `time_mid`
	    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
	    b[i++] = tmh >>> 8 & 0xff;
	    b[i++] = tmh & 0xff;

	    // `time_high_and_version`
	    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
	    b[i++] = tmh >>> 16 & 0xff;

	    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
	    b[i++] = clockseq >>> 8 | 0x80;

	    // `clock_seq_low`
	    b[i++] = clockseq & 0xff;

	    // `node`
	    var node = options.node || _nodeId;
	    for (var n = 0; n < 6; n++) {
	      b[i + n] = node[n];
	    }

	    return buf ? buf : unparse(b);
	  }

	  // **`v4()` - Generate random UUID**

	  // See https://github.com/broofa/node-uuid for API details
	  function v4(options, buf, offset) {
	    // Deprecated - 'format' argument, as supported in v1.2
	    var i = buf && offset || 0;

	    if (typeof(options) == 'string') {
	      buf = options == 'binary' ? new BufferClass(16) : null;
	      options = null;
	    }
	    options = options || {};

	    var rnds = options.random || (options.rng || _rng)();

	    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
	    rnds[6] = (rnds[6] & 0x0f) | 0x40;
	    rnds[8] = (rnds[8] & 0x3f) | 0x80;

	    // Copy bytes to buffer, if provided
	    if (buf) {
	      for (var ii = 0; ii < 16; ii++) {
	        buf[i + ii] = rnds[ii];
	      }
	    }

	    return buf || unparse(rnds);
	  }

	  // Export public API
	  var uuid = v4;
	  uuid.v1 = v1;
	  uuid.v4 = v4;
	  uuid.parse = parse;
	  uuid.unparse = unparse;
	  uuid.BufferClass = BufferClass;

	  if (typeof(module) != 'undefined' && module.exports) {
	    // Publish as node.js module
	    module.exports = uuid;
	  } else  if (true) {
	    // Publish as AMD module
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {return uuid;}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	 

	  } else {
	    // Publish as global (in browsers)
	    var _previousRoot = _global.uuid;

	    // **`noConflict()` - (browser only) to reset global 'uuid' var**
	    uuid.noConflict = function() {
	      _global.uuid = _previousRoot;
	      return uuid;
	    };

	    _global.uuid = uuid;
	  }
	}).call(this);


/***/ },
/* 632 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var url = __webpack_require__(13)
	  , qs = __webpack_require__(599)
	  , caseless = __webpack_require__(590)
	  , uuid = __webpack_require__(631)
	  , oauth = __webpack_require__(633)
	  , crypto = __webpack_require__(539)


	function OAuth (request) {
	  this.request = request
	  this.params = null
	}

	OAuth.prototype.buildParams = function (_oauth, uri, method, query, form, qsLib) {
	  var oa = {}
	  for (var i in _oauth) {
	    oa['oauth_' + i] = _oauth[i]
	  }
	  if (!oa.oauth_version) {
	    oa.oauth_version = '1.0'
	  }
	  if (!oa.oauth_timestamp) {
	    oa.oauth_timestamp = Math.floor( Date.now() / 1000 ).toString()
	  }
	  if (!oa.oauth_nonce) {
	    oa.oauth_nonce = uuid().replace(/-/g, '')
	  }
	  if (!oa.oauth_signature_method) {
	    oa.oauth_signature_method = 'HMAC-SHA1'
	  }

	  var consumer_secret_or_private_key = oa.oauth_consumer_secret || oa.oauth_private_key
	  delete oa.oauth_consumer_secret
	  delete oa.oauth_private_key

	  var token_secret = oa.oauth_token_secret
	  delete oa.oauth_token_secret

	  var realm = oa.oauth_realm
	  delete oa.oauth_realm
	  delete oa.oauth_transport_method

	  var baseurl = uri.protocol + '//' + uri.host + uri.pathname
	  var params = qsLib.parse([].concat(query, form, qsLib.stringify(oa)).join('&'))

	  oa.oauth_signature = oauth.sign(
	    oa.oauth_signature_method,
	    method,
	    baseurl,
	    params,
	    consumer_secret_or_private_key,
	    token_secret)

	  if (realm) {
	    oa.realm = realm
	  }

	  return oa
	}

	OAuth.prototype.buildBodyHash = function(_oauth, body) {
	  if (['HMAC-SHA1', 'RSA-SHA1'].indexOf(_oauth.signature_method || 'HMAC-SHA1') < 0) {
	    this.request.emit('error', new Error('oauth: ' + _oauth.signature_method +
	      ' signature_method not supported with body_hash signing.'))
	  }

	  var shasum = crypto.createHash('sha1')
	  shasum.update(body || '')
	  var sha1 = shasum.digest('hex')

	  return new Buffer(sha1).toString('base64')
	}

	OAuth.prototype.concatParams = function (oa, sep, wrap) {
	  wrap = wrap || ''

	  var params = Object.keys(oa).filter(function (i) {
	    return i !== 'realm' && i !== 'oauth_signature'
	  }).sort()

	  if (oa.realm) {
	    params.splice(0, 0, 'realm')
	  }
	  params.push('oauth_signature')

	  return params.map(function (i) {
	    return i + '=' + wrap + oauth.rfc3986(oa[i]) + wrap
	  }).join(sep)
	}

	OAuth.prototype.onRequest = function (_oauth) {
	  var self = this
	  self.params = _oauth

	  var uri = self.request.uri || {}
	    , method = self.request.method || ''
	    , headers = caseless(self.request.headers)
	    , body = self.request.body || ''
	    , qsLib = self.request.qsLib || qs

	  var form
	    , query
	    , contentType = headers.get('content-type') || ''
	    , formContentType = 'application/x-www-form-urlencoded'
	    , transport = _oauth.transport_method || 'header'

	  if (contentType.slice(0, formContentType.length) === formContentType) {
	    contentType = formContentType
	    form = body
	  }
	  if (uri.query) {
	    query = uri.query
	  }
	  if (transport === 'body' && (method !== 'POST' || contentType !== formContentType)) {
	    self.request.emit('error', new Error('oauth: transport_method of body requires POST ' +
	      'and content-type ' + formContentType))
	  }

	  if (!form && typeof _oauth.body_hash === 'boolean') {
	    _oauth.body_hash = self.buildBodyHash(_oauth, self.request.body.toString())
	  }

	  var oa = self.buildParams(_oauth, uri, method, query, form, qsLib)

	  switch (transport) {
	    case 'header':
	      self.request.setHeader('Authorization', 'OAuth ' + self.concatParams(oa, ',', '"'))
	      break

	    case 'query':
	      var href = self.request.uri.href += (query ? '&' : '?') + self.concatParams(oa, '&')
	      self.request.uri = url.parse(href)
	      self.request.path = self.request.uri.path
	      break

	    case 'body':
	      self.request.body = (form ? form + '&' : '') + self.concatParams(oa, '&')
	      break

	    default:
	      self.request.emit('error', new Error('oauth: transport_method invalid'))
	  }
	}

	exports.OAuth = OAuth


/***/ },
/* 633 */
/***/ function(module, exports, __webpack_require__) {

	var crypto = __webpack_require__(539)
	  , qs = __webpack_require__(603)
	  ;

	function sha1 (key, body) {
	  return crypto.createHmac('sha1', key).update(body).digest('base64')
	}

	function rsa (key, body) {
	  return crypto.createSign("RSA-SHA1").update(body).sign(key, 'base64');
	}

	function rfc3986 (str) {
	  return encodeURIComponent(str)
	    .replace(/!/g,'%21')
	    .replace(/\*/g,'%2A')
	    .replace(/\(/g,'%28')
	    .replace(/\)/g,'%29')
	    .replace(/'/g,'%27')
	    ;
	}

	// Maps object to bi-dimensional array
	// Converts { foo: 'A', bar: [ 'b', 'B' ]} to
	// [ ['foo', 'A'], ['bar', 'b'], ['bar', 'B'] ]
	function map (obj) {
	  var key, val, arr = []
	  for (key in obj) {
	    val = obj[key]
	    if (Array.isArray(val))
	      for (var i = 0; i < val.length; i++)
	        arr.push([key, val[i]])
	    else if (typeof val === "object")
	      for (var prop in val)
	        arr.push([key + '[' + prop + ']', val[prop]]);
	    else
	      arr.push([key, val])
	  }
	  return arr
	}

	// Compare function for sort
	function compare (a, b) {
	  return a > b ? 1 : a < b ? -1 : 0
	}

	function generateBase (httpMethod, base_uri, params) {
	  // adapted from https://dev.twitter.com/docs/auth/oauth and 
	  // https://dev.twitter.com/docs/auth/creating-signature

	  // Parameter normalization
	  // http://tools.ietf.org/html/rfc5849#section-3.4.1.3.2
	  var normalized = map(params)
	  // 1.  First, the name and value of each parameter are encoded
	  .map(function (p) {
	    return [ rfc3986(p[0]), rfc3986(p[1] || '') ]
	  })
	  // 2.  The parameters are sorted by name, using ascending byte value
	  //     ordering.  If two or more parameters share the same name, they
	  //     are sorted by their value.
	  .sort(function (a, b) {
	    return compare(a[0], b[0]) || compare(a[1], b[1])
	  })
	  // 3.  The name of each parameter is concatenated to its corresponding
	  //     value using an "=" character (ASCII code 61) as a separator, even
	  //     if the value is empty.
	  .map(function (p) { return p.join('=') })
	   // 4.  The sorted name/value pairs are concatenated together into a
	   //     single string by using an "&" character (ASCII code 38) as
	   //     separator.
	  .join('&')

	  var base = [
	    rfc3986(httpMethod ? httpMethod.toUpperCase() : 'GET'),
	    rfc3986(base_uri),
	    rfc3986(normalized)
	  ].join('&')

	  return base
	}

	function hmacsign (httpMethod, base_uri, params, consumer_secret, token_secret) {
	  var base = generateBase(httpMethod, base_uri, params)
	  var key = [
	    consumer_secret || '',
	    token_secret || ''
	  ].map(rfc3986).join('&')

	  return sha1(key, base)
	}

	function rsasign (httpMethod, base_uri, params, private_key, token_secret) {
	  var base = generateBase(httpMethod, base_uri, params)
	  var key = private_key || ''

	  return rsa(key, base)
	}

	function plaintext (consumer_secret, token_secret) {
	  var key = [
	    consumer_secret || '',
	    token_secret || ''
	  ].map(rfc3986).join('&')

	  return key
	}

	function sign (signMethod, httpMethod, base_uri, params, consumer_secret, token_secret) {
	  var method
	  var skipArgs = 1

	  switch (signMethod) {
	    case 'RSA-SHA1':
	      method = rsasign
	      break
	    case 'HMAC-SHA1':
	      method = hmacsign
	      break
	    case 'PLAINTEXT':
	      method = plaintext
	      skipArgs = 4
	      break
	    default:
	     throw new Error("Signature method not supported: " + signMethod)
	  }

	  return method.apply(null, [].slice.call(arguments, skipArgs))
	}

	exports.hmacsign = hmacsign
	exports.rsasign = rsasign
	exports.plaintext = plaintext
	exports.sign = sign
	exports.rfc3986 = rfc3986


/***/ },
/* 634 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var uuid = __webpack_require__(631)
	  , CombinedStream = __webpack_require__(594)
	  , isstream = __webpack_require__(635)


	function Multipart (request) {
	  this.request = request
	  this.boundary = uuid()
	  this.chunked = false
	  this.body = null
	}

	Multipart.prototype.isChunked = function (options) {
	  var self = this
	    , chunked = false
	    , parts = options.data || options

	  if (!parts.forEach) {
	    self.request.emit('error', new Error('Argument error, options.multipart.'))
	  }

	  if (options.chunked !== undefined) {
	    chunked = options.chunked
	  }

	  if (self.request.getHeader('transfer-encoding') === 'chunked') {
	    chunked = true
	  }

	  if (!chunked) {
	    parts.forEach(function (part) {
	      if (typeof part.body === 'undefined') {
	        self.request.emit('error', new Error('Body attribute missing in multipart.'))
	      }
	      if (isstream(part.body)) {
	        chunked = true
	      }
	    })
	  }

	  return chunked
	}

	Multipart.prototype.setHeaders = function (chunked) {
	  var self = this

	  if (chunked && !self.request.hasHeader('transfer-encoding')) {
	    self.request.setHeader('transfer-encoding', 'chunked')
	  }

	  var header = self.request.getHeader('content-type')

	  if (!header || header.indexOf('multipart') === -1) {
	    self.request.setHeader('content-type', 'multipart/related; boundary=' + self.boundary)
	  } else {
	    if (header.indexOf('boundary') !== -1) {
	      self.boundary = header.replace(/.*boundary=([^\s;]+).*/, '$1')
	    } else {
	      self.request.setHeader('content-type', header + '; boundary=' + self.boundary)
	    }
	  }
	}

	Multipart.prototype.build = function (parts, chunked) {
	  var self = this
	  var body = chunked ? new CombinedStream() : []

	  function add (part) {
	    return chunked ? body.append(part) : body.push(new Buffer(part))
	  }

	  if (self.request.preambleCRLF) {
	    add('\r\n')
	  }

	  parts.forEach(function (part) {
	    var preamble = '--' + self.boundary + '\r\n'
	    Object.keys(part).forEach(function (key) {
	      if (key === 'body') { return }
	      preamble += key + ': ' + part[key] + '\r\n'
	    })
	    preamble += '\r\n'
	    add(preamble)
	    add(part.body)
	    add('\r\n')
	  })
	  add('--' + self.boundary + '--')

	  if (self.request.postambleCRLF) {
	    add('\r\n')
	  }

	  return body
	}

	Multipart.prototype.onRequest = function (options) {
	  var self = this

	  var chunked = self.isChunked(options)
	    , parts = options.data || options

	  self.setHeaders(chunked)
	  self.chunked = chunked
	  self.body = self.build(parts, chunked)
	}

	exports.Multipart = Multipart


/***/ },
/* 635 */
/***/ function(module, exports, __webpack_require__) {

	var stream = __webpack_require__(480)


	function isStream (obj) {
	  return obj instanceof stream.Stream
	}


	function isReadable (obj) {
	  return isStream(obj) && typeof obj._read == 'function' && typeof obj._readableState == 'object'
	}


	function isWritable (obj) {
	  return isStream(obj) && typeof obj._write == 'function' && typeof obj._writableState == 'object'
	}


	function isDuplex (obj) {
	  return isReadable(obj) && isWritable(obj)
	}


	module.exports            = isStream
	module.exports.isReadable = isReadable
	module.exports.isWritable = isWritable
	module.exports.isDuplex   = isDuplex


/***/ },
/* 636 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var url = __webpack_require__(13)
	var isUrl = /^https?:/

	function Redirect (request) {
	  this.request = request
	  this.followRedirect = true
	  this.followRedirects = true
	  this.followAllRedirects = false
	  this.allowRedirect = function () {return true}
	  this.maxRedirects = 10
	  this.redirects = []
	  this.redirectsFollowed = 0
	  this.removeRefererHeader = false
	}

	Redirect.prototype.onRequest = function (options) {
	  var self = this

	  if (options.maxRedirects !== undefined) {
	    self.maxRedirects = options.maxRedirects
	  }
	  if (typeof options.followRedirect === 'function') {
	    self.allowRedirect = options.followRedirect
	  }
	  if (options.followRedirect !== undefined) {
	    self.followRedirects = !!options.followRedirect
	  }
	  if (options.followAllRedirects !== undefined) {
	    self.followAllRedirects = options.followAllRedirects
	  }
	  if (self.followRedirects || self.followAllRedirects) {
	    self.redirects = self.redirects || []
	  }
	  if (options.removeRefererHeader !== undefined) {
	    self.removeRefererHeader = options.removeRefererHeader
	  }
	}

	Redirect.prototype.redirectTo = function (response) {
	  var self = this
	    , request = self.request

	  var redirectTo = null
	  if (response.statusCode >= 300 && response.statusCode < 400 && response.caseless.has('location')) {
	    var location = response.caseless.get('location')
	    request.debug('redirect', location)

	    if (self.followAllRedirects) {
	      redirectTo = location
	    } else if (self.followRedirects) {
	      switch (request.method) {
	        case 'PATCH':
	        case 'PUT':
	        case 'POST':
	        case 'DELETE':
	          // Do not follow redirects
	          break
	        default:
	          redirectTo = location
	          break
	      }
	    }
	  } else if (response.statusCode === 401) {
	    var authHeader = request._auth.onResponse(response)
	    if (authHeader) {
	      request.setHeader('authorization', authHeader)
	      redirectTo = request.uri
	    }
	  }
	  return redirectTo
	}

	Redirect.prototype.onResponse = function (response) {
	  var self = this
	    , request = self.request

	  var redirectTo = self.redirectTo(response)
	  if (!redirectTo || !self.allowRedirect.call(request, response)) {
	    return false
	  }

	  request.debug('redirect to', redirectTo)

	  // ignore any potential response body.  it cannot possibly be useful
	  // to us at this point.
	  // response.resume should be defined, but check anyway before calling. Workaround for browserify.
	  if (response.resume) {
	    response.resume()
	  }

	  if (self.redirectsFollowed >= self.maxRedirects) {
	    request.emit('error', new Error('Exceeded maxRedirects. Probably stuck in a redirect loop ' + request.uri.href))
	    return false
	  }
	  self.redirectsFollowed += 1

	  if (!isUrl.test(redirectTo)) {
	    redirectTo = url.resolve(request.uri.href, redirectTo)
	  }

	  var uriPrev = request.uri
	  request.uri = url.parse(redirectTo)

	  // handle the case where we change protocol from https to http or vice versa
	  if (request.uri.protocol !== uriPrev.protocol) {
	    request._updateProtocol()
	  }

	  self.redirects.push(
	    { statusCode : response.statusCode
	    , redirectUri: redirectTo
	    }
	  )
	  if (self.followAllRedirects && request.method !== 'HEAD'
	    && response.statusCode !== 401 && response.statusCode !== 307) {
	    request.method = 'GET'
	  }
	  // request.method = 'GET' // Force all redirects to use GET || commented out fixes #215
	  delete request.src
	  delete request.req
	  delete request.agent
	  delete request._started
	  if (response.statusCode !== 401 && response.statusCode !== 307) {
	    // Remove parameters from the previous response, unless this is the second request
	    // for a server that requires digest authentication.
	    delete request.body
	    delete request._form
	    if (request.headers) {
	      request.removeHeader('host')
	      request.removeHeader('content-type')
	      request.removeHeader('content-length')
	      if (request.uri.hostname !== request.originalHost.split(':')[0]) {
	        // Remove authorization if changing hostnames (but not if just
	        // changing ports or protocols).  This matches the behavior of curl:
	        // https://github.com/bagder/curl/blob/6beb0eee/lib/http.c#L710
	        request.removeHeader('authorization')
	      }
	    }
	  }

	  if (!self.removeRefererHeader) {
	    request.setHeader('referer', request.uri.href)
	  }

	  request.emit('redirect')

	  request.init()

	  return true
	}

	exports.Redirect = Redirect


/***/ },
/* 637 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var url = __webpack_require__(13)
	  , tunnel = __webpack_require__(638)

	var defaultProxyHeaderWhiteList = [
	  'accept',
	  'accept-charset',
	  'accept-encoding',
	  'accept-language',
	  'accept-ranges',
	  'cache-control',
	  'content-encoding',
	  'content-language',
	  'content-length',
	  'content-location',
	  'content-md5',
	  'content-range',
	  'content-type',
	  'connection',
	  'date',
	  'expect',
	  'max-forwards',
	  'pragma',
	  'referer',
	  'te',
	  'transfer-encoding',
	  'user-agent',
	  'via'
	]

	var defaultProxyHeaderExclusiveList = [
	  'proxy-authorization'
	]

	function constructProxyHost(uriObject) {
	  var port = uriObject.portA
	    , protocol = uriObject.protocol
	    , proxyHost = uriObject.hostname + ':'

	  if (port) {
	    proxyHost += port
	  } else if (protocol === 'https:') {
	    proxyHost += '443'
	  } else {
	    proxyHost += '80'
	  }

	  return proxyHost
	}

	function constructProxyHeaderWhiteList(headers, proxyHeaderWhiteList) {
	  var whiteList = proxyHeaderWhiteList
	    .reduce(function (set, header) {
	      set[header.toLowerCase()] = true
	      return set
	    }, {})

	  return Object.keys(headers)
	    .filter(function (header) {
	      return whiteList[header.toLowerCase()]
	    })
	    .reduce(function (set, header) {
	      set[header] = headers[header]
	      return set
	    }, {})
	}

	function constructTunnelOptions (request, proxyHeaders) {
	  var proxy = request.proxy

	  var tunnelOptions = {
	    proxy : {
	      host      : proxy.hostname,
	      port      : +proxy.port,
	      proxyAuth : proxy.auth,
	      headers   : proxyHeaders
	    },
	    headers            : request.headers,
	    ca                 : request.ca,
	    cert               : request.cert,
	    key                : request.key,
	    passphrase         : request.passphrase,
	    pfx                : request.pfx,
	    ciphers            : request.ciphers,
	    rejectUnauthorized : request.rejectUnauthorized,
	    secureOptions      : request.secureOptions,
	    secureProtocol     : request.secureProtocol
	  }

	  return tunnelOptions
	}

	function constructTunnelFnName(uri, proxy) {
	  var uriProtocol = (uri.protocol === 'https:' ? 'https' : 'http')
	  var proxyProtocol = (proxy.protocol === 'https:' ? 'Https' : 'Http')
	  return [uriProtocol, proxyProtocol].join('Over')
	}

	function getTunnelFn(request) {
	  var uri = request.uri
	  var proxy = request.proxy
	  var tunnelFnName = constructTunnelFnName(uri, proxy)
	  return tunnel[tunnelFnName]
	}


	function Tunnel (request) {
	  this.request = request
	  this.proxyHeaderWhiteList = defaultProxyHeaderWhiteList
	  this.proxyHeaderExclusiveList = []
	}

	Tunnel.prototype.isEnabled = function (options) {
	  var request = this.request
	  // Tunnel HTTPS by default, or if a previous request in the redirect chain
	  // was tunneled.  Allow the user to override this setting.

	  // If self.tunnel is already set (because this is a redirect), use the
	  // existing value.
	  if (typeof request.tunnel !== 'undefined') {
	    return request.tunnel
	  }

	  // If options.tunnel is set (the user specified a value), use it.
	  if (typeof options.tunnel !== 'undefined') {
	    return options.tunnel
	  }

	  // If the destination is HTTPS, tunnel.
	  if (request.uri.protocol === 'https:') {
	    return true
	  }

	  // Otherwise, leave tunnel unset, because if a later request in the redirect
	  // chain is HTTPS then that request (and any subsequent ones) should be
	  // tunneled.
	  return undefined
	}

	Tunnel.prototype.setup = function (options) {
	  var self = this
	    , request = self.request

	  options = options || {}

	  if (typeof request.proxy === 'string') {
	    request.proxy = url.parse(request.proxy)
	  }

	  if (!request.proxy || !request.tunnel) {
	    return false
	  }

	  // Setup Proxy Header Exclusive List and White List
	  if (options.proxyHeaderWhiteList) {
	    self.proxyHeaderWhiteList = options.proxyHeaderWhiteList
	  }
	  if (options.proxyHeaderExclusiveList) {
	    self.proxyHeaderExclusiveList = options.proxyHeaderExclusiveList
	  }

	  var proxyHeaderExclusiveList = self.proxyHeaderExclusiveList.concat(defaultProxyHeaderExclusiveList)
	  var proxyHeaderWhiteList = self.proxyHeaderWhiteList.concat(proxyHeaderExclusiveList)

	  // Setup Proxy Headers and Proxy Headers Host
	  // Only send the Proxy White Listed Header names
	  var proxyHeaders = constructProxyHeaderWhiteList(request.headers, proxyHeaderWhiteList)
	  proxyHeaders.host = constructProxyHost(request.uri)

	  proxyHeaderExclusiveList.forEach(request.removeHeader, request)

	  // Set Agent from Tunnel Data
	  var tunnelFn = getTunnelFn(request)
	  var tunnelOptions = constructTunnelOptions(request, proxyHeaders)
	  request.agent = tunnelFn(tunnelOptions)

	  return true
	}

	Tunnel.defaultProxyHeaderWhiteList = defaultProxyHeaderWhiteList
	Tunnel.defaultProxyHeaderExclusiveList = defaultProxyHeaderExclusiveList
	exports.Tunnel = Tunnel


/***/ },
/* 638 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var net = __webpack_require__(529)
	  , tls = __webpack_require__(592)
	  , http = __webpack_require__(21)
	  , https = __webpack_require__(22)
	  , events = __webpack_require__(472)
	  , assert = __webpack_require__(437)
	  , util = __webpack_require__(471)
	  ;

	exports.httpOverHttp = httpOverHttp
	exports.httpsOverHttp = httpsOverHttp
	exports.httpOverHttps = httpOverHttps
	exports.httpsOverHttps = httpsOverHttps


	function httpOverHttp(options) {
	  var agent = new TunnelingAgent(options)
	  agent.request = http.request
	  return agent
	}

	function httpsOverHttp(options) {
	  var agent = new TunnelingAgent(options)
	  agent.request = http.request
	  agent.createSocket = createSecureSocket
	  return agent
	}

	function httpOverHttps(options) {
	  var agent = new TunnelingAgent(options)
	  agent.request = https.request
	  return agent
	}

	function httpsOverHttps(options) {
	  var agent = new TunnelingAgent(options)
	  agent.request = https.request
	  agent.createSocket = createSecureSocket
	  return agent
	}


	function TunnelingAgent(options) {
	  var self = this
	  self.options = options || {}
	  self.proxyOptions = self.options.proxy || {}
	  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets
	  self.requests = []
	  self.sockets = []

	  self.on('free', function onFree(socket, host, port) {
	    for (var i = 0, len = self.requests.length; i < len; ++i) {
	      var pending = self.requests[i]
	      if (pending.host === host && pending.port === port) {
	        // Detect the request to connect same origin server,
	        // reuse the connection.
	        self.requests.splice(i, 1)
	        pending.request.onSocket(socket)
	        return
	      }
	    }
	    socket.destroy()
	    self.removeSocket(socket)
	  })
	}
	util.inherits(TunnelingAgent, events.EventEmitter)

	TunnelingAgent.prototype.addRequest = function addRequest(req, options) {
	  var self = this

	   // Legacy API: addRequest(req, host, port, path)
	  if (typeof options === 'string') {
	    options = {
	      host: options,
	      port: arguments[2],
	      path: arguments[3]
	    };
	  }

	  if (self.sockets.length >= this.maxSockets) {
	    // We are over limit so we'll add it to the queue.
	    self.requests.push({host: options.host, port: options.port, request: req})
	    return
	  }

	  // If we are under maxSockets create a new one.
	  self.createConnection({host: options.host, port: options.port, request: req})
	}

	TunnelingAgent.prototype.createConnection = function createConnection(pending) {
	  var self = this

	  self.createSocket(pending, function(socket) {
	    socket.on('free', onFree)
	    socket.on('close', onCloseOrRemove)
	    socket.on('agentRemove', onCloseOrRemove)
	    pending.request.onSocket(socket)

	    function onFree() {
	      self.emit('free', socket, pending.host, pending.port)
	    }

	    function onCloseOrRemove(err) {
	      self.removeSocket(socket)
	      socket.removeListener('free', onFree)
	      socket.removeListener('close', onCloseOrRemove)
	      socket.removeListener('agentRemove', onCloseOrRemove)
	    }
	  })
	}

	TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
	  var self = this
	  var placeholder = {}
	  self.sockets.push(placeholder)

	  var connectOptions = mergeOptions({}, self.proxyOptions, 
	    { method: 'CONNECT'
	    , path: options.host + ':' + options.port
	    , agent: false
	    }
	  )
	  if (connectOptions.proxyAuth) {
	    connectOptions.headers = connectOptions.headers || {}
	    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
	        new Buffer(connectOptions.proxyAuth).toString('base64')
	  }

	  debug('making CONNECT request')
	  var connectReq = self.request(connectOptions)
	  connectReq.useChunkedEncodingByDefault = false // for v0.6
	  connectReq.once('response', onResponse) // for v0.6
	  connectReq.once('upgrade', onUpgrade)   // for v0.6
	  connectReq.once('connect', onConnect)   // for v0.7 or later
	  connectReq.once('error', onError)
	  connectReq.end()

	  function onResponse(res) {
	    // Very hacky. This is necessary to avoid http-parser leaks.
	    res.upgrade = true
	  }

	  function onUpgrade(res, socket, head) {
	    // Hacky.
	    process.nextTick(function() {
	      onConnect(res, socket, head)
	    })
	  }

	  function onConnect(res, socket, head) {
	    connectReq.removeAllListeners()
	    socket.removeAllListeners()

	    if (res.statusCode === 200) {
	      assert.equal(head.length, 0)
	      debug('tunneling connection has established')
	      self.sockets[self.sockets.indexOf(placeholder)] = socket
	      cb(socket)
	    } else {
	      debug('tunneling socket could not be established, statusCode=%d', res.statusCode)
	      var error = new Error('tunneling socket could not be established, ' + 'statusCode=' + res.statusCode)
	      error.code = 'ECONNRESET'
	      options.request.emit('error', error)
	      self.removeSocket(placeholder)
	    }
	  }

	  function onError(cause) {
	    connectReq.removeAllListeners()

	    debug('tunneling socket could not be established, cause=%s\n', cause.message, cause.stack)
	    var error = new Error('tunneling socket could not be established, ' + 'cause=' + cause.message)
	    error.code = 'ECONNRESET'
	    options.request.emit('error', error)
	    self.removeSocket(placeholder)
	  }
	}

	TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
	  var pos = this.sockets.indexOf(socket)
	  if (pos === -1) return
	  
	  this.sockets.splice(pos, 1)

	  var pending = this.requests.shift()
	  if (pending) {
	    // If we have pending requests and a socket gets closed a new one
	    // needs to be created to take over in the pool for the one that closed.
	    this.createConnection(pending)
	  }
	}

	function createSecureSocket(options, cb) {
	  var self = this
	  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
	    // 0 is dummy port for v0.6
	    var secureSocket = tls.connect(0, mergeOptions({}, self.options, 
	      { servername: options.host
	      , socket: socket
	      }
	    ))
	    self.sockets[self.sockets.indexOf(socket)] = secureSocket
	    cb(secureSocket)
	  })
	}


	function mergeOptions(target) {
	  for (var i = 1, len = arguments.length; i < len; ++i) {
	    var overrides = arguments[i]
	    if (typeof overrides === 'object') {
	      var keys = Object.keys(overrides)
	      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
	        var k = keys[j]
	        if (overrides[k] !== undefined) {
	          target[k] = overrides[k]
	        }
	      }
	    }
	  }
	  return target
	}


	var debug
	if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
	  debug = function() {
	    var args = Array.prototype.slice.call(arguments)
	    if (typeof args[0] === 'string') {
	      args[0] = 'TUNNEL: ' + args[0]
	    } else {
	      args.unshift('TUNNEL:')
	    }
	    console.error.apply(console, args)
	  }
	} else {
	  debug = function() {}
	}
	exports.debug = debug // for test


/***/ },
/* 639 */
/***/ function(module, exports, __webpack_require__) {

	var map = {
		"./browser/documentAdapter": 512,
		"./browser/documentAdapter.js": 512,
		"./browser/documentfeatures": 20,
		"./browser/documentfeatures.js": 20,
		"./browser/domtohtml": 511,
		"./browser/domtohtml.js": 511,
		"./browser/history": 517,
		"./browser/history.js": 517,
		"./browser/htmltodom": 441,
		"./browser/htmltodom.js": 441,
		"./browser/index": 514,
		"./browser/index.js": 514,
		"./browser/location": 515,
		"./browser/location.js": 515,
		"./browser/utils": 516,
		"./browser/utils.js": 516,
		"./contextify-shim": 640,
		"./contextify-shim.js": 640,
		"./level1/core": 17,
		"./level1/core.js": 17,
		"./level2/core": 16,
		"./level2/core.js": 16,
		"./level2/events": 19,
		"./level2/events.js": 19,
		"./level2/html": 18,
		"./level2/html.js": 18,
		"./level2/index": 641,
		"./level2/index.js": 641,
		"./level2/languages/javascript": 23,
		"./level2/languages/javascript.js": 23,
		"./level2/style": 15,
		"./level2/style.js": 15,
		"./level3/core": 440,
		"./level3/core.js": 440,
		"./level3/events": 642,
		"./level3/events.js": 642,
		"./level3/html": 643,
		"./level3/html.js": 643,
		"./level3/index": 644,
		"./level3/index.js": 644,
		"./level3/ls": 646,
		"./level3/ls.js": 646,
		"./level3/xpath": 645,
		"./level3/xpath.js": 645,
		"./living/core": 439,
		"./living/core.js": 439,
		"./living/index": 438,
		"./living/index.js": 438,
		"./living/node": 513,
		"./living/node.js": 513,
		"./selectors/index": 647,
		"./selectors/index.js": 647,
		"./utils": 14,
		"./utils.js": 14
	};
	function webpackContext(req) {
		return __webpack_require__(webpackContextResolve(req));
	};
	function webpackContextResolve(req) {
		return map[req] || (function() { throw new Error("Cannot find module '" + req + "'.") }());
	};
	webpackContext.keys = function webpackContextKeys() {
		return Object.keys(map);
	};
	webpackContext.resolve = webpackContextResolve;
	module.exports = webpackContext;
	webpackContext.id = 639;


/***/ },
/* 640 */
/***/ function(module, exports) {

	module.exports = function (o) {
	  o.getGlobal = function () {
	    return o;
	  };
	};


/***/ },
/* 641 */
/***/ function(module, exports, __webpack_require__) {

	exports.dom = {
	  level2 : {
	    core   : __webpack_require__(16).dom.level2.core,
	    events : __webpack_require__(19).dom.level2.events,
	    html   : __webpack_require__(18).dom.level2.html
	  }
	};

/***/ },
/* 642 */
/***/ function(module, exports, __webpack_require__) {

	var events = __webpack_require__(19).dom.level2.events;

	// modify cloned instance for more info check: https://github.com/tmpvar/jsdom/issues/325
	events = Object.create(events);

	/*

	// File: events.idl

	#ifndef _EVENTS_IDL_
	#define _EVENTS_IDL_

	#include "dom.idl"
	#include "views.idl"

	#pragma prefix "dom.w3c.org"
	module events
	{

	  typedef dom::DOMString DOMString;
	  typedef dom::DOMTimeStamp DOMTimeStamp;
	  typedef dom::DOMObject DOMObject;
	  typedef dom::Node Node;

	  interface EventTarget;
	  interface EventListener;

	  // Introduced in DOM Level 2:
	  exception EventException {
	    unsigned short   code;
	  };
	  // EventExceptionCode
	  const unsigned short      UNSPECIFIED_EVENT_TYPE_ERR     = 0;
	  // Introduced in DOM Level 3:
	  const unsigned short      DISPATCH_REQUEST_ERR           = 1;


	  // Introduced in DOM Level 2:
	  interface Event {

	    // PhaseType
	    const unsigned short      CAPTURING_PHASE                = 1;
	    const unsigned short      AT_TARGET                      = 2;
	    const unsigned short      BUBBLING_PHASE                 = 3;

	    readonly attribute DOMString       type;
	    readonly attribute EventTarget     target;
	    readonly attribute EventTarget     currentTarget;
	    readonly attribute unsigned short  eventPhase;
	    readonly attribute boolean         bubbles;
	    readonly attribute boolean         cancelable;
	    readonly attribute DOMTimeStamp    timeStamp;
	    void               stopPropagation();
	    void               preventDefault();
	    void               initEvent(in DOMString eventTypeArg,
	                                 in boolean canBubbleArg,
	                                 in boolean cancelableArg);
	    // Introduced in DOM Level 3:
	    readonly attribute DOMString       namespaceURI;
	    // Introduced in DOM Level 3:
	    boolean            isCustom();
	    // Introduced in DOM Level 3:
	    void               stopImmediatePropagation();
	    // Introduced in DOM Level 3:
	    boolean            isDefaultPrevented();
	    // Introduced in DOM Level 3:
	    void               initEventNS(in DOMString namespaceURIArg,
	                                   in DOMString eventTypeArg,
	                                   in boolean canBubbleArg,
	                                   in boolean cancelableArg);
	  };

	  // Introduced in DOM Level 2:
	  interface EventTarget {
	    void               addEventListener(in DOMString type,
	                                        in EventListener listener,
	                                        in boolean useCapture);
	    void               removeEventListener(in DOMString type,
	                                           in EventListener listener,
	                                           in boolean useCapture);
	    // Modified in DOM Level 3:
	    boolean            dispatchEvent(in Event evt)
	                                        raises(EventException);
	    // Introduced in DOM Level 3:
	    void               addEventListenerNS(in DOMString namespaceURI,
	                                          in DOMString type,
	                                          in EventListener listener,
	                                          in boolean useCapture,
	                                          in DOMObject evtGroup);
	    // Introduced in DOM Level 3:
	    void               removeEventListenerNS(in DOMString namespaceURI,
	                                             in DOMString type,
	                                             in EventListener listener,
	                                             in boolean useCapture);
	    // Introduced in DOM Level 3:
	    boolean            willTriggerNS(in DOMString namespaceURI,
	                                     in DOMString type);
	    // Introduced in DOM Level 3:
	    boolean            hasEventListenerNS(in DOMString namespaceURI,
	                                          in DOMString type);
	  };

	  // Introduced in DOM Level 2:
	  interface EventListener {
	    void               handleEvent(in Event evt);
	  };

	  // Introduced in DOM Level 2:
	  interface DocumentEvent {
	    Event              createEvent(in DOMString eventType)
	                                        raises(dom::DOMException);
	    // Introduced in DOM Level 3:
	    boolean            canDispatch(in DOMString namespaceURI,
	                                   in DOMString type);
	  };

	  // Introduced in DOM Level 3:
	  interface CustomEvent : Event {
	    void               setDispatchState(in EventTarget target,
	                                        in unsigned short phase);
	    boolean            isPropagationStopped();
	    boolean            isImmediatePropagationStopped();
	  };

	  // Introduced in DOM Level 2:
	  interface UIEvent : Event {
	    readonly attribute views::AbstractView view;
	    readonly attribute long            detail;
	    void               initUIEvent(in DOMString typeArg,
	                                   in boolean canBubbleArg,
	                                   in boolean cancelableArg,
	                                   in views::AbstractView viewArg,
	                                   in long detailArg);
	    // Introduced in DOM Level 3:
	    void               initUIEventNS(in DOMString namespaceURI,
	                                     in DOMString typeArg,
	                                     in boolean canBubbleArg,
	                                     in boolean cancelableArg,
	                                     in views::AbstractView viewArg,
	                                     in long detailArg);
	  };

	  // Introduced in DOM Level 3:
	  interface TextEvent : UIEvent {
	    readonly attribute DOMString       data;
	    void               initTextEvent(in DOMString typeArg,
	                                     in boolean canBubbleArg,
	                                     in boolean cancelableArg,
	                                     in views::AbstractView viewArg,
	                                     in DOMString dataArg);
	    void               initTextEventNS(in DOMString namespaceURI,
	                                       in DOMString type,
	                                       in boolean canBubbleArg,
	                                       in boolean cancelableArg,
	                                       in views::AbstractView viewArg,
	                                       in DOMString dataArg);
	  };

	  // Introduced in DOM Level 2:
	  interface MouseEvent : UIEvent {
	    readonly attribute long            screenX;
	    readonly attribute long            screenY;
	    readonly attribute long            clientX;
	    readonly attribute long            clientY;
	    readonly attribute boolean         ctrlKey;
	    readonly attribute boolean         shiftKey;
	    readonly attribute boolean         altKey;
	    readonly attribute boolean         metaKey;
	    readonly attribute unsigned short  button;
	    readonly attribute EventTarget     relatedTarget;
	    void               initMouseEvent(in DOMString typeArg,
	                                      in boolean canBubbleArg,
	                                      in boolean cancelableArg,
	                                      in views::AbstractView viewArg,
	                                      in long detailArg,
	                                      in long screenXArg,
	                                      in long screenYArg,
	                                      in long clientXArg,
	                                      in long clientYArg,
	                                      in boolean ctrlKeyArg,
	                                      in boolean altKeyArg,
	                                      in boolean shiftKeyArg,
	                                      in boolean metaKeyArg,
	                                      in unsigned short buttonArg,
	                                      in EventTarget relatedTargetArg);
	    // Introduced in DOM Level 3:
	    boolean            getModifierState(in DOMString keyIdentifierArg);
	    // Introduced in DOM Level 3:
	    void               initMouseEventNS(in DOMString namespaceURI,
	                                        in DOMString typeArg,
	                                        in boolean canBubbleArg,
	                                        in boolean cancelableArg,
	                                        in views::AbstractView viewArg,
	                                        in long detailArg,
	                                        in long screenXArg,
	                                        in long screenYArg,
	                                        in long clientXArg,
	                                        in long clientYArg,
	                                        in unsigned short buttonArg,
	                                        in EventTarget relatedTargetArg,
	                                        in DOMString modifiersList);
	  };

	  // Introduced in DOM Level 3:
	  interface KeyboardEvent : UIEvent {

	    // KeyLocationCode
	    const unsigned long       DOM_KEY_LOCATION_STANDARD      = 0x00;
	    const unsigned long       DOM_KEY_LOCATION_LEFT          = 0x01;
	    const unsigned long       DOM_KEY_LOCATION_RIGHT         = 0x02;
	    const unsigned long       DOM_KEY_LOCATION_NUMPAD        = 0x03;

	    readonly attribute DOMString       keyIdentifier;
	    readonly attribute unsigned long   keyLocation;
	    readonly attribute boolean         ctrlKey;
	    readonly attribute boolean         shiftKey;
	    readonly attribute boolean         altKey;
	    readonly attribute boolean         metaKey;
	    boolean            getModifierState(in DOMString keyIdentifierArg);
	    void               initKeyboardEvent(in DOMString typeArg,
	                                         in boolean canBubbleArg,
	                                         in boolean cancelableArg,
	                                         in views::AbstractView viewArg,
	                                         in DOMString keyIdentifierArg,
	                                         in unsigned long keyLocationArg,
	                                         in DOMString modifiersList);
	    void               initKeyboardEventNS(in DOMString namespaceURI,
	                                           in DOMString typeArg,
	                                           in boolean canBubbleArg,
	                                           in boolean cancelableArg,
	                                           in views::AbstractView viewArg,
	                                           in DOMString keyIdentifierArg,
	                                           in unsigned long keyLocationArg,
	                                           in DOMString modifiersList);
	  };

	  // Introduced in DOM Level 2:
	  interface MutationEvent : Event {

	    // attrChangeType
	    const unsigned short      MODIFICATION                   = 1;
	    const unsigned short      ADDITION                       = 2;
	    const unsigned short      REMOVAL                        = 3;

	    readonly attribute Node            relatedNode;
	    readonly attribute DOMString       prevValue;
	    readonly attribute DOMString       newValue;
	    readonly attribute DOMString       attrName;
	    readonly attribute unsigned short  attrChange;
	    void               initMutationEvent(in DOMString typeArg,
	                                         in boolean canBubbleArg,
	                                         in boolean cancelableArg,
	                                         in Node relatedNodeArg,
	                                         in DOMString prevValueArg,
	                                         in DOMString newValueArg,
	                                         in DOMString attrNameArg,
	                                         in unsigned short attrChangeArg);
	    // Introduced in DOM Level 3:
	    void               initMutationEventNS(in DOMString namespaceURI,
	                                           in DOMString typeArg,
	                                           in boolean canBubbleArg,
	                                           in boolean cancelableArg,
	                                           in Node relatedNodeArg,
	                                           in DOMString prevValueArg,
	                                           in DOMString newValueArg,
	                                           in DOMString attrNameArg,
	                                           in unsigned short attrChangeArg);
	  };

	  // Introduced in DOM Level 3:
	  interface MutationNameEvent : MutationEvent {
	    readonly attribute DOMString       prevNamespaceURI;
	    readonly attribute DOMString       prevNodeName;
	    // Introduced in DOM Level 3:
	    void               initMutationNameEvent(in DOMString typeArg,
	                                             in boolean canBubbleArg,
	                                             in boolean cancelableArg,
	                                             in Node relatedNodeArg,
	                                             in DOMString prevNamespaceURIArg,
	                                             in DOMString prevNodeNameArg);
	    // Introduced in DOM Level 3:
	    void               initMutationNameEventNS(in DOMString namespaceURI,
	                                               in DOMString typeArg,
	                                               in boolean canBubbleArg,
	                                               in boolean cancelableArg,
	                                               in Node relatedNodeArg,
	                                               in DOMString prevNamespaceURIArg,
	                                               in DOMString prevNodeNameArg);
	  };
	};

	#endif // _EVENTS_IDL_
	*/

	exports.dom = {
	  level3 : {
	    events:  events
	  }
	}


/***/ },
/* 643 */
/***/ function(module, exports, __webpack_require__) {

	var core = __webpack_require__(440).dom.level3.core,
	    html = __webpack_require__(18).dom.level2.html

	exports.dom = {
	  level3 : {
	    html : html,
	    core : core
	  }
	};


/***/ },
/* 644 */
/***/ function(module, exports, __webpack_require__) {

	module.exports.dom = {
	  level3 : {
	    core   : __webpack_require__(440).dom.level3.core,
	    xpath  : __webpack_require__(645),
	    events : __webpack_require__(642).dom.level3.events,
	    html   : __webpack_require__(643).dom.level3.html,
	  }
	};

	module.exports.dom.ls = __webpack_require__(646).dom.level3.ls;


/***/ },
/* 645 */
/***/ function(module, exports, __webpack_require__) {

	/** Here is yet another implementation of XPath 1.0 in Javascript.
	 *
	 * My goal was to make it relatively compact, but as I fixed all the axis bugs
	 * the axes became more and more complicated. :-(.
	 *
	 * I have not implemented namespaces or case-sensitive axes for XML yet.
	 *
	 * How to test it in Chrome: You can make a Chrome extension that replaces
	 * the WebKit XPath parser with this one. But it takes a bit of effort to
	 * get around isolated world and same-origin restrictions:
	 * manifest.json:
	    {
	      "name": "XPathTest",
	      "version": "0.1",
	      "content_scripts": [{
	        "matches": ["http://localhost/*"],  // or wildcard host
	        "js": ["xpath.js", "injection.js"],
	        "all_frames": true, "run_at": "document_start"
	      }]
	    }
	 * injection.js:
	    // goal: give my xpath object to the website's JS context.
	    var script = document.createElement('script');
	    script.textContent =
	        "document.addEventListener('xpathextend', function(e) {\n" +
	        "  console.log('extending document with xpath...');\n" +
	        "  e.detail(window);" +
	        "});";
	    document.documentElement.appendChild(script);
	    document.documentElement.removeChild(script);
	    var evt = document.createEvent('CustomEvent');
	    evt.initCustomEvent('xpathextend', true, true, this.xpath.extend);
	    document.dispatchEvent(evt);
	 */
	(function() {
	  var core;
	  var xpath;
	  if (true) {
	    core = __webpack_require__(440).dom.level3.core;
	    xpath = exports;
	  } else {
	    core = this;
	    xpath = {};
	  }


	  /***************************************************************************
	   *                            Tokenization                                 *
	   ***************************************************************************/
	  /**
	   * The XPath lexer is basically a single regular expression, along with
	   * some helper functions to pop different types.
	   */
	  var Stream = xpath.Stream = function Stream(str) {
	    this.original = this.str = str;
	    this.peeked = null;
	    // TODO: not really needed, but supposedly tokenizer also disambiguates
	    // a * b vs. node test *
	    this.prev = null;  // for debugging
	    this.prevprev = null;
	  }
	  Stream.prototype = {
	    peek: function() {
	      if (this.peeked) return this.peeked;
	      var m = this.re.exec(this.str);
	      if (!m) return null;
	      this.str = this.str.substr(m[0].length);
	      return this.peeked = m[1];
	    },
	    /** Peek 2 tokens ahead. */
	    peek2: function() {
	      this.peek();  // make sure this.peeked is set
	      var m = this.re.exec(this.str);
	      if (!m) return null;
	      return m[1];
	    },
	    pop: function() {
	      var r = this.peek();
	      this.peeked = null;
	      this.prevprev = this.prev;
	      this.prev = r;
	      return r;
	    },
	    trypop: function(tokens) {
	      var tok = this.peek();
	      if (tok === tokens) return this.pop();
	      if (Array.isArray(tokens)) {
	        for (var i = 0; i < tokens.length; ++i) {
	          var t = tokens[i];
	          if (t == tok) return this.pop();;
	        }
	      }
	    },
	    trypopfuncname: function() {
	      var tok = this.peek();
	      if (!this.isQnameRe.test(tok))
	        return null;
	      switch (tok) {
	        case 'comment': case 'text': case 'processing-instruction': case 'node':
	          return null;
	      }
	      if ('(' != this.peek2()) return null;
	      return this.pop();
	    },
	    trypopaxisname: function() {
	      var tok = this.peek();
	      switch (tok) {
	        case 'ancestor': case 'ancestor-or-self': case 'attribute':
	        case 'child': case 'descendant': case 'descendant-or-self':
	        case 'following': case 'following-sibling': case 'namespace':
	        case 'parent': case 'preceding': case 'preceding-sibling': case 'self':
	          if ('::' == this.peek2()) return this.pop();
	      }
	      return null;
	    },
	    trypopnametest: function() {
	      var tok = this.peek();
	      if ('*' === tok || this.startsWithNcNameRe.test(tok)) return this.pop();
	      return null;
	    },
	    trypopliteral: function() {
	      var tok = this.peek();
	      if (null == tok) return null;
	      var first = tok.charAt(0);
	      var last = tok.charAt(tok.length - 1);
	      if ('"' === first && '"' === last ||
	          "'" === first && "'" === last) {
	        this.pop();
	        return tok.substr(1, tok.length - 2);
	      }
	    },
	    trypopnumber: function() {
	      var tok = this.peek();
	      if (this.isNumberRe.test(tok)) return parseFloat(this.pop());
	      else return null;
	    },
	    trypopvarref: function() {
	      var tok = this.peek();
	      if (null == tok) return null;
	      if ('$' === tok.charAt(0)) return this.pop().substr(1);
	      else return null;
	    },
	    position: function() {
	      return this.original.length - this.str.length;
	    }
	  };
	  (function() {
	    // http://www.w3.org/TR/REC-xml-names/#NT-NCName
	    var nameStartCharsExceptColon =
	        'A-Z_a-z\xc0-\xd6\xd8-\xf6\xF8-\u02FF\u0370-\u037D\u037F-\u1FFF' +
	        '\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF' +
	        '\uFDF0-\uFFFD';  // JS doesn't support [#x10000-#xEFFFF]
	    var nameCharExceptColon = nameStartCharsExceptColon +
	        '\\-\\.0-9\xb7\u0300-\u036F\u203F-\u2040';
	    var ncNameChars = '[' + nameStartCharsExceptColon +
	        '][' + nameCharExceptColon + ']*'
	    // http://www.w3.org/TR/REC-xml-names/#NT-QName
	    var qNameChars = ncNameChars + '(?::' + ncNameChars + ')?';
	    var otherChars = '\\.\\.|[\\(\\)\\[\\].@,]|::';  // .. must come before [.]
	    var operatorChars =
	        'and|or|mod|div|' +
	        '//|!=|<=|>=|[*/|+\\-=<>]';  // //, !=, <=, >= before individual ones.
	    var literal = '"[^"]*"|' + "'[^']*'";
	    var numberChars = '[0-9]+(?:\\.[0-9]*)?|\\.[0-9]+';
	    var variableReference = '\\$' + qNameChars;
	    var nameTestChars = '\\*|' + ncNameChars + ':\\*|' + qNameChars;
	    var optionalSpace = '[ \t\r\n]*';  // stricter than regexp \s.
	    var nodeType = 'comment|text|processing-instruction|node';
	    var re = new RegExp(
	        // numberChars before otherChars so that leading-decimal doesn't become .
	        '^' + optionalSpace + '(' + numberChars + '|' + otherChars + '|' +
	        nameTestChars + '|' + operatorChars + '|' + literal + '|' +
	        variableReference + ')'
	        // operatorName | nodeType | functionName | axisName are lumped into
	        // qName for now; we'll check them on pop.
	    );
	    Stream.prototype.re = re;
	    Stream.prototype.startsWithNcNameRe = new RegExp('^' + ncNameChars);
	    Stream.prototype.isQnameRe = new RegExp('^' + qNameChars + '$');
	    Stream.prototype.isNumberRe = new RegExp('^' + numberChars + '$');
	  })();

	  /***************************************************************************
	   *                               Parsing                                   *
	   ***************************************************************************/
	  var parse = xpath.parse = function parse(stream, a) {
	    var r = orExpr(stream,a);
	    var x, unparsed = [];
	    while (x = stream.pop()) {
	      unparsed.push(x);
	    }
	    if (unparsed.length)
	      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                               'Position ' + stream.position() +
	                               ': Unparsed tokens: ' + unparsed.join(' '));
	    return r;
	  }

	  /**
	   * binaryL  ::= subExpr
	   *            | binaryL op subExpr
	   * so a op b op c becomes ((a op b) op c)
	   */
	  function binaryL(subExpr, stream, a, ops) {
	    var lhs = subExpr(stream, a);
	    if (lhs == null) return null;
	    var op;
	    while (op = stream.trypop(ops)) {
	      var rhs = subExpr(stream, a);
	      if (rhs == null)
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Expected something after ' + op);
	      lhs = a.node(op, lhs, rhs);
	    }
	    return lhs;
	  }
	  /**
	   * Too bad this is never used. If they made a ** operator (raise to power),
	   ( we would use it.
	   * binaryR  ::= subExpr
	   *            | subExpr op binaryR
	   * so a op b op c becomes (a op (b op c))
	   */
	  function binaryR(subExpr, stream, a, ops) {
	    var lhs = subExpr(stream, a);
	    if (lhs == null) return null;
	    var op = stream.trypop(ops);
	    if (op) {
	      var rhs = binaryR(stream, a);
	      if (rhs == null)
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Expected something after ' + op);
	      return a.node(op, lhs, rhs);
	    } else {
	      return lhs;// TODO
	    }
	  }
	  /** [1] LocationPath::= RelativeLocationPath | AbsoluteLocationPath
	   * e.g. a, a/b, //a/b
	   */
	  function locationPath(stream, a) {
	    return absoluteLocationPath(stream, a) ||
	           relativeLocationPath(null, stream, a);
	  }
	  /** [2] AbsoluteLocationPath::= '/' RelativeLocationPath? | AbbreviatedAbsoluteLocationPath
	   *  [10] AbbreviatedAbsoluteLocationPath::= '//' RelativeLocationPath
	   */
	  function absoluteLocationPath(stream, a) {
	    var op = stream.peek();
	    if ('/' === op || '//' === op) {
	      var lhs = a.node('Root');
	      return relativeLocationPath(lhs, stream, a, true);
	    } else {
	      return null;
	    }
	  }
	  /** [3] RelativeLocationPath::= Step | RelativeLocationPath '/' Step |
	   *                            | AbbreviatedRelativeLocationPath
	   *  [11] AbbreviatedRelativeLocationPath::= RelativeLocationPath '//' Step
	   * e.g. p/a, etc.
	   */
	  function relativeLocationPath(lhs, stream, a, isOnlyRootOk) {
	    if (null == lhs) {
	      lhs = step(stream, a);
	      if (null == lhs) return lhs;
	    }
	    var op;
	    while (op = stream.trypop(['/', '//'])) {
	      if ('//' === op) {
	        lhs = a.node('/', lhs,
	                     a.node('Axis', 'descendant-or-self', 'node', undefined));
	      }
	      var rhs = step(stream, a);
	      if (null == rhs && '/' === op && isOnlyRootOk) return lhs;
	      else isOnlyRootOk = false;
	      if (null == rhs)
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Expected step after ' + op);
	      lhs = a.node('/', lhs, rhs);
	    }
	    return lhs;
	  }
	  /** [4] Step::= AxisSpecifier NodeTest Predicate* | AbbreviatedStep
	   *  [12] AbbreviatedStep::= '.' | '..'
	   * e.g. @href, self::p, p, a[@href], ., ..
	   */
	  function step(stream, a) {
	    var abbrStep = stream.trypop(['.', '..']);
	    if ('.' === abbrStep)  // A location step of . is short for self::node().
	      return a.node('Axis', 'self', 'node');
	    if ('..' === abbrStep)  // A location step of .. is short for parent::node()
	      return a.node('Axis', 'parent', 'node');

	    var axis = axisSpecifier(stream, a);
	    var nodeType = nodeTypeTest(stream, a);
	    var nodeName;
	    if (null == nodeType) nodeName = nodeNameTest(stream, a);
	    if (null == axis && null == nodeType && null == nodeName) return null;
	    if (null == nodeType && null == nodeName)
	        throw new XPathException(
	            XPathException.INVALID_EXPRESSION_ERR,
	            'Position ' + stream.position() +
	            ': Expected nodeTest after axisSpecifier ' + axis);
	    if (null == axis) axis = 'child';
	    if (null == nodeType) {
	      // When there's only a node name, then the node type is forced to be the
	      // principal node type of the axis.
	      // see http://www.w3.org/TR/xpath/#dt-principal-node-type
	      if ('attribute' === axis) nodeType = 'attribute';
	      else if ('namespace' === axis) nodeType = 'namespace';
	      else nodeType = 'element';
	    }
	    var lhs = a.node('Axis', axis, nodeType, nodeName);
	    var pred;
	    while (null != (pred = predicate(lhs, stream, a))) {
	      lhs = pred;
	    }
	    return lhs;
	  }
	  /** [5] AxisSpecifier::= AxisName '::' | AbbreviatedAxisSpecifier
	   *  [6] AxisName::= 'ancestor' | 'ancestor-or-self' | 'attribute' | 'child'
	   *                | 'descendant' | 'descendant-or-self' | 'following'
	   *                | 'following-sibling' | 'namespace' | 'parent' |
	   *                | 'preceding' | 'preceding-sibling' | 'self'
	   *  [13] AbbreviatedAxisSpecifier::= '@'?
	   */
	  function axisSpecifier(stream, a) {
	    var attr = stream.trypop('@');
	    if (null != attr) return 'attribute';
	    var axisName = stream.trypopaxisname();
	    if (null != axisName) {
	      var coloncolon = stream.trypop('::');
	      if (null == coloncolon)
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Should not happen. Should be ::.');
	      return axisName;
	    }
	  }
	  /** [7] NodeTest::= NameTest | NodeType '(' ')' | 'processing-instruction' '(' Literal ')'
	   *  [38] NodeType::= 'comment' | 'text' | 'processing-instruction' | 'node'
	   * I've split nodeTypeTest from nodeNameTest for convenience.
	   */
	  function nodeTypeTest(stream, a) {
	    if ('(' !== stream.peek2()) {
	      return null;
	    }
	    var type = stream.trypop(['comment', 'text', 'processing-instruction', 'node']);
	    if (null != type) {
	      if (null == stream.trypop('('))
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Should not happen.');
	      var param = undefined;
	      if (type == 'processing-instruction') {
	        param = stream.trypopliteral();
	      }
	      if (null == stream.trypop(')'))
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Expected close parens.');
	      return type
	    }
	  }
	  function nodeNameTest(stream, a) {
	    var name = stream.trypopnametest();
	    if (name != null) return name;
	    else return null;
	  }
	  /** [8] Predicate::= '[' PredicateExpr ']'
	   *  [9] PredicateExpr::= Expr
	   */
	  function predicate(lhs, stream, a) {
	    if (null == stream.trypop('[')) return null;
	    var expr = orExpr(stream, a);
	    if (null == expr)
	      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                               'Position ' + stream.position() +
	                               ': Expected expression after [');
	    if (null == stream.trypop(']'))
	      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                               'Position ' + stream.position() +
	                               ': Expected ] after expression.');
	    return a.node('Predicate', lhs, expr);
	  }
	  /** [14] Expr::= OrExpr
	   */
	  /** [15] PrimaryExpr::= VariableReference | '(' Expr ')' | Literal | Number | FunctionCall
	   * e.g. $x,  (3+4),  "hi",  32,  f(x)
	   */
	  function primaryExpr(stream, a) {
	    var x = stream.trypopliteral();
	    if (null == x)
	      x = stream.trypopnumber();
	    if (null != x) {
	      return x;
	    }
	    var varRef = stream.trypopvarref();
	    if (null != varRef) return a.node('VariableReference', varRef);
	    var funCall = functionCall(stream, a);
	    if (null != funCall) {
	      return funCall;
	    }
	    if (stream.trypop('(')) {
	      var e = orExpr(stream, a);
	      if (null == e)
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Expected expression after (.');
	      if (null == stream.trypop(')'))
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Expected ) after expression.');
	      return e;
	    }
	    return null;
	  }
	  /** [16] FunctionCall::= FunctionName '(' ( Argument ( ',' Argument )* )? ')'
	   *  [17] Argument::= Expr
	   */
	  function functionCall(stream, a) {
	    var name = stream.trypopfuncname(stream, a);
	    if (null == name) return null;
	    if (null == stream.trypop('('))
	      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                               'Position ' + stream.position() +
	                               ': Expected ( ) after function name.');
	    var params = [];
	    var first = true;
	    while (null == stream.trypop(')')) {
	      if (!first && null == stream.trypop(','))
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Expected , between arguments of the function.');
	      first = false;
	      var param = orExpr(stream, a);
	      if (param == null)
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Expected expression as argument of function.');
	      params.push(param);
	    }
	    return a.node('FunctionCall', name, params);
	  }

	  /** [18] UnionExpr::= PathExpr | UnionExpr '|' PathExpr
	   */
	  function unionExpr(stream, a) { return binaryL(pathExpr, stream, a, '|'); }
	  /** [19] PathExpr ::= LocationPath
	   *                  | FilterExpr
	   *                  | FilterExpr '/' RelativeLocationPath
	   *                  | FilterExpr '//' RelativeLocationPath
	   * Unlike most other nodes, this one always generates a node because
	   * at this point all reverse nodesets must turn into a forward nodeset
	   */
	  function pathExpr(stream, a) {
	    // We have to do FilterExpr before LocationPath because otherwise
	    // LocationPath will eat up the name from a function call.
	    var filter = filterExpr(stream, a);
	    if (null == filter) {
	      var loc = locationPath(stream, a);
	      if (null == loc) {
	        throw new Error
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': The expression shouldn\'t be empty...');
	      }
	      return a.node('PathExpr', loc);
	    }
	    var rel = relativeLocationPath(filter, stream, a, false);
	    if (filter === rel) return rel;
	    else return a.node('PathExpr', rel);
	  }
	  /** [20] FilterExpr::= PrimaryExpr | FilterExpr Predicate
	   * aka. FilterExpr ::= PrimaryExpr Predicate*
	   */
	  function filterExpr(stream, a) {
	    var primary = primaryExpr(stream, a);
	    if (primary == null) return null;
	    var pred, lhs = primary;
	    while (null != (pred = predicate(lhs, stream, a))) {
	      lhs = pred;
	    }
	    return lhs;
	  }

	  /** [21] OrExpr::= AndExpr | OrExpr 'or' AndExpr
	   */
	  function orExpr(stream, a) {
	    var orig = (stream.peeked || '') + stream.str
	    var r = binaryL(andExpr, stream, a, 'or');
	    var now = (stream.peeked || '') + stream.str;
	    return r;
	  }
	  /** [22] AndExpr::= EqualityExpr | AndExpr 'and' EqualityExpr
	   */
	  function andExpr(stream, a) { return binaryL(equalityExpr, stream, a, 'and'); }
	  /** [23] EqualityExpr::= RelationalExpr | EqualityExpr '=' RelationalExpr
	   *                     | EqualityExpr '!=' RelationalExpr
	   */
	  function equalityExpr(stream, a) { return binaryL(relationalExpr, stream, a, ['=','!=']); }
	  /** [24] RelationalExpr::= AdditiveExpr | RelationalExpr '<' AdditiveExpr
	   *                       | RelationalExpr '>' AdditiveExpr
	   *                       | RelationalExpr '<=' AdditiveExpr
	   *                       | RelationalExpr '>=' AdditiveExpr
	   */
	  function relationalExpr(stream, a) { return binaryL(additiveExpr, stream, a, ['<','>','<=','>=']); }
	  /** [25] AdditiveExpr::= MultiplicativeExpr
	   *                     | AdditiveExpr '+' MultiplicativeExpr
	   *                     | AdditiveExpr '-' MultiplicativeExpr
	   */
	  function additiveExpr(stream, a) { return binaryL(multiplicativeExpr, stream, a, ['+','-']); }
	  /** [26] MultiplicativeExpr::= UnaryExpr
	   *                           | MultiplicativeExpr MultiplyOperator UnaryExpr
	   *                           | MultiplicativeExpr 'div' UnaryExpr
	   *                           | MultiplicativeExpr 'mod' UnaryExpr
	   */
	  function multiplicativeExpr(stream, a) { return binaryL(unaryExpr, stream, a, ['*','div','mod']); }
	  /** [27] UnaryExpr::= UnionExpr | '-' UnaryExpr
	   */
	  function unaryExpr(stream, a) {
	    if (stream.trypop('-')) {
	      var e = unaryExpr(stream, a);
	      if (null == e)
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Expected unary expression after -');
	      return a.node('UnaryMinus', e);
	    }
	    else return unionExpr(stream, a);
	  }
	  var astFactory = {
	    node: function() {return Array.prototype.slice.call(arguments);}
	  };


	  /***************************************************************************
	   *                            Optimizations (TODO)                         *
	   ***************************************************************************/
	  /**
	   * Some things I've been considering:
	   * 1) a//b becomes a/descendant::b if there's no predicate that uses
	   *    position() or last()
	   * 2) axis[pred]: when pred doesn't use position, evaluate it just once per
	   *    node in the node-set rather than once per (node, position, last).
	   * For more optimizations, look up Gecko's optimizer:
	   * http://mxr.mozilla.org/mozilla-central/source/content/xslt/src/xpath/txXPathOptimizer.cpp
	   */
	  // TODO
	  function optimize(ast) {
	  }

	  /***************************************************************************
	   *                           Evaluation: axes                              *
	   ***************************************************************************/

	  /**
	   * Data types: For string, number, boolean, we just use Javascript types.
	   * Node-sets have the form
	   *    {nodes: [node, ...]}
	   * or {nodes: [node, ...], pos: [[1], [2], ...], lasts: [[1], [2], ...]}
	   *
	   * Most of the time, only the node is used and the position information is
	   * discarded. But if you use a predicate, we need to try every value of
	   * position and last in case the predicate calls position() or last().
	   */

	  /**
	   * The NodeMultiSet is a helper class to help generate
	   * {nodes:[], pos:[], lasts:[]} structures. It is useful for the
	   * descendant, descendant-or-self, following-sibling, and
	   * preceding-sibling axes for which we can use a stack to organize things.
	   */
	  function NodeMultiSet(isReverseAxis) {
	    this.nodes = [];
	    this.pos = [];
	    this.lasts = [];
	    this.nextPos = [];
	    this.seriesIndexes = [];  // index within nodes that each series begins.
	    this.isReverseAxis = isReverseAxis;
	    this._pushToNodes = isReverseAxis ? Array.prototype.unshift : Array.prototype.push;
	  }
	  NodeMultiSet.prototype = {
	    pushSeries: function pushSeries() {
	      this.nextPos.push(1);
	      this.seriesIndexes.push(this.nodes.length);
	    },
	    popSeries: function popSeries() {
	      console.assert(0 < this.nextPos.length, this.nextPos);
	      var last = this.nextPos.pop() - 1,
	          indexInPos = this.nextPos.length,
	          seriesBeginIndex = this.seriesIndexes.pop(),
	          seriesEndIndex = this.nodes.length;
	      for (var i = seriesBeginIndex; i < seriesEndIndex; ++i) {
	        console.assert(indexInPos < this.lasts[i].length);
	        console.assert(undefined === this.lasts[i][indexInPos]);
	        this.lasts[i][indexInPos] = last;
	      }
	    },
	    finalize: function() {
	      if (null == this.nextPos) return this;
	      console.assert(0 === this.nextPos.length);
	      for (var i = 0; i < this.lasts.length; ++i) {
	        for (var j = 0; j < this.lasts[i].length; ++j) {
	          console.assert(null != this.lasts[i][j], i + ',' + j + ':' + JSON.stringify(this.lasts));
	        }
	      }
	      this.pushSeries = this.popSeries = this.addNode = function() {
	        throw new Error('Already finalized.');
	      };
	      return this;
	    },
	    addNode: function addNode(node) {
	      console.assert(node);
	      this._pushToNodes.call(this.nodes, node)
	      this._pushToNodes.call(this.pos, this.nextPos.slice());
	      this._pushToNodes.call(this.lasts, new Array(this.nextPos.length));
	      for (var i = 0; i < this.nextPos.length; ++i) this.nextPos[i]++;
	    },
	    simplify: function() {
	      this.finalize();
	      return {nodes:this.nodes, pos:this.pos, lasts:this.lasts};
	    }
	  };
	  function eachContext(nodeMultiSet) {
	    var r = [];
	    for (var i = 0; i < nodeMultiSet.nodes.length; i++) {
	      var node = nodeMultiSet.nodes[i];
	      if (!nodeMultiSet.pos) {
	        r.push({nodes:[node], pos: [[i + 1]], lasts: [[nodeMultiSet.nodes.length]]});
	      } else {
	        for (var j = 0; j < nodeMultiSet.pos[i].length; ++j) {
	          r.push({nodes:[node], pos: [[nodeMultiSet.pos[i][j]]], lasts: [[nodeMultiSet.lasts[i][j]]]});
	        }
	      }
	    }
	    return r;
	  }
	  /** Matcher used in the axes.
	   */
	  function NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase) {
	    this.nodeTypeNum = nodeTypeNum;
	    this.nodeName = nodeName;
	    this.shouldLowerCase = shouldLowerCase;
	    this.nodeNameTest =
	      null == nodeName ? this._alwaysTrue :
	      shouldLowerCase ? this._nodeNameLowerCaseEquals :
	      this._nodeNameEquals;
	  }
	  NodeMatcher.prototype = {
	    matches: function matches(node) {
	      return (0 === this.nodeTypeNum || node.nodeType === this.nodeTypeNum) &&
	          this.nodeNameTest(node.nodeName);
	    },
	    _alwaysTrue: function(name) {return true;},
	    _nodeNameEquals: function _nodeNameEquals(name) {
	      return this.nodeName === name;
	    },
	    _nodeNameLowerCaseEquals: function _nodeNameLowerCaseEquals(name) {
	      return this.nodeName === name.toLowerCase();
	    }
	  };

	  function followingSiblingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, shift, peek, followingNode, andSelf, isReverseAxis) {
	    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);
	    var nodeMultiSet = new NodeMultiSet(isReverseAxis);
	    while (0 < nodeList.length) {  // can be if for following, preceding
	      var node = shift.call(nodeList);
	      console.assert(node != null);
	      node = followingNode(node);
	      nodeMultiSet.pushSeries();
	      var numPushed = 1;
	      while (null != node) {
	        if (! andSelf && matcher.matches(node))
	          nodeMultiSet.addNode(node);
	        if (node === peek.call(nodeList)) {
	          shift.call(nodeList);
	          nodeMultiSet.pushSeries();
	          numPushed++;
	        }
	        if (andSelf && matcher.matches(node))
	          nodeMultiSet.addNode(node);
	        node = followingNode(node);
	      }
	      while (0 < numPushed--)
	        nodeMultiSet.popSeries();
	    }
	    return nodeMultiSet;
	  }

	  /** Returns the next non-descendant node in document order.
	   * This is the first node in following::node(), if node is the context.
	   */
	  function followingNonDescendantNode(node) {
	    if (node.ownerElement) {
	      if (node.ownerElement.firstChild)
	        return node.ownerElement.firstChild;
	      node = node.ownerElement;
	    }
	    do {
	      if (node.nextSibling) return node.nextSibling;
	    } while (node = node.parentNode);
	    return null;
	  }

	  /** Returns the next node in a document-order depth-first search.
	   * See the definition of document order[1]:
	   *   1) element
	   *   2) namespace nodes
	   *   3) attributes
	   *   4) children
	   *   [1]: http://www.w3.org/TR/xpath/#dt-document-order
	   */
	  function followingNode(node) {
	    if (node.ownerElement)  // attributes: following node of element.
	      node = node.ownerElement;
	    if (null != node.firstChild)
	      return node.firstChild;
	    do {
	      if (null != node.nextSibling) {
	        return node.nextSibling;
	      }
	      node = node.parentNode;
	    } while (node);
	    return null;
	  }
	  /** Returns the previous node in document order (excluding attributes
	   * and namespace nodes).
	   */
	  function precedingNode(node) {
	    if (node.ownerElement)
	      return node.ownerElement;
	    if (null != node.previousSibling) {
	      node = node.previousSibling;
	      while (null != node.lastChild) {
	        node = node.lastChild;
	      }
	      return node;
	    }
	    if (null != node.parentNode) {
	      return node.parentNode;
	    }
	    return null;
	  }
	  /** This axis is inefficient if there are many nodes in the nodeList.
	   * But I think it's a pretty useless axis so it's ok. */
	  function followingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);
	    var nodeMultiSet = new NodeMultiSet(false);
	    var cursor = nodeList[0];
	    var unorderedFollowingStarts = [];
	    for (var i = 0; i < nodeList.length; i++) {
	      var node = nodeList[i];
	      var start = followingNonDescendantNode(node);
	      if (start)
	        unorderedFollowingStarts.push(start);
	    }
	    if (0 === unorderedFollowingStarts.length)
	      return {nodes:[]};
	    var pos = [], nextPos = [];
	    var started = 0;
	    while (cursor = followingNode(cursor)) {
	      for (var i = unorderedFollowingStarts.length - 1; i >= 0; i--){
	        if (cursor === unorderedFollowingStarts[i]) {
	          nodeMultiSet.pushSeries();
	          unorderedFollowingStarts.splice(i,i+1);
	          started++;
	        }
	      }
	      if (started && matcher.matches(cursor)) {
	        nodeMultiSet.addNode(cursor);
	      }
	    }
	    console.assert(0 === unorderedFollowingStarts.length);
	    for (var i = 0; i < started; i++)
	      nodeMultiSet.popSeries();
	    return nodeMultiSet.finalize();
	  }
	  function precedingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);
	    var cursor = nodeList.pop();
	    if (null == cursor) return {nodes:{}};
	    var r = {nodes:[], pos:[], lasts:[]};
	    var nextParents = [cursor.parentNode || cursor.ownerElement], nextPos = [1];
	    while (cursor = precedingNode(cursor)) {
	      if (cursor === nodeList[nodeList.length - 1]) {
	        nextParents.push(nodeList.pop());
	        nextPos.push(1);
	      }
	      var matches = matcher.matches(cursor);
	      var pos, someoneUsed = false;
	      if (matches)
	        pos = nextPos.slice();

	      for (var i = 0; i < nextParents.length; ++i) {
	        if (cursor === nextParents[i]) {
	          nextParents[i] = cursor.parentNode || cursor.ownerElement;
	          if (matches) {
	            pos[i] = null;
	          }
	        } else {
	          if (matches) {
	            pos[i] = nextPos[i]++;
	            someoneUsed = true;
	          }
	        }
	      }
	      if (someoneUsed) {
	        r.nodes.unshift(cursor);
	        r.pos.unshift(pos);
	      }
	    }
	    for (var i = 0; i < r.pos.length; ++i) {
	      var lasts = [];
	      r.lasts.push(lasts);
	      for (var j = r.pos[i].length - 1; j >= 0; j--) {
	        if (null == r.pos[i][j]) {
	          r.pos[i].splice(j, j+1);
	        } else {
	          lasts.unshift(nextPos[j] - 1);
	        }
	      }
	    }
	    return r;
	  }

	  /** node-set, axis -> node-set */
	  function descendantDfs(nodeMultiSet, node, remaining, matcher, andSelf, attrIndices, attrNodes) {
	    while (0 < remaining.length && null != remaining[0].ownerElement) {
	      var attr = remaining.shift();
	      if (andSelf && matcher.matches(attr)) {
	        attrNodes.push(attr);
	        attrIndices.push(nodeMultiSet.nodes.length);
	      }
	    }
	    if (null != node && !andSelf) {
	      if (matcher.matches(node))
	        nodeMultiSet.addNode(node);
	    }
	    var pushed = false;
	    if (null == node) {
	      if (0 === remaining.length) return;
	      node = remaining.shift();
	      nodeMultiSet.pushSeries();
	      pushed = true;
	    } else if (0 < remaining.length && node === remaining[0]) {
	      nodeMultiSet.pushSeries();
	      pushed = true;
	      remaining.shift();
	    }
	    if (andSelf) {
	      if (matcher.matches(node))
	        nodeMultiSet.addNode(node);
	    }
	    // TODO: use optimization. Also try element.getElementsByTagName
	    // var nodeList = 1 === nodeTypeNum && null != node.children ? node.children : node.childNodes;
	    var nodeList = node.childNodes;
	    for (var j = 0; j < nodeList.length; ++j) {
	      var child = nodeList[j];
	      descendantDfs(nodeMultiSet, child, remaining, matcher, andSelf, attrIndices, attrNodes);
	    }
	    if (pushed) {
	      nodeMultiSet.popSeries();
	    }
	  }
	  function descenantHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, andSelf) {
	    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);
	    var nodeMultiSet = new NodeMultiSet(false);
	    var attrIndices = [], attrNodes = [];
	    while (0 < nodeList.length) {
	      // var node = nodeList.shift();
	      descendantDfs(nodeMultiSet, null, nodeList, matcher, andSelf, attrIndices, attrNodes);
	    }
	    nodeMultiSet.finalize();
	    for (var i = attrNodes.length-1; i >= 0; --i) {
	      nodeMultiSet.nodes.splice(attrIndices[i], attrIndices[i], attrNodes[i]);
	      nodeMultiSet.pos.splice(attrIndices[i], attrIndices[i], [1]);
	      nodeMultiSet.lasts.splice(attrIndices[i], attrIndices[i], [1]);
	    }
	    return nodeMultiSet;
	  }
	  /**
	   */
	  function ancestorHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, andSelf) {
	    var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);
	    var ancestors = []; // array of non-empty arrays of matching ancestors
	    for (var i = 0; i < nodeList.length; ++i) {
	      var node = nodeList[i];
	      var isFirst = true;
	      var a = [];
	      while (null != node) {
	        if (!isFirst || andSelf) {
	          if (matcher.matches(node))
	            a.push(node);
	        }
	        isFirst = false;
	        node = node.parentNode || node.ownerElement;
	      }
	      if (0 < a.length)
	        ancestors.push(a);
	    }
	    var lasts = [];
	    for (var i = 0; i < ancestors.length; ++i) lasts.push(ancestors[i].length);
	    var nodeMultiSet = new NodeMultiSet(true);
	    var newCtx = {nodes:[], pos:[], lasts:[]};
	    while (0 < ancestors.length) {
	      var pos = [ancestors[0].length];
	      var last = [lasts[0]];
	      var node = ancestors[0].pop();
	      for (var i = ancestors.length - 1; i > 0; --i) {
	        if (node === ancestors[i][ancestors[i].length - 1]) {
	          pos.push(ancestors[i].length);
	          last.push(lasts[i]);
	          ancestors[i].pop();
	          if (0 === ancestors[i].length) {
	            ancestors.splice(i, i+1);
	            lasts.splice(i, i+1);
	          }
	        }
	      }
	      if (0 === ancestors[0].length) {
	        ancestors.shift();
	        lasts.shift();
	      }
	      newCtx.nodes.push(node);
	      newCtx.pos.push(pos);
	      newCtx.lasts.push(last);
	    }
	    return newCtx;
	  }
	  /** Helper function for sortDocumentOrder. Returns a list of indices, from the
	   * node to the root, of positions within parent.
	   * For convenience, the node is the first element of the array.
	   */
	  function addressVector(node) {
	    var r = [node];
	    if (null != node.ownerElement) {
	      node = node.ownerElement;
	      r.push(-1);
	    }
	    while (null != node) {
	      var i = 0;
	      while (null != node.previousSibling) {
	        node = node.previousSibling;
	        i++;
	      }
	      r.push(i);
	      node = node.parentNode
	    }
	    return r;
	  }
	  function addressComparator(a, b) {
	    var minlen = Math.min(a.length - 1, b.length - 1),  // not including [0]=node
	        alen = a.length,
	        blen = b.length;
	    if (a[0] === b[0]) return 0;
	    var c;
	    for (var i = 0; i < minlen; ++i) {
	      c = a[alen - i - 1] - b[blen - i - 1];
	      if (0 !== c)
	        break;
	    }
	    if (null == c || 0 === c) {
	      // All equal until one of the nodes. The longer one is the descendant.
	      c = alen - blen;
	    }
	    if (0 === c)
	      c = a.nodeName - b.nodeName;
	    if (0 === c)
	      c = 1;
	    return c;
	  }
	  var sortUniqDocumentOrder = xpath.sortUniqDocumentOrder = function(nodes) {
	    var a = [];
	    for (var i = 0; i < nodes.length; i++) {
	      var node = nodes[i];
	      var v = addressVector(node);
	      a.push(v);
	    }
	    a.sort(addressComparator);
	    var b = [];
	    for (var i = 0; i < a.length; i++) {
	      if (0 < i && a[i][0] === a[i - 1][0])
	        continue;
	      b.push(a[i][0]);
	    }
	    return b;
	  }
	  /** Sort node multiset. Does not do any de-duping. */
	  function sortNodeMultiSet(nodeMultiSet) {
	    var a = [];
	    for (var i = 0; i < nodeMultiSet.nodes.length; i++) {
	      var v = addressVector(nodeMultiSet.nodes[i]);
	      a.push({v:v, n:nodeMultiSet.nodes[i],
	              p:nodeMultiSet.pos[i], l:nodeMultiSet.lasts[i]});
	    }
	    a.sort(compare);
	    var r = {nodes:[], pos:[], lasts:[]};
	    for (var i = 0; i < a.length; ++i) {
	      r.nodes.push(a[i].n);
	      r.pos.push(a[i].p);
	      r.lasts.push(a[i].l);
	    }
	    function compare(x, y) {
	      return addressComparator(x.v, y.v);
	    }
	    return r;
	  }
	  /** Returns an array containing all the ancestors down to a node.
	   * The array starts with document.
	   */
	  function nodeAndAncestors(node) {
	    var ancestors = [node];
	    var p = node;
	    while (p = p.parentNode || p.ownerElement) {
	      ancestors.unshift(p);
	    }
	    return ancestors;
	  }
	  function compareSiblings(a, b) {
	    if (a === b) return 0;
	    var c = a;
	    while (c = c.previousSibling) {
	      if (c === b)
	        return 1;  // b < a
	    }
	    c = b;
	    while (c = c.previousSibling) {
	      if (c === a)
	        return -1;  // a < b
	    }
	    throw new Error('a and b are not siblings: ' + xpath.stringifyObject(a) + ' vs ' + xpath.stringifyObject(b));
	  }
	  /** The merge in merge-sort.*/
	  function mergeNodeLists(x, y) {
	    var a, b, aanc, banc, r = [];
	    if ('object' !== typeof x)
	      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                               'Invalid LHS for | operator ' +
	                               '(expected node-set): ' + x);
	    if ('object' !== typeof y)
	      throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                               'Invalid LHS for | operator ' +
	                               '(expected node-set): ' + y);
	    while (true) {
	      if (null == a) {
	        a = x.shift();
	        if (null != a)
	          aanc = addressVector(a);
	      }
	      if (null == b) {
	        b = y.shift();
	        if (null != b)
	          banc = addressVector(b);
	      }
	      if (null == a || null == b) break;
	      var c = addressComparator(aanc, banc);
	      if (c < 0) {
	        r.push(a);
	        a = null;
	        aanc = null;
	      } else if (c > 0) {
	        r.push(b);
	        b = null;
	        banc = null;
	      } else if (a.nodeName < b.nodeName) {  // attributes
	        r.push(a);
	        a = null;
	        aanc = null;
	      } else if (a.nodeName > b.nodeName) {  // attributes
	        r.push(b);
	        b = null;
	        banc = null;
	      } else if (a !== b) {
	        // choose b arbitrarily
	        r.push(b);
	        b = null;
	        banc = null;
	      } else {
	        console.assert(a === b, c);
	        // just skip b without pushing it.
	        b = null;
	        banc = null;
	      }
	    }
	    while (a) {
	      r.push(a);
	      a = x.shift();
	    }
	    while (b) {
	      r.push(b);
	      b = y.shift();
	    }
	    return r;
	  }
	  function comparisonHelper(test, x, y, isNumericComparison) {
	    var coersion;
	    if (isNumericComparison)
	      coersion = fn.number;
	    else coersion =
	      'boolean' === typeof x || 'boolean' === typeof y ? fn['boolean'] :
	      'number' === typeof x || 'number' === typeof y ? fn.number :
	      fn.string;
	    if ('object' === typeof x && 'object' === typeof y) {
	      var aMap = {};
	      for (var i = 0; i < x.nodes.length; ++i) {
	        var xi = coersion({nodes:[x.nodes[i]]});
	        for (var j = 0; j < y.nodes.length; ++j) {
	          var yj = coersion({nodes:[y.nodes[j]]});
	          if (test(xi, yj)) return true;
	        }
	      }
	      return false;
	    } else if ('object' === typeof x && x.nodes && x.nodes.length) {
	      for (var i = 0; i < x.nodes.length; ++i) {
	        var xi = coersion({nodes:[x.nodes[i]]}), yc = coersion(y);
	        if (test(xi, yc))
	          return true;
	      }
	      return false;
	    } else if ('object' === typeof y && x.nodes && x.nodes.length) {
	      for (var i = 0; i < x.nodes.length; ++i) {
	        var yi = coersion({nodes:[y.nodes[i]]}), xc = coersion(x);
	        if (test(xc, yi))
	          return true;
	      }
	      return false;
	    } else {
	      var xc = coersion(x), yc = coersion(y);
	      return test(xc, yc);
	    }
	  }
	  var axes = xpath.axes = {
	    'ancestor':
	      function ancestor(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        return ancestorHelper(
	          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, false);
	      },
	    'ancestor-or-self':
	      function ancestorOrSelf(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        return ancestorHelper(
	          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, true);
	      },
	    'attribute':
	      function attribute(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        // TODO: figure out whether positions should be undefined here.
	        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);
	        var nodeMultiSet = new NodeMultiSet(false);
	        if (null != nodeName) {
	          // TODO: with namespace
	          for (var i = 0; i < nodeList.length; ++i) {
	            var node = nodeList[i];
	            if (null == node.getAttributeNode)
	              continue;  // only Element has .getAttributeNode
	            var attr = node.getAttributeNode(nodeName);
	            if (null != attr && matcher.matches(attr)) {
	              nodeMultiSet.pushSeries();
	              nodeMultiSet.addNode(attr);
	              nodeMultiSet.popSeries();
	            }
	          }
	        } else {
	          for (var i = 0; i < nodeList.length; ++i) {
	            var node = nodeList[i];
	            if (null != node.attributes) {
	              nodeMultiSet.pushSeries();
	              for (var j = 0; j < node.attributes.length; j++) {  // all nodes have .attributes
	                var attr = node.attributes[j];
	                if (matcher.matches(attr))  // TODO: I think this check is unnecessary
	                  nodeMultiSet.addNode(attr);
	              }
	              nodeMultiSet.popSeries();
	            }
	          }
	        }
	        return nodeMultiSet.finalize();
	      },
	    'child':
	      function child(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);
	        var nodeMultiSet = new NodeMultiSet(false);
	        for (var i = 0; i < nodeList.length; ++i) {
	          var n = nodeList[i];
	          if (n.ownerElement)  // skip attribute nodes' text child.
	            continue;
	          if (n.childNodes) {
	            nodeMultiSet.pushSeries();
	            var childList = 1 === nodeTypeNum && null != n.children ?
	                n.children : n.childNodes;
	            for (var j = 0; j < childList.length; ++j) {
	              var child = childList[j];
	              if (matcher.matches(child)) {
	                nodeMultiSet.addNode(child);
	              }
	              // don't have to do de-duping because children have parent,
	              // which are current context.
	            }
	            nodeMultiSet.popSeries();
	          }
	        }
	        nodeMultiSet.finalize();
	        return sortNodeMultiSet(nodeMultiSet);
	      },
	    'descendant':
	      function descenant(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        return descenantHelper(
	          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, false);
	      },
	    'descendant-or-self':
	      function descenantOrSelf(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        return descenantHelper(
	          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase, true);
	      },
	    'following':
	      function following(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        return followingHelper(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase);
	      },
	    'following-sibling':
	      function followingSibling(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        return followingSiblingHelper(
	          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase,
	          Array.prototype.shift, function() {return this[0];},
	          function(node) {return node.nextSibling;});
	      },
	    'namespace':
	      function namespace(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        // TODO
	      },
	    'parent':
	      function parent(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);
	        var nodes = [], pos = [];
	        for (var i = 0; i < nodeList.length; ++i) {
	          var parent = nodeList[i].parentNode || nodeList[i].ownerElement;
	          if (null == parent)
	            continue;
	          if (!matcher.matches(parent))
	            continue;
	          if (nodes.length > 0 && parent === nodes[nodes.length-1])
	            continue;
	          nodes.push(parent);
	          pos.push([1]);
	        }
	        return {nodes:nodes, pos:pos, lasts:pos};
	      },
	    'preceding':
	      function preceding(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        return precedingHelper(
	          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase);
	      },
	    'preceding-sibling':
	      function precedingSibling(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        return followingSiblingHelper(
	          nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase,
	          Array.prototype.pop, function() {return this[this.length-1];},
	          function(node) {return node.previousSibling},
	          false, true);
	      },
	    'self':
	      function self(nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase) {
	        var nodes = [], pos = [];
	        var matcher = new NodeMatcher(nodeTypeNum, nodeName, shouldLowerCase);
	        for (var i = 0; i < nodeList.length; ++i) {
	          if (matcher.matches(nodeList[i])) {
	            nodes.push(nodeList[i]);
	            pos.push([1]);
	          }
	        }
	        return {nodes: nodes, pos: pos, lasts: pos}
	      }
	  };

	  /***************************************************************************
	   *                         Evaluation: functions                           *
	   ***************************************************************************/
	  var fn = {
	    'number': function number(optObject) {
	      if ('number' === typeof optObject)
	        return optObject;
	      if ('string' === typeof optObject)
	        return parseFloat(optObject);  // note: parseFloat(' ') -> NaN, unlike +' ' -> 0.
	      if ('boolean' === typeof optObject)
	        return +optObject;
	      return fn.number(fn.string.call(this, optObject));  // for node-sets
	    },
	    'string': function string(optObject) {
	      if (null == optObject)
	        return fn.string(this);
	      if ('string' === typeof optObject || 'boolean' === typeof optObject ||
	          'number' === typeof optObject)
	        return '' + optObject;
	      if (0 == optObject.nodes.length) return '';
	      if (null != optObject.nodes[0].textContent)
	        return optObject.nodes[0].textContent;
	      return optObject.nodes[0].nodeValue;
	    },
	    'boolean': function booleanVal(x) {
	      return 'object' === typeof x ? x.nodes.length > 0 : !!x;
	    },
	    'last': function last() {
	      console.assert(Array.isArray(this.pos));
	      console.assert(Array.isArray(this.lasts));
	      console.assert(1 === this.pos.length);
	      console.assert(1 === this.lasts.length);
	      console.assert(1 === this.lasts[0].length);
	      return this.lasts[0][0];
	    },
	    'position': function position() {
	      console.assert(Array.isArray(this.pos));
	      console.assert(Array.isArray(this.lasts));
	      console.assert(1 === this.pos.length);
	      console.assert(1 === this.lasts.length);
	      console.assert(1 === this.pos[0].length);
	      return this.pos[0][0];
	    },
	    'count': function count(nodeSet) {
	      if ('object' !== typeof nodeSet)
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Position ' + stream.position() +
	                                 ': Function count(node-set) ' +
	                                 'got wrong argument type: ' + nodeSet);
	      return nodeSet.nodes.length;
	    },
	    'id': function id(object) {
	      var r = {nodes: []};
	      var doc = this.nodes[0].ownerDocument || this.nodes[0];
	      console.assert(doc);
	      var ids;
	      if ('object' === typeof object) {
	        // for node-sets, map id over each node value.
	        ids = [];
	        for (var i = 0; i < object.nodes.length; ++i) {
	          var idNode = object.nodes[i];
	          var idsString = fn.string({nodes:[idNode]});
	          var a = idsString.split(/[ \t\r\n]+/g);
	          Array.prototype.push.apply(ids, a);
	        }
	      } else {
	        var idsString = fn.string(object);
	        var a = idsString.split(/[ \t\r\n]+/g);
	        ids = a;
	      }
	      for (var i = 0; i < ids.length; ++i) {
	        var id = ids[i];
	        if (0 === id.length)
	          continue;
	        var node = doc.getElementById(id);
	        if (null != node)
	          r.nodes.push(node);
	      }
	      r.nodes = sortUniqDocumentOrder(r.nodes);
	      return r;
	    },
	    'local-name': function(nodeSet) {
	      if (null == nodeSet)
	        return fn.name(this);
	      if (null == nodeSet.nodes) {
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'argument to name() must be a node-set. got ' + nodeSet);
	      }
	      // TODO: namespaced version
	      return nodeSet.nodes[0].nodeName.toLowerCase();  // TODO: no toLowerCase for xml
	    },
	    'namespace-uri': function(nodeSet) {
	      // TODO
	      throw new Error('not implemented yet');
	    },
	    'name': function(nodeSet) {
	      if (null == nodeSet)
	        return fn.name(this);
	      if (null == nodeSet.nodes) {
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'argument to name() must be a node-set. got ' + nodeSet);
	      }
	      return nodeSet.nodes[0].nodeName.toLowerCase();  // TODO: no toLowerCase for xml
	    },
	    'concat': function concat(x) {
	      var l = [];
	      for (var i = 0; i < arguments.length; ++i) {
	        l.push(fn.string(arguments[i]));
	      }
	      return l.join('');
	    },
	    'starts-with': function startsWith(a, b) {
	      var as = fn.string(a), bs = fn.string(b);
	      return as.substr(0, bs.length) === bs;
	    },
	    'contains': function contains(a, b) {
	      var as = fn.string(a), bs = fn.string(b);
	      var i = as.indexOf(bs);
	      if (-1 === i) return false;
	      return true;
	    },
	    'substring-before': function substringBefore(a, b) {
	      var as = fn.string(a), bs = fn.string(b);
	      var i = as.indexOf(bs);
	      if (-1 === i) return '';
	      return as.substr(0, i);
	    },
	    'substring-after': function substringBefore(a, b) {
	      var as = fn.string(a), bs = fn.string(b);
	      var i = as.indexOf(bs);
	      if (-1 === i) return '';
	      return as.substr(i + bs.length);
	    },
	    'substring': function substring(string, start, optEnd) {
	      if (null == string || null == start) {
	        throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                 'Must be at least 2 arguments to string()');
	      }
	      var sString = fn.string(string),
	          iStart = fn.round(start),
	          iEnd = optEnd == null ? null : fn.round(optEnd);
	      // Note that xpath string positions user 1-based index
	      if (iEnd == null)
	        return sString.substr(iStart - 1);
	      else
	        return sString.substr(iStart - 1, iEnd);
	    },
	    'string-length': function stringLength(optString) {
	      return fn.string.call(this, optString).length;
	    },
	    'normalize-space': function normalizeSpace(optString) {
	      var s = fn.string.call(this, optString);
	      return s.replace(/[ \t\r\n]+/g, ' ').replace(/^ | $/g, '');
	    },
	    'translate': function translate(string, from, to) {
	      var sString = fn.string.call(this, string),
	          sFrom = fn.string(from),
	          sTo = fn.string(to);
	      var eachCharRe = [];
	      var map = {};
	      for (var i = 0; i < sFrom.length; ++i) {
	        var c = sFrom.charAt(i);
	        map[c] = sTo.charAt(i);  // returns '' if beyond length of sTo.
	        // copied from goog.string.regExpEscape in the Closure library.
	        eachCharRe.push(
	          c.replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, '\\$1').
	            replace(/\x08/g, '\\x08'));
	      }
	      var re = new RegExp(eachCharRe.join('|'), 'g');
	      return sString.replace(re, function(c) {return map[c];});
	    },
	    /// Boolean functions
	    'not': function not(x) {
	      var bx = fn['boolean'](x);
	      return !bx;
	    },
	    'true': function trueVal() { return true; },
	    'false': function falseVal() { return false; },
	    // TODO
	    'lang': function lang(string) { throw new Error('Not implemented');},
	    'sum': function sum(optNodeSet) {
	      if (null == optNodeSet) return fn.sum(this);
	      // for node-sets, map id over each node value.
	      var sum = 0;
	      for (var i = 0; i < optNodeSet.nodes.length; ++i) {
	        var node = optNodeSet.nodes[i];
	        var x = fn.number({nodes:[node]});
	        sum += x;
	      }
	      return sum;
	    },
	    'floor': function floor(number) {
	      return Math.floor(fn.number(number));
	    },
	    'ceiling': function ceiling(number) {
	      return Math.ceil(fn.number(number));
	    },
	    'round': function round(number) {
	      return Math.round(fn.number(number));
	    }
	  };
	  /***************************************************************************
	   *                         Evaluation: operators                           *
	   ***************************************************************************/
	  var more = {
	    UnaryMinus: function(x) { return -fn.number(x); },
	    '+': function(x, y) { return fn.number(x) + fn.number(y); },
	    '-': function(x, y) { return fn.number(x) - fn.number(y); },
	    '*': function(x, y) { return fn.number(x) * fn.number(y); },
	    'div': function(x, y) { return fn.number(x) / fn.number(y); },
	    'mod': function(x, y) { return fn.number(x) % fn.number(y); },
	    '<': function(x, y) {
	      return comparisonHelper(function(x, y) { return fn.number(x) < fn.number(y);}, x, y, true);
	    },
	    '<=': function(x, y) {
	      return comparisonHelper(function(x, y) { return fn.number(x) <= fn.number(y);}, x, y, true);
	    },
	    '>':  function(x, y) {
	      return comparisonHelper(function(x, y) { return fn.number(x) > fn.number(y);}, x, y, true);
	    },
	    '>=': function(x, y) {
	      return comparisonHelper(function(x, y) { return fn.number(x) >= fn.number(y);}, x, y, true);
	    },
	    'and': function(x, y) { return fn['boolean'](x) && fn['boolean'](y); },
	    'or': function(x, y) { return fn['boolean'](x) || fn['boolean'](y); },
	    '|': function(x, y) { return {nodes: mergeNodeLists(x.nodes, y.nodes)}; },
	    '=': function(x, y) {
	      // optimization for two node-sets case: avoid n^2 comparisons.
	      if ('object' === typeof x && 'object' === typeof y) {
	        var aMap = {};
	        for (var i = 0; i < x.nodes.length; ++i) {
	          var s = fn.string({nodes:[x.nodes[i]]});
	          aMap[s] = true;
	        }
	        for (var i = 0; i < y.nodes.length; ++i) {
	          var s = fn.string({nodes:[y.nodes[i]]});
	          if (aMap[s]) return true;
	        }
	        return false;
	      } else {
	        return comparisonHelper(function(x, y) {return x === y;}, x, y);
	      }
	    },
	    '!=': function(x, y) {
	      // optimization for two node-sets case: avoid n^2 comparisons.
	      if ('object' === typeof x && 'object' === typeof y) {
	        if (0 === x.nodes.length || 0 === y.nodes.length) return false;
	        var aMap = {};
	        for (var i = 0; i < x.nodes.length; ++i) {
	          var s = fn.string({nodes:[x.nodes[i]]});
	          aMap[s] = true;
	        }
	        for (var i = 0; i < y.nodes.length; ++i) {
	          var s = fn.string({nodes:[y.nodes[i]]});
	          if (!aMap[s]) return true;
	        }
	        return false;
	      } else {
	        return comparisonHelper(function(x, y) {return x !== y;}, x, y);
	      }
	    }
	  };
	  var nodeTypes = xpath.nodeTypes = {
	    'node': 0,
	    'attribute': 2,
	    'comment': 8, // this.doc.COMMENT_NODE,
	    'text': 3, // this.doc.TEXT_NODE,
	    'processing-instruction': 7, // this.doc.PROCESSING_INSTRUCTION_NODE,
	    'element': 1  //this.doc.ELEMENT_NODE
	  };
	  /** For debugging and unit tests: returnjs a stringified version of the
	   * argument. */
	  var stringifyObject = xpath.stringifyObject = function stringifyObject(ctx) {
	    var seenKey = 'seen' + Math.floor(Math.random()*1000000000);
	    return JSON.stringify(helper(ctx));

	    function helper(ctx) {
	      if (Array.isArray(ctx)) {
	        return ctx.map(function(x) {return helper(x);});
	      }
	      if ('object' !== typeof ctx) return ctx;
	      if (null == ctx) return ctx;
	    //  if (ctx.toString) return ctx.toString();
	      if (null != ctx.outerHTML) return ctx.outerHTML;
	      if (null != ctx.nodeValue) return ctx.nodeName + '=' + ctx.nodeValue;
	      if (ctx[seenKey]) return '[circular]';
	      ctx[seenKey] = true;
	      var nicer = {};
	      for (var key in ctx) {
	        if (seenKey === key)
	          continue;
	        try {
	          nicer[key] = helper(ctx[key]);
	        } catch (e) {
	          nicer[key] = '[exception: ' + e.message + ']';
	        }
	      }
	      delete ctx[seenKey];
	      return nicer;
	    }
	  }
	  var Evaluator = xpath.Evaluator = function Evaluator(doc) {
	    this.doc = doc;
	  }
	  Evaluator.prototype = {
	    val: function val(ast, ctx) {
	      console.assert(ctx.nodes);

	      if ('number' === typeof ast || 'string' === typeof ast) return ast;
	      if (more[ast[0]]) {
	        var evaluatedParams = [];
	        for (var i = 1; i < ast.length; ++i) {
	          evaluatedParams.push(this.val(ast[i], ctx));
	        }
	        var r = more[ast[0]].apply(ctx, evaluatedParams);
	        return r;
	      }
	      switch (ast[0]) {
	        case 'Root': return {nodes: [this.doc]};
	        case 'FunctionCall':
	          var functionName = ast[1], functionParams = ast[2];
	          if (null == fn[functionName])
	            throw new XPathException(XPathException.INVALID_EXPRESSION_ERR,
	                                     'Unknown function: ' + functionName);
	          var evaluatedParams = [];
	          for (var i = 0; i < functionParams.length; ++i) {
	            evaluatedParams.push(this.val(functionParams[i], ctx));
	          }
	          var r = fn[functionName].apply(ctx, evaluatedParams);
	          return r;
	        case 'Predicate':
	          var lhs = this.val(ast[1], ctx);
	          var ret = {nodes: []};
	          var contexts = eachContext(lhs);
	          for (var i = 0; i < contexts.length; ++i) {
	            var singleNodeSet = contexts[i];
	            var rhs = this.val(ast[2], singleNodeSet);
	            var success;
	            if ('number' === typeof rhs) {
	              success = rhs === singleNodeSet.pos[0][0];
	            } else {
	              success = fn['boolean'](rhs);
	            }
	            if (success) {
	              var node = singleNodeSet.nodes[0];
	              ret.nodes.push(node);
	              // skip over all the rest of the same node.
	              while (i+1 < contexts.length && node === contexts[i+1].nodes[0]) {
	                i++;
	              }
	            }
	          }
	          return ret;
	        case 'PathExpr':
	          // turn the path into an expressoin; i.e., remove the position
	          // information of the last axis.
	          var x = this.val(ast[1], ctx);
	          // Make the nodeset a forward-direction-only one.
	          if (x.finalize) {  // it is a NodeMultiSet
	            for (var i = 0; i < x.nodes.length; ++i) {
	              console.assert(null != x.nodes[i].nodeType);
	            }
	            return {nodes: x.nodes};
	          } else {
	            return x;
	          }
	        case '/':
	          // TODO: don't generate '/' nodes, just Axis nodes.
	          var lhs = this.val(ast[1], ctx);
	          console.assert(null != lhs);
	          var r = this.val(ast[2], lhs);
	          console.assert(null != r);
	          return r;
	        case 'Axis':
	          // All the axis tests from Step. We only get AxisSpecifier NodeTest,
	          // not the predicate (which is applied later)
	          var axis = ast[1],
	              nodeType = ast[2],
	              nodeTypeNum = nodeTypes[nodeType],
	              shouldLowerCase = true,  // TODO: give option
	              nodeName = ast[3] && shouldLowerCase ? ast[3].toLowerCase() : ast[3];
	          nodeName = nodeName === '*' ? null : nodeName;
	          if ('object' !== typeof ctx) return {nodes:[], pos:[]};
	          var nodeList = ctx.nodes.slice();  // TODO: is copy needed?
	          var r = axes[axis](nodeList  /*destructive!*/, nodeTypeNum, nodeName, shouldLowerCase);
	          return r;
	      }
	    }
	  };
	  var evaluate = xpath.evaluate = function evaluate(expr, doc, context) {
	    //var astFactory = new AstEvaluatorFactory(doc, context);
	    var stream = new Stream(expr);
	    var ast = parse(stream, astFactory);
	    var val = new Evaluator(doc).val(ast, {nodes: [context]});
	    return val;
	  }

	  /***************************************************************************
	   *                           DOM interface                                 *
	   ***************************************************************************/
	  var XPathException = xpath.XPathException = function XPathException(code, message) {
	    var e = new Error(message);
	    e.name = 'XPathException';
	    e.code = code;
	    return e;
	  }
	  XPathException.INVALID_EXPRESSION_ERR = 51;
	  XPathException.TYPE_ERR = 52;


	  var XPathEvaluator = xpath.XPathEvaluator = function XPathEvaluator() {}
	  XPathEvaluator.prototype = {
	    createExpression: function(expression, resolver) {
	      return new XPathExpression(expression, resolver);
	    },
	    createNSResolver: function(nodeResolver) {
	      // TODO
	    },
	    evaluate: function evaluate(expression, contextNode, resolver, type, result) {
	      var expr = new XPathExpression(expression, resolver);
	      return expr.evaluate(contextNode, type, result);
	    }
	  };


	  var XPathExpression = xpath.XPathExpression = function XPathExpression(expression, resolver, optDoc) {
	    var stream = new Stream(expression);
	    this._ast = parse(stream, astFactory);
	    this._doc = optDoc;
	  }
	  XPathExpression.prototype = {
	    evaluate: function evaluate(contextNode, type, result) {
	      if (null == contextNode.nodeType)
	        throw new Error('bad argument (expected context node): ' + contextNode);
	      var doc = contextNode.ownerDocument || contextNode;
	      if (null != this._doc && this._doc !== doc) {
	        throw new core.DOMException(
	            core.WRONG_DOCUMENT_ERR,
	            'The document must be the same as the context node\'s document.');
	      }
	      var evaluator = new Evaluator(doc);
	      var value = evaluator.val(this._ast, {nodes: [contextNode]});
	      if (XPathResult.NUMBER_TYPE === type)
	        value = fn.number(value);
	      else if (XPathResult.STRING_TYPE === type)
	        value = fn.string(value);
	      else if (XPathResult.BOOLEAN_TYPE === type)
	        value = fn['boolean'](value);
	      else if (XPathResult.ANY_TYPE !== type &&
	               XPathResult.UNORDERED_NODE_ITERATOR_TYPE !== type &&
	               XPathResult.ORDERED_NODE_ITERATOR_TYPE !== type &&
	               XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE !== type &&
	               XPathResult.ORDERED_NODE_SNAPSHOT_TYPE !== type &&
	               XPathResult.ANY_UNORDERED_NODE_TYPE !== type &&
	               XPathResult.FIRST_ORDERED_NODE_TYPE !== type)
	        throw new core.DOMException(
	            core.NOT_SUPPORTED_ERR,
	            'You must provide an XPath result type (0=any).');
	      else if (XPathResult.ANY_TYPE !== type &&
	               'object' !== typeof value)
	        throw new XPathException(
	            XPathException.TYPE_ERR,
	            'Value should be a node-set: ' + value);
	      return new XPathResult(doc, value, type);
	    }
	  }

	  var XPathResult = xpath.XPathResult = function XPathResult(doc, value, resultType) {
	    this._value = value;
	    this._resultType = resultType;
	    this._i = 0;
	    this._invalidated = false;
	    if (this.resultType === XPathResult.UNORDERED_NODE_ITERATOR_TYPE ||
	        this.resultType === XPathResult.ORDERED_NODE_ITERATOR_TYPE) {
	      doc.addEventListener('DOMSubtreeModified', invalidate, true);
	      var self = this;
	      function invalidate() {
	        self._invalidated = true;
	        doc.removeEventListener('DOMSubtreeModified', invalidate, true);
	      }
	    }
	  }
	  XPathResult.ANY_TYPE = 0;
	  XPathResult.NUMBER_TYPE = 1;
	  XPathResult.STRING_TYPE = 2;
	  XPathResult.BOOLEAN_TYPE = 3;
	  XPathResult.UNORDERED_NODE_ITERATOR_TYPE = 4;
	  XPathResult.ORDERED_NODE_ITERATOR_TYPE = 5;
	  XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE = 6;
	  XPathResult.ORDERED_NODE_SNAPSHOT_TYPE = 7;
	  XPathResult.ANY_UNORDERED_NODE_TYPE = 8;
	  XPathResult.FIRST_ORDERED_NODE_TYPE = 9;
	  var proto = {
	    // XPathResultType
	    get resultType() {
	      if (this._resultType) return this._resultType;
	      switch (typeof this._value) {
	        case 'number': return XPathResult.NUMBER_TYPE;
	        case 'string': return XPathResult.STRING_TYPE;
	        case 'boolean': return XPathResult.BOOLEAN_TYPE;
	        default: return XPathResult.UNORDERED_NODE_ITERATOR_TYPE;
	      }
	    },
	    get numberValue() {
	      if (XPathResult.NUMBER_TYPE !== this.resultType)
	        throw new XPathException(XPathException.TYPE_ERR,
	                                 'You should have asked for a NUMBER_TYPE.');
	      return this._value;
	    },
	    get stringValue() {
	      if (XPathResult.STRING_TYPE !== this.resultType)
	        throw new XPathException(XPathException.TYPE_ERR,
	                                 'You should have asked for a STRING_TYPE.');
	      return this._value;
	    },
	    get booleanValue() {
	      if (XPathResult.BOOLEAN_TYPE !== this.resultType)
	        throw new XPathException(XPathException.TYPE_ERR,
	                                 'You should have asked for a BOOLEAN_TYPE.');
	      return this._value;
	    },
	    get singleNodeValue() {
	      if (XPathResult.ANY_UNORDERED_NODE_TYPE !== this.resultType &&
	          XPathResult.FIRST_ORDERED_NODE_TYPE !== this.resultType)
	        throw new XPathException(
	            XPathException.TYPE_ERR,
	            'You should have asked for a FIRST_ORDERED_NODE_TYPE.');
	      return this._value.nodes[0] || null;
	    },
	    get invalidIteratorState() {
	      if (XPathResult.UNORDERED_NODE_ITERATOR_TYPE !== this.resultType &&
	          XPathResult.ORDERED_NODE_ITERATOR_TYPE !== this.resultType)
	        return false;
	      return !!this._invalidated;
	    },
	    get snapshotLength() {
	      if (XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE !== this.resultType &&
	          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE !== this.resultType)
	        throw new XPathException(
	            XPathException.TYPE_ERR,
	            'You should have asked for a ORDERED_NODE_SNAPSHOT_TYPE.');
	      return this._value.nodes.length;
	    },
	    iterateNext: function iterateNext() {
	      if (XPathResult.UNORDERED_NODE_ITERATOR_TYPE !== this.resultType &&
	          XPathResult.ORDERED_NODE_ITERATOR_TYPE !== this.resultType)
	        throw new XPathException(
	            XPathException.TYPE_ERR,
	            'You should have asked for a ORDERED_NODE_ITERATOR_TYPE.');
	      if (this.invalidIteratorState)
	        throw new core.DOMException(
	            core.INVALID_STATE_ERR,
	            'The document has been mutated since the result was returned');
	      return this._value.nodes[this._i++] || null;
	    },
	    snapshotItem: function snapshotItem(index) {
	      if (XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE !== this.resultType &&
	          XPathResult.ORDERED_NODE_SNAPSHOT_TYPE !== this.resultType)
	        throw new XPathException(
	            XPathException.TYPE_ERR,
	            'You should have asked for a ORDERED_NODE_SNAPSHOT_TYPE.');
	      return this._value.nodes[index] || null;
	    }
	  };
	  // so you can access ANY_TYPE etc. from the instances:
	  XPathResult.prototype = Object.create(XPathResult,
	      Object.keys(proto).reduce(function (descriptors, name) {
	        descriptors[name] = Object.getOwnPropertyDescriptor(proto, name);
	        return descriptors;
	      }, {
	        constructor: {
	          value: XPathResult,
	          writable: true,
	          configurable: true
	        }
	      }));

	  core.XPathException = XPathException;
	  core.XPathExpression = XPathExpression;
	  core.XPathResult = XPathResult;
	  core.XPathEvaluator = XPathEvaluator;

	  core.Document.prototype.createExpression =
	    XPathEvaluator.prototype.createExpression;

	  core.Document.prototype.createNSResolver =
	      XPathEvaluator.prototype.createNSResolver;

	  core.Document.prototype.evaluate = XPathEvaluator.prototype.evaluate;

	})();


/***/ },
/* 646 */
/***/ function(module, exports, __webpack_require__) {

	// w3c Load/Save functionality: http://www.w3.org/TR/2004/REC-DOM-Level-3-LS-20040407/

	var core = __webpack_require__(440).dom.level3.core;
	var events = __webpack_require__(642).dom.level3.events;
	var createFrom = __webpack_require__(14).createFrom;

	var ls = {};

	// TODO: what is this?
	//typedef dom::DOMConfiguration DOMConfiguration;

	ls.LSException = function LSException(code) {
	  this.code = code;
	};

	ls.LSException.prototype = {
	  // LSExceptionCode
	  PARSE_ERR                       : 81,
	  SERIALIZE_ERR                   : 82
	};

	ls.DOMImplementationLS = function DOMImplementationLS() {

	};

	var DOMImplementationExtension = {

	  // DOMImplementationLSMode
	  MODE_SYNCHRONOUS  : 1,
	  MODE_ASYNCHRONOUS : 2,

	  // raises(dom::DOMException);
	  createLSParser : function(/* int */ mode, /* string */ schemaType) {
	    return new ls.LSParser(mode, schemaType);
	  },

	  createLSSerializer : function() {
	    return new ls.LSSerializer();
	  },

	  createLSInput : function() {
	    return new ls.LSInput();
	  },

	  createLSOutput : function() {
	    return new ls.LSOutput();
	  }
	};

	Object.keys(DOMImplementationExtension).forEach(function(k, v) {
	  core.DOMImplementation.prototype[k] = DOMImplementationExtension[k];
	});

	ls.DOMImplementationLS.prototype = DOMImplementationExtension; 

	core.Document.getFeature = function() {
	  return DOMImplementationExtension;
	};

	ls.LSParser = function LSParser() {
	  this._domConfig = new core.DOMConfiguration();
	};
	ls.LSParser.prototype = {
	  get domConfig() { return this._domConfig; },
	  get filter() { return this._filter || null; },
	  set filter(value) { this._filter = value; },
	  get async() { return this._async; },
	  get busy() { return this._busy; },

	  // raises(dom::DOMException, LSException);
	  parse : function (/* LSInput */ input) {
	    var doc = new core.Document();
	    doc._inputEncoding = 'UTF-16';
	    return doc;
	  },

	  // raises(dom::DOMException, LSException);
	  parseURI : function(/* string */ uri) {
	    return new core.Document();
	  },

	  // ACTION_TYPES
	  ACTION_APPEND_AS_CHILDREN       : 1,
	  ACTION_REPLACE_CHILDREN         : 2,
	  ACTION_INSERT_BEFORE            : 3,
	  ACTION_INSERT_AFTER             : 4,
	  ACTION_REPLACE                  : 5,

	  // @returns Node
	  // @raises DOMException, LSException
	  parseWithContext                : function(/* LSInput */ input, /* Node */ contextArg, /* int */ action) {
	    return new core.Node();
	  },

	  abort                           : function() {
	    // TODO: implement
	  }
	};

	ls.LSInput = function LSInput() {};
	ls.LSInput.prototype = {
	  get characterStream() { return this._characterStream || null; },
	  set characterStream(value) { this._characterStream = value; },
	  get byteStream() { return this._byteStream || null; },
	  set byteStream(value) { this._byteStream = value; },
	  get stringData() { return this._stringData || null; },
	  set stringData(value) { this._stringData = value; },
	  get systemId() { return this._systemId || null; },
	  set systemId(value) { this._systemId = value; },
	  get publicId() { return this._publicId || null; },
	  set publicId(value) { this._publicId = value; },
	  get baseURI() { return this._baseURI || null; },
	  set baseURI(value) { this._baseURI = value; },
	  get encoding() { return this._encoding || null; },
	  set encoding(value) { this._encoding = value; },
	  get certifiedText() { return this._certifiedText || null; },
	  set certifiedText(value) { this._certifiedText = value; },
	};

	ls.LSResourceResolver = function LSResourceResolver() {};

	// @returns LSInput
	ls.LSResourceResolver.prototype.resolveResource = function(type, namespaceURI, publicId, systemId, baseURI) {
	  return new ls.LSInput();
	};

	ls.LSParserFilter = function LSParserFilter() {};
	ls.LSParserFilter.prototype = {

	  // Constants returned by startElement and acceptNode
	  FILTER_ACCEPT                   : 1,
	  FILTER_REJECT                   : 2,
	  FILTER_SKIP                     : 3,
	  FILTER_INTERRUPT                : 4,

	  get whatToShow() { return this._whatToShow; },

	  // @returns int
	  startElement : function(/* Element */ elementArg) {
	    return 0;
	  },

	  // @returns int
	  acceptNode : function(/* Node */ nodeArg) {
	    return nodeArg;
	  }
	};

	ls.LSSerializer = function LSSerializer() {
	  this._domConfig = new core.DOMConfiguration();
	};
	ls.LSSerializer.prototype = {
	  get domConfig() { return this._domConfig; },
	  get newLine() { return this._newLine || null; },
	  set newLine(value) { this._newLine = value; },
	  get filter() { return this._filter || null; },
	  set filter(value) { this._filter = value; },

	  // @returns boolean
	  // @raises LSException
	  write : function(/* Node */ nodeArg, /* LSOutput */ destination) {
	   return true;
	  },

	  // @returns boolean
	  // @raises LSException
	  writeToURI : function(/* Node */ nodeArg, /* string */ uri) {
	   return true;
	  },

	  // @returns string
	  // @raises DOMException, LSException
	  writeToString : function(/* Node */ nodeArg) {
	    return "";
	  }
	};

	ls.LSOutput = function LSOutput() {};
	ls.LSOutput.prototype = {
	  get characterStream() { return this._characterStream || null; },
	  set characterStream(value) { this._characterStream = value; },
	  get byteStream() { return this._byteStream || null; },
	  set byteStream(value) { this._byteStream = value; },
	  get systemId() { return this._systemId || null; },
	  set systemId(value) { this._systemId = value; },
	  get encoding() { return this._encoding || null; },
	  set encoding(value) { this._encoding = value; },
	};

	ls.LSProgressEvent = function LSProgressEvent() {};
	ls.LSProgressEvent.prototype = createFrom(events.Event, {
	  constructor: ls.LSProgressEvent,
	  get input() { return this._input; },
	  get position() { return this._position; },
	  get totalSize() { return this._totalSize; },
	});

	ls.LSLoadEvent = function LSLoadEvent() {};
	ls.LSLoadEvent.prototype = createFrom(events.Event, {
	  get newDocument() { return this._newDocument; },
	  get input() { return this._input; },
	});


	// TODO: do traversal
	ls.LSSerializerFilter = function LSSerializerFilter() {};
	ls.LSSerializerFilter.prototype = {
	  get whatToShow() { return this._whatToShow; },
	};

	// ls.LSSerializerFilter.prototype.__proto__ = level2.traversal.NodeFiler;

	// Export
	module.exports.dom = {
	  level3 : {
	    ls : ls 
	  }
	};



/***/ },
/* 647 */
/***/ function(module, exports, __webpack_require__) {

	var nwmatcher = __webpack_require__(648);
	var core = __webpack_require__(16).dom.level2.core;

	function addNwmatcher(document) {
	  if (!document._nwmatcher) {
	    document._nwmatcher = nwmatcher({ document: document });
	    document._nwmatcher.configure({ UNIQUE_ID: false });
	  }
	  return document._nwmatcher;
	}

	exports.applyQuerySelectorPrototype = function(dom) {
	  dom.Document.prototype.querySelector = core.memoizeQuery(function(selector) {
	    return addNwmatcher(this).first(selector, this);
	  });

	  dom.Document.prototype.querySelectorAll = core.memoizeQuery(function(selector) {
	    return new dom.NodeList(addNwmatcher(this).select(selector, this));
	  });

	  dom.DocumentFragment.prototype.querySelector = core.memoizeQuery(function(selector) {
	    return addNwmatcher(this.ownerDocument).first(selector, this);
	  });

	  dom.DocumentFragment.prototype.querySelectorAll = core.memoizeQuery(function(selector) {
	    return new dom.NodeList(addNwmatcher(this.ownerDocument).select(selector, this));
	  });

	  dom.Element.prototype.querySelector = core.memoizeQuery(function(selector) {
	    return addNwmatcher(this.ownerDocument).first(selector, this);
	  });

	  dom.Element.prototype.querySelectorAll = core.memoizeQuery(function(selector) {
	    return new dom.NodeList(addNwmatcher(this.ownerDocument).select(selector, this));
	  });

	  dom.Element.prototype.matchesSelector = core.memoizeQuery(function(selector) {
	    return addNwmatcher(this.ownerDocument).match(this, selector);
	  });
	};


/***/ },
/* 648 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(module) {/*
	 * Copyright (C) 2007-2015 Diego Perini
	 * All rights reserved.
	 *
	 * nwmatcher-noqsa.js - A fast CSS selector engine and matcher
	 *
	 * Author: Diego Perini <diego.perini at gmail com>
	 * Version: 1.3.6
	 * Created: 20070722
	 * Release: 20150710
	 *
	 * License:
	 *  http://javascript.nwbox.com/NWMatcher/MIT-LICENSE
	 * Download:
	 *  http://javascript.nwbox.com/NWMatcher/nwmatcher.js
	 */

	(function(global, factory) {

	  if (true) {
	    module.exports = function (browserGlobal) {
	      // passed global does not contain
	      // references to native objects
	      browserGlobal.console = console;
	      browserGlobal.parseInt = parseInt;
	      browserGlobal.Function = Function;
	      browserGlobal.Boolean = Boolean;
	      browserGlobal.Number = Number;
	      browserGlobal.RegExp = RegExp;
	      browserGlobal.String = String;
	      browserGlobal.Object = Object;
	      browserGlobal.Array = Array;
	      browserGlobal.Error = Error;
	      browserGlobal.Date = Date;
	      browserGlobal.Math = Math;
	      var exports = browserGlobal.Object();
	      factory(browserGlobal, exports);
	      return exports;
	    };
	    module.factory = factory;
	  } else {
	    factory(global,
	      (global.NW || (global.NW = global.Object())) &&
	      (global.NW.Dom || (global.NW.Dom = global.Object())));
	    global.NW.Dom.factory = factory;
	  }

	})(this, function(global, exports) {

	  var version = 'nwmatcher-1.3.6',

	  Dom = exports,

	  doc = global.document,
	  root = doc.documentElement,

	  isSingleMatch,
	  isSingleSelect,

	  lastSlice,
	  lastContext,
	  lastPosition,

	  lastMatcher,
	  lastSelector,

	  lastPartsMatch,
	  lastPartsSelect,

	  operators = '([~*^$|!]?={1})',
	  combinators = '[\\s]|[>+~][^>+~]',
	  pseudoparms = '(?:[-+]?\\d*n)?[-+]?\\d*',

	  quotedvalue = '"[^"\\\\]*(?:\\\\.[^"\\\\]*)*"' + "|'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'",
	  skipgroup = '\\[.*\\]|\\(.*\\)|\\{.*\\}',

	  encoding = '(?:[-\\w]|[^\\x00-\\xa0]|\\\\.)',
	  identifier = '(?:-?[_a-zA-Z]{1}[-\\w]*|[^\\x00-\\xa0]+|\\\\.+)+',

	  attrcheck = '(' + quotedvalue + '|' + identifier + ')',
	  attributes = '\\s*(' + encoding + '*:?' + encoding + '+)\\s*(?:' + operators + '\\s*' + attrcheck + ')?\\s*',

	  attrmatcher = attributes.replace(attrcheck, '([\\x22\\x27]*)((?:\\\\?.)*?)\\3'),

	  pseudoclass = '((?:' +
	    pseudoparms + '|' + quotedvalue + '|' +
	    '[#.:]?|' + encoding + '+|' +
	    '\\[' + attributes + '\\]|' +
	    '\\(.+\\)|\\s*|' +
	    ',)+)',

	  extensions = '.+',

	  standardValidator =
	    '(?=\\s*[^>+~(){}<>])' +
	    '(' +
	    '\\*' +
	    '|(?:[#.:]?' + identifier + ')' +
	    '|' + combinators +
	    '|\\[' + attributes + '\\]' +
	    '|\\(' + pseudoclass + '\\)' +
	    '|\\{' + extensions + '\\}' +
	    '|(?:,|\\s*)' +
	    ')+',

	  extendedValidator = standardValidator.replace(pseudoclass, '.*'),

	  reValidator = global.RegExp(standardValidator, 'g'),

	  reTrimSpaces = /^\s*|\s*$/g,

	  reSimpleNot = global.RegExp('^(' +
	    '(?!:not)' +
	    '([#.:]?' +
	    '|' + identifier +
	    '|\\([^()]*\\))+' +
	    '|\\[' + attributes + '\\]' +
	    ')$'),

	  reSplitGroup = /([^,\\()[\]]+|\[[^[\]]*\]|\[.*\]|\([^()]+\)|\(.*\)|\{[^{}]+\}|\{.*\}|\\.)+/g,

	  reSplitToken = global.RegExp('(' +
	    '\\[' + attributes + '\\]|' +
	    '\\(' + pseudoclass + '\\)|' +
	    '\\\\.|[^\\s>+~])+', 'g'),

	  reOptimizeSelector = global.RegExp(identifier + '|^$'),

	  QUIRKS_MODE,
	  XML_DOCUMENT,

	  GEBTN = 'getElementsByTagName' in doc,
	  GEBCN = 'getElementsByClassName' in doc,

	  LINK_NODES = global.Object({ a: 1, A: 1, area: 1, AREA: 1, link: 1, LINK: 1 }),

	  ATTR_BOOLEAN = global.Object({
	    checked: 1, disabled: 1, ismap: 1,
	    multiple: 1, readonly: 1, selected: 1
	  }),

	  ATTR_DEFAULT = global.Object({
	    value: 'defaultValue',
	    checked: 'defaultChecked',
	    selected: 'defaultSelected'
	  }),

	  ATTR_URIDATA = global.Object({
	    action: 2, cite: 2, codebase: 2, data: 2, href: 2,
	    longdesc: 2, lowsrc: 2, src: 2, usemap: 2
	  }),

	  Selectors = global.Object({
	  }),

	  Operators = global.Object({
	     '=': "n=='%m'",
	    '^=': "n.indexOf('%m')==0",
	    '*=': "n.indexOf('%m')>-1",
	    '|=': "(n+'-').indexOf('%m-')==0",
	    '~=': "(' '+n+' ').indexOf(' %m ')>-1",
	    '$=': "n.substr(n.length-'%m'.length)=='%m'"
	  }),

	  Optimize = global.Object({
	    ID: global.RegExp('^\\*?#(' + encoding + '+)|' + skipgroup),
	    TAG: global.RegExp('^(' + encoding + '+)|' + skipgroup),
	    CLASS: global.RegExp('^\\*?\\.(' + encoding + '+$)|' + skipgroup)
	  }),

	  Patterns = global.Object({
	    spseudos: /^\:(root|empty|(?:first|last|only)(?:-child|-of-type)|nth(?:-last)?(?:-child|-of-type)\(\s*(even|odd|(?:[-+]{0,1}\d*n\s*)?[-+]{0,1}\s*\d*)\s*\))?(.*)/i,
	    dpseudos: /^\:(link|visited|target|active|focus|hover|checked|disabled|enabled|selected|lang\(([-\w]{2,})\)|not\(([^()]*|.*)\))?(.*)/i,
	    attribute: global.RegExp('^\\[' + attrmatcher + '\\](.*)'),
	    children: /^\s*\>\s*(.*)/,
	    adjacent: /^\s*\+\s*(.*)/,
	    relative: /^\s*\~\s*(.*)/,
	    ancestor: /^\s+(.*)/,
	    universal: /^\*(.*)/,
	    id: global.RegExp('^#(' + encoding + '+)(.*)'),
	    tagName: global.RegExp('^(' + encoding + '+)(.*)'),
	    className: global.RegExp('^\\.(' + encoding + '+)(.*)')
	  }),

	  concatCall =
	    function(data, elements, callback) {
	      var i = -1, element;
	      while ((element = elements[++i])) {
	        if (false === callback(data[data.length] = element)) { break; }
	      }
	      return data;
	    },

	  switchContext =
	    function(from, force) {
	      var oldDoc = doc;
	      lastContext = from;
	      doc = from.ownerDocument || from;
	      if (force || oldDoc !== doc) {
	        root = doc.documentElement;
	        XML_DOCUMENT = doc.createElement('DiV').nodeName == 'DiV';
	        QUIRKS_MODE = !XML_DOCUMENT &&
	          typeof doc.compatMode == 'string' ?
	          doc.compatMode.indexOf('CSS') < 0 :
	          (function() {
	            var style = doc.createElement('div').style;
	            return style && (style.width = 1) && style.width == '1px';
	          })();

	        Config.CACHING && Dom.setCache(true, doc);
	      }
	    },

	  convertEscapes =
	    function(str) {
	      return str.replace(/\\([0-9a-fA-F]{1,6}\x20?|.)|([\x22\x27])/g, function(substring, p1, p2) {
	        var codePoint, highHex, highSurrogate, lowHex, lowSurrogate;

	        if (p2) {
	          return '\\' + p2;
	        }

	        if (/^[0-9a-fA-F]/.test(p1)) {
	          codePoint = parseInt(p1, 16);

	          if (codePoint < 0 || codePoint > 0x10ffff) {
	            return '\\ufffd';
	          }

	          if (codePoint <= 0xffff) {
	            lowHex = '000' + codePoint.toString(16);
	            return '\\u' + lowHex.substr(lowHex.length - 4);
	          }

	          codePoint -= 0x10000;
	          highSurrogate = (codePoint >> 10) + 0xd800;
	          lowSurrogate = (codePoint % 0x400) + 0xdc00;
	          highHex = '000' + highSurrogate.toString(16);
	          lowHex = '000' + lowSurrogate.toString(16);

	          return '\\u' + highHex.substr(highHex.length - 4) +
	            '\\u' + lowHex.substr(lowHex.length - 4);
	        }

	        if (/^[\\\x22\x27]/.test(p1)) {
	          return substring;
	        }

	        return p1;
	      });
	    },

	  byIdRaw =
	    function(id, elements) {
	      var i = -1, element = null;
	      while ((element = elements[++i])) {
	        if (element.getAttribute('id') == id) {
	          break;
	        }
	      }
	      return element;
	    },

	  _byId = !('fileSize' in doc) ?
	    function(id, from) {
	      id = id.replace(/\\([^\\]{1})/g, '$1');
	      return from.getElementById && from.getElementById(id) ||
	        byIdRaw(id, from.getElementsByTagName('*'));
	    } :
	    function(id, from) {
	      var element = null;
	      id = id.replace(/\\([^\\]{1})/g, '$1');
	      if (XML_DOCUMENT || from.nodeType != 9) {
	        return byIdRaw(id, from.getElementsByTagName('*'));
	      }
	      if ((element = from.getElementById(id)) &&
	        element.name == id && from.getElementsByName) {
	        return byIdRaw(id, from.getElementsByName(id));
	      }
	      return element;
	    },

	  byId =
	    function(id, from) {
	      from || (from = doc);
	      if (lastContext !== from) { switchContext(from); }
	      return _byId(id, from);
	    },

	  byTagRaw =
	    function(tag, from) {
	      var any = tag == '*', element = from, elements = global.Array(), next = element.firstChild;
	      any || (tag = tag.toUpperCase());
	      while ((element = next)) {
	        if (element.tagName > '@' && (any || element.tagName.toUpperCase() == tag)) {
	          elements[elements.length] = element;
	        }
	        if ((next = element.firstChild || element.nextSibling)) continue;
	        while (!next && (element = element.parentNode) && element !== from) {
	          next = element.nextSibling;
	        }
	      }
	      return elements;
	    },

	  contains = 'compareDocumentPosition' in root ?
	    function(container, element) {
	      return (container.compareDocumentPosition(element) & 16) == 16;
	    } : 'contains' in root ?
	    function(container, element) {
	      return element.nodeType == 1 && container.contains(element);
	    } :
	    function(container, element) {
	      while ((element = element.parentNode) && element.nodeType == 1) {
	        if (element === container) return true;
	      }
	      return false;
	    },

	  getAttribute =
	    function(node, attribute) {
	      attribute = attribute.toLowerCase();
	      if (typeof node[attribute] == 'object') {
	        return node.attributes[attribute] &&
	          node.attributes[attribute].value;
	      }
	      return (
	        attribute == 'type' ? node.getAttribute(attribute) :
	        ATTR_URIDATA[attribute] ? node.getAttribute(attribute, 2) :
	        ATTR_BOOLEAN[attribute] ? node.getAttribute(attribute) ? attribute : 'false' :
	          (node = node.getAttributeNode(attribute)) && node.value);
	    },

	  hasAttribute = root.hasAttribute ?
	    function(node, attribute) {
	      return node.hasAttribute(attribute);
	    } :
	    function(node, attribute) {
	      var obj = node.getAttributeNode(attribute = attribute.toLowerCase());
	      return ATTR_DEFAULT[attribute] && attribute != 'value' ?
	        node[ATTR_DEFAULT[attribute]] : obj && obj.specified;
	    },

	  isLink =
	    function(element) {
	      return element.getAttribute('href') && LINK_NODES[element.nodeName];
	    },

	  isEmpty =
	    function(node) {
	      node = node.firstChild;
	      while (node) {
	        if (node.nodeType == 3 || node.nodeName > '@') return false;
	        node = node.nextSibling;
	      }
	      return true;
	    },

	  nthElement =
	    function(element, last) {
	      var count = 1, succ = last ? 'nextSibling' : 'previousSibling';
	      while ((element = element[succ])) {
	        if (element.nodeName > '@') ++count;
	      }
	      return count;
	    },

	  nthOfType =
	    function(element, last) {
	      var count = 1, succ = last ? 'nextSibling' : 'previousSibling', type = element.nodeName;
	      while ((element = element[succ])) {
	        if (element.nodeName == type) ++count;
	      }
	      return count;
	    },

	  configure =
	    function(option) {
	      if (typeof option == 'string') { return Config[option] || Config; }
	      if (typeof option != 'object') { return false; }
	      for (var i in option) {
	        Config[i] = !!option[i];
	        if (i == 'SIMPLENOT') {
	          matchContexts = global.Object();
	          matchResolvers = global.Object();
	          selectContexts = global.Object();
	          selectResolvers = global.Object();
	        }
	      }
	      reValidator = global.RegExp(Config.SIMPLENOT ?
	        standardValidator : extendedValidator, 'g');
	      return true;
	    },

	  emit =
	    function(message) {
	      if (Config.VERBOSITY) { throw global.Error(message); }
	      if (global.console && global.console.log) {
	        global.console.log(message);
	      }
	    },

	  Config = global.Object({
	    CACHING: false,
	    SIMPLENOT: true,
	    UNIQUE_ID: true,
	    USE_HTML5: true,
	    VERBOSITY: true
	  }),

	  IE_LT_9 = typeof doc.addEventListener != 'function',

	  INSENSITIVE_MAP = global.Object({
	    href: 1, lang: 1, src: 1, style: 1, title: 1,
	    type: 1, xmlns: 1, 'xml:lang': 1, 'xml:space': 1
	  }),

	  TO_UPPER_CASE = IE_LT_9 ? '.toUpperCase()' : '',

	  ACCEPT_NODE = 'r[r.length]=c[k];if(f&&false===f(c[k]))break main;else continue main;',
	  REJECT_NODE = IE_LT_9 ? 'if(e.nodeName<"A")continue;' : '',

	  compile =
	    function(selector, source, mode) {

	      var parts = typeof selector == 'string' ? selector.match(reSplitGroup) : selector;

	      typeof source == 'string' || (source = '');

	      if (parts.length == 1) {
	        source += compileSelector(parts[0], mode ? ACCEPT_NODE : 'f&&f(k);return true;', mode);
	      } else {
	        var i = -1, seen = global.Object(), token;
	        while ((token = parts[++i])) {
	          token = token.replace(reTrimSpaces, '');
	          if (!seen[token] && (seen[token] = true)) {
	            source += compileSelector(token, mode ? ACCEPT_NODE : 'f&&f(k);return true;', mode);
	          }
	        }
	      }

	      if (mode) {
	        return global.Function('c,s,r,d,h,g,f,v',
	          'var N,n,x=0,k=-1,e;main:while((e=c[++k])){' + source + '}return r;');
	      } else {
	        return global.Function('e,s,r,d,h,g,f,v',
	          'var N,n,x=0,k=e;' + source + 'return false;');
	      }
	    },

	  FILTER =
	    'var z=v[@]||(v[@]=[]),l=z.length-1;' +
	    'while(l>=0&&z[l]!==e)--l;' +
	    'if(l!==-1){break;}' +
	    'z[z.length]=e;',

	  compileSelector =
	    function(selector, source, mode) {

	      var a, b, n, k = 0, expr, match, name, result, status, test, type;

	      while (selector) {

	        k++;

	        if ((match = selector.match(Patterns.universal))) {
	          expr = '';
	        }

	        else if ((match = selector.match(Patterns.id))) {
	          source = 'if(' + (XML_DOCUMENT ?
	            's.getAttribute(e,"id")' :
	            '(e.submit?s.getAttribute(e,"id"):e.id)') +
	            '=="' + match[1] + '"' +
	            '){' + source + '}';
	        }

	        else if ((match = selector.match(Patterns.tagName))) {
	          source = 'if(e.nodeName' + (XML_DOCUMENT ?
	            '=="' + match[1] + '"' : TO_UPPER_CASE +
	            '=="' + match[1].toUpperCase() + '"') +
	            '){' + source + '}';
	        }

	        else if ((match = selector.match(Patterns.className))) {
	          source = 'if((n=' + (XML_DOCUMENT ?
	            'e.getAttribute("class")' : 'e.className') +
	            ')&&n.length&&(" "+' + (QUIRKS_MODE ? 'n.toLowerCase()' : 'n') +
	            '.replace(/\\s+/g," ")+" ").indexOf(" ' +
	            (QUIRKS_MODE ? match[1].toLowerCase() : match[1]) + ' ")>-1' +
	            '){' + source + '}';
	        }

	        else if ((match = selector.match(Patterns.attribute))) {
	          if (match[2] && !Operators[match[2]]) {
	            emit('Unsupported operator in attribute selectors "' + selector + '"');
	            return '';
	          }
	          test = 'false';
	          if (match[2] && match[4] && (test = Operators[match[2]])) {
	            match[4] = convertEscapes(match[4]);
	            type = INSENSITIVE_MAP[match[1].toLowerCase()];
	            test = test.replace(/\%m/g, type ? match[4].toLowerCase() : match[4]);
	          } else if (match[2] == '!=' || match[2] == '=') {
	            test = 'n' + match[2] + '=""';
	          }
	          source = 'if(n=s.hasAttribute(e,"' + match[1] + '")){' +
	            (match[2] ? 'n=s.getAttribute(e,"' + match[1] + '")' : '') +
	            (type && match[2] ? '.toLowerCase();' : ';') +
	            'if(' + (match[2] ? test : 'n') + '){' + source + '}}';
	        }

	        else if ((match = selector.match(Patterns.adjacent))) {
	          source = (mode ? '' : FILTER.replace(/@/g, k)) + source;
	          source = 'var N' + k + '=e;while(e&&(e=e.previousSibling)){if(e.nodeName>"@"){' + source + 'break;}}e=N' + k + ';';
	        }

	        else if ((match = selector.match(Patterns.relative))) {
	          source = (mode ? '' : FILTER.replace(/@/g, k)) + source;
	          source = 'var N' + k + '=e;e=e.parentNode.firstChild;while(e&&e!==N' + k + '){if(e.nodeName>"@"){' + source + '}e=e.nextSibling;}e=N' + k + ';';
	        }

	        else if ((match = selector.match(Patterns.children))) {
	          source = (mode ? '' : FILTER.replace(/@/g, k)) + source;
	          source = 'var N' + k + '=e;while(e&&e!==h&&e!==g&&(e=e.parentNode)){' + source + 'break;}e=N' + k + ';';
	        }

	        else if ((match = selector.match(Patterns.ancestor))) {
	          source = (mode ? '' : FILTER.replace(/@/g, k)) + source;
	          source = 'var N' + k + '=e;while(e&&e!==h&&e!==g&&(e=e.parentNode)){' + source + '}e=N' + k + ';';
	        }

	        else if ((match = selector.match(Patterns.spseudos)) && match[1]) {
	          switch (match[1]) {
	            case 'root':
	              if (match[3]) {
	                source = 'if(e===h||s.contains(h,e)){' + source + '}';
	              } else {
	                source = 'if(e===h){' + source + '}';
	              }
	              break;
	            case 'empty':
	              source = 'if(s.isEmpty(e)){' + source + '}';
	              break;
	            default:
	              if (match[1] && match[2]) {
	                if (match[2] == 'n') {
	                  source = 'if(e!==h){' + source + '}';
	                  break;
	                } else if (match[2] == 'even') {
	                  a = 2;
	                  b = 0;
	                } else if (match[2] == 'odd') {
	                  a = 2;
	                  b = 1;
	                } else {
	                  b = ((n = match[2].match(/(-?\d+)$/)) ? global.parseInt(n[1], 10) : 0);
	                  a = ((n = match[2].match(/(-?\d*)n/i)) ? global.parseInt(n[1], 10) : 0);
	                  if (n && n[1] == '-') a = -1;
	                }
	                test = a > 1 ?
	                  (/last/i.test(match[1])) ? '(n-(' + b + '))%' + a + '==0' :
	                  'n>=' + b + '&&(n-(' + b + '))%' + a + '==0' : a < -1 ?
	                  (/last/i.test(match[1])) ? '(n-(' + b + '))%' + a + '==0' :
	                  'n<=' + b + '&&(n-(' + b + '))%' + a + '==0' : a === 0 ?
	                  'n==' + b : a == -1 ? 'n<=' + b : 'n>=' + b;
	                source =
	                  'if(e!==h){' +
	                    'n=s[' + (/-of-type/i.test(match[1]) ? '"nthOfType"' : '"nthElement"') + ']' +
	                      '(e,' + (/last/i.test(match[1]) ? 'true' : 'false') + ');' +
	                    'if(' + test + '){' + source + '}' +
	                  '}';
	              } else {
	                a = /first/i.test(match[1]) ? 'previous' : 'next';
	                n = /only/i.test(match[1]) ? 'previous' : 'next';
	                b = /first|last/i.test(match[1]);
	                type = /-of-type/i.test(match[1]) ? '&&n.nodeName!=e.nodeName' : '&&n.nodeName<"@"';
	                source = 'if(e!==h){' +
	                  ( 'n=e;while((n=n.' + a + 'Sibling)' + type + ');if(!n){' + (b ? source :
	                    'n=e;while((n=n.' + n + 'Sibling)' + type + ');if(!n){' + source + '}') + '}' ) + '}';
	              }
	              break;
	          }
	        }

	        else if ((match = selector.match(Patterns.dpseudos)) && match[1]) {
	          switch (match[1].match(/^\w+/)[0]) {
	            case 'not':
	              expr = match[3].replace(reTrimSpaces, '');
	              if (Config.SIMPLENOT && !reSimpleNot.test(expr)) {
	                emit('Negation pseudo-class only accepts simple selectors "' + match.join('') + '"');
	                return '';
	              } else {
	                if ('compatMode' in doc) {
	                  source = 'if(!' + compile(expr, '', false) + '(e,s,r,d,h,g)){' + source + '}';
	                } else {
	                  source = 'if(!s.match(e, "' + expr.replace(/\x22/g, '\\"') + '",g)){' + source +'}';
	                }
	              }
	              break;
	            case 'checked':
	              source = 'if((typeof e.form!=="undefined"&&(/^(?:radio|checkbox)$/i).test(e.type)&&e.checked)' +
	                (Config.USE_HTML5 ? '||(/^option$/i.test(e.nodeName)&&(e.selected||e.checked))' : '') +
	                '){' + source + '}';
	              break;
	            case 'disabled':
	              source = 'if(((typeof e.form!=="undefined"' +
	                (Config.USE_HTML5 ? '' : '&&!(/^hidden$/i).test(e.type)') +
	                ')||s.isLink(e))&&e.disabled===true){' + source + '}';
	              break;
	            case 'enabled':
	              source = 'if(((typeof e.form!=="undefined"' +
	                (Config.USE_HTML5 ? '' : '&&!(/^hidden$/i).test(e.type)') +
	                ')||s.isLink(e))&&e.disabled===false){' + source + '}';
	              break;
	            case 'lang':
	              test = '';
	              if (match[2]) test = match[2].substr(0, 2) + '-';
	              source = 'do{(n=e.lang||"").toLowerCase();' +
	                'if((n==""&&h.lang=="' + match[2].toLowerCase() + '")||' +
	                '(n&&(n=="' + match[2].toLowerCase() +
	                '"||n.substr(0,3)=="' + test.toLowerCase() + '")))' +
	                '{' + source + 'break;}}while((e=e.parentNode)&&e!==g);';
	              break;
	            case 'target':
	              source = 'if(e.id==d.location.hash.slice(1)){' + source + '}';
	              break;
	            case 'link':
	              source = 'if(s.isLink(e)&&!e.visited){' + source + '}';
	              break;
	            case 'visited':
	              source = 'if(s.isLink(e)&&e.visited){' + source + '}';
	              break;
	            case 'active':
	              source = 'if(e===d.activeElement){' + source + '}';
	              break;
	            case 'hover':
	              source = 'if(e===d.hoverElement){' + source + '}';
	              break;
	            case 'focus':
	              source = 'hasFocus' in doc ?
	                'if(e===d.activeElement&&d.hasFocus()&&(e.type||e.href||typeof e.tabIndex=="number")){' + source + '}' :
	                'if(e===d.activeElement&&(e.type||e.href)){' + source + '}';
	              break;
	            case 'selected':
	              source = 'if(/^option$/i.test(e.nodeName)&&(e.selected||e.checked)){' + source + '}';
	              break;
	            default:
	              break;
	          }
	        }

	        else {

	          expr = false;
	          status = false;
	          for (expr in Selectors) {
	            if ((match = selector.match(Selectors[expr].Expression)) && match[1]) {
	              result = Selectors[expr].Callback(match, source);
	              source = result.source;
	              status = result.status;
	              if (status) { break; }
	            }
	          }

	          if (!status) {
	            emit('Unknown pseudo-class selector "' + selector + '"');
	            return '';
	          }

	          if (!expr) {
	            emit('Unknown token in selector "' + selector + '"');
	            return '';
	          }

	        }

	        if (!match) {
	          emit('Invalid syntax in selector "' + selector + '"');
	          return '';
	        }

	        selector = match && match[match.length - 1];
	      }

	      return source;
	    },

	  match =
	    function(element, selector, from, callback) {

	      var parts;

	      if (!(element && element.nodeType == 1)) {
	        emit('Invalid element argument');
	        return false;
	      } else if (typeof selector != 'string') {
	        emit('Invalid selector argument');
	        return false;
	      } else if (lastContext !== from) {
	        switchContext(from || (from = element.ownerDocument));
	      }

	      selector = selector.replace(reTrimSpaces, '');

	      Config.SHORTCUTS && (selector = Dom.shortcuts(selector, element, from));

	      if (lastMatcher != selector) {
	        if ((parts = selector.match(reValidator)) && parts[0] == selector) {
	          isSingleMatch = (parts = selector.match(reSplitGroup)).length < 2;
	          lastMatcher = selector;
	          lastPartsMatch = parts;
	        } else {
	          emit('The string "' + selector + '", is not a valid CSS selector');
	          return false;
	        }
	      } else parts = lastPartsMatch;

	      if (!matchResolvers[selector] || matchContexts[selector] !== from) {
	        matchResolvers[selector] = compile(isSingleMatch ? [selector] : parts, '', false);
	        matchContexts[selector] = from;
	      }

	      return matchResolvers[selector](element, Snapshot, [ ], doc, root, from, callback, { });
	    },

	  first =
	    function(selector, from) {
	      return select(selector, from, function() { return false; })[0] || null;
	    },

	  select =
	    function(selector, from, callback) {

	      var i, changed, element, elements, parts, token, original = selector;

	      if (arguments.length === 0) {
	        emit('Not enough arguments');
	        return [ ];
	      } else if (typeof selector != 'string') {
	        return [ ];
	      } else if (from && !(/1|9|11/).test(from.nodeType)) {
	        emit('Invalid or illegal context element');
	        return [ ];
	      } else if (lastContext !== from) {
	        switchContext(from || (from = doc));
	      }

	      if (Config.CACHING && (elements = Dom.loadResults(original, from, doc, root))) {
	        return callback ? concatCall([ ], elements, callback) : elements;
	      }

	      selector = selector.replace(reTrimSpaces, '');

	      Config.SHORTCUTS && (selector = Dom.shortcuts(selector, from));

	      if ((changed = lastSelector != selector)) {
	        if ((parts = selector.match(reValidator)) && parts[0] == selector) {
	          isSingleSelect = (parts = selector.match(reSplitGroup)).length < 2;
	          lastSelector = selector;
	          lastPartsSelect = parts;
	        } else {
	          emit('The string "' + selector + '", is not a valid CSS selector');
	          return [ ];
	        }
	      } else parts = lastPartsSelect;

	      if (from.nodeType == 11) {

	        elements = byTagRaw('*', from);

	      } else if (isSingleSelect) {

	        if (changed) {
	          parts = selector.match(reSplitToken);
	          token = parts[parts.length - 1];
	          lastSlice = token.split(':not')[0];
	          lastPosition = selector.length - token.length;
	        }

	        if (Config.UNIQUE_ID && (parts = lastSlice.match(Optimize.ID)) && (token = parts[1])) {
	          if ((element = _byId(token, from))) {
	            if (match(element, selector)) {
	              callback && callback(element);
	              elements = global.Array(element);
	            } else elements = global.Array();
	          }
	        }

	        else if (Config.UNIQUE_ID && (parts = selector.match(Optimize.ID)) && (token = parts[1])) {
	          if ((element = _byId(token, doc))) {
	            if ('#' + token == selector) {
	              callback && callback(element);
	              elements = global.Array(element);
	            } else if (/[>+~]/.test(selector)) {
	              from = element.parentNode;
	            } else {
	              from = element;
	            }
	          } else elements = global.Array();
	        }

	        if (elements) {
	          Config.CACHING && Dom.saveResults(original, from, doc, elements);
	          return elements;
	        }

	        if (!XML_DOCUMENT && GEBTN && (parts = lastSlice.match(Optimize.TAG)) && (token = parts[1])) {
	          if ((elements = from.getElementsByTagName(token)).length === 0) { return [ ]; }
	          selector = selector.slice(0, lastPosition) + selector.slice(lastPosition).replace(token, '*');
	        }

	        else if (!XML_DOCUMENT && GEBCN && (parts = lastSlice.match(Optimize.CLASS)) && (token = parts[1])) {
	          if ((elements = from.getElementsByClassName(token.replace(/\\([^\\]{1})/g, '$1'))).length === 0) { return [ ]; }
	            selector = selector.slice(0, lastPosition) + selector.slice(lastPosition).replace('.' + token,
	              reOptimizeSelector.test(selector.charAt(selector.indexOf(token) - 1)) ? '' : '*');
	        }

	      }

	      if (!elements) {
	        if (IE_LT_9) {
	          elements = /^(?:applet|object)$/i.test(from.nodeName) ? from.childNodes : from.all;
	        } else {
	          elements = from.getElementsByTagName('*');
	        }
	      }

	      if (!selectResolvers[selector] || selectContexts[selector] !== from) {
	        selectResolvers[selector] = compile(isSingleSelect ? [selector] : parts, REJECT_NODE, true);
	        selectContexts[selector] = from;
	      }

	      elements = selectResolvers[selector](elements, Snapshot, [ ], doc, root, from, callback, { });

	      Config.CACHING && Dom.saveResults(original, from, doc, elements);

	      return elements;
	    },

	  FN = function(x) { return x; },

	  matchContexts = global.Object(),
	  matchResolvers = global.Object(),

	  selectContexts = global.Object(),
	  selectResolvers = global.Object(),

	  Snapshot = global.Object({
	    byId: _byId,
	    match: match,
	    select: select,
	    isLink: isLink,
	    isEmpty: isEmpty,
	    contains: contains,
	    nthOfType: nthOfType,
	    nthElement: nthElement,
	    getAttribute: getAttribute,
	    hasAttribute: hasAttribute
	  });

	  Dom.ACCEPT_NODE = ACCEPT_NODE;

	  Dom.byId = byId;
	  Dom.match = match;
	  Dom.first = first;
	  Dom.select = select;
	  Dom.compile = compile;
	  Dom.contains = contains;
	  Dom.configure = configure;
	  Dom.getAttribute = getAttribute;
	  Dom.hasAttribute = hasAttribute;

	  Dom.setCache = FN;
	  Dom.shortcuts = FN;
	  Dom.loadResults = FN;
	  Dom.saveResults = FN;

	  Dom.emit = emit;
	  Dom.Config = Config;
	  Dom.Snapshot = Snapshot;

	  Dom.Operators = Operators;
	  Dom.Selectors = Selectors;

	  Dom.Version = version;

	  Dom.registerOperator =
	    function(symbol, resolver) {
	      Operators[symbol] || (Operators[symbol] = resolver);
	    };

	  Dom.registerSelector =
	    function(name, rexp, func) {
	      Selectors[name] || (Selectors[name] = global.Object({
	        Expression: rexp,
	        Callback: func
	      }));
	    };

	  switchContext(doc, true);

	});

	/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(10)(module)))

/***/ },
/* 649 */
/***/ function(module, exports, __webpack_require__) {

	function DOMParser(options){
		this.options = options ||{locator:{}};
		
	}
	DOMParser.prototype.parseFromString = function(source,mimeType){	
		var options = this.options;
		var sax =  new XMLReader();
		var domBuilder = options.domBuilder || new DOMHandler();//contentHandler and LexicalHandler
		var errorHandler = options.errorHandler;
		var locator = options.locator;
		var defaultNSMap = options.xmlns||{};
		var entityMap = {'lt':'<','gt':'>','amp':'&','quot':'"','apos':"'"}
		if(locator){
			domBuilder.setDocumentLocator(locator)
		}
		
		sax.errorHandler = buildErrorHandler(errorHandler,domBuilder,locator);
		sax.domBuilder = options.domBuilder || domBuilder;
		if(/\/x?html?$/.test(mimeType)){
			entityMap.nbsp = '\xa0';
			entityMap.copy = '\xa9';
			defaultNSMap['']= 'http://www.w3.org/1999/xhtml';
		}
		if(source){
			sax.parse(source,defaultNSMap,entityMap);
		}else{
			sax.errorHandler.error("invalid document source");
		}
		return domBuilder.document;
	}
	function buildErrorHandler(errorImpl,domBuilder,locator){
		if(!errorImpl){
			if(domBuilder instanceof DOMHandler){
				return domBuilder;
			}
			errorImpl = domBuilder ;
		}
		var errorHandler = {}
		var isCallback = errorImpl instanceof Function;
		locator = locator||{}
		function build(key){
			var fn = errorImpl[key];
			if(!fn){
				if(isCallback){
					fn = errorImpl.length == 2?function(msg){errorImpl(key,msg)}:errorImpl;
				}else{
					var i=arguments.length;
					while(--i){
						if(fn = errorImpl[arguments[i]]){
							break;
						}
					}
				}
			}
			errorHandler[key] = fn && function(msg){
				fn(msg+_locator(locator));
			}||function(){};
		}
		build('warning','warn');
		build('error','warn','warning');
		build('fatalError','warn','warning','error');
		return errorHandler;
	}
	/**
	 * +ContentHandler+ErrorHandler
	 * +LexicalHandler+EntityResolver2
	 * -DeclHandler-DTDHandler 
	 * 
	 * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler
	 * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2
	 * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html
	 */
	function DOMHandler() {
	    this.cdata = false;
	}
	function position(locator,node){
		node.lineNumber = locator.lineNumber;
		node.columnNumber = locator.columnNumber;
	}
	/**
	 * @see org.xml.sax.ContentHandler#startDocument
	 * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html
	 */ 
	DOMHandler.prototype = {
		startDocument : function() {
	    	this.document = new DOMImplementation().createDocument(null, null, null);
	    	if (this.locator) {
	        	this.document.documentURI = this.locator.systemId;
	    	}
		},
		startElement:function(namespaceURI, localName, qName, attrs) {
			var doc = this.document;
		    var el = doc.createElementNS(namespaceURI, qName||localName);
		    var len = attrs.length;
		    appendElement(this, el);
		    this.currentElement = el;
		    
			this.locator && position(this.locator,el)
		    for (var i = 0 ; i < len; i++) {
		        var namespaceURI = attrs.getURI(i);
		        var value = attrs.getValue(i);
		        var qName = attrs.getQName(i);
				var attr = doc.createAttributeNS(namespaceURI, qName);
				if( attr.getOffset){
					position(attr.getOffset(1),attr)
				}
				attr.value = attr.nodeValue = value;
				el.setAttributeNode(attr)
		    }
		},
		endElement:function(namespaceURI, localName, qName) {
			var current = this.currentElement
		    var tagName = current.tagName;
		    this.currentElement = current.parentNode;
		},
		startPrefixMapping:function(prefix, uri) {
		},
		endPrefixMapping:function(prefix) {
		},
		processingInstruction:function(target, data) {
		    var ins = this.document.createProcessingInstruction(target, data);
		    this.locator && position(this.locator,ins)
		    appendElement(this, ins);
		},
		ignorableWhitespace:function(ch, start, length) {
		},
		characters:function(chars, start, length) {
			chars = _toString.apply(this,arguments)
			//console.log(chars)
			if(this.currentElement && chars){
				if (this.cdata) {
					var charNode = this.document.createCDATASection(chars);
					this.currentElement.appendChild(charNode);
				} else {
					var charNode = this.document.createTextNode(chars);
					this.currentElement.appendChild(charNode);
				}
				this.locator && position(this.locator,charNode)
			}
		},
		skippedEntity:function(name) {
		},
		endDocument:function() {
			this.document.normalize();
		},
		setDocumentLocator:function (locator) {
		    if(this.locator = locator){// && !('lineNumber' in locator)){
		    	locator.lineNumber = 0;
		    }
		},
		//LexicalHandler
		comment:function(chars, start, length) {
			chars = _toString.apply(this,arguments)
		    var comm = this.document.createComment(chars);
		    this.locator && position(this.locator,comm)
		    appendElement(this, comm);
		},
		
		startCDATA:function() {
		    //used in characters() methods
		    this.cdata = true;
		},
		endCDATA:function() {
		    this.cdata = false;
		},
		
		startDTD:function(name, publicId, systemId) {
			var impl = this.document.implementation;
		    if (impl && impl.createDocumentType) {
		        var dt = impl.createDocumentType(name, publicId, systemId);
		        this.locator && position(this.locator,dt)
		        appendElement(this, dt);
		    }
		},
		/**
		 * @see org.xml.sax.ErrorHandler
		 * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html
		 */
		warning:function(error) {
			console.warn(error,_locator(this.locator));
		},
		error:function(error) {
			console.error(error,_locator(this.locator));
		},
		fatalError:function(error) {
			console.error(error,_locator(this.locator));
		    throw error;
		}
	}
	function _locator(l){
		if(l){
			return '\n@'+(l.systemId ||'')+'#[line:'+l.lineNumber+',col:'+l.columnNumber+']'
		}
	}
	function _toString(chars,start,length){
		if(typeof chars == 'string'){
			return chars.substr(start,length)
		}else{//java sax connect width xmldom on rhino(what about: "? && !(chars instanceof String)")
			if(chars.length >= start+length || start){
				return new java.lang.String(chars,start,length)+'';
			}
			return chars;
		}
	}

	/*
	 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html
	 * used method of org.xml.sax.ext.LexicalHandler:
	 *  #comment(chars, start, length)
	 *  #startCDATA()
	 *  #endCDATA()
	 *  #startDTD(name, publicId, systemId)
	 *
	 *
	 * IGNORED method of org.xml.sax.ext.LexicalHandler:
	 *  #endDTD()
	 *  #startEntity(name)
	 *  #endEntity(name)
	 *
	 *
	 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html
	 * IGNORED method of org.xml.sax.ext.DeclHandler
	 * 	#attributeDecl(eName, aName, type, mode, value)
	 *  #elementDecl(name, model)
	 *  #externalEntityDecl(name, publicId, systemId)
	 *  #internalEntityDecl(name, value)
	 * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html
	 * IGNORED method of org.xml.sax.EntityResolver2
	 *  #resolveEntity(String name,String publicId,String baseURI,String systemId)
	 *  #resolveEntity(publicId, systemId)
	 *  #getExternalSubset(name, baseURI)
	 * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html
	 * IGNORED method of org.xml.sax.DTDHandler
	 *  #notationDecl(name, publicId, systemId) {};
	 *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};
	 */
	"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g,function(key){
		DOMHandler.prototype[key] = function(){return null}
	})

	/* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */
	function appendElement (hander,node) {
	    if (!hander.currentElement) {
	        hander.document.appendChild(node);
	    } else {
	        hander.currentElement.appendChild(node);
	    }
	}//appendChild and setAttributeNS are preformance key

	if(true){
		var XMLReader = __webpack_require__(650).XMLReader;
		var DOMImplementation = exports.DOMImplementation = __webpack_require__(651).DOMImplementation;
		exports.XMLSerializer = __webpack_require__(651).XMLSerializer ;
		exports.DOMParser = DOMParser;
	}


/***/ },
/* 650 */
/***/ function(module, exports, __webpack_require__) {

	//[4]   	NameStartChar	   ::=   	":" | [A-Z] | "_" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]
	//[4a]   	NameChar	   ::=   	NameStartChar | "-" | "." | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]
	//[5]   	Name	   ::=   	NameStartChar (NameChar)*
	var nameStartChar = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]///\u10000-\uEFFFF
	var nameChar = new RegExp("[\\-\\.0-9"+nameStartChar.source.slice(1,-1)+"\u00B7\u0300-\u036F\\ux203F-\u2040]");
	var tagNamePattern = new RegExp('^'+nameStartChar.source+nameChar.source+'*(?:\:'+nameStartChar.source+nameChar.source+'*)?$');
	//var tagNamePattern = /^[a-zA-Z_][\w\-\.]*(?:\:[a-zA-Z_][\w\-\.]*)?$/
	//var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')

	//S_TAG,	S_ATTR,	S_EQ,	S_V
	//S_ATTR_S,	S_E,	S_S,	S_C
	var S_TAG = 0;//tag name offerring
	var S_ATTR = 1;//attr name offerring 
	var S_ATTR_S=2;//attr name end and space offer
	var S_EQ = 3;//=space?
	var S_V = 4;//attr value(no quot value only)
	var S_E = 5;//attr value end and no space(quot end)
	var S_S = 6;//(attr value end || tag end ) && (space offer)
	var S_C = 7;//closed el<el />

	function XMLReader(){
		
	}

	XMLReader.prototype = {
		parse:function(source,defaultNSMap,entityMap){
			var domBuilder = this.domBuilder;
			domBuilder.startDocument();
			_copy(defaultNSMap ,defaultNSMap = {})
			parse(source,defaultNSMap,entityMap,
					domBuilder,this.errorHandler);
			domBuilder.endDocument();
		}
	}
	function parse(source,defaultNSMapCopy,entityMap,domBuilder,errorHandler){
	  function fixedFromCharCode(code) {
			// String.prototype.fromCharCode does not supports
			// > 2 bytes unicode chars directly
			if (code > 0xffff) {
				code -= 0x10000;
				var surrogate1 = 0xd800 + (code >> 10)
					, surrogate2 = 0xdc00 + (code & 0x3ff);

				return String.fromCharCode(surrogate1, surrogate2);
			} else {
				return String.fromCharCode(code);
			}
		}
		function entityReplacer(a){
			var k = a.slice(1,-1);
			if(k in entityMap){
				return entityMap[k]; 
			}else if(k.charAt(0) === '#'){
				return fixedFromCharCode(parseInt(k.substr(1).replace('x','0x')))
			}else{
				errorHandler.error('entity not found:'+a);
				return a;
			}
		}
		function appendText(end){//has some bugs
			var xt = source.substring(start,end).replace(/&#?\w+;/g,entityReplacer);
			locator&&position(start);
			domBuilder.characters(xt,0,end-start);
			start = end
		}
		function position(start,m){
			while(start>=endPos && (m = linePattern.exec(source))){
				startPos = m.index;
				endPos = startPos + m[0].length;
				locator.lineNumber++;
				//console.log('line++:',locator,startPos,endPos)
			}
			locator.columnNumber = start-startPos+1;
		}
		var startPos = 0;
		var endPos = 0;
		var linePattern = /.+(?:\r\n?|\n)|.*$/g
		var locator = domBuilder.locator;
		
		var parseStack = [{currentNSMap:defaultNSMapCopy}]
		var closeMap = {};
		var start = 0;
		while(true){
			var i = source.indexOf('<',start);
			if(i<0){
				if(!source.substr(start).match(/^\s*$/)){
					var doc = domBuilder.document;
	    			var text = doc.createTextNode(source.substr(start));
	    			doc.appendChild(text);
	    			domBuilder.currentElement = text;
				}
				return;
			}
			if(i>start){
				appendText(i);
			}
			switch(source.charAt(i+1)){
			case '/':
				var end = source.indexOf('>',i+3);
				var tagName = source.substring(i+2,end);
				var config = parseStack.pop();
				var localNSMap = config.localNSMap;
				
		        if(config.tagName != tagName){
		            errorHandler.fatalError("end tag name: "+tagName+' is not match the current start tagName:'+config.tagName );
		        }
				domBuilder.endElement(config.uri,config.localName,tagName);
				if(localNSMap){
					for(var prefix in localNSMap){
						domBuilder.endPrefixMapping(prefix) ;
					}
				}
				end++;
				break;
				// end elment
			case '?':// <?...?>
				locator&&position(i);
				end = parseInstruction(source,i,domBuilder);
				break;
			case '!':// <!doctype,<![CDATA,<!--
				locator&&position(i);
				end = parseDCC(source,i,domBuilder,errorHandler);
				break;
			default:
				try{
					locator&&position(i);
					
					var el = new ElementAttributes();
					
					//elStartEnd
					var end = parseElementStartPart(source,i,el,entityReplacer,errorHandler);
					var len = el.length;
					//position fixed
					if(len && locator){
						var backup = copyLocator(locator,{});
						for(var i = 0;i<len;i++){
							var a = el[i];
							position(a.offset);
							a.offset = copyLocator(locator,{});
						}
						copyLocator(backup,locator);
					}
					if(!el.closed && fixSelfClosed(source,end,el.tagName,closeMap)){
						el.closed = true;
						if(!entityMap.nbsp){
							errorHandler.warning('unclosed xml attribute');
						}
					}
					appendElement(el,domBuilder,parseStack);
					
					
					if(el.uri === 'http://www.w3.org/1999/xhtml' && !el.closed){
						end = parseHtmlSpecialContent(source,end,el.tagName,entityReplacer,domBuilder)
					}else{
						end++;
					}
				}catch(e){
					errorHandler.error('element parse error: '+e);
					end = -1;
				}

			}
			if(end<0){
				//TODO: 这里有可能sax回退，有位置错误风险
				appendText(i+1);
			}else{
				start = end;
			}
		}
	}
	function copyLocator(f,t){
		t.lineNumber = f.lineNumber;
		t.columnNumber = f.columnNumber;
		return t;
		
	}

	/**
	 * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);
	 * @return end of the elementStartPart(end of elementEndPart for selfClosed el)
	 */
	function parseElementStartPart(source,start,el,entityReplacer,errorHandler){
		var attrName;
		var value;
		var p = ++start;
		var s = S_TAG;//status
		while(true){
			var c = source.charAt(p);
			switch(c){
			case '=':
				if(s === S_ATTR){//attrName
					attrName = source.slice(start,p);
					s = S_EQ;
				}else if(s === S_ATTR_S){
					s = S_EQ;
				}else{
					//fatalError: equal must after attrName or space after attrName
					throw new Error('attribute equal must after attrName');
				}
				break;
			case '\'':
			case '"':
				if(s === S_EQ){//equal
					start = p+1;
					p = source.indexOf(c,start)
					if(p>0){
						value = source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
						el.add(attrName,value,start-1);
						s = S_E;
					}else{
						//fatalError: no end quot match
						throw new Error('attribute value no end \''+c+'\' match');
					}
				}else if(s == S_V){
					value = source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
					//console.log(attrName,value,start,p)
					el.add(attrName,value,start);
					//console.dir(el)
					errorHandler.warning('attribute "'+attrName+'" missed start quot('+c+')!!');
					start = p+1;
					s = S_E
				}else{
					//fatalError: no equal before
					throw new Error('attribute value must after "="');
				}
				break;
			case '/':
				switch(s){
				case S_TAG:
					el.setTagName(source.slice(start,p));
				case S_E:
				case S_S:
				case S_C:
					s = S_C;
					el.closed = true;
				case S_V:
				case S_ATTR:
				case S_ATTR_S:
					break;
				//case S_EQ:
				default:
					throw new Error("attribute invalid close char('/')")
				}
				break;
			case ''://end document
				//throw new Error('unexpected end of input')
				errorHandler.error('unexpected end of input');
			case '>':
				switch(s){
				case S_TAG:
					el.setTagName(source.slice(start,p));
				case S_E:
				case S_S:
				case S_C:
					break;//normal
				case S_V://Compatible state
				case S_ATTR:
					value = source.slice(start,p);
					if(value.slice(-1) === '/'){
						el.closed  = true;
						value = value.slice(0,-1)
					}
				case S_ATTR_S:
					if(s === S_ATTR_S){
						value = attrName;
					}
					if(s == S_V){
						errorHandler.warning('attribute "'+value+'" missed quot(")!!');
						el.add(attrName,value.replace(/&#?\w+;/g,entityReplacer),start)
					}else{
						errorHandler.warning('attribute "'+value+'" missed value!! "'+value+'" instead!!')
						el.add(value,value,start)
					}
					break;
				case S_EQ:
					throw new Error('attribute value missed!!');
				}
	//			console.log(tagName,tagNamePattern,tagNamePattern.test(tagName))
				return p;
			/*xml space '\x20' | #x9 | #xD | #xA; */
			case '\u0080':
				c = ' ';
			default:
				if(c<= ' '){//space
					switch(s){
					case S_TAG:
						el.setTagName(source.slice(start,p));//tagName
						s = S_S;
						break;
					case S_ATTR:
						attrName = source.slice(start,p)
						s = S_ATTR_S;
						break;
					case S_V:
						var value = source.slice(start,p).replace(/&#?\w+;/g,entityReplacer);
						errorHandler.warning('attribute "'+value+'" missed quot(")!!');
						el.add(attrName,value,start)
					case S_E:
						s = S_S;
						break;
					//case S_S:
					//case S_EQ:
					//case S_ATTR_S:
					//	void();break;
					//case S_C:
						//ignore warning
					}
				}else{//not space
	//S_TAG,	S_ATTR,	S_EQ,	S_V
	//S_ATTR_S,	S_E,	S_S,	S_C
					switch(s){
					//case S_TAG:void();break;
					//case S_ATTR:void();break;
					//case S_V:void();break;
					case S_ATTR_S:
						errorHandler.warning('attribute "'+attrName+'" missed value!! "'+attrName+'" instead!!')
						el.add(attrName,attrName,start);
						start = p;
						s = S_ATTR;
						break;
					case S_E:
						errorHandler.warning('attribute space is required"'+attrName+'"!!')
					case S_S:
						s = S_ATTR;
						start = p;
						break;
					case S_EQ:
						s = S_V;
						start = p;
						break;
					case S_C:
						throw new Error("elements closed character '/' and '>' must be connected to");
					}
				}
			}
			p++;
		}
	}
	/**
	 * @return end of the elementStartPart(end of elementEndPart for selfClosed el)
	 */
	function appendElement(el,domBuilder,parseStack){
		var tagName = el.tagName;
		var localNSMap = null;
		var currentNSMap = parseStack[parseStack.length-1].currentNSMap;
		var i = el.length;
		while(i--){
			var a = el[i];
			var qName = a.qName;
			var value = a.value;
			var nsp = qName.indexOf(':');
			if(nsp>0){
				var prefix = a.prefix = qName.slice(0,nsp);
				var localName = qName.slice(nsp+1);
				var nsPrefix = prefix === 'xmlns' && localName
			}else{
				localName = qName;
				prefix = null
				nsPrefix = qName === 'xmlns' && ''
			}
			//can not set prefix,because prefix !== ''
			a.localName = localName ;
			//prefix == null for no ns prefix attribute 
			if(nsPrefix !== false){//hack!!
				if(localNSMap == null){
					localNSMap = {}
					//console.log(currentNSMap,0)
					_copy(currentNSMap,currentNSMap={})
					//console.log(currentNSMap,1)
				}
				currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;
				a.uri = 'http://www.w3.org/2000/xmlns/'
				domBuilder.startPrefixMapping(nsPrefix, value) 
			}
		}
		var i = el.length;
		while(i--){
			a = el[i];
			var prefix = a.prefix;
			if(prefix){//no prefix attribute has no namespace
				if(prefix === 'xml'){
					a.uri = 'http://www.w3.org/XML/1998/namespace';
				}if(prefix !== 'xmlns'){
					a.uri = currentNSMap[prefix]
					
					//{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}
				}
			}
		}
		var nsp = tagName.indexOf(':');
		if(nsp>0){
			prefix = el.prefix = tagName.slice(0,nsp);
			localName = el.localName = tagName.slice(nsp+1);
		}else{
			prefix = null;//important!!
			localName = el.localName = tagName;
		}
		//no prefix element has default namespace
		var ns = el.uri = currentNSMap[prefix || ''];
		domBuilder.startElement(ns,localName,tagName,el);
		//endPrefixMapping and startPrefixMapping have not any help for dom builder
		//localNSMap = null
		if(el.closed){
			domBuilder.endElement(ns,localName,tagName);
			if(localNSMap){
				for(prefix in localNSMap){
					domBuilder.endPrefixMapping(prefix) 
				}
			}
		}else{
			el.currentNSMap = currentNSMap;
			el.localNSMap = localNSMap;
			parseStack.push(el);
		}
	}
	function parseHtmlSpecialContent(source,elStartEnd,tagName,entityReplacer,domBuilder){
		if(/^(?:script|textarea)$/i.test(tagName)){
			var elEndStart =  source.indexOf('</'+tagName+'>',elStartEnd);
			var text = source.substring(elStartEnd+1,elEndStart);
			if(/[&<]/.test(text)){
				if(/^script$/i.test(tagName)){
					//if(!/\]\]>/.test(text)){
						//lexHandler.startCDATA();
						domBuilder.characters(text,0,text.length);
						//lexHandler.endCDATA();
						return elEndStart;
					//}
				}//}else{//text area
					text = text.replace(/&#?\w+;/g,entityReplacer);
					domBuilder.characters(text,0,text.length);
					return elEndStart;
				//}
				
			}
		}
		return elStartEnd+1;
	}
	function fixSelfClosed(source,elStartEnd,tagName,closeMap){
		//if(tagName in closeMap){
		var pos = closeMap[tagName];
		if(pos == null){
			//console.log(tagName)
			pos = closeMap[tagName] = source.lastIndexOf('</'+tagName+'>')
		}
		return pos<elStartEnd;
		//} 
	}
	function _copy(source,target){
		for(var n in source){target[n] = source[n]}
	}
	function parseDCC(source,start,domBuilder,errorHandler){//sure start with '<!'
		var next= source.charAt(start+2)
		switch(next){
		case '-':
			if(source.charAt(start + 3) === '-'){
				var end = source.indexOf('-->',start+4);
				//append comment source.substring(4,end)//<!--
				if(end>start){
					domBuilder.comment(source,start+4,end-start-4);
					return end+3;
				}else{
					errorHandler.error("Unclosed comment");
					return -1;
				}
			}else{
				//error
				return -1;
			}
		default:
			if(source.substr(start+3,6) == 'CDATA['){
				var end = source.indexOf(']]>',start+9);
				domBuilder.startCDATA();
				domBuilder.characters(source,start+9,end-start-9);
				domBuilder.endCDATA() 
				return end+3;
			}
			//<!DOCTYPE
			//startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId) 
			var matchs = split(source,start);
			var len = matchs.length;
			if(len>1 && /!doctype/i.test(matchs[0][0])){
				var name = matchs[1][0];
				var pubid = len>3 && /^public$/i.test(matchs[2][0]) && matchs[3][0]
				var sysid = len>4 && matchs[4][0];
				var lastMatch = matchs[len-1]
				domBuilder.startDTD(name,pubid && pubid.replace(/^(['"])(.*?)\1$/,'$2'),
						sysid && sysid.replace(/^(['"])(.*?)\1$/,'$2'));
				domBuilder.endDTD();
				
				return lastMatch.index+lastMatch[0].length
			}
		}
		return -1;
	}



	function parseInstruction(source,start,domBuilder){
		var end = source.indexOf('?>',start);
		if(end){
			var match = source.substring(start,end).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
			if(match){
				var len = match[0].length;
				domBuilder.processingInstruction(match[1], match[2]) ;
				return end+2;
			}else{//error
				return -1;
			}
		}
		return -1;
	}

	/**
	 * @param source
	 */
	function ElementAttributes(source){
		
	}
	ElementAttributes.prototype = {
		setTagName:function(tagName){
			if(!tagNamePattern.test(tagName)){
				throw new Error('invalid tagName:'+tagName)
			}
			this.tagName = tagName
		},
		add:function(qName,value,offset){
			if(!tagNamePattern.test(qName)){
				throw new Error('invalid attribute:'+qName)
			}
			this[this.length++] = {qName:qName,value:value,offset:offset}
		},
		length:0,
		getLocalName:function(i){return this[i].localName},
		getOffset:function(i){return this[i].offset},
		getQName:function(i){return this[i].qName},
		getURI:function(i){return this[i].uri},
		getValue:function(i){return this[i].value}
	//	,getIndex:function(uri, localName)){
	//		if(localName){
	//			
	//		}else{
	//			var qName = uri
	//		}
	//	},
	//	getValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},
	//	getType:function(uri,localName){}
	//	getType:function(i){},
	}




	function _set_proto_(thiz,parent){
		thiz.__proto__ = parent;
		return thiz;
	}
	if(!(_set_proto_({},_set_proto_.prototype) instanceof _set_proto_)){
		_set_proto_ = function(thiz,parent){
			function p(){};
			p.prototype = parent;
			p = new p();
			for(parent in thiz){
				p[parent] = thiz[parent];
			}
			return p;
		}
	}

	function split(source,start){
		var match;
		var buf = [];
		var reg = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
		reg.lastIndex = start;
		reg.exec(source);//skip <
		while(match = reg.exec(source)){
			buf.push(match);
			if(match[1])return buf;
		}
	}

	if(true){
		exports.XMLReader = XMLReader;
	}



/***/ },
/* 651 */
/***/ function(module, exports, __webpack_require__) {

	/*
	 * DOM Level 2
	 * Object DOMException
	 * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html
	 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html
	 */

	function copy(src,dest){
		for(var p in src){
			dest[p] = src[p];
		}
	}
	/**
	^\w+\.prototype\.([_\w]+)\s*=\s*((?:.*\{\s*?[\r\n][\s\S]*?^})|\S.*?(?=[;\r\n]));?
	^\w+\.prototype\.([_\w]+)\s*=\s*(\S.*?(?=[;\r\n]));?
	 */
	function _extends(Class,Super){
		var pt = Class.prototype;
		if(Object.create){
			var ppt = Object.create(Super.prototype)
			pt.__proto__ = ppt;
		}
		if(!(pt instanceof Super)){
			function t(){};
			t.prototype = Super.prototype;
			t = new t();
			copy(pt,t);
			Class.prototype = pt = t;
		}
		if(pt.constructor != Class){
			if(typeof Class != 'function'){
				console.error("unknow Class:"+Class)
			}
			pt.constructor = Class
		}
	}
	var htmlns = 'http://www.w3.org/1999/xhtml' ;
	// Node Types
	var NodeType = {}
	var ELEMENT_NODE                = NodeType.ELEMENT_NODE                = 1;
	var ATTRIBUTE_NODE              = NodeType.ATTRIBUTE_NODE              = 2;
	var TEXT_NODE                   = NodeType.TEXT_NODE                   = 3;
	var CDATA_SECTION_NODE          = NodeType.CDATA_SECTION_NODE          = 4;
	var ENTITY_REFERENCE_NODE       = NodeType.ENTITY_REFERENCE_NODE       = 5;
	var ENTITY_NODE                 = NodeType.ENTITY_NODE                 = 6;
	var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;
	var COMMENT_NODE                = NodeType.COMMENT_NODE                = 8;
	var DOCUMENT_NODE               = NodeType.DOCUMENT_NODE               = 9;
	var DOCUMENT_TYPE_NODE          = NodeType.DOCUMENT_TYPE_NODE          = 10;
	var DOCUMENT_FRAGMENT_NODE      = NodeType.DOCUMENT_FRAGMENT_NODE      = 11;
	var NOTATION_NODE               = NodeType.NOTATION_NODE               = 12;

	// ExceptionCode
	var ExceptionCode = {}
	var ExceptionMessage = {};
	var INDEX_SIZE_ERR              = ExceptionCode.INDEX_SIZE_ERR              = ((ExceptionMessage[1]="Index size error"),1);
	var DOMSTRING_SIZE_ERR          = ExceptionCode.DOMSTRING_SIZE_ERR          = ((ExceptionMessage[2]="DOMString size error"),2);
	var HIERARCHY_REQUEST_ERR       = ExceptionCode.HIERARCHY_REQUEST_ERR       = ((ExceptionMessage[3]="Hierarchy request error"),3);
	var WRONG_DOCUMENT_ERR          = ExceptionCode.WRONG_DOCUMENT_ERR          = ((ExceptionMessage[4]="Wrong document"),4);
	var INVALID_CHARACTER_ERR       = ExceptionCode.INVALID_CHARACTER_ERR       = ((ExceptionMessage[5]="Invalid character"),5);
	var NO_DATA_ALLOWED_ERR         = ExceptionCode.NO_DATA_ALLOWED_ERR         = ((ExceptionMessage[6]="No data allowed"),6);
	var NO_MODIFICATION_ALLOWED_ERR = ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = ((ExceptionMessage[7]="No modification allowed"),7);
	var NOT_FOUND_ERR               = ExceptionCode.NOT_FOUND_ERR               = ((ExceptionMessage[8]="Not found"),8);
	var NOT_SUPPORTED_ERR           = ExceptionCode.NOT_SUPPORTED_ERR           = ((ExceptionMessage[9]="Not supported"),9);
	var INUSE_ATTRIBUTE_ERR         = ExceptionCode.INUSE_ATTRIBUTE_ERR         = ((ExceptionMessage[10]="Attribute in use"),10);
	//level2
	var INVALID_STATE_ERR        	= ExceptionCode.INVALID_STATE_ERR        	= ((ExceptionMessage[11]="Invalid state"),11);
	var SYNTAX_ERR               	= ExceptionCode.SYNTAX_ERR               	= ((ExceptionMessage[12]="Syntax error"),12);
	var INVALID_MODIFICATION_ERR 	= ExceptionCode.INVALID_MODIFICATION_ERR 	= ((ExceptionMessage[13]="Invalid modification"),13);
	var NAMESPACE_ERR            	= ExceptionCode.NAMESPACE_ERR           	= ((ExceptionMessage[14]="Invalid namespace"),14);
	var INVALID_ACCESS_ERR       	= ExceptionCode.INVALID_ACCESS_ERR      	= ((ExceptionMessage[15]="Invalid access"),15);


	function DOMException(code, message) {
		if(message instanceof Error){
			var error = message;
		}else{
			error = this;
			Error.call(this, ExceptionMessage[code]);
			this.message = ExceptionMessage[code];
			if(Error.captureStackTrace) Error.captureStackTrace(this, DOMException);
		}
		error.code = code;
		if(message) this.message = this.message + ": " + message;
		return error;
	};
	DOMException.prototype = Error.prototype;
	copy(ExceptionCode,DOMException)
	/**
	 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177
	 * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.
	 * The items in the NodeList are accessible via an integral index, starting from 0.
	 */
	function NodeList() {
	};
	NodeList.prototype = {
		/**
		 * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.
		 * @standard level1
		 */
		length:0, 
		/**
		 * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
		 * @standard level1
		 * @param index  unsigned long 
		 *   Index into the collection.
		 * @return Node
		 * 	The node at the indexth position in the NodeList, or null if that is not a valid index. 
		 */
		item: function(index) {
			return this[index] || null;
		}
	};
	function LiveNodeList(node,refresh){
		this._node = node;
		this._refresh = refresh
		_updateLiveList(this);
	}
	function _updateLiveList(list){
		var inc = list._node._inc || list._node.ownerDocument._inc;
		if(list._inc != inc){
			var ls = list._refresh(list._node);
			//console.log(ls.length)
			__set__(list,'length',ls.length);
			copy(ls,list);
			list._inc = inc;
		}
	}
	LiveNodeList.prototype.item = function(i){
		_updateLiveList(this);
		return this[i];
	}

	_extends(LiveNodeList,NodeList);
	/**
	 * 
	 * Objects implementing the NamedNodeMap interface are used to represent collections of nodes that can be accessed by name. Note that NamedNodeMap does not inherit from NodeList; NamedNodeMaps are not maintained in any particular order. Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index, but this is simply to allow convenient enumeration of the contents of a NamedNodeMap, and does not imply that the DOM specifies an order to these Nodes.
	 * NamedNodeMap objects in the DOM are live.
	 * used for attributes or DocumentType entities 
	 */
	function NamedNodeMap() {
	};

	function _findNodeIndex(list,node){
		var i = list.length;
		while(i--){
			if(list[i] === node){return i}
		}
	}

	function _addNamedNode(el,list,newAttr,oldAttr){
		if(oldAttr){
			list[_findNodeIndex(list,oldAttr)] = newAttr;
		}else{
			list[list.length++] = newAttr;
		}
		if(el){
			newAttr.ownerElement = el;
			var doc = el.ownerDocument;
			if(doc){
				oldAttr && _onRemoveAttribute(doc,el,oldAttr);
				_onAddAttribute(doc,el,newAttr);
			}
		}
	}
	function _removeNamedNode(el,list,attr){
		var i = _findNodeIndex(list,attr);
		if(i>=0){
			var lastIndex = list.length-1
			while(i<lastIndex){
				list[i] = list[++i]
			}
			list.length = lastIndex;
			if(el){
				var doc = el.ownerDocument;
				if(doc){
					_onRemoveAttribute(doc,el,attr);
					attr.ownerElement = null;
				}
			}
		}else{
			throw DOMException(NOT_FOUND_ERR,new Error())
		}
	}
	NamedNodeMap.prototype = {
		length:0,
		item:NodeList.prototype.item,
		getNamedItem: function(key) {
	//		if(key.indexOf(':')>0 || key == 'xmlns'){
	//			return null;
	//		}
			var i = this.length;
			while(i--){
				var attr = this[i];
				if(attr.nodeName == key){
					return attr;
				}
			}
		},
		setNamedItem: function(attr) {
			var el = attr.ownerElement;
			if(el && el!=this._ownerElement){
				throw new DOMException(INUSE_ATTRIBUTE_ERR);
			}
			var oldAttr = this.getNamedItem(attr.nodeName);
			_addNamedNode(this._ownerElement,this,attr,oldAttr);
			return oldAttr;
		},
		/* returns Node */
		setNamedItemNS: function(attr) {// raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR
			var el = attr.ownerElement, oldAttr;
			if(el && el!=this._ownerElement){
				throw new DOMException(INUSE_ATTRIBUTE_ERR);
			}
			oldAttr = this.getNamedItemNS(attr.namespaceURI,attr.localName);
			_addNamedNode(this._ownerElement,this,attr,oldAttr);
			return oldAttr;
		},

		/* returns Node */
		removeNamedItem: function(key) {
			var attr = this.getNamedItem(key);
			_removeNamedNode(this._ownerElement,this,attr);
			return attr;
			
			
		},// raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR
		
		//for level2
		removeNamedItemNS:function(namespaceURI,localName){
			var attr = this.getNamedItemNS(namespaceURI,localName);
			_removeNamedNode(this._ownerElement,this,attr);
			return attr;
		},
		getNamedItemNS: function(namespaceURI, localName) {
			var i = this.length;
			while(i--){
				var node = this[i];
				if(node.localName == localName && node.namespaceURI == namespaceURI){
					return node;
				}
			}
			return null;
		}
	};
	/**
	 * @see http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490
	 */
	function DOMImplementation(/* Object */ features) {
		this._features = {};
		if (features) {
			for (var feature in features) {
				 this._features = features[feature];
			}
		}
	};

	DOMImplementation.prototype = {
		hasFeature: function(/* string */ feature, /* string */ version) {
			var versions = this._features[feature.toLowerCase()];
			if (versions && (!version || version in versions)) {
				return true;
			} else {
				return false;
			}
		},
		// Introduced in DOM Level 2:
		createDocument:function(namespaceURI,  qualifiedName, doctype){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR,WRONG_DOCUMENT_ERR
			var doc = new Document();
			doc.doctype = doctype;
			if(doctype){
				doc.appendChild(doctype);
			}
			doc.implementation = this;
			doc.childNodes = new NodeList();
			if(qualifiedName){
				var root = doc.createElementNS(namespaceURI,qualifiedName);
				doc.appendChild(root);
			}
			return doc;
		},
		// Introduced in DOM Level 2:
		createDocumentType:function(qualifiedName, publicId, systemId){// raises:INVALID_CHARACTER_ERR,NAMESPACE_ERR
			var node = new DocumentType();
			node.name = qualifiedName;
			node.nodeName = qualifiedName;
			node.publicId = publicId;
			node.systemId = systemId;
			// Introduced in DOM Level 2:
			//readonly attribute DOMString        internalSubset;
			
			//TODO:..
			//  readonly attribute NamedNodeMap     entities;
			//  readonly attribute NamedNodeMap     notations;
			return node;
		}
	};


	/**
	 * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247
	 */

	function Node() {
	};

	Node.prototype = {
		firstChild : null,
		lastChild : null,
		previousSibling : null,
		nextSibling : null,
		attributes : null,
		parentNode : null,
		childNodes : null,
		ownerDocument : null,
		nodeValue : null,
		namespaceURI : null,
		prefix : null,
		localName : null,
		// Modified in DOM Level 2:
		insertBefore:function(newChild, refChild){//raises 
			return _insertBefore(this,newChild,refChild);
		},
		replaceChild:function(newChild, oldChild){//raises 
			this.insertBefore(newChild,oldChild);
			if(oldChild){
				this.removeChild(oldChild);
			}
		},
		removeChild:function(oldChild){
			return _removeChild(this,oldChild);
		},
		appendChild:function(newChild){
			return this.insertBefore(newChild,null);
		},
		hasChildNodes:function(){
			return this.firstChild != null;
		},
		cloneNode:function(deep){
			return cloneNode(this.ownerDocument||this,this,deep);
		},
		// Modified in DOM Level 2:
		normalize:function(){
			var child = this.firstChild;
			while(child){
				var next = child.nextSibling;
				if(next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE){
					this.removeChild(next);
					child.appendData(next.data);
				}else{
					child.normalize();
					child = next;
				}
			}
		},
	  	// Introduced in DOM Level 2:
		isSupported:function(feature, version){
			return this.ownerDocument.implementation.hasFeature(feature,version);
		},
	    // Introduced in DOM Level 2:
	    hasAttributes:function(){
	    	return this.attributes.length>0;
	    },
	    lookupPrefix:function(namespaceURI){
	    	var el = this;
	    	while(el){
	    		var map = el._nsMap;
	    		//console.dir(map)
	    		if(map){
	    			for(var n in map){
	    				if(map[n] == namespaceURI){
	    					return n;
	    				}
	    			}
	    		}
	    		el = el.nodeType == 2?el.ownerDocument : el.parentNode;
	    	}
	    	return null;
	    },
	    // Introduced in DOM Level 3:
	    lookupNamespaceURI:function(prefix){
	    	var el = this;
	    	while(el){
	    		var map = el._nsMap;
	    		//console.dir(map)
	    		if(map){
	    			if(prefix in map){
	    				return map[prefix] ;
	    			}
	    		}
	    		el = el.nodeType == 2?el.ownerDocument : el.parentNode;
	    	}
	    	return null;
	    },
	    // Introduced in DOM Level 3:
	    isDefaultNamespace:function(namespaceURI){
	    	var prefix = this.lookupPrefix(namespaceURI);
	    	return prefix == null;
	    }
	};


	function _xmlEncoder(c){
		return c == '<' && '&lt;' ||
	         c == '>' && '&gt;' ||
	         c == '&' && '&amp;' ||
	         c == '"' && '&quot;' ||
	         '&#'+c.charCodeAt()+';'
	}


	copy(NodeType,Node);
	copy(NodeType,Node.prototype);

	/**
	 * @param callback return true for continue,false for break
	 * @return boolean true: break visit;
	 */
	function _visitNode(node,callback){
		if(callback(node)){
			return true;
		}
		if(node = node.firstChild){
			do{
				if(_visitNode(node,callback)){return true}
	        }while(node=node.nextSibling)
	    }
	}



	function Document(){
	}
	function _onAddAttribute(doc,el,newAttr){
		doc && doc._inc++;
		var ns = newAttr.namespaceURI ;
		if(ns == 'http://www.w3.org/2000/xmlns/'){
			//update namespace
			el._nsMap[newAttr.prefix?newAttr.localName:''] = newAttr.value
		}
	}
	function _onRemoveAttribute(doc,el,newAttr,remove){
		doc && doc._inc++;
		var ns = newAttr.namespaceURI ;
		if(ns == 'http://www.w3.org/2000/xmlns/'){
			//update namespace
			delete el._nsMap[newAttr.prefix?newAttr.localName:'']
		}
	}
	function _onUpdateChild(doc,el,newChild){
		if(doc && doc._inc){
			doc._inc++;
			//update childNodes
			var cs = el.childNodes;
			if(newChild){
				cs[cs.length++] = newChild;
			}else{
				//console.log(1)
				var child = el.firstChild;
				var i = 0;
				while(child){
					cs[i++] = child;
					child =child.nextSibling;
				}
				cs.length = i;
			}
		}
	}

	/**
	 * attributes;
	 * children;
	 * 
	 * writeable properties:
	 * nodeValue,Attr:value,CharacterData:data
	 * prefix
	 */
	function _removeChild(parentNode,child){
		var previous = child.previousSibling;
		var next = child.nextSibling;
		if(previous){
			previous.nextSibling = next;
		}else{
			parentNode.firstChild = next
		}
		if(next){
			next.previousSibling = previous;
		}else{
			parentNode.lastChild = previous;
		}
		_onUpdateChild(parentNode.ownerDocument,parentNode);
		return child;
	}
	/**
	 * preformance key(refChild == null)
	 */
	function _insertBefore(parentNode,newChild,nextChild){
		var cp = newChild.parentNode;
		if(cp){
			cp.removeChild(newChild);//remove and update
		}
		if(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){
			var newFirst = newChild.firstChild;
			if (newFirst == null) {
				return newChild;
			}
			var newLast = newChild.lastChild;
		}else{
			newFirst = newLast = newChild;
		}
		var pre = nextChild ? nextChild.previousSibling : parentNode.lastChild;

		newFirst.previousSibling = pre;
		newLast.nextSibling = nextChild;
		
		
		if(pre){
			pre.nextSibling = newFirst;
		}else{
			parentNode.firstChild = newFirst;
		}
		if(nextChild == null){
			parentNode.lastChild = newLast;
		}else{
			nextChild.previousSibling = newLast;
		}
		do{
			newFirst.parentNode = parentNode;
		}while(newFirst !== newLast && (newFirst= newFirst.nextSibling))
		_onUpdateChild(parentNode.ownerDocument||parentNode,parentNode);
		//console.log(parentNode.lastChild.nextSibling == null)
		if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {
			newChild.firstChild = newChild.lastChild = null;
		}
		return newChild;
	}
	function _appendSingleChild(parentNode,newChild){
		var cp = newChild.parentNode;
		if(cp){
			var pre = parentNode.lastChild;
			cp.removeChild(newChild);//remove and update
			var pre = parentNode.lastChild;
		}
		var pre = parentNode.lastChild;
		newChild.parentNode = parentNode;
		newChild.previousSibling = pre;
		newChild.nextSibling = null;
		if(pre){
			pre.nextSibling = newChild;
		}else{
			parentNode.firstChild = newChild;
		}
		parentNode.lastChild = newChild;
		_onUpdateChild(parentNode.ownerDocument,parentNode,newChild);
		return newChild;
		//console.log("__aa",parentNode.lastChild.nextSibling == null)
	}
	Document.prototype = {
		//implementation : null,
		nodeName :  '#document',
		nodeType :  DOCUMENT_NODE,
		doctype :  null,
		documentElement :  null,
		_inc : 1,
		
		insertBefore :  function(newChild, refChild){//raises 
			if(newChild.nodeType == DOCUMENT_FRAGMENT_NODE){
				var child = newChild.firstChild;
				while(child){
					var next = child.nextSibling;
					this.insertBefore(child,refChild);
					child = next;
				}
				return newChild;
			}
			if(this.documentElement == null && newChild.nodeType == 1){
				this.documentElement = newChild;
			}
			
			return _insertBefore(this,newChild,refChild),(newChild.ownerDocument = this),newChild;
		},
		removeChild :  function(oldChild){
			if(this.documentElement == oldChild){
				this.documentElement = null;
			}
			return _removeChild(this,oldChild);
		},
		// Introduced in DOM Level 2:
		importNode : function(importedNode,deep){
			return importNode(this,importedNode,deep);
		},
		// Introduced in DOM Level 2:
		getElementById :	function(id){
			var rtv = null;
			_visitNode(this.documentElement,function(node){
				if(node.nodeType == 1){
					if(node.getAttribute('id') == id){
						rtv = node;
						return true;
					}
				}
			})
			return rtv;
		},
		
		//document factory method:
		createElement :	function(tagName){
			var node = new Element();
			node.ownerDocument = this;
			node.nodeName = tagName;
			node.tagName = tagName;
			node.childNodes = new NodeList();
			var attrs	= node.attributes = new NamedNodeMap();
			attrs._ownerElement = node;
			return node;
		},
		createDocumentFragment :	function(){
			var node = new DocumentFragment();
			node.ownerDocument = this;
			node.childNodes = new NodeList();
			return node;
		},
		createTextNode :	function(data){
			var node = new Text();
			node.ownerDocument = this;
			node.appendData(data)
			return node;
		},
		createComment :	function(data){
			var node = new Comment();
			node.ownerDocument = this;
			node.appendData(data)
			return node;
		},
		createCDATASection :	function(data){
			var node = new CDATASection();
			node.ownerDocument = this;
			node.appendData(data)
			return node;
		},
		createProcessingInstruction :	function(target,data){
			var node = new ProcessingInstruction();
			node.ownerDocument = this;
			node.tagName = node.target = target;
			node.nodeValue= node.data = data;
			return node;
		},
		createAttribute :	function(name){
			var node = new Attr();
			node.ownerDocument	= this;
			node.name = name;
			node.nodeName	= name;
			node.localName = name;
			node.specified = true;
			return node;
		},
		createEntityReference :	function(name){
			var node = new EntityReference();
			node.ownerDocument	= this;
			node.nodeName	= name;
			return node;
		},
		// Introduced in DOM Level 2:
		createElementNS :	function(namespaceURI,qualifiedName){
			var node = new Element();
			var pl = qualifiedName.split(':');
			var attrs	= node.attributes = new NamedNodeMap();
			node.childNodes = new NodeList();
			node.ownerDocument = this;
			node.nodeName = qualifiedName;
			node.tagName = qualifiedName;
			node.namespaceURI = namespaceURI;
			if(pl.length == 2){
				node.prefix = pl[0];
				node.localName = pl[1];
			}else{
				//el.prefix = null;
				node.localName = qualifiedName;
			}
			attrs._ownerElement = node;
			return node;
		},
		// Introduced in DOM Level 2:
		createAttributeNS :	function(namespaceURI,qualifiedName){
			var node = new Attr();
			var pl = qualifiedName.split(':');
			node.ownerDocument = this;
			node.nodeName = qualifiedName;
			node.name = qualifiedName;
			node.namespaceURI = namespaceURI;
			node.specified = true;
			if(pl.length == 2){
				node.prefix = pl[0];
				node.localName = pl[1];
			}else{
				//el.prefix = null;
				node.localName = qualifiedName;
			}
			return node;
		}
	};
	_extends(Document,Node);


	function Element() {
		this._nsMap = {};
	};
	Element.prototype = {
		nodeType : ELEMENT_NODE,
		hasAttribute : function(name){
			return this.getAttributeNode(name)!=null;
		},
		getAttribute : function(name){
			var attr = this.getAttributeNode(name);
			return attr && attr.value || '';
		},
		getAttributeNode : function(name){
			return this.attributes.getNamedItem(name);
		},
		setAttribute : function(name, value){
			var attr = this.ownerDocument.createAttribute(name);
			attr.value = attr.nodeValue = "" + value;
			this.setAttributeNode(attr)
		},
		removeAttribute : function(name){
			var attr = this.getAttributeNode(name)
			attr && this.removeAttributeNode(attr);
		},
		
		//four real opeartion method
		appendChild:function(newChild){
			if(newChild.nodeType === DOCUMENT_FRAGMENT_NODE){
				return this.insertBefore(newChild,null);
			}else{
				return _appendSingleChild(this,newChild);
			}
		},
		setAttributeNode : function(newAttr){
			return this.attributes.setNamedItem(newAttr);
		},
		setAttributeNodeNS : function(newAttr){
			return this.attributes.setNamedItemNS(newAttr);
		},
		removeAttributeNode : function(oldAttr){
			return this.attributes.removeNamedItem(oldAttr.nodeName);
		},
		//get real attribute name,and remove it by removeAttributeNode
		removeAttributeNS : function(namespaceURI, localName){
			var old = this.getAttributeNodeNS(namespaceURI, localName);
			old && this.removeAttributeNode(old);
		},
		
		hasAttributeNS : function(namespaceURI, localName){
			return this.getAttributeNodeNS(namespaceURI, localName)!=null;
		},
		getAttributeNS : function(namespaceURI, localName){
			var attr = this.getAttributeNodeNS(namespaceURI, localName);
			return attr && attr.value || '';
		},
		setAttributeNS : function(namespaceURI, qualifiedName, value){
			var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);
			attr.value = attr.nodeValue = value;
			this.setAttributeNode(attr)
		},
		getAttributeNodeNS : function(namespaceURI, localName){
			return this.attributes.getNamedItemNS(namespaceURI, localName);
		},
		
		getElementsByTagName : function(tagName){
			return new LiveNodeList(this,function(base){
				var ls = [];
				_visitNode(base,function(node){
					if(node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)){
						ls.push(node);
					}
				});
				return ls;
			});
		},
		getElementsByTagNameNS : function(namespaceURI, localName){
			return new LiveNodeList(this,function(base){
				var ls = [];
				_visitNode(base,function(node){
					if(node !== base && node.nodeType === ELEMENT_NODE && node.namespaceURI === namespaceURI && (localName === '*' || node.localName == localName)){
						ls.push(node);
					}
				});
				return ls;
			});
		}
	};
	Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;
	Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;


	_extends(Element,Node);
	function Attr() {
	};
	Attr.prototype.nodeType = ATTRIBUTE_NODE;
	_extends(Attr,Node);


	function CharacterData() {
	};
	CharacterData.prototype = {
		data : '',
		substringData : function(offset, count) {
			return this.data.substring(offset, offset+count);
		},
		appendData: function(text) {
			text = this.data+text;
			this.nodeValue = this.data = text;
			this.length = text.length;
		},
		insertData: function(offset,text) {
			this.replaceData(offset,0,text);
		
		},
		appendChild:function(newChild){
			//if(!(newChild instanceof CharacterData)){
				throw new Error(ExceptionMessage[3])
			//}
			return Node.prototype.appendChild.apply(this,arguments)
		},
		deleteData: function(offset, count) {
			this.replaceData(offset,count,"");
		},
		replaceData: function(offset, count, text) {
			var start = this.data.substring(0,offset);
			var end = this.data.substring(offset+count);
			text = start + text + end;
			this.nodeValue = this.data = text;
			this.length = text.length;
		}
	}
	_extends(CharacterData,Node);
	function Text() {
	};
	Text.prototype = {
		nodeName : "#text",
		nodeType : TEXT_NODE,
		splitText : function(offset) {
			var text = this.data;
			var newText = text.substring(offset);
			text = text.substring(0, offset);
			this.data = this.nodeValue = text;
			this.length = text.length;
			var newNode = this.ownerDocument.createTextNode(newText);
			if(this.parentNode){
				this.parentNode.insertBefore(newNode, this.nextSibling);
			}
			return newNode;
		}
	}
	_extends(Text,CharacterData);
	function Comment() {
	};
	Comment.prototype = {
		nodeName : "#comment",
		nodeType : COMMENT_NODE
	}
	_extends(Comment,CharacterData);

	function CDATASection() {
	};
	CDATASection.prototype = {
		nodeName : "#cdata-section",
		nodeType : CDATA_SECTION_NODE
	}
	_extends(CDATASection,CharacterData);


	function DocumentType() {
	};
	DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;
	_extends(DocumentType,Node);

	function Notation() {
	};
	Notation.prototype.nodeType = NOTATION_NODE;
	_extends(Notation,Node);

	function Entity() {
	};
	Entity.prototype.nodeType = ENTITY_NODE;
	_extends(Entity,Node);

	function EntityReference() {
	};
	EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;
	_extends(EntityReference,Node);

	function DocumentFragment() {
	};
	DocumentFragment.prototype.nodeName =	"#document-fragment";
	DocumentFragment.prototype.nodeType =	DOCUMENT_FRAGMENT_NODE;
	_extends(DocumentFragment,Node);


	function ProcessingInstruction() {
	}
	ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;
	_extends(ProcessingInstruction,Node);
	function XMLSerializer(){}
	XMLSerializer.prototype.serializeToString = function(node){
		var buf = [];
		serializeToString(node,buf);
		return buf.join('');
	}
	Node.prototype.toString =function(){
		return XMLSerializer.prototype.serializeToString(this);
	}
	function serializeToString(node,buf){
		switch(node.nodeType){
		case ELEMENT_NODE:
			var attrs = node.attributes;
			var len = attrs.length;
			var child = node.firstChild;
			var nodeName = node.tagName;
			var isHTML = htmlns === node.namespaceURI
			buf.push('<',nodeName);
			for(var i=0;i<len;i++){
				serializeToString(attrs.item(i),buf,isHTML);
			}
			if(child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)){
				buf.push('>');
				//if is cdata child node
				if(isHTML && /^script$/i.test(nodeName)){
					if(child){
						buf.push(child.data);
					}
				}else{
					while(child){
						serializeToString(child,buf);
						child = child.nextSibling;
					}
				}
				buf.push('</',nodeName,'>');
			}else{
				buf.push('/>');
			}
			return;
		case DOCUMENT_NODE:
		case DOCUMENT_FRAGMENT_NODE:
			var child = node.firstChild;
			while(child){
				serializeToString(child,buf);
				child = child.nextSibling;
			}
			return;
		case ATTRIBUTE_NODE:
			return buf.push(' ',node.name,'="',node.value.replace(/[<&"]/g,_xmlEncoder),'"');
		case TEXT_NODE:
			return buf.push(node.data.replace(/[<&]/g,_xmlEncoder));
		case CDATA_SECTION_NODE:
			return buf.push( '<![CDATA[',node.data,']]>');
		case COMMENT_NODE:
			return buf.push( "<!--",node.data,"-->");
		case DOCUMENT_TYPE_NODE:
			var pubid = node.publicId;
			var sysid = node.systemId;
			buf.push('<!DOCTYPE ',node.name);
			if(pubid){
				buf.push(' PUBLIC "',pubid);
				if (sysid && sysid!='.') {
					buf.push( '" "',sysid);
				}
				buf.push('">');
			}else if(sysid && sysid!='.'){
				buf.push(' SYSTEM "',sysid,'">');
			}else{
				var sub = node.internalSubset;
				if(sub){
					buf.push(" [",sub,"]");
				}
				buf.push(">");
			}
			return;
		case PROCESSING_INSTRUCTION_NODE:
			return buf.push( "<?",node.target," ",node.data,"?>");
		case ENTITY_REFERENCE_NODE:
			return buf.push( '&',node.nodeName,';');
		//case ENTITY_NODE:
		//case NOTATION_NODE:
		default:
			buf.push('??',node.nodeName);
		}
	}
	function importNode(doc,node,deep){
		var node2;
		switch (node.nodeType) {
		case ELEMENT_NODE:
			node2 = node.cloneNode(false);
			node2.ownerDocument = doc;
			//var attrs = node2.attributes;
			//var len = attrs.length;
			//for(var i=0;i<len;i++){
				//node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));
			//}
		case DOCUMENT_FRAGMENT_NODE:
			break;
		case ATTRIBUTE_NODE:
			deep = true;
			break;
		//case ENTITY_REFERENCE_NODE:
		//case PROCESSING_INSTRUCTION_NODE:
		////case TEXT_NODE:
		//case CDATA_SECTION_NODE:
		//case COMMENT_NODE:
		//	deep = false;
		//	break;
		//case DOCUMENT_NODE:
		//case DOCUMENT_TYPE_NODE:
		//cannot be imported.
		//case ENTITY_NODE:
		//case NOTATION_NODE：
		//can not hit in level3
		//default:throw e;
		}
		if(!node2){
			node2 = node.cloneNode(false);//false
		}
		node2.ownerDocument = doc;
		node2.parentNode = null;
		if(deep){
			var child = node.firstChild;
			while(child){
				node2.appendChild(importNode(doc,child,deep));
				child = child.nextSibling;
			}
		}
		return node2;
	}
	//
	//var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,
	//					attributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};
	function cloneNode(doc,node,deep){
		var node2 = new node.constructor();
		for(var n in node){
			var v = node[n];
			if(typeof v != 'object' ){
				if(v != node2[n]){
					node2[n] = v;
				}
			}
		}
		if(node.childNodes){
			node2.childNodes = new NodeList();
		}
		node2.ownerDocument = doc;
		switch (node2.nodeType) {
		case ELEMENT_NODE:
			var attrs	= node.attributes;
			var attrs2	= node2.attributes = new NamedNodeMap();
			var len = attrs.length
			attrs2._ownerElement = node2;
			for(var i=0;i<len;i++){
				node2.setAttributeNode(cloneNode(doc,attrs.item(i),true));
			}
			break;;
		case ATTRIBUTE_NODE:
			deep = true;
		}
		if(deep){
			var child = node.firstChild;
			while(child){
				node2.appendChild(cloneNode(doc,child,deep));
				child = child.nextSibling;
			}
		}
		return node2;
	}

	function __set__(object,key,value){
		object[key] = value
	}
	//do dynamic
	try{
		if(Object.defineProperty){
			Object.defineProperty(LiveNodeList.prototype,'length',{
				get:function(){
					_updateLiveList(this);
					return this.$$length;
				}
			});
			Object.defineProperty(Node.prototype,'textContent',{
				get:function(){
					return getTextContent(this);
				},
				set:function(data){
					switch(this.nodeType){
					case 1:
					case 11:
						while(this.firstChild){
							this.removeChild(this.firstChild);
						}
						if(data || String(data)){
							this.appendChild(this.ownerDocument.createTextNode(data));
						}
						break;
					default:
						//TODO:
						this.data = data;
						this.value = value;
						this.nodeValue = data;
					}
				}
			})
			
			function getTextContent(node){
				switch(node.nodeType){
				case 1:
				case 11:
					var buf = [];
					node = node.firstChild;
					while(node){
						if(node.nodeType!==7 && node.nodeType !==8){
							buf.push(getTextContent(node));
						}
						node = node.nextSibling;
					}
					return buf.join('');
				default:
					return node.nodeValue;
				}
			}
			__set__ = function(object,key,value){
				//console.log(value)
				object['$$'+key] = value
			}
		}
	}catch(e){//ie8
	}

	if(true){
		exports.DOMImplementation = DOMImplementation;
		exports.XMLSerializer = XMLSerializer;
	}


/***/ },
/* 652 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _canvasConstJs = __webpack_require__(6);

	var _canvasConstJs2 = _interopRequireDefault(_canvasConstJs);

	var rect;

	var BoxTool = function BoxTool(canvasWrapper, eventAggregator) {
	    _classCallCheck(this, BoxTool);

	    eventAggregator.subscribeTo(_canvasConstJs2['default'].TOOL.BOX, 'BoxTool', attachBoxListener);

	    var canvas = canvasWrapper.canvas;

	    function notify(message) {
	        eventAggregator.notify('TOOL_USAGE', _canvasConstJs2['default'].TOOL.BOX, message);
	    }

	    function done() {
	        if (rect) {
	            notify('inactive');
	            detachBoxListener();
	            canvas.selection = true; // Restore fabricjs selection-box
	            canvas.forEachObject(function (o) {
	                o.selectable = true;
	            });
	        }
	    }

	    function detachBoxListener() {
	        if (rect) {
	            canvas.off('mouse:down', mouseDown);
	            canvas.off('mouse:move', drawBox);
	            canvas.off('mouse:up', drawBoxDone);

	            rect = undefined;
	            eventAggregator.unsubscribeTo('keydown', 'BoxTool');
	        }
	    }
	    var currWidth, currHeight;

	    function drawBox(options) {
	        if (rect) {
	            currWidth = options.e.clientX - canvasWrapper.getOffsetLeft() - startLeft;
	            currHeight = options.e.clientY - canvasWrapper.getOffsetTop() - startTop;

	            rect.set({
	                'width': currWidth
	            });
	            rect.set({
	                'height': currHeight
	            });
	            rect.setCoords();
	            canvas.renderAll();
	        }
	    }
	    function drawBoxDone(options) {
	        canvas.off('mouse:move', drawBox);
	        canvas.off('mouse:up', drawBoxDone);

	        if (Math.abs(currWidth) < 5 && Math.abs(currHeight) < 5) {
	            canvas.remove(rect);
	            return;
	        }
	        rect.set({ opacity: 0.2 });
	        canvas.renderAll();
	    }

	    var currWidth, currHeight, startTop, startLeft;

	    function mouseDown(options) {

	        currWidth = currHeight = 0;
	        startTop = options.e.clientY - canvasWrapper.getOffsetTop();
	        startLeft = options.e.clientX - canvasWrapper.getOffsetLeft();

	        rect = new fabric.Rect({
	            left: startLeft,
	            top: startTop,
	            width: 4,
	            borderColor: '#444',
	            height: 4,
	            fill: '#888',
	            opacity: 0.3,
	            hasControls: true,
	            hasRotatingPoint: false,
	            originX: 'left',
	            originY: 'top',
	            selectable: false
	        });

	        canvas.add(rect);
	        rect.setCoords();
	        canvas.renderAll();
	        canvas.on('mouse:move', drawBox);
	        canvas.on('mouse:up', drawBoxDone);
	    }

	    function mouseClick(options) {
	        notify('inactive');
	        detachBoxListener();
	    }

	    function attachBoxListener(topic, sender, payload) {
	        if (payload === 'toolbar-deactivate') {
	            done();
	            return;
	        }
	        eventAggregator.subscribeTo('keydown', 'BoxTool', function (topic, sender, keyCode) {
	            if (keyCode === 27) {
	                done();
	            }
	        });
	        canvas.selection = false; // Disable fabricjs selection-box
	        canvas.forEachObject(function (o) {
	            o.selectable = false;
	        });
	        notify('active');

	        canvas.on('mouse:down', mouseDown);
	    }
	};

	exports['default'] = BoxTool;
	module.exports = exports['default'];

/***/ },
/* 653 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
		value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _canvasConstJs = __webpack_require__(6);

	var _canvasConstJs2 = _interopRequireDefault(_canvasConstJs);

	var ResetTool = function ResetTool(canvasWrapper, eventAggregator) {
		_classCallCheck(this, ResetTool);

		eventAggregator.subscribeTo(_canvasConstJs2['default'].TOOL.CLEAR, 'ResetTool', initClear);
		function initClear(topic, sender, payload) {
			if (payload !== 'toolbar-deactivate' && confirm('This will restore your image to its default state.\nAll your modifications will be deleted.\nDo you want to continue?')) {
				clearAllElements();
			}
		}

		function clearAllElements() {
			var c = canvasWrapper.canvas;
			var all = c.getObjects();
			for (var i = all.length - 1; i >= 0; i--) {
				c.remove(all[i]);
			}
		}
	};

	exports['default'] = ResetTool;
	module.exports = exports['default'];

/***/ },
/* 654 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _canvasConstJs = __webpack_require__(6);

	var _canvasConstJs2 = _interopRequireDefault(_canvasConstJs);

	var DumpTool = function DumpTool(canvasWrapper, eventAggregator) {
	    _classCallCheck(this, DumpTool);

	    eventAggregator.subscribeTo(_canvasConstJs2['default'].TOOL.DUMP, 'DumpTool', dumpJson);
	    function dumpJson() {
	        var oContainer = document.querySelector('#dumpArea');

	        oContainer.innerHTML = JSON.stringify(canvas, null, 2);
	        oContainer.className = oContainer.className.indexOf('active') >= 0 ? '' : 'active';
	    };
	};

	exports['default'] = DumpTool;
	module.exports = exports['default'];

/***/ },
/* 655 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _canvasConstJs = __webpack_require__(6);

	var _canvasConstJs2 = _interopRequireDefault(_canvasConstJs);

	var HorizontalLineTool = function HorizontalLineTool(canvasWrapper, eventAggregator) {
	    _classCallCheck(this, HorizontalLineTool);

	    var movingRect;
	    var canvas = canvasWrapper.canvas;
	    eventAggregator.subscribeTo(_canvasConstJs2['default'].TOOL.HLINE, 'HorizontalLineTool', _HorizontalLineTool);

	    function notify(message) {
	        eventAggregator.notify('TOOL_USAGE', _canvasConstJs2['default'].TOOL.HLINE, message);
	    }

	    function createLineRect() {
	        return new fabric.Rect({
	            left: 0,
	            top: 1,
	            width: canvasWrapper.getWidth(),
	            height: 2,
	            fill: '#000',
	            opacity: 0.7,
	            hasControls: false,
	            hasBorders: true
	        });
	    }

	    function _HorizontalLineTool(addr, sender, action) {
	        if (action !== 'toolbar-click') {
	            abort();
	            return;
	        }
	        notify('active');
	        movingRect = createLineRect();
	        eventAggregator.subscribeTo('keydown', 'HLineTool', function (topic, sender, keyCode) {
	            if (keyCode === 27) {
	                abort();
	            }
	        });

	        function abort() {
	            canvas.remove(movingRect);
	            movingRect = undefined;
	            eventAggregator.unsubscribe('HLineTool');

	            detachHLineListener();
	            notify('inactive');
	        }

	        var onRectMove = function onRectMove(ctx) {
	            if (movingRect) {
	                movingRect.set({
	                    'left': 0
	                });
	            }
	        };
	        movingRect.on('moving', onRectMove);

	        canvas.add(movingRect);

	        var onMove = function onMove(options) {
	            if (movingRect) {
	                movingRect.set({
	                    'top': options.e.clientY - canvasWrapper.getOffsetTop()
	                });
	                movingRect.setCoords();
	                canvas.renderAll();
	            }
	        };
	        canvas.on('mouse:move', onMove);

	        function detachHLineListener() {

	            canvas.off('mouse:move', onMove);
	            canvas.off('mouse:up', onMUP);
	        }

	        var onMUP = function onMUP(options) {
	            movingRect.fill = '#666';
	            movingRect = createLineRect();
	            canvas.add(movingRect);
	        };

	        canvas.on('mouse:up', onMUP);
	    };
	};

	exports['default'] = HorizontalLineTool;
	module.exports = exports['default'];

/***/ },
/* 656 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _canvasConstJs = __webpack_require__(6);

	var _canvasConstJs2 = _interopRequireDefault(_canvasConstJs);

	var RemoveTool = function RemoveTool(canvasWrapper, eventAggregator) {
	    _classCallCheck(this, RemoveTool);

	    var remove = function remove() {
	        var c = canvasWrapper.canvas;
	        if (c.getActiveObject()) {
	            c.remove(c.getActiveObject());
	        }
	    };

	    eventAggregator.subscribeTo(_canvasConstJs2['default'].TOOL.REMOVE, 'RemoveTool', remove);
	    eventAggregator.subscribe('RemoveTool', function (eventType, keyCode) {
	        if (eventType === 'keydown' && keyCode === 46) {
	            remove();
	        }
	    });
	};

	exports['default'] = RemoveTool;
	module.exports = exports['default'];

/***/ },
/* 657 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _canvasConstJs = __webpack_require__(6);

	var _canvasConstJs2 = _interopRequireDefault(_canvasConstJs);

	var editorHeight = 30;
	var editor, canvas;

	var TextTool = function TextTool(canvasWrapper, eventAggregator) {
	    _classCallCheck(this, TextTool);

	    canvas = canvasWrapper.canvas;
	    eventAggregator.subscribeTo(_canvasConstJs2['default'].TOOL.TEXT, 'TextTool', textTool);
	    eventAggregator.subscribeTo('keydown', 'TextTool', function (topic, sender, keyCode) {
	        if (keyCode === 27) {
	            abort();
	        }
	    });

	    function notify(message) {
	        eventAggregator.notify('TOOL_USAGE', _canvasConstJs2['default'].TOOL.TEXT, message);
	    }

	    function abort() {
	        if (editor) {
	            canvas.remove(editor);
	            editor = undefined;
	            notify('inactive');
	        }
	    }
	    function textTool(topic, sender, payload) {
	        if (payload !== 'toolbar-click') {
	            abort();
	            return;
	        }
	        notify('active');
	        editor = new fabric.IText('Click to leave a comment', {
	            fontFamily: 'arial black',
	            fontSize: 18,
	            left: 100,
	            top: -40,
	            hasControls: false
	        });

	        canvas.add(editor);

	        var onMove = function onMove(options) {
	            if (editor) {
	                editor.set({
	                    'top': options.e.clientY - canvasWrapper.getOffsetTop()
	                });
	                editor.set({
	                    'left': options.e.clientX - canvasWrapper.getOffsetLeft()
	                });
	                editor.setCoords();
	                canvas.renderAll();
	            }
	        };
	        canvas.on('mouse:move', onMove);

	        function detachTextListener() {
	            if (editor) {
	                canvas.off('mouse:move', onMove);
	                canvas.off('mouse:up', detachTextListener);
	                editor.setCoords();
	                editor = undefined;
	                canvas.renderAll();
	                notify('inactive');
	            }
	        }
	        canvas.on('mouse:up', detachTextListener);
	    }
	};

	exports['default'] = TextTool;
	module.exports = exports['default'];

/***/ },
/* 658 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var _canvasConstJs = __webpack_require__(6);

	var _canvasConstJs2 = _interopRequireDefault(_canvasConstJs);

	var tools = [{ id: 'action_box', content: '<i class="fa fa-square-o"></i>', address: _canvasConstJs2['default'].TOOL.BOX }, { id: 'action_arrow', content: '<i class="fa fa-long-arrow-right"></i>', address: _canvasConstJs2['default'].TOOL.ARROW }, { id: 'action_hline', content: '<i class="fa fa-minus-square-o"></i>', address: _canvasConstJs2['default'].TOOL.HLINE }, { id: 'action_text', content: '<i class="fa fa-font"></i>', address: _canvasConstJs2['default'].TOOL.TEXT }, { id: 'action_remove', content: '<i class="fa fa-trash-o"></i>', address: _canvasConstJs2['default'].TOOL.REMOVE }, { id: 'action_clear', content: '<i class="fa fa-bar-chart"></i>', address: _canvasConstJs2['default'].TOOL.CLEAR }, { id: 'action_dump', content: '<i class="fa fa-floppy-o"></i>', address: _canvasConstJs2['default'].TOOL.DUMP }];

	function findTool(_address) {
	    for (var i in tools) {
	        if (tools[i].address === _address) {
	            return tools[i];
	        }
	    }
	}

	var HorizontalBar = function HorizontalBar(eventAggregator, rootNode) {
	    _classCallCheck(this, HorizontalBar);

	    var activeTool;
	    function notifyActive(topic) {
	        return function () {
	            if (activeTool) {
	                eventAggregator.notify(activeTool, 'toolbar', 'toolbar-deactivate');
	            }
	            if (activeTool !== topic) {
	                activeTool = topic;
	                eventAggregator.notify(topic, 'toolbar', 'toolbar-click');
	            } else {
	                activeTool = undefined;
	            }
	        };
	    }
	    var div = document.createElement('div');
	    div.id = 'toolbar';

	    rootNode.insertBefore(div, rootNode.childNodes[0]);

	    var ul = document.createElement('ul');
	    div.appendChild(ul);
	    for (var i in tools) {
	        var t = document.createElement('li');
	        t.id = tools[i].id;
	        t.innerHTML = tools[i].content;
	        t.onclick = notifyActive(tools[i].address);

	        ul.appendChild(t);
	    }

	    eventAggregator.subscribeTo('TOOL_USAGE', 'toolbar', function (subscriptionId, sender, status) {
	        var currTool = findTool(sender);

	        if (status !== 'active') {
	            if (sender === activeTool) {
	                activeTool = undefined;
	            }
	            document.getElementById(currTool.id).className = '';
	        } else {
	            document.getElementById(currTool.id).className = 'active';
	        }
	    });

	    document.onkeydown = function (e) {
	        if (e.keyCode === 46 || e.keyCode === 27) {
	            eventAggregator.notify('keydown', 'toolbar', e.keyCode);
	        }
	    };
	};

	exports['default'] = HorizontalBar;
	module.exports = exports['default'];

/***/ },
/* 659 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

	var _srcJsToolsArrowJs = __webpack_require__(5);

	var _srcJsToolsArrowJs2 = _interopRequireDefault(_srcJsToolsArrowJs);

	var chai = __webpack_require__(660);
	var expect = chai.expect;

	var expect = chai.expect;

	var rewire = __webpack_require__(692);

	var fab = rewire(693);
	fab.fabric = {};
	fab.__set__("isTest", true);

	describe('ArrowTool', function () {
		var canvasWrapper = {},
		    eventAggregator = {};
		var subscriptionTopic = undefined,
		    subscriberId = undefined,
		    toolbarSubscriptionFn = undefined,
		    arrowTool = undefined,
		    notificationTopic = undefined;;

		eventAggregator.subscribeTo = function (topic, _subscriberId, callback) {
			subscriptionTopic = topic;
			subscriberId = _subscriberId;
			toolbarSubscriptionFn = callback;
		};

		eventAggregator.notify = function (_topic, originId, message) {
			notificationTopic = _topic;
		};

		describe('should register for toolbar event', function () {
			it('with parameter topicName "arr_t"', function () {
				arrowTool = new _srcJsToolsArrowJs2['default'](canvasWrapper, eventAggregator);
				expect(subscriptionTopic).to.equal('arr_t');
			});

			it('with parameter subscriber "ArrowTool"', function () {
				arrowTool = new _srcJsToolsArrowJs2['default'](canvasWrapper, eventAggregator);
				expect(subscriberId).to.equal('ArrowTool');
			});
		});

		describe('upon toolbar activation', function () {

			beforeEach(function () {
				window.fabric = { Line: function Line() {} };
				arrowTool = new _srcJsToolsArrowJs2['default'](canvasWrapper, eventAggregator);
				toolbarSubscriptionFn.apply(toolbarSubscriptionFn, []);
			});

			it('should register for keydown event', function () {

				expect(subscriptionTopic).to.equal('keydown');
				expect(subscriberId).to.equal('ArrowTool');
			});
		});
	});

/***/ },
/* 660 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(661);


/***/ },
/* 661 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	var used = []
	  , exports = module.exports = {};

	/*!
	 * Chai version
	 */

	exports.version = '1.10.0';

	/*!
	 * Assertion Error
	 */

	exports.AssertionError = __webpack_require__(662);

	/*!
	 * Utils for plugins (not exported)
	 */

	var util = __webpack_require__(663);

	/**
	 * # .use(function)
	 *
	 * Provides a way to extend the internals of Chai
	 *
	 * @param {Function}
	 * @returns {this} for chaining
	 * @api public
	 */

	exports.use = function (fn) {
	  if (!~used.indexOf(fn)) {
	    fn(this, util);
	    used.push(fn);
	  }

	  return this;
	};

	/*!
	 * Configuration
	 */

	var config = __webpack_require__(674);
	exports.config = config;

	/*!
	 * Primary `Assertion` prototype
	 */

	var assertion = __webpack_require__(687);
	exports.use(assertion);

	/*!
	 * Core Assertions
	 */

	var core = __webpack_require__(688);
	exports.use(core);

	/*!
	 * Expect interface
	 */

	var expect = __webpack_require__(689);
	exports.use(expect);

	/*!
	 * Should interface
	 */

	var should = __webpack_require__(690);
	exports.use(should);

	/*!
	 * Assert interface
	 */

	var assert = __webpack_require__(691);
	exports.use(assert);


/***/ },
/* 662 */
/***/ function(module, exports) {

	/*!
	 * assertion-error
	 * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>
	 * MIT Licensed
	 */

	/*!
	 * Return a function that will copy properties from
	 * one object to another excluding any originally
	 * listed. Returned function will create a new `{}`.
	 *
	 * @param {String} excluded properties ...
	 * @return {Function}
	 */

	function exclude () {
	  var excludes = [].slice.call(arguments);

	  function excludeProps (res, obj) {
	    Object.keys(obj).forEach(function (key) {
	      if (!~excludes.indexOf(key)) res[key] = obj[key];
	    });
	  }

	  return function extendExclude () {
	    var args = [].slice.call(arguments)
	      , i = 0
	      , res = {};

	    for (; i < args.length; i++) {
	      excludeProps(res, args[i]);
	    }

	    return res;
	  };
	};

	/*!
	 * Primary Exports
	 */

	module.exports = AssertionError;

	/**
	 * ### AssertionError
	 *
	 * An extension of the JavaScript `Error` constructor for
	 * assertion and validation scenarios.
	 *
	 * @param {String} message
	 * @param {Object} properties to include (optional)
	 * @param {callee} start stack function (optional)
	 */

	function AssertionError (message, _props, ssf) {
	  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')
	    , props = extend(_props || {});

	  // default values
	  this.message = message || 'Unspecified AssertionError';
	  this.showDiff = false;

	  // copy from properties
	  for (var key in props) {
	    this[key] = props[key];
	  }

	  // capture stack trace
	  ssf = ssf || arguments.callee;
	  if (ssf && Error.captureStackTrace) {
	    Error.captureStackTrace(this, ssf);
	  }
	}

	/*!
	 * Inherit from Error.prototype
	 */

	AssertionError.prototype = Object.create(Error.prototype);

	/*!
	 * Statically set name
	 */

	AssertionError.prototype.name = 'AssertionError';

	/*!
	 * Ensure correct constructor
	 */

	AssertionError.prototype.constructor = AssertionError;

	/**
	 * Allow errors to be converted to JSON for static transfer.
	 *
	 * @param {Boolean} include stack (default: `true`)
	 * @return {Object} object that can be `JSON.stringify`
	 */

	AssertionError.prototype.toJSON = function (stack) {
	  var extend = exclude('constructor', 'toJSON', 'stack')
	    , props = extend({ name: this.name }, this);

	  // include stack if exists and not turned off
	  if (false !== stack && this.stack) {
	    props.stack = this.stack;
	  }

	  return props;
	};


/***/ },
/* 663 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * chai
	 * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Main exports
	 */

	var exports = module.exports = {};

	/*!
	 * test utility
	 */

	exports.test = __webpack_require__(664);

	/*!
	 * type utility
	 */

	exports.type = __webpack_require__(666);

	/*!
	 * message utility
	 */

	exports.getMessage = __webpack_require__(667);

	/*!
	 * actual utility
	 */

	exports.getActual = __webpack_require__(668);

	/*!
	 * Inspect util
	 */

	exports.inspect = __webpack_require__(669);

	/*!
	 * Object Display util
	 */

	exports.objDisplay = __webpack_require__(673);

	/*!
	 * Flag utility
	 */

	exports.flag = __webpack_require__(665);

	/*!
	 * Flag transferring utility
	 */

	exports.transferFlags = __webpack_require__(675);

	/*!
	 * Deep equal utility
	 */

	exports.eql = __webpack_require__(676);

	/*!
	 * Deep path value
	 */

	exports.getPathValue = __webpack_require__(680);

	/*!
	 * Function name
	 */

	exports.getName = __webpack_require__(670);

	/*!
	 * add Property
	 */

	exports.addProperty = __webpack_require__(681);

	/*!
	 * add Method
	 */

	exports.addMethod = __webpack_require__(682);

	/*!
	 * overwrite Property
	 */

	exports.overwriteProperty = __webpack_require__(683);

	/*!
	 * overwrite Method
	 */

	exports.overwriteMethod = __webpack_require__(684);

	/*!
	 * Add a chainable method
	 */

	exports.addChainableMethod = __webpack_require__(685);

	/*!
	 * Overwrite chainable method
	 */

	exports.overwriteChainableMethod = __webpack_require__(686);



/***/ },
/* 664 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - test utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Module dependancies
	 */

	var flag = __webpack_require__(665);

	/**
	 * # test(object, expression)
	 *
	 * Test and object for expression.
	 *
	 * @param {Object} object (constructed Assertion)
	 * @param {Arguments} chai.Assertion.prototype.assert arguments
	 */

	module.exports = function (obj, args) {
	  var negate = flag(obj, 'negate')
	    , expr = args[0];
	  return negate ? !expr : expr;
	};


/***/ },
/* 665 */
/***/ function(module, exports) {

	/*!
	 * Chai - flag utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### flag(object ,key, [value])
	 *
	 * Get or set a flag value on an object. If a
	 * value is provided it will be set, else it will
	 * return the currently set value or `undefined` if
	 * the value is not set.
	 *
	 *     utils.flag(this, 'foo', 'bar'); // setter
	 *     utils.flag(this, 'foo'); // getter, returns `bar`
	 *
	 * @param {Object} object (constructed Assertion
	 * @param {String} key
	 * @param {Mixed} value (optional)
	 * @name flag
	 * @api private
	 */

	module.exports = function (obj, key, value) {
	  var flags = obj.__flags || (obj.__flags = Object.create(null));
	  if (arguments.length === 3) {
	    flags[key] = value;
	  } else {
	    return flags[key];
	  }
	};


/***/ },
/* 666 */
/***/ function(module, exports) {

	/*!
	 * Chai - type utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Detectable javascript natives
	 */

	var natives = {
	    '[object Arguments]': 'arguments'
	  , '[object Array]': 'array'
	  , '[object Date]': 'date'
	  , '[object Function]': 'function'
	  , '[object Number]': 'number'
	  , '[object RegExp]': 'regexp'
	  , '[object String]': 'string'
	};

	/**
	 * ### type(object)
	 *
	 * Better implementation of `typeof` detection that can
	 * be used cross-browser. Handles the inconsistencies of
	 * Array, `null`, and `undefined` detection.
	 *
	 *     utils.type({}) // 'object'
	 *     utils.type(null) // `null'
	 *     utils.type(undefined) // `undefined`
	 *     utils.type([]) // `array`
	 *
	 * @param {Mixed} object to detect type of
	 * @name type
	 * @api private
	 */

	module.exports = function (obj) {
	  var str = Object.prototype.toString.call(obj);
	  if (natives[str]) return natives[str];
	  if (obj === null) return 'null';
	  if (obj === undefined) return 'undefined';
	  if (obj === Object(obj)) return 'object';
	  return typeof obj;
	};


/***/ },
/* 667 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - message composition utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Module dependancies
	 */

	var flag = __webpack_require__(665)
	  , getActual = __webpack_require__(668)
	  , inspect = __webpack_require__(669)
	  , objDisplay = __webpack_require__(673);

	/**
	 * ### .getMessage(object, message, negateMessage)
	 *
	 * Construct the error message based on flags
	 * and template tags. Template tags will return
	 * a stringified inspection of the object referenced.
	 *
	 * Message template tags:
	 * - `#{this}` current asserted object
	 * - `#{act}` actual value
	 * - `#{exp}` expected value
	 *
	 * @param {Object} object (constructed Assertion)
	 * @param {Arguments} chai.Assertion.prototype.assert arguments
	 * @name getMessage
	 * @api public
	 */

	module.exports = function (obj, args) {
	  var negate = flag(obj, 'negate')
	    , val = flag(obj, 'object')
	    , expected = args[3]
	    , actual = getActual(obj, args)
	    , msg = negate ? args[2] : args[1]
	    , flagMsg = flag(obj, 'message');

	  if(typeof msg === "function") msg = msg();
	  msg = msg || '';
	  msg = msg
	    .replace(/#{this}/g, objDisplay(val))
	    .replace(/#{act}/g, objDisplay(actual))
	    .replace(/#{exp}/g, objDisplay(expected));

	  return flagMsg ? flagMsg + ': ' + msg : msg;
	};


/***/ },
/* 668 */
/***/ function(module, exports) {

	/*!
	 * Chai - getActual utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * # getActual(object, [actual])
	 *
	 * Returns the `actual` value for an Assertion
	 *
	 * @param {Object} object (constructed Assertion)
	 * @param {Arguments} chai.Assertion.prototype.assert arguments
	 */

	module.exports = function (obj, args) {
	  return args.length > 4 ? args[4] : obj._obj;
	};


/***/ },
/* 669 */
/***/ function(module, exports, __webpack_require__) {

	// This is (almost) directly from Node.js utils
	// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js

	var getName = __webpack_require__(670);
	var getProperties = __webpack_require__(671);
	var getEnumerableProperties = __webpack_require__(672);

	module.exports = inspect;

	/**
	 * Echos the value of a value. Trys to print the value out
	 * in the best way possible given the different types.
	 *
	 * @param {Object} obj The object to print out.
	 * @param {Boolean} showHidden Flag that shows hidden (not enumerable)
	 *    properties of objects.
	 * @param {Number} depth Depth in which to descend in object. Default is 2.
	 * @param {Boolean} colors Flag to turn on ANSI escape codes to color the
	 *    output. Default is false (no coloring).
	 */
	function inspect(obj, showHidden, depth, colors) {
	  var ctx = {
	    showHidden: showHidden,
	    seen: [],
	    stylize: function (str) { return str; }
	  };
	  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));
	}

	// Returns true if object is a DOM element.
	var isDOMElement = function (object) {
	  if (typeof HTMLElement === 'object') {
	    return object instanceof HTMLElement;
	  } else {
	    return object &&
	      typeof object === 'object' &&
	      object.nodeType === 1 &&
	      typeof object.nodeName === 'string';
	  }
	};

	function formatValue(ctx, value, recurseTimes) {
	  // Provide a hook for user-specified inspect functions.
	  // Check that value is an object with an inspect function on it
	  if (value && typeof value.inspect === 'function' &&
	      // Filter out the util module, it's inspect function is special
	      value.inspect !== exports.inspect &&
	      // Also filter out any prototype objects using the circular check.
	      !(value.constructor && value.constructor.prototype === value)) {
	    var ret = value.inspect(recurseTimes);
	    if (typeof ret !== 'string') {
	      ret = formatValue(ctx, ret, recurseTimes);
	    }
	    return ret;
	  }

	  // Primitive types cannot have properties
	  var primitive = formatPrimitive(ctx, value);
	  if (primitive) {
	    return primitive;
	  }

	  // If this is a DOM element, try to get the outer HTML.
	  if (isDOMElement(value)) {
	    if ('outerHTML' in value) {
	      return value.outerHTML;
	      // This value does not have an outerHTML attribute,
	      //   it could still be an XML element
	    } else {
	      // Attempt to serialize it
	      try {
	        if (document.xmlVersion) {
	          var xmlSerializer = new XMLSerializer();
	          return xmlSerializer.serializeToString(value);
	        } else {
	          // Firefox 11- do not support outerHTML
	          //   It does, however, support innerHTML
	          //   Use the following to render the element
	          var ns = "http://www.w3.org/1999/xhtml";
	          var container = document.createElementNS(ns, '_');

	          container.appendChild(value.cloneNode(false));
	          html = container.innerHTML
	            .replace('><', '>' + value.innerHTML + '<');
	          container.innerHTML = '';
	          return html;
	        }
	      } catch (err) {
	        // This could be a non-native DOM implementation,
	        //   continue with the normal flow:
	        //   printing the element as if it is an object.
	      }
	    }
	  }

	  // Look up the keys of the object.
	  var visibleKeys = getEnumerableProperties(value);
	  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;

	  // Some type of object without properties can be shortcutted.
	  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,
	  // a `stack` plus `description` property; ignore those for consistency.
	  if (keys.length === 0 || (isError(value) && (
	      (keys.length === 1 && keys[0] === 'stack') ||
	      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')
	     ))) {
	    if (typeof value === 'function') {
	      var name = getName(value);
	      var nameSuffix = name ? ': ' + name : '';
	      return ctx.stylize('[Function' + nameSuffix + ']', 'special');
	    }
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    }
	    if (isDate(value)) {
	      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');
	    }
	    if (isError(value)) {
	      return formatError(value);
	    }
	  }

	  var base = '', array = false, braces = ['{', '}'];

	  // Make Array say that they are Array
	  if (isArray(value)) {
	    array = true;
	    braces = ['[', ']'];
	  }

	  // Make functions say that they are functions
	  if (typeof value === 'function') {
	    var name = getName(value);
	    var nameSuffix = name ? ': ' + name : '';
	    base = ' [Function' + nameSuffix + ']';
	  }

	  // Make RegExps say that they are RegExps
	  if (isRegExp(value)) {
	    base = ' ' + RegExp.prototype.toString.call(value);
	  }

	  // Make dates with properties first say the date
	  if (isDate(value)) {
	    base = ' ' + Date.prototype.toUTCString.call(value);
	  }

	  // Make error with message first say the error
	  if (isError(value)) {
	    return formatError(value);
	  }

	  if (keys.length === 0 && (!array || value.length == 0)) {
	    return braces[0] + base + braces[1];
	  }

	  if (recurseTimes < 0) {
	    if (isRegExp(value)) {
	      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');
	    } else {
	      return ctx.stylize('[Object]', 'special');
	    }
	  }

	  ctx.seen.push(value);

	  var output;
	  if (array) {
	    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);
	  } else {
	    output = keys.map(function(key) {
	      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);
	    });
	  }

	  ctx.seen.pop();

	  return reduceToSingleString(output, base, braces);
	}


	function formatPrimitive(ctx, value) {
	  switch (typeof value) {
	    case 'undefined':
	      return ctx.stylize('undefined', 'undefined');

	    case 'string':
	      var simple = '\'' + JSON.stringify(value).replace(/^"|"$/g, '')
	                                               .replace(/'/g, "\\'")
	                                               .replace(/\\"/g, '"') + '\'';
	      return ctx.stylize(simple, 'string');

	    case 'number':
	      if (value === 0 && (1/value) === -Infinity) {
	        return ctx.stylize('-0', 'number');
	      }
	      return ctx.stylize('' + value, 'number');

	    case 'boolean':
	      return ctx.stylize('' + value, 'boolean');
	  }
	  // For some reason typeof null is "object", so special case here.
	  if (value === null) {
	    return ctx.stylize('null', 'null');
	  }
	}


	function formatError(value) {
	  return '[' + Error.prototype.toString.call(value) + ']';
	}


	function formatArray(ctx, value, recurseTimes, visibleKeys, keys) {
	  var output = [];
	  for (var i = 0, l = value.length; i < l; ++i) {
	    if (Object.prototype.hasOwnProperty.call(value, String(i))) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          String(i), true));
	    } else {
	      output.push('');
	    }
	  }
	  keys.forEach(function(key) {
	    if (!key.match(/^\d+$/)) {
	      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,
	          key, true));
	    }
	  });
	  return output;
	}


	function formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {
	  var name, str;
	  if (value.__lookupGetter__) {
	    if (value.__lookupGetter__(key)) {
	      if (value.__lookupSetter__(key)) {
	        str = ctx.stylize('[Getter/Setter]', 'special');
	      } else {
	        str = ctx.stylize('[Getter]', 'special');
	      }
	    } else {
	      if (value.__lookupSetter__(key)) {
	        str = ctx.stylize('[Setter]', 'special');
	      }
	    }
	  }
	  if (visibleKeys.indexOf(key) < 0) {
	    name = '[' + key + ']';
	  }
	  if (!str) {
	    if (ctx.seen.indexOf(value[key]) < 0) {
	      if (recurseTimes === null) {
	        str = formatValue(ctx, value[key], null);
	      } else {
	        str = formatValue(ctx, value[key], recurseTimes - 1);
	      }
	      if (str.indexOf('\n') > -1) {
	        if (array) {
	          str = str.split('\n').map(function(line) {
	            return '  ' + line;
	          }).join('\n').substr(2);
	        } else {
	          str = '\n' + str.split('\n').map(function(line) {
	            return '   ' + line;
	          }).join('\n');
	        }
	      }
	    } else {
	      str = ctx.stylize('[Circular]', 'special');
	    }
	  }
	  if (typeof name === 'undefined') {
	    if (array && key.match(/^\d+$/)) {
	      return str;
	    }
	    name = JSON.stringify('' + key);
	    if (name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)) {
	      name = name.substr(1, name.length - 2);
	      name = ctx.stylize(name, 'name');
	    } else {
	      name = name.replace(/'/g, "\\'")
	                 .replace(/\\"/g, '"')
	                 .replace(/(^"|"$)/g, "'");
	      name = ctx.stylize(name, 'string');
	    }
	  }

	  return name + ': ' + str;
	}


	function reduceToSingleString(output, base, braces) {
	  var numLinesEst = 0;
	  var length = output.reduce(function(prev, cur) {
	    numLinesEst++;
	    if (cur.indexOf('\n') >= 0) numLinesEst++;
	    return prev + cur.length + 1;
	  }, 0);

	  if (length > 60) {
	    return braces[0] +
	           (base === '' ? '' : base + '\n ') +
	           ' ' +
	           output.join(',\n  ') +
	           ' ' +
	           braces[1];
	  }

	  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];
	}

	function isArray(ar) {
	  return Array.isArray(ar) ||
	         (typeof ar === 'object' && objectToString(ar) === '[object Array]');
	}

	function isRegExp(re) {
	  return typeof re === 'object' && objectToString(re) === '[object RegExp]';
	}

	function isDate(d) {
	  return typeof d === 'object' && objectToString(d) === '[object Date]';
	}

	function isError(e) {
	  return typeof e === 'object' && objectToString(e) === '[object Error]';
	}

	function objectToString(o) {
	  return Object.prototype.toString.call(o);
	}


/***/ },
/* 670 */
/***/ function(module, exports) {

	/*!
	 * Chai - getName utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * # getName(func)
	 *
	 * Gets the name of a function, in a cross-browser way.
	 *
	 * @param {Function} a function (usually a constructor)
	 */

	module.exports = function (func) {
	  if (func.name) return func.name;

	  var match = /^\s?function ([^(]*)\(/.exec(func);
	  return match && match[1] ? match[1] : "";
	};


/***/ },
/* 671 */
/***/ function(module, exports) {

	/*!
	 * Chai - getProperties utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### .getProperties(object)
	 *
	 * This allows the retrieval of property names of an object, enumerable or not,
	 * inherited or not.
	 *
	 * @param {Object} object
	 * @returns {Array}
	 * @name getProperties
	 * @api public
	 */

	module.exports = function getProperties(object) {
	  var result = Object.getOwnPropertyNames(subject);

	  function addProperty(property) {
	    if (result.indexOf(property) === -1) {
	      result.push(property);
	    }
	  }

	  var proto = Object.getPrototypeOf(subject);
	  while (proto !== null) {
	    Object.getOwnPropertyNames(proto).forEach(addProperty);
	    proto = Object.getPrototypeOf(proto);
	  }

	  return result;
	};


/***/ },
/* 672 */
/***/ function(module, exports) {

	/*!
	 * Chai - getEnumerableProperties utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### .getEnumerableProperties(object)
	 *
	 * This allows the retrieval of enumerable property names of an object,
	 * inherited or not.
	 *
	 * @param {Object} object
	 * @returns {Array}
	 * @name getEnumerableProperties
	 * @api public
	 */

	module.exports = function getEnumerableProperties(object) {
	  var result = [];
	  for (var name in object) {
	    result.push(name);
	  }
	  return result;
	};


/***/ },
/* 673 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - flag utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Module dependancies
	 */

	var inspect = __webpack_require__(669);
	var config = __webpack_require__(674);

	/**
	 * ### .objDisplay (object)
	 *
	 * Determines if an object or an array matches
	 * criteria to be inspected in-line for error
	 * messages or should be truncated.
	 *
	 * @param {Mixed} javascript object to inspect
	 * @name objDisplay
	 * @api public
	 */

	module.exports = function (obj) {
	  var str = inspect(obj)
	    , type = Object.prototype.toString.call(obj);

	  if (config.truncateThreshold && str.length >= config.truncateThreshold) {
	    if (type === '[object Function]') {
	      return !obj.name || obj.name === ''
	        ? '[Function]'
	        : '[Function: ' + obj.name + ']';
	    } else if (type === '[object Array]') {
	      return '[ Array(' + obj.length + ') ]';
	    } else if (type === '[object Object]') {
	      var keys = Object.keys(obj)
	        , kstr = keys.length > 2
	          ? keys.splice(0, 2).join(', ') + ', ...'
	          : keys.join(', ');
	      return '{ Object (' + kstr + ') }';
	    } else {
	      return str;
	    }
	  } else {
	    return str;
	  }
	};


/***/ },
/* 674 */
/***/ function(module, exports) {

	module.exports = {

	  /**
	   * ### config.includeStack
	   *
	   * User configurable property, influences whether stack trace
	   * is included in Assertion error message. Default of false
	   * suppresses stack trace in the error message.
	   *
	   *     chai.config.includeStack = true;  // enable stack on error
	   *
	   * @param {Boolean}
	   * @api public
	   */

	   includeStack: false,

	  /**
	   * ### config.showDiff
	   *
	   * User configurable property, influences whether or not
	   * the `showDiff` flag should be included in the thrown
	   * AssertionErrors. `false` will always be `false`; `true`
	   * will be true when the assertion has requested a diff
	   * be shown.
	   *
	   * @param {Boolean}
	   * @api public
	   */

	  showDiff: true,

	  /**
	   * ### config.truncateThreshold
	   *
	   * User configurable property, sets length threshold for actual and
	   * expected values in assertion errors. If this threshold is exceeded,
	   * the value is truncated.
	   *
	   * Set it to zero if you want to disable truncating altogether.
	   *
	   *     chai.config.truncateThreshold = 0;  // disable truncating
	   *
	   * @param {Number}
	   * @api public
	   */

	  truncateThreshold: 40

	};


/***/ },
/* 675 */
/***/ function(module, exports) {

	/*!
	 * Chai - transferFlags utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### transferFlags(assertion, object, includeAll = true)
	 *
	 * Transfer all the flags for `assertion` to `object`. If
	 * `includeAll` is set to `false`, then the base Chai
	 * assertion flags (namely `object`, `ssfi`, and `message`)
	 * will not be transferred.
	 *
	 *
	 *     var newAssertion = new Assertion();
	 *     utils.transferFlags(assertion, newAssertion);
	 *
	 *     var anotherAsseriton = new Assertion(myObj);
	 *     utils.transferFlags(assertion, anotherAssertion, false);
	 *
	 * @param {Assertion} assertion the assertion to transfer the flags from
	 * @param {Object} object the object to transfer the flags too; usually a new assertion
	 * @param {Boolean} includeAll
	 * @name getAllFlags
	 * @api private
	 */

	module.exports = function (assertion, object, includeAll) {
	  var flags = assertion.__flags || (assertion.__flags = Object.create(null));

	  if (!object.__flags) {
	    object.__flags = Object.create(null);
	  }

	  includeAll = arguments.length === 3 ? includeAll : true;

	  for (var flag in flags) {
	    if (includeAll ||
	        (flag !== 'object' && flag !== 'ssfi' && flag != 'message')) {
	      object.__flags[flag] = flags[flag];
	    }
	  }
	};


/***/ },
/* 676 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(677);


/***/ },
/* 677 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * deep-eql
	 * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Module dependencies
	 */

	var type = __webpack_require__(678);

	/*!
	 * Buffer.isBuffer browser shim
	 */

	var Buffer;
	try { Buffer = __webpack_require__(484).Buffer; }
	catch(ex) {
	  Buffer = {};
	  Buffer.isBuffer = function() { return false; }
	}

	/*!
	 * Primary Export
	 */

	module.exports = deepEqual;

	/**
	 * Assert super-strict (egal) equality between
	 * two objects of any type.
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @param {Array} memoised (optional)
	 * @return {Boolean} equal match
	 */

	function deepEqual(a, b, m) {
	  if (sameValue(a, b)) {
	    return true;
	  } else if ('date' === type(a)) {
	    return dateEqual(a, b);
	  } else if ('regexp' === type(a)) {
	    return regexpEqual(a, b);
	  } else if (Buffer.isBuffer(a)) {
	    return bufferEqual(a, b);
	  } else if ('arguments' === type(a)) {
	    return argumentsEqual(a, b, m);
	  } else if (!typeEqual(a, b)) {
	    return false;
	  } else if (('object' !== type(a) && 'object' !== type(b))
	  && ('array' !== type(a) && 'array' !== type(b))) {
	    return sameValue(a, b);
	  } else {
	    return objectEqual(a, b, m);
	  }
	}

	/*!
	 * Strict (egal) equality test. Ensures that NaN always
	 * equals NaN and `-0` does not equal `+0`.
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} equal match
	 */

	function sameValue(a, b) {
	  if (a === b) return a !== 0 || 1 / a === 1 / b;
	  return a !== a && b !== b;
	}

	/*!
	 * Compare the types of two given objects and
	 * return if they are equal. Note that an Array
	 * has a type of `array` (not `object`) and arguments
	 * have a type of `arguments` (not `array`/`object`).
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */

	function typeEqual(a, b) {
	  return type(a) === type(b);
	}

	/*!
	 * Compare two Date objects by asserting that
	 * the time values are equal using `saveValue`.
	 *
	 * @param {Date} a
	 * @param {Date} b
	 * @return {Boolean} result
	 */

	function dateEqual(a, b) {
	  if ('date' !== type(b)) return false;
	  return sameValue(a.getTime(), b.getTime());
	}

	/*!
	 * Compare two regular expressions by converting them
	 * to string and checking for `sameValue`.
	 *
	 * @param {RegExp} a
	 * @param {RegExp} b
	 * @return {Boolean} result
	 */

	function regexpEqual(a, b) {
	  if ('regexp' !== type(b)) return false;
	  return sameValue(a.toString(), b.toString());
	}

	/*!
	 * Assert deep equality of two `arguments` objects.
	 * Unfortunately, these must be sliced to arrays
	 * prior to test to ensure no bad behavior.
	 *
	 * @param {Arguments} a
	 * @param {Arguments} b
	 * @param {Array} memoize (optional)
	 * @return {Boolean} result
	 */

	function argumentsEqual(a, b, m) {
	  if ('arguments' !== type(b)) return false;
	  a = [].slice.call(a);
	  b = [].slice.call(b);
	  return deepEqual(a, b, m);
	}

	/*!
	 * Get enumerable properties of a given object.
	 *
	 * @param {Object} a
	 * @return {Array} property names
	 */

	function enumerable(a) {
	  var res = [];
	  for (var key in a) res.push(key);
	  return res;
	}

	/*!
	 * Simple equality for flat iterable objects
	 * such as Arrays or Node.js buffers.
	 *
	 * @param {Iterable} a
	 * @param {Iterable} b
	 * @return {Boolean} result
	 */

	function iterableEqual(a, b) {
	  if (a.length !==  b.length) return false;

	  var i = 0;
	  var match = true;

	  for (; i < a.length; i++) {
	    if (a[i] !== b[i]) {
	      match = false;
	      break;
	    }
	  }

	  return match;
	}

	/*!
	 * Extension to `iterableEqual` specifically
	 * for Node.js Buffers.
	 *
	 * @param {Buffer} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */

	function bufferEqual(a, b) {
	  if (!Buffer.isBuffer(b)) return false;
	  return iterableEqual(a, b);
	}

	/*!
	 * Block for `objectEqual` ensuring non-existing
	 * values don't get in.
	 *
	 * @param {Mixed} object
	 * @return {Boolean} result
	 */

	function isValue(a) {
	  return a !== null && a !== undefined;
	}

	/*!
	 * Recursively check the equality of two objects.
	 * Once basic sameness has been established it will
	 * defer to `deepEqual` for each enumerable key
	 * in the object.
	 *
	 * @param {Mixed} a
	 * @param {Mixed} b
	 * @return {Boolean} result
	 */

	function objectEqual(a, b, m) {
	  if (!isValue(a) || !isValue(b)) {
	    return false;
	  }

	  if (a.prototype !== b.prototype) {
	    return false;
	  }

	  var i;
	  if (m) {
	    for (i = 0; i < m.length; i++) {
	      if ((m[i][0] === a && m[i][1] === b)
	      ||  (m[i][0] === b && m[i][1] === a)) {
	        return true;
	      }
	    }
	  } else {
	    m = [];
	  }

	  try {
	    var ka = enumerable(a);
	    var kb = enumerable(b);
	  } catch (ex) {
	    return false;
	  }

	  ka.sort();
	  kb.sort();

	  if (!iterableEqual(ka, kb)) {
	    return false;
	  }

	  m.push([ a, b ]);

	  var key;
	  for (i = ka.length - 1; i >= 0; i--) {
	    key = ka[i];
	    if (!deepEqual(a[key], b[key], m)) {
	      return false;
	    }
	  }

	  return true;
	}


/***/ },
/* 678 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__(679);


/***/ },
/* 679 */
/***/ function(module, exports) {

	/*!
	 * type-detect
	 * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Primary Exports
	 */

	var exports = module.exports = getType;

	/*!
	 * Detectable javascript natives
	 */

	var natives = {
	    '[object Array]': 'array'
	  , '[object RegExp]': 'regexp'
	  , '[object Function]': 'function'
	  , '[object Arguments]': 'arguments'
	  , '[object Date]': 'date'
	};

	/**
	 * ### typeOf (obj)
	 *
	 * Use several different techniques to determine
	 * the type of object being tested.
	 *
	 *
	 * @param {Mixed} object
	 * @return {String} object type
	 * @api public
	 */

	function getType (obj) {
	  var str = Object.prototype.toString.call(obj);
	  if (natives[str]) return natives[str];
	  if (obj === null) return 'null';
	  if (obj === undefined) return 'undefined';
	  if (obj === Object(obj)) return 'object';
	  return typeof obj;
	}

	exports.Library = Library;

	/**
	 * ### Library
	 *
	 * Create a repository for custom type detection.
	 *
	 * ```js
	 * var lib = new type.Library;
	 * ```
	 *
	 */

	function Library () {
	  this.tests = {};
	}

	/**
	 * #### .of (obj)
	 *
	 * Expose replacement `typeof` detection to the library.
	 *
	 * ```js
	 * if ('string' === lib.of('hello world')) {
	 *   // ...
	 * }
	 * ```
	 *
	 * @param {Mixed} object to test
	 * @return {String} type
	 */

	Library.prototype.of = getType;

	/**
	 * #### .define (type, test)
	 *
	 * Add a test to for the `.test()` assertion.
	 *
	 * Can be defined as a regular expression:
	 *
	 * ```js
	 * lib.define('int', /^[0-9]+$/);
	 * ```
	 *
	 * ... or as a function:
	 *
	 * ```js
	 * lib.define('bln', function (obj) {
	 *   if ('boolean' === lib.of(obj)) return true;
	 *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];
	 *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();
	 *   return !! ~blns.indexOf(obj);
	 * });
	 * ```
	 *
	 * @param {String} type
	 * @param {RegExp|Function} test
	 * @api public
	 */

	Library.prototype.define = function (type, test) {
	  if (arguments.length === 1) return this.tests[type];
	  this.tests[type] = test;
	  return this;
	};

	/**
	 * #### .test (obj, test)
	 *
	 * Assert that an object is of type. Will first
	 * check natives, and if that does not pass it will
	 * use the user defined custom tests.
	 *
	 * ```js
	 * assert(lib.test('1', 'int'));
	 * assert(lib.test('yes', 'bln'));
	 * ```
	 *
	 * @param {Mixed} object
	 * @param {String} type
	 * @return {Boolean} result
	 * @api public
	 */

	Library.prototype.test = function (obj, type) {
	  if (type === getType(obj)) return true;
	  var test = this.tests[type];

	  if (test && 'regexp' === getType(test)) {
	    return test.test(obj);
	  } else if (test && 'function' === getType(test)) {
	    return test(obj);
	  } else {
	    throw new ReferenceError('Type test "' + type + '" not defined or invalid.');
	  }
	};


/***/ },
/* 680 */
/***/ function(module, exports) {

	/*!
	 * Chai - getPathValue utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * @see https://github.com/logicalparadox/filtr
	 * MIT Licensed
	 */

	/**
	 * ### .getPathValue(path, object)
	 *
	 * This allows the retrieval of values in an
	 * object given a string path.
	 *
	 *     var obj = {
	 *         prop1: {
	 *             arr: ['a', 'b', 'c']
	 *           , str: 'Hello'
	 *         }
	 *       , prop2: {
	 *             arr: [ { nested: 'Universe' } ]
	 *           , str: 'Hello again!'
	 *         }
	 *     }
	 *
	 * The following would be the results.
	 *
	 *     getPathValue('prop1.str', obj); // Hello
	 *     getPathValue('prop1.att[2]', obj); // b
	 *     getPathValue('prop2.arr[0].nested', obj); // Universe
	 *
	 * @param {String} path
	 * @param {Object} object
	 * @returns {Object} value or `undefined`
	 * @name getPathValue
	 * @api public
	 */

	var getPathValue = module.exports = function (path, obj) {
	  var parsed = parsePath(path);
	  return _getPathValue(parsed, obj);
	};

	/*!
	 * ## parsePath(path)
	 *
	 * Helper function used to parse string object
	 * paths. Use in conjunction with `_getPathValue`.
	 *
	 *      var parsed = parsePath('myobject.property.subprop');
	 *
	 * ### Paths:
	 *
	 * * Can be as near infinitely deep and nested
	 * * Arrays are also valid using the formal `myobject.document[3].property`.
	 *
	 * @param {String} path
	 * @returns {Object} parsed
	 * @api private
	 */

	function parsePath (path) {
	  var str = path.replace(/\[/g, '.[')
	    , parts = str.match(/(\\\.|[^.]+?)+/g);
	  return parts.map(function (value) {
	    var re = /\[(\d+)\]$/
	      , mArr = re.exec(value)
	    if (mArr) return { i: parseFloat(mArr[1]) };
	    else return { p: value };
	  });
	};

	/*!
	 * ## _getPathValue(parsed, obj)
	 *
	 * Helper companion function for `.parsePath` that returns
	 * the value located at the parsed address.
	 *
	 *      var value = getPathValue(parsed, obj);
	 *
	 * @param {Object} parsed definition from `parsePath`.
	 * @param {Object} object to search against
	 * @returns {Object|Undefined} value
	 * @api private
	 */

	function _getPathValue (parsed, obj) {
	  var tmp = obj
	    , res;
	  for (var i = 0, l = parsed.length; i < l; i++) {
	    var part = parsed[i];
	    if (tmp) {
	      if ('undefined' !== typeof part.p)
	        tmp = tmp[part.p];
	      else if ('undefined' !== typeof part.i)
	        tmp = tmp[part.i];
	      if (i == (l - 1)) res = tmp;
	    } else {
	      res = undefined;
	    }
	  }
	  return res;
	};


/***/ },
/* 681 */
/***/ function(module, exports) {

	/*!
	 * Chai - addProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### addProperty (ctx, name, getter)
	 *
	 * Adds a property to the prototype of an object.
	 *
	 *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {
	 *       var obj = utils.flag(this, 'object');
	 *       new chai.Assertion(obj).to.be.instanceof(Foo);
	 *     });
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.addProperty('foo', fn);
	 *
	 * Then can be used as any other assertion.
	 *
	 *     expect(myFoo).to.be.foo;
	 *
	 * @param {Object} ctx object to which the property is added
	 * @param {String} name of property to add
	 * @param {Function} getter function to be used for name
	 * @name addProperty
	 * @api public
	 */

	module.exports = function (ctx, name, getter) {
	  Object.defineProperty(ctx, name,
	    { get: function () {
	        var result = getter.call(this);
	        return result === undefined ? this : result;
	      }
	    , configurable: true
	  });
	};


/***/ },
/* 682 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - addMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	var config = __webpack_require__(674);

	/**
	 * ### .addMethod (ctx, name, method)
	 *
	 * Adds a method to the prototype of an object.
	 *
	 *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {
	 *       var obj = utils.flag(this, 'object');
	 *       new chai.Assertion(obj).to.be.equal(str);
	 *     });
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.addMethod('foo', fn);
	 *
	 * Then can be used as any other assertion.
	 *
	 *     expect(fooStr).to.be.foo('bar');
	 *
	 * @param {Object} ctx object to which the method is added
	 * @param {String} name of method to add
	 * @param {Function} method function to be used for name
	 * @name addMethod
	 * @api public
	 */
	var flag = __webpack_require__(665);

	module.exports = function (ctx, name, method) {
	  ctx[name] = function () {
	    var old_ssfi = flag(this, 'ssfi');
	    if (old_ssfi && config.includeStack === false)
	      flag(this, 'ssfi', ctx[name]);
	    var result = method.apply(this, arguments);
	    return result === undefined ? this : result;
	  };
	};


/***/ },
/* 683 */
/***/ function(module, exports) {

	/*!
	 * Chai - overwriteProperty utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### overwriteProperty (ctx, name, fn)
	 *
	 * Overwites an already existing property getter and provides
	 * access to previous value. Must return function to use as getter.
	 *
	 *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {
	 *       return function () {
	 *         var obj = utils.flag(this, 'object');
	 *         if (obj instanceof Foo) {
	 *           new chai.Assertion(obj.name).to.equal('bar');
	 *         } else {
	 *           _super.call(this);
	 *         }
	 *       }
	 *     });
	 *
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.overwriteProperty('foo', fn);
	 *
	 * Then can be used as any other assertion.
	 *
	 *     expect(myFoo).to.be.ok;
	 *
	 * @param {Object} ctx object whose property is to be overwritten
	 * @param {String} name of property to overwrite
	 * @param {Function} getter function that returns a getter function to be used for name
	 * @name overwriteProperty
	 * @api public
	 */

	module.exports = function (ctx, name, getter) {
	  var _get = Object.getOwnPropertyDescriptor(ctx, name)
	    , _super = function () {};

	  if (_get && 'function' === typeof _get.get)
	    _super = _get.get

	  Object.defineProperty(ctx, name,
	    { get: function () {
	        var result = getter(_super).call(this);
	        return result === undefined ? this : result;
	      }
	    , configurable: true
	  });
	};


/***/ },
/* 684 */
/***/ function(module, exports) {

	/*!
	 * Chai - overwriteMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### overwriteMethod (ctx, name, fn)
	 *
	 * Overwites an already existing method and provides
	 * access to previous function. Must return function
	 * to be used for name.
	 *
	 *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {
	 *       return function (str) {
	 *         var obj = utils.flag(this, 'object');
	 *         if (obj instanceof Foo) {
	 *           new chai.Assertion(obj.value).to.equal(str);
	 *         } else {
	 *           _super.apply(this, arguments);
	 *         }
	 *       }
	 *     });
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.overwriteMethod('foo', fn);
	 *
	 * Then can be used as any other assertion.
	 *
	 *     expect(myFoo).to.equal('bar');
	 *
	 * @param {Object} ctx object whose method is to be overwritten
	 * @param {String} name of method to overwrite
	 * @param {Function} method function that returns a function to be used for name
	 * @name overwriteMethod
	 * @api public
	 */

	module.exports = function (ctx, name, method) {
	  var _method = ctx[name]
	    , _super = function () { return this; };

	  if (_method && 'function' === typeof _method)
	    _super = _method;

	  ctx[name] = function () {
	    var result = method(_super).apply(this, arguments);
	    return result === undefined ? this : result;
	  }
	};


/***/ },
/* 685 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * Chai - addChainingMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/*!
	 * Module dependencies
	 */

	var transferFlags = __webpack_require__(675);
	var flag = __webpack_require__(665);
	var config = __webpack_require__(674);

	/*!
	 * Module variables
	 */

	// Check whether `__proto__` is supported
	var hasProtoSupport = '__proto__' in Object;

	// Without `__proto__` support, this module will need to add properties to a function.
	// However, some Function.prototype methods cannot be overwritten,
	// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).
	var excludeNames = /^(?:length|name|arguments|caller)$/;

	// Cache `Function` properties
	var call  = Function.prototype.call,
	    apply = Function.prototype.apply;

	/**
	 * ### addChainableMethod (ctx, name, method, chainingBehavior)
	 *
	 * Adds a method to an object, such that the method can also be chained.
	 *
	 *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {
	 *       var obj = utils.flag(this, 'object');
	 *       new chai.Assertion(obj).to.be.equal(str);
	 *     });
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);
	 *
	 * The result can then be used as both a method assertion, executing both `method` and
	 * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.
	 *
	 *     expect(fooStr).to.be.foo('bar');
	 *     expect(fooStr).to.be.foo.equal('foo');
	 *
	 * @param {Object} ctx object to which the method is added
	 * @param {String} name of method to add
	 * @param {Function} method function to be used for `name`, when called
	 * @param {Function} chainingBehavior function to be called every time the property is accessed
	 * @name addChainableMethod
	 * @api public
	 */

	module.exports = function (ctx, name, method, chainingBehavior) {
	  if (typeof chainingBehavior !== 'function') {
	    chainingBehavior = function () { };
	  }

	  var chainableBehavior = {
	      method: method
	    , chainingBehavior: chainingBehavior
	  };

	  // save the methods so we can overwrite them later, if we need to.
	  if (!ctx.__methods) {
	    ctx.__methods = {};
	  }
	  ctx.__methods[name] = chainableBehavior;

	  Object.defineProperty(ctx, name,
	    { get: function () {
	        chainableBehavior.chainingBehavior.call(this);

	        var assert = function assert() {
	          var old_ssfi = flag(this, 'ssfi');
	          if (old_ssfi && config.includeStack === false)
	            flag(this, 'ssfi', assert);
	          var result = chainableBehavior.method.apply(this, arguments);
	          return result === undefined ? this : result;
	        };

	        // Use `__proto__` if available
	        if (hasProtoSupport) {
	          // Inherit all properties from the object by replacing the `Function` prototype
	          var prototype = assert.__proto__ = Object.create(this);
	          // Restore the `call` and `apply` methods from `Function`
	          prototype.call = call;
	          prototype.apply = apply;
	        }
	        // Otherwise, redefine all properties (slow!)
	        else {
	          var asserterNames = Object.getOwnPropertyNames(ctx);
	          asserterNames.forEach(function (asserterName) {
	            if (!excludeNames.test(asserterName)) {
	              var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);
	              Object.defineProperty(assert, asserterName, pd);
	            }
	          });
	        }

	        transferFlags(this, assert);
	        return assert;
	      }
	    , configurable: true
	  });
	};


/***/ },
/* 686 */
/***/ function(module, exports) {

	/*!
	 * Chai - overwriteChainableMethod utility
	 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	/**
	 * ### overwriteChainableMethod (ctx, name, fn)
	 *
	 * Overwites an already existing chainable method
	 * and provides access to the previous function or
	 * property.  Must return functions to be used for
	 * name.
	 *
	 *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'length',
	 *       function (_super) {
	 *       }
	 *     , function (_super) {
	 *       }
	 *     );
	 *
	 * Can also be accessed directly from `chai.Assertion`.
	 *
	 *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);
	 *
	 * Then can be used as any other assertion.
	 *
	 *     expect(myFoo).to.have.length(3);
	 *     expect(myFoo).to.have.length.above(3);
	 *
	 * @param {Object} ctx object whose method / property is to be overwritten
	 * @param {String} name of method / property to overwrite
	 * @param {Function} method function that returns a function to be used for name
	 * @param {Function} chainingBehavior function that returns a function to be used for property
	 * @name overwriteChainableMethod
	 * @api public
	 */

	module.exports = function (ctx, name, method, chainingBehavior) {
	  var chainableBehavior = ctx.__methods[name];

	  var _chainingBehavior = chainableBehavior.chainingBehavior;
	  chainableBehavior.chainingBehavior = function () {
	    var result = chainingBehavior(_chainingBehavior).call(this);
	    return result === undefined ? this : result;
	  };

	  var _method = chainableBehavior.method;
	  chainableBehavior.method = function () {
	    var result = method(_method).apply(this, arguments);
	    return result === undefined ? this : result;
	  };
	};


/***/ },
/* 687 */
/***/ function(module, exports, __webpack_require__) {

	/*!
	 * chai
	 * http://chaijs.com
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	var config = __webpack_require__(674);
	var NOOP = function() { };

	module.exports = function (_chai, util) {
	  /*!
	   * Module dependencies.
	   */

	  var AssertionError = _chai.AssertionError
	    , flag = util.flag;

	  /*!
	   * Module export.
	   */

	  _chai.Assertion = Assertion;

	  /*!
	   * Assertion Constructor
	   *
	   * Creates object for chaining.
	   *
	   * @api private
	   */

	  function Assertion (obj, msg, stack) {
	    flag(this, 'ssfi', stack || arguments.callee);
	    flag(this, 'object', obj);
	    flag(this, 'message', msg);
	  }

	  Object.defineProperty(Assertion, 'includeStack', {
	    get: function() {
	      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');
	      return config.includeStack;
	    },
	    set: function(value) {
	      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');
	      config.includeStack = value;
	    }
	  });

	  Object.defineProperty(Assertion, 'showDiff', {
	    get: function() {
	      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');
	      return config.showDiff;
	    },
	    set: function(value) {
	      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');
	      config.showDiff = value;
	    }
	  });

	  Assertion.addProperty = function (name, fn) {
	    util.addProperty(this.prototype, name, fn);
	  };

	  Assertion.addMethod = function (name, fn) {
	    util.addMethod(this.prototype, name, fn);
	  };

	  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {
	    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);
	  };

	  Assertion.addChainableNoop = function(name, fn) {
	    util.addChainableMethod(this.prototype, name, NOOP, fn);
	  };

	  Assertion.overwriteProperty = function (name, fn) {
	    util.overwriteProperty(this.prototype, name, fn);
	  };

	  Assertion.overwriteMethod = function (name, fn) {
	    util.overwriteMethod(this.prototype, name, fn);
	  };

	  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {
	    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);
	  };

	  /*!
	   * ### .assert(expression, message, negateMessage, expected, actual)
	   *
	   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.
	   *
	   * @name assert
	   * @param {Philosophical} expression to be tested
	   * @param {String or Function} message or function that returns message to display if fails
	   * @param {String or Function} negatedMessage or function that returns negatedMessage to display if negated expression fails
	   * @param {Mixed} expected value (remember to check for negation)
	   * @param {Mixed} actual (optional) will default to `this.obj`
	   * @api private
	   */

	  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {
	    var ok = util.test(this, arguments);
	    if (true !== showDiff) showDiff = false;
	    if (true !== config.showDiff) showDiff = false;

	    if (!ok) {
	      var msg = util.getMessage(this, arguments)
	        , actual = util.getActual(this, arguments);
	      throw new AssertionError(msg, {
	          actual: actual
	        , expected: expected
	        , showDiff: showDiff
	      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));
	    }
	  };

	  /*!
	   * ### ._obj
	   *
	   * Quick reference to stored `actual` value for plugin developers.
	   *
	   * @api private
	   */

	  Object.defineProperty(Assertion.prototype, '_obj',
	    { get: function () {
	        return flag(this, 'object');
	      }
	    , set: function (val) {
	        flag(this, 'object', val);
	      }
	  });
	};


/***/ },
/* 688 */
/***/ function(module, exports) {

	/*!
	 * chai
	 * http://chaijs.com
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	module.exports = function (chai, _) {
	  var Assertion = chai.Assertion
	    , toString = Object.prototype.toString
	    , flag = _.flag;

	  /**
	   * ### Language Chains
	   *
	   * The following are provided as chainable getters to
	   * improve the readability of your assertions. They
	   * do not provide testing capabilities unless they
	   * have been overwritten by a plugin.
	   *
	   * **Chains**
	   *
	   * - to
	   * - be
	   * - been
	   * - is
	   * - that
	   * - and
	   * - has
	   * - have
	   * - with
	   * - at
	   * - of
	   * - same
	   *
	   * @name language chains
	   * @api public
	   */

	  [ 'to', 'be', 'been'
	  , 'is', 'and', 'has', 'have'
	  , 'with', 'that', 'at'
	  , 'of', 'same' ].forEach(function (chain) {
	    Assertion.addProperty(chain, function () {
	      return this;
	    });
	  });

	  /**
	   * ### .not
	   *
	   * Negates any of assertions following in the chain.
	   *
	   *     expect(foo).to.not.equal('bar');
	   *     expect(goodFn).to.not.throw(Error);
	   *     expect({ foo: 'baz' }).to.have.property('foo')
	   *       .and.not.equal('bar');
	   *
	   * @name not
	   * @api public
	   */

	  Assertion.addProperty('not', function () {
	    flag(this, 'negate', true);
	  });

	  /**
	   * ### .deep
	   *
	   * Sets the `deep` flag, later used by the `equal` and
	   * `property` assertions.
	   *
	   *     expect(foo).to.deep.equal({ bar: 'baz' });
	   *     expect({ foo: { bar: { baz: 'quux' } } })
	   *       .to.have.deep.property('foo.bar.baz', 'quux');
	   *
	   * @name deep
	   * @api public
	   */

	  Assertion.addProperty('deep', function () {
	    flag(this, 'deep', true);
	  });

	  /**
	   * ### .a(type)
	   *
	   * The `a` and `an` assertions are aliases that can be
	   * used either as language chains or to assert a value's
	   * type.
	   *
	   *     // typeof
	   *     expect('test').to.be.a('string');
	   *     expect({ foo: 'bar' }).to.be.an('object');
	   *     expect(null).to.be.a('null');
	   *     expect(undefined).to.be.an('undefined');
	   *
	   *     // language chain
	   *     expect(foo).to.be.an.instanceof(Foo);
	   *
	   * @name a
	   * @alias an
	   * @param {String} type
	   * @param {String} message _optional_
	   * @api public
	   */

	  function an (type, msg) {
	    if (msg) flag(this, 'message', msg);
	    type = type.toLowerCase();
	    var obj = flag(this, 'object')
	      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';

	    this.assert(
	        type === _.type(obj)
	      , 'expected #{this} to be ' + article + type
	      , 'expected #{this} not to be ' + article + type
	    );
	  }

	  Assertion.addChainableMethod('an', an);
	  Assertion.addChainableMethod('a', an);

	  /**
	   * ### .include(value)
	   *
	   * The `include` and `contain` assertions can be used as either property
	   * based language chains or as methods to assert the inclusion of an object
	   * in an array or a substring in a string. When used as language chains,
	   * they toggle the `contain` flag for the `keys` assertion.
	   *
	   *     expect([1,2,3]).to.include(2);
	   *     expect('foobar').to.contain('foo');
	   *     expect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');
	   *
	   * @name include
	   * @alias contain
	   * @param {Object|String|Number} obj
	   * @param {String} message _optional_
	   * @api public
	   */

	  function includeChainingBehavior () {
	    flag(this, 'contains', true);
	  }

	  function include (val, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    var expected = false;
	    if (_.type(obj) === 'array' && _.type(val) === 'object') {
	      for (var i in obj) {
	        if (_.eql(obj[i], val)) {
	          expected = true;
	          break;
	        }
	      }
	    } else if (_.type(val) === 'object') {
	      if (!flag(this, 'negate')) {
	        for (var k in val) new Assertion(obj).property(k, val[k]);
	        return;
	      }
	      var subset = {}
	      for (var k in val) subset[k] = obj[k]
	      expected = _.eql(subset, val);
	    } else {
	      expected = obj && ~obj.indexOf(val)
	    }
	    this.assert(
	        expected
	      , 'expected #{this} to include ' + _.inspect(val)
	      , 'expected #{this} to not include ' + _.inspect(val));
	  }

	  Assertion.addChainableMethod('include', include, includeChainingBehavior);
	  Assertion.addChainableMethod('contain', include, includeChainingBehavior);

	  /**
	   * ### .ok
	   *
	   * Asserts that the target is truthy.
	   *
	   *     expect('everthing').to.be.ok;
	   *     expect(1).to.be.ok;
	   *     expect(false).to.not.be.ok;
	   *     expect(undefined).to.not.be.ok;
	   *     expect(null).to.not.be.ok;
	   *
	   * Can also be used as a function, which prevents some linter errors.
	   *
	   *     expect('everthing').to.be.ok();
	   *     
	   * @name ok
	   * @api public
	   */

	  Assertion.addChainableNoop('ok', function () {
	    this.assert(
	        flag(this, 'object')
	      , 'expected #{this} to be truthy'
	      , 'expected #{this} to be falsy');
	  });

	  /**
	   * ### .true
	   *
	   * Asserts that the target is `true`.
	   *
	   *     expect(true).to.be.true;
	   *     expect(1).to.not.be.true;
	   *
	   * Can also be used as a function, which prevents some linter errors.
	   *
	   *     expect(true).to.be.true();
	   *
	   * @name true
	   * @api public
	   */

	  Assertion.addChainableNoop('true', function () {
	    this.assert(
	        true === flag(this, 'object')
	      , 'expected #{this} to be true'
	      , 'expected #{this} to be false'
	      , this.negate ? false : true
	    );
	  });

	  /**
	   * ### .false
	   *
	   * Asserts that the target is `false`.
	   *
	   *     expect(false).to.be.false;
	   *     expect(0).to.not.be.false;
	   *
	   * Can also be used as a function, which prevents some linter errors.
	   *
	   *     expect(false).to.be.false();
	   *
	   * @name false
	   * @api public
	   */

	  Assertion.addChainableNoop('false', function () {
	    this.assert(
	        false === flag(this, 'object')
	      , 'expected #{this} to be false'
	      , 'expected #{this} to be true'
	      , this.negate ? true : false
	    );
	  });

	  /**
	   * ### .null
	   *
	   * Asserts that the target is `null`.
	   *
	   *     expect(null).to.be.null;
	   *     expect(undefined).not.to.be.null;
	   *
	   * Can also be used as a function, which prevents some linter errors.
	   *
	   *     expect(null).to.be.null();
	   *
	   * @name null
	   * @api public
	   */

	  Assertion.addChainableNoop('null', function () {
	    this.assert(
	        null === flag(this, 'object')
	      , 'expected #{this} to be null'
	      , 'expected #{this} not to be null'
	    );
	  });

	  /**
	   * ### .undefined
	   *
	   * Asserts that the target is `undefined`.
	   *
	   *     expect(undefined).to.be.undefined;
	   *     expect(null).to.not.be.undefined;
	   *
	   * Can also be used as a function, which prevents some linter errors.
	   *
	   *     expect(undefined).to.be.undefined();
	   *
	   * @name undefined
	   * @api public
	   */

	  Assertion.addChainableNoop('undefined', function () {
	    this.assert(
	        undefined === flag(this, 'object')
	      , 'expected #{this} to be undefined'
	      , 'expected #{this} not to be undefined'
	    );
	  });

	  /**
	   * ### .exist
	   *
	   * Asserts that the target is neither `null` nor `undefined`.
	   *
	   *     var foo = 'hi'
	   *       , bar = null
	   *       , baz;
	   *
	   *     expect(foo).to.exist;
	   *     expect(bar).to.not.exist;
	   *     expect(baz).to.not.exist;
	   *
	   * Can also be used as a function, which prevents some linter errors.
	   *
	   *     expect(foo).to.exist();
	   *
	   * @name exist
	   * @api public
	   */

	  Assertion.addChainableNoop('exist', function () {
	    this.assert(
	        null != flag(this, 'object')
	      , 'expected #{this} to exist'
	      , 'expected #{this} to not exist'
	    );
	  });


	  /**
	   * ### .empty
	   *
	   * Asserts that the target's length is `0`. For arrays, it checks
	   * the `length` property. For objects, it gets the count of
	   * enumerable keys.
	   *
	   *     expect([]).to.be.empty;
	   *     expect('').to.be.empty;
	   *     expect({}).to.be.empty;
	   *
	   * Can also be used as a function, which prevents some linter errors.
	   *
	   *     expect([]).to.be.empty();
	   *
	   * @name empty
	   * @api public
	   */

	  Assertion.addChainableNoop('empty', function () {
	    var obj = flag(this, 'object')
	      , expected = obj;

	    if (Array.isArray(obj) || 'string' === typeof object) {
	      expected = obj.length;
	    } else if (typeof obj === 'object') {
	      expected = Object.keys(obj).length;
	    }

	    this.assert(
	        !expected
	      , 'expected #{this} to be empty'
	      , 'expected #{this} not to be empty'
	    );
	  });

	  /**
	   * ### .arguments
	   *
	   * Asserts that the target is an arguments object.
	   *
	   *     function test () {
	   *       expect(arguments).to.be.arguments;
	   *     }
	   *
	   * Can also be used as a function, which prevents some linter errors.
	   *
	   *     function test () {
	   *       expect(arguments).to.be.arguments();
	   *     }
	   *
	   * @name arguments
	   * @alias Arguments
	   * @api public
	   */

	  function checkArguments () {
	    var obj = flag(this, 'object')
	      , type = Object.prototype.toString.call(obj);
	    this.assert(
	        '[object Arguments]' === type
	      , 'expected #{this} to be arguments but got ' + type
	      , 'expected #{this} to not be arguments'
	    );
	  }

	  Assertion.addChainableNoop('arguments', checkArguments);
	  Assertion.addChainableNoop('Arguments', checkArguments);

	  /**
	   * ### .equal(value)
	   *
	   * Asserts that the target is strictly equal (`===`) to `value`.
	   * Alternately, if the `deep` flag is set, asserts that
	   * the target is deeply equal to `value`.
	   *
	   *     expect('hello').to.equal('hello');
	   *     expect(42).to.equal(42);
	   *     expect(1).to.not.equal(true);
	   *     expect({ foo: 'bar' }).to.not.equal({ foo: 'bar' });
	   *     expect({ foo: 'bar' }).to.deep.equal({ foo: 'bar' });
	   *
	   * @name equal
	   * @alias equals
	   * @alias eq
	   * @alias deep.equal
	   * @param {Mixed} value
	   * @param {String} message _optional_
	   * @api public
	   */

	  function assertEqual (val, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    if (flag(this, 'deep')) {
	      return this.eql(val);
	    } else {
	      this.assert(
	          val === obj
	        , 'expected #{this} to equal #{exp}'
	        , 'expected #{this} to not equal #{exp}'
	        , val
	        , this._obj
	        , true
	      );
	    }
	  }

	  Assertion.addMethod('equal', assertEqual);
	  Assertion.addMethod('equals', assertEqual);
	  Assertion.addMethod('eq', assertEqual);

	  /**
	   * ### .eql(value)
	   *
	   * Asserts that the target is deeply equal to `value`.
	   *
	   *     expect({ foo: 'bar' }).to.eql({ foo: 'bar' });
	   *     expect([ 1, 2, 3 ]).to.eql([ 1, 2, 3 ]);
	   *
	   * @name eql
	   * @alias eqls
	   * @param {Mixed} value
	   * @param {String} message _optional_
	   * @api public
	   */

	  function assertEql(obj, msg) {
	    if (msg) flag(this, 'message', msg);
	    this.assert(
	        _.eql(obj, flag(this, 'object'))
	      , 'expected #{this} to deeply equal #{exp}'
	      , 'expected #{this} to not deeply equal #{exp}'
	      , obj
	      , this._obj
	      , true
	    );
	  }

	  Assertion.addMethod('eql', assertEql);
	  Assertion.addMethod('eqls', assertEql);

	  /**
	   * ### .above(value)
	   *
	   * Asserts that the target is greater than `value`.
	   *
	   *     expect(10).to.be.above(5);
	   *
	   * Can also be used in conjunction with `length` to
	   * assert a minimum length. The benefit being a
	   * more informative error message than if the length
	   * was supplied directly.
	   *
	   *     expect('foo').to.have.length.above(2);
	   *     expect([ 1, 2, 3 ]).to.have.length.above(2);
	   *
	   * @name above
	   * @alias gt
	   * @alias greaterThan
	   * @param {Number} value
	   * @param {String} message _optional_
	   * @api public
	   */

	  function assertAbove (n, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    if (flag(this, 'doLength')) {
	      new Assertion(obj, msg).to.have.property('length');
	      var len = obj.length;
	      this.assert(
	          len > n
	        , 'expected #{this} to have a length above #{exp} but got #{act}'
	        , 'expected #{this} to not have a length above #{exp}'
	        , n
	        , len
	      );
	    } else {
	      this.assert(
	          obj > n
	        , 'expected #{this} to be above ' + n
	        , 'expected #{this} to be at most ' + n
	      );
	    }
	  }

	  Assertion.addMethod('above', assertAbove);
	  Assertion.addMethod('gt', assertAbove);
	  Assertion.addMethod('greaterThan', assertAbove);

	  /**
	   * ### .least(value)
	   *
	   * Asserts that the target is greater than or equal to `value`.
	   *
	   *     expect(10).to.be.at.least(10);
	   *
	   * Can also be used in conjunction with `length` to
	   * assert a minimum length. The benefit being a
	   * more informative error message than if the length
	   * was supplied directly.
	   *
	   *     expect('foo').to.have.length.of.at.least(2);
	   *     expect([ 1, 2, 3 ]).to.have.length.of.at.least(3);
	   *
	   * @name least
	   * @alias gte
	   * @param {Number} value
	   * @param {String} message _optional_
	   * @api public
	   */

	  function assertLeast (n, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    if (flag(this, 'doLength')) {
	      new Assertion(obj, msg).to.have.property('length');
	      var len = obj.length;
	      this.assert(
	          len >= n
	        , 'expected #{this} to have a length at least #{exp} but got #{act}'
	        , 'expected #{this} to have a length below #{exp}'
	        , n
	        , len
	      );
	    } else {
	      this.assert(
	          obj >= n
	        , 'expected #{this} to be at least ' + n
	        , 'expected #{this} to be below ' + n
	      );
	    }
	  }

	  Assertion.addMethod('least', assertLeast);
	  Assertion.addMethod('gte', assertLeast);

	  /**
	   * ### .below(value)
	   *
	   * Asserts that the target is less than `value`.
	   *
	   *     expect(5).to.be.below(10);
	   *
	   * Can also be used in conjunction with `length` to
	   * assert a maximum length. The benefit being a
	   * more informative error message than if the length
	   * was supplied directly.
	   *
	   *     expect('foo').to.have.length.below(4);
	   *     expect([ 1, 2, 3 ]).to.have.length.below(4);
	   *
	   * @name below
	   * @alias lt
	   * @alias lessThan
	   * @param {Number} value
	   * @param {String} message _optional_
	   * @api public
	   */

	  function assertBelow (n, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    if (flag(this, 'doLength')) {
	      new Assertion(obj, msg).to.have.property('length');
	      var len = obj.length;
	      this.assert(
	          len < n
	        , 'expected #{this} to have a length below #{exp} but got #{act}'
	        , 'expected #{this} to not have a length below #{exp}'
	        , n
	        , len
	      );
	    } else {
	      this.assert(
	          obj < n
	        , 'expected #{this} to be below ' + n
	        , 'expected #{this} to be at least ' + n
	      );
	    }
	  }

	  Assertion.addMethod('below', assertBelow);
	  Assertion.addMethod('lt', assertBelow);
	  Assertion.addMethod('lessThan', assertBelow);

	  /**
	   * ### .most(value)
	   *
	   * Asserts that the target is less than or equal to `value`.
	   *
	   *     expect(5).to.be.at.most(5);
	   *
	   * Can also be used in conjunction with `length` to
	   * assert a maximum length. The benefit being a
	   * more informative error message than if the length
	   * was supplied directly.
	   *
	   *     expect('foo').to.have.length.of.at.most(4);
	   *     expect([ 1, 2, 3 ]).to.have.length.of.at.most(3);
	   *
	   * @name most
	   * @alias lte
	   * @param {Number} value
	   * @param {String} message _optional_
	   * @api public
	   */

	  function assertMost (n, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    if (flag(this, 'doLength')) {
	      new Assertion(obj, msg).to.have.property('length');
	      var len = obj.length;
	      this.assert(
	          len <= n
	        , 'expected #{this} to have a length at most #{exp} but got #{act}'
	        , 'expected #{this} to have a length above #{exp}'
	        , n
	        , len
	      );
	    } else {
	      this.assert(
	          obj <= n
	        , 'expected #{this} to be at most ' + n
	        , 'expected #{this} to be above ' + n
	      );
	    }
	  }

	  Assertion.addMethod('most', assertMost);
	  Assertion.addMethod('lte', assertMost);

	  /**
	   * ### .within(start, finish)
	   *
	   * Asserts that the target is within a range.
	   *
	   *     expect(7).to.be.within(5,10);
	   *
	   * Can also be used in conjunction with `length` to
	   * assert a length range. The benefit being a
	   * more informative error message than if the length
	   * was supplied directly.
	   *
	   *     expect('foo').to.have.length.within(2,4);
	   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);
	   *
	   * @name within
	   * @param {Number} start lowerbound inclusive
	   * @param {Number} finish upperbound inclusive
	   * @param {String} message _optional_
	   * @api public
	   */

	  Assertion.addMethod('within', function (start, finish, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object')
	      , range = start + '..' + finish;
	    if (flag(this, 'doLength')) {
	      new Assertion(obj, msg).to.have.property('length');
	      var len = obj.length;
	      this.assert(
	          len >= start && len <= finish
	        , 'expected #{this} to have a length within ' + range
	        , 'expected #{this} to not have a length within ' + range
	      );
	    } else {
	      this.assert(
	          obj >= start && obj <= finish
	        , 'expected #{this} to be within ' + range
	        , 'expected #{this} to not be within ' + range
	      );
	    }
	  });

	  /**
	   * ### .instanceof(constructor)
	   *
	   * Asserts that the target is an instance of `constructor`.
	   *
	   *     var Tea = function (name) { this.name = name; }
	   *       , Chai = new Tea('chai');
	   *
	   *     expect(Chai).to.be.an.instanceof(Tea);
	   *     expect([ 1, 2, 3 ]).to.be.instanceof(Array);
	   *
	   * @name instanceof
	   * @param {Constructor} constructor
	   * @param {String} message _optional_
	   * @alias instanceOf
	   * @api public
	   */

	  function assertInstanceOf (constructor, msg) {
	    if (msg) flag(this, 'message', msg);
	    var name = _.getName(constructor);
	    this.assert(
	        flag(this, 'object') instanceof constructor
	      , 'expected #{this} to be an instance of ' + name
	      , 'expected #{this} to not be an instance of ' + name
	    );
	  };

	  Assertion.addMethod('instanceof', assertInstanceOf);
	  Assertion.addMethod('instanceOf', assertInstanceOf);

	  /**
	   * ### .property(name, [value])
	   *
	   * Asserts that the target has a property `name`, optionally asserting that
	   * the value of that property is strictly equal to  `value`.
	   * If the `deep` flag is set, you can use dot- and bracket-notation for deep
	   * references into objects and arrays.
	   *
	   *     // simple referencing
	   *     var obj = { foo: 'bar' };
	   *     expect(obj).to.have.property('foo');
	   *     expect(obj).to.have.property('foo', 'bar');
	   *
	   *     // deep referencing
	   *     var deepObj = {
	   *         green: { tea: 'matcha' }
	   *       , teas: [ 'chai', 'matcha', { tea: 'konacha' } ]
	   *     };

	   *     expect(deepObj).to.have.deep.property('green.tea', 'matcha');
	   *     expect(deepObj).to.have.deep.property('teas[1]', 'matcha');
	   *     expect(deepObj).to.have.deep.property('teas[2].tea', 'konacha');
	   *
	   * You can also use an array as the starting point of a `deep.property`
	   * assertion, or traverse nested arrays.
	   *
	   *     var arr = [
	   *         [ 'chai', 'matcha', 'konacha' ]
	   *       , [ { tea: 'chai' }
	   *         , { tea: 'matcha' }
	   *         , { tea: 'konacha' } ]
	   *     ];
	   *
	   *     expect(arr).to.have.deep.property('[0][1]', 'matcha');
	   *     expect(arr).to.have.deep.property('[1][2].tea', 'konacha');
	   *
	   * Furthermore, `property` changes the subject of the assertion
	   * to be the value of that property from the original object. This
	   * permits for further chainable assertions on that property.
	   *
	   *     expect(obj).to.have.property('foo')
	   *       .that.is.a('string');
	   *     expect(deepObj).to.have.property('green')
	   *       .that.is.an('object')
	   *       .that.deep.equals({ tea: 'matcha' });
	   *     expect(deepObj).to.have.property('teas')
	   *       .that.is.an('array')
	   *       .with.deep.property('[2]')
	   *         .that.deep.equals({ tea: 'konacha' });
	   *
	   * @name property
	   * @alias deep.property
	   * @param {String} name
	   * @param {Mixed} value (optional)
	   * @param {String} message _optional_
	   * @returns value of property for chaining
	   * @api public
	   */

	  Assertion.addMethod('property', function (name, val, msg) {
	    if (msg) flag(this, 'message', msg);

	    var descriptor = flag(this, 'deep') ? 'deep property ' : 'property '
	      , negate = flag(this, 'negate')
	      , obj = flag(this, 'object')
	      , value = flag(this, 'deep')
	        ? _.getPathValue(name, obj)
	        : obj[name];

	    if (negate && undefined !== val) {
	      if (undefined === value) {
	        msg = (msg != null) ? msg + ': ' : '';
	        throw new Error(msg + _.inspect(obj) + ' has no ' + descriptor + _.inspect(name));
	      }
	    } else {
	      this.assert(
	          undefined !== value
	        , 'expected #{this} to have a ' + descriptor + _.inspect(name)
	        , 'expected #{this} to not have ' + descriptor + _.inspect(name));
	    }

	    if (undefined !== val) {
	      this.assert(
	          val === value
	        , 'expected #{this} to have a ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'
	        , 'expected #{this} to not have a ' + descriptor + _.inspect(name) + ' of #{act}'
	        , val
	        , value
	      );
	    }

	    flag(this, 'object', value);
	  });


	  /**
	   * ### .ownProperty(name)
	   *
	   * Asserts that the target has an own property `name`.
	   *
	   *     expect('test').to.have.ownProperty('length');
	   *
	   * @name ownProperty
	   * @alias haveOwnProperty
	   * @param {String} name
	   * @param {String} message _optional_
	   * @api public
	   */

	  function assertOwnProperty (name, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    this.assert(
	        obj.hasOwnProperty(name)
	      , 'expected #{this} to have own property ' + _.inspect(name)
	      , 'expected #{this} to not have own property ' + _.inspect(name)
	    );
	  }

	  Assertion.addMethod('ownProperty', assertOwnProperty);
	  Assertion.addMethod('haveOwnProperty', assertOwnProperty);

	  /**
	   * ### .length(value)
	   *
	   * Asserts that the target's `length` property has
	   * the expected value.
	   *
	   *     expect([ 1, 2, 3]).to.have.length(3);
	   *     expect('foobar').to.have.length(6);
	   *
	   * Can also be used as a chain precursor to a value
	   * comparison for the length property.
	   *
	   *     expect('foo').to.have.length.above(2);
	   *     expect([ 1, 2, 3 ]).to.have.length.above(2);
	   *     expect('foo').to.have.length.below(4);
	   *     expect([ 1, 2, 3 ]).to.have.length.below(4);
	   *     expect('foo').to.have.length.within(2,4);
	   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);
	   *
	   * @name length
	   * @alias lengthOf
	   * @param {Number} length
	   * @param {String} message _optional_
	   * @api public
	   */

	  function assertLengthChain () {
	    flag(this, 'doLength', true);
	  }

	  function assertLength (n, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    new Assertion(obj, msg).to.have.property('length');
	    var len = obj.length;

	    this.assert(
	        len == n
	      , 'expected #{this} to have a length of #{exp} but got #{act}'
	      , 'expected #{this} to not have a length of #{act}'
	      , n
	      , len
	    );
	  }

	  Assertion.addChainableMethod('length', assertLength, assertLengthChain);
	  Assertion.addMethod('lengthOf', assertLength);

	  /**
	   * ### .match(regexp)
	   *
	   * Asserts that the target matches a regular expression.
	   *
	   *     expect('foobar').to.match(/^foo/);
	   *
	   * @name match
	   * @param {RegExp} RegularExpression
	   * @param {String} message _optional_
	   * @api public
	   */

	  Assertion.addMethod('match', function (re, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    this.assert(
	        re.exec(obj)
	      , 'expected #{this} to match ' + re
	      , 'expected #{this} not to match ' + re
	    );
	  });

	  /**
	   * ### .string(string)
	   *
	   * Asserts that the string target contains another string.
	   *
	   *     expect('foobar').to.have.string('bar');
	   *
	   * @name string
	   * @param {String} string
	   * @param {String} message _optional_
	   * @api public
	   */

	  Assertion.addMethod('string', function (str, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    new Assertion(obj, msg).is.a('string');

	    this.assert(
	        ~obj.indexOf(str)
	      , 'expected #{this} to contain ' + _.inspect(str)
	      , 'expected #{this} to not contain ' + _.inspect(str)
	    );
	  });


	  /**
	   * ### .keys(key1, [key2], [...])
	   *
	   * Asserts that the target has exactly the given keys, or
	   * asserts the inclusion of some keys when using the
	   * `include` or `contain` modifiers.
	   *
	   *     expect({ foo: 1, bar: 2 }).to.have.keys(['foo', 'bar']);
	   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.keys('foo', 'bar');
	   *
	   * @name keys
	   * @alias key
	   * @param {String...|Array} keys
	   * @api public
	   */

	  function assertKeys (keys) {
	    var obj = flag(this, 'object')
	      , str
	      , ok = true;

	    keys = keys instanceof Array
	      ? keys
	      : Array.prototype.slice.call(arguments);

	    if (!keys.length) throw new Error('keys required');

	    var actual = Object.keys(obj)
	      , expected = keys
	      , len = keys.length;

	    // Inclusion
	    ok = keys.every(function(key){
	      return ~actual.indexOf(key);
	    });

	    // Strict
	    if (!flag(this, 'negate') && !flag(this, 'contains')) {
	      ok = ok && keys.length == actual.length;
	    }

	    // Key string
	    if (len > 1) {
	      keys = keys.map(function(key){
	        return _.inspect(key);
	      });
	      var last = keys.pop();
	      str = keys.join(', ') + ', and ' + last;
	    } else {
	      str = _.inspect(keys[0]);
	    }

	    // Form
	    str = (len > 1 ? 'keys ' : 'key ') + str;

	    // Have / include
	    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;

	    // Assertion
	    this.assert(
	        ok
	      , 'expected #{this} to ' + str
	      , 'expected #{this} to not ' + str
	      , expected.sort()
	      , actual.sort()
	      , true
	    );
	  }

	  Assertion.addMethod('keys', assertKeys);
	  Assertion.addMethod('key', assertKeys);

	  /**
	   * ### .throw(constructor)
	   *
	   * Asserts that the function target will throw a specific error, or specific type of error
	   * (as determined using `instanceof`), optionally with a RegExp or string inclusion test
	   * for the error's message.
	   *
	   *     var err = new ReferenceError('This is a bad function.');
	   *     var fn = function () { throw err; }
	   *     expect(fn).to.throw(ReferenceError);
	   *     expect(fn).to.throw(Error);
	   *     expect(fn).to.throw(/bad function/);
	   *     expect(fn).to.not.throw('good function');
	   *     expect(fn).to.throw(ReferenceError, /bad function/);
	   *     expect(fn).to.throw(err);
	   *     expect(fn).to.not.throw(new RangeError('Out of range.'));
	   *
	   * Please note that when a throw expectation is negated, it will check each
	   * parameter independently, starting with error constructor type. The appropriate way
	   * to check for the existence of a type of error but for a message that does not match
	   * is to use `and`.
	   *
	   *     expect(fn).to.throw(ReferenceError)
	   *        .and.not.throw(/good function/);
	   *
	   * @name throw
	   * @alias throws
	   * @alias Throw
	   * @param {ErrorConstructor} constructor
	   * @param {String|RegExp} expected error message
	   * @param {String} message _optional_
	   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
	   * @returns error for chaining (null if no error)
	   * @api public
	   */

	  function assertThrows (constructor, errMsg, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    new Assertion(obj, msg).is.a('function');

	    var thrown = false
	      , desiredError = null
	      , name = null
	      , thrownError = null;

	    if (arguments.length === 0) {
	      errMsg = null;
	      constructor = null;
	    } else if (constructor && (constructor instanceof RegExp || 'string' === typeof constructor)) {
	      errMsg = constructor;
	      constructor = null;
	    } else if (constructor && constructor instanceof Error) {
	      desiredError = constructor;
	      constructor = null;
	      errMsg = null;
	    } else if (typeof constructor === 'function') {
	      name = constructor.prototype.name || constructor.name;
	      if (name === 'Error' && constructor !== Error) {
	        name = (new constructor()).name;
	      }
	    } else {
	      constructor = null;
	    }

	    try {
	      obj();
	    } catch (err) {
	      // first, check desired error
	      if (desiredError) {
	        this.assert(
	            err === desiredError
	          , 'expected #{this} to throw #{exp} but #{act} was thrown'
	          , 'expected #{this} to not throw #{exp}'
	          , (desiredError instanceof Error ? desiredError.toString() : desiredError)
	          , (err instanceof Error ? err.toString() : err)
	        );

	        flag(this, 'object', err);
	        return this;
	      }

	      // next, check constructor
	      if (constructor) {
	        this.assert(
	            err instanceof constructor
	          , 'expected #{this} to throw #{exp} but #{act} was thrown'
	          , 'expected #{this} to not throw #{exp} but #{act} was thrown'
	          , name
	          , (err instanceof Error ? err.toString() : err)
	        );

	        if (!errMsg) {
	          flag(this, 'object', err);
	          return this;
	        }
	      }

	      // next, check message
	      var message = 'object' === _.type(err) && "message" in err
	        ? err.message
	        : '' + err;

	      if ((message != null) && errMsg && errMsg instanceof RegExp) {
	        this.assert(
	            errMsg.exec(message)
	          , 'expected #{this} to throw error matching #{exp} but got #{act}'
	          , 'expected #{this} to throw error not matching #{exp}'
	          , errMsg
	          , message
	        );

	        flag(this, 'object', err);
	        return this;
	      } else if ((message != null) && errMsg && 'string' === typeof errMsg) {
	        this.assert(
	            ~message.indexOf(errMsg)
	          , 'expected #{this} to throw error including #{exp} but got #{act}'
	          , 'expected #{this} to throw error not including #{act}'
	          , errMsg
	          , message
	        );

	        flag(this, 'object', err);
	        return this;
	      } else {
	        thrown = true;
	        thrownError = err;
	      }
	    }

	    var actuallyGot = ''
	      , expectedThrown = name !== null
	        ? name
	        : desiredError
	          ? '#{exp}' //_.inspect(desiredError)
	          : 'an error';

	    if (thrown) {
	      actuallyGot = ' but #{act} was thrown'
	    }

	    this.assert(
	        thrown === true
	      , 'expected #{this} to throw ' + expectedThrown + actuallyGot
	      , 'expected #{this} to not throw ' + expectedThrown + actuallyGot
	      , (desiredError instanceof Error ? desiredError.toString() : desiredError)
	      , (thrownError instanceof Error ? thrownError.toString() : thrownError)
	    );

	    flag(this, 'object', thrownError);
	  };

	  Assertion.addMethod('throw', assertThrows);
	  Assertion.addMethod('throws', assertThrows);
	  Assertion.addMethod('Throw', assertThrows);

	  /**
	   * ### .respondTo(method)
	   *
	   * Asserts that the object or class target will respond to a method.
	   *
	   *     Klass.prototype.bar = function(){};
	   *     expect(Klass).to.respondTo('bar');
	   *     expect(obj).to.respondTo('bar');
	   *
	   * To check if a constructor will respond to a static function,
	   * set the `itself` flag.
	   *
	   *     Klass.baz = function(){};
	   *     expect(Klass).itself.to.respondTo('baz');
	   *
	   * @name respondTo
	   * @param {String} method
	   * @param {String} message _optional_
	   * @api public
	   */

	  Assertion.addMethod('respondTo', function (method, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object')
	      , itself = flag(this, 'itself')
	      , context = ('function' === _.type(obj) && !itself)
	        ? obj.prototype[method]
	        : obj[method];

	    this.assert(
	        'function' === typeof context
	      , 'expected #{this} to respond to ' + _.inspect(method)
	      , 'expected #{this} to not respond to ' + _.inspect(method)
	    );
	  });

	  /**
	   * ### .itself
	   *
	   * Sets the `itself` flag, later used by the `respondTo` assertion.
	   *
	   *     function Foo() {}
	   *     Foo.bar = function() {}
	   *     Foo.prototype.baz = function() {}
	   *
	   *     expect(Foo).itself.to.respondTo('bar');
	   *     expect(Foo).itself.not.to.respondTo('baz');
	   *
	   * @name itself
	   * @api public
	   */

	  Assertion.addProperty('itself', function () {
	    flag(this, 'itself', true);
	  });

	  /**
	   * ### .satisfy(method)
	   *
	   * Asserts that the target passes a given truth test.
	   *
	   *     expect(1).to.satisfy(function(num) { return num > 0; });
	   *
	   * @name satisfy
	   * @param {Function} matcher
	   * @param {String} message _optional_
	   * @api public
	   */

	  Assertion.addMethod('satisfy', function (matcher, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');
	    var result = matcher(obj);
	    this.assert(
	        result
	      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)
	      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)
	      , this.negate ? false : true
	      , result
	    );
	  });

	  /**
	   * ### .closeTo(expected, delta)
	   *
	   * Asserts that the target is equal `expected`, to within a +/- `delta` range.
	   *
	   *     expect(1.5).to.be.closeTo(1, 0.5);
	   *
	   * @name closeTo
	   * @param {Number} expected
	   * @param {Number} delta
	   * @param {String} message _optional_
	   * @api public
	   */

	  Assertion.addMethod('closeTo', function (expected, delta, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');

	    new Assertion(obj, msg).is.a('number');
	    if (_.type(expected) !== 'number' || _.type(delta) !== 'number') {
	      throw new Error('the arguments to closeTo must be numbers');
	    }

	    this.assert(
	        Math.abs(obj - expected) <= delta
	      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta
	      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta
	    );
	  });

	  function isSubsetOf(subset, superset, cmp) {
	    return subset.every(function(elem) {
	      if (!cmp) return superset.indexOf(elem) !== -1;

	      return superset.some(function(elem2) {
	        return cmp(elem, elem2);
	      });
	    })
	  }

	  /**
	   * ### .members(set)
	   *
	   * Asserts that the target is a superset of `set`,
	   * or that the target and `set` have the same strictly-equal (===) members.
	   * Alternately, if the `deep` flag is set, set members are compared for deep
	   * equality.
	   *
	   *     expect([1, 2, 3]).to.include.members([3, 2]);
	   *     expect([1, 2, 3]).to.not.include.members([3, 2, 8]);
	   *
	   *     expect([4, 2]).to.have.members([2, 4]);
	   *     expect([5, 2]).to.not.have.members([5, 2, 1]);
	   *
	   *     expect([{ id: 1 }]).to.deep.include.members([{ id: 1 }]);
	   *
	   * @name members
	   * @param {Array} set
	   * @param {String} message _optional_
	   * @api public
	   */

	  Assertion.addMethod('members', function (subset, msg) {
	    if (msg) flag(this, 'message', msg);
	    var obj = flag(this, 'object');

	    new Assertion(obj).to.be.an('array');
	    new Assertion(subset).to.be.an('array');

	    var cmp = flag(this, 'deep') ? _.eql : undefined;

	    if (flag(this, 'contains')) {
	      return this.assert(
	          isSubsetOf(subset, obj, cmp)
	        , 'expected #{this} to be a superset of #{act}'
	        , 'expected #{this} to not be a superset of #{act}'
	        , obj
	        , subset
	      );
	    }

	    this.assert(
	        isSubsetOf(obj, subset, cmp) && isSubsetOf(subset, obj, cmp)
	        , 'expected #{this} to have the same members as #{act}'
	        , 'expected #{this} to not have the same members as #{act}'
	        , obj
	        , subset
	    );
	  });
	};


/***/ },
/* 689 */
/***/ function(module, exports) {

	/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	module.exports = function (chai, util) {
	  chai.expect = function (val, message) {
	    return new chai.Assertion(val, message);
	  };
	};



/***/ },
/* 690 */
/***/ function(module, exports) {

	/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */

	module.exports = function (chai, util) {
	  var Assertion = chai.Assertion;

	  function loadShould () {
	    // explicitly define this method as function as to have it's name to include as `ssfi`
	    function shouldGetter() {
	      if (this instanceof String || this instanceof Number) {
	        return new Assertion(this.constructor(this), null, shouldGetter);
	      } else if (this instanceof Boolean) {
	        return new Assertion(this == true, null, shouldGetter);
	      }
	      return new Assertion(this, null, shouldGetter);
	    }
	    function shouldSetter(value) {
	      // See https://github.com/chaijs/chai/issues/86: this makes
	      // `whatever.should = someValue` actually set `someValue`, which is
	      // especially useful for `global.should = require('chai').should()`.
	      //
	      // Note that we have to use [[DefineProperty]] instead of [[Put]]
	      // since otherwise we would trigger this very setter!
	      Object.defineProperty(this, 'should', {
	        value: value,
	        enumerable: true,
	        configurable: true,
	        writable: true
	      });
	    }
	    // modify Object.prototype to have `should`
	    Object.defineProperty(Object.prototype, 'should', {
	      set: shouldSetter
	      , get: shouldGetter
	      , configurable: true
	    });

	    var should = {};

	    should.equal = function (val1, val2, msg) {
	      new Assertion(val1, msg).to.equal(val2);
	    };

	    should.Throw = function (fn, errt, errs, msg) {
	      new Assertion(fn, msg).to.Throw(errt, errs);
	    };

	    should.exist = function (val, msg) {
	      new Assertion(val, msg).to.exist;
	    }

	    // negation
	    should.not = {}

	    should.not.equal = function (val1, val2, msg) {
	      new Assertion(val1, msg).to.not.equal(val2);
	    };

	    should.not.Throw = function (fn, errt, errs, msg) {
	      new Assertion(fn, msg).to.not.Throw(errt, errs);
	    };

	    should.not.exist = function (val, msg) {
	      new Assertion(val, msg).to.not.exist;
	    }

	    should['throw'] = should['Throw'];
	    should.not['throw'] = should.not['Throw'];

	    return should;
	  };

	  chai.should = loadShould;
	  chai.Should = loadShould;
	};


/***/ },
/* 691 */
/***/ function(module, exports) {

	/*!
	 * chai
	 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
	 * MIT Licensed
	 */


	module.exports = function (chai, util) {

	  /*!
	   * Chai dependencies.
	   */

	  var Assertion = chai.Assertion
	    , flag = util.flag;

	  /*!
	   * Module export.
	   */

	  /**
	   * ### assert(expression, message)
	   *
	   * Write your own test expressions.
	   *
	   *     assert('foo' !== 'bar', 'foo is not bar');
	   *     assert(Array.isArray([]), 'empty arrays are arrays');
	   *
	   * @param {Mixed} expression to test for truthiness
	   * @param {String} message to display on error
	   * @name assert
	   * @api public
	   */

	  var assert = chai.assert = function (express, errmsg) {
	    var test = new Assertion(null, null, chai.assert);
	    test.assert(
	        express
	      , errmsg
	      , '[ negation message unavailable ]'
	    );
	  };

	  /**
	   * ### .fail(actual, expected, [message], [operator])
	   *
	   * Throw a failure. Node.js `assert` module-compatible.
	   *
	   * @name fail
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @param {String} operator
	   * @api public
	   */

	  assert.fail = function (actual, expected, message, operator) {
	    message = message || 'assert.fail()';
	    throw new chai.AssertionError(message, {
	        actual: actual
	      , expected: expected
	      , operator: operator
	    }, assert.fail);
	  };

	  /**
	   * ### .ok(object, [message])
	   *
	   * Asserts that `object` is truthy.
	   *
	   *     assert.ok('everything', 'everything is ok');
	   *     assert.ok(false, 'this will fail');
	   *
	   * @name ok
	   * @param {Mixed} object to test
	   * @param {String} message
	   * @api public
	   */

	  assert.ok = function (val, msg) {
	    new Assertion(val, msg).is.ok;
	  };

	  /**
	   * ### .notOk(object, [message])
	   *
	   * Asserts that `object` is falsy.
	   *
	   *     assert.notOk('everything', 'this will fail');
	   *     assert.notOk(false, 'this will pass');
	   *
	   * @name notOk
	   * @param {Mixed} object to test
	   * @param {String} message
	   * @api public
	   */

	  assert.notOk = function (val, msg) {
	    new Assertion(val, msg).is.not.ok;
	  };

	  /**
	   * ### .equal(actual, expected, [message])
	   *
	   * Asserts non-strict equality (`==`) of `actual` and `expected`.
	   *
	   *     assert.equal(3, '3', '== coerces values to strings');
	   *
	   * @name equal
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @api public
	   */

	  assert.equal = function (act, exp, msg) {
	    var test = new Assertion(act, msg, assert.equal);

	    test.assert(
	        exp == flag(test, 'object')
	      , 'expected #{this} to equal #{exp}'
	      , 'expected #{this} to not equal #{act}'
	      , exp
	      , act
	    );
	  };

	  /**
	   * ### .notEqual(actual, expected, [message])
	   *
	   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.
	   *
	   *     assert.notEqual(3, 4, 'these numbers are not equal');
	   *
	   * @name notEqual
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @api public
	   */

	  assert.notEqual = function (act, exp, msg) {
	    var test = new Assertion(act, msg, assert.notEqual);

	    test.assert(
	        exp != flag(test, 'object')
	      , 'expected #{this} to not equal #{exp}'
	      , 'expected #{this} to equal #{act}'
	      , exp
	      , act
	    );
	  };

	  /**
	   * ### .strictEqual(actual, expected, [message])
	   *
	   * Asserts strict equality (`===`) of `actual` and `expected`.
	   *
	   *     assert.strictEqual(true, true, 'these booleans are strictly equal');
	   *
	   * @name strictEqual
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @api public
	   */

	  assert.strictEqual = function (act, exp, msg) {
	    new Assertion(act, msg).to.equal(exp);
	  };

	  /**
	   * ### .notStrictEqual(actual, expected, [message])
	   *
	   * Asserts strict inequality (`!==`) of `actual` and `expected`.
	   *
	   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');
	   *
	   * @name notStrictEqual
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @api public
	   */

	  assert.notStrictEqual = function (act, exp, msg) {
	    new Assertion(act, msg).to.not.equal(exp);
	  };

	  /**
	   * ### .deepEqual(actual, expected, [message])
	   *
	   * Asserts that `actual` is deeply equal to `expected`.
	   *
	   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });
	   *
	   * @name deepEqual
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @api public
	   */

	  assert.deepEqual = function (act, exp, msg) {
	    new Assertion(act, msg).to.eql(exp);
	  };

	  /**
	   * ### .notDeepEqual(actual, expected, [message])
	   *
	   * Assert that `actual` is not deeply equal to `expected`.
	   *
	   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });
	   *
	   * @name notDeepEqual
	   * @param {Mixed} actual
	   * @param {Mixed} expected
	   * @param {String} message
	   * @api public
	   */

	  assert.notDeepEqual = function (act, exp, msg) {
	    new Assertion(act, msg).to.not.eql(exp);
	  };

	  /**
	   * ### .isTrue(value, [message])
	   *
	   * Asserts that `value` is true.
	   *
	   *     var teaServed = true;
	   *     assert.isTrue(teaServed, 'the tea has been served');
	   *
	   * @name isTrue
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isTrue = function (val, msg) {
	    new Assertion(val, msg).is['true'];
	  };

	  /**
	   * ### .isFalse(value, [message])
	   *
	   * Asserts that `value` is false.
	   *
	   *     var teaServed = false;
	   *     assert.isFalse(teaServed, 'no tea yet? hmm...');
	   *
	   * @name isFalse
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isFalse = function (val, msg) {
	    new Assertion(val, msg).is['false'];
	  };

	  /**
	   * ### .isNull(value, [message])
	   *
	   * Asserts that `value` is null.
	   *
	   *     assert.isNull(err, 'there was no error');
	   *
	   * @name isNull
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isNull = function (val, msg) {
	    new Assertion(val, msg).to.equal(null);
	  };

	  /**
	   * ### .isNotNull(value, [message])
	   *
	   * Asserts that `value` is not null.
	   *
	   *     var tea = 'tasty chai';
	   *     assert.isNotNull(tea, 'great, time for tea!');
	   *
	   * @name isNotNull
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isNotNull = function (val, msg) {
	    new Assertion(val, msg).to.not.equal(null);
	  };

	  /**
	   * ### .isUndefined(value, [message])
	   *
	   * Asserts that `value` is `undefined`.
	   *
	   *     var tea;
	   *     assert.isUndefined(tea, 'no tea defined');
	   *
	   * @name isUndefined
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isUndefined = function (val, msg) {
	    new Assertion(val, msg).to.equal(undefined);
	  };

	  /**
	   * ### .isDefined(value, [message])
	   *
	   * Asserts that `value` is not `undefined`.
	   *
	   *     var tea = 'cup of chai';
	   *     assert.isDefined(tea, 'tea has been defined');
	   *
	   * @name isDefined
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isDefined = function (val, msg) {
	    new Assertion(val, msg).to.not.equal(undefined);
	  };

	  /**
	   * ### .isFunction(value, [message])
	   *
	   * Asserts that `value` is a function.
	   *
	   *     function serveTea() { return 'cup of tea'; };
	   *     assert.isFunction(serveTea, 'great, we can have tea now');
	   *
	   * @name isFunction
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isFunction = function (val, msg) {
	    new Assertion(val, msg).to.be.a('function');
	  };

	  /**
	   * ### .isNotFunction(value, [message])
	   *
	   * Asserts that `value` is _not_ a function.
	   *
	   *     var serveTea = [ 'heat', 'pour', 'sip' ];
	   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');
	   *
	   * @name isNotFunction
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isNotFunction = function (val, msg) {
	    new Assertion(val, msg).to.not.be.a('function');
	  };

	  /**
	   * ### .isObject(value, [message])
	   *
	   * Asserts that `value` is an object (as revealed by
	   * `Object.prototype.toString`).
	   *
	   *     var selection = { name: 'Chai', serve: 'with spices' };
	   *     assert.isObject(selection, 'tea selection is an object');
	   *
	   * @name isObject
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isObject = function (val, msg) {
	    new Assertion(val, msg).to.be.a('object');
	  };

	  /**
	   * ### .isNotObject(value, [message])
	   *
	   * Asserts that `value` is _not_ an object.
	   *
	   *     var selection = 'chai'
	   *     assert.isNotObject(selection, 'tea selection is not an object');
	   *     assert.isNotObject(null, 'null is not an object');
	   *
	   * @name isNotObject
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isNotObject = function (val, msg) {
	    new Assertion(val, msg).to.not.be.a('object');
	  };

	  /**
	   * ### .isArray(value, [message])
	   *
	   * Asserts that `value` is an array.
	   *
	   *     var menu = [ 'green', 'chai', 'oolong' ];
	   *     assert.isArray(menu, 'what kind of tea do we want?');
	   *
	   * @name isArray
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isArray = function (val, msg) {
	    new Assertion(val, msg).to.be.an('array');
	  };

	  /**
	   * ### .isNotArray(value, [message])
	   *
	   * Asserts that `value` is _not_ an array.
	   *
	   *     var menu = 'green|chai|oolong';
	   *     assert.isNotArray(menu, 'what kind of tea do we want?');
	   *
	   * @name isNotArray
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isNotArray = function (val, msg) {
	    new Assertion(val, msg).to.not.be.an('array');
	  };

	  /**
	   * ### .isString(value, [message])
	   *
	   * Asserts that `value` is a string.
	   *
	   *     var teaOrder = 'chai';
	   *     assert.isString(teaOrder, 'order placed');
	   *
	   * @name isString
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isString = function (val, msg) {
	    new Assertion(val, msg).to.be.a('string');
	  };

	  /**
	   * ### .isNotString(value, [message])
	   *
	   * Asserts that `value` is _not_ a string.
	   *
	   *     var teaOrder = 4;
	   *     assert.isNotString(teaOrder, 'order placed');
	   *
	   * @name isNotString
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isNotString = function (val, msg) {
	    new Assertion(val, msg).to.not.be.a('string');
	  };

	  /**
	   * ### .isNumber(value, [message])
	   *
	   * Asserts that `value` is a number.
	   *
	   *     var cups = 2;
	   *     assert.isNumber(cups, 'how many cups');
	   *
	   * @name isNumber
	   * @param {Number} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isNumber = function (val, msg) {
	    new Assertion(val, msg).to.be.a('number');
	  };

	  /**
	   * ### .isNotNumber(value, [message])
	   *
	   * Asserts that `value` is _not_ a number.
	   *
	   *     var cups = '2 cups please';
	   *     assert.isNotNumber(cups, 'how many cups');
	   *
	   * @name isNotNumber
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isNotNumber = function (val, msg) {
	    new Assertion(val, msg).to.not.be.a('number');
	  };

	  /**
	   * ### .isBoolean(value, [message])
	   *
	   * Asserts that `value` is a boolean.
	   *
	   *     var teaReady = true
	   *       , teaServed = false;
	   *
	   *     assert.isBoolean(teaReady, 'is the tea ready');
	   *     assert.isBoolean(teaServed, 'has tea been served');
	   *
	   * @name isBoolean
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isBoolean = function (val, msg) {
	    new Assertion(val, msg).to.be.a('boolean');
	  };

	  /**
	   * ### .isNotBoolean(value, [message])
	   *
	   * Asserts that `value` is _not_ a boolean.
	   *
	   *     var teaReady = 'yep'
	   *       , teaServed = 'nope';
	   *
	   *     assert.isNotBoolean(teaReady, 'is the tea ready');
	   *     assert.isNotBoolean(teaServed, 'has tea been served');
	   *
	   * @name isNotBoolean
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.isNotBoolean = function (val, msg) {
	    new Assertion(val, msg).to.not.be.a('boolean');
	  };

	  /**
	   * ### .typeOf(value, name, [message])
	   *
	   * Asserts that `value`'s type is `name`, as determined by
	   * `Object.prototype.toString`.
	   *
	   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');
	   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');
	   *     assert.typeOf('tea', 'string', 'we have a string');
	   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');
	   *     assert.typeOf(null, 'null', 'we have a null');
	   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');
	   *
	   * @name typeOf
	   * @param {Mixed} value
	   * @param {String} name
	   * @param {String} message
	   * @api public
	   */

	  assert.typeOf = function (val, type, msg) {
	    new Assertion(val, msg).to.be.a(type);
	  };

	  /**
	   * ### .notTypeOf(value, name, [message])
	   *
	   * Asserts that `value`'s type is _not_ `name`, as determined by
	   * `Object.prototype.toString`.
	   *
	   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');
	   *
	   * @name notTypeOf
	   * @param {Mixed} value
	   * @param {String} typeof name
	   * @param {String} message
	   * @api public
	   */

	  assert.notTypeOf = function (val, type, msg) {
	    new Assertion(val, msg).to.not.be.a(type);
	  };

	  /**
	   * ### .instanceOf(object, constructor, [message])
	   *
	   * Asserts that `value` is an instance of `constructor`.
	   *
	   *     var Tea = function (name) { this.name = name; }
	   *       , chai = new Tea('chai');
	   *
	   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');
	   *
	   * @name instanceOf
	   * @param {Object} object
	   * @param {Constructor} constructor
	   * @param {String} message
	   * @api public
	   */

	  assert.instanceOf = function (val, type, msg) {
	    new Assertion(val, msg).to.be.instanceOf(type);
	  };

	  /**
	   * ### .notInstanceOf(object, constructor, [message])
	   *
	   * Asserts `value` is not an instance of `constructor`.
	   *
	   *     var Tea = function (name) { this.name = name; }
	   *       , chai = new String('chai');
	   *
	   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');
	   *
	   * @name notInstanceOf
	   * @param {Object} object
	   * @param {Constructor} constructor
	   * @param {String} message
	   * @api public
	   */

	  assert.notInstanceOf = function (val, type, msg) {
	    new Assertion(val, msg).to.not.be.instanceOf(type);
	  };

	  /**
	   * ### .include(haystack, needle, [message])
	   *
	   * Asserts that `haystack` includes `needle`. Works
	   * for strings and arrays.
	   *
	   *     assert.include('foobar', 'bar', 'foobar contains string "bar"');
	   *     assert.include([ 1, 2, 3 ], 3, 'array contains value');
	   *
	   * @name include
	   * @param {Array|String} haystack
	   * @param {Mixed} needle
	   * @param {String} message
	   * @api public
	   */

	  assert.include = function (exp, inc, msg) {
	    new Assertion(exp, msg, assert.include).include(inc);
	  };

	  /**
	   * ### .notInclude(haystack, needle, [message])
	   *
	   * Asserts that `haystack` does not include `needle`. Works
	   * for strings and arrays.
	   *i
	   *     assert.notInclude('foobar', 'baz', 'string not include substring');
	   *     assert.notInclude([ 1, 2, 3 ], 4, 'array not include contain value');
	   *
	   * @name notInclude
	   * @param {Array|String} haystack
	   * @param {Mixed} needle
	   * @param {String} message
	   * @api public
	   */

	  assert.notInclude = function (exp, inc, msg) {
	    new Assertion(exp, msg, assert.notInclude).not.include(inc);
	  };

	  /**
	   * ### .match(value, regexp, [message])
	   *
	   * Asserts that `value` matches the regular expression `regexp`.
	   *
	   *     assert.match('foobar', /^foo/, 'regexp matches');
	   *
	   * @name match
	   * @param {Mixed} value
	   * @param {RegExp} regexp
	   * @param {String} message
	   * @api public
	   */

	  assert.match = function (exp, re, msg) {
	    new Assertion(exp, msg).to.match(re);
	  };

	  /**
	   * ### .notMatch(value, regexp, [message])
	   *
	   * Asserts that `value` does not match the regular expression `regexp`.
	   *
	   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');
	   *
	   * @name notMatch
	   * @param {Mixed} value
	   * @param {RegExp} regexp
	   * @param {String} message
	   * @api public
	   */

	  assert.notMatch = function (exp, re, msg) {
	    new Assertion(exp, msg).to.not.match(re);
	  };

	  /**
	   * ### .property(object, property, [message])
	   *
	   * Asserts that `object` has a property named by `property`.
	   *
	   *     assert.property({ tea: { green: 'matcha' }}, 'tea');
	   *
	   * @name property
	   * @param {Object} object
	   * @param {String} property
	   * @param {String} message
	   * @api public
	   */

	  assert.property = function (obj, prop, msg) {
	    new Assertion(obj, msg).to.have.property(prop);
	  };

	  /**
	   * ### .notProperty(object, property, [message])
	   *
	   * Asserts that `object` does _not_ have a property named by `property`.
	   *
	   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');
	   *
	   * @name notProperty
	   * @param {Object} object
	   * @param {String} property
	   * @param {String} message
	   * @api public
	   */

	  assert.notProperty = function (obj, prop, msg) {
	    new Assertion(obj, msg).to.not.have.property(prop);
	  };

	  /**
	   * ### .deepProperty(object, property, [message])
	   *
	   * Asserts that `object` has a property named by `property`, which can be a
	   * string using dot- and bracket-notation for deep reference.
	   *
	   *     assert.deepProperty({ tea: { green: 'matcha' }}, 'tea.green');
	   *
	   * @name deepProperty
	   * @param {Object} object
	   * @param {String} property
	   * @param {String} message
	   * @api public
	   */

	  assert.deepProperty = function (obj, prop, msg) {
	    new Assertion(obj, msg).to.have.deep.property(prop);
	  };

	  /**
	   * ### .notDeepProperty(object, property, [message])
	   *
	   * Asserts that `object` does _not_ have a property named by `property`, which
	   * can be a string using dot- and bracket-notation for deep reference.
	   *
	   *     assert.notDeepProperty({ tea: { green: 'matcha' }}, 'tea.oolong');
	   *
	   * @name notDeepProperty
	   * @param {Object} object
	   * @param {String} property
	   * @param {String} message
	   * @api public
	   */

	  assert.notDeepProperty = function (obj, prop, msg) {
	    new Assertion(obj, msg).to.not.have.deep.property(prop);
	  };

	  /**
	   * ### .propertyVal(object, property, value, [message])
	   *
	   * Asserts that `object` has a property named by `property` with value given
	   * by `value`.
	   *
	   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');
	   *
	   * @name propertyVal
	   * @param {Object} object
	   * @param {String} property
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.propertyVal = function (obj, prop, val, msg) {
	    new Assertion(obj, msg).to.have.property(prop, val);
	  };

	  /**
	   * ### .propertyNotVal(object, property, value, [message])
	   *
	   * Asserts that `object` has a property named by `property`, but with a value
	   * different from that given by `value`.
	   *
	   *     assert.propertyNotVal({ tea: 'is good' }, 'tea', 'is bad');
	   *
	   * @name propertyNotVal
	   * @param {Object} object
	   * @param {String} property
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.propertyNotVal = function (obj, prop, val, msg) {
	    new Assertion(obj, msg).to.not.have.property(prop, val);
	  };

	  /**
	   * ### .deepPropertyVal(object, property, value, [message])
	   *
	   * Asserts that `object` has a property named by `property` with value given
	   * by `value`. `property` can use dot- and bracket-notation for deep
	   * reference.
	   *
	   *     assert.deepPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');
	   *
	   * @name deepPropertyVal
	   * @param {Object} object
	   * @param {String} property
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.deepPropertyVal = function (obj, prop, val, msg) {
	    new Assertion(obj, msg).to.have.deep.property(prop, val);
	  };

	  /**
	   * ### .deepPropertyNotVal(object, property, value, [message])
	   *
	   * Asserts that `object` has a property named by `property`, but with a value
	   * different from that given by `value`. `property` can use dot- and
	   * bracket-notation for deep reference.
	   *
	   *     assert.deepPropertyNotVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');
	   *
	   * @name deepPropertyNotVal
	   * @param {Object} object
	   * @param {String} property
	   * @param {Mixed} value
	   * @param {String} message
	   * @api public
	   */

	  assert.deepPropertyNotVal = function (obj, prop, val, msg) {
	    new Assertion(obj, msg).to.not.have.deep.property(prop, val);
	  };

	  /**
	   * ### .lengthOf(object, length, [message])
	   *
	   * Asserts that `object` has a `length` property with the expected value.
	   *
	   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');
	   *     assert.lengthOf('foobar', 5, 'string has length of 6');
	   *
	   * @name lengthOf
	   * @param {Mixed} object
	   * @param {Number} length
	   * @param {String} message
	   * @api public
	   */

	  assert.lengthOf = function (exp, len, msg) {
	    new Assertion(exp, msg).to.have.length(len);
	  };

	  /**
	   * ### .throws(function, [constructor/string/regexp], [string/regexp], [message])
	   *
	   * Asserts that `function` will throw an error that is an instance of
	   * `constructor`, or alternately that it will throw an error with message
	   * matching `regexp`.
	   *
	   *     assert.throw(fn, 'function throws a reference error');
	   *     assert.throw(fn, /function throws a reference error/);
	   *     assert.throw(fn, ReferenceError);
	   *     assert.throw(fn, ReferenceError, 'function throws a reference error');
	   *     assert.throw(fn, ReferenceError, /function throws a reference error/);
	   *
	   * @name throws
	   * @alias throw
	   * @alias Throw
	   * @param {Function} function
	   * @param {ErrorConstructor} constructor
	   * @param {RegExp} regexp
	   * @param {String} message
	   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
	   * @api public
	   */

	  assert.Throw = function (fn, errt, errs, msg) {
	    if ('string' === typeof errt || errt instanceof RegExp) {
	      errs = errt;
	      errt = null;
	    }

	    var assertErr = new Assertion(fn, msg).to.Throw(errt, errs);
	    return flag(assertErr, 'object');
	  };

	  /**
	   * ### .doesNotThrow(function, [constructor/regexp], [message])
	   *
	   * Asserts that `function` will _not_ throw an error that is an instance of
	   * `constructor`, or alternately that it will not throw an error with message
	   * matching `regexp`.
	   *
	   *     assert.doesNotThrow(fn, Error, 'function does not throw');
	   *
	   * @name doesNotThrow
	   * @param {Function} function
	   * @param {ErrorConstructor} constructor
	   * @param {RegExp} regexp
	   * @param {String} message
	   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
	   * @api public
	   */

	  assert.doesNotThrow = function (fn, type, msg) {
	    if ('string' === typeof type) {
	      msg = type;
	      type = null;
	    }

	    new Assertion(fn, msg).to.not.Throw(type);
	  };

	  /**
	   * ### .operator(val1, operator, val2, [message])
	   *
	   * Compares two values using `operator`.
	   *
	   *     assert.operator(1, '<', 2, 'everything is ok');
	   *     assert.operator(1, '>', 2, 'this will fail');
	   *
	   * @name operator
	   * @param {Mixed} val1
	   * @param {String} operator
	   * @param {Mixed} val2
	   * @param {String} message
	   * @api public
	   */

	  assert.operator = function (val, operator, val2, msg) {
	    if (!~['==', '===', '>', '>=', '<', '<=', '!=', '!=='].indexOf(operator)) {
	      throw new Error('Invalid operator "' + operator + '"');
	    }
	    var test = new Assertion(eval(val + operator + val2), msg);
	    test.assert(
	        true === flag(test, 'object')
	      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)
	      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );
	  };

	  /**
	   * ### .closeTo(actual, expected, delta, [message])
	   *
	   * Asserts that the target is equal `expected`, to within a +/- `delta` range.
	   *
	   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');
	   *
	   * @name closeTo
	   * @param {Number} actual
	   * @param {Number} expected
	   * @param {Number} delta
	   * @param {String} message
	   * @api public
	   */

	  assert.closeTo = function (act, exp, delta, msg) {
	    new Assertion(act, msg).to.be.closeTo(exp, delta);
	  };

	  /**
	   * ### .sameMembers(set1, set2, [message])
	   *
	   * Asserts that `set1` and `set2` have the same members.
	   * Order is not taken into account.
	   *
	   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');
	   *
	   * @name sameMembers
	   * @param {Array} set1
	   * @param {Array} set2
	   * @param {String} message
	   * @api public
	   */

	  assert.sameMembers = function (set1, set2, msg) {
	    new Assertion(set1, msg).to.have.same.members(set2);
	  }

	  /**
	   * ### .includeMembers(superset, subset, [message])
	   *
	   * Asserts that `subset` is included in `superset`.
	   * Order is not taken into account.
	   *
	   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1 ], 'include members');
	   *
	   * @name includeMembers
	   * @param {Array} superset
	   * @param {Array} subset
	   * @param {String} message
	   * @api public
	   */

	  assert.includeMembers = function (superset, subset, msg) {
	    new Assertion(superset, msg).to.include.members(subset);
	  }

	  /*!
	   * Undocumented / untested
	   */

	  assert.ifError = function (val, msg) {
	    new Assertion(val, msg).to.not.be.ok;
	  };

	  /*!
	   * Aliases.
	   */

	  (function alias(name, as){
	    assert[as] = assert[name];
	    return alias;
	  })
	  ('Throw', 'throw')
	  ('Throw', 'throws');
	};


/***/ },
/* 692 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	function rewire(module) {
	    var rewiredModule = {
	        id: module,
	        loaded: false,
	        exports: {}
	    };

	    __webpack_require__.m[module].call(rewiredModule.exports, rewiredModule, rewiredModule.exports, __webpack_require__);
	    rewiredModule.loaded = true;

	    return rewiredModule.exports;
	}

	module.exports = rewire;

/***/ },
/* 693 */
/***/ function(module, exports, __webpack_require__) {

	                                                                                                                                                /* this line was injected by rewire() */ var global = window; eval(__webpack_require__(694)()); (function () {  "use strict"; 'use strict';

	Object.defineProperty(exports, '__esModule', {
	    value: true
	});

	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

	var FabricJs = __webpack_require__(8).fabric;

	var isTest = false;

	var FabricProvider = function FabricProvider() {
	    _classCallCheck(this, FabricProvider);

	    this.fabric = isTest ? {} : FabricJs;
	};

	exports['default'] = FabricProvider;
	module.exports = exports['default'];
	Object.defineProperty(module.exports, '__get__', {enumerable: false, value: function __get__() {
	    arguments.varName = arguments[0];
	    if (arguments.varName && typeof arguments.varName === "string") {
	        return eval(arguments.varName);
	    } else {
	        throw new TypeError("__get__ expects a non-empty string");
	    }
	}}); Object.defineProperty(module.exports, '__set__', {enumerable: false, value: function __set__() {
	    arguments.varName = arguments[0];
	    arguments.varValue = arguments[1];
	    // Saving references to global objects and functions. Thus a test may even change these variables
	    // without interfering with rewire().
	    // @see https://github.com/jhnns/rewire/issues/40
	    arguments.refs = arguments[2] || {
	        isArray: Array.isArray,
	        TypeError: TypeError,
	        stringify: JSON.stringify
	        // We can't save eval() because eval() is a *special* global function
	        // That's why it can't be re-assigned in strict mode
	        //eval: eval
	    };
	    arguments.src = "";
	    arguments.revertArgs = [];

	    if (typeof arguments[0] === "object") {
	        arguments.env = arguments.varName;
	        if (!arguments.env || arguments.refs.isArray(arguments.env)) {
	            throw new arguments.refs.TypeError("__set__ expects an object as env");
	        }
	        arguments.revertArgs[0] = {};
	        for (arguments.varName in arguments.env) {
	            if (arguments.env.hasOwnProperty(arguments.varName)) {
	                arguments.varValue = arguments.env[arguments.varName];
	                arguments.src += arguments.varName + " = arguments.env[" + arguments.refs.stringify(arguments.varName) + "]; ";
	                try {
	                    // Allow tests to mock implicit globals
	                    // @see https://github.com/jhnns/rewire/issues/35
	                    arguments.revertArgs[0][arguments.varName] = eval(arguments.varName);
	                } catch (err) {
	                    arguments.revertArgs[0][arguments.varName] = undefined;
	                }
	            }
	        }
	    } else if (typeof arguments.varName === "string") {
	        if (!arguments.varName) {
	            throw new arguments.refs.TypeError("__set__ expects a non-empty string as a variable name");
	        }
	        arguments.src = arguments.varName + " = arguments.varValue;";
	        try {
	            // Allow tests to mock implicit globals
	            // @see https://github.com/jhnns/rewire/issues/35
	            arguments.revertArgs = [arguments.varName, eval(arguments.varName)];
	        } catch (err) {
	            arguments.revertArgs = [arguments.varName, undefined];
	        }
	    } else {
	        throw new arguments.refs.TypeError("__set__ expects an environment object or a non-empty string as a variable name");
	    }

	    // Passing our saved references on to the revert function
	    arguments.revertArgs[2] = arguments.refs;

	    eval(arguments.src);

	    return function (revertArgs) {
	        __set__.apply(null, revertArgs);
	    }.bind(null, arguments.revertArgs);
	}}); Object.defineProperty(module.exports, '__with__', {enumerable: false, value: function __with__() {
	    var args = arguments;

	    return function (callback) {
	        var undo,
	            returned,
	            isPromise;

	        if (typeof callback !== "function") {
	            throw new TypeError("__with__ expects a callback function");
	        }

	        undo = module.exports.__set__.apply(null, args);

	        try {
	            returned = callback();
	            isPromise = returned && typeof returned.then === "function";
	            if (isPromise) {
	                returned.then(undo, undo);
	                return returned;
	            }
	        } finally {
	            if (!isPromise) {
	                undo();
	            }
	        }
	    };
	}});  })();

/***/ },
/* 694 */
/***/ function(module, exports) {

	/**
	 * Declares all globals with a var and assigns the global object. Thus you're able to
	 * override globals without changing the global object itself.
	 *
	 * Returns something like
	 * "var console = global.console; var process = global.process; ..."
	 *
	 * @return {String}
	 */
	function getImportGlobalsSrc(ignore) {
	    var key,
	        value,
	        src = "",
	        globalObj = typeof global === "undefined"? window: global;

	    ignore = ignore || [];
	    // global itself can't be overridden because it's the only reference to our real global objects
	    ignore.push("global");
	    // ignore 'module', 'exports' and 'require' on the global scope, because otherwise our code would
	    // shadow the module-internal variables
	    // @see https://github.com/jhnns/rewire-webpack/pull/6
	    ignore.push("module", "exports", "require");

	    for (key in globalObj) { /* jshint forin: false */
	        if (ignore.indexOf(key) !== -1) {
	            continue;
	        }
	        value = globalObj[key];

	        // key may be an invalid variable name (e.g. 'a-b')
	        try {
	          eval("var " + key + ";");
	          src += "var " + key + " = global." + key + "; ";
	        } catch(e) {}
	    }

	    return src;
	}

	module.exports = getImportGlobalsSrc;


/***/ },
/* 695 */
/***/ function(module, exports, __webpack_require__) {

	/******/'use strict';(function(modules){ // webpackBootstrap
	/******/ // The module cache
	/******/var installedModules={}; /******/ // The require function
	/******/function __webpack_require__(moduleId){ /******/ // Check if module is in cache
	/******/if(installedModules[moduleId]) /******/return installedModules[moduleId].exports; /******/ // Create a new module (and put it into the cache)
	/******/var module=installedModules[moduleId] = { /******/exports:{}, /******/id:moduleId, /******/loaded:false /******/}; /******/ // Execute the module function
	/******/modules[moduleId].call(module.exports,module,module.exports,__webpack_require__); /******/ // Flag the module as loaded
	/******/module.loaded = true; /******/ // Return the exports of the module
	/******/return module.exports; /******/} /******/ // expose the modules object (__webpack_modules__)
	/******/__webpack_require__.m = modules; /******/ // expose the module cache
	/******/__webpack_require__.c = installedModules; /******/ // __webpack_public_path__
	/******/__webpack_require__.p = ""; /******/ // Load entry module and return exports
	/******/return __webpack_require__(0); /******/})( /************************************************************************/ /******/[ /* 0 */function(module,exports,__webpack_require__){ //import ArrowTool from '../src/js/tools/arrow.js';
	var chai=__webpack_require__(1);var expect=chai.expect;var expect=chai.expect;describe('ArrowTool',function(){var canvasWrapper={},eventAggregator={};var subscriptionTopic=undefined,subscriberId=undefined,toolbarSubscriptionFn=undefined,arrowTool=undefined,notificationTopic=undefined;;eventAggregator.subscribeTo = function(topic,_subscriberId,callback){subscriptionTopic = topic;subscriberId = _subscriberId;toolbarSubscriptionFn = callback;};eventAggregator.notify = function(_topic,originId,message){notificationTopic = _topic;};describe('should register for toolbar event',function(){it('with parameter topicName "arr_t"',function(){arrowTool = new ArrowTool(canvasWrapper,eventAggregator);expect(subscriptionTopic).to.equal('arr_t');});it('with parameter subscriber "ArrowTool"',function(){arrowTool = new ArrowTool(canvasWrapper,eventAggregator);expect(subscriberId).to.equal('ArrowTool');});});describe('upon toolbar activation',function(){beforeEach(function(){window.fabric = {Line:function Line(){}};arrowTool = new ArrowTool(canvasWrapper,eventAggregator);toolbarSubscriptionFn.apply(toolbarSubscriptionFn,[]);});it('should register for keydown event',function(){expect(subscriptionTopic).to.equal('keydown');expect(subscriberId).to.equal('ArrowTool');});});}); /***/}, /* 1 */function(module,exports,__webpack_require__){module.exports = __webpack_require__(2); /***/}, /* 2 */function(module,exports,__webpack_require__){ /*!
		 * chai
		 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */var used=[],exports=module.exports = {}; /*!
		 * Chai version
		 */exports.version = '1.10.0'; /*!
		 * Assertion Error
		 */exports.AssertionError = __webpack_require__(3); /*!
		 * Utils for plugins (not exported)
		 */var util=__webpack_require__(4); /**
		 * # .use(function)
		 *
		 * Provides a way to extend the internals of Chai
		 *
		 * @param {Function}
		 * @returns {this} for chaining
		 * @api public
		 */exports.use = function(fn){if(! ~used.indexOf(fn)){fn(this,util);used.push(fn);}return this;}; /*!
		 * Configuration
		 */var config=__webpack_require__(15);exports.config = config; /*!
		 * Primary `Assertion` prototype
		 */var assertion=__webpack_require__(29);exports.use(assertion); /*!
		 * Core Assertions
		 */var core=__webpack_require__(30);exports.use(core); /*!
		 * Expect interface
		 */var expect=__webpack_require__(31);exports.use(expect); /*!
		 * Should interface
		 */var should=__webpack_require__(32);exports.use(should); /*!
		 * Assert interface
		 */var assert=__webpack_require__(33);exports.use(assert); /***/}, /* 3 */function(module,exports){ /*!
		 * assertion-error
		 * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>
		 * MIT Licensed
		 */ /*!
		 * Return a function that will copy properties from
		 * one object to another excluding any originally
		 * listed. Returned function will create a new `{}`.
		 *
		 * @param {String} excluded properties ...
		 * @return {Function}
		 */function exclude(){var excludes=[].slice.call(arguments);function excludeProps(res,obj){Object.keys(obj).forEach(function(key){if(! ~excludes.indexOf(key))res[key] = obj[key];});}return function extendExclude(){var args=[].slice.call(arguments),i=0,res={};for(;i < args.length;i++) {excludeProps(res,args[i]);}return res;};}; /*!
		 * Primary Exports
		 */module.exports = AssertionError; /**
		 * ### AssertionError
		 *
		 * An extension of the JavaScript `Error` constructor for
		 * assertion and validation scenarios.
		 *
		 * @param {String} message
		 * @param {Object} properties to include (optional)
		 * @param {callee} start stack function (optional)
		 */function AssertionError(message,_props,ssf){var extend=exclude('name','message','stack','constructor','toJSON'),props=extend(_props || {}); // default values
	this.message = message || 'Unspecified AssertionError';this.showDiff = false; // copy from properties
	for(var key in props) {this[key] = props[key];} // capture stack trace
	ssf = ssf || arguments.callee;if(ssf && Error.captureStackTrace){Error.captureStackTrace(this,ssf);}} /*!
		 * Inherit from Error.prototype
		 */AssertionError.prototype = Object.create(Error.prototype); /*!
		 * Statically set name
		 */AssertionError.prototype.name = 'AssertionError'; /*!
		 * Ensure correct constructor
		 */AssertionError.prototype.constructor = AssertionError; /**
		 * Allow errors to be converted to JSON for static transfer.
		 *
		 * @param {Boolean} include stack (default: `true`)
		 * @return {Object} object that can be `JSON.stringify`
		 */AssertionError.prototype.toJSON = function(stack){var extend=exclude('constructor','toJSON','stack'),props=extend({name:this.name},this); // include stack if exists and not turned off
	if(false !== stack && this.stack){props.stack = this.stack;}return props;}; /***/}, /* 4 */function(module,exports,__webpack_require__){ /*!
		 * chai
		 * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /*!
		 * Main exports
		 */var exports=module.exports = {}; /*!
		 * test utility
		 */exports.test = __webpack_require__(5); /*!
		 * type utility
		 */exports.type = __webpack_require__(7); /*!
		 * message utility
		 */exports.getMessage = __webpack_require__(8); /*!
		 * actual utility
		 */exports.getActual = __webpack_require__(9); /*!
		 * Inspect util
		 */exports.inspect = __webpack_require__(10); /*!
		 * Object Display util
		 */exports.objDisplay = __webpack_require__(14); /*!
		 * Flag utility
		 */exports.flag = __webpack_require__(6); /*!
		 * Flag transferring utility
		 */exports.transferFlags = __webpack_require__(16); /*!
		 * Deep equal utility
		 */exports.eql = __webpack_require__(17); /*!
		 * Deep path value
		 */exports.getPathValue = __webpack_require__(22); /*!
		 * Function name
		 */exports.getName = __webpack_require__(11); /*!
		 * add Property
		 */exports.addProperty = __webpack_require__(23); /*!
		 * add Method
		 */exports.addMethod = __webpack_require__(24); /*!
		 * overwrite Property
		 */exports.overwriteProperty = __webpack_require__(25); /*!
		 * overwrite Method
		 */exports.overwriteMethod = __webpack_require__(26); /*!
		 * Add a chainable method
		 */exports.addChainableMethod = __webpack_require__(27); /*!
		 * Overwrite chainable method
		 */exports.overwriteChainableMethod = __webpack_require__(28); /***/}, /* 5 */function(module,exports,__webpack_require__){ /*!
		 * Chai - test utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /*!
		 * Module dependancies
		 */var flag=__webpack_require__(6); /**
		 * # test(object, expression)
		 *
		 * Test and object for expression.
		 *
		 * @param {Object} object (constructed Assertion)
		 * @param {Arguments} chai.Assertion.prototype.assert arguments
		 */module.exports = function(obj,args){var negate=flag(obj,'negate'),expr=args[0];return negate?!expr:expr;}; /***/}, /* 6 */function(module,exports){ /*!
		 * Chai - flag utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /**
		 * ### flag(object ,key, [value])
		 *
		 * Get or set a flag value on an object. If a
		 * value is provided it will be set, else it will
		 * return the currently set value or `undefined` if
		 * the value is not set.
		 *
		 *     utils.flag(this, 'foo', 'bar'); // setter
		 *     utils.flag(this, 'foo'); // getter, returns `bar`
		 *
		 * @param {Object} object (constructed Assertion
		 * @param {String} key
		 * @param {Mixed} value (optional)
		 * @name flag
		 * @api private
		 */module.exports = function(obj,key,value){var flags=obj.__flags || (obj.__flags = Object.create(null));if(arguments.length === 3){flags[key] = value;}else {return flags[key];}}; /***/}, /* 7 */function(module,exports){ /*!
		 * Chai - type utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /*!
		 * Detectable javascript natives
		 */var natives={'[object Arguments]':'arguments','[object Array]':'array','[object Date]':'date','[object Function]':'function','[object Number]':'number','[object RegExp]':'regexp','[object String]':'string'}; /**
		 * ### type(object)
		 *
		 * Better implementation of `typeof` detection that can
		 * be used cross-browser. Handles the inconsistencies of
		 * Array, `null`, and `undefined` detection.
		 *
		 *     utils.type({}) // 'object'
		 *     utils.type(null) // `null'
		 *     utils.type(undefined) // `undefined`
		 *     utils.type([]) // `array`
		 *
		 * @param {Mixed} object to detect type of
		 * @name type
		 * @api private
		 */module.exports = function(obj){var str=Object.prototype.toString.call(obj);if(natives[str])return natives[str];if(obj === null)return 'null';if(obj === undefined)return 'undefined';if(obj === Object(obj))return 'object';return typeof obj;}; /***/}, /* 8 */function(module,exports,__webpack_require__){ /*!
		 * Chai - message composition utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /*!
		 * Module dependancies
		 */var flag=__webpack_require__(6),getActual=__webpack_require__(9),inspect=__webpack_require__(10),objDisplay=__webpack_require__(14); /**
		 * ### .getMessage(object, message, negateMessage)
		 *
		 * Construct the error message based on flags
		 * and template tags. Template tags will return
		 * a stringified inspection of the object referenced.
		 *
		 * Message template tags:
		 * - `#{this}` current asserted object
		 * - `#{act}` actual value
		 * - `#{exp}` expected value
		 *
		 * @param {Object} object (constructed Assertion)
		 * @param {Arguments} chai.Assertion.prototype.assert arguments
		 * @name getMessage
		 * @api public
		 */module.exports = function(obj,args){var negate=flag(obj,'negate'),val=flag(obj,'object'),expected=args[3],actual=getActual(obj,args),msg=negate?args[2]:args[1],flagMsg=flag(obj,'message');if(typeof msg === "function")msg = msg();msg = msg || '';msg = msg.replace(/#{this}/g,objDisplay(val)).replace(/#{act}/g,objDisplay(actual)).replace(/#{exp}/g,objDisplay(expected));return flagMsg?flagMsg + ': ' + msg:msg;}; /***/}, /* 9 */function(module,exports){ /*!
		 * Chai - getActual utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /**
		 * # getActual(object, [actual])
		 *
		 * Returns the `actual` value for an Assertion
		 *
		 * @param {Object} object (constructed Assertion)
		 * @param {Arguments} chai.Assertion.prototype.assert arguments
		 */module.exports = function(obj,args){return args.length > 4?args[4]:obj._obj;}; /***/}, /* 10 */function(module,exports,__webpack_require__){ // This is (almost) directly from Node.js utils
	// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js
	var getName=__webpack_require__(11);var getProperties=__webpack_require__(12);var getEnumerableProperties=__webpack_require__(13);module.exports = inspect; /**
		 * Echos the value of a value. Trys to print the value out
		 * in the best way possible given the different types.
		 *
		 * @param {Object} obj The object to print out.
		 * @param {Boolean} showHidden Flag that shows hidden (not enumerable)
		 *    properties of objects.
		 * @param {Number} depth Depth in which to descend in object. Default is 2.
		 * @param {Boolean} colors Flag to turn on ANSI escape codes to color the
		 *    output. Default is false (no coloring).
		 */function inspect(obj,showHidden,depth,colors){var ctx={showHidden:showHidden,seen:[],stylize:function stylize(str){return str;}};return formatValue(ctx,obj,typeof depth === 'undefined'?2:depth);} // Returns true if object is a DOM element.
	var isDOMElement=function isDOMElement(object){if(typeof HTMLElement === 'object'){return object instanceof HTMLElement;}else {return object && typeof object === 'object' && object.nodeType === 1 && typeof object.nodeName === 'string';}};function formatValue(ctx,value,recurseTimes){ // Provide a hook for user-specified inspect functions.
	// Check that value is an object with an inspect function on it
	if(value && typeof value.inspect === 'function' &&  // Filter out the util module, it's inspect function is special
	value.inspect !== exports.inspect &&  // Also filter out any prototype objects using the circular check.
	!(value.constructor && value.constructor.prototype === value)){var ret=value.inspect(recurseTimes);if(typeof ret !== 'string'){ret = formatValue(ctx,ret,recurseTimes);}return ret;} // Primitive types cannot have properties
	var primitive=formatPrimitive(ctx,value);if(primitive){return primitive;} // If this is a DOM element, try to get the outer HTML.
	if(isDOMElement(value)){if('outerHTML' in value){return value.outerHTML; // This value does not have an outerHTML attribute,
	//   it could still be an XML element
	}else { // Attempt to serialize it
	try{if(document.xmlVersion){var xmlSerializer=new XMLSerializer();return xmlSerializer.serializeToString(value);}else { // Firefox 11- do not support outerHTML
	//   It does, however, support innerHTML
	//   Use the following to render the element
	var ns="http://www.w3.org/1999/xhtml";var container=document.createElementNS(ns,'_');container.appendChild(value.cloneNode(false));html = container.innerHTML.replace('><','>' + value.innerHTML + '<');container.innerHTML = '';return html;}}catch(err) { // This could be a non-native DOM implementation,
	//   continue with the normal flow:
	//   printing the element as if it is an object.
	}}} // Look up the keys of the object.
	var visibleKeys=getEnumerableProperties(value);var keys=ctx.showHidden?getProperties(value):visibleKeys; // Some type of object without properties can be shortcutted.
	// In IE, errors have a single `stack` property, or if they are vanilla `Error`,
	// a `stack` plus `description` property; ignore those for consistency.
	if(keys.length === 0 || isError(value) && (keys.length === 1 && keys[0] === 'stack' || keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')){if(typeof value === 'function'){var name=getName(value);var nameSuffix=name?': ' + name:'';return ctx.stylize('[Function' + nameSuffix + ']','special');}if(isRegExp(value)){return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}if(isDate(value)){return ctx.stylize(Date.prototype.toUTCString.call(value),'date');}if(isError(value)){return formatError(value);}}var base='',array=false,braces=['{','}']; // Make Array say that they are Array
	if(isArray(value)){array = true;braces = ['[',']'];} // Make functions say that they are functions
	if(typeof value === 'function'){var name=getName(value);var nameSuffix=name?': ' + name:'';base = ' [Function' + nameSuffix + ']';} // Make RegExps say that they are RegExps
	if(isRegExp(value)){base = ' ' + RegExp.prototype.toString.call(value);} // Make dates with properties first say the date
	if(isDate(value)){base = ' ' + Date.prototype.toUTCString.call(value);} // Make error with message first say the error
	if(isError(value)){return formatError(value);}if(keys.length === 0 && (!array || value.length == 0)){return braces[0] + base + braces[1];}if(recurseTimes < 0){if(isRegExp(value)){return ctx.stylize(RegExp.prototype.toString.call(value),'regexp');}else {return ctx.stylize('[Object]','special');}}ctx.seen.push(value);var output;if(array){output = formatArray(ctx,value,recurseTimes,visibleKeys,keys);}else {output = keys.map(function(key){return formatProperty(ctx,value,recurseTimes,visibleKeys,key,array);});}ctx.seen.pop();return reduceToSingleString(output,base,braces);}function formatPrimitive(ctx,value){switch(typeof value){case 'undefined':return ctx.stylize('undefined','undefined');case 'string':var simple='\'' + JSON.stringify(value).replace(/^"|"$/g,'').replace(/'/g,"\\'").replace(/\\"/g,'"') + '\'';return ctx.stylize(simple,'string');case 'number':if(value === 0 && 1 / value === -Infinity){return ctx.stylize('-0','number');}return ctx.stylize('' + value,'number');case 'boolean':return ctx.stylize('' + value,'boolean');} // For some reason typeof null is "object", so special case here.
	if(value === null){return ctx.stylize('null','null');}}function formatError(value){return '[' + Error.prototype.toString.call(value) + ']';}function formatArray(ctx,value,recurseTimes,visibleKeys,keys){var output=[];for(var i=0,l=value.length;i < l;++i) {if(Object.prototype.hasOwnProperty.call(value,String(i))){output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,String(i),true));}else {output.push('');}}keys.forEach(function(key){if(!key.match(/^\d+$/)){output.push(formatProperty(ctx,value,recurseTimes,visibleKeys,key,true));}});return output;}function formatProperty(ctx,value,recurseTimes,visibleKeys,key,array){var name,str;if(value.__lookupGetter__){if(value.__lookupGetter__(key)){if(value.__lookupSetter__(key)){str = ctx.stylize('[Getter/Setter]','special');}else {str = ctx.stylize('[Getter]','special');}}else {if(value.__lookupSetter__(key)){str = ctx.stylize('[Setter]','special');}}}if(visibleKeys.indexOf(key) < 0){name = '[' + key + ']';}if(!str){if(ctx.seen.indexOf(value[key]) < 0){if(recurseTimes === null){str = formatValue(ctx,value[key],null);}else {str = formatValue(ctx,value[key],recurseTimes - 1);}if(str.indexOf('\n') > -1){if(array){str = str.split('\n').map(function(line){return '  ' + line;}).join('\n').substr(2);}else {str = '\n' + str.split('\n').map(function(line){return '   ' + line;}).join('\n');}}}else {str = ctx.stylize('[Circular]','special');}}if(typeof name === 'undefined'){if(array && key.match(/^\d+$/)){return str;}name = JSON.stringify('' + key);if(name.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)){name = name.substr(1,name.length - 2);name = ctx.stylize(name,'name');}else {name = name.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'");name = ctx.stylize(name,'string');}}return name + ': ' + str;}function reduceToSingleString(output,base,braces){var numLinesEst=0;var length=output.reduce(function(prev,cur){numLinesEst++;if(cur.indexOf('\n') >= 0)numLinesEst++;return prev + cur.length + 1;},0);if(length > 60){return braces[0] + (base === ''?'':base + '\n ') + ' ' + output.join(',\n  ') + ' ' + braces[1];}return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];}function isArray(ar){return Array.isArray(ar) || typeof ar === 'object' && objectToString(ar) === '[object Array]';}function isRegExp(re){return typeof re === 'object' && objectToString(re) === '[object RegExp]';}function isDate(d){return typeof d === 'object' && objectToString(d) === '[object Date]';}function isError(e){return typeof e === 'object' && objectToString(e) === '[object Error]';}function objectToString(o){return Object.prototype.toString.call(o);} /***/}, /* 11 */function(module,exports){ /*!
		 * Chai - getName utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /**
		 * # getName(func)
		 *
		 * Gets the name of a function, in a cross-browser way.
		 *
		 * @param {Function} a function (usually a constructor)
		 */module.exports = function(func){if(func.name)return func.name;var match=/^\s?function ([^(]*)\(/.exec(func);return match && match[1]?match[1]:"";}; /***/}, /* 12 */function(module,exports){ /*!
		 * Chai - getProperties utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /**
		 * ### .getProperties(object)
		 *
		 * This allows the retrieval of property names of an object, enumerable or not,
		 * inherited or not.
		 *
		 * @param {Object} object
		 * @returns {Array}
		 * @name getProperties
		 * @api public
		 */module.exports = function getProperties(object){var result=Object.getOwnPropertyNames(subject);function addProperty(property){if(result.indexOf(property) === -1){result.push(property);}}var proto=Object.getPrototypeOf(subject);while(proto !== null) {Object.getOwnPropertyNames(proto).forEach(addProperty);proto = Object.getPrototypeOf(proto);}return result;}; /***/}, /* 13 */function(module,exports){ /*!
		 * Chai - getEnumerableProperties utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /**
		 * ### .getEnumerableProperties(object)
		 *
		 * This allows the retrieval of enumerable property names of an object,
		 * inherited or not.
		 *
		 * @param {Object} object
		 * @returns {Array}
		 * @name getEnumerableProperties
		 * @api public
		 */module.exports = function getEnumerableProperties(object){var result=[];for(var name in object) {result.push(name);}return result;}; /***/}, /* 14 */function(module,exports,__webpack_require__){ /*!
		 * Chai - flag utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /*!
		 * Module dependancies
		 */var inspect=__webpack_require__(10);var config=__webpack_require__(15); /**
		 * ### .objDisplay (object)
		 *
		 * Determines if an object or an array matches
		 * criteria to be inspected in-line for error
		 * messages or should be truncated.
		 *
		 * @param {Mixed} javascript object to inspect
		 * @name objDisplay
		 * @api public
		 */module.exports = function(obj){var str=inspect(obj),type=Object.prototype.toString.call(obj);if(config.truncateThreshold && str.length >= config.truncateThreshold){if(type === '[object Function]'){return !obj.name || obj.name === ''?'[Function]':'[Function: ' + obj.name + ']';}else if(type === '[object Array]'){return '[ Array(' + obj.length + ') ]';}else if(type === '[object Object]'){var keys=Object.keys(obj),kstr=keys.length > 2?keys.splice(0,2).join(', ') + ', ...':keys.join(', ');return '{ Object (' + kstr + ') }';}else {return str;}}else {return str;}}; /***/}, /* 15 */function(module,exports){module.exports = { /**
		   * ### config.includeStack
		   *
		   * User configurable property, influences whether stack trace
		   * is included in Assertion error message. Default of false
		   * suppresses stack trace in the error message.
		   *
		   *     chai.config.includeStack = true;  // enable stack on error
		   *
		   * @param {Boolean}
		   * @api public
		   */includeStack:false, /**
		   * ### config.showDiff
		   *
		   * User configurable property, influences whether or not
		   * the `showDiff` flag should be included in the thrown
		   * AssertionErrors. `false` will always be `false`; `true`
		   * will be true when the assertion has requested a diff
		   * be shown.
		   *
		   * @param {Boolean}
		   * @api public
		   */showDiff:true, /**
		   * ### config.truncateThreshold
		   *
		   * User configurable property, sets length threshold for actual and
		   * expected values in assertion errors. If this threshold is exceeded,
		   * the value is truncated.
		   *
		   * Set it to zero if you want to disable truncating altogether.
		   *
		   *     chai.config.truncateThreshold = 0;  // disable truncating
		   *
		   * @param {Number}
		   * @api public
		   */truncateThreshold:40}; /***/}, /* 16 */function(module,exports){ /*!
		 * Chai - transferFlags utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /**
		 * ### transferFlags(assertion, object, includeAll = true)
		 *
		 * Transfer all the flags for `assertion` to `object`. If
		 * `includeAll` is set to `false`, then the base Chai
		 * assertion flags (namely `object`, `ssfi`, and `message`)
		 * will not be transferred.
		 *
		 *
		 *     var newAssertion = new Assertion();
		 *     utils.transferFlags(assertion, newAssertion);
		 *
		 *     var anotherAsseriton = new Assertion(myObj);
		 *     utils.transferFlags(assertion, anotherAssertion, false);
		 *
		 * @param {Assertion} assertion the assertion to transfer the flags from
		 * @param {Object} object the object to transfer the flags too; usually a new assertion
		 * @param {Boolean} includeAll
		 * @name getAllFlags
		 * @api private
		 */module.exports = function(assertion,object,includeAll){var flags=assertion.__flags || (assertion.__flags = Object.create(null));if(!object.__flags){object.__flags = Object.create(null);}includeAll = arguments.length === 3?includeAll:true;for(var flag in flags) {if(includeAll || flag !== 'object' && flag !== 'ssfi' && flag != 'message'){object.__flags[flag] = flags[flag];}}}; /***/}, /* 17 */function(module,exports,__webpack_require__){module.exports = __webpack_require__(18); /***/}, /* 18 */function(module,exports,__webpack_require__){ /*!
		 * deep-eql
		 * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /*!
		 * Module dependencies
		 */var type=__webpack_require__(19); /*!
		 * Buffer.isBuffer browser shim
		 */var Buffer;try{Buffer = __webpack_require__(21).Buffer;}catch(ex) {Buffer = {};Buffer.isBuffer = function(){return false;};} /*!
		 * Primary Export
		 */module.exports = deepEqual; /**
		 * Assert super-strict (egal) equality between
		 * two objects of any type.
		 *
		 * @param {Mixed} a
		 * @param {Mixed} b
		 * @param {Array} memoised (optional)
		 * @return {Boolean} equal match
		 */function deepEqual(a,b,m){if(sameValue(a,b)){return true;}else if('date' === type(a)){return dateEqual(a,b);}else if('regexp' === type(a)){return regexpEqual(a,b);}else if(Buffer.isBuffer(a)){return bufferEqual(a,b);}else if('arguments' === type(a)){return argumentsEqual(a,b,m);}else if(!typeEqual(a,b)){return false;}else if('object' !== type(a) && 'object' !== type(b) && ('array' !== type(a) && 'array' !== type(b))){return sameValue(a,b);}else {return objectEqual(a,b,m);}} /*!
		 * Strict (egal) equality test. Ensures that NaN always
		 * equals NaN and `-0` does not equal `+0`.
		 *
		 * @param {Mixed} a
		 * @param {Mixed} b
		 * @return {Boolean} equal match
		 */function sameValue(a,b){if(a === b)return a !== 0 || 1 / a === 1 / b;return a !== a && b !== b;} /*!
		 * Compare the types of two given objects and
		 * return if they are equal. Note that an Array
		 * has a type of `array` (not `object`) and arguments
		 * have a type of `arguments` (not `array`/`object`).
		 *
		 * @param {Mixed} a
		 * @param {Mixed} b
		 * @return {Boolean} result
		 */function typeEqual(a,b){return type(a) === type(b);} /*!
		 * Compare two Date objects by asserting that
		 * the time values are equal using `saveValue`.
		 *
		 * @param {Date} a
		 * @param {Date} b
		 * @return {Boolean} result
		 */function dateEqual(a,b){if('date' !== type(b))return false;return sameValue(a.getTime(),b.getTime());} /*!
		 * Compare two regular expressions by converting them
		 * to string and checking for `sameValue`.
		 *
		 * @param {RegExp} a
		 * @param {RegExp} b
		 * @return {Boolean} result
		 */function regexpEqual(a,b){if('regexp' !== type(b))return false;return sameValue(a.toString(),b.toString());} /*!
		 * Assert deep equality of two `arguments` objects.
		 * Unfortunately, these must be sliced to arrays
		 * prior to test to ensure no bad behavior.
		 *
		 * @param {Arguments} a
		 * @param {Arguments} b
		 * @param {Array} memoize (optional)
		 * @return {Boolean} result
		 */function argumentsEqual(a,b,m){if('arguments' !== type(b))return false;a = [].slice.call(a);b = [].slice.call(b);return deepEqual(a,b,m);} /*!
		 * Get enumerable properties of a given object.
		 *
		 * @param {Object} a
		 * @return {Array} property names
		 */function enumerable(a){var res=[];for(var key in a) res.push(key);return res;} /*!
		 * Simple equality for flat iterable objects
		 * such as Arrays or Node.js buffers.
		 *
		 * @param {Iterable} a
		 * @param {Iterable} b
		 * @return {Boolean} result
		 */function iterableEqual(a,b){if(a.length !== b.length)return false;var i=0;var match=true;for(;i < a.length;i++) {if(a[i] !== b[i]){match = false;break;}}return match;} /*!
		 * Extension to `iterableEqual` specifically
		 * for Node.js Buffers.
		 *
		 * @param {Buffer} a
		 * @param {Mixed} b
		 * @return {Boolean} result
		 */function bufferEqual(a,b){if(!Buffer.isBuffer(b))return false;return iterableEqual(a,b);} /*!
		 * Block for `objectEqual` ensuring non-existing
		 * values don't get in.
		 *
		 * @param {Mixed} object
		 * @return {Boolean} result
		 */function isValue(a){return a !== null && a !== undefined;} /*!
		 * Recursively check the equality of two objects.
		 * Once basic sameness has been established it will
		 * defer to `deepEqual` for each enumerable key
		 * in the object.
		 *
		 * @param {Mixed} a
		 * @param {Mixed} b
		 * @return {Boolean} result
		 */function objectEqual(a,b,m){if(!isValue(a) || !isValue(b)){return false;}if(a.prototype !== b.prototype){return false;}var i;if(m){for(i = 0;i < m.length;i++) {if(m[i][0] === a && m[i][1] === b || m[i][0] === b && m[i][1] === a){return true;}}}else {m = [];}try{var ka=enumerable(a);var kb=enumerable(b);}catch(ex) {return false;}ka.sort();kb.sort();if(!iterableEqual(ka,kb)){return false;}m.push([a,b]);var key;for(i = ka.length - 1;i >= 0;i--) {key = ka[i];if(!deepEqual(a[key],b[key],m)){return false;}}return true;} /***/}, /* 19 */function(module,exports,__webpack_require__){module.exports = __webpack_require__(20); /***/}, /* 20 */function(module,exports){ /*!
		 * type-detect
		 * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /*!
		 * Primary Exports
		 */var exports=module.exports = getType; /*!
		 * Detectable javascript natives
		 */var natives={'[object Array]':'array','[object RegExp]':'regexp','[object Function]':'function','[object Arguments]':'arguments','[object Date]':'date'}; /**
		 * ### typeOf (obj)
		 *
		 * Use several different techniques to determine
		 * the type of object being tested.
		 *
		 *
		 * @param {Mixed} object
		 * @return {String} object type
		 * @api public
		 */function getType(obj){var str=Object.prototype.toString.call(obj);if(natives[str])return natives[str];if(obj === null)return 'null';if(obj === undefined)return 'undefined';if(obj === Object(obj))return 'object';return typeof obj;}exports.Library = Library; /**
		 * ### Library
		 *
		 * Create a repository for custom type detection.
		 *
		 * ```js
		 * var lib = new type.Library;
		 * ```
		 *
		 */function Library(){this.tests = {};} /**
		 * #### .of (obj)
		 *
		 * Expose replacement `typeof` detection to the library.
		 *
		 * ```js
		 * if ('string' === lib.of('hello world')) {
		 *   // ...
		 * }
		 * ```
		 *
		 * @param {Mixed} object to test
		 * @return {String} type
		 */Library.prototype.of = getType; /**
		 * #### .define (type, test)
		 *
		 * Add a test to for the `.test()` assertion.
		 *
		 * Can be defined as a regular expression:
		 *
		 * ```js
		 * lib.define('int', /^[0-9]+$/);
		 * ```
		 *
		 * ... or as a function:
		 *
		 * ```js
		 * lib.define('bln', function (obj) {
		 *   if ('boolean' === lib.of(obj)) return true;
		 *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];
		 *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();
		 *   return !! ~blns.indexOf(obj);
		 * });
		 * ```
		 *
		 * @param {String} type
		 * @param {RegExp|Function} test
		 * @api public
		 */Library.prototype.define = function(type,test){if(arguments.length === 1)return this.tests[type];this.tests[type] = test;return this;}; /**
		 * #### .test (obj, test)
		 *
		 * Assert that an object is of type. Will first
		 * check natives, and if that does not pass it will
		 * use the user defined custom tests.
		 *
		 * ```js
		 * assert(lib.test('1', 'int'));
		 * assert(lib.test('yes', 'bln'));
		 * ```
		 *
		 * @param {Mixed} object
		 * @param {String} type
		 * @return {Boolean} result
		 * @api public
		 */Library.prototype.test = function(obj,type){if(type === getType(obj))return true;var test=this.tests[type];if(test && 'regexp' === getType(test)){return test.test(obj);}else if(test && 'function' === getType(test)){return test(obj);}else {throw new ReferenceError('Type test "' + type + '" not defined or invalid.');}}; /***/}, /* 21 */function(module,exports){module.exports = __webpack_require__(484); /***/}, /* 22 */function(module,exports){ /*!
		 * Chai - getPathValue utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * @see https://github.com/logicalparadox/filtr
		 * MIT Licensed
		 */ /**
		 * ### .getPathValue(path, object)
		 *
		 * This allows the retrieval of values in an
		 * object given a string path.
		 *
		 *     var obj = {
		 *         prop1: {
		 *             arr: ['a', 'b', 'c']
		 *           , str: 'Hello'
		 *         }
		 *       , prop2: {
		 *             arr: [ { nested: 'Universe' } ]
		 *           , str: 'Hello again!'
		 *         }
		 *     }
		 *
		 * The following would be the results.
		 *
		 *     getPathValue('prop1.str', obj); // Hello
		 *     getPathValue('prop1.att[2]', obj); // b
		 *     getPathValue('prop2.arr[0].nested', obj); // Universe
		 *
		 * @param {String} path
		 * @param {Object} object
		 * @returns {Object} value or `undefined`
		 * @name getPathValue
		 * @api public
		 */var getPathValue=module.exports = function(path,obj){var parsed=parsePath(path);return _getPathValue(parsed,obj);}; /*!
		 * ## parsePath(path)
		 *
		 * Helper function used to parse string object
		 * paths. Use in conjunction with `_getPathValue`.
		 *
		 *      var parsed = parsePath('myobject.property.subprop');
		 *
		 * ### Paths:
		 *
		 * * Can be as near infinitely deep and nested
		 * * Arrays are also valid using the formal `myobject.document[3].property`.
		 *
		 * @param {String} path
		 * @returns {Object} parsed
		 * @api private
		 */function parsePath(path){var str=path.replace(/\[/g,'.['),parts=str.match(/(\\\.|[^.]+?)+/g);return parts.map(function(value){var re=/\[(\d+)\]$/,mArr=re.exec(value);if(mArr)return {i:parseFloat(mArr[1])};else return {p:value};});}; /*!
		 * ## _getPathValue(parsed, obj)
		 *
		 * Helper companion function for `.parsePath` that returns
		 * the value located at the parsed address.
		 *
		 *      var value = getPathValue(parsed, obj);
		 *
		 * @param {Object} parsed definition from `parsePath`.
		 * @param {Object} object to search against
		 * @returns {Object|Undefined} value
		 * @api private
		 */function _getPathValue(parsed,obj){var tmp=obj,res;for(var i=0,l=parsed.length;i < l;i++) {var part=parsed[i];if(tmp){if('undefined' !== typeof part.p)tmp = tmp[part.p];else if('undefined' !== typeof part.i)tmp = tmp[part.i];if(i == l - 1)res = tmp;}else {res = undefined;}}return res;}; /***/}, /* 23 */function(module,exports){ /*!
		 * Chai - addProperty utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /**
		 * ### addProperty (ctx, name, getter)
		 *
		 * Adds a property to the prototype of an object.
		 *
		 *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {
		 *       var obj = utils.flag(this, 'object');
		 *       new chai.Assertion(obj).to.be.instanceof(Foo);
		 *     });
		 *
		 * Can also be accessed directly from `chai.Assertion`.
		 *
		 *     chai.Assertion.addProperty('foo', fn);
		 *
		 * Then can be used as any other assertion.
		 *
		 *     expect(myFoo).to.be.foo;
		 *
		 * @param {Object} ctx object to which the property is added
		 * @param {String} name of property to add
		 * @param {Function} getter function to be used for name
		 * @name addProperty
		 * @api public
		 */module.exports = function(ctx,name,getter){Object.defineProperty(ctx,name,{get:function get(){var result=getter.call(this);return result === undefined?this:result;},configurable:true});}; /***/}, /* 24 */function(module,exports,__webpack_require__){ /*!
		 * Chai - addMethod utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */var config=__webpack_require__(15); /**
		 * ### .addMethod (ctx, name, method)
		 *
		 * Adds a method to the prototype of an object.
		 *
		 *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {
		 *       var obj = utils.flag(this, 'object');
		 *       new chai.Assertion(obj).to.be.equal(str);
		 *     });
		 *
		 * Can also be accessed directly from `chai.Assertion`.
		 *
		 *     chai.Assertion.addMethod('foo', fn);
		 *
		 * Then can be used as any other assertion.
		 *
		 *     expect(fooStr).to.be.foo('bar');
		 *
		 * @param {Object} ctx object to which the method is added
		 * @param {String} name of method to add
		 * @param {Function} method function to be used for name
		 * @name addMethod
		 * @api public
		 */var flag=__webpack_require__(6);module.exports = function(ctx,name,method){ctx[name] = function(){var old_ssfi=flag(this,'ssfi');if(old_ssfi && config.includeStack === false)flag(this,'ssfi',ctx[name]);var result=method.apply(this,arguments);return result === undefined?this:result;};}; /***/}, /* 25 */function(module,exports){ /*!
		 * Chai - overwriteProperty utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /**
		 * ### overwriteProperty (ctx, name, fn)
		 *
		 * Overwites an already existing property getter and provides
		 * access to previous value. Must return function to use as getter.
		 *
		 *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {
		 *       return function () {
		 *         var obj = utils.flag(this, 'object');
		 *         if (obj instanceof Foo) {
		 *           new chai.Assertion(obj.name).to.equal('bar');
		 *         } else {
		 *           _super.call(this);
		 *         }
		 *       }
		 *     });
		 *
		 *
		 * Can also be accessed directly from `chai.Assertion`.
		 *
		 *     chai.Assertion.overwriteProperty('foo', fn);
		 *
		 * Then can be used as any other assertion.
		 *
		 *     expect(myFoo).to.be.ok;
		 *
		 * @param {Object} ctx object whose property is to be overwritten
		 * @param {String} name of property to overwrite
		 * @param {Function} getter function that returns a getter function to be used for name
		 * @name overwriteProperty
		 * @api public
		 */module.exports = function(ctx,name,getter){var _get=Object.getOwnPropertyDescriptor(ctx,name),_super=function _super(){};if(_get && 'function' === typeof _get.get)_super = _get.get;Object.defineProperty(ctx,name,{get:function get(){var result=getter(_super).call(this);return result === undefined?this:result;},configurable:true});}; /***/}, /* 26 */function(module,exports){ /*!
		 * Chai - overwriteMethod utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /**
		 * ### overwriteMethod (ctx, name, fn)
		 *
		 * Overwites an already existing method and provides
		 * access to previous function. Must return function
		 * to be used for name.
		 *
		 *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {
		 *       return function (str) {
		 *         var obj = utils.flag(this, 'object');
		 *         if (obj instanceof Foo) {
		 *           new chai.Assertion(obj.value).to.equal(str);
		 *         } else {
		 *           _super.apply(this, arguments);
		 *         }
		 *       }
		 *     });
		 *
		 * Can also be accessed directly from `chai.Assertion`.
		 *
		 *     chai.Assertion.overwriteMethod('foo', fn);
		 *
		 * Then can be used as any other assertion.
		 *
		 *     expect(myFoo).to.equal('bar');
		 *
		 * @param {Object} ctx object whose method is to be overwritten
		 * @param {String} name of method to overwrite
		 * @param {Function} method function that returns a function to be used for name
		 * @name overwriteMethod
		 * @api public
		 */module.exports = function(ctx,name,method){var _method=ctx[name],_super=function _super(){return this;};if(_method && 'function' === typeof _method)_super = _method;ctx[name] = function(){var result=method(_super).apply(this,arguments);return result === undefined?this:result;};}; /***/}, /* 27 */function(module,exports,__webpack_require__){ /*!
		 * Chai - addChainingMethod utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /*!
		 * Module dependencies
		 */var transferFlags=__webpack_require__(16);var flag=__webpack_require__(6);var config=__webpack_require__(15); /*!
		 * Module variables
		 */ // Check whether `__proto__` is supported
	var hasProtoSupport=('__proto__' in Object); // Without `__proto__` support, this module will need to add properties to a function.
	// However, some Function.prototype methods cannot be overwritten,
	// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).
	var excludeNames=/^(?:length|name|arguments|caller)$/; // Cache `Function` properties
	var call=Function.prototype.call,apply=Function.prototype.apply; /**
		 * ### addChainableMethod (ctx, name, method, chainingBehavior)
		 *
		 * Adds a method to an object, such that the method can also be chained.
		 *
		 *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {
		 *       var obj = utils.flag(this, 'object');
		 *       new chai.Assertion(obj).to.be.equal(str);
		 *     });
		 *
		 * Can also be accessed directly from `chai.Assertion`.
		 *
		 *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);
		 *
		 * The result can then be used as both a method assertion, executing both `method` and
		 * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.
		 *
		 *     expect(fooStr).to.be.foo('bar');
		 *     expect(fooStr).to.be.foo.equal('foo');
		 *
		 * @param {Object} ctx object to which the method is added
		 * @param {String} name of method to add
		 * @param {Function} method function to be used for `name`, when called
		 * @param {Function} chainingBehavior function to be called every time the property is accessed
		 * @name addChainableMethod
		 * @api public
		 */module.exports = function(ctx,name,method,chainingBehavior){if(typeof chainingBehavior !== 'function'){chainingBehavior = function(){};}var chainableBehavior={method:method,chainingBehavior:chainingBehavior}; // save the methods so we can overwrite them later, if we need to.
	if(!ctx.__methods){ctx.__methods = {};}ctx.__methods[name] = chainableBehavior;Object.defineProperty(ctx,name,{get:function get(){chainableBehavior.chainingBehavior.call(this);var assert=function assert(){var old_ssfi=flag(this,'ssfi');if(old_ssfi && config.includeStack === false)flag(this,'ssfi',assert);var result=chainableBehavior.method.apply(this,arguments);return result === undefined?this:result;}; // Use `__proto__` if available
	if(hasProtoSupport){ // Inherit all properties from the object by replacing the `Function` prototype
	var prototype=assert.__proto__ = Object.create(this); // Restore the `call` and `apply` methods from `Function`
	prototype.call = call;prototype.apply = apply;} // Otherwise, redefine all properties (slow!)
	else {var asserterNames=Object.getOwnPropertyNames(ctx);asserterNames.forEach(function(asserterName){if(!excludeNames.test(asserterName)){var pd=Object.getOwnPropertyDescriptor(ctx,asserterName);Object.defineProperty(assert,asserterName,pd);}});}transferFlags(this,assert);return assert;},configurable:true});}; /***/}, /* 28 */function(module,exports){ /*!
		 * Chai - overwriteChainableMethod utility
		 * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */ /**
		 * ### overwriteChainableMethod (ctx, name, fn)
		 *
		 * Overwites an already existing chainable method
		 * and provides access to the previous function or
		 * property.  Must return functions to be used for
		 * name.
		 *
		 *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'length',
		 *       function (_super) {
		 *       }
		 *     , function (_super) {
		 *       }
		 *     );
		 *
		 * Can also be accessed directly from `chai.Assertion`.
		 *
		 *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);
		 *
		 * Then can be used as any other assertion.
		 *
		 *     expect(myFoo).to.have.length(3);
		 *     expect(myFoo).to.have.length.above(3);
		 *
		 * @param {Object} ctx object whose method / property is to be overwritten
		 * @param {String} name of method / property to overwrite
		 * @param {Function} method function that returns a function to be used for name
		 * @param {Function} chainingBehavior function that returns a function to be used for property
		 * @name overwriteChainableMethod
		 * @api public
		 */module.exports = function(ctx,name,method,chainingBehavior){var chainableBehavior=ctx.__methods[name];var _chainingBehavior=chainableBehavior.chainingBehavior;chainableBehavior.chainingBehavior = function(){var result=chainingBehavior(_chainingBehavior).call(this);return result === undefined?this:result;};var _method=chainableBehavior.method;chainableBehavior.method = function(){var result=method(_method).apply(this,arguments);return result === undefined?this:result;};}; /***/}, /* 29 */function(module,exports,__webpack_require__){ /*!
		 * chai
		 * http://chaijs.com
		 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */var config=__webpack_require__(15);var NOOP=function NOOP(){};module.exports = function(_chai,util){ /*!
		   * Module dependencies.
		   */var AssertionError=_chai.AssertionError,flag=util.flag; /*!
		   * Module export.
		   */_chai.Assertion = Assertion; /*!
		   * Assertion Constructor
		   *
		   * Creates object for chaining.
		   *
		   * @api private
		   */function Assertion(obj,msg,stack){flag(this,'ssfi',stack || arguments.callee);flag(this,'object',obj);flag(this,'message',msg);}Object.defineProperty(Assertion,'includeStack',{get:function get(){console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');return config.includeStack;},set:function set(value){console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');config.includeStack = value;}});Object.defineProperty(Assertion,'showDiff',{get:function get(){console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');return config.showDiff;},set:function set(value){console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');config.showDiff = value;}});Assertion.addProperty = function(name,fn){util.addProperty(this.prototype,name,fn);};Assertion.addMethod = function(name,fn){util.addMethod(this.prototype,name,fn);};Assertion.addChainableMethod = function(name,fn,chainingBehavior){util.addChainableMethod(this.prototype,name,fn,chainingBehavior);};Assertion.addChainableNoop = function(name,fn){util.addChainableMethod(this.prototype,name,NOOP,fn);};Assertion.overwriteProperty = function(name,fn){util.overwriteProperty(this.prototype,name,fn);};Assertion.overwriteMethod = function(name,fn){util.overwriteMethod(this.prototype,name,fn);};Assertion.overwriteChainableMethod = function(name,fn,chainingBehavior){util.overwriteChainableMethod(this.prototype,name,fn,chainingBehavior);}; /*!
		   * ### .assert(expression, message, negateMessage, expected, actual)
		   *
		   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.
		   *
		   * @name assert
		   * @param {Philosophical} expression to be tested
		   * @param {String or Function} message or function that returns message to display if fails
		   * @param {String or Function} negatedMessage or function that returns negatedMessage to display if negated expression fails
		   * @param {Mixed} expected value (remember to check for negation)
		   * @param {Mixed} actual (optional) will default to `this.obj`
		   * @api private
		   */Assertion.prototype.assert = function(expr,msg,negateMsg,expected,_actual,showDiff){var ok=util.test(this,arguments);if(true !== showDiff)showDiff = false;if(true !== config.showDiff)showDiff = false;if(!ok){var msg=util.getMessage(this,arguments),actual=util.getActual(this,arguments);throw new AssertionError(msg,{actual:actual,expected:expected,showDiff:showDiff},config.includeStack?this.assert:flag(this,'ssfi'));}}; /*!
		   * ### ._obj
		   *
		   * Quick reference to stored `actual` value for plugin developers.
		   *
		   * @api private
		   */Object.defineProperty(Assertion.prototype,'_obj',{get:function get(){return flag(this,'object');},set:function set(val){flag(this,'object',val);}});}; /***/}, /* 30 */function(module,exports){ /*!
		 * chai
		 * http://chaijs.com
		 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */module.exports = function(chai,_){var Assertion=chai.Assertion,toString=Object.prototype.toString,flag=_.flag; /**
		   * ### Language Chains
		   *
		   * The following are provided as chainable getters to
		   * improve the readability of your assertions. They
		   * do not provide testing capabilities unless they
		   * have been overwritten by a plugin.
		   *
		   * **Chains**
		   *
		   * - to
		   * - be
		   * - been
		   * - is
		   * - that
		   * - and
		   * - has
		   * - have
		   * - with
		   * - at
		   * - of
		   * - same
		   *
		   * @name language chains
		   * @api public
		   */['to','be','been','is','and','has','have','with','that','at','of','same'].forEach(function(chain){Assertion.addProperty(chain,function(){return this;});}); /**
		   * ### .not
		   *
		   * Negates any of assertions following in the chain.
		   *
		   *     expect(foo).to.not.equal('bar');
		   *     expect(goodFn).to.not.throw(Error);
		   *     expect({ foo: 'baz' }).to.have.property('foo')
		   *       .and.not.equal('bar');
		   *
		   * @name not
		   * @api public
		   */Assertion.addProperty('not',function(){flag(this,'negate',true);}); /**
		   * ### .deep
		   *
		   * Sets the `deep` flag, later used by the `equal` and
		   * `property` assertions.
		   *
		   *     expect(foo).to.deep.equal({ bar: 'baz' });
		   *     expect({ foo: { bar: { baz: 'quux' } } })
		   *       .to.have.deep.property('foo.bar.baz', 'quux');
		   *
		   * @name deep
		   * @api public
		   */Assertion.addProperty('deep',function(){flag(this,'deep',true);}); /**
		   * ### .a(type)
		   *
		   * The `a` and `an` assertions are aliases that can be
		   * used either as language chains or to assert a value's
		   * type.
		   *
		   *     // typeof
		   *     expect('test').to.be.a('string');
		   *     expect({ foo: 'bar' }).to.be.an('object');
		   *     expect(null).to.be.a('null');
		   *     expect(undefined).to.be.an('undefined');
		   *
		   *     // language chain
		   *     expect(foo).to.be.an.instanceof(Foo);
		   *
		   * @name a
		   * @alias an
		   * @param {String} type
		   * @param {String} message _optional_
		   * @api public
		   */function an(type,msg){if(msg)flag(this,'message',msg);type = type.toLowerCase();var obj=flag(this,'object'),article=~['a','e','i','o','u'].indexOf(type.charAt(0))?'an ':'a ';this.assert(type === _.type(obj),'expected #{this} to be ' + article + type,'expected #{this} not to be ' + article + type);}Assertion.addChainableMethod('an',an);Assertion.addChainableMethod('a',an); /**
		   * ### .include(value)
		   *
		   * The `include` and `contain` assertions can be used as either property
		   * based language chains or as methods to assert the inclusion of an object
		   * in an array or a substring in a string. When used as language chains,
		   * they toggle the `contain` flag for the `keys` assertion.
		   *
		   *     expect([1,2,3]).to.include(2);
		   *     expect('foobar').to.contain('foo');
		   *     expect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');
		   *
		   * @name include
		   * @alias contain
		   * @param {Object|String|Number} obj
		   * @param {String} message _optional_
		   * @api public
		   */function includeChainingBehavior(){flag(this,'contains',true);}function include(val,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');var expected=false;if(_.type(obj) === 'array' && _.type(val) === 'object'){for(var i in obj) {if(_.eql(obj[i],val)){expected = true;break;}}}else if(_.type(val) === 'object'){if(!flag(this,'negate')){for(var k in val) new Assertion(obj).property(k,val[k]);return;}var subset={};for(var k in val) subset[k] = obj[k];expected = _.eql(subset,val);}else {expected = obj && ~obj.indexOf(val);}this.assert(expected,'expected #{this} to include ' + _.inspect(val),'expected #{this} to not include ' + _.inspect(val));}Assertion.addChainableMethod('include',include,includeChainingBehavior);Assertion.addChainableMethod('contain',include,includeChainingBehavior); /**
		   * ### .ok
		   *
		   * Asserts that the target is truthy.
		   *
		   *     expect('everthing').to.be.ok;
		   *     expect(1).to.be.ok;
		   *     expect(false).to.not.be.ok;
		   *     expect(undefined).to.not.be.ok;
		   *     expect(null).to.not.be.ok;
		   *
		   * Can also be used as a function, which prevents some linter errors.
		   *
		   *     expect('everthing').to.be.ok();
		   *     
		   * @name ok
		   * @api public
		   */Assertion.addChainableNoop('ok',function(){this.assert(flag(this,'object'),'expected #{this} to be truthy','expected #{this} to be falsy');}); /**
		   * ### .true
		   *
		   * Asserts that the target is `true`.
		   *
		   *     expect(true).to.be.true;
		   *     expect(1).to.not.be.true;
		   *
		   * Can also be used as a function, which prevents some linter errors.
		   *
		   *     expect(true).to.be.true();
		   *
		   * @name true
		   * @api public
		   */Assertion.addChainableNoop('true',function(){this.assert(true === flag(this,'object'),'expected #{this} to be true','expected #{this} to be false',this.negate?false:true);}); /**
		   * ### .false
		   *
		   * Asserts that the target is `false`.
		   *
		   *     expect(false).to.be.false;
		   *     expect(0).to.not.be.false;
		   *
		   * Can also be used as a function, which prevents some linter errors.
		   *
		   *     expect(false).to.be.false();
		   *
		   * @name false
		   * @api public
		   */Assertion.addChainableNoop('false',function(){this.assert(false === flag(this,'object'),'expected #{this} to be false','expected #{this} to be true',this.negate?true:false);}); /**
		   * ### .null
		   *
		   * Asserts that the target is `null`.
		   *
		   *     expect(null).to.be.null;
		   *     expect(undefined).not.to.be.null;
		   *
		   * Can also be used as a function, which prevents some linter errors.
		   *
		   *     expect(null).to.be.null();
		   *
		   * @name null
		   * @api public
		   */Assertion.addChainableNoop('null',function(){this.assert(null === flag(this,'object'),'expected #{this} to be null','expected #{this} not to be null');}); /**
		   * ### .undefined
		   *
		   * Asserts that the target is `undefined`.
		   *
		   *     expect(undefined).to.be.undefined;
		   *     expect(null).to.not.be.undefined;
		   *
		   * Can also be used as a function, which prevents some linter errors.
		   *
		   *     expect(undefined).to.be.undefined();
		   *
		   * @name undefined
		   * @api public
		   */Assertion.addChainableNoop('undefined',function(){this.assert(undefined === flag(this,'object'),'expected #{this} to be undefined','expected #{this} not to be undefined');}); /**
		   * ### .exist
		   *
		   * Asserts that the target is neither `null` nor `undefined`.
		   *
		   *     var foo = 'hi'
		   *       , bar = null
		   *       , baz;
		   *
		   *     expect(foo).to.exist;
		   *     expect(bar).to.not.exist;
		   *     expect(baz).to.not.exist;
		   *
		   * Can also be used as a function, which prevents some linter errors.
		   *
		   *     expect(foo).to.exist();
		   *
		   * @name exist
		   * @api public
		   */Assertion.addChainableNoop('exist',function(){this.assert(null != flag(this,'object'),'expected #{this} to exist','expected #{this} to not exist');}); /**
		   * ### .empty
		   *
		   * Asserts that the target's length is `0`. For arrays, it checks
		   * the `length` property. For objects, it gets the count of
		   * enumerable keys.
		   *
		   *     expect([]).to.be.empty;
		   *     expect('').to.be.empty;
		   *     expect({}).to.be.empty;
		   *
		   * Can also be used as a function, which prevents some linter errors.
		   *
		   *     expect([]).to.be.empty();
		   *
		   * @name empty
		   * @api public
		   */Assertion.addChainableNoop('empty',function(){var obj=flag(this,'object'),expected=obj;if(Array.isArray(obj) || 'string' === typeof object){expected = obj.length;}else if(typeof obj === 'object'){expected = Object.keys(obj).length;}this.assert(!expected,'expected #{this} to be empty','expected #{this} not to be empty');}); /**
		   * ### .arguments
		   *
		   * Asserts that the target is an arguments object.
		   *
		   *     function test () {
		   *       expect(arguments).to.be.arguments;
		   *     }
		   *
		   * Can also be used as a function, which prevents some linter errors.
		   *
		   *     function test () {
		   *       expect(arguments).to.be.arguments();
		   *     }
		   *
		   * @name arguments
		   * @alias Arguments
		   * @api public
		   */function checkArguments(){var obj=flag(this,'object'),type=Object.prototype.toString.call(obj);this.assert('[object Arguments]' === type,'expected #{this} to be arguments but got ' + type,'expected #{this} to not be arguments');}Assertion.addChainableNoop('arguments',checkArguments);Assertion.addChainableNoop('Arguments',checkArguments); /**
		   * ### .equal(value)
		   *
		   * Asserts that the target is strictly equal (`===`) to `value`.
		   * Alternately, if the `deep` flag is set, asserts that
		   * the target is deeply equal to `value`.
		   *
		   *     expect('hello').to.equal('hello');
		   *     expect(42).to.equal(42);
		   *     expect(1).to.not.equal(true);
		   *     expect({ foo: 'bar' }).to.not.equal({ foo: 'bar' });
		   *     expect({ foo: 'bar' }).to.deep.equal({ foo: 'bar' });
		   *
		   * @name equal
		   * @alias equals
		   * @alias eq
		   * @alias deep.equal
		   * @param {Mixed} value
		   * @param {String} message _optional_
		   * @api public
		   */function assertEqual(val,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');if(flag(this,'deep')){return this.eql(val);}else {this.assert(val === obj,'expected #{this} to equal #{exp}','expected #{this} to not equal #{exp}',val,this._obj,true);}}Assertion.addMethod('equal',assertEqual);Assertion.addMethod('equals',assertEqual);Assertion.addMethod('eq',assertEqual); /**
		   * ### .eql(value)
		   *
		   * Asserts that the target is deeply equal to `value`.
		   *
		   *     expect({ foo: 'bar' }).to.eql({ foo: 'bar' });
		   *     expect([ 1, 2, 3 ]).to.eql([ 1, 2, 3 ]);
		   *
		   * @name eql
		   * @alias eqls
		   * @param {Mixed} value
		   * @param {String} message _optional_
		   * @api public
		   */function assertEql(obj,msg){if(msg)flag(this,'message',msg);this.assert(_.eql(obj,flag(this,'object')),'expected #{this} to deeply equal #{exp}','expected #{this} to not deeply equal #{exp}',obj,this._obj,true);}Assertion.addMethod('eql',assertEql);Assertion.addMethod('eqls',assertEql); /**
		   * ### .above(value)
		   *
		   * Asserts that the target is greater than `value`.
		   *
		   *     expect(10).to.be.above(5);
		   *
		   * Can also be used in conjunction with `length` to
		   * assert a minimum length. The benefit being a
		   * more informative error message than if the length
		   * was supplied directly.
		   *
		   *     expect('foo').to.have.length.above(2);
		   *     expect([ 1, 2, 3 ]).to.have.length.above(2);
		   *
		   * @name above
		   * @alias gt
		   * @alias greaterThan
		   * @param {Number} value
		   * @param {String} message _optional_
		   * @api public
		   */function assertAbove(n,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');if(flag(this,'doLength')){new Assertion(obj,msg).to.have.property('length');var len=obj.length;this.assert(len > n,'expected #{this} to have a length above #{exp} but got #{act}','expected #{this} to not have a length above #{exp}',n,len);}else {this.assert(obj > n,'expected #{this} to be above ' + n,'expected #{this} to be at most ' + n);}}Assertion.addMethod('above',assertAbove);Assertion.addMethod('gt',assertAbove);Assertion.addMethod('greaterThan',assertAbove); /**
		   * ### .least(value)
		   *
		   * Asserts that the target is greater than or equal to `value`.
		   *
		   *     expect(10).to.be.at.least(10);
		   *
		   * Can also be used in conjunction with `length` to
		   * assert a minimum length. The benefit being a
		   * more informative error message than if the length
		   * was supplied directly.
		   *
		   *     expect('foo').to.have.length.of.at.least(2);
		   *     expect([ 1, 2, 3 ]).to.have.length.of.at.least(3);
		   *
		   * @name least
		   * @alias gte
		   * @param {Number} value
		   * @param {String} message _optional_
		   * @api public
		   */function assertLeast(n,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');if(flag(this,'doLength')){new Assertion(obj,msg).to.have.property('length');var len=obj.length;this.assert(len >= n,'expected #{this} to have a length at least #{exp} but got #{act}','expected #{this} to have a length below #{exp}',n,len);}else {this.assert(obj >= n,'expected #{this} to be at least ' + n,'expected #{this} to be below ' + n);}}Assertion.addMethod('least',assertLeast);Assertion.addMethod('gte',assertLeast); /**
		   * ### .below(value)
		   *
		   * Asserts that the target is less than `value`.
		   *
		   *     expect(5).to.be.below(10);
		   *
		   * Can also be used in conjunction with `length` to
		   * assert a maximum length. The benefit being a
		   * more informative error message than if the length
		   * was supplied directly.
		   *
		   *     expect('foo').to.have.length.below(4);
		   *     expect([ 1, 2, 3 ]).to.have.length.below(4);
		   *
		   * @name below
		   * @alias lt
		   * @alias lessThan
		   * @param {Number} value
		   * @param {String} message _optional_
		   * @api public
		   */function assertBelow(n,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');if(flag(this,'doLength')){new Assertion(obj,msg).to.have.property('length');var len=obj.length;this.assert(len < n,'expected #{this} to have a length below #{exp} but got #{act}','expected #{this} to not have a length below #{exp}',n,len);}else {this.assert(obj < n,'expected #{this} to be below ' + n,'expected #{this} to be at least ' + n);}}Assertion.addMethod('below',assertBelow);Assertion.addMethod('lt',assertBelow);Assertion.addMethod('lessThan',assertBelow); /**
		   * ### .most(value)
		   *
		   * Asserts that the target is less than or equal to `value`.
		   *
		   *     expect(5).to.be.at.most(5);
		   *
		   * Can also be used in conjunction with `length` to
		   * assert a maximum length. The benefit being a
		   * more informative error message than if the length
		   * was supplied directly.
		   *
		   *     expect('foo').to.have.length.of.at.most(4);
		   *     expect([ 1, 2, 3 ]).to.have.length.of.at.most(3);
		   *
		   * @name most
		   * @alias lte
		   * @param {Number} value
		   * @param {String} message _optional_
		   * @api public
		   */function assertMost(n,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');if(flag(this,'doLength')){new Assertion(obj,msg).to.have.property('length');var len=obj.length;this.assert(len <= n,'expected #{this} to have a length at most #{exp} but got #{act}','expected #{this} to have a length above #{exp}',n,len);}else {this.assert(obj <= n,'expected #{this} to be at most ' + n,'expected #{this} to be above ' + n);}}Assertion.addMethod('most',assertMost);Assertion.addMethod('lte',assertMost); /**
		   * ### .within(start, finish)
		   *
		   * Asserts that the target is within a range.
		   *
		   *     expect(7).to.be.within(5,10);
		   *
		   * Can also be used in conjunction with `length` to
		   * assert a length range. The benefit being a
		   * more informative error message than if the length
		   * was supplied directly.
		   *
		   *     expect('foo').to.have.length.within(2,4);
		   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);
		   *
		   * @name within
		   * @param {Number} start lowerbound inclusive
		   * @param {Number} finish upperbound inclusive
		   * @param {String} message _optional_
		   * @api public
		   */Assertion.addMethod('within',function(start,finish,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object'),range=start + '..' + finish;if(flag(this,'doLength')){new Assertion(obj,msg).to.have.property('length');var len=obj.length;this.assert(len >= start && len <= finish,'expected #{this} to have a length within ' + range,'expected #{this} to not have a length within ' + range);}else {this.assert(obj >= start && obj <= finish,'expected #{this} to be within ' + range,'expected #{this} to not be within ' + range);}}); /**
		   * ### .instanceof(constructor)
		   *
		   * Asserts that the target is an instance of `constructor`.
		   *
		   *     var Tea = function (name) { this.name = name; }
		   *       , Chai = new Tea('chai');
		   *
		   *     expect(Chai).to.be.an.instanceof(Tea);
		   *     expect([ 1, 2, 3 ]).to.be.instanceof(Array);
		   *
		   * @name instanceof
		   * @param {Constructor} constructor
		   * @param {String} message _optional_
		   * @alias instanceOf
		   * @api public
		   */function assertInstanceOf(constructor,msg){if(msg)flag(this,'message',msg);var name=_.getName(constructor);this.assert(flag(this,'object') instanceof constructor,'expected #{this} to be an instance of ' + name,'expected #{this} to not be an instance of ' + name);};Assertion.addMethod('instanceof',assertInstanceOf);Assertion.addMethod('instanceOf',assertInstanceOf); /**
		   * ### .property(name, [value])
		   *
		   * Asserts that the target has a property `name`, optionally asserting that
		   * the value of that property is strictly equal to  `value`.
		   * If the `deep` flag is set, you can use dot- and bracket-notation for deep
		   * references into objects and arrays.
		   *
		   *     // simple referencing
		   *     var obj = { foo: 'bar' };
		   *     expect(obj).to.have.property('foo');
		   *     expect(obj).to.have.property('foo', 'bar');
		   *
		   *     // deep referencing
		   *     var deepObj = {
		   *         green: { tea: 'matcha' }
		   *       , teas: [ 'chai', 'matcha', { tea: 'konacha' } ]
		   *     };

		   *     expect(deepObj).to.have.deep.property('green.tea', 'matcha');
		   *     expect(deepObj).to.have.deep.property('teas[1]', 'matcha');
		   *     expect(deepObj).to.have.deep.property('teas[2].tea', 'konacha');
		   *
		   * You can also use an array as the starting point of a `deep.property`
		   * assertion, or traverse nested arrays.
		   *
		   *     var arr = [
		   *         [ 'chai', 'matcha', 'konacha' ]
		   *       , [ { tea: 'chai' }
		   *         , { tea: 'matcha' }
		   *         , { tea: 'konacha' } ]
		   *     ];
		   *
		   *     expect(arr).to.have.deep.property('[0][1]', 'matcha');
		   *     expect(arr).to.have.deep.property('[1][2].tea', 'konacha');
		   *
		   * Furthermore, `property` changes the subject of the assertion
		   * to be the value of that property from the original object. This
		   * permits for further chainable assertions on that property.
		   *
		   *     expect(obj).to.have.property('foo')
		   *       .that.is.a('string');
		   *     expect(deepObj).to.have.property('green')
		   *       .that.is.an('object')
		   *       .that.deep.equals({ tea: 'matcha' });
		   *     expect(deepObj).to.have.property('teas')
		   *       .that.is.an('array')
		   *       .with.deep.property('[2]')
		   *         .that.deep.equals({ tea: 'konacha' });
		   *
		   * @name property
		   * @alias deep.property
		   * @param {String} name
		   * @param {Mixed} value (optional)
		   * @param {String} message _optional_
		   * @returns value of property for chaining
		   * @api public
		   */Assertion.addMethod('property',function(name,val,msg){if(msg)flag(this,'message',msg);var descriptor=flag(this,'deep')?'deep property ':'property ',negate=flag(this,'negate'),obj=flag(this,'object'),value=flag(this,'deep')?_.getPathValue(name,obj):obj[name];if(negate && undefined !== val){if(undefined === value){msg = msg != null?msg + ': ':'';throw new Error(msg + _.inspect(obj) + ' has no ' + descriptor + _.inspect(name));}}else {this.assert(undefined !== value,'expected #{this} to have a ' + descriptor + _.inspect(name),'expected #{this} to not have ' + descriptor + _.inspect(name));}if(undefined !== val){this.assert(val === value,'expected #{this} to have a ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}','expected #{this} to not have a ' + descriptor + _.inspect(name) + ' of #{act}',val,value);}flag(this,'object',value);}); /**
		   * ### .ownProperty(name)
		   *
		   * Asserts that the target has an own property `name`.
		   *
		   *     expect('test').to.have.ownProperty('length');
		   *
		   * @name ownProperty
		   * @alias haveOwnProperty
		   * @param {String} name
		   * @param {String} message _optional_
		   * @api public
		   */function assertOwnProperty(name,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');this.assert(obj.hasOwnProperty(name),'expected #{this} to have own property ' + _.inspect(name),'expected #{this} to not have own property ' + _.inspect(name));}Assertion.addMethod('ownProperty',assertOwnProperty);Assertion.addMethod('haveOwnProperty',assertOwnProperty); /**
		   * ### .length(value)
		   *
		   * Asserts that the target's `length` property has
		   * the expected value.
		   *
		   *     expect([ 1, 2, 3]).to.have.length(3);
		   *     expect('foobar').to.have.length(6);
		   *
		   * Can also be used as a chain precursor to a value
		   * comparison for the length property.
		   *
		   *     expect('foo').to.have.length.above(2);
		   *     expect([ 1, 2, 3 ]).to.have.length.above(2);
		   *     expect('foo').to.have.length.below(4);
		   *     expect([ 1, 2, 3 ]).to.have.length.below(4);
		   *     expect('foo').to.have.length.within(2,4);
		   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);
		   *
		   * @name length
		   * @alias lengthOf
		   * @param {Number} length
		   * @param {String} message _optional_
		   * @api public
		   */function assertLengthChain(){flag(this,'doLength',true);}function assertLength(n,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');new Assertion(obj,msg).to.have.property('length');var len=obj.length;this.assert(len == n,'expected #{this} to have a length of #{exp} but got #{act}','expected #{this} to not have a length of #{act}',n,len);}Assertion.addChainableMethod('length',assertLength,assertLengthChain);Assertion.addMethod('lengthOf',assertLength); /**
		   * ### .match(regexp)
		   *
		   * Asserts that the target matches a regular expression.
		   *
		   *     expect('foobar').to.match(/^foo/);
		   *
		   * @name match
		   * @param {RegExp} RegularExpression
		   * @param {String} message _optional_
		   * @api public
		   */Assertion.addMethod('match',function(re,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');this.assert(re.exec(obj),'expected #{this} to match ' + re,'expected #{this} not to match ' + re);}); /**
		   * ### .string(string)
		   *
		   * Asserts that the string target contains another string.
		   *
		   *     expect('foobar').to.have.string('bar');
		   *
		   * @name string
		   * @param {String} string
		   * @param {String} message _optional_
		   * @api public
		   */Assertion.addMethod('string',function(str,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');new Assertion(obj,msg).is.a('string');this.assert(~obj.indexOf(str),'expected #{this} to contain ' + _.inspect(str),'expected #{this} to not contain ' + _.inspect(str));}); /**
		   * ### .keys(key1, [key2], [...])
		   *
		   * Asserts that the target has exactly the given keys, or
		   * asserts the inclusion of some keys when using the
		   * `include` or `contain` modifiers.
		   *
		   *     expect({ foo: 1, bar: 2 }).to.have.keys(['foo', 'bar']);
		   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.keys('foo', 'bar');
		   *
		   * @name keys
		   * @alias key
		   * @param {String...|Array} keys
		   * @api public
		   */function assertKeys(keys){var obj=flag(this,'object'),str,ok=true;keys = keys instanceof Array?keys:Array.prototype.slice.call(arguments);if(!keys.length)throw new Error('keys required');var actual=Object.keys(obj),expected=keys,len=keys.length; // Inclusion
	ok = keys.every(function(key){return ~actual.indexOf(key);}); // Strict
	if(!flag(this,'negate') && !flag(this,'contains')){ok = ok && keys.length == actual.length;} // Key string
	if(len > 1){keys = keys.map(function(key){return _.inspect(key);});var last=keys.pop();str = keys.join(', ') + ', and ' + last;}else {str = _.inspect(keys[0]);} // Form
	str = (len > 1?'keys ':'key ') + str; // Have / include
	str = (flag(this,'contains')?'contain ':'have ') + str; // Assertion
	this.assert(ok,'expected #{this} to ' + str,'expected #{this} to not ' + str,expected.sort(),actual.sort(),true);}Assertion.addMethod('keys',assertKeys);Assertion.addMethod('key',assertKeys); /**
		   * ### .throw(constructor)
		   *
		   * Asserts that the function target will throw a specific error, or specific type of error
		   * (as determined using `instanceof`), optionally with a RegExp or string inclusion test
		   * for the error's message.
		   *
		   *     var err = new ReferenceError('This is a bad function.');
		   *     var fn = function () { throw err; }
		   *     expect(fn).to.throw(ReferenceError);
		   *     expect(fn).to.throw(Error);
		   *     expect(fn).to.throw(/bad function/);
		   *     expect(fn).to.not.throw('good function');
		   *     expect(fn).to.throw(ReferenceError, /bad function/);
		   *     expect(fn).to.throw(err);
		   *     expect(fn).to.not.throw(new RangeError('Out of range.'));
		   *
		   * Please note that when a throw expectation is negated, it will check each
		   * parameter independently, starting with error constructor type. The appropriate way
		   * to check for the existence of a type of error but for a message that does not match
		   * is to use `and`.
		   *
		   *     expect(fn).to.throw(ReferenceError)
		   *        .and.not.throw(/good function/);
		   *
		   * @name throw
		   * @alias throws
		   * @alias Throw
		   * @param {ErrorConstructor} constructor
		   * @param {String|RegExp} expected error message
		   * @param {String} message _optional_
		   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
		   * @returns error for chaining (null if no error)
		   * @api public
		   */function assertThrows(constructor,errMsg,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');new Assertion(obj,msg).is.a('function');var thrown=false,desiredError=null,name=null,thrownError=null;if(arguments.length === 0){errMsg = null;constructor = null;}else if(constructor && (constructor instanceof RegExp || 'string' === typeof constructor)){errMsg = constructor;constructor = null;}else if(constructor && constructor instanceof Error){desiredError = constructor;constructor = null;errMsg = null;}else if(typeof constructor === 'function'){name = constructor.prototype.name || constructor.name;if(name === 'Error' && constructor !== Error){name = new constructor().name;}}else {constructor = null;}try{obj();}catch(err) { // first, check desired error
	if(desiredError){this.assert(err === desiredError,'expected #{this} to throw #{exp} but #{act} was thrown','expected #{this} to not throw #{exp}',desiredError instanceof Error?desiredError.toString():desiredError,err instanceof Error?err.toString():err);flag(this,'object',err);return this;} // next, check constructor
	if(constructor){this.assert(err instanceof constructor,'expected #{this} to throw #{exp} but #{act} was thrown','expected #{this} to not throw #{exp} but #{act} was thrown',name,err instanceof Error?err.toString():err);if(!errMsg){flag(this,'object',err);return this;}} // next, check message
	var message='object' === _.type(err) && "message" in err?err.message:'' + err;if(message != null && errMsg && errMsg instanceof RegExp){this.assert(errMsg.exec(message),'expected #{this} to throw error matching #{exp} but got #{act}','expected #{this} to throw error not matching #{exp}',errMsg,message);flag(this,'object',err);return this;}else if(message != null && errMsg && 'string' === typeof errMsg){this.assert(~message.indexOf(errMsg),'expected #{this} to throw error including #{exp} but got #{act}','expected #{this} to throw error not including #{act}',errMsg,message);flag(this,'object',err);return this;}else {thrown = true;thrownError = err;}}var actuallyGot='',expectedThrown=name !== null?name:desiredError?'#{exp}' //_.inspect(desiredError)
	:'an error';if(thrown){actuallyGot = ' but #{act} was thrown';}this.assert(thrown === true,'expected #{this} to throw ' + expectedThrown + actuallyGot,'expected #{this} to not throw ' + expectedThrown + actuallyGot,desiredError instanceof Error?desiredError.toString():desiredError,thrownError instanceof Error?thrownError.toString():thrownError);flag(this,'object',thrownError);};Assertion.addMethod('throw',assertThrows);Assertion.addMethod('throws',assertThrows);Assertion.addMethod('Throw',assertThrows); /**
		   * ### .respondTo(method)
		   *
		   * Asserts that the object or class target will respond to a method.
		   *
		   *     Klass.prototype.bar = function(){};
		   *     expect(Klass).to.respondTo('bar');
		   *     expect(obj).to.respondTo('bar');
		   *
		   * To check if a constructor will respond to a static function,
		   * set the `itself` flag.
		   *
		   *     Klass.baz = function(){};
		   *     expect(Klass).itself.to.respondTo('baz');
		   *
		   * @name respondTo
		   * @param {String} method
		   * @param {String} message _optional_
		   * @api public
		   */Assertion.addMethod('respondTo',function(method,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object'),itself=flag(this,'itself'),context='function' === _.type(obj) && !itself?obj.prototype[method]:obj[method];this.assert('function' === typeof context,'expected #{this} to respond to ' + _.inspect(method),'expected #{this} to not respond to ' + _.inspect(method));}); /**
		   * ### .itself
		   *
		   * Sets the `itself` flag, later used by the `respondTo` assertion.
		   *
		   *     function Foo() {}
		   *     Foo.bar = function() {}
		   *     Foo.prototype.baz = function() {}
		   *
		   *     expect(Foo).itself.to.respondTo('bar');
		   *     expect(Foo).itself.not.to.respondTo('baz');
		   *
		   * @name itself
		   * @api public
		   */Assertion.addProperty('itself',function(){flag(this,'itself',true);}); /**
		   * ### .satisfy(method)
		   *
		   * Asserts that the target passes a given truth test.
		   *
		   *     expect(1).to.satisfy(function(num) { return num > 0; });
		   *
		   * @name satisfy
		   * @param {Function} matcher
		   * @param {String} message _optional_
		   * @api public
		   */Assertion.addMethod('satisfy',function(matcher,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');var result=matcher(obj);this.assert(result,'expected #{this} to satisfy ' + _.objDisplay(matcher),'expected #{this} to not satisfy' + _.objDisplay(matcher),this.negate?false:true,result);}); /**
		   * ### .closeTo(expected, delta)
		   *
		   * Asserts that the target is equal `expected`, to within a +/- `delta` range.
		   *
		   *     expect(1.5).to.be.closeTo(1, 0.5);
		   *
		   * @name closeTo
		   * @param {Number} expected
		   * @param {Number} delta
		   * @param {String} message _optional_
		   * @api public
		   */Assertion.addMethod('closeTo',function(expected,delta,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');new Assertion(obj,msg).is.a('number');if(_.type(expected) !== 'number' || _.type(delta) !== 'number'){throw new Error('the arguments to closeTo must be numbers');}this.assert(Math.abs(obj - expected) <= delta,'expected #{this} to be close to ' + expected + ' +/- ' + delta,'expected #{this} not to be close to ' + expected + ' +/- ' + delta);});function isSubsetOf(subset,superset,cmp){return subset.every(function(elem){if(!cmp)return superset.indexOf(elem) !== -1;return superset.some(function(elem2){return cmp(elem,elem2);});});} /**
		   * ### .members(set)
		   *
		   * Asserts that the target is a superset of `set`,
		   * or that the target and `set` have the same strictly-equal (===) members.
		   * Alternately, if the `deep` flag is set, set members are compared for deep
		   * equality.
		   *
		   *     expect([1, 2, 3]).to.include.members([3, 2]);
		   *     expect([1, 2, 3]).to.not.include.members([3, 2, 8]);
		   *
		   *     expect([4, 2]).to.have.members([2, 4]);
		   *     expect([5, 2]).to.not.have.members([5, 2, 1]);
		   *
		   *     expect([{ id: 1 }]).to.deep.include.members([{ id: 1 }]);
		   *
		   * @name members
		   * @param {Array} set
		   * @param {String} message _optional_
		   * @api public
		   */Assertion.addMethod('members',function(subset,msg){if(msg)flag(this,'message',msg);var obj=flag(this,'object');new Assertion(obj).to.be.an('array');new Assertion(subset).to.be.an('array');var cmp=flag(this,'deep')?_.eql:undefined;if(flag(this,'contains')){return this.assert(isSubsetOf(subset,obj,cmp),'expected #{this} to be a superset of #{act}','expected #{this} to not be a superset of #{act}',obj,subset);}this.assert(isSubsetOf(obj,subset,cmp) && isSubsetOf(subset,obj,cmp),'expected #{this} to have the same members as #{act}','expected #{this} to not have the same members as #{act}',obj,subset);});}; /***/}, /* 31 */function(module,exports){ /*!
		 * chai
		 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */module.exports = function(chai,util){chai.expect = function(val,message){return new chai.Assertion(val,message);};}; /***/}, /* 32 */function(module,exports){ /*!
		 * chai
		 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */module.exports = function(chai,util){var Assertion=chai.Assertion;function loadShould(){ // explicitly define this method as function as to have it's name to include as `ssfi`
	function shouldGetter(){if(this instanceof String || this instanceof Number){return new Assertion(this.constructor(this),null,shouldGetter);}else if(this instanceof Boolean){return new Assertion(this == true,null,shouldGetter);}return new Assertion(this,null,shouldGetter);}function shouldSetter(value){ // See https://github.com/chaijs/chai/issues/86: this makes
	// `whatever.should = someValue` actually set `someValue`, which is
	// especially useful for `global.should = require('chai').should()`.
	//
	// Note that we have to use [[DefineProperty]] instead of [[Put]]
	// since otherwise we would trigger this very setter!
	Object.defineProperty(this,'should',{value:value,enumerable:true,configurable:true,writable:true});} // modify Object.prototype to have `should`
	Object.defineProperty(Object.prototype,'should',{set:shouldSetter,get:shouldGetter,configurable:true});var should={};should.equal = function(val1,val2,msg){new Assertion(val1,msg).to.equal(val2);};should.Throw = function(fn,errt,errs,msg){new Assertion(fn,msg).to.Throw(errt,errs);};should.exist = function(val,msg){new Assertion(val,msg).to.exist;}; // negation
	should.not = {};should.not.equal = function(val1,val2,msg){new Assertion(val1,msg).to.not.equal(val2);};should.not.Throw = function(fn,errt,errs,msg){new Assertion(fn,msg).to.not.Throw(errt,errs);};should.not.exist = function(val,msg){new Assertion(val,msg).to.not.exist;};should['throw'] = should['Throw'];should.not['throw'] = should.not['Throw'];return should;};chai.should = loadShould;chai.Should = loadShould;}; /***/}, /* 33 */function(module,exports){ /*!
		 * chai
		 * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>
		 * MIT Licensed
		 */module.exports = function(chai,util){ /*!
		   * Chai dependencies.
		   */var Assertion=chai.Assertion,flag=util.flag; /*!
		   * Module export.
		   */ /**
		   * ### assert(expression, message)
		   *
		   * Write your own test expressions.
		   *
		   *     assert('foo' !== 'bar', 'foo is not bar');
		   *     assert(Array.isArray([]), 'empty arrays are arrays');
		   *
		   * @param {Mixed} expression to test for truthiness
		   * @param {String} message to display on error
		   * @name assert
		   * @api public
		   */var assert=chai.assert = function(express,errmsg){var test=new Assertion(null,null,chai.assert);test.assert(express,errmsg,'[ negation message unavailable ]');}; /**
		   * ### .fail(actual, expected, [message], [operator])
		   *
		   * Throw a failure. Node.js `assert` module-compatible.
		   *
		   * @name fail
		   * @param {Mixed} actual
		   * @param {Mixed} expected
		   * @param {String} message
		   * @param {String} operator
		   * @api public
		   */assert.fail = function(actual,expected,message,operator){message = message || 'assert.fail()';throw new chai.AssertionError(message,{actual:actual,expected:expected,operator:operator},assert.fail);}; /**
		   * ### .ok(object, [message])
		   *
		   * Asserts that `object` is truthy.
		   *
		   *     assert.ok('everything', 'everything is ok');
		   *     assert.ok(false, 'this will fail');
		   *
		   * @name ok
		   * @param {Mixed} object to test
		   * @param {String} message
		   * @api public
		   */assert.ok = function(val,msg){new Assertion(val,msg).is.ok;}; /**
		   * ### .notOk(object, [message])
		   *
		   * Asserts that `object` is falsy.
		   *
		   *     assert.notOk('everything', 'this will fail');
		   *     assert.notOk(false, 'this will pass');
		   *
		   * @name notOk
		   * @param {Mixed} object to test
		   * @param {String} message
		   * @api public
		   */assert.notOk = function(val,msg){new Assertion(val,msg).is.not.ok;}; /**
		   * ### .equal(actual, expected, [message])
		   *
		   * Asserts non-strict equality (`==`) of `actual` and `expected`.
		   *
		   *     assert.equal(3, '3', '== coerces values to strings');
		   *
		   * @name equal
		   * @param {Mixed} actual
		   * @param {Mixed} expected
		   * @param {String} message
		   * @api public
		   */assert.equal = function(act,exp,msg){var test=new Assertion(act,msg,assert.equal);test.assert(exp == flag(test,'object'),'expected #{this} to equal #{exp}','expected #{this} to not equal #{act}',exp,act);}; /**
		   * ### .notEqual(actual, expected, [message])
		   *
		   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.
		   *
		   *     assert.notEqual(3, 4, 'these numbers are not equal');
		   *
		   * @name notEqual
		   * @param {Mixed} actual
		   * @param {Mixed} expected
		   * @param {String} message
		   * @api public
		   */assert.notEqual = function(act,exp,msg){var test=new Assertion(act,msg,assert.notEqual);test.assert(exp != flag(test,'object'),'expected #{this} to not equal #{exp}','expected #{this} to equal #{act}',exp,act);}; /**
		   * ### .strictEqual(actual, expected, [message])
		   *
		   * Asserts strict equality (`===`) of `actual` and `expected`.
		   *
		   *     assert.strictEqual(true, true, 'these booleans are strictly equal');
		   *
		   * @name strictEqual
		   * @param {Mixed} actual
		   * @param {Mixed} expected
		   * @param {String} message
		   * @api public
		   */assert.strictEqual = function(act,exp,msg){new Assertion(act,msg).to.equal(exp);}; /**
		   * ### .notStrictEqual(actual, expected, [message])
		   *
		   * Asserts strict inequality (`!==`) of `actual` and `expected`.
		   *
		   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');
		   *
		   * @name notStrictEqual
		   * @param {Mixed} actual
		   * @param {Mixed} expected
		   * @param {String} message
		   * @api public
		   */assert.notStrictEqual = function(act,exp,msg){new Assertion(act,msg).to.not.equal(exp);}; /**
		   * ### .deepEqual(actual, expected, [message])
		   *
		   * Asserts that `actual` is deeply equal to `expected`.
		   *
		   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });
		   *
		   * @name deepEqual
		   * @param {Mixed} actual
		   * @param {Mixed} expected
		   * @param {String} message
		   * @api public
		   */assert.deepEqual = function(act,exp,msg){new Assertion(act,msg).to.eql(exp);}; /**
		   * ### .notDeepEqual(actual, expected, [message])
		   *
		   * Assert that `actual` is not deeply equal to `expected`.
		   *
		   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });
		   *
		   * @name notDeepEqual
		   * @param {Mixed} actual
		   * @param {Mixed} expected
		   * @param {String} message
		   * @api public
		   */assert.notDeepEqual = function(act,exp,msg){new Assertion(act,msg).to.not.eql(exp);}; /**
		   * ### .isTrue(value, [message])
		   *
		   * Asserts that `value` is true.
		   *
		   *     var teaServed = true;
		   *     assert.isTrue(teaServed, 'the tea has been served');
		   *
		   * @name isTrue
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isTrue = function(val,msg){new Assertion(val,msg).is['true'];}; /**
		   * ### .isFalse(value, [message])
		   *
		   * Asserts that `value` is false.
		   *
		   *     var teaServed = false;
		   *     assert.isFalse(teaServed, 'no tea yet? hmm...');
		   *
		   * @name isFalse
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isFalse = function(val,msg){new Assertion(val,msg).is['false'];}; /**
		   * ### .isNull(value, [message])
		   *
		   * Asserts that `value` is null.
		   *
		   *     assert.isNull(err, 'there was no error');
		   *
		   * @name isNull
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isNull = function(val,msg){new Assertion(val,msg).to.equal(null);}; /**
		   * ### .isNotNull(value, [message])
		   *
		   * Asserts that `value` is not null.
		   *
		   *     var tea = 'tasty chai';
		   *     assert.isNotNull(tea, 'great, time for tea!');
		   *
		   * @name isNotNull
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isNotNull = function(val,msg){new Assertion(val,msg).to.not.equal(null);}; /**
		   * ### .isUndefined(value, [message])
		   *
		   * Asserts that `value` is `undefined`.
		   *
		   *     var tea;
		   *     assert.isUndefined(tea, 'no tea defined');
		   *
		   * @name isUndefined
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isUndefined = function(val,msg){new Assertion(val,msg).to.equal(undefined);}; /**
		   * ### .isDefined(value, [message])
		   *
		   * Asserts that `value` is not `undefined`.
		   *
		   *     var tea = 'cup of chai';
		   *     assert.isDefined(tea, 'tea has been defined');
		   *
		   * @name isDefined
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isDefined = function(val,msg){new Assertion(val,msg).to.not.equal(undefined);}; /**
		   * ### .isFunction(value, [message])
		   *
		   * Asserts that `value` is a function.
		   *
		   *     function serveTea() { return 'cup of tea'; };
		   *     assert.isFunction(serveTea, 'great, we can have tea now');
		   *
		   * @name isFunction
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isFunction = function(val,msg){new Assertion(val,msg).to.be.a('function');}; /**
		   * ### .isNotFunction(value, [message])
		   *
		   * Asserts that `value` is _not_ a function.
		   *
		   *     var serveTea = [ 'heat', 'pour', 'sip' ];
		   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');
		   *
		   * @name isNotFunction
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isNotFunction = function(val,msg){new Assertion(val,msg).to.not.be.a('function');}; /**
		   * ### .isObject(value, [message])
		   *
		   * Asserts that `value` is an object (as revealed by
		   * `Object.prototype.toString`).
		   *
		   *     var selection = { name: 'Chai', serve: 'with spices' };
		   *     assert.isObject(selection, 'tea selection is an object');
		   *
		   * @name isObject
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isObject = function(val,msg){new Assertion(val,msg).to.be.a('object');}; /**
		   * ### .isNotObject(value, [message])
		   *
		   * Asserts that `value` is _not_ an object.
		   *
		   *     var selection = 'chai'
		   *     assert.isNotObject(selection, 'tea selection is not an object');
		   *     assert.isNotObject(null, 'null is not an object');
		   *
		   * @name isNotObject
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isNotObject = function(val,msg){new Assertion(val,msg).to.not.be.a('object');}; /**
		   * ### .isArray(value, [message])
		   *
		   * Asserts that `value` is an array.
		   *
		   *     var menu = [ 'green', 'chai', 'oolong' ];
		   *     assert.isArray(menu, 'what kind of tea do we want?');
		   *
		   * @name isArray
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isArray = function(val,msg){new Assertion(val,msg).to.be.an('array');}; /**
		   * ### .isNotArray(value, [message])
		   *
		   * Asserts that `value` is _not_ an array.
		   *
		   *     var menu = 'green|chai|oolong';
		   *     assert.isNotArray(menu, 'what kind of tea do we want?');
		   *
		   * @name isNotArray
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isNotArray = function(val,msg){new Assertion(val,msg).to.not.be.an('array');}; /**
		   * ### .isString(value, [message])
		   *
		   * Asserts that `value` is a string.
		   *
		   *     var teaOrder = 'chai';
		   *     assert.isString(teaOrder, 'order placed');
		   *
		   * @name isString
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isString = function(val,msg){new Assertion(val,msg).to.be.a('string');}; /**
		   * ### .isNotString(value, [message])
		   *
		   * Asserts that `value` is _not_ a string.
		   *
		   *     var teaOrder = 4;
		   *     assert.isNotString(teaOrder, 'order placed');
		   *
		   * @name isNotString
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isNotString = function(val,msg){new Assertion(val,msg).to.not.be.a('string');}; /**
		   * ### .isNumber(value, [message])
		   *
		   * Asserts that `value` is a number.
		   *
		   *     var cups = 2;
		   *     assert.isNumber(cups, 'how many cups');
		   *
		   * @name isNumber
		   * @param {Number} value
		   * @param {String} message
		   * @api public
		   */assert.isNumber = function(val,msg){new Assertion(val,msg).to.be.a('number');}; /**
		   * ### .isNotNumber(value, [message])
		   *
		   * Asserts that `value` is _not_ a number.
		   *
		   *     var cups = '2 cups please';
		   *     assert.isNotNumber(cups, 'how many cups');
		   *
		   * @name isNotNumber
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isNotNumber = function(val,msg){new Assertion(val,msg).to.not.be.a('number');}; /**
		   * ### .isBoolean(value, [message])
		   *
		   * Asserts that `value` is a boolean.
		   *
		   *     var teaReady = true
		   *       , teaServed = false;
		   *
		   *     assert.isBoolean(teaReady, 'is the tea ready');
		   *     assert.isBoolean(teaServed, 'has tea been served');
		   *
		   * @name isBoolean
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isBoolean = function(val,msg){new Assertion(val,msg).to.be.a('boolean');}; /**
		   * ### .isNotBoolean(value, [message])
		   *
		   * Asserts that `value` is _not_ a boolean.
		   *
		   *     var teaReady = 'yep'
		   *       , teaServed = 'nope';
		   *
		   *     assert.isNotBoolean(teaReady, 'is the tea ready');
		   *     assert.isNotBoolean(teaServed, 'has tea been served');
		   *
		   * @name isNotBoolean
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.isNotBoolean = function(val,msg){new Assertion(val,msg).to.not.be.a('boolean');}; /**
		   * ### .typeOf(value, name, [message])
		   *
		   * Asserts that `value`'s type is `name`, as determined by
		   * `Object.prototype.toString`.
		   *
		   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');
		   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');
		   *     assert.typeOf('tea', 'string', 'we have a string');
		   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');
		   *     assert.typeOf(null, 'null', 'we have a null');
		   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');
		   *
		   * @name typeOf
		   * @param {Mixed} value
		   * @param {String} name
		   * @param {String} message
		   * @api public
		   */assert.typeOf = function(val,type,msg){new Assertion(val,msg).to.be.a(type);}; /**
		   * ### .notTypeOf(value, name, [message])
		   *
		   * Asserts that `value`'s type is _not_ `name`, as determined by
		   * `Object.prototype.toString`.
		   *
		   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');
		   *
		   * @name notTypeOf
		   * @param {Mixed} value
		   * @param {String} typeof name
		   * @param {String} message
		   * @api public
		   */assert.notTypeOf = function(val,type,msg){new Assertion(val,msg).to.not.be.a(type);}; /**
		   * ### .instanceOf(object, constructor, [message])
		   *
		   * Asserts that `value` is an instance of `constructor`.
		   *
		   *     var Tea = function (name) { this.name = name; }
		   *       , chai = new Tea('chai');
		   *
		   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');
		   *
		   * @name instanceOf
		   * @param {Object} object
		   * @param {Constructor} constructor
		   * @param {String} message
		   * @api public
		   */assert.instanceOf = function(val,type,msg){new Assertion(val,msg).to.be.instanceOf(type);}; /**
		   * ### .notInstanceOf(object, constructor, [message])
		   *
		   * Asserts `value` is not an instance of `constructor`.
		   *
		   *     var Tea = function (name) { this.name = name; }
		   *       , chai = new String('chai');
		   *
		   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');
		   *
		   * @name notInstanceOf
		   * @param {Object} object
		   * @param {Constructor} constructor
		   * @param {String} message
		   * @api public
		   */assert.notInstanceOf = function(val,type,msg){new Assertion(val,msg).to.not.be.instanceOf(type);}; /**
		   * ### .include(haystack, needle, [message])
		   *
		   * Asserts that `haystack` includes `needle`. Works
		   * for strings and arrays.
		   *
		   *     assert.include('foobar', 'bar', 'foobar contains string "bar"');
		   *     assert.include([ 1, 2, 3 ], 3, 'array contains value');
		   *
		   * @name include
		   * @param {Array|String} haystack
		   * @param {Mixed} needle
		   * @param {String} message
		   * @api public
		   */assert.include = function(exp,inc,msg){new Assertion(exp,msg,assert.include).include(inc);}; /**
		   * ### .notInclude(haystack, needle, [message])
		   *
		   * Asserts that `haystack` does not include `needle`. Works
		   * for strings and arrays.
		   *i
		   *     assert.notInclude('foobar', 'baz', 'string not include substring');
		   *     assert.notInclude([ 1, 2, 3 ], 4, 'array not include contain value');
		   *
		   * @name notInclude
		   * @param {Array|String} haystack
		   * @param {Mixed} needle
		   * @param {String} message
		   * @api public
		   */assert.notInclude = function(exp,inc,msg){new Assertion(exp,msg,assert.notInclude).not.include(inc);}; /**
		   * ### .match(value, regexp, [message])
		   *
		   * Asserts that `value` matches the regular expression `regexp`.
		   *
		   *     assert.match('foobar', /^foo/, 'regexp matches');
		   *
		   * @name match
		   * @param {Mixed} value
		   * @param {RegExp} regexp
		   * @param {String} message
		   * @api public
		   */assert.match = function(exp,re,msg){new Assertion(exp,msg).to.match(re);}; /**
		   * ### .notMatch(value, regexp, [message])
		   *
		   * Asserts that `value` does not match the regular expression `regexp`.
		   *
		   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');
		   *
		   * @name notMatch
		   * @param {Mixed} value
		   * @param {RegExp} regexp
		   * @param {String} message
		   * @api public
		   */assert.notMatch = function(exp,re,msg){new Assertion(exp,msg).to.not.match(re);}; /**
		   * ### .property(object, property, [message])
		   *
		   * Asserts that `object` has a property named by `property`.
		   *
		   *     assert.property({ tea: { green: 'matcha' }}, 'tea');
		   *
		   * @name property
		   * @param {Object} object
		   * @param {String} property
		   * @param {String} message
		   * @api public
		   */assert.property = function(obj,prop,msg){new Assertion(obj,msg).to.have.property(prop);}; /**
		   * ### .notProperty(object, property, [message])
		   *
		   * Asserts that `object` does _not_ have a property named by `property`.
		   *
		   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');
		   *
		   * @name notProperty
		   * @param {Object} object
		   * @param {String} property
		   * @param {String} message
		   * @api public
		   */assert.notProperty = function(obj,prop,msg){new Assertion(obj,msg).to.not.have.property(prop);}; /**
		   * ### .deepProperty(object, property, [message])
		   *
		   * Asserts that `object` has a property named by `property`, which can be a
		   * string using dot- and bracket-notation for deep reference.
		   *
		   *     assert.deepProperty({ tea: { green: 'matcha' }}, 'tea.green');
		   *
		   * @name deepProperty
		   * @param {Object} object
		   * @param {String} property
		   * @param {String} message
		   * @api public
		   */assert.deepProperty = function(obj,prop,msg){new Assertion(obj,msg).to.have.deep.property(prop);}; /**
		   * ### .notDeepProperty(object, property, [message])
		   *
		   * Asserts that `object` does _not_ have a property named by `property`, which
		   * can be a string using dot- and bracket-notation for deep reference.
		   *
		   *     assert.notDeepProperty({ tea: { green: 'matcha' }}, 'tea.oolong');
		   *
		   * @name notDeepProperty
		   * @param {Object} object
		   * @param {String} property
		   * @param {String} message
		   * @api public
		   */assert.notDeepProperty = function(obj,prop,msg){new Assertion(obj,msg).to.not.have.deep.property(prop);}; /**
		   * ### .propertyVal(object, property, value, [message])
		   *
		   * Asserts that `object` has a property named by `property` with value given
		   * by `value`.
		   *
		   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');
		   *
		   * @name propertyVal
		   * @param {Object} object
		   * @param {String} property
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.propertyVal = function(obj,prop,val,msg){new Assertion(obj,msg).to.have.property(prop,val);}; /**
		   * ### .propertyNotVal(object, property, value, [message])
		   *
		   * Asserts that `object` has a property named by `property`, but with a value
		   * different from that given by `value`.
		   *
		   *     assert.propertyNotVal({ tea: 'is good' }, 'tea', 'is bad');
		   *
		   * @name propertyNotVal
		   * @param {Object} object
		   * @param {String} property
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.propertyNotVal = function(obj,prop,val,msg){new Assertion(obj,msg).to.not.have.property(prop,val);}; /**
		   * ### .deepPropertyVal(object, property, value, [message])
		   *
		   * Asserts that `object` has a property named by `property` with value given
		   * by `value`. `property` can use dot- and bracket-notation for deep
		   * reference.
		   *
		   *     assert.deepPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');
		   *
		   * @name deepPropertyVal
		   * @param {Object} object
		   * @param {String} property
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.deepPropertyVal = function(obj,prop,val,msg){new Assertion(obj,msg).to.have.deep.property(prop,val);}; /**
		   * ### .deepPropertyNotVal(object, property, value, [message])
		   *
		   * Asserts that `object` has a property named by `property`, but with a value
		   * different from that given by `value`. `property` can use dot- and
		   * bracket-notation for deep reference.
		   *
		   *     assert.deepPropertyNotVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');
		   *
		   * @name deepPropertyNotVal
		   * @param {Object} object
		   * @param {String} property
		   * @param {Mixed} value
		   * @param {String} message
		   * @api public
		   */assert.deepPropertyNotVal = function(obj,prop,val,msg){new Assertion(obj,msg).to.not.have.deep.property(prop,val);}; /**
		   * ### .lengthOf(object, length, [message])
		   *
		   * Asserts that `object` has a `length` property with the expected value.
		   *
		   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');
		   *     assert.lengthOf('foobar', 5, 'string has length of 6');
		   *
		   * @name lengthOf
		   * @param {Mixed} object
		   * @param {Number} length
		   * @param {String} message
		   * @api public
		   */assert.lengthOf = function(exp,len,msg){new Assertion(exp,msg).to.have.length(len);}; /**
		   * ### .throws(function, [constructor/string/regexp], [string/regexp], [message])
		   *
		   * Asserts that `function` will throw an error that is an instance of
		   * `constructor`, or alternately that it will throw an error with message
		   * matching `regexp`.
		   *
		   *     assert.throw(fn, 'function throws a reference error');
		   *     assert.throw(fn, /function throws a reference error/);
		   *     assert.throw(fn, ReferenceError);
		   *     assert.throw(fn, ReferenceError, 'function throws a reference error');
		   *     assert.throw(fn, ReferenceError, /function throws a reference error/);
		   *
		   * @name throws
		   * @alias throw
		   * @alias Throw
		   * @param {Function} function
		   * @param {ErrorConstructor} constructor
		   * @param {RegExp} regexp
		   * @param {String} message
		   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
		   * @api public
		   */assert.Throw = function(fn,errt,errs,msg){if('string' === typeof errt || errt instanceof RegExp){errs = errt;errt = null;}var assertErr=new Assertion(fn,msg).to.Throw(errt,errs);return flag(assertErr,'object');}; /**
		   * ### .doesNotThrow(function, [constructor/regexp], [message])
		   *
		   * Asserts that `function` will _not_ throw an error that is an instance of
		   * `constructor`, or alternately that it will not throw an error with message
		   * matching `regexp`.
		   *
		   *     assert.doesNotThrow(fn, Error, 'function does not throw');
		   *
		   * @name doesNotThrow
		   * @param {Function} function
		   * @param {ErrorConstructor} constructor
		   * @param {RegExp} regexp
		   * @param {String} message
		   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types
		   * @api public
		   */assert.doesNotThrow = function(fn,type,msg){if('string' === typeof type){msg = type;type = null;}new Assertion(fn,msg).to.not.Throw(type);}; /**
		   * ### .operator(val1, operator, val2, [message])
		   *
		   * Compares two values using `operator`.
		   *
		   *     assert.operator(1, '<', 2, 'everything is ok');
		   *     assert.operator(1, '>', 2, 'this will fail');
		   *
		   * @name operator
		   * @param {Mixed} val1
		   * @param {String} operator
		   * @param {Mixed} val2
		   * @param {String} message
		   * @api public
		   */assert.operator = function(val,operator,val2,msg){if(! ~['==','===','>','>=','<','<=','!=','!=='].indexOf(operator)){throw new Error('Invalid operator "' + operator + '"');}var test=new Assertion(eval(val + operator + val2),msg);test.assert(true === flag(test,'object'),'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2),'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2));}; /**
		   * ### .closeTo(actual, expected, delta, [message])
		   *
		   * Asserts that the target is equal `expected`, to within a +/- `delta` range.
		   *
		   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');
		   *
		   * @name closeTo
		   * @param {Number} actual
		   * @param {Number} expected
		   * @param {Number} delta
		   * @param {String} message
		   * @api public
		   */assert.closeTo = function(act,exp,delta,msg){new Assertion(act,msg).to.be.closeTo(exp,delta);}; /**
		   * ### .sameMembers(set1, set2, [message])
		   *
		   * Asserts that `set1` and `set2` have the same members.
		   * Order is not taken into account.
		   *
		   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');
		   *
		   * @name sameMembers
		   * @param {Array} set1
		   * @param {Array} set2
		   * @param {String} message
		   * @api public
		   */assert.sameMembers = function(set1,set2,msg){new Assertion(set1,msg).to.have.same.members(set2);}; /**
		   * ### .includeMembers(superset, subset, [message])
		   *
		   * Asserts that `subset` is included in `superset`.
		   * Order is not taken into account.
		   *
		   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1 ], 'include members');
		   *
		   * @name includeMembers
		   * @param {Array} superset
		   * @param {Array} subset
		   * @param {String} message
		   * @api public
		   */assert.includeMembers = function(superset,subset,msg){new Assertion(superset,msg).to.include.members(subset);}; /*!
		   * Undocumented / untested
		   */assert.ifError = function(val,msg){new Assertion(val,msg).to.not.be.ok;}; /*!
		   * Aliases.
		   */(function alias(name,as){assert[as] = assert[name];return alias;})('Throw','throw')('Throw','throws');}; /***/} /******/]); /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/ /***/

/***/ }
/******/ ]);